

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Sep 04 00:02:51 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=2
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=2
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1,group=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=2,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	text178,global,reloc=2,class=CODE,delta=1
   201                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=2
   202                           	psect	text180,global,reloc=2,class=CODE,delta=1
   203                           	psect	text181,global,reloc=2,class=CODE,delta=1
   204                           	psect	text182,global,reloc=2,class=CODE,delta=1,group=2
   205                           	psect	text183,global,reloc=2,class=CODE,delta=1
   206                           	psect	text184,global,reloc=2,class=CODE,delta=1
   207                           	psect	text185,global,reloc=2,class=CODE,delta=1
   208                           	psect	text186,global,reloc=2,class=CODE,delta=1
   209                           	psect	text187,global,reloc=2,class=CODE,delta=1
   210                           	psect	text188,global,reloc=2,class=CODE,delta=1
   211                           	psect	text189,global,reloc=2,class=CODE,delta=1
   212                           	psect	text190,global,reloc=2,class=CODE,delta=1
   213                           	psect	text191,global,reloc=2,class=CODE,delta=1
   214                           	psect	text192,global,reloc=2,class=CODE,delta=1
   215                           	psect	text193,global,reloc=2,class=CODE,delta=1
   216                           	psect	text194,global,reloc=2,class=CODE,delta=1
   217                           	psect	text195,global,reloc=2,class=CODE,delta=1
   218                           	psect	text196,global,reloc=2,class=CODE,delta=1
   219                           	psect	text197,global,reloc=2,class=CODE,delta=1
   220                           	psect	text198,global,reloc=2,class=CODE,delta=1
   221                           	psect	text199,global,reloc=2,class=CODE,delta=1
   222                           	psect	text200,global,reloc=2,class=CODE,delta=1
   223                           	psect	text201,global,reloc=2,class=CODE,delta=1
   224                           	psect	text202,global,reloc=2,class=CODE,delta=1
   225                           	psect	text203,global,reloc=2,class=CODE,delta=1
   226                           	psect	text204,global,reloc=2,class=CODE,delta=1
   227                           	psect	text205,global,reloc=2,class=CODE,delta=1
   228                           	psect	text206,global,reloc=2,class=CODE,delta=1
   229                           	psect	text207,global,reloc=2,class=CODE,delta=1
   230                           	psect	text208,global,reloc=2,class=CODE,delta=1
   231                           	psect	text209,global,reloc=2,class=CODE,delta=1
   232                           	psect	text210,global,reloc=2,class=CODE,delta=1
   233                           	psect	text211,global,reloc=2,class=CODE,delta=1
   234                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   235                           	psect	text212,global,reloc=2,class=CODE,delta=1
   236                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   237                           	dabs	1,0x600,512,_msd_buffer
   238                           	dabs	1,0xD00,48,_BDT
   239                           	dabs	1,0xD40,31,_msd_cbw
   240                           	dabs	1,0xD80,13,_msd_csw
   241                           	dabs	1,0xD38,8,_CtrlTrfData
   242                           	dabs	1,0xD30,8,_SetupPkt
   243  0000                     
   244                           ; Version 2.00
   245                           ; Generated 27/05/2018 GMT
   246                           ; 
   247                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   248                           ; All rights reserved.
   249                           ; 
   250                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   251                           ; 
   252                           ; Redistribution and use in source and binary forms, with or without modification, are
   253                           ; permitted provided that the following conditions are met:
   254                           ; 
   255                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   256                           ;        conditions and the following disclaimer.
   257                           ; 
   258                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   259                           ;        of conditions and the following disclaimer in the documentation and/or other
   260                           ;        materials provided with the distribution.
   261                           ; 
   262                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   263                           ;        software without specific prior written permission.
   264                           ; 
   265                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   266                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   267                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   268                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   269                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   270                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   271                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   272                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   273                           ; 
   274                           ; 
   275                           ; Code-generator required, PIC18F47J53 Definitions
   276                           ; 
   277                           ; SFR Addresses
   278  0000                     
   279                           	psect	intcode
   280  000008  EF04 F048          	goto	36872	;# 
   281                           
   282                           	psect	intcodelo
   283  000018  EF0C F048          	goto	36888	; ;# 
   284  0000                     
   285                           	psect	idataBANK0
   286  00821E                     __pidataBANK0:
   287                           	opt stack 0
   288                           
   289                           ;initializer for _file_number
   290  00821E  FF                 	db	255
   291                           
   292                           	psect	idataBANK1
   293  007E80                     __pidataBANK1:
   294                           	opt stack 0
   295                           
   296                           ;initializer for _LUN
   297  007E80  0C                 	db	low _ExternalFlash_MediaInitialize
   298  007E81  80                 	db	high _ExternalFlash_MediaInitialize
   299  007E82  AA                 	db	low _ExternalFlash_CapacityRead
   300  007E83  80                 	db	high _ExternalFlash_CapacityRead
   301  007E84  82                 	db	low _ExternalFlash_SectorSizeRead
   302  007E85  81                 	db	high _ExternalFlash_SectorSizeRead
   303  007E86  12                 	db	low _ExternalFlash_MediaDetect
   304  007E87  82                 	db	high _ExternalFlash_MediaDetect
   305  007E88  B2                 	db	low _ExternalFlash_SectorRead
   306  007E89  7B                 	db	high _ExternalFlash_SectorRead
   307  007E8A  0E                 	db	low _ExternalFlash_WriteProtectStateGet
   308  007E8B  82                 	db	high _ExternalFlash_WriteProtectStateGet
   309  007E8C  80                 	db	low _ExternalFlash_SectorWrite
   310  007E8D  7B                 	db	high _ExternalFlash_SectorWrite
   311  007E8E  00                 	db	0
   312  007E8F  00                 	db	0
   313  007E90  00                 	db	0
   314  007E91  00                 	db	0
   315  007E92  00                 	db	0
   316  007E93  00                 	db	0
   317                           
   318                           ;initializer for i2c_display_send_init_sequence@F6808
   319  007E94  3A                 	db	58
   320  007E95  1E                 	db	30
   321  007E96  39                 	db	57
   322  007E97  0C                 	db	12
   323  007E98  74                 	db	116
   324  007E99  5C                 	db	92
   325  007E9A  6D                 	db	109
   326  007E9B  0C                 	db	12
   327  007E9C  01                 	db	1
   328                           
   329                           ;initializer for _tx_buf
   330  007E9D  01                 	db	1
   331  007E9E  02                 	db	2
   332  007E9F  03                 	db	3
   333  007EA0  04                 	db	4
   334  007EA1  05                 	db	5
   335  007EA2  06                 	db	6
   336  007EA3  07                 	db	7
   337  007EA4  08                 	db	8
   338                           
   339                           	psect	mediumconst
   340  008C98                     __pmediumconst:
   341                           	opt stack 0
   342  008C98  00                 	db	0
   343  008C99                     _checked_line2:
   344                           	opt stack 0
   345  008C99  46                 	db	70
   346  008C9A  69                 	db	105
   347  008C9B  6C                 	db	108
   348  008C9C  65                 	db	101
   349  008C9D  20                 	db	32
   350  008C9E  63                 	db	99
   351  008C9F  68                 	db	104
   352  008CA0  65                 	db	101
   353  008CA1  63                 	db	99
   354  008CA2  6B                 	db	107
   355  008CA3  20                 	db	32
   356  008CA4  63                 	db	99
   357  008CA5  6F                 	db	111
   358  008CA6  6D                 	db	109
   359  008CA7  70                 	db	112
   360  008CA8  6C                 	db	108
   361  008CA9  65                 	db	101
   362  008CAA  74                 	db	116
   363  008CAB  65                 	db	101
   364  008CAC  64                 	db	100
   365  008CAD  00                 	db	0
   366  008CAE                     __end_of_checked_line2:
   367                           	opt stack 0
   368  008CAE                     _failed_line3_addressRange:
   369                           	opt stack 0
   370  008CAE  41                 	db	65
   371  008CAF  64                 	db	100
   372  008CB0  64                 	db	100
   373  008CB1  72                 	db	114
   374  008CB2  2E                 	db	46
   375  008CB3  20                 	db	32
   376  008CB4  6F                 	db	111
   377  008CB5  75                 	db	117
   378  008CB6  74                 	db	116
   379  008CB7  73                 	db	115
   380  008CB8  69                 	db	105
   381  008CB9  64                 	db	100
   382  008CBA  65                 	db	101
   383  008CBB  20                 	db	32
   384  008CBC  72                 	db	114
   385  008CBD  61                 	db	97
   386  008CBE  6E                 	db	110
   387  008CBF  67                 	db	103
   388  008CC0  65                 	db	101
   389  008CC1  00                 	db	0
   390  008CC2                     __end_of_failed_line3_addressRange:
   391                           	opt stack 0
   392  008CC2                     _search_line3:
   393                           	opt stack 0
   394  008CC2  46                 	db	70
   395  008CC3  49                 	db	73
   396  008CC4  52                 	db	82
   397  008CC5  4D                 	db	77
   398  008CC6  57                 	db	87
   399  008CC7  41                 	db	65
   400  008CC8  52                 	db	82
   401  008CC9  45                 	db	69
   402  008CCA  2E                 	db	46
   403  008CCB  48                 	db	72
   404  008CCC  45                 	db	69
   405  008CCD  58                 	db	88
   406  008CCE  20                 	db	32
   407  008CCF  6F                 	db	111
   408  008CD0  6E                 	db	110
   409  008CD1  20                 	db	32
   410  008CD2  55                 	db	85
   411  008CD3  53                 	db	83
   412  008CD4  42                 	db	66
   413  008CD5  00                 	db	0
   414  008CD6                     __end_of_search_line3:
   415                           	opt stack 0
   416  008CD6                     _failed_line3_startCode:
   417                           	opt stack 0
   418  008CD6  4D                 	db	77
   419  008CD7  69                 	db	105
   420  008CD8  73                 	db	115
   421  008CD9  73                 	db	115
   422  008CDA  69                 	db	105
   423  008CDB  6E                 	db	110
   424  008CDC  67                 	db	103
   425  008CDD  20                 	db	32
   426  008CDE  73                 	db	115
   427  008CDF  74                 	db	116
   428  008CE0  61                 	db	97
   429  008CE1  72                 	db	114
   430  008CE2  74                 	db	116
   431  008CE3  20                 	db	32
   432  008CE4  63                 	db	99
   433  008CE5  6F                 	db	111
   434  008CE6  64                 	db	100
   435  008CE7  65                 	db	101
   436  008CE8  00                 	db	0
   437  008CE9                     __end_of_failed_line3_startCode:
   438                           	opt stack 0
   439  008CE9                     _found_line2:
   440                           	opt stack 0
   441  008CE9  46                 	db	70
   442  008CEA  49                 	db	73
   443  008CEB  52                 	db	82
   444  008CEC  4D                 	db	77
   445  008CED  57                 	db	87
   446  008CEE  41                 	db	65
   447  008CEF  52                 	db	82
   448  008CF0  45                 	db	69
   449  008CF1  2E                 	db	46
   450  008CF2  48                 	db	72
   451  008CF3  45                 	db	69
   452  008CF4  58                 	db	88
   453  008CF5  20                 	db	32
   454  008CF6  66                 	db	102
   455  008CF7  6F                 	db	111
   456  008CF8  75                 	db	117
   457  008CF9  6E                 	db	110
   458  008CFA  64                 	db	100
   459  008CFB  00                 	db	0
   460  008CFC                     __end_of_found_line2:
   461                           	opt stack 0
   462  008CFC                     _programming_line2:
   463                           	opt stack 0
   464  008CFC  50                 	db	80
   465  008CFD  72                 	db	114
   466  008CFE  6F                 	db	111
   467  008CFF  67                 	db	103
   468  008D00  72                 	db	114
   469  008D01  61                 	db	97
   470  008D02  6D                 	db	109
   471  008D03  6D                 	db	109
   472  008D04  69                 	db	105
   473  008D05  6E                 	db	110
   474  008D06  67                 	db	103
   475  008D07  20                 	db	32
   476  008D08  66                 	db	102
   477  008D09  6C                 	db	108
   478  008D0A  61                 	db	97
   479  008D0B  73                 	db	115
   480  008D0C  68                 	db	104
   481  008D0D  00                 	db	0
   482  008D0E                     __end_of_programming_line2:
   483                           	opt stack 0
   484  008D0E                     _failed_line2:
   485                           	opt stack 0
   486  008D0E  46                 	db	70
   487  008D0F  69                 	db	105
   488  008D10  6C                 	db	108
   489  008D11  65                 	db	101
   490  008D12  20                 	db	32
   491  008D13  63                 	db	99
   492  008D14  68                 	db	104
   493  008D15  65                 	db	101
   494  008D16  63                 	db	99
   495  008D17  6B                 	db	107
   496  008D18  20                 	db	32
   497  008D19  66                 	db	102
   498  008D1A  61                 	db	97
   499  008D1B  69                 	db	105
   500  008D1C  6C                 	db	108
   501  008D1D  65                 	db	101
   502  008D1E  64                 	db	100
   503  008D1F  00                 	db	0
   504  008D20                     __end_of_failed_line2:
   505                           	opt stack 0
   506  008D20                     _found_line4:
   507                           	opt stack 0
   508  008D20  50                 	db	80
   509  008D21  72                 	db	114
   510  008D22  65                 	db	101
   511  008D23  73                 	db	115
   512  008D24  73                 	db	115
   513  008D25  20                 	db	32
   514  008D26  74                 	db	116
   515  008D27  6F                 	db	111
   516  008D28  20                 	db	32
   517  008D29  75                 	db	117
   518  008D2A  73                 	db	115
   519  008D2B  65                 	db	101
   520  008D2C  20                 	db	32
   521  008D2D  66                 	db	102
   522  008D2E  69                 	db	105
   523  008D2F  6C                 	db	108
   524  008D30  65                 	db	101
   525  008D31  00                 	db	0
   526  008D32                     __end_of_found_line4:
   527                           	opt stack 0
   528  008D32                     _checked_line4:
   529                           	opt stack 0
   530  008D32  50                 	db	80
   531  008D33  72                 	db	114
   532  008D34  65                 	db	101
   533  008D35  73                 	db	115
   534  008D36  73                 	db	115
   535  008D37  20                 	db	32
   536  008D38  74                 	db	116
   537  008D39  6F                 	db	111
   538  008D3A  20                 	db	32
   539  008D3B  70                 	db	112
   540  008D3C  72                 	db	114
   541  008D3D  6F                 	db	111
   542  008D3E  67                 	db	103
   543  008D3F  72                 	db	114
   544  008D40  61                 	db	97
   545  008D41  6D                 	db	109
   546  008D42  00                 	db	0
   547  008D43                     __end_of_checked_line4:
   548                           	opt stack 0
   549  008D43                     _search_line2:
   550                           	opt stack 0
   551  008D43  4C                 	db	76
   552  008D44  6F                 	db	111
   553  008D45  6F                 	db	111
   554  008D46  6B                 	db	107
   555  008D47  69                 	db	105
   556  008D48  6E                 	db	110
   557  008D49  67                 	db	103
   558  008D4A  20                 	db	32
   559  008D4B  66                 	db	102
   560  008D4C  6F                 	db	111
   561  008D4D  72                 	db	114
   562  008D4E  20                 	db	32
   563  008D4F  66                 	db	102
   564  008D50  69                 	db	105
   565  008D51  6C                 	db	108
   566  008D52  65                 	db	101
   567  008D53  00                 	db	0
   568  008D54                     __end_of_search_line2:
   569                           	opt stack 0
   570  008D54                     _done_line4:
   571                           	opt stack 0
   572  008D54  50                 	db	80
   573  008D55  72                 	db	114
   574  008D56  65                 	db	101
   575  008D57  73                 	db	115
   576  008D58  73                 	db	115
   577  008D59  20                 	db	32
   578  008D5A  74                 	db	116
   579  008D5B  6F                 	db	111
   580  008D5C  20                 	db	32
   581  008D5D  72                 	db	114
   582  008D5E  65                 	db	101
   583  008D5F  62                 	db	98
   584  008D60  6F                 	db	111
   585  008D61  6F                 	db	111
   586  008D62  74                 	db	116
   587  008D63  00                 	db	0
   588  008D64                     __end_of_done_line4:
   589                           	opt stack 0
   590  008D64                     _done_line3:
   591                           	opt stack 0
   592  008D64  50                 	db	80
   593  008D65  61                 	db	97
   594  008D66  67                 	db	103
   595  008D67  65                 	db	101
   596  008D68  73                 	db	115
   597  008D69  20                 	db	32
   598  008D6A  77                 	db	119
   599  008D6B  72                 	db	114
   600  008D6C  69                 	db	105
   601  008D6D  74                 	db	116
   602  008D6E  74                 	db	116
   603  008D6F  65                 	db	101
   604  008D70  6E                 	db	110
   605  008D71  3A                 	db	58
   606  008D72  20                 	db	32
   607  008D73  00                 	db	0
   608  008D74                     __end_of_done_line3:
   609                           	opt stack 0
   610  008D74                     _done_line1:
   611                           	opt stack 0
   612  008D74  42                 	db	66
   613  008D75  6F                 	db	111
   614  008D76  6F                 	db	111
   615  008D77  74                 	db	116
   616  008D78  6C                 	db	108
   617  008D79  6F                 	db	111
   618  008D7A  61                 	db	97
   619  008D7B  64                 	db	100
   620  008D7C  65                 	db	101
   621  008D7D  72                 	db	114
   622  008D7E  20                 	db	32
   623  008D7F  4D                 	db	77
   624  008D80  6F                 	db	111
   625  008D81  64                 	db	100
   626  008D82  65                 	db	101
   627  008D83  00                 	db	0
   628  008D84                     __end_of_done_line1:
   629                           	opt stack 0
   630  008D84                     _programming_line4:
   631                           	opt stack 0
   632  008D84  50                 	db	80
   633  008D85  61                 	db	97
   634  008D86  67                 	db	103
   635  008D87  65                 	db	101
   636  008D88  73                 	db	115
   637  008D89  20                 	db	32
   638  008D8A  77                 	db	119
   639  008D8B  72                 	db	114
   640  008D8C  69                 	db	105
   641  008D8D  74                 	db	116
   642  008D8E  74                 	db	116
   643  008D8F  65                 	db	101
   644  008D90  6E                 	db	110
   645  008D91  3A                 	db	58
   646  008D92  20                 	db	32
   647  008D93  00                 	db	0
   648  008D94                     __end_of_programming_line4:
   649                           	opt stack 0
   650  008D94                     _programming_line1:
   651                           	opt stack 0
   652  008D94  42                 	db	66
   653  008D95  6F                 	db	111
   654  008D96  6F                 	db	111
   655  008D97  74                 	db	116
   656  008D98  6C                 	db	108
   657  008D99  6F                 	db	111
   658  008D9A  61                 	db	97
   659  008D9B  64                 	db	100
   660  008D9C  65                 	db	101
   661  008D9D  72                 	db	114
   662  008D9E  20                 	db	32
   663  008D9F  4D                 	db	77
   664  008DA0  6F                 	db	111
   665  008DA1  64                 	db	100
   666  008DA2  65                 	db	101
   667  008DA3  00                 	db	0
   668  008DA4                     __end_of_programming_line1:
   669                           	opt stack 0
   670  008DA4                     _failed_line1:
   671                           	opt stack 0
   672  008DA4  42                 	db	66
   673  008DA5  6F                 	db	111
   674  008DA6  6F                 	db	111
   675  008DA7  74                 	db	116
   676  008DA8  6C                 	db	108
   677  008DA9  6F                 	db	111
   678  008DAA  61                 	db	97
   679  008DAB  64                 	db	100
   680  008DAC  65                 	db	101
   681  008DAD  72                 	db	114
   682  008DAE  20                 	db	32
   683  008DAF  4D                 	db	77
   684  008DB0  6F                 	db	111
   685  008DB1  64                 	db	100
   686  008DB2  65                 	db	101
   687  008DB3  00                 	db	0
   688  008DB4                     __end_of_failed_line1:
   689                           	opt stack 0
   690  008DB4                     _checked_line1:
   691                           	opt stack 0
   692  008DB4  42                 	db	66
   693  008DB5  6F                 	db	111
   694  008DB6  6F                 	db	111
   695  008DB7  74                 	db	116
   696  008DB8  6C                 	db	108
   697  008DB9  6F                 	db	111
   698  008DBA  61                 	db	97
   699  008DBB  64                 	db	100
   700  008DBC  65                 	db	101
   701  008DBD  72                 	db	114
   702  008DBE  20                 	db	32
   703  008DBF  4D                 	db	77
   704  008DC0  6F                 	db	111
   705  008DC1  64                 	db	100
   706  008DC2  65                 	db	101
   707  008DC3  00                 	db	0
   708  008DC4                     __end_of_checked_line1:
   709                           	opt stack 0
   710  008DC4                     _verify_line1:
   711                           	opt stack 0
   712  008DC4  42                 	db	66
   713  008DC5  6F                 	db	111
   714  008DC6  6F                 	db	111
   715  008DC7  74                 	db	116
   716  008DC8  6C                 	db	108
   717  008DC9  6F                 	db	111
   718  008DCA  61                 	db	97
   719  008DCB  64                 	db	100
   720  008DCC  65                 	db	101
   721  008DCD  72                 	db	114
   722  008DCE  20                 	db	32
   723  008DCF  4D                 	db	77
   724  008DD0  6F                 	db	111
   725  008DD1  64                 	db	100
   726  008DD2  65                 	db	101
   727  008DD3  00                 	db	0
   728  008DD4                     __end_of_verify_line1:
   729                           	opt stack 0
   730  008DD4                     _found_line1:
   731                           	opt stack 0
   732  008DD4  42                 	db	66
   733  008DD5  6F                 	db	111
   734  008DD6  6F                 	db	111
   735  008DD7  74                 	db	116
   736  008DD8  6C                 	db	108
   737  008DD9  6F                 	db	111
   738  008DDA  61                 	db	97
   739  008DDB  64                 	db	100
   740  008DDC  65                 	db	101
   741  008DDD  72                 	db	114
   742  008DDE  20                 	db	32
   743  008DDF  4D                 	db	77
   744  008DE0  6F                 	db	111
   745  008DE1  64                 	db	100
   746  008DE2  65                 	db	101
   747  008DE3  00                 	db	0
   748  008DE4                     __end_of_found_line1:
   749                           	opt stack 0
   750  008DE4                     _search_line1:
   751                           	opt stack 0
   752  008DE4  42                 	db	66
   753  008DE5  6F                 	db	111
   754  008DE6  6F                 	db	111
   755  008DE7  74                 	db	116
   756  008DE8  6C                 	db	108
   757  008DE9  6F                 	db	111
   758  008DEA  61                 	db	97
   759  008DEB  64                 	db	100
   760  008DEC  65                 	db	101
   761  008DED  72                 	db	114
   762  008DEE  20                 	db	32
   763  008DEF  4D                 	db	77
   764  008DF0  6F                 	db	111
   765  008DF1  64                 	db	100
   766  008DF2  65                 	db	101
   767  008DF3  00                 	db	0
   768  008DF4                     __end_of_search_line1:
   769                           	opt stack 0
   770  008DF4                     _start_line1:
   771                           	opt stack 0
   772  008DF4  42                 	db	66
   773  008DF5  6F                 	db	111
   774  008DF6  6F                 	db	111
   775  008DF7  74                 	db	116
   776  008DF8  6C                 	db	108
   777  008DF9  6F                 	db	111
   778  008DFA  61                 	db	97
   779  008DFB  64                 	db	100
   780  008DFC  65                 	db	101
   781  008DFD  72                 	db	114
   782  008DFE  20                 	db	32
   783  008DFF  4D                 	db	77
   784  008E00  6F                 	db	111
   785  008E01  64                 	db	100
   786  008E02  65                 	db	101
   787  008E03  00                 	db	0
   788  008E04                     __end_of_start_line1:
   789                           	opt stack 0
   790  008E04                     _failed_line3_checksum:
   791                           	opt stack 0
   792  008E04  43                 	db	67
   793  008E05  68                 	db	104
   794  008E06  65                 	db	101
   795  008E07  63                 	db	99
   796  008E08  6B                 	db	107
   797  008E09  73                 	db	115
   798  008E0A  75                 	db	117
   799  008E0B  6D                 	db	109
   800  008E0C  20                 	db	32
   801  008E0D  65                 	db	101
   802  008E0E  72                 	db	114
   803  008E0F  72                 	db	114
   804  008E10  6F                 	db	111
   805  008E11  72                 	db	114
   806  008E12  00                 	db	0
   807  008E13                     __end_of_failed_line3_checksum:
   808                           	opt stack 0
   809  008E13                     _failed_line3_noNextRecord:
   810                           	opt stack 0
   811  008E13  4E                 	db	78
   812  008E14  6F                 	db	111
   813  008E15  20                 	db	32
   814  008E16  6E                 	db	110
   815  008E17  65                 	db	101
   816  008E18  78                 	db	120
   817  008E19  74                 	db	116
   818  008E1A  20                 	db	32
   819  008E1B  72                 	db	114
   820  008E1C  65                 	db	101
   821  008E1D  63                 	db	99
   822  008E1E  6F                 	db	111
   823  008E1F  72                 	db	114
   824  008E20  64                 	db	100
   825  008E21  00                 	db	0
   826  008E22                     __end_of_failed_line3_noNextRecord:
   827                           	opt stack 0
   828  008E22                     _start_line4:
   829                           	opt stack 0
   830  008E22  73                 	db	115
   831  008E23  6F                 	db	111
   832  008E24  6C                 	db	108
   833  008E25  64                 	db	100
   834  008E26  65                 	db	101
   835  008E27  72                 	db	114
   836  008E28  6E                 	db	110
   837  008E29  65                 	db	101
   838  008E2A  72                 	db	114
   839  008E2B  64                 	db	100
   840  008E2C  2E                 	db	46
   841  008E2D  63                 	db	99
   842  008E2E  6F                 	db	111
   843  008E2F  6D                 	db	109
   844  008E30  00                 	db	0
   845  008E31                     __end_of_start_line4:
   846                           	opt stack 0
   847  008E31                     _failed_line3_dataTooLong:
   848                           	opt stack 0
   849  008E31  44                 	db	68
   850  008E32  61                 	db	97
   851  008E33  74                 	db	116
   852  008E34  61                 	db	97
   853  008E35  20                 	db	32
   854  008E36  74                 	db	116
   855  008E37  6F                 	db	111
   856  008E38  6F                 	db	111
   857  008E39  20                 	db	32
   858  008E3A  6C                 	db	108
   859  008E3B  6F                 	db	111
   860  008E3C  6E                 	db	110
   861  008E3D  67                 	db	103
   862  008E3E  00                 	db	0
   863  008E3F                     __end_of_failed_line3_dataTooLong:
   864                           	opt stack 0
   865  008E3F                     _reboot_line1:
   866                           	opt stack 0
   867  008E3F  52                 	db	82
   868  008E40  65                 	db	101
   869  008E41  62                 	db	98
   870  008E42  6F                 	db	111
   871  008E43  6F                 	db	111
   872  008E44  74                 	db	116
   873  008E45  69                 	db	105
   874  008E46  6E                 	db	110
   875  008E47  67                 	db	103
   876  008E48  2E                 	db	46
   877  008E49  2E                 	db	46
   878  008E4A  2E                 	db	46
   879  008E4B  00                 	db	0
   880  008E4C                     __end_of_reboot_line1:
   881                           	opt stack 0
   882  008E4C                     _verify_line2:
   883                           	opt stack 0
   884  008E4C  56                 	db	86
   885  008E4D  65                 	db	101
   886  008E4E  72                 	db	114
   887  008E4F  69                 	db	105
   888  008E50  66                 	db	102
   889  008E51  79                 	db	121
   890  008E52  69                 	db	105
   891  008E53  6E                 	db	110
   892  008E54  67                 	db	103
   893  008E55  2E                 	db	46
   894  008E56  2E                 	db	46
   895  008E57  2E                 	db	46
   896  008E58  00                 	db	0
   897  008E59                     __end_of_verify_line2:
   898                           	opt stack 0
   899  008E59                     _search_line4:
   900                           	opt stack 0
   901  008E59  64                 	db	100
   902  008E5A  72                 	db	114
   903  008E5B  69                 	db	105
   904  008E5C  76                 	db	118
   905  008E5D  65                 	db	101
   906  008E5E  2E                 	db	46
   907  008E5F  2E                 	db	46
   908  008E60  2E                 	db	46
   909  008E61  00                 	db	0
   910  008E62                     __end_of_search_line4:
   911                           	opt stack 0
   912  008E62                     _start_line2:
   913                           	opt stack 0
   914  008E62  56                 	db	86
   915  008E63  65                 	db	101
   916  008E64  72                 	db	114
   917  008E65  73                 	db	115
   918  008E66  69                 	db	105
   919  008E67  6F                 	db	111
   920  008E68  6E                 	db	110
   921  008E69  20                 	db	32
   922  008E6A  00                 	db	0
   923  008E6B                     __end_of_start_line2:
   924                           	opt stack 0
   925  008E6B                     _failed_line4:
   926                           	opt stack 0
   927  008E6B  52                 	db	82
   928  008E6C  65                 	db	101
   929  008E6D  63                 	db	99
   930  008E6E  6F                 	db	111
   931  008E6F  72                 	db	114
   932  008E70  64                 	db	100
   933  008E71  20                 	db	32
   934  008E72  00                 	db	0
   935  008E73                     __end_of_failed_line4:
   936                           	opt stack 0
   937  008E73                     _checked_line3:
   938                           	opt stack 0
   939  008E73  72                 	db	114
   940  008E74  65                 	db	101
   941  008E75  63                 	db	99
   942  008E76  6F                 	db	111
   943  008E77  72                 	db	114
   944  008E78  64                 	db	100
   945  008E79  73                 	db	115
   946  008E7A  00                 	db	0
   947  008E7B                     __end_of_checked_line3:
   948                           	opt stack 0
   949  008E7B                     _USB_SD_Ptr:
   950                           	opt stack 0
   951  008E7B  CC                 	db	low _sd000
   952  008E7C  8F                 	db	high _sd000
   953  008E7D  E8                 	db	low _sd001
   954  008E7E  8E                 	db	high _sd001
   955  008E7F  1C                 	db	low _sd002
   956  008E80  8F                 	db	high _sd002
   957  008E81  8B                 	db	low _sd003
   958  008E82  8F                 	db	high _sd003
   959  008E83                     __end_of_USB_SD_Ptr:
   960                           	opt stack 0
   961  008E83                     _programming_line3:
   962                           	opt stack 0
   963  008E83  45                 	db	69
   964  008E84  6E                 	db	110
   965  008E85  74                 	db	116
   966  008E86  72                 	db	114
   967  008E87  79                 	db	121
   968  008E88  20                 	db	32
   969  008E89  00                 	db	0
   970  008E8A                     __end_of_programming_line3:
   971                           	opt stack 0
   972  008E8A                     _verify_line3:
   973                           	opt stack 0
   974  008E8A  52                 	db	82
   975  008E8B  65                 	db	101
   976  008E8C  63                 	db	99
   977  008E8D  6F                 	db	111
   978  008E8E  72                 	db	114
   979  008E8F  64                 	db	100
   980  008E90  00                 	db	0
   981  008E91                     __end_of_verify_line3:
   982                           	opt stack 0
   983  008E91                     _found_line3b:
   984                           	opt stack 0
   985  008E91  20                 	db	32
   986  008E92  62                 	db	98
   987  008E93  79                 	db	121
   988  008E94  74                 	db	116
   989  008E95  65                 	db	101
   990  008E96  73                 	db	115
   991  008E97  00                 	db	0
   992  008E98                     __end_of_found_line3b:
   993                           	opt stack 0
   994  008E98                     _found_line3:
   995                           	opt stack 0
   996  008E98  53                 	db	83
   997  008E99  69                 	db	105
   998  008E9A  7A                 	db	122
   999  008E9B  65                 	db	101
  1000  008E9C  3A                 	db	58
  1001  008E9D  20                 	db	32
  1002  008E9E  00                 	db	0
  1003  008E9F                     __end_of_found_line3:
  1004                           	opt stack 0
  1005  008E9F                     _done_line2:
  1006                           	opt stack 0
  1007  008E9F  44                 	db	68
  1008  008EA0  6F                 	db	111
  1009  008EA1  6E                 	db	110
  1010  008EA2  65                 	db	101
  1011  008EA3  21                 	db	33
  1012  008EA4  00                 	db	0
  1013  008EA5                     __end_of_done_line2:
  1014                           	opt stack 0
  1015  008EA5                     _USB_CD_Ptr:
  1016                           	opt stack 0
  1017  008EA5  A8                 	db	low _configDescriptor1
  1018  008EA6  8E                 	db	high _configDescriptor1
  1019  008EA7                     __end_of_USB_CD_Ptr:
  1020                           	opt stack 0
  1021  008EA7                     _start_line3:
  1022                           	opt stack 0
  1023  008EA7  00                 	db	0
  1024  008EA8                     __end_of_start_line3:
  1025                           	opt stack 0
  1026  008EA8                     _configDescriptor1:
  1027                           	opt stack 0
  1028  008EA8  09                 	db	9
  1029  008EA9  02                 	db	2
  1030  008EAA  40                 	db	64
  1031  008EAB  00                 	db	0
  1032  008EAC  02                 	db	2
  1033  008EAD  01                 	db	1
  1034  008EAE  00                 	db	0
  1035  008EAF  C0                 	db	192
  1036  008EB0  32                 	db	50
  1037  008EB1  09                 	db	9
  1038  008EB2  04                 	db	4
  1039  008EB3  00                 	db	0
  1040  008EB4  00                 	db	0
  1041  008EB5  02                 	db	2
  1042  008EB6  03                 	db	3
  1043  008EB7  00                 	db	0
  1044  008EB8  00                 	db	0
  1045  008EB9  00                 	db	0
  1046  008EBA  09                 	db	9
  1047  008EBB  21                 	db	33
  1048  008EBC  11                 	db	17
  1049  008EBD  01                 	db	1
  1050  008EBE  00                 	db	0
  1051  008EBF  01                 	db	1
  1052  008EC0  22                 	db	34
  1053  008EC1  1D                 	db	29
  1054  008EC2  00                 	db	0
  1055  008EC3  07                 	db	7
  1056  008EC4  05                 	db	5
  1057  008EC5  81                 	db	129
  1058  008EC6  03                 	db	3
  1059  008EC7  40                 	db	64
  1060  008EC8  00                 	db	0
  1061  008EC9  01                 	db	1
  1062  008ECA  07                 	db	7
  1063  008ECB  05                 	db	5
  1064  008ECC  01                 	db	1
  1065  008ECD  03                 	db	3
  1066  008ECE  40                 	db	64
  1067  008ECF  00                 	db	0
  1068  008ED0  01                 	db	1
  1069  008ED1  09                 	db	9
  1070  008ED2  04                 	db	4
  1071  008ED3  01                 	db	1
  1072  008ED4  00                 	db	0
  1073  008ED5  02                 	db	2
  1074  008ED6  08                 	db	8
  1075  008ED7  06                 	db	6
  1076  008ED8  50                 	db	80
  1077  008ED9  00                 	db	0
  1078  008EDA  07                 	db	7
  1079  008EDB  05                 	db	5
  1080  008EDC  82                 	db	130
  1081  008EDD  02                 	db	2
  1082  008EDE  40                 	db	64
  1083  008EDF  00                 	db	0
  1084  008EE0  01                 	db	1
  1085  008EE1  07                 	db	7
  1086  008EE2  05                 	db	5
  1087  008EE3  02                 	db	2
  1088  008EE4  02                 	db	2
  1089  008EE5  40                 	db	64
  1090  008EE6  00                 	db	0
  1091  008EE7  01                 	db	1
  1092  008EE8                     __end_of_configDescriptor1:
  1093                           	opt stack 0
  1094  008EE8                     _sd001:
  1095                           	opt stack 0
  1096  008EE8  34                 	db	52
  1097  008EE9  03                 	db	3
  1098  008EEA  0053               	dw	83
  1099  008EEC  006F               	dw	111
  1100  008EEE  006C               	dw	108
  1101  008EF0  0064               	dw	100
  1102  008EF2  0065               	dw	101
  1103  008EF4  0072               	dw	114
  1104  008EF6  006E               	dw	110
  1105  008EF8  0065               	dw	101
  1106  008EFA  0072               	dw	114
  1107  008EFC  0064               	dw	100
  1108  008EFE  002E               	dw	46
  1109  008F00  0063               	dw	99
  1110  008F02  006F               	dw	111
  1111  008F04  006D               	dw	109
  1112  008F06  0020               	dw	32
  1113  008F08  0020               	dw	32
  1114  008F0A  0020               	dw	32
  1115  008F0C  0020               	dw	32
  1116  008F0E  0020               	dw	32
  1117  008F10  0020               	dw	32
  1118  008F12  0020               	dw	32
  1119  008F14  0020               	dw	32
  1120  008F16  0020               	dw	32
  1121  008F18  0020               	dw	32
  1122  008F1A  0020               	dw	32
  1123  008F1C                     __end_of_sd001:
  1124                           	opt stack 0
  1125  008F1C                     _sd002:
  1126                           	opt stack 0
  1127  008F1C  2E                 	db	46
  1128  008F1D  03                 	db	3
  1129  008F1E  004D               	dw	77
  1130  008F20  0050               	dw	80
  1131  008F22  0050               	dw	80
  1132  008F24  0054               	dw	84
  1133  008F26  0053               	dw	83
  1134  008F28  006F               	dw	111
  1135  008F2A  006C               	dw	108
  1136  008F2C  0061               	dw	97
  1137  008F2E  0072               	dw	114
  1138  008F30  0020               	dw	32
  1139  008F32  0043               	dw	67
  1140  008F34  0068               	dw	104
  1141  008F36  0061               	dw	97
  1142  008F38  0072               	dw	114
  1143  008F3A  0067               	dw	103
  1144  008F3C  0065               	dw	101
  1145  008F3E  0072               	dw	114
  1146  008F40  0020               	dw	32
  1147  008F42  0052               	dw	82
  1148  008F44  0065               	dw	101
  1149  008F46  0076               	dw	118
  1150  008F48  0043               	dw	67
  1151  008F4A                     __end_of_sd002:
  1152                           	opt stack 0
  1153  008F4A                     _inq_resp:
  1154                           	opt stack 0
  1155  008F4A  00                 	db	0
  1156  008F4B  80                 	db	128
  1157  008F4C  04                 	db	4
  1158  008F4D  02                 	db	2
  1159  008F4E  20                 	db	32
  1160  008F4F  00                 	db	0
  1161  008F50  00                 	db	0
  1162  008F51  00                 	db	0
  1163  008F52  4D                 	db	77
  1164  008F53  69                 	db	105
  1165  008F54  63                 	db	99
  1166  008F55  72                 	db	114
  1167  008F56  6F                 	db	111
  1168  008F57  63                 	db	99
  1169  008F58  68                 	db	104
  1170  008F59  70                 	db	112
  1171  008F5A  4D                 	db	77
  1172  008F5B  61                 	db	97
  1173  008F5C  73                 	db	115
  1174  008F5D  73                 	db	115
  1175  008F5E  20                 	db	32
  1176  008F5F  53                 	db	83
  1177  008F60  74                 	db	116
  1178  008F61  6F                 	db	111
  1179  008F62  72                 	db	114
  1180  008F63  61                 	db	97
  1181  008F64  67                 	db	103
  1182  008F65  65                 	db	101
  1183  008F66  20                 	db	32
  1184  008F67  20                 	db	32
  1185  008F68  20                 	db	32
  1186  008F69  20                 	db	32
  1187  008F6A  30                 	db	48
  1188  008F6B  30                 	db	48
  1189  008F6C  30                 	db	48
  1190  008F6D  31                 	db	49
  1191  008F6E                     __end_of_inq_resp:
  1192                           	opt stack 0
  1193  008F6E                     _hid_rpt01:
  1194                           	opt stack 0
  1195  008F6E  06                 	db	6
  1196  008F6F  00                 	db	0
  1197  008F70  FF                 	db	255
  1198  008F71  09                 	db	9
  1199  008F72  01                 	db	1
  1200  008F73  A1                 	db	161
  1201  008F74  01                 	db	1
  1202  008F75  19                 	db	25
  1203  008F76  01                 	db	1
  1204  008F77  29                 	db	41
  1205  008F78  40                 	db	64
  1206  008F79  15                 	db	21
  1207  008F7A  00                 	db	0
  1208  008F7B  26                 	db	38
  1209  008F7C  FF                 	db	255
  1210  008F7D  00                 	db	0
  1211  008F7E  75                 	db	117
  1212  008F7F  08                 	db	8
  1213  008F80  95                 	db	149
  1214  008F81  40                 	db	64
  1215  008F82  81                 	db	129
  1216  008F83  00                 	db	0
  1217  008F84  19                 	db	25
  1218  008F85  01                 	db	1
  1219  008F86  29                 	db	41
  1220  008F87  40                 	db	64
  1221  008F88  91                 	db	145
  1222  008F89  00                 	db	0
  1223  008F8A  C0                 	db	192
  1224  008F8B                     __end_of_hid_rpt01:
  1225                           	opt stack 0
  1226  008F8B                     _sd003:
  1227                           	opt stack 0
  1228  008F8B  1A                 	db	26
  1229  008F8C  03                 	db	3
  1230  008F8D  0031               	dw	49
  1231  008F8F  0032               	dw	50
  1232  008F91  0033               	dw	51
  1233  008F93  0034               	dw	52
  1234  008F95  0035               	dw	53
  1235  008F97  0036               	dw	54
  1236  008F99  0037               	dw	55
  1237  008F9B  0038               	dw	56
  1238  008F9D  0039               	dw	57
  1239  008F9F  0030               	dw	48
  1240  008FA1  0039               	dw	57
  1241  008FA3  0039               	dw	57
  1242  008FA5                     __end_of_sd003:
  1243                           	opt stack 0
  1244  008FA5                     _device_dsc:
  1245                           	opt stack 0
  1246  008FA5  12                 	db	18
  1247  008FA6  01                 	db	1
  1248  008FA7  0200               	dw	512
  1249  008FA9  00                 	db	0
  1250  008FAA  00                 	db	0
  1251  008FAB  00                 	db	0
  1252  008FAC  08                 	db	8
  1253  008FAD  04D8               	dw	1240
  1254  008FAF  F08E               	dw	61582
  1255  008FB1  0100               	dw	256
  1256  008FB3  01                 	db	1
  1257  008FB4  02                 	db	2
  1258  008FB5  00                 	db	0
  1259  008FB6  01                 	db	1
  1260  008FB7                     __end_of_device_dsc:
  1261                           	opt stack 0
  1262  008FB7                     _bootloader_filename:
  1263                           	opt stack 0
  1264  008FB7  46                 	db	70
  1265  008FB8  49                 	db	73
  1266  008FB9  52                 	db	82
  1267  008FBA  4D                 	db	77
  1268  008FBB  57                 	db	87
  1269  008FBC  41                 	db	65
  1270  008FBD  52                 	db	82
  1271  008FBE  45                 	db	69
  1272  008FBF  00                 	db	0
  1273  008FC0                     __end_of_bootloader_filename:
  1274                           	opt stack 0
  1275  008FC0                     _flash_command_pagesize_528:
  1276                           	opt stack 0
  1277  008FC0  3D                 	db	61
  1278  008FC1  2A                 	db	42
  1279  008FC2  80                 	db	128
  1280  008FC3  A7                 	db	167
  1281  008FC4                     __end_of_flash_command_pagesize_528:
  1282                           	opt stack 0
  1283  008FC4                     _flash_command_pagesize_512:
  1284                           	opt stack 0
  1285  008FC4  3D                 	db	61
  1286  008FC5  2A                 	db	42
  1287  008FC6  80                 	db	128
  1288  008FC7  A6                 	db	166
  1289  008FC8                     __end_of_flash_command_pagesize_512:
  1290                           	opt stack 0
  1291  008FC8                     _bootloader_extension:
  1292                           	opt stack 0
  1293  008FC8  48                 	db	72
  1294  008FC9  45                 	db	69
  1295  008FCA  58                 	db	88
  1296  008FCB  00                 	db	0
  1297  008FCC                     __end_of_bootloader_extension:
  1298                           	opt stack 0
  1299  008FCC                     _sd000:
  1300                           	opt stack 0
  1301  008FCC  04                 	db	4
  1302  008FCD  03                 	db	3
  1303  008FCE  0409               	dw	1033
  1304  008FD0                     __end_of_sd000:
  1305                           	opt stack 0
  1306  0000                     _RPINR23	set	3838
  1307  0000                     _RPOR23	set	3799
  1308  0000                     _RPINR22	set	3837
  1309  0000                     _RPOR22	set	3798
  1310  0000                     _RPOR21	set	3797
  1311  0000                     _RPINR21	set	3836
  1312  0000                     _RPINR2	set	3810
  1313  0000                     _RPINR3	set	3811
  1314  0000                     _RPINR1	set	3809
  1315  0000                     _PPSCONbits	set	3775
  1316  0000                     _ODCON3bits	set	3904
  1317  0000                     _ANCON0bits	set	3912
  1318  0000                     _UEP0bits	set	3878
  1319  0000                     _UIEbits	set	3894
  1320  0000                     _UADDR	set	3896
  1321  0000                     _UIE	set	3894
  1322  0000                     _UEIE	set	3895
  1323  0000                     _UCFG	set	3897
  1324  0000                     _UEP1	set	3879
  1325  0000                     _UEP0	set	3878
  1326  0000                     _TBLPTR	set	4086
  1327  0000                     _DMACON2bits	set	3974
  1328  0000                     _SSP2CON1bits	set	3954
  1329  0000                     _SSP2STATbits	set	3955
  1330  0000                     _INTCON	set	4082
  1331  0000                     _EECON1	set	4006
  1332  0000                     _TABLAT	set	4085
  1333  0000                     _EECON1bits	set	4006
  1334  0000                     _SSP1CON1	set	4038
  1335  0000                     _SSP1BUF	set	4041
  1336  0000                     _SSP1CON2bits	set	4037
  1337  0000                     _SSP1CON1bits	set	4038
  1338  0000                     _SSP1ADD	set	4040
  1339  0000                     _SSP1STATbits	set	4039
  1340  0000                     _LATEbits	set	3981
  1341  0000                     _TRISEbits	set	3990
  1342  0000                     _LATBbits	set	3978
  1343  0000                     _TRISBbits	set	3987
  1344  0000                     _LATDbits	set	3980
  1345  0000                     _TRISDbits	set	3989
  1346  0000                     _LATCbits	set	3979
  1347  0000                     _TRISCbits	set	3988
  1348  0000                     _T0CONbits	set	4053
  1349  0000                     _INTCON2bits	set	4081
  1350  0000                     _EECON2	set	4007
  1351  0000                     _PORTBbits	set	3969
  1352  0000                     _INTCON3bits	set	4080
  1353  0000                     _TMR0L	set	4054
  1354  0000                     _TMR0H	set	4055
  1355  0000                     _INTCONbits	set	4082
  1356  0000                     _OSCCON	set	4051
  1357  0000                     _OSCTUNEbits	set	3995
  1358  0000                     _PORTAbits	set	3968
  1359  0000                     _TRISAbits	set	3986
  1360  0000                     _LATAbits	set	3977
  1361  0000                     _PIR3bits	set	4004
  1362  0000                     _DMABCL	set	3943
  1363  0000                     _DMABCH	set	3942
  1364  0000                     _RXADDRL	set	3945
  1365  0000                     _RXADDRH	set	3944
  1366  0000                     _DMACON1bits	set	3976
  1367  0000                     _TXADDRL	set	3947
  1368  0000                     _TXADDRH	set	3946
  1369  0000                     _PORTDbits	set	3971
  1370  0000                     _USTAT	set	3940
  1371  0000                     _PIR2bits	set	4001
  1372  0000                     _UCON	set	3941
  1373  0000                     _UIRbits	set	3938
  1374  0000                     _UCONbits	set	3941
  1375  0000                     _UIR	set	3938
  1376  0000                     _UEIR	set	3939
  1377  0000                     _PIE2bits	set	4000
  1378  008FD0                     STR_12:
  1379  008FD0  68                 	db	104	;'h'
  1380  008FD1  65                 	db	101	;'e'
  1381  008FD2  6C                 	db	108	;'l'
  1382  008FD3  6C                 	db	108	;'l'
  1383  008FD4  6F                 	db	111	;'o'
  1384  008FD5  20                 	db	32
  1385  008FD6  77                 	db	119	;'w'
  1386  008FD7  6F                 	db	111	;'o'
  1387  008FD8  72                 	db	114	;'r'
  1388  008FD9  6C                 	db	108	;'l'
  1389  008FDA  64                 	db	100	;'d'
  1390  008FDB  21                 	db	33
  1391  008FDC  00                 	db	0
  1392  008FDD                     STR_9:
  1393  008FDD  53                 	db	83	;'S'
  1394  008FDE  6F                 	db	111	;'o'
  1395  008FDF  6C                 	db	108	;'l'
  1396  008FE0  61                 	db	97	;'a'
  1397  008FE1  72                 	db	114	;'r'
  1398  008FE2  43                 	db	67	;'C'
  1399  008FE3  68                 	db	104	;'h'
  1400  008FE4  61                 	db	97	;'a'
  1401  008FE5  72                 	db	114	;'r'
  1402  008FE6  67                 	db	103	;'g'
  1403  008FE7  72                 	db	114	;'r'
  1404  008FE8  00                 	db	0
  1405  008FE9                     STR_10:
  1406  008FE9  46                 	db	70	;'F'
  1407  008FEA  49                 	db	73	;'I'
  1408  008FEB  4C                 	db	76	;'L'
  1409  008FEC  45                 	db	69	;'E'
  1410  008FED  20                 	db	32
  1411  008FEE  20                 	db	32
  1412  008FEF  20                 	db	32
  1413  008FF0  20                 	db	32
  1414  008FF1  00                 	db	0
  1415  008FF2                     STR_1:
  1416  008FF2  4D                 	db	77	;'M'
  1417  008FF3  53                 	db	83	;'S'
  1418  008FF4  44                 	db	68	;'D'
  1419  008FF5  4F                 	db	79	;'O'
  1420  008FF6  53                 	db	83	;'S'
  1421  008FF7  35                 	db	53	;'5'
  1422  008FF8  2E                 	db	46
  1423  008FF9  30                 	db	48	;'0'
  1424  008FFA  00                 	db	0
  1425  008FFB                     STR_11:
  1426  008FFB  54                 	db	84	;'T'
  1427  008FFC  58                 	db	88	;'X'
  1428  008FFD  54                 	db	84	;'T'
  1429  008FFE  00                 	db	0
  1430  0000                     
  1431                           ; #config settings
  1432  008FFF  00                 	db	0	; dummy byte at the end
  1433  0000                     
  1434                           	psect	cinit
  1435  00621A                     __pcinit:
  1436                           	opt stack 0
  1437  00621A                     start_initialization:
  1438                           	opt stack 0
  1439  00621A                     __initialization:
  1440                           	opt stack 0
  1441                           
  1442                           ; Initialize objects allocated to BANK1 (37 bytes)
  1443                           ; load TBLPTR registers with __pidataBANK1
  1444  00621A  0E80               	movlw	low __pidataBANK1
  1445  00621C  6EF6               	movwf	tblptrl,c
  1446  00621E  0E7E               	movlw	high __pidataBANK1
  1447  006220  6EF7               	movwf	tblptrh,c
  1448  006222  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1449  006224  6EF8               	movwf	tblptru,c
  1450  006226  EE01  F0D8         	lfsr	0,__pdataBANK1
  1451  00622A  EE10 F025          	lfsr	1,37
  1452  00622E                     copy_data0:
  1453  00622E  0009               	tblrd		*+
  1454  006230  CFF5 FFEE          	movff	tablat,postinc0
  1455  006234  50E5               	movf	postdec1,w,c
  1456  006236  50E1               	movf	fsr1l,w,c
  1457  006238  E1FA               	bnz	copy_data0
  1458                           
  1459                           ; Initialize objects allocated to BANK0 (1 bytes)
  1460                           ; load TBLPTR registers with __pidataBANK0
  1461  00623A  0E1E               	movlw	low __pidataBANK0
  1462  00623C  6EF6               	movwf	tblptrl,c
  1463  00623E  0E82               	movlw	high __pidataBANK0
  1464  006240  6EF7               	movwf	tblptrh,c
  1465  006242  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1466  006244  6EF8               	movwf	tblptru,c
  1467  006246  0009               	tblrd		*+	;fetch initializer
  1468  006248  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1469                           
  1470                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1471  00624C  EE03  F080         	lfsr	0,__pbssBIGRAMll
  1472  006250  EE12 F000          	lfsr	1,512
  1473  006254                     clear_0:
  1474  006254  6AEE               	clrf	postinc0,c
  1475  006256  50E5               	movf	postdec1,w,c
  1476  006258  50E1               	movf	fsr1l,w,c
  1477  00625A  E1FC               	bnz	clear_0
  1478  00625C  50E2               	movf	fsr1h,w,c
  1479  00625E  E1FA               	bnz	clear_0
  1480                           
  1481                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1482  006260  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1483  006264  EE14 F000          	lfsr	1,1024
  1484  006268                     clear_1:
  1485  006268  6AEE               	clrf	postinc0,c
  1486  00626A  50E5               	movf	postdec1,w,c
  1487  00626C  50E1               	movf	fsr1l,w,c
  1488  00626E  E1FC               	bnz	clear_1
  1489  006270  50E2               	movf	fsr1h,w,c
  1490  006272  E1FA               	bnz	clear_1
  1491                           
  1492                           ; Clear objects allocated to BANK3 (128 bytes)
  1493  006274  EE03  F000         	lfsr	0,__pbssBANK3
  1494  006278  0E80               	movlw	128
  1495  00627A                     clear_2:
  1496  00627A  6AEE               	clrf	postinc0,c
  1497  00627C  06E8               	decf	wreg,f,c
  1498  00627E  E1FD               	bnz	clear_2
  1499                           
  1500                           ; Clear objects allocated to BANK2 (208 bytes)
  1501  006280  EE02  F000         	lfsr	0,__pbssBANK2
  1502  006284  0ED0               	movlw	208
  1503  006286                     clear_3:
  1504  006286  6AEE               	clrf	postinc0,c
  1505  006288  06E8               	decf	wreg,f,c
  1506  00628A  E1FD               	bnz	clear_3
  1507                           
  1508                           ; Clear objects allocated to BANK1 (216 bytes)
  1509  00628C  EE01  F000         	lfsr	0,__pbssBANK1
  1510  006290  0ED8               	movlw	216
  1511  006292                     clear_4:
  1512  006292  6AEE               	clrf	postinc0,c
  1513  006294  06E8               	decf	wreg,f,c
  1514  006296  E1FD               	bnz	clear_4
  1515                           
  1516                           ; Clear objects allocated to BANK0 (70 bytes)
  1517  006298  EE00  F0B9         	lfsr	0,__pbssBANK0
  1518  00629C  0E46               	movlw	70
  1519  00629E                     clear_5:
  1520  00629E  6AEE               	clrf	postinc0,c
  1521  0062A0  06E8               	decf	wreg,f,c
  1522  0062A2  E1FD               	bnz	clear_5
  1523                           
  1524                           ; Clear objects allocated to COMRAM (1 bytes)
  1525  0062A4  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  1526  0062A6                     end_of_initialization:
  1527                           	opt stack 0
  1528  0062A6                     __end_of__initialization:
  1529                           	opt stack 0
  1530  0062A6  0100               	movlb	0
  1531  0062A8  EF8C  F01C         	goto	_main	;jump to C main() function
  1532                           tblptru	equ	0xFF8
  1533                           tblptrh	equ	0xFF7
  1534                           tblptrl	equ	0xFF6
  1535                           tablat	equ	0xFF5
  1536                           postinc0	equ	0xFEE
  1537                           wreg	equ	0xFE8
  1538                           postdec1	equ	0xFE5
  1539                           fsr1h	equ	0xFE2
  1540                           fsr1l	equ	0xFE1
  1541                           
  1542                           	psect	bssCOMRAM
  1543  00005F                     __pbssCOMRAM:
  1544                           	opt stack 0
  1545  00005F                     _USBDeviceState:
  1546                           	opt stack 0
  1547  00005F                     	ds	1
  1548                           tblptru	equ	0xFF8
  1549                           tblptrh	equ	0xFF7
  1550                           tblptrl	equ	0xFF6
  1551                           tablat	equ	0xFF5
  1552                           postinc0	equ	0xFEE
  1553                           wreg	equ	0xFE8
  1554                           postdec1	equ	0xFE5
  1555                           fsr1h	equ	0xFE2
  1556                           fsr1l	equ	0xFE1
  1557                           
  1558                           	psect	bssBANK0
  1559  0000B9                     __pbssBANK0:
  1560                           	opt stack 0
  1561  0000B9                     _os:
  1562                           	opt stack 0
  1563  0000B9                     	ds	6
  1564  0000BF                     _inPipes:
  1565                           	opt stack 0
  1566  0000BF                     	ds	6
  1567  0000C5                     _pBDTEntryIn:
  1568                           	opt stack 0
  1569  0000C5                     	ds	6
  1570  0000CB                     _hex_file_size:
  1571                           	opt stack 0
  1572  0000CB                     	ds	4
  1573  0000CF                     _hex_file_offset:
  1574                           	opt stack 0
  1575  0000CF                     	ds	4
  1576  0000D3                     _TransferLength:
  1577                           	opt stack 0
  1578  0000D3                     	ds	2
  1579  0000D5                     _USBMSDInHandle:
  1580                           	opt stack 0
  1581  0000D5                     	ds	2
  1582  0000D7                     _USBMSDOutHandle:
  1583                           	opt stack 0
  1584  0000D7                     	ds	2
  1585  0000D9                     _pBDTEntryEP0OutNext:
  1586                           	opt stack 0
  1587  0000D9                     	ds	2
  1588  0000DB                     _pBDTEntryEP0OutCurrent:
  1589                           	opt stack 0
  1590  0000DB                     	ds	2
  1591  0000DD                     _start_from_byte_next:
  1592                           	opt stack 0
  1593  0000DD                     	ds	1
  1594  0000DE                     _last_error:
  1595                           	opt stack 0
  1596  0000DE                     	ds	1
  1597  0000DF                     _power_state:
  1598                           	opt stack 0
  1599  0000DF                     	ds	1
  1600  0000E0                     _userInterfaceStatus:
  1601                           	opt stack 0
  1602  0000E0                     	ds	1
  1603  0000E1                     _MSDCBWValid:
  1604                           	opt stack 0
  1605  0000E1                     	ds	1
  1606  0000E2                     _MSDHostNoData:
  1607                           	opt stack 0
  1608  0000E2                     	ds	1
  1609  0000E3                     _SoftDetach:
  1610                           	opt stack 0
  1611  0000E3                     	ds	1
  1612  0000E4                     _gblCBWLength:
  1613                           	opt stack 0
  1614  0000E4                     	ds	1
  1615  0000E5                     _MSDRetryAttempt:
  1616                           	opt stack 0
  1617  0000E5                     	ds	1
  1618  0000E6                     _MSDWriteState:
  1619                           	opt stack 0
  1620  0000E6                     	ds	1
  1621  0000E7                     _MSDReadState:
  1622                           	opt stack 0
  1623  0000E7                     	ds	1
  1624  0000E8                     _MSDCommandState:
  1625                           	opt stack 0
  1626  0000E8                     	ds	1
  1627  0000E9                     _MSD_State:
  1628                           	opt stack 0
  1629  0000E9                     	ds	1
  1630  0000EA                     _USBTicksSinceSuspendEnd:
  1631                           	opt stack 0
  1632  0000EA                     	ds	1
  1633  0000EB                     _USBDeferOUTDataStagePackets:
  1634                           	opt stack 0
  1635  0000EB                     	ds	1
  1636  0000EC                     _USBDeferINDataStagePackets:
  1637                           	opt stack 0
  1638  0000EC                     	ds	1
  1639  0000ED                     _USBStatusStageEnabledFlag2:
  1640                           	opt stack 0
  1641  0000ED                     	ds	1
  1642  0000EE                     _USBStatusStageEnabledFlag1:
  1643                           	opt stack 0
  1644  0000EE                     	ds	1
  1645  0000EF                     _USBDeferStatusStagePacket:
  1646                           	opt stack 0
  1647  0000EF                     	ds	1
  1648  0000F0                     _USBStatusStageTimeoutCounter:
  1649                           	opt stack 0
  1650  0000F0                     	ds	1
  1651  0000F1                     _BothEP0OutUOWNsSet:
  1652                           	opt stack 0
  1653  0000F1                     	ds	1
  1654  0000F2                     _endpoint_number:
  1655                           	opt stack 0
  1656  0000F2                     	ds	1
  1657  0000F3                     _USBBusIsSuspended:
  1658                           	opt stack 0
  1659  0000F3                     	ds	1
  1660  0000F4                     _RemoteWakeup:
  1661                           	opt stack 0
  1662  0000F4                     	ds	1
  1663  0000F5                     _controlTransferState:
  1664                           	opt stack 0
  1665  0000F5                     	ds	1
  1666  0000F6                     _shortPacketStatus:
  1667                           	opt stack 0
  1668  0000F6                     	ds	1
  1669  0000F7                     _fast_read_cluster_number:
  1670                           	opt stack 0
  1671  0000F7                     	ds	2
  1672  0000F9                     _fast_read_cluster:
  1673                           	opt stack 0
  1674  0000F9                     	ds	2
  1675  0000FB                     _active_protocol:
  1676                           	opt stack 0
  1677  0000FB                     	ds	1
  1678  0000FC                     _idle_rate:
  1679                           	opt stack 0
  1680  0000FC                     	ds	1
  1681  0000FD                     _USTATcopy:
  1682                           	opt stack 0
  1683  0000FD                     	ds	1
  1684  0000FE                     _USBActiveConfiguration:
  1685                           	opt stack 0
  1686  0000FE                     	ds	1
  1687                           tblptru	equ	0xFF8
  1688                           tblptrh	equ	0xFF7
  1689                           tblptrl	equ	0xFF6
  1690                           tablat	equ	0xFF5
  1691                           postinc0	equ	0xFEE
  1692                           wreg	equ	0xFE8
  1693                           postdec1	equ	0xFE5
  1694                           fsr1h	equ	0xFE2
  1695                           fsr1l	equ	0xFE1
  1696                           
  1697                           	psect	dataBANK0
  1698  0000FF                     __pdataBANK0:
  1699                           	opt stack 0
  1700  0000FF                     _file_number:
  1701                           	opt stack 0
  1702  0000FF                     	ds	1
  1703                           tblptru	equ	0xFF8
  1704                           tblptrh	equ	0xFF7
  1705                           tblptrl	equ	0xFF6
  1706                           tablat	equ	0xFF5
  1707                           postinc0	equ	0xFEE
  1708                           wreg	equ	0xFE8
  1709                           postdec1	equ	0xFE5
  1710                           fsr1h	equ	0xFE2
  1711                           fsr1l	equ	0xFE1
  1712                           
  1713                           	psect	bssBANK1
  1714  000100                     __pbssBANK1:
  1715                           	opt stack 0
  1716  000100                     _gblCBW:
  1717                           	opt stack 0
  1718  000100                     	ds	31
  1719  00011F                     _gblSenseData:
  1720                           	opt stack 0
  1721  00011F                     	ds	18
  1722  000131                     _outPipes:
  1723                           	opt stack 0
  1724  000131                     	ds	8
  1725  000139                     _communicationSettings:
  1726                           	opt stack 0
  1727  000139                     	ds	7
  1728  000140                     _pBDTEntryOut:
  1729                           	opt stack 0
  1730  000140                     	ds	6
  1731  000146                     _extended_linear_address:
  1732                           	opt stack 0
  1733  000146                     	ds	4
  1734  00014A                     _file_maximum_address:
  1735                           	opt stack 0
  1736  00014A                     	ds	4
  1737  00014E                     _file_minimum_address:
  1738                           	opt stack 0
  1739  00014E                     	ds	4
  1740  000152                     _gblBLKLen:
  1741                           	opt stack 0
  1742  000152                     	ds	4
  1743  000156                     _gblNumBLKS:
  1744                           	opt stack 0
  1745  000156                     	ds	4
  1746  00015A                     _LBA:
  1747                           	opt stack 0
  1748  00015A                     	ds	4
  1749  00015E                     _USB1msTickCount:
  1750                           	opt stack 0
  1751  00015E                     	ds	4
  1752  000162                     _config_external:
  1753                           	opt stack 0
  1754  000162                     	ds	3
  1755  000165                     _config_internal:
  1756                           	opt stack 0
  1757  000165                     	ds	3
  1758  000168                     _ep_data_out:
  1759                           	opt stack 0
  1760  000168                     	ds	3
  1761  00016B                     _ep_data_in:
  1762                           	opt stack 0
  1763  00016B                     	ds	3
  1764  00016E                     _FileAddress:
  1765                           	opt stack 0
  1766  00016E                     	ds	2
  1767  000170                     _flash_pages_written:
  1768                           	opt stack 0
  1769  000170                     	ds	2
  1770  000172                     _total_hex_file_entries:
  1771                           	opt stack 0
  1772  000172                     	ds	2
  1773  000174                     _hex_file_entries:
  1774                           	opt stack 0
  1775  000174                     	ds	2
  1776  000176                     _startup_timer:
  1777                           	opt stack 0
  1778  000176                     	ds	2
  1779  000178                     _system_ui_inactive_count:
  1780                           	opt stack 0
  1781  000178                     	ds	2
  1782  00017A                     _USBInHandle:
  1783                           	opt stack 0
  1784  00017A                     	ds	2
  1785  00017C                     _USBOutHandle:
  1786                           	opt stack 0
  1787  00017C                     	ds	2
  1788  00017E                     _gblMediaPresent:
  1789                           	opt stack 0
  1790  00017E                     	ds	2
  1791  000180                     _MSBBufferIndex:
  1792                           	opt stack 0
  1793  000180                     	ds	2
  1794  000182                     _ptrNextData:
  1795                           	opt stack 0
  1796  000182                     	ds	2
  1797  000184                     _pDst:
  1798                           	opt stack 0
  1799  000184                     	ds	2
  1800  000186                     _active_configuration:
  1801                           	opt stack 0
  1802  000186                     	ds	1
  1803  000187                     _i2c_frequency:
  1804                           	opt stack 0
  1805  000187                     	ds	1
  1806  000188                     _file_buffer:
  1807                           	opt stack 0
  1808  000188                     	ds	50
  1809  0001BA                     _hex_file_entry:
  1810                           	opt stack 0
  1811  0001BA                     	ds	23
  1812  0001D1                     _mediaInformation:
  1813                           	opt stack 0
  1814  0001D1                     	ds	5
  1815  0001D6                     _USBAlternateInterface:
  1816                           	opt stack 0
  1817  0001D6                     	ds	2
  1818                           tblptru	equ	0xFF8
  1819                           tblptrh	equ	0xFF7
  1820                           tblptrl	equ	0xFF6
  1821                           tablat	equ	0xFF5
  1822                           postinc0	equ	0xFEE
  1823                           wreg	equ	0xFE8
  1824                           postdec1	equ	0xFE5
  1825                           fsr1h	equ	0xFE2
  1826                           fsr1l	equ	0xFE1
  1827                           
  1828                           	psect	dataBANK1
  1829  0001D8                     __pdataBANK1:
  1830                           	opt stack 0
  1831  0001D8                     _LUN:
  1832                           	opt stack 0
  1833  0001D8                     	ds	20
  1834  0001EC                     i2c_display_send_init_sequence@F6808:
  1835                           	opt stack 0
  1836  0001EC                     	ds	9
  1837  0001F5                     	ds	8
  1838                           tblptru	equ	0xFF8
  1839                           tblptrh	equ	0xFF7
  1840                           tblptrl	equ	0xFF6
  1841                           tablat	equ	0xFF5
  1842                           postinc0	equ	0xFEE
  1843                           wreg	equ	0xFE8
  1844                           postdec1	equ	0xFE5
  1845                           fsr1h	equ	0xFE2
  1846                           fsr1l	equ	0xFE1
  1847                           
  1848                           	psect	bssBANK2
  1849  000200                     __pbssBANK2:
  1850                           	opt stack 0
  1851  000200                     _display_content:
  1852                           	opt stack 0
  1853  000200                     	ds	80
  1854  000250                     __spi_external_tx_buffer:
  1855                           	opt stack 0
  1856  000250                     	ds	64
  1857  000290                     _ReceivedDataBuffer:
  1858                           	opt stack 0
  1859  000290                     	ds	64
  1860                           tblptru	equ	0xFF8
  1861                           tblptrh	equ	0xFF7
  1862                           tblptrl	equ	0xFF6
  1863                           tablat	equ	0xFF5
  1864                           postinc0	equ	0xFEE
  1865                           wreg	equ	0xFE8
  1866                           postdec1	equ	0xFE5
  1867                           fsr1h	equ	0xFE2
  1868                           fsr1l	equ	0xFE1
  1869                           
  1870                           	psect	bssBANK3
  1871  000300                     __pbssBANK3:
  1872                           	opt stack 0
  1873  000300                     __spi_external_rx_buffer:
  1874                           	opt stack 0
  1875  000300                     	ds	64
  1876  000340                     _ToSendDataBuffer:
  1877                           	opt stack 0
  1878  000340                     	ds	64
  1879                           tblptru	equ	0xFF8
  1880                           tblptrh	equ	0xFF7
  1881                           tblptrl	equ	0xFF6
  1882                           tablat	equ	0xFF5
  1883                           postinc0	equ	0xFEE
  1884                           wreg	equ	0xFE8
  1885                           postdec1	equ	0xFE5
  1886                           fsr1h	equ	0xFE2
  1887                           fsr1l	equ	0xFE1
  1888                           
  1889                           	psect	bssBIGRAMlh
  1890  000800                     __pbssBIGRAMlh:
  1891                           	opt stack 0
  1892  000800                     _pageBuffer:
  1893                           	opt stack 0
  1894  000800                     	ds	1024
  1895                           tblptru	equ	0xFF8
  1896                           tblptrh	equ	0xFF7
  1897                           tblptrl	equ	0xFF6
  1898                           tablat	equ	0xFF5
  1899                           postinc0	equ	0xFEE
  1900                           wreg	equ	0xFE8
  1901                           postdec1	equ	0xFE5
  1902                           fsr1h	equ	0xFE2
  1903                           fsr1l	equ	0xFE1
  1904                           
  1905                           	psect	bssBIGRAMll
  1906  000380                     __pbssBIGRAMll:
  1907                           	opt stack 0
  1908  000380                     _buffer:
  1909                           	opt stack 0
  1910  000380                     	ds	512
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           postinc0	equ	0xFEE
  1916                           wreg	equ	0xFE8
  1917                           postdec1	equ	0xFE5
  1918                           fsr1h	equ	0xFE2
  1919                           fsr1l	equ	0xFE1
  1920                           
  1921                           	psect	cstackBANK0
  1922  000060                     __pcstackBANK0:
  1923                           	opt stack 0
  1924  000060                     ??__bootloader_verify_file:
  1925  000060                     ??__bootloader_program:
  1926  000060                     fat_rename_file@file_number:
  1927                           	opt stack 0
  1928  000060                     fat_create_file@next_cluster:
  1929                           	opt stack 0
  1930  000060                     fat_append_to_file@sector:
  1931                           	opt stack 0
  1932  000060                     fat_read_from_file@start_byte:
  1933                           	opt stack 0
  1934                           
  1935                           ; 4 bytes @ 0x0
  1936  000060                     	ds	1
  1937  000061                     fat_rename_file@root:
  1938                           	opt stack 0
  1939                           
  1940                           ; 32 bytes @ 0x1
  1941  000061                     	ds	1
  1942  000062                     fat_create_file@cluster_count:
  1943                           	opt stack 0
  1944  000062                     fat_append_to_file@file_size:
  1945                           	opt stack 0
  1946                           
  1947                           ; 4 bytes @ 0x2
  1948  000062                     	ds	2
  1949  000064                     fat_create_file@root_slot:
  1950                           	opt stack 0
  1951  000064                     fat_read_from_file@length:
  1952                           	opt stack 0
  1953                           
  1954                           ; 4 bytes @ 0x4
  1955  000064                     	ds	1
  1956  000065                     fat_create_file@number_of_clusters:
  1957                           	opt stack 0
  1958                           
  1959                           ; 2 bytes @ 0x5
  1960  000065                     	ds	1
  1961  000066                     fat_append_to_file@new_cluster:
  1962                           	opt stack 0
  1963                           
  1964                           ; 2 bytes @ 0x6
  1965  000066                     	ds	1
  1966  000067                     fat_create_file@cluster:
  1967                           	opt stack 0
  1968                           
  1969                           ; 2 bytes @ 0x7
  1970  000067                     	ds	1
  1971  000068                     fat_append_to_file@fat_cluster:
  1972                           	opt stack 0
  1973  000068                     fat_read_from_file@data:
  1974                           	opt stack 0
  1975  000068                     __bootloader_program@buffer:
  1976                           	opt stack 0
  1977  000068                     __bootloader_verify_file@root:
  1978                           	opt stack 0
  1979                           
  1980                           ; 32 bytes @ 0x8
  1981  000068                     	ds	1
  1982  000069                     fat_create_file@root_entry:
  1983                           	opt stack 0
  1984                           
  1985                           ; 32 bytes @ 0x9
  1986  000069                     	ds	1
  1987  00006A                     ??_fat_read_from_file:
  1988  00006A                     fat_append_to_file@offset:
  1989                           	opt stack 0
  1990  00006A                     __bootloader_program@entry_page:
  1991                           	opt stack 0
  1992                           
  1993                           ; 2 bytes @ 0xA
  1994  00006A                     	ds	2
  1995  00006C                     fat_append_to_file@file_number:
  1996                           	opt stack 0
  1997  00006C                     __bootloader_program@address_within_page:
  1998                           	opt stack 0
  1999                           
  2000                           ; 2 bytes @ 0xC
  2001  00006C                     	ds	1
  2002  00006D                     fat_append_to_file@length:
  2003                           	opt stack 0
  2004                           
  2005                           ; 2 bytes @ 0xD
  2006  00006D                     	ds	1
  2007  00006E                     fat_read_from_file@file_number:
  2008                           	opt stack 0
  2009  00006E                     __bootloader_program@root:
  2010                           	opt stack 0
  2011                           
  2012                           ; 32 bytes @ 0xE
  2013  00006E                     	ds	1
  2014  00006F                     fat_read_from_file@cluster_number:
  2015                           	opt stack 0
  2016  00006F                     fat_append_to_file@position:
  2017                           	opt stack 0
  2018                           
  2019                           ; 4 bytes @ 0xF
  2020  00006F                     	ds	2
  2021  000071                     fat_read_from_file@cluster:
  2022                           	opt stack 0
  2023                           
  2024                           ; 2 bytes @ 0x11
  2025  000071                     	ds	2
  2026  000073                     fat_append_to_file@root:
  2027                           	opt stack 0
  2028  000073                     fat_read_from_file@root:
  2029                           	opt stack 0
  2030                           
  2031                           ; 32 bytes @ 0x13
  2032  000073                     	ds	14
  2033  000081                     fat_rename_file@cntr:
  2034                           	opt stack 0
  2035                           
  2036                           ; 1 bytes @ 0x21
  2037  000081                     	ds	7
  2038  000088                     __bootloader_verify_file@rec_counter:
  2039                           	opt stack 0
  2040                           
  2041                           ; 1 bytes @ 0x28
  2042  000088                     	ds	1
  2043  000089                     __bootloader_verify_file@return_value:
  2044                           	opt stack 0
  2045                           
  2046                           ; 4 bytes @ 0x29
  2047  000089                     	ds	4
  2048  00008D                     __bootloader_verify_file@address32:
  2049                           	opt stack 0
  2050                           
  2051                           ; 4 bytes @ 0x2D
  2052  00008D                     	ds	1
  2053  00008E                     __bootloader_program@return_value:
  2054                           	opt stack 0
  2055                           
  2056                           ; 4 bytes @ 0x2E
  2057  00008E                     	ds	4
  2058  000092                     __bootloader_program@address32:
  2059                           	opt stack 0
  2060                           
  2061                           ; 4 bytes @ 0x32
  2062  000092                     	ds	1
  2063  000093                     api_parse@inBuffer:
  2064                           	opt stack 0
  2065  000093                     __fill_buffer_read_file@inBuffer:
  2066                           	opt stack 0
  2067                           
  2068                           ; 2 bytes @ 0x33
  2069  000093                     	ds	2
  2070  000095                     api_parse@receivedDataLength:
  2071                           	opt stack 0
  2072  000095                     __fill_buffer_read_file@outBuffer:
  2073                           	opt stack 0
  2074                           
  2075                           ; 2 bytes @ 0x35
  2076  000095                     	ds	1
  2077  000096                     __bootloader_program@start_from_byte:
  2078                           	opt stack 0
  2079                           
  2080                           ; 1 bytes @ 0x36
  2081  000096                     	ds	1
  2082  000097                     ??__fill_buffer_read_file:
  2083  000097                     __bootloader_program@cntr:
  2084                           	opt stack 0
  2085                           
  2086                           ; 2 bytes @ 0x37
  2087  000097                     	ds	2
  2088  000099                     __bootloader_program@page_to_write:
  2089                           	opt stack 0
  2090                           
  2091                           ; 2 bytes @ 0x39
  2092  000099                     	ds	2
  2093  00009B                     __fill_buffer_read_file@file_size:
  2094                           	opt stack 0
  2095                           
  2096                           ; 4 bytes @ 0x3B
  2097  00009B                     	ds	4
  2098  00009F                     __fill_buffer_read_file@data_length:
  2099                           	opt stack 0
  2100                           
  2101                           ; 4 bytes @ 0x3F
  2102  00009F                     	ds	4
  2103  0000A3                     __fill_buffer_read_file@start:
  2104                           	opt stack 0
  2105                           
  2106                           ; 4 bytes @ 0x43
  2107  0000A3                     	ds	4
  2108  0000A7                     api_prepare@inBuffer:
  2109                           	opt stack 0
  2110                           
  2111                           ; 2 bytes @ 0x47
  2112  0000A7                     	ds	2
  2113  0000A9                     api_prepare@outBuffer:
  2114                           	opt stack 0
  2115                           
  2116                           ; 2 bytes @ 0x49
  2117  0000A9                     	ds	2
  2118  0000AB                     ??_APP_DeviceCustomHIDTasks:
  2119                           
  2120                           ; 1 bytes @ 0x4B
  2121  0000AB                     	ds	4
  2122  0000AF                     ??_main:
  2123                           
  2124                           ; 1 bytes @ 0x4F
  2125  0000AF                     	ds	2
  2126  0000B1                     main@tx_start_addr:
  2127                           	opt stack 0
  2128                           
  2129                           ; 2 bytes @ 0x51
  2130  0000B1                     	ds	2
  2131  0000B3                     main@bytes_transmitted:
  2132                           	opt stack 0
  2133                           
  2134                           ; 2 bytes @ 0x53
  2135  0000B3                     	ds	2
  2136  0000B5                     main@rx_buffer:
  2137                           	opt stack 0
  2138                           
  2139                           ; 2 bytes @ 0x55
  2140  0000B5                     	ds	2
  2141  0000B7                     main@tx_buffer:
  2142                           	opt stack 0
  2143                           
  2144                           ; 2 bytes @ 0x57
  2145  0000B7                     	ds	2
  2146                           tblptru	equ	0xFF8
  2147                           tblptrh	equ	0xFF7
  2148                           tblptrl	equ	0xFF6
  2149                           tablat	equ	0xFF5
  2150                           postinc0	equ	0xFEE
  2151                           wreg	equ	0xFE8
  2152                           postdec1	equ	0xFE5
  2153                           fsr1h	equ	0xFE2
  2154                           fsr1l	equ	0xFE1
  2155                           
  2156                           	psect	cstackCOMRAM
  2157  000001                     __pcstackCOMRAM:
  2158                           	opt stack 0
  2159  000001                     ??_USBStdGetDscHandler:
  2160  000001                     ??_USBStdGetStatusHandler:
  2161  000001                     ??_system_delay_ms:
  2162  000001                     ??__i2c_wait_idle:
  2163  000001                     ??__display_clear:
  2164  000001                     ?_USBTransferOnePacket:
  2165                           	opt stack 0
  2166  000001                     ?_spi_get_external_rx_buffer:
  2167                           	opt stack 0
  2168  000001                     ?_spi_get_external_tx_buffer:
  2169                           	opt stack 0
  2170  000001                     ?_ExternalFlash_MediaInitialize:
  2171                           	opt stack 0
  2172  000001                     ?_ExternalFlash_SectorSizeRead:
  2173                           	opt stack 0
  2174  000001                     ?_bootloader_get_entries:
  2175                           	opt stack 0
  2176  000001                     ?_bootloader_get_total_entries:
  2177                           	opt stack 0
  2178  000001                     ?_bootloader_get_rec_address:
  2179                           	opt stack 0
  2180  000001                     ?_bootloader_get_flashPagesWritten:
  2181                           	opt stack 0
  2182  000001                     ?_strncmp:
  2183                           	opt stack 0
  2184  000001                     ?_internalFlash_pageFromAddress:
  2185                           	opt stack 0
  2186  000001                     ?_internalFlash_getBuffer:
  2187                           	opt stack 0
  2188  000001                     ?__get_time:
  2189                           	opt stack 0
  2190  000001                     ?__get_date:
  2191                           	opt stack 0
  2192  000001                     ?__sector_from_cluster:
  2193                           	opt stack 0
  2194  000001                     ?_bootloader_get_rec_dataLength:
  2195                           	opt stack 0
  2196  000001                     ?___lwdiv:
  2197                           	opt stack 0
  2198  000001                     ?___lwmod:
  2199                           	opt stack 0
  2200  000001                     ?_ExternalFlash_CapacityRead:
  2201                           	opt stack 0
  2202  000001                     ?_bootloader_get_file_size:
  2203                           	opt stack 0
  2204  000001                     ?_internalFlash_addressFromPage:
  2205                           	opt stack 0
  2206  000001                     ?___lldiv:
  2207                           	opt stack 0
  2208  000001                     ?___llmod:
  2209                           	opt stack 0
  2210  000001                     USBTransferOnePacket@dir:
  2211                           	opt stack 0
  2212  000001                     USBStallEndpoint@dir:
  2213                           	opt stack 0
  2214  000001                     USBConfigureEndpoint@direction:
  2215                           	opt stack 0
  2216  000001                     USBCtrlTrfTxService@byteToSend:
  2217                           	opt stack 0
  2218  000001                     USBCtrlTrfRxService@i:
  2219                           	opt stack 0
  2220  000001                     __i2c_send@dat:
  2221                           	opt stack 0
  2222  000001                     i2c_set_frequency@frequency:
  2223                           	opt stack 0
  2224  000001                     display_get_character@position:
  2225                           	opt stack 0
  2226  000001                     __display_search@cntr:
  2227                           	opt stack 0
  2228  000001                     __display_rebooting@cntr:
  2229                           	opt stack 0
  2230  000001                     hexCharToUint8@c:
  2231                           	opt stack 0
  2232  000001                     bootloader_get_rec_data@index:
  2233                           	opt stack 0
  2234  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2235                           	opt stack 0
  2236  000001                     spi_set_configuration@configuration:
  2237                           	opt stack 0
  2238  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2239                           	opt stack 0
  2240  000001                     SYSTEM_Initialize@pll_startup_counter:
  2241                           	opt stack 0
  2242  000001                     ExternalFlash_MediaInitialize@config:
  2243                           	opt stack 0
  2244  000001                     ExternalFlash_SectorSizeRead@config:
  2245                           	opt stack 0
  2246  000001                     ExternalFlash_CapacityRead@config:
  2247                           	opt stack 0
  2248  000001                     ExternalFlash_MediaDetect@config:
  2249                           	opt stack 0
  2250  000001                     ExternalFlash_WriteProtectStateGet@config:
  2251                           	opt stack 0
  2252  000001                     __sector_from_cluster@fat_cluster:
  2253                           	opt stack 0
  2254  000001                     __get_mbr@idx:
  2255                           	opt stack 0
  2256  000001                     __get_fbr@idx:
  2257                           	opt stack 0
  2258  000001                     __get_fat@idx:
  2259                           	opt stack 0
  2260  000001                     __get_root@idx:
  2261                           	opt stack 0
  2262  000001                     __get_data@idx:
  2263                           	opt stack 0
  2264  000001                     internalFlash_addressFromPage@page:
  2265                           	opt stack 0
  2266  000001                     __fill_buffer_get_configuration@outBuffer:
  2267                           	opt stack 0
  2268  000001                     __parse_file_truncate@data:
  2269                           	opt stack 0
  2270  000001                     __parse_file_modify@data:
  2271                           	opt stack 0
  2272  000001                     spi_tx@data:
  2273                           	opt stack 0
  2274  000001                     spi_tx_tx@command:
  2275                           	opt stack 0
  2276  000001                     spi_tx_rx@command:
  2277                           	opt stack 0
  2278  000001                     ___lwdiv@dividend:
  2279                           	opt stack 0
  2280  000001                     ___lwmod@dividend:
  2281                           	opt stack 0
  2282  000001                     memcpy@d1:
  2283                           	opt stack 0
  2284  000001                     memset@p1:
  2285                           	opt stack 0
  2286  000001                     strncmp@s1:
  2287                           	opt stack 0
  2288  000001                     __spi_init@details:
  2289                           	opt stack 0
  2290  000001                     __bootloader_check_address@address:
  2291                           	opt stack 0
  2292  000001                     internalFlash_pageFromAddress@address:
  2293                           	opt stack 0
  2294  000001                     ___lldiv@dividend:
  2295                           	opt stack 0
  2296  000001                     ___llmod@dividend:
  2297                           	opt stack 0
  2298                           
  2299                           ; 4 bytes @ 0x0
  2300  000001                     	ds	1
  2301  000002                     ??_USBConfigureEndpoint:
  2302  000002                     ??_USBStallEndpoint:
  2303  000002                     ??_display_get_character:
  2304  000002                     USBCtrlTrfRxService@byteToRead:
  2305                           	opt stack 0
  2306  000002                     USBCtrlTrfInHandler@lastDTS:
  2307                           	opt stack 0
  2308  000002                     system_delay_ms@ms:
  2309                           	opt stack 0
  2310  000002                     hexCharToUint8@ascii:
  2311                           	opt stack 0
  2312  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2313                           	opt stack 0
  2314  000002                     USBTransferOnePacket@data:
  2315                           	opt stack 0
  2316  000002                     USBStdGetStatusHandler@p:
  2317                           	opt stack 0
  2318                           
  2319                           ; 2 bytes @ 0x1
  2320  000002                     	ds	1
  2321  000003                     ??_MSDComputeDeviceInAndResidue:
  2322  000003                     ??__get_mbr:
  2323  000003                     ??__get_fbr:
  2324  000003                     ??__get_fat:
  2325  000003                     ??__get_root:
  2326  000003                     ?_hexCharsToUint16:
  2327                           	opt stack 0
  2328  000003                     system_delay_ms@cntr:
  2329                           	opt stack 0
  2330  000003                     __display_clear@row:
  2331                           	opt stack 0
  2332  000003                     hexCharsToUint8@c2:
  2333                           	opt stack 0
  2334  000003                     hexCharsToUint16@c2:
  2335                           	opt stack 0
  2336  000003                     SYSTEM_Initialize@pll_startup_counter_3113:
  2337                           	opt stack 0
  2338  000003                     __get_time@time:
  2339                           	opt stack 0
  2340  000003                     __get_date@date:
  2341                           	opt stack 0
  2342  000003                     internalFlash_erasePage@page:
  2343                           	opt stack 0
  2344  000003                     internalFlash_writePage@page:
  2345                           	opt stack 0
  2346  000003                     spi_tx@length:
  2347                           	opt stack 0
  2348  000003                     spi_tx_tx@command_length:
  2349                           	opt stack 0
  2350  000003                     spi_tx_rx@command_length:
  2351                           	opt stack 0
  2352  000003                     ___lwdiv@divisor:
  2353                           	opt stack 0
  2354  000003                     ___lwmod@divisor:
  2355                           	opt stack 0
  2356  000003                     memset@c:
  2357                           	opt stack 0
  2358  000003                     strncmp@s2:
  2359                           	opt stack 0
  2360  000003                     memcpy@s1:
  2361                           	opt stack 0
  2362                           
  2363                           ; 3 bytes @ 0x2
  2364  000003                     	ds	1
  2365  000004                     ??_hexCharsToUint8:
  2366  000004                     USBTransferOnePacket@len:
  2367                           	opt stack 0
  2368  000004                     display_get_character@line:
  2369                           	opt stack 0
  2370  000004                     __display_clear@col:
  2371                           	opt stack 0
  2372  000004                     hexCharsToUint16@c3:
  2373                           	opt stack 0
  2374  000004                     spi_init@configuration:
  2375                           	opt stack 0
  2376                           
  2377                           ; 1 bytes @ 0x3
  2378  000004                     	ds	1
  2379  000005                     ??_USBTransferOnePacket:
  2380  000005                     ??_spi_tx:
  2381  000005                     ??_internalFlash_pageFromAddress:
  2382  000005                     SYSTEM_Initialize@state:
  2383                           	opt stack 0
  2384  000005                     hexCharsToUint8@c1:
  2385                           	opt stack 0
  2386  000005                     hexCharsToUint16@c4:
  2387                           	opt stack 0
  2388  000005                     __bootloader_check_address@dataLength:
  2389                           	opt stack 0
  2390  000005                     ___lwmod@counter:
  2391                           	opt stack 0
  2392  000005                     __update_modified_time@root:
  2393                           	opt stack 0
  2394  000005                     __fill_buffer_get_display@outBuffer:
  2395                           	opt stack 0
  2396  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2397                           	opt stack 0
  2398  000005                     spi_tx_tx@data:
  2399                           	opt stack 0
  2400  000005                     spi_tx_rx@data:
  2401                           	opt stack 0
  2402  000005                     ___lwdiv@quotient:
  2403                           	opt stack 0
  2404  000005                     memset@n:
  2405                           	opt stack 0
  2406  000005                     strncmp@len:
  2407                           	opt stack 0
  2408  000005                     internalFlash_erasePage@address:
  2409                           	opt stack 0
  2410  000005                     internalFlash_writePage@address:
  2411                           	opt stack 0
  2412  000005                     internalFlash_addressFromPage@address:
  2413                           	opt stack 0
  2414  000005                     ___lldiv@divisor:
  2415                           	opt stack 0
  2416  000005                     ___llmod@divisor:
  2417                           	opt stack 0
  2418                           
  2419                           ; 4 bytes @ 0x4
  2420  000005                     	ds	1
  2421  000006                     ??_hexCharsToUint16:
  2422  000006                     ??__bootloader_check_address:
  2423  000006                     USBStallEndpoint@ep:
  2424                           	opt stack 0
  2425  000006                     USBConfigureEndpoint@EPNum:
  2426                           	opt stack 0
  2427  000006                     hexCharsToUint8@retVal:
  2428                           	opt stack 0
  2429  000006                     __i2c_write@data:
  2430                           	opt stack 0
  2431  000006                     __i2c_read@data:
  2432                           	opt stack 0
  2433  000006                     i2c_display_write_fixed@data:
  2434                           	opt stack 0
  2435  000006                     memcpy@n:
  2436                           	opt stack 0
  2437                           
  2438                           ; 2 bytes @ 0x5
  2439  000006                     	ds	1
  2440  000007                     ??_strncmp:
  2441  000007                     ??__fill_buffer_get_bootloader_details:
  2442  000007                     __fill_buffer_get_display@secondHalf:
  2443                           	opt stack 0
  2444  000007                     ___lwdiv@counter:
  2445                           	opt stack 0
  2446  000007                     USBStallEndpoint@p:
  2447                           	opt stack 0
  2448  000007                     USBConfigureEndpoint@handle:
  2449                           	opt stack 0
  2450  000007                     spi_tx_tx@data_length:
  2451                           	opt stack 0
  2452  000007                     spi_tx_rx@data_length:
  2453                           	opt stack 0
  2454  000007                     memset@p:
  2455                           	opt stack 0
  2456                           
  2457                           ; 2 bytes @ 0x6
  2458  000007                     	ds	1
  2459  000008                     ??__fill_buffer_get_display:
  2460  000008                     __i2c_write@length:
  2461                           	opt stack 0
  2462  000008                     __i2c_read@length:
  2463                           	opt stack 0
  2464  000008                     i2c_display_write_fixed@length:
  2465                           	opt stack 0
  2466  000008                     utoa@buf:
  2467                           	opt stack 0
  2468  000008                     memcpy@s:
  2469                           	opt stack 0
  2470                           
  2471                           ; 3 bytes @ 0x7
  2472  000008                     	ds	1
  2473  000009                     ??_spi_tx_rx:
  2474  000009                     ??_spi_tx_tx:
  2475  000009                     ??__i2c_read:
  2476  000009                     ?_internalFlash_addressWithinPage:
  2477                           	opt stack 0
  2478  000009                     USBDeviceInit@i:
  2479                           	opt stack 0
  2480  000009                     USBEnableEndpoint@options:
  2481                           	opt stack 0
  2482  000009                     USBTransferOnePacket@ep:
  2483                           	opt stack 0
  2484  000009                     MSDErrorHandler@ErrorCase:
  2485                           	opt stack 0
  2486  000009                     __i2c_write@slave_address:
  2487                           	opt stack 0
  2488  000009                     i2c_display_write_fixed@pos:
  2489                           	opt stack 0
  2490  000009                     __flash_wakeup@command:
  2491                           	opt stack 0
  2492  000009                     hexCharsToUint16@c1:
  2493                           	opt stack 0
  2494  000009                     ___llmod@counter:
  2495                           	opt stack 0
  2496  000009                     internalFlash_writePage@cntr:
  2497                           	opt stack 0
  2498  000009                     internalFlash_addressWithinPage@address:
  2499                           	opt stack 0
  2500  000009                     ___lldiv@quotient:
  2501                           	opt stack 0
  2502                           
  2503                           ; 4 bytes @ 0x8
  2504  000009                     	ds	1
  2505  00000A                     MSDErrorHandler@OldMSD_State:
  2506                           	opt stack 0
  2507  00000A                     __i2c_write@cntr:
  2508                           	opt stack 0
  2509  00000A                     __bootloader_check_address@worst_case:
  2510                           	opt stack 0
  2511  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2512                           	opt stack 0
  2513  00000A                     USBEnableEndpoint@p:
  2514                           	opt stack 0
  2515  00000A                     USBTransferOnePacket@handle:
  2516                           	opt stack 0
  2517  00000A                     hexCharsToUint16@retVal:
  2518                           	opt stack 0
  2519  00000A                     utoa@val:
  2520                           	opt stack 0
  2521                           
  2522                           ; 2 bytes @ 0x9
  2523  00000A                     	ds	1
  2524  00000B                     __ic2_display_set_address@address:
  2525                           	opt stack 0
  2526  00000B                     i2c_digipot_backlight@level:
  2527                           	opt stack 0
  2528  00000B                     __bootloader_check_address@byte_status:
  2529                           	opt stack 0
  2530  00000B                     internalFlash_writePage@block_cntr:
  2531                           	opt stack 0
  2532  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2533                           	opt stack 0
  2534  00000B                     i2c_digipot_reset_on@data_array:
  2535                           	opt stack 0
  2536  00000B                     i2c_digipot_reset_off@data_array:
  2537                           	opt stack 0
  2538  00000B                     i2c_eeprom_writeByte@address:
  2539                           	opt stack 0
  2540  00000B                     memcpy@d:
  2541                           	opt stack 0
  2542  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2543                           	opt stack 0
  2544  00000B                     i2c_display_send_init_sequence@init_sequence:
  2545                           	opt stack 0
  2546                           
  2547                           ; 9 bytes @ 0xA
  2548  00000B                     	ds	1
  2549  00000C                     ??_USBMSDInit:
  2550  00000C                     ?_parseHexFileEntry:
  2551                           	opt stack 0
  2552  00000C                     USBEnableEndpoint@ep:
  2553                           	opt stack 0
  2554  00000C                     __bootloader_check_address@cntr:
  2555                           	opt stack 0
  2556  00000C                     internalFlash_writePage@byte_cntr:
  2557                           	opt stack 0
  2558  00000C                     _USBCheckMSDRequest$2319:
  2559                           	opt stack 0
  2560  00000C                     MSDTransferTerminated@handle:
  2561                           	opt stack 0
  2562  00000C                     __ic2_display_set_address@data_array:
  2563                           	opt stack 0
  2564  00000C                     i2c_digipot_backlight@data_array:
  2565                           	opt stack 0
  2566  00000C                     parseHexFileEntry@data:
  2567                           	opt stack 0
  2568  00000C                     utoa@base:
  2569                           	opt stack 0
  2570  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2571                           	opt stack 0
  2572                           
  2573                           ; 4 bytes @ 0xB
  2574  00000C                     	ds	1
  2575  00000D                     ?__flash_get_status:
  2576                           	opt stack 0
  2577  00000D                     i2c_eeprom_writeByte@data:
  2578                           	opt stack 0
  2579  00000D                     __fill_buffer_get_display@cntr:
  2580                           	opt stack 0
  2581  00000D                     ___lldiv@counter:
  2582                           	opt stack 0
  2583  00000D                     memcpy@tmp:
  2584                           	opt stack 0
  2585  00000D                     internalFlash_addressWithinPage@page:
  2586                           	opt stack 0
  2587                           
  2588                           ; 2 bytes @ 0xC
  2589  00000D                     	ds	1
  2590  00000E                     ??_i2c_eeprom_writeByte:
  2591  00000E                     i2c_display_cursor@position:
  2592                           	opt stack 0
  2593  00000E                     __fill_buffer_get_display@line:
  2594                           	opt stack 0
  2595  00000E                     _USBCheckMSDRequest$2320:
  2596                           	opt stack 0
  2597  00000E                     _MSDTransferTerminated$2407:
  2598                           	opt stack 0
  2599  00000E                     utoa@v:
  2600                           	opt stack 0
  2601  00000E                     parseHexFileEntry@offset:
  2602                           	opt stack 0
  2603  00000E                     internalFlash_read@address:
  2604                           	opt stack 0
  2605                           
  2606                           ; 4 bytes @ 0xD
  2607  00000E                     	ds	1
  2608  00000F                     ??_internalFlash_addressWithinPage:
  2609  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2610                           	opt stack 0
  2611  00000F                     i2c_display_cursor@line:
  2612                           	opt stack 0
  2613  00000F                     __flash_get_status@command:
  2614                           	opt stack 0
  2615  00000F                     __fill_buffer_get_display@start_line:
  2616                           	opt stack 0
  2617                           
  2618                           ; 1 bytes @ 0xE
  2619  00000F                     	ds	1
  2620  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2621                           	opt stack 0
  2622  000010                     __i2c_read@slave_address:
  2623                           	opt stack 0
  2624  000010                     i2c_display_cursor@address:
  2625                           	opt stack 0
  2626  000010                     __fill_buffer_get_display@position:
  2627                           	opt stack 0
  2628  000010                     utoa@c:
  2629                           	opt stack 0
  2630  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2631                           	opt stack 0
  2632  000010                     __flash_get_status@status:
  2633                           	opt stack 0
  2634  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2635                           	opt stack 0
  2636                           
  2637                           ; 2 bytes @ 0xF
  2638  000010                     	ds	1
  2639  000011                     MSDCheckForErrorCases@DeviceNoData:
  2640                           	opt stack 0
  2641  000011                     __i2c_read@cntr:
  2642                           	opt stack 0
  2643  000011                     i2c_eeprom_writeByte@dat:
  2644                           	opt stack 0
  2645  000011                     itoa@buf:
  2646                           	opt stack 0
  2647                           
  2648                           ; 2 bytes @ 0x10
  2649  000011                     	ds	1
  2650  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2651                           	opt stack 0
  2652  000012                     i2c_eeprom_readByte@address:
  2653                           	opt stack 0
  2654  000012                     __flash_is_busy@status:
  2655                           	opt stack 0
  2656  000012                     parseHexFileEntry@hexEntry:
  2657                           	opt stack 0
  2658  000012                     internalFlash_read@data_length:
  2659                           	opt stack 0
  2660                           
  2661                           ; 2 bytes @ 0x11
  2662  000012                     	ds	1
  2663  000013                     i2c_eeprom_writeByte@slave_address:
  2664                           	opt stack 0
  2665  000013                     itoa@val:
  2666                           	opt stack 0
  2667  000013                     internalFlash_addressWithinPage@page_start_address:
  2668                           	opt stack 0
  2669                           
  2670                           ; 4 bytes @ 0x12
  2671  000013                     	ds	1
  2672  000014                     ??_i2c_eeprom_readByte:
  2673  000014                     ??_parseHexFileEntry:
  2674  000014                     flash_is_busy@result:
  2675                           	opt stack 0
  2676  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2677                           	opt stack 0
  2678  000014                     __flash_copy_page_to_buffer@page:
  2679                           	opt stack 0
  2680  000014                     __flash_compare_page_to_buffer@page:
  2681                           	opt stack 0
  2682  000014                     __flash_write_to_buffer@start:
  2683                           	opt stack 0
  2684  000014                     __flash_write_page_from_buffer@page:
  2685                           	opt stack 0
  2686  000014                     __flash_partial_read@page:
  2687                           	opt stack 0
  2688  000014                     internalFlash_read@buffer:
  2689                           	opt stack 0
  2690  000014                     __flash_set_page_size@command:
  2691                           	opt stack 0
  2692                           
  2693                           ; 4 bytes @ 0x13
  2694  000014                     	ds	1
  2695  000015                     __fill_buffer_get_status@outBuffer:
  2696                           	opt stack 0
  2697  000015                     itoa@base:
  2698                           	opt stack 0
  2699                           
  2700                           ; 2 bytes @ 0x14
  2701  000015                     	ds	1
  2702  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2703  000016                     __flash_copy_page_to_buffer@buffer:
  2704                           	opt stack 0
  2705  000016                     __flash_compare_page_to_buffer@buffer:
  2706                           	opt stack 0
  2707  000016                     __flash_write_page_from_buffer@buffer:
  2708                           	opt stack 0
  2709  000016                     __flash_write_to_buffer@data:
  2710                           	opt stack 0
  2711  000016                     __flash_partial_read@start:
  2712                           	opt stack 0
  2713  000016                     internalFlash_readPage@page:
  2714                           	opt stack 0
  2715                           
  2716                           ; 2 bytes @ 0x15
  2717  000016                     	ds	1
  2718  000017                     ??__flash_copy_page_to_buffer:
  2719  000017                     ??__flash_compare_page_to_buffer:
  2720  000017                     ??__flash_write_page_from_buffer:
  2721  000017                     i2c_eeprom_readByte@slave_address:
  2722                           	opt stack 0
  2723  000017                     itoa@cp:
  2724                           	opt stack 0
  2725                           
  2726                           ; 2 bytes @ 0x16
  2727  000017                     	ds	1
  2728  000018                     ??_USBStdFeatureReqHandler:
  2729  000018                     USBStdSetCfgHandler@i:
  2730                           	opt stack 0
  2731  000018                     i2c_eeprom_readByte@addr:
  2732                           	opt stack 0
  2733  000018                     __flash_set_page_size@size:
  2734                           	opt stack 0
  2735  000018                     __flash_write_to_buffer@data_length:
  2736                           	opt stack 0
  2737  000018                     __flash_partial_read@length:
  2738                           	opt stack 0
  2739  000018                     internalFlash_readPage@address:
  2740                           	opt stack 0
  2741                           
  2742                           ; 4 bytes @ 0x17
  2743  000018                     	ds	1
  2744  000019                     USBStdFeatureReqHandler@pUEP:
  2745                           	opt stack 0
  2746  000019                     __display_itoa_u16@value:
  2747                           	opt stack 0
  2748                           
  2749                           ; 4 bytes @ 0x18
  2750  000019                     	ds	1
  2751  00001A                     __flash_write_to_buffer@buffer:
  2752                           	opt stack 0
  2753  00001A                     __flash_compare_page_to_buffer@status:
  2754                           	opt stack 0
  2755  00001A                     __flash_partial_read@data:
  2756                           	opt stack 0
  2757  00001A                     __flash_copy_page_to_buffer@command:
  2758                           	opt stack 0
  2759  00001A                     __flash_write_page_from_buffer@command:
  2760                           	opt stack 0
  2761                           
  2762                           ; 4 bytes @ 0x19
  2763  00001A                     	ds	1
  2764  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2765                           	opt stack 0
  2766  00001B                     __flash_write_to_buffer@command:
  2767                           	opt stack 0
  2768                           
  2769                           ; 4 bytes @ 0x1A
  2770  00001B                     	ds	1
  2771  00001C                     ??__flash_partial_read:
  2772  00001C                     parseHexFileEntry@i:
  2773                           	opt stack 0
  2774  00001C                     USBStdFeatureReqHandler@p:
  2775                           	opt stack 0
  2776  00001C                     __flash_compare_page_to_buffer@command:
  2777                           	opt stack 0
  2778                           
  2779                           ; 4 bytes @ 0x1B
  2780  00001C                     	ds	1
  2781  00001D                     __display_itoa_u16@text:
  2782                           	opt stack 0
  2783                           
  2784                           ; 2 bytes @ 0x1C
  2785  00001D                     	ds	1
  2786  00001E                     ??_USBCtrlEPService:
  2787  00001E                     
  2788                           ; 1 bytes @ 0x1D
  2789  00001E                     	ds	1
  2790  00001F                     ??__display_verify:
  2791  00001F                     ??__display_checked:
  2792  00001F                     __display_programming@cntr:
  2793                           	opt stack 0
  2794  00001F                     __display_done@cntr:
  2795                           	opt stack 0
  2796  00001F                     __display_itoa_u32@value:
  2797                           	opt stack 0
  2798                           
  2799                           ; 4 bytes @ 0x1E
  2800  00001F                     	ds	1
  2801  000020                     USBDeviceTasks@i:
  2802                           	opt stack 0
  2803  000020                     flash_page_write@page:
  2804                           	opt stack 0
  2805  000020                     flash_partial_write@page:
  2806                           	opt stack 0
  2807  000020                     __flash_partial_read@command:
  2808                           	opt stack 0
  2809                           
  2810                           ; 4 bytes @ 0x1F
  2811  000020                     	ds	1
  2812  000021                     __display_verify@cntr:
  2813                           	opt stack 0
  2814  000021                     __display_checked@start:
  2815                           	opt stack 0
  2816                           
  2817                           ; 1 bytes @ 0x20
  2818  000021                     	ds	1
  2819  000022                     __display_checked@cntr:
  2820                           	opt stack 0
  2821  000022                     flash_page_write@data:
  2822                           	opt stack 0
  2823  000022                     flash_partial_write@start:
  2824                           	opt stack 0
  2825                           
  2826                           ; 2 bytes @ 0x21
  2827  000022                     	ds	1
  2828  000023                     __display_itoa_u32@text:
  2829                           	opt stack 0
  2830                           
  2831                           ; 2 bytes @ 0x22
  2832  000023                     	ds	1
  2833  000024                     flash_page_write@match:
  2834                           	opt stack 0
  2835  000024                     flash_partial_write@length:
  2836                           	opt stack 0
  2837  000024                     __flash_partial_read@address:
  2838                           	opt stack 0
  2839                           
  2840                           ; 4 bytes @ 0x23
  2841  000024                     	ds	1
  2842  000025                     ??__display_found:
  2843  000025                     __display_start@cntr:
  2844                           	opt stack 0
  2845  000025                     __display_failed@cntr:
  2846                           	opt stack 0
  2847  000025                     ExternalFlash_SectorWrite@config:
  2848                           	opt stack 0
  2849  000025                     fat_format@cntr:
  2850                           	opt stack 0
  2851                           
  2852                           ; 2 bytes @ 0x24
  2853  000025                     	ds	1
  2854  000026                     flash_partial_write@data:
  2855                           	opt stack 0
  2856                           
  2857                           ; 2 bytes @ 0x25
  2858  000026                     	ds	1
  2859  000027                     __display_found@start:
  2860                           	opt stack 0
  2861  000027                     ExternalFlash_SectorWrite@sector_addr:
  2862                           	opt stack 0
  2863                           
  2864                           ; 4 bytes @ 0x26
  2865  000027                     	ds	1
  2866  000028                     __display_found@cntr:
  2867                           	opt stack 0
  2868  000028                     flash_partial_write@match:
  2869                           	opt stack 0
  2870  000028                     flash_page_read@page:
  2871                           	opt stack 0
  2872  000028                     flash_partial_read@page:
  2873                           	opt stack 0
  2874                           
  2875                           ; 2 bytes @ 0x27
  2876  000028                     	ds	1
  2877  000029                     ??_display_prepare:
  2878  000029                     ??__delete_root:
  2879  000029                     __write_fat@cluster:
  2880                           	opt stack 0
  2881  000029                     __write_root@data:
  2882                           	opt stack 0
  2883                           
  2884                           ; 2 bytes @ 0x28
  2885  000029                     	ds	1
  2886  00002A                     flash_page_read@data:
  2887                           	opt stack 0
  2888  00002A                     flash_partial_read@start:
  2889                           	opt stack 0
  2890  00002A                     __delete_root@root_sector:
  2891                           	opt stack 0
  2892                           
  2893                           ; 2 bytes @ 0x29
  2894  00002A                     	ds	1
  2895  00002B                     ??__write_root:
  2896  00002B                     display_prepare@mode:
  2897                           	opt stack 0
  2898  00002B                     ExternalFlash_SectorWrite@buffer:
  2899                           	opt stack 0
  2900  00002B                     __write_fat@value:
  2901                           	opt stack 0
  2902                           
  2903                           ; 2 bytes @ 0x2A
  2904  00002B                     	ds	1
  2905  00002C                     ??_fat_get_format_status:
  2906  00002C                     __parse_command_short@cmd:
  2907                           	opt stack 0
  2908  00002C                     flash_partial_read@length:
  2909                           	opt stack 0
  2910  00002C                     ExternalFlash_SectorRead@config:
  2911                           	opt stack 0
  2912  00002C                     __write_root@root_sector:
  2913                           	opt stack 0
  2914  00002C                     __delete_root@offset:
  2915                           	opt stack 0
  2916                           
  2917                           ; 2 bytes @ 0x2B
  2918  00002C                     	ds	1
  2919  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2920                           	opt stack 0
  2921  00002D                     __write_fat@fat_sector:
  2922                           	opt stack 0
  2923                           
  2924                           ; 2 bytes @ 0x2C
  2925  00002D                     	ds	1
  2926  00002E                     __delete_root@deleted_value:
  2927                           	opt stack 0
  2928  00002E                     flash_partial_read@data:
  2929                           	opt stack 0
  2930  00002E                     ExternalFlash_SectorWrite@page:
  2931                           	opt stack 0
  2932  00002E                     __write_root@offset:
  2933                           	opt stack 0
  2934  00002E                     fat_get_format_status@cntr:
  2935                           	opt stack 0
  2936  00002E                     ExternalFlash_SectorRead@sector_addr:
  2937                           	opt stack 0
  2938                           
  2939                           ; 4 bytes @ 0x2D
  2940  00002E                     	ds	1
  2941  00002F                     __delete_root@slot:
  2942                           	opt stack 0
  2943  00002F                     __write_fat@offset:
  2944                           	opt stack 0
  2945                           
  2946                           ; 2 bytes @ 0x2E
  2947  00002F                     	ds	1
  2948  000030                     ??_MSDWriteHandler:
  2949  000030                     ??__root_is_available:
  2950  000030                     ?__get_empty_cluster:
  2951                           	opt stack 0
  2952  000030                     ?_fat_get_empty_clusters:
  2953                           	opt stack 0
  2954  000030                     ?__read_fat:
  2955                           	opt stack 0
  2956  000030                     ?__get_first_cluster:
  2957                           	opt stack 0
  2958  000030                     ?_fat_get_file_size:
  2959                           	opt stack 0
  2960  000030                     __write_root@slot:
  2961                           	opt stack 0
  2962  000030                     __get_empty_cluster@first_cluster:
  2963                           	opt stack 0
  2964  000030                     fat_get_empty_clusters@maximum:
  2965                           	opt stack 0
  2966  000030                     __read_fat@cluster:
  2967                           	opt stack 0
  2968  000030                     fat_find_file@name:
  2969                           	opt stack 0
  2970                           
  2971                           ; 2 bytes @ 0x2F
  2972  000030                     	ds	1
  2973  000031                     __root_is_available@root_sector:
  2974                           	opt stack 0
  2975                           
  2976                           ; 2 bytes @ 0x30
  2977  000031                     	ds	1
  2978  000032                     ??__get_first_cluster:
  2979  000032                     ExternalFlash_SectorRead@buffer:
  2980                           	opt stack 0
  2981  000032                     __get_empty_cluster@fat_sector:
  2982                           	opt stack 0
  2983  000032                     fat_get_empty_clusters@fat_sector:
  2984                           	opt stack 0
  2985  000032                     __read_fat@fat_sector:
  2986                           	opt stack 0
  2987  000032                     fat_find_file@extension:
  2988                           	opt stack 0
  2989                           
  2990                           ; 2 bytes @ 0x31
  2991  000032                     	ds	1
  2992  000033                     __root_is_available@offset:
  2993                           	opt stack 0
  2994  000033                     __get_first_cluster@sector:
  2995                           	opt stack 0
  2996                           
  2997                           ; 2 bytes @ 0x32
  2998  000033                     	ds	1
  2999  000034                     ??_fat_get_file_size:
  3000  000034                     ExternalFlash_SectorRead@page:
  3001                           	opt stack 0
  3002  000034                     __get_empty_cluster@offset:
  3003                           	opt stack 0
  3004  000034                     fat_get_empty_clusters@offset:
  3005                           	opt stack 0
  3006  000034                     __read_fat@offset:
  3007                           	opt stack 0
  3008  000034                     fat_find_file@buffer:
  3009                           	opt stack 0
  3010                           
  3011                           ; 11 bytes @ 0x33
  3012  000034                     	ds	1
  3013  000035                     __root_is_available@file_number:
  3014                           	opt stack 0
  3015  000035                     __get_first_cluster@offset:
  3016                           	opt stack 0
  3017  000035                     fat_get_file_size@sector:
  3018                           	opt stack 0
  3019                           
  3020                           ; 2 bytes @ 0x34
  3021  000035                     	ds	1
  3022  000036                     ??_MSDReadHandler:
  3023  000036                     __root_is_available@first_byte:
  3024                           	opt stack 0
  3025  000036                     __get_empty_cluster@value:
  3026                           	opt stack 0
  3027  000036                     fat_get_empty_clusters@value:
  3028                           	opt stack 0
  3029  000036                     __read_fat@value:
  3030                           	opt stack 0
  3031                           
  3032                           ; 2 bytes @ 0x35
  3033  000036                     	ds	1
  3034  000037                     __get_available_root_entry@file_number:
  3035                           	opt stack 0
  3036  000037                     __get_first_cluster@first_cluster:
  3037                           	opt stack 0
  3038  000037                     fat_get_file_information@data:
  3039                           	opt stack 0
  3040  000037                     fat_get_file_size@file_size:
  3041                           	opt stack 0
  3042                           
  3043                           ; 4 bytes @ 0x36
  3044  000037                     	ds	1
  3045  000038                     __get_empty_cluster@cluster:
  3046                           	opt stack 0
  3047  000038                     fat_get_empty_clusters@empty_clusters:
  3048                           	opt stack 0
  3049  000038                     fat_read_from_file_fast@start_byte:
  3050                           	opt stack 0
  3051                           
  3052                           ; 4 bytes @ 0x37
  3053  000038                     	ds	1
  3054  000039                     ??_fat_get_file_information:
  3055  000039                     __get_first_cluster@slot:
  3056                           	opt stack 0
  3057                           
  3058                           ; 1 bytes @ 0x38
  3059  000039                     	ds	1
  3060  00003A                     ??_MSDProcessCommandMediaPresent:
  3061  00003A                     fat_get_empty_clusters@cluster:
  3062                           	opt stack 0
  3063  00003A                     fat_delete_file@next_cluster:
  3064                           	opt stack 0
  3065  00003A                     fat_get_file_information@root_sector:
  3066                           	opt stack 0
  3067                           
  3068                           ; 2 bytes @ 0x39
  3069  00003A                     	ds	1
  3070  00003B                     fat_get_file_size@offset:
  3071                           	opt stack 0
  3072                           
  3073                           ; 2 bytes @ 0x3A
  3074  00003B                     	ds	1
  3075  00003C                     _MSDProcessCommandMediaPresent$2390:
  3076                           	opt stack 0
  3077  00003C                     fat_delete_file@first_cluster:
  3078                           	opt stack 0
  3079  00003C                     fat_get_file_information@offset:
  3080                           	opt stack 0
  3081  00003C                     fat_read_from_file_fast@length:
  3082                           	opt stack 0
  3083                           
  3084                           ; 4 bytes @ 0x3B
  3085  00003C                     	ds	1
  3086  00003D                     fat_get_file_size@file_number:
  3087                           	opt stack 0
  3088                           
  3089                           ; 1 bytes @ 0x3C
  3090  00003D                     	ds	1
  3091  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3092                           	opt stack 0
  3093  00003E                     fat_delete_file@file_number:
  3094                           	opt stack 0
  3095  00003E                     fat_get_file_information@file_number:
  3096                           	opt stack 0
  3097                           
  3098                           ; 1 bytes @ 0x3D
  3099  00003E                     	ds	1
  3100  00003F                     fat_find_file@slot:
  3101                           	opt stack 0
  3102  00003F                     fat_append_to_file@number_of_bytes:
  3103                           	opt stack 0
  3104  00003F                     fat_rename_file@name:
  3105                           	opt stack 0
  3106  00003F                     __fill_buffer_get_file_details@inBuffer:
  3107                           	opt stack 0
  3108  00003F                     __parse_file_delete@data:
  3109                           	opt stack 0
  3110  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3111                           	opt stack 0
  3112                           
  3113                           ; 4 bytes @ 0x3E
  3114  00003F                     	ds	1
  3115  000040                     fat_find_file@sector:
  3116                           	opt stack 0
  3117  000040                     fat_read_from_file_fast@data:
  3118                           	opt stack 0
  3119                           
  3120                           ; 2 bytes @ 0x3F
  3121  000040                     	ds	1
  3122  000041                     fat_append_to_file@data:
  3123                           	opt stack 0
  3124  000041                     fat_rename_file@extension:
  3125                           	opt stack 0
  3126  000041                     __fill_buffer_get_file_details@outBuffer:
  3127                           	opt stack 0
  3128                           
  3129                           ; 2 bytes @ 0x40
  3130  000041                     	ds	1
  3131  000042                     fat_find_file@offset:
  3132                           	opt stack 0
  3133  000042                     fat_read_from_file_fast@cluster:
  3134                           	opt stack 0
  3135                           
  3136                           ; 2 bytes @ 0x41
  3137  000042                     	ds	1
  3138  000043                     ??_fat_append_to_file:
  3139  000043                     __fill_buffer_get_file_details@file_number:
  3140                           	opt stack 0
  3141  000043                     __parse_file_rename@data:
  3142                           	opt stack 0
  3143  000043                     MSDProcessCommandMediaPresent@capacity:
  3144                           	opt stack 0
  3145                           
  3146                           ; 4 bytes @ 0x42
  3147  000043                     	ds	1
  3148  000044                     fat_create_file@name:
  3149                           	opt stack 0
  3150  000044                     fat_read_from_file_fast@cluster_number:
  3151                           	opt stack 0
  3152  000044                     __fill_buffer_find_file@inBuffer:
  3153                           	opt stack 0
  3154                           
  3155                           ; 2 bytes @ 0x43
  3156  000044                     	ds	1
  3157  000045                     
  3158                           ; 1 bytes @ 0x44
  3159  000045                     	ds	1
  3160  000046                     ??_fat_read_from_file_fast:
  3161  000046                     fat_create_file@extension:
  3162                           	opt stack 0
  3163  000046                     __fill_buffer_find_file@outBuffer:
  3164                           	opt stack 0
  3165                           
  3166                           ; 2 bytes @ 0x45
  3167  000046                     	ds	1
  3168  000047                     MSDProcessCommandMediaPresent@i:
  3169                           	opt stack 0
  3170                           
  3171                           ; 1 bytes @ 0x46
  3172  000047                     	ds	1
  3173  000048                     ??_MSDProcessCommand:
  3174  000048                     ??__fill_buffer_find_file:
  3175  000048                     fat_create_file@size:
  3176                           	opt stack 0
  3177                           
  3178                           ; 4 bytes @ 0x47
  3179  000048                     	ds	3
  3180  00004B                     __parse_file_append@data:
  3181                           	opt stack 0
  3182                           
  3183                           ; 2 bytes @ 0x4A
  3184  00004B                     	ds	1
  3185  00004C                     ??_fat_create_file:
  3186  00004C                     __fill_buffer_find_file@cntr:
  3187                           	opt stack 0
  3188                           
  3189                           ; 1 bytes @ 0x4B
  3190  00004C                     	ds	1
  3191  00004D                     ??__parse_file_append:
  3192  00004D                     ??_MSDTasks:
  3193                           
  3194                           ; 1 bytes @ 0x4C
  3195  00004D                     	ds	1
  3196  00004E                     _MSDTasks$2372:
  3197                           	opt stack 0
  3198                           
  3199                           ; 2 bytes @ 0x4D
  3200  00004E                     	ds	2
  3201  000050                     _MSDTasks$2373:
  3202                           	opt stack 0
  3203  000050                     __parse_file_create@data:
  3204                           	opt stack 0
  3205                           
  3206                           ; 2 bytes @ 0x4F
  3207  000050                     	ds	2
  3208  000052                     MSDTasks@i:
  3209                           	opt stack 0
  3210  000052                     fat_read_from_file_fast@sector:
  3211                           	opt stack 0
  3212                           
  3213                           ; 2 bytes @ 0x51
  3214  000052                     	ds	1
  3215  000053                     __parse_command_long@data:
  3216                           	opt stack 0
  3217                           
  3218                           ; 2 bytes @ 0x52
  3219  000053                     	ds	1
  3220  000054                     fat_read_from_file_fast@working_cluster:
  3221                           	opt stack 0
  3222                           
  3223                           ; 2 bytes @ 0x53
  3224  000054                     	ds	1
  3225  000055                     __parse_command_long@length:
  3226                           	opt stack 0
  3227                           
  3228                           ; 1 bytes @ 0x54
  3229  000055                     	ds	1
  3230  000056                     ??_api_parse:
  3231  000056                     fat_read_from_file_fast@offset:
  3232                           	opt stack 0
  3233                           
  3234                           ; 2 bytes @ 0x55
  3235  000056                     	ds	2
  3236  000058                     api_parse@idx:
  3237                           	opt stack 0
  3238  000058                     fat_read_from_file_fast@read_length:
  3239                           	opt stack 0
  3240                           
  3241                           ; 2 bytes @ 0x57
  3242  000058                     	ds	2
  3243  00005A                     fat_read_from_file_fast@position:
  3244                           	opt stack 0
  3245                           
  3246                           ; 4 bytes @ 0x59
  3247  00005A                     	ds	4
  3248  00005E                     bootloader_run@timeslot:
  3249                           	opt stack 0
  3250  00005E                     api_prepare@command:
  3251                           	opt stack 0
  3252                           
  3253                           ; 1 bytes @ 0x5D
  3254  00005E                     	ds	1
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           postinc0	equ	0xFEE
  3260                           wreg	equ	0xFE8
  3261                           postdec1	equ	0xFE5
  3262                           fsr1h	equ	0xFE2
  3263                           fsr1l	equ	0xFE1
  3264                           
  3265 ;;
  3266 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3267 ;;
  3268 ;; *************** function _main *****************
  3269 ;; Defined at:
  3270 ;;		line 54 in file "main.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;		None
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  tx_buffer       2   87[BANK0 ] PTR unsigned char 
  3275 ;;		 -> _spi_external_tx_buffer(64), 
  3276 ;;  rx_buffer       2   85[BANK0 ] PTR unsigned char 
  3277 ;;		 -> _spi_external_rx_buffer(64), 
  3278 ;;  bytes_transm    2   83[BANK0 ] unsigned int 
  3279 ;;  tx_start_add    2   81[BANK0 ] unsigned int 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3290 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3291 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3293 ;;Total ram usage:       10 bytes
  3294 ;; Hardware stack levels required when called:   12
  3295 ;; This function calls:
  3296 ;;		_APP_DeviceCustomHIDTasks
  3297 ;;		_APP_DeviceMSDTasks
  3298 ;;		_SYSTEM_Initialize
  3299 ;;		_USBDeviceInit
  3300 ;;		_USBDeviceTasks
  3301 ;;		__normal_mode
  3302 ;;		_api_parse
  3303 ;;		_api_prepare
  3304 ;;		_bootloader_run
  3305 ;;		_display_prepare
  3306 ;;		_display_update
  3307 ;;		_jump_to_main_program
  3308 ;;		_spi_get_external_rx_buffer
  3309 ;;		_spi_get_external_tx_buffer
  3310 ;;		_system_full_init
  3311 ;;		_system_minimal_init
  3312 ;;		_system_minimal_init_undo
  3313 ;;		_timer_pseudo_isr
  3314 ;;		_ui_get_status
  3315 ;;		_ui_run
  3316 ;; This function is called by:
  3317 ;;		Startup code after reset
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text0
  3322  003918                     __ptext0:
  3323                           	opt stack 0
  3324  003918                     _main:
  3325                           	opt stack 19
  3326                           
  3327                           ;main.c: 56: uint16_t bytes_transmitted;;main.c: 57: uint16_t tx_start_addr;;main.c: 59:
      +                           uint8_t *rx_buffer;;main.c: 60: uint8_t *tx_buffer;;main.c: 62: rx_buffer = spi_get_ext
      +                          ernal_rx_buffer();
  3328                           
  3329                           ;incstack = 0
  3330  003918  ECA8  F040         	call	_spi_get_external_rx_buffer	;wreg free
  3331  00391C  C001  F0B5         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3332  003920  C002  F0B6         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3333                           
  3334                           ;main.c: 63: tx_buffer = spi_get_external_tx_buffer();
  3335  003924  ECA3  F040         	call	_spi_get_external_tx_buffer	;wreg free
  3336  003928  C001  F0B7         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3337  00392C  C002  F0B8         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3338                           
  3339                           ;main.c: 64: tx_start_addr = (uint16_t) tx_buffer;
  3340  003930  C0B7  F0B1         	movff	main@tx_buffer,main@tx_start_addr
  3341  003934  C0B8  F0B2         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3342                           
  3343                           ;main.c: 68: system_minimal_init();
  3344  003938  EC77  F040         	call	_system_minimal_init	;wreg free
  3345                           
  3346                           ;main.c: 71: if(_normal_mode())
  3347  00393C  EC33  F038         	call	__normal_mode	;wreg free
  3348  003940  0900               	iorlw	0
  3349  003942  B4D8               	btfsc	status,2,c
  3350  003944  D004               	goto	l893
  3351                           
  3352                           ;main.c: 72: {;main.c: 74: system_minimal_init_undo();
  3353  003946  EC6F  F040         	call	_system_minimal_init_undo	;wreg free
  3354                           
  3355                           ;main.c: 75: jump_to_main_program();
  3356  00394A  ECF5  F040         	call	_jump_to_main_program	;wreg free
  3357  00394E                     l893:
  3358                           
  3359                           ;main.c: 76: };main.c: 80: system_full_init();
  3360  00394E  EC62  F038         	call	_system_full_init	;wreg free
  3361                           
  3362                           ;main.c: 84: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3363  003952  0E00               	movlw	0
  3364  003954  ECC9  F03A         	call	_SYSTEM_Initialize
  3365                           
  3366                           ;main.c: 85: USBDeviceInit();
  3367  003958  ECED  F01D         	call	_USBDeviceInit	;wreg free
  3368  00395C                     l894:
  3369  00395C  0004               	clrwdt		;# 
  3370                           
  3371                           ;main.c: 98: USBDeviceTasks();
  3372  00395E  EC16  F01B         	call	_USBDeviceTasks	;wreg free
  3373                           
  3374                           ;main.c: 99: APP_DeviceMSDTasks();
  3375  003962  EC4C  F040         	call	_APP_DeviceMSDTasks	;wreg free
  3376                           
  3377                           ;main.c: 100: APP_DeviceCustomHIDTasks();
  3378  003966  EC5C  F02D         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3379                           
  3380                           ;main.c: 104: timer_pseudo_isr();
  3381  00396A  EC72  F03D         	call	_timer_pseudo_isr	;wreg free
  3382                           
  3383                           ;main.c: 107: if(PORTDbits.RD2)
  3384  00396E  A483               	btfss	3971,2,c	;volatile
  3385  003970  D039               	goto	l896
  3386                           
  3387                           ;main.c: 108: {;main.c: 111: bytes_transmitted = TXADDRH;
  3388  003972  CF6A F0B3          	movff	3946,main@bytes_transmitted	;volatile
  3389  003976  0100               	movlb	0	; () banked
  3390  003978  6BB4               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;main.c: 112: bytes_transmitted <<= 8;
  3394  00397A  51B3               	movf	main@bytes_transmitted& (0+255),w,b
  3395  00397C  6FB4               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3396  00397E  6BB3               	clrf	main@bytes_transmitted& (0+255),b
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;main.c: 113: bytes_transmitted |= TXADDRL;
  3400  003980  506B               	movf	3947,w,c	;volatile
  3401  003982  13B3               	iorwf	main@bytes_transmitted& (0+255),f,b
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;main.c: 114: --bytes_transmitted;
  3405  003984  07B3               	decf	main@bytes_transmitted& (0+255),f,b
  3406  003986  A0D8               	btfss	status,0,c
  3407  003988  07B4               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;main.c: 115: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3411  00398A  ECA3  F040         	call	_spi_get_external_tx_buffer	;wreg free
  3412  00398E  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3413  003990  0100               	movlb	0	; () banked
  3414  003992  5FB3               	subwf	main@bytes_transmitted& (0+255),f,b
  3415  003994  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3416  003996  5BB4               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;main.c: 118: if(bytes_transmitted>0)
  3420  003998  51B3               	movf	main@bytes_transmitted& (0+255),w,b
  3421  00399A  11B4               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3422  00399C  B4D8               	btfsc	status,2,c
  3423  00399E  D022               	goto	l896
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;main.c: 119: {;main.c: 121: DMACON1bits.DMAEN = 0;
  3427  0039A0  9088               	bcf	3976,0,c	;volatile
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;main.c: 124: api_prepare(rx_buffer, tx_buffer);
  3431  0039A2  C0B5  F0A7         	movff	main@rx_buffer,api_prepare@inBuffer
  3432  0039A6  C0B6  F0A8         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3433  0039AA  C0B7  F0A9         	movff	main@tx_buffer,api_prepare@outBuffer
  3434  0039AE  C0B8  F0AA         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3435  0039B2  ECC7  F01F         	call	_api_prepare	;wreg free
  3436                           
  3437                           ;main.c: 125: api_parse(rx_buffer, (uint8_t) bytes_transmitted);
  3438  0039B6  C0B5  F093         	movff	main@rx_buffer,api_parse@inBuffer
  3439  0039BA  C0B6  F094         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3440  0039BE  C0B3  F095         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3441  0039C2  EC7A  F028         	call	_api_parse	;wreg free
  3442                           
  3443                           ;main.c: 128: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3444  0039C6  0100               	movlb	0	; () banked
  3445  0039C8  51B8               	movf	(main@tx_buffer+1)& (0+255),w,b
  3446  0039CA  6E6A               	movwf	3946,c	;volatile
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;main.c: 129: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3450  0039CC  C0B7  FF6B         	movff	main@tx_buffer,3947	;volatile
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;main.c: 132: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3454  0039D0  51B6               	movf	(main@rx_buffer+1)& (0+255),w,b
  3455  0039D2  6E68               	movwf	3944,c	;volatile
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;main.c: 133: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3459  0039D4  C0B5  FF69         	movff	main@rx_buffer,3945	;volatile
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;main.c: 136: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3463  0039D8  0E00               	movlw	0
  3464  0039DA  6E66               	movwf	3942,c	;volatile
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;main.c: 137: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  3468  0039DC  0E3F               	movlw	63
  3469  0039DE  6E67               	movwf	3943,c	;volatile
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;main.c: 140: PIR3bits.SSP2IF = 0;
  3473  0039E0  9EA4               	bcf	4004,7,c	;volatile
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;main.c: 142: DMACON1bits.DMAEN = 1;
  3477  0039E2  8088               	bsf	3976,0,c	;volatile
  3478  0039E4                     l896:
  3479                           
  3480                           ;main.c: 143: };main.c: 144: };main.c: 148: if(!os.done)
  3481                           
  3482                           ; BSR set to: 0
  3483                           
  3484                           ; BSR set to: 0
  3485  0039E4  0100               	movlb	0	; () banked
  3486  0039E6  51BC               	movf	(_os+3)& (0+255),w,b	;volatile
  3487  0039E8  A4D8               	btfss	status,2,c
  3488  0039EA  D7B8               	goto	l894
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;main.c: 149: {;main.c: 151: ui_run();
  3492  0039EC  EC75  F022         	call	_ui_run	;wreg free
  3493                           
  3494                           ;main.c: 156: switch(os.timeSlot&0b00000111)
  3495  0039F0  D025               	goto	l898
  3496  0039F2                     
  3497                           ;main.c: 159: bootloader_run(0);
  3498  0039F2  0E00               	movlw	0
  3499  0039F4  ECBE  F038         	call	_bootloader_run
  3500                           
  3501                           ;main.c: 160: break;
  3502  0039F8  D043               	goto	l900
  3503  0039FA                     
  3504                           ;main.c: 163: bootloader_run(1);
  3505  0039FA  0E01               	movlw	1
  3506  0039FC  ECBE  F038         	call	_bootloader_run
  3507                           
  3508                           ;main.c: 164: break;
  3509  003A00  D03F               	goto	l900
  3510  003A02                     
  3511                           ;main.c: 167: bootloader_run(2);
  3512  003A02  0E02               	movlw	2
  3513  003A04  ECBE  F038         	call	_bootloader_run
  3514                           
  3515                           ;main.c: 168: break;
  3516  003A08  D03B               	goto	l900
  3517  003A0A                     
  3518                           ;main.c: 171: bootloader_run(3);
  3519  003A0A  0E03               	movlw	3
  3520  003A0C  ECBE  F038         	call	_bootloader_run
  3521                           
  3522                           ;main.c: 172: break;
  3523  003A10  D037               	goto	l900
  3524  003A12                     
  3525                           ;main.c: 175: bootloader_run(4);
  3526  003A12  0E04               	movlw	4
  3527  003A14  ECBE  F038         	call	_bootloader_run
  3528                           
  3529                           ;main.c: 176: break;
  3530  003A18  D033               	goto	l900
  3531  003A1A                     
  3532                           ;main.c: 179: bootloader_run(5);
  3533  003A1A  0E05               	movlw	5
  3534  003A1C  ECBE  F038         	call	_bootloader_run
  3535                           
  3536                           ;main.c: 180: break;
  3537  003A20  D02F               	goto	l900
  3538  003A22                     
  3539                           ;main.c: 183: display_prepare(os.display_mode);
  3540  003A22  0100               	movlb	0	; () banked
  3541  003A24  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
  3542  003A26  ECE3  F028         	call	_display_prepare
  3543                           
  3544                           ;main.c: 184: break;
  3545  003A2A  D02A               	goto	l900
  3546  003A2C                     
  3547                           ;main.c: 187: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3548  003A2C  EC01  F041         	call	_ui_get_status	;wreg free
  3549  003A30  0A05               	xorlw	5
  3550  003A32  A4D8               	btfss	status,2,c
  3551  003A34  D025               	goto	l900
  3552                           
  3553                           ;main.c: 188: {;main.c: 189: display_update();
  3554  003A36  EC37  F036         	call	_display_update	;wreg free
  3555                           
  3556                           ;main.c: 192: }
  3557                           
  3558                           ;main.c: 190: };main.c: 191: break;
  3559  003A3A  D022               	goto	l900
  3560  003A3C                     l898:
  3561  003A3C  0100               	movlb	0	; () banked
  3562  003A3E  51BB               	movf	(_os+2)& (0+255),w,b	;volatile
  3563  003A40  0B07               	andlw	7
  3564  003A42  6FAF               	movwf	??_main& (0+255),b
  3565  003A44  6BB0               	clrf	(??_main+1)& (0+255),b
  3566                           
  3567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3568                           ; Switch size 1, requested type "space"
  3569                           ; Number of cases is 1, Range of values is 0 to 0
  3570                           ; switch strategies available:
  3571                           ; Name         Instructions Cycles
  3572                           ; simple_byte            4     3 (average)
  3573                           ;	Chosen strategy is simple_byte
  3574  003A46  51B0               	movf	(??_main+1)& (0+255),w,b
  3575  003A48  0A00               	xorlw	0	; case 0
  3576  003A4A  A4D8               	btfss	status,2,c
  3577  003A4C  D019               	goto	l900
  3578                           
  3579                           ; BSR set to: 0
  3580                           ; Switch size 1, requested type "space"
  3581                           ; Number of cases is 8, Range of values is 0 to 7
  3582                           ; switch strategies available:
  3583                           ; Name         Instructions Cycles
  3584                           ; simple_byte           25    13 (average)
  3585                           ;	Chosen strategy is simple_byte
  3586  003A4E  51AF               	movf	??_main& (0+255),w,b
  3587  003A50  0A00               	xorlw	0	; case 0
  3588  003A52  B4D8               	btfsc	status,2,c
  3589  003A54  D7CE               	goto	l899
  3590  003A56  0A01               	xorlw	1	; case 1
  3591  003A58  B4D8               	btfsc	status,2,c
  3592  003A5A  D7CF               	goto	l901
  3593  003A5C  0A03               	xorlw	3	; case 2
  3594  003A5E  B4D8               	btfsc	status,2,c
  3595  003A60  D7D0               	goto	l902
  3596  003A62  0A01               	xorlw	1	; case 3
  3597  003A64  B4D8               	btfsc	status,2,c
  3598  003A66  D7D1               	goto	l903
  3599  003A68  0A07               	xorlw	7	; case 4
  3600  003A6A  B4D8               	btfsc	status,2,c
  3601  003A6C  D7D2               	goto	l904
  3602  003A6E  0A01               	xorlw	1	; case 5
  3603  003A70  B4D8               	btfsc	status,2,c
  3604  003A72  D7D3               	goto	l905
  3605  003A74  0A03               	xorlw	3	; case 6
  3606  003A76  B4D8               	btfsc	status,2,c
  3607  003A78  D7D4               	goto	l906
  3608  003A7A  0A01               	xorlw	1	; case 7
  3609  003A7C  B4D8               	btfsc	status,2,c
  3610  003A7E  D7D6               	goto	l907
  3611  003A80                     l900:
  3612                           
  3613                           ;main.c: 193: os.done = 1;
  3614                           
  3615                           ; BSR set to: 0
  3616  003A80  0E01               	movlw	1
  3617  003A82  0100               	movlb	0	; () banked
  3618  003A84  6FBC               	movwf	(_os+3)& (0+255),b	;volatile
  3619                           
  3620                           ; BSR set to: 0
  3621                           
  3622                           ; BSR set to: 0
  3623  003A86  D76A               	goto	l894
  3624  003A88                     __end_of_main:
  3625                           	opt stack 0
  3626                           tblptru	equ	0xFF8
  3627                           tblptrh	equ	0xFF7
  3628                           tblptrl	equ	0xFF6
  3629                           tablat	equ	0xFF5
  3630                           postinc0	equ	0xFEE
  3631                           wreg	equ	0xFE8
  3632                           postdec1	equ	0xFE5
  3633                           fsr1h	equ	0xFE2
  3634                           fsr1l	equ	0xFE1
  3635                           status	equ	0xFD8
  3636                           
  3637 ;; *************** function _ui_run *****************
  3638 ;; Defined at:
  3639 ;;		line 110 in file "ui.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;		None
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;		None
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;Total ram usage:        0 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    9
  3660 ;; This function calls:
  3661 ;;		__ui_encoder
  3662 ;;		_i2c_digipot_backlight
  3663 ;;		_i2c_digipot_reset_off
  3664 ;;		_i2c_digipot_reset_on
  3665 ;;		_i2c_display_send_init_sequence
  3666 ;;		_system_encoder_enable
  3667 ;;		_ui_init
  3668 ;; This function is called by:
  3669 ;;		_main
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text1
  3674  0044EA                     __ptext1:
  3675                           	opt stack 0
  3676  0044EA                     _ui_run:
  3677                           	opt stack 21
  3678                           
  3679                           ;ui.c: 112: switch(userInterfaceStatus)
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;incstack = 0
  3683  0044EA  D06D               	goto	l1319
  3684  0044EC                     
  3685                           ;ui.c: 116: if (os.buttonCount!=0)
  3686  0044EC  0100               	movlb	0	; () banked
  3687  0044EE  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  3688  0044F0  B4D8               	btfsc	status,2,c
  3689  0044F2  0012               	return	
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;ui.c: 117: {;ui.c: 118: ui_init();
  3693  0044F4  EC42  F040         	call	_ui_init	;wreg free
  3694                           
  3695                           ;ui.c: 119: os.buttonCount = 0;
  3696  0044F8  0E00               	movlw	0
  3697  0044FA  0100               	movlb	0	; () banked
  3698  0044FC  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;ui.c: 120: };ui.c: 121: break;
  3702  0044FE  0012               	return	
  3703  004500                     l1323:
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;ui.c: 125: LATDbits.LD0 = 0;
  3707  004500  908C               	bcf	3980,0,c	;volatile
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;ui.c: 127: system_ui_inactive_count = 0;
  3711  004502  0E00               	movlw	0
  3712  004504  0101               	movlb	1	; () banked
  3713  004506  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3714  004508  0E00               	movlw	0
  3715  00450A  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3716                           
  3717                           ;ui.c: 128: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3718  00450C  0E02               	movlw	2
  3719  00450E  0100               	movlb	0	; () banked
  3720  004510  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3721                           
  3722                           ;ui.c: 129: break;
  3723  004512  0012               	return	
  3724  004514                     
  3725                           ; BSR set to: 0
  3726                           ;ui.c: 133: i2c_digipot_reset_on();
  3727                           
  3728                           ; BSR set to: 0
  3729  004514  EC89  F03F         	call	_i2c_digipot_reset_on	;wreg free
  3730                           
  3731                           ;ui.c: 135: system_ui_inactive_count = 0;
  3732  004518  0E00               	movlw	0
  3733  00451A  0101               	movlb	1	; () banked
  3734  00451C  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3735  00451E  0E00               	movlw	0
  3736  004520  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3737                           
  3738                           ; BSR set to: 1
  3739                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3740  004522  0E03               	movlw	3
  3741  004524  0100               	movlb	0	; () banked
  3742  004526  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3743                           
  3744                           ;ui.c: 137: break;
  3745  004528  0012               	return	
  3746  00452A                     
  3747                           ; BSR set to: 0
  3748                           ;ui.c: 140: ++system_ui_inactive_count;
  3749                           
  3750                           ; BSR set to: 0
  3751  00452A  0101               	movlb	1	; () banked
  3752  00452C  4B78               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3753  00452E  2B79               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3754                           
  3755                           ; BSR set to: 1
  3756                           ;ui.c: 142: if (system_ui_inactive_count>3)
  3757  004530  5179               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3758  004532  E104               	bnz	u11760
  3759  004534  0E04               	movlw	4
  3760  004536  5D78               	subwf	_system_ui_inactive_count& (0+255),w,b
  3761  004538  A0D8               	btfss	status,0,c
  3762  00453A  0012               	return	
  3763  00453C                     u11760:
  3764                           
  3765                           ; BSR set to: 1
  3766                           ;ui.c: 143: {;ui.c: 144: i2c_digipot_reset_off();
  3767  00453C  EC9A  F03F         	call	_i2c_digipot_reset_off	;wreg free
  3768                           
  3769                           ;ui.c: 145: system_ui_inactive_count = 0;
  3770  004540  0E00               	movlw	0
  3771  004542  0101               	movlb	1	; () banked
  3772  004544  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3773  004546  0E00               	movlw	0
  3774  004548  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3775                           
  3776                           ; BSR set to: 1
  3777                           ;ui.c: 146: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3778  00454A  0E04               	movlw	4
  3779  00454C  0100               	movlb	0	; () banked
  3780  00454E  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;ui.c: 147: };ui.c: 148: break;
  3784  004550  0012               	return	
  3785  004552                     
  3786                           ; BSR set to: 0
  3787                           ;ui.c: 152: i2c_display_send_init_sequence();
  3788                           
  3789                           ; BSR set to: 0
  3790  004552  EC85  F03E         	call	_i2c_display_send_init_sequence	;wreg free
  3791                           
  3792                           ;ui.c: 154: i2c_digipot_backlight(150);
  3793  004556  0E96               	movlw	150
  3794  004558  EC1A  F03F         	call	_i2c_digipot_backlight
  3795                           
  3796                           ;ui.c: 156: system_encoder_enable();
  3797  00455C  EC67  F040         	call	_system_encoder_enable	;wreg free
  3798                           
  3799                           ;ui.c: 158: system_ui_inactive_count = 0;
  3800  004560  0E00               	movlw	0
  3801  004562  0101               	movlb	1	; () banked
  3802  004564  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3803  004566  0E00               	movlw	0
  3804  004568  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3805                           
  3806                           ; BSR set to: 1
  3807                           ;ui.c: 159: startup_timer = 0;
  3808  00456A  0E00               	movlw	0
  3809  00456C  6F77               	movwf	(_startup_timer+1)& (0+255),b
  3810  00456E  0E00               	movlw	0
  3811  004570  6F76               	movwf	_startup_timer& (0+255),b
  3812                           
  3813                           ; BSR set to: 1
  3814                           ;ui.c: 160: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3815  004572  0E05               	movlw	5
  3816  004574  0100               	movlb	0	; () banked
  3817  004576  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  3818                           
  3819                           ;ui.c: 161: break;
  3820  004578  0012               	return	
  3821  00457A                     
  3822                           ; BSR set to: 0
  3823                           ;ui.c: 164: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  3824                           
  3825                           ; BSR set to: 0
  3826  00457A  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
  3827  00457C  A4D8               	btfss	status,2,c
  3828  00457E  D00B               	goto	l1330
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;ui.c: 165: {;ui.c: 166: ++startup_timer;
  3832  004580  0101               	movlb	1	; () banked
  3833  004582  4B76               	infsnz	_startup_timer& (0+255),f,b
  3834  004584  2B77               	incf	(_startup_timer+1)& (0+255),f,b
  3835                           
  3836                           ; BSR set to: 1
  3837                           ;ui.c: 167: if(startup_timer==250)
  3838  004586  0EFA               	movlw	250
  3839  004588  1976               	xorwf	_startup_timer& (0+255),w,b
  3840  00458A  1177               	iorwf	(_startup_timer+1)& (0+255),w,b
  3841  00458C  A4D8               	btfss	status,2,c
  3842  00458E  D003               	goto	l1330
  3843                           
  3844                           ; BSR set to: 1
  3845                           ;ui.c: 168: {;ui.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  3846  004590  0E10               	movlw	16
  3847  004592  0100               	movlb	0	; () banked
  3848  004594  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  3849  004596                     l1330:
  3850                           
  3851                           ;ui.c: 170: };ui.c: 171: };ui.c: 172: if (os.encoderCount==0 && os.buttonCount==0)
  3852                           
  3853                           ; BSR set to: 0
  3854  004596  0100               	movlb	0	; () banked
  3855  004598  51B9               	movf	_os& (0+255),w,b	;volatile
  3856  00459A  A4D8               	btfss	status,2,c
  3857  00459C  D00C               	goto	l1331
  3858                           
  3859                           ; BSR set to: 0
  3860  00459E  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  3861  0045A0  A4D8               	btfss	status,2,c
  3862  0045A2  D009               	goto	l1331
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;ui.c: 173: {;ui.c: 174: if(system_ui_inactive_count<0xFFFF)
  3866  0045A4  0101               	movlb	1	; () banked
  3867  0045A6  2978               	incf	_system_ui_inactive_count& (0+255),w,b
  3868  0045A8  E103               	bnz	u11810
  3869  0045AA  2979               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3870  0045AC  B4D8               	btfsc	status,2,c
  3871  0045AE  0012               	return	
  3872  0045B0                     u11810:
  3873                           
  3874                           ; BSR set to: 1
  3875                           ;ui.c: 175: ++system_ui_inactive_count;
  3876  0045B0  4B78               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3877  0045B2  2B79               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3878                           
  3879                           ; BSR set to: 1
  3880                           ;ui.c: 176: }
  3881  0045B4  0012               	return	
  3882  0045B6                     l1331:
  3883                           
  3884                           ;ui.c: 177: else;ui.c: 178: {;ui.c: 179: system_ui_inactive_count = 0;
  3885                           
  3886                           ; BSR set to: 1
  3887  0045B6  0E00               	movlw	0
  3888  0045B8  0101               	movlb	1	; () banked
  3889  0045BA  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3890  0045BC  0E00               	movlw	0
  3891  0045BE  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  3892                           
  3893                           ; BSR set to: 1
  3894                           ;ui.c: 180: _ui_encoder();
  3895  0045C0  ECC3  F026         	call	__ui_encoder	;wreg free
  3896                           
  3897                           ;ui.c: 183: }
  3898                           
  3899                           ;ui.c: 181: };ui.c: 182: break;
  3900  0045C4  0012               	return	
  3901  0045C6                     l1319:
  3902  0045C6  0100               	movlb	0	; () banked
  3903  0045C8  51E0               	movf	_userInterfaceStatus& (0+255),w,b
  3904                           
  3905                           ; Switch size 1, requested type "space"
  3906                           ; Number of cases is 6, Range of values is 0 to 5
  3907                           ; switch strategies available:
  3908                           ; Name         Instructions Cycles
  3909                           ; simple_byte           19    10 (average)
  3910                           ;	Chosen strategy is simple_byte
  3911  0045CA  0A00               	xorlw	0	; case 0
  3912  0045CC  B4D8               	btfsc	status,2,c
  3913  0045CE  D78E               	goto	l1320
  3914  0045D0  0A01               	xorlw	1	; case 1
  3915  0045D2  B4D8               	btfsc	status,2,c
  3916  0045D4  D795               	goto	l1323
  3917  0045D6  0A03               	xorlw	3	; case 2
  3918  0045D8  B4D8               	btfsc	status,2,c
  3919  0045DA  D79C               	goto	l1324
  3920  0045DC  0A01               	xorlw	1	; case 3
  3921  0045DE  B4D8               	btfsc	status,2,c
  3922  0045E0  D7A4               	goto	l1325
  3923  0045E2  0A07               	xorlw	7	; case 4
  3924  0045E4  B4D8               	btfsc	status,2,c
  3925  0045E6  D7B5               	goto	l1327
  3926  0045E8  0A01               	xorlw	1	; case 5
  3927  0045EA  A4D8               	btfss	status,2,c
  3928  0045EC  0012               	return	
  3929  0045EE  D7C5               	goto	l1328
  3930  0045F0                     __end_of_ui_run:
  3931                           	opt stack 0
  3932                           tblptru	equ	0xFF8
  3933                           tblptrh	equ	0xFF7
  3934                           tblptrl	equ	0xFF6
  3935                           tablat	equ	0xFF5
  3936                           postinc0	equ	0xFEE
  3937                           wreg	equ	0xFE8
  3938                           postdec1	equ	0xFE5
  3939                           fsr1h	equ	0xFE2
  3940                           fsr1l	equ	0xFE1
  3941                           status	equ	0xFD8
  3942                           
  3943 ;; *************** function _system_encoder_enable *****************
  3944 ;; Defined at:
  3945 ;;		line 96 in file "os.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_ui_run
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text2
  3973  0080CE                     __ptext2:
  3974                           	opt stack 0
  3975  0080CE                     _system_encoder_enable:
  3976                           	opt stack 29
  3977                           
  3978                           ;os.c: 99: INTCON3bits.INT2IF = 0;
  3979                           
  3980                           ;incstack = 0
  3981  0080CE  92F0               	bcf	intcon3,1,c	;volatile
  3982                           
  3983                           ;os.c: 100: INTCON3bits.INT3IF = 0;
  3984  0080D0  94F0               	bcf	intcon3,2,c	;volatile
  3985                           
  3986                           ;os.c: 103: os.encoderCount = 0;
  3987  0080D2  0E00               	movlw	0
  3988  0080D4  0100               	movlb	0	; () banked
  3989  0080D6  6FB9               	movwf	_os& (0+255),b	;volatile
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;os.c: 106: INTCON3bits.INT2IE = 1;
  3993  0080D8  88F0               	bsf	intcon3,4,c	;volatile
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;os.c: 107: INTCON3bits.INT3IE = 1;
  3997  0080DA  8AF0               	bsf	intcon3,5,c	;volatile
  3998                           
  3999                           ; BSR set to: 0
  4000  0080DC  0012               	return		;funcret
  4001  0080DE                     __end_of_system_encoder_enable:
  4002                           	opt stack 0
  4003                           tblptru	equ	0xFF8
  4004                           tblptrh	equ	0xFF7
  4005                           tblptrl	equ	0xFF6
  4006                           tablat	equ	0xFF5
  4007                           intcon3	equ	0xFF0
  4008                           postinc0	equ	0xFEE
  4009                           wreg	equ	0xFE8
  4010                           postdec1	equ	0xFE5
  4011                           fsr1h	equ	0xFE2
  4012                           fsr1l	equ	0xFE1
  4013                           status	equ	0xFD8
  4014                           
  4015 ;; *************** function _i2c_display_send_init_sequence *****************
  4016 ;; Defined at:
  4017 ;;		line 207 in file "i2c.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;		None
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4032 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;Total ram usage:        9 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    2
  4038 ;; This function calls:
  4039 ;;		__i2c_write
  4040 ;;		_i2c_set_frequency
  4041 ;; This function is called by:
  4042 ;;		_ui_run
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text3
  4047  007D0A                     __ptext3:
  4048                           	opt stack 0
  4049  007D0A                     _i2c_display_send_init_sequence:
  4050                           	opt stack 27
  4051                           
  4052                           ;i2c.c: 209: uint8_t init_sequence[9] = {;i2c.c: 210: 0x3A,;i2c.c: 212: 0b00011110,;i2c.
      +                          c: 213: 0x39,;i2c.c: 215: 0b00001100,;i2c.c: 216: 0x74,;i2c.c: 217: 0b1011100,;i2c.c: 21
      +                          8: 0x6d,;i2c.c: 219: 0x0c,;i2c.c: 220: 0x01;i2c.c: 221: };
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;incstack = 0
  4056  007D0A  EE21  F0EC         	lfsr	2,i2c_display_send_init_sequence@F6808
  4057  007D0E  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  4058  007D12  0E08               	movlw	8
  4059  007D14                     u11021:
  4060  007D14  CFDB FFE3          	movff	plusw2,plusw1
  4061  007D18  06E8               	decf	wreg,f,c
  4062  007D1A  E2FC               	bc	u11021
  4063                           
  4064                           ;i2c.c: 224: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4065  007D1C  0E00               	movlw	0
  4066  007D1E  ECC7  F03E         	call	_i2c_set_frequency
  4067                           
  4068                           ;i2c.c: 227: _i2c_write(0b01111000, &init_sequence[0], 9);
  4069  007D22  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  4070  007D24  6E06               	movwf	__i2c_write@data,c
  4071  007D26  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  4072  007D28  6E07               	movwf	__i2c_write@data+1,c
  4073  007D2A  0E09               	movlw	9
  4074  007D2C  6E08               	movwf	__i2c_write@length,c
  4075  007D2E  0E78               	movlw	120
  4076  007D30  ECB9  F03B         	call	__i2c_write
  4077  007D34  0012               	return		;funcret
  4078  007D36                     __end_of_i2c_display_send_init_sequence:
  4079                           	opt stack 0
  4080                           tblptru	equ	0xFF8
  4081                           tblptrh	equ	0xFF7
  4082                           tblptrl	equ	0xFF6
  4083                           tablat	equ	0xFF5
  4084                           intcon3	equ	0xFF0
  4085                           postinc0	equ	0xFEE
  4086                           wreg	equ	0xFE8
  4087                           postdec1	equ	0xFE5
  4088                           plusw1	equ	0xFE3
  4089                           fsr1h	equ	0xFE2
  4090                           fsr1l	equ	0xFE1
  4091                           plusw2	equ	0xFDB
  4092                           status	equ	0xFD8
  4093                           
  4094 ;; *************** function _i2c_digipot_reset_on *****************
  4095 ;; Defined at:
  4096 ;;		line 310 in file "i2c.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;		None
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      void 
  4103 ;; Registers used:
  4104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4114 ;;Total ram usage:        2 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    2
  4117 ;; This function calls:
  4118 ;;		__i2c_write
  4119 ;;		_i2c_set_frequency
  4120 ;; This function is called by:
  4121 ;;		_ui_run
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text4
  4126  007F12                     __ptext4:
  4127                           	opt stack 0
  4128  007F12                     _i2c_digipot_reset_on:
  4129                           	opt stack 27
  4130                           
  4131                           ;i2c.c: 312: uint8_t data_array[2];;i2c.c: 313: data_array[0] = 0x10 | 0x00;
  4132                           
  4133                           ;incstack = 0
  4134  007F12  0E10               	movlw	16
  4135  007F14  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4136                           
  4137                           ;i2c.c: 315: data_array[1] = 0x00;
  4138  007F16  0E00               	movlw	0
  4139  007F18  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4140                           
  4141                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4142  007F1A  0E02               	movlw	2
  4143  007F1C  ECC7  F03E         	call	_i2c_set_frequency
  4144                           
  4145                           ;i2c.c: 320: _i2c_write(0b01011100, &data_array[0], 2);
  4146  007F20  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4147  007F22  6E06               	movwf	__i2c_write@data,c
  4148  007F24  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4149  007F26  6E07               	movwf	__i2c_write@data+1,c
  4150  007F28  0E02               	movlw	2
  4151  007F2A  6E08               	movwf	__i2c_write@length,c
  4152  007F2C  0E5C               	movlw	92
  4153  007F2E  ECB9  F03B         	call	__i2c_write
  4154  007F32  0012               	return		;funcret
  4155  007F34                     __end_of_i2c_digipot_reset_on:
  4156                           	opt stack 0
  4157                           tblptru	equ	0xFF8
  4158                           tblptrh	equ	0xFF7
  4159                           tblptrl	equ	0xFF6
  4160                           tablat	equ	0xFF5
  4161                           intcon3	equ	0xFF0
  4162                           postinc0	equ	0xFEE
  4163                           wreg	equ	0xFE8
  4164                           postdec1	equ	0xFE5
  4165                           plusw1	equ	0xFE3
  4166                           fsr1h	equ	0xFE2
  4167                           fsr1l	equ	0xFE1
  4168                           plusw2	equ	0xFDB
  4169                           status	equ	0xFD8
  4170                           
  4171 ;; *************** function _i2c_digipot_reset_off *****************
  4172 ;; Defined at:
  4173 ;;		line 323 in file "i2c.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4190 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4191 ;;Total ram usage:        2 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:    2
  4194 ;; This function calls:
  4195 ;;		__i2c_write
  4196 ;;		_i2c_set_frequency
  4197 ;; This function is called by:
  4198 ;;		_ui_run
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text5
  4203  007F34                     __ptext5:
  4204                           	opt stack 0
  4205  007F34                     _i2c_digipot_reset_off:
  4206                           	opt stack 27
  4207                           
  4208                           ;i2c.c: 325: uint8_t data_array[2];;i2c.c: 326: data_array[0] = 0x10 | 0x00;
  4209                           
  4210                           ;incstack = 0
  4211  007F34  0E10               	movlw	16
  4212  007F36  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4213                           
  4214                           ;i2c.c: 327: data_array[1] = 0x80;
  4215  007F38  0E80               	movlw	128
  4216  007F3A  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4217                           
  4218                           ;i2c.c: 330: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4219  007F3C  0E02               	movlw	2
  4220  007F3E  ECC7  F03E         	call	_i2c_set_frequency
  4221                           
  4222                           ;i2c.c: 332: _i2c_write(0b01011100, &data_array[0], 2);
  4223  007F42  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4224  007F44  6E06               	movwf	__i2c_write@data,c
  4225  007F46  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4226  007F48  6E07               	movwf	__i2c_write@data+1,c
  4227  007F4A  0E02               	movlw	2
  4228  007F4C  6E08               	movwf	__i2c_write@length,c
  4229  007F4E  0E5C               	movlw	92
  4230  007F50  ECB9  F03B         	call	__i2c_write
  4231  007F54  0012               	return		;funcret
  4232  007F56                     __end_of_i2c_digipot_reset_off:
  4233                           	opt stack 0
  4234                           tblptru	equ	0xFF8
  4235                           tblptrh	equ	0xFF7
  4236                           tblptrl	equ	0xFF6
  4237                           tablat	equ	0xFF5
  4238                           intcon3	equ	0xFF0
  4239                           postinc0	equ	0xFEE
  4240                           wreg	equ	0xFE8
  4241                           postdec1	equ	0xFE5
  4242                           plusw1	equ	0xFE3
  4243                           fsr1h	equ	0xFE2
  4244                           fsr1l	equ	0xFE1
  4245                           plusw2	equ	0xFDB
  4246                           status	equ	0xFD8
  4247                           
  4248 ;; *************** function _i2c_digipot_backlight *****************
  4249 ;; Defined at:
  4250 ;;		line 335 in file "i2c.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  level           1    wreg     unsigned char 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  level           1   10[COMRAM] unsigned char 
  4255 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4268 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;Total ram usage:        3 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    2
  4272 ;; This function calls:
  4273 ;;		__i2c_write
  4274 ;;		_i2c_set_frequency
  4275 ;; This function is called by:
  4276 ;;		_ui_run
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text6
  4281  007E34                     __ptext6:
  4282                           	opt stack 0
  4283  007E34                     _i2c_digipot_backlight:
  4284                           	opt stack 27
  4285                           
  4286                           ;incstack = 0
  4287                           ;i2c_digipot_backlight@level stored from wreg
  4288  007E34  6E0B               	movwf	i2c_digipot_backlight@level,c
  4289                           
  4290                           ;i2c.c: 337: uint8_t data_array[2];;i2c.c: 338: data_array[0] = 0x00 | 0x00;
  4291  007E36  0E00               	movlw	0
  4292  007E38  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4293                           
  4294                           ;i2c.c: 339: data_array[1] = level>>1;
  4295  007E3A  90D8               	bcf	status,0,c
  4296  007E3C  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4297  007E3E  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4298                           
  4299                           ;i2c.c: 342: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4300  007E40  0E02               	movlw	2
  4301  007E42  ECC7  F03E         	call	_i2c_set_frequency
  4302                           
  4303                           ;i2c.c: 344: _i2c_write(0b01011100, &data_array[0], 2);
  4304  007E46  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4305  007E48  6E06               	movwf	__i2c_write@data,c
  4306  007E4A  0E00               	movlw	high i2c_digipot_backlight@data_array
  4307  007E4C  6E07               	movwf	__i2c_write@data+1,c
  4308  007E4E  0E02               	movlw	2
  4309  007E50  6E08               	movwf	__i2c_write@length,c
  4310  007E52  0E5C               	movlw	92
  4311  007E54  ECB9  F03B         	call	__i2c_write
  4312  007E58  0012               	return		;funcret
  4313  007E5A                     __end_of_i2c_digipot_backlight:
  4314                           	opt stack 0
  4315                           tblptru	equ	0xFF8
  4316                           tblptrh	equ	0xFF7
  4317                           tblptrl	equ	0xFF6
  4318                           tablat	equ	0xFF5
  4319                           intcon3	equ	0xFF0
  4320                           postinc0	equ	0xFEE
  4321                           wreg	equ	0xFE8
  4322                           postdec1	equ	0xFE5
  4323                           plusw1	equ	0xFE3
  4324                           fsr1h	equ	0xFE2
  4325                           fsr1l	equ	0xFE1
  4326                           plusw2	equ	0xFDB
  4327                           status	equ	0xFD8
  4328                           
  4329 ;; *************** function __ui_encoder *****************
  4330 ;; Defined at:
  4331 ;;		line 22 in file "ui.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;		None
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;		None
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      void 
  4338 ;; Registers used:
  4339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4349 ;;Total ram usage:        0 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    8
  4352 ;; This function calls:
  4353 ;;		_i2c_eeprom_writeByte
  4354 ;;		_reboot
  4355 ;;		_system_delay_ms
  4356 ;; This function is called by:
  4357 ;;		_ui_run
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text7
  4362  004D86                     __ptext7:
  4363                           	opt stack 0
  4364  004D86                     __ui_encoder:
  4365                           	opt stack 21
  4366                           
  4367                           ;ui.c: 24: switch(os.display_mode)
  4368                           
  4369                           ;incstack = 0
  4370  004D86  D054               	goto	l1292
  4371  004D88                     
  4372                           ;ui.c: 27: if(os.buttonCount>0)
  4373  004D88  0100               	movlb	0	; () banked
  4374  004D8A  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4375  004D8C  0A80               	xorlw	128
  4376  004D8E  0F7F               	addlw	-129
  4377  004D90  A0D8               	btfss	status,0,c
  4378  004D92  0012               	return	
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;ui.c: 28: {;ui.c: 29: os.buttonCount = 0;
  4382  004D94  0E00               	movlw	0
  4383  004D96  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;ui.c: 30: };ui.c: 31: break;
  4387  004D98  0012               	return	
  4388  004D9A                     
  4389                           ; BSR set to: 0
  4390                           ;ui.c: 34: if(os.buttonCount>0)
  4391                           
  4392                           ; BSR set to: 0
  4393  004D9A  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4394  004D9C  0A80               	xorlw	128
  4395  004D9E  0F7F               	addlw	-129
  4396  004DA0  A0D8               	btfss	status,0,c
  4397  004DA2  0012               	return	
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;ui.c: 35: {;ui.c: 36: os.buttonCount = 0;
  4401  004DA4  0E00               	movlw	0
  4402  004DA6  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;ui.c: 37: };ui.c: 38: break;
  4406  004DA8  0012               	return	
  4407  004DAA                     
  4408                           ; BSR set to: 0
  4409                           ;ui.c: 41: if(os.buttonCount>0)
  4410                           
  4411                           ; BSR set to: 0
  4412  004DAA  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4413  004DAC  0A80               	xorlw	128
  4414  004DAE  0F7F               	addlw	-129
  4415  004DB0  A0D8               	btfss	status,0,c
  4416  004DB2  0012               	return	
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;ui.c: 42: {;ui.c: 43: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4420  004DB4  0E30               	movlw	48
  4421  004DB6  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  4422                           
  4423                           ;ui.c: 44: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4424  004DB8  0E30               	movlw	48
  4425  004DBA  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  4426                           
  4427                           ;ui.c: 45: os.buttonCount = 0;
  4428  004DBC  0E00               	movlw	0
  4429  004DBE  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;ui.c: 46: };ui.c: 47: break;
  4433  004DC0  0012               	return	
  4434  004DC2                     
  4435                           ; BSR set to: 0
  4436                           ;ui.c: 50: if(os.buttonCount>0)
  4437                           
  4438                           ; BSR set to: 0
  4439  004DC2  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4440  004DC4  0A80               	xorlw	128
  4441  004DC6  0F7F               	addlw	-129
  4442  004DC8  A0D8               	btfss	status,0,c
  4443  004DCA  0012               	return	
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;ui.c: 51: {;ui.c: 52: os.buttonCount = 0;
  4447  004DCC  0E00               	movlw	0
  4448  004DCE  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;ui.c: 53: };ui.c: 54: break;
  4452  004DD0  0012               	return	
  4453  004DD2                     
  4454                           ; BSR set to: 0
  4455                           ;ui.c: 57: if(os.buttonCount>0)
  4456                           
  4457                           ; BSR set to: 0
  4458  004DD2  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4459  004DD4  0A80               	xorlw	128
  4460  004DD6  0F7F               	addlw	-129
  4461  004DD8  A0D8               	btfss	status,0,c
  4462  004DDA  0012               	return	
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;ui.c: 58: {;ui.c: 59: os.buttonCount = 0;
  4466  004DDC  0E00               	movlw	0
  4467  004DDE  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;ui.c: 60: };ui.c: 61: break;
  4471  004DE0  0012               	return	
  4472  004DE2                     
  4473                           ; BSR set to: 0
  4474                           ;ui.c: 64: if(os.buttonCount>0)
  4475                           
  4476                           ; BSR set to: 0
  4477  004DE2  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4478  004DE4  0A80               	xorlw	128
  4479  004DE6  0F7F               	addlw	-129
  4480  004DE8  A0D8               	btfss	status,0,c
  4481  004DEA  0012               	return	
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;ui.c: 65: {;ui.c: 66: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4485  004DEC  0E60               	movlw	96
  4486  004DEE  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  4487                           
  4488                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4489  004DF0  0E60               	movlw	96
  4490  004DF2  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  4491                           
  4492                           ;ui.c: 68: os.buttonCount = 0;
  4493  004DF4  0E00               	movlw	0
  4494  004DF6  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;ui.c: 69: };ui.c: 70: break;
  4498  004DF8  0012               	return	
  4499  004DFA                     
  4500                           ; BSR set to: 0
  4501                           ;ui.c: 73: if(os.buttonCount>0)
  4502                           
  4503                           ; BSR set to: 0
  4504  004DFA  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4505  004DFC  0A80               	xorlw	128
  4506  004DFE  0F7F               	addlw	-129
  4507  004E00  A0D8               	btfss	status,0,c
  4508  004E02  0012               	return	
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;ui.c: 74: {;ui.c: 75: os.buttonCount = 0;
  4512  004E04  0E00               	movlw	0
  4513  004E06  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;ui.c: 76: };ui.c: 77: break;
  4517  004E08  0012               	return	
  4518  004E0A                     
  4519                           ; BSR set to: 0
  4520                           ;ui.c: 80: if(os.buttonCount>0)
  4521                           
  4522                           ; BSR set to: 0
  4523  004E0A  51BA               	movf	(_os+1)& (0+255),w,b	;volatile
  4524  004E0C  0A80               	xorlw	128
  4525  004E0E  0F7F               	addlw	-129
  4526  004E10  A0D8               	btfss	status,0,c
  4527  004E12  0012               	return	
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;ui.c: 81: {;ui.c: 82: i2c_eeprom_writeByte(0x100, 0x78);
  4531  004E14  0E01               	movlw	1
  4532  004E16  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  4533  004E18  0E00               	movlw	0
  4534  004E1A  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  4535  004E1C  0E78               	movlw	120
  4536  004E1E  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  4537  004E20  EC86  F03C         	call	_i2c_eeprom_writeByte	;wreg free
  4538                           
  4539                           ;ui.c: 83: system_delay_ms(10);
  4540  004E24  0E0A               	movlw	10
  4541  004E26  EC53  F03F         	call	_system_delay_ms
  4542                           
  4543                           ;ui.c: 84: reboot();
  4544  004E2A  EC13  F040         	call	_reboot	;wreg free
  4545                           
  4546                           ;ui.c: 87: }
  4547                           
  4548                           ;ui.c: 85: };ui.c: 86: break;
  4549  004E2E  0012               	return	
  4550  004E30                     l1292:
  4551  004E30  0100               	movlb	0	; () banked
  4552  004E32  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
  4553                           
  4554                           ; Switch size 1, requested type "space"
  4555                           ; Number of cases is 8, Range of values is 0 to 112
  4556                           ; switch strategies available:
  4557                           ; Name         Instructions Cycles
  4558                           ; simple_byte           25    13 (average)
  4559                           ;	Chosen strategy is simple_byte
  4560  004E34  0A00               	xorlw	0	; case 0
  4561  004E36  B4D8               	btfsc	status,2,c
  4562  004E38  D7A7               	goto	l1293
  4563  004E3A  0A10               	xorlw	16	; case 16
  4564  004E3C  B4D8               	btfsc	status,2,c
  4565  004E3E  D7AD               	goto	l1296
  4566  004E40  0A30               	xorlw	48	; case 32
  4567  004E42  B4D8               	btfsc	status,2,c
  4568  004E44  D7B2               	goto	l1298
  4569  004E46  0A10               	xorlw	16	; case 48
  4570  004E48  B4D8               	btfsc	status,2,c
  4571  004E4A  D7BB               	goto	l1300
  4572  004E4C  0A70               	xorlw	112	; case 64
  4573  004E4E  B4D8               	btfsc	status,2,c
  4574  004E50  D7C8               	goto	l1304
  4575  004E52  0A10               	xorlw	16	; case 80
  4576  004E54  B4D8               	btfsc	status,2,c
  4577  004E56  D7BD               	goto	l1302
  4578  004E58  0A30               	xorlw	48	; case 96
  4579  004E5A  B4D8               	btfsc	status,2,c
  4580  004E5C  D7CE               	goto	l1306
  4581  004E5E  0A10               	xorlw	16	; case 112
  4582  004E60  A4D8               	btfss	status,2,c
  4583  004E62  0012               	return	
  4584  004E64  D7D2               	goto	l1308
  4585  004E66                     __end_of__ui_encoder:
  4586                           	opt stack 0
  4587                           tblptru	equ	0xFF8
  4588                           tblptrh	equ	0xFF7
  4589                           tblptrl	equ	0xFF6
  4590                           tablat	equ	0xFF5
  4591                           intcon3	equ	0xFF0
  4592                           postinc0	equ	0xFEE
  4593                           wreg	equ	0xFE8
  4594                           postdec1	equ	0xFE5
  4595                           plusw1	equ	0xFE3
  4596                           fsr1h	equ	0xFE2
  4597                           fsr1l	equ	0xFE1
  4598                           plusw2	equ	0xFDB
  4599                           status	equ	0xFD8
  4600                           
  4601 ;; *************** function _timer_pseudo_isr *****************
  4602 ;; Defined at:
  4603 ;;		line 19 in file "os.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;		None
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      void 
  4610 ;; Registers used:
  4611 ;;		wreg, status,2, status,0
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4621 ;;Total ram usage:        0 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; This function calls:
  4624 ;;		Nothing
  4625 ;; This function is called by:
  4626 ;;		_main
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text8
  4631  007AE4                     __ptext8:
  4632                           	opt stack 0
  4633  007AE4                     _timer_pseudo_isr:
  4634                           	opt stack 30
  4635                           
  4636                           ;os.c: 22: if(INTCONbits.T0IF==0)
  4637                           
  4638                           ;incstack = 0
  4639  007AE4  A4F2               	btfss	intcon,2,c	;volatile
  4640  007AE6  0012               	return	
  4641                           
  4642                           ;os.c: 25: };os.c: 29: TMR0H = 0xD1;
  4643                           
  4644                           ;os.c: 23: {;os.c: 24: return;
  4645  007AE8  0ED1               	movlw	209
  4646  007AEA  6ED7               	movwf	4055,c	;volatile
  4647                           
  4648                           ;os.c: 30: TMR0L = 0x20;
  4649  007AEC  0E20               	movlw	32
  4650  007AEE  6ED6               	movwf	4054,c	;volatile
  4651                           
  4652                           ;os.c: 31: ++os.timeSlot;
  4653  007AF0  0100               	movlb	0	; () banked
  4654  007AF2  2BBB               	incf	(_os+2)& (0+255),f,b	;volatile
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;os.c: 33: os.done = 0;
  4658  007AF4  0E00               	movlw	0
  4659  007AF6  6FBC               	movwf	(_os+3)& (0+255),b	;volatile
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;os.c: 34: INTCONbits.T0IF = 0;
  4663  007AF8  94F2               	bcf	intcon,2,c	;volatile
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;os.c: 37: if(INTCON3bits.INT1IF)
  4667  007AFA  A0F0               	btfss	intcon3,0,c	;volatile
  4668  007AFC  D002               	goto	l1083
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;os.c: 38: {;os.c: 39: ++os.buttonCount;
  4672  007AFE  2BBA               	incf	(_os+1)& (0+255),f,b	;volatile
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;os.c: 40: INTCON3bits.INT1IF = 0;
  4676  007B00  90F0               	bcf	intcon3,0,c	;volatile
  4677  007B02                     l1083:
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;os.c: 41: };os.c: 44: if(INTCON3bits.INT2IF)
  4681                           
  4682                           ; BSR set to: 0
  4683  007B02  A2F0               	btfss	intcon3,1,c	;volatile
  4684  007B04  D003               	goto	l1084
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;os.c: 45: {;os.c: 46: if(!PORTBbits.RB6)
  4688  007B06  AC81               	btfss	3969,6,c	;volatile
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;os.c: 47: {;os.c: 48: --os.encoderCount;
  4692  007B08  07B9               	decf	_os& (0+255),f,b	;volatile
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;os.c: 49: };os.c: 50: INTCON3bits.INT2IF = 0;
  4696                           
  4697                           ; BSR set to: 0
  4698  007B0A  92F0               	bcf	intcon3,1,c	;volatile
  4699  007B0C                     l1084:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;os.c: 51: };os.c: 52: if(INTCON3bits.INT3IF)
  4703                           
  4704                           ; BSR set to: 0
  4705  007B0C  A4F0               	btfss	intcon3,2,c	;volatile
  4706  007B0E  0012               	return	
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;os.c: 53: {;os.c: 54: if(!PORTBbits.RB7)
  4710  007B10  AE81               	btfss	3969,7,c	;volatile
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;os.c: 55: {;os.c: 56: ++os.encoderCount;
  4714  007B12  2BB9               	incf	_os& (0+255),f,b	;volatile
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;os.c: 57: };os.c: 58: INTCON3bits.INT3IF = 0;
  4718                           
  4719                           ; BSR set to: 0
  4720  007B14  94F0               	bcf	intcon3,2,c	;volatile
  4721  007B16  0012               	return	
  4722  007B18                     __end_of_timer_pseudo_isr:
  4723                           	opt stack 0
  4724                           tblptru	equ	0xFF8
  4725                           tblptrh	equ	0xFF7
  4726                           tblptrl	equ	0xFF6
  4727                           tablat	equ	0xFF5
  4728                           intcon	equ	0xFF2
  4729                           intcon3	equ	0xFF0
  4730                           postinc0	equ	0xFEE
  4731                           wreg	equ	0xFE8
  4732                           postdec1	equ	0xFE5
  4733                           plusw1	equ	0xFE3
  4734                           fsr1h	equ	0xFE2
  4735                           fsr1l	equ	0xFE1
  4736                           plusw2	equ	0xFDB
  4737                           status	equ	0xFD8
  4738                           
  4739 ;; *************** function _system_minimal_init_undo *****************
  4740 ;; Defined at:
  4741 ;;		line 154 in file "os.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, status,2, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4759 ;;Total ram usage:        0 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    1
  4762 ;; This function calls:
  4763 ;;		_i2c_reset
  4764 ;; This function is called by:
  4765 ;;		_main
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text9
  4770  0080DE                     __ptext9:
  4771                           	opt stack 0
  4772  0080DE                     _system_minimal_init_undo:
  4773                           	opt stack 29
  4774                           
  4775                           ;os.c: 157: i2c_reset();
  4776                           
  4777                           ;incstack = 0
  4778  0080DE  EC8F  F040         	call	_i2c_reset	;wreg free
  4779                           
  4780                           ;os.c: 160: TRISAbits.TRISA0 = 1;
  4781  0080E2  8092               	bsf	3986,0,c	;volatile
  4782                           
  4783                           ;os.c: 161: ANCON0bits.PCFG0 = 0;
  4784  0080E4  010F               	movlb	15	; () banked
  4785  0080E6  9148               	bcf	72,0,b	;volatile
  4786                           
  4787                           ; BSR set to: 15
  4788                           ;os.c: 164: LATCbits.LC2 = 0;
  4789  0080E8  948B               	bcf	3979,2,c	;volatile
  4790                           
  4791                           ; BSR set to: 15
  4792                           ;os.c: 165: TRISCbits.TRISC2 = 1;
  4793  0080EA  8494               	bsf	3988,2,c	;volatile
  4794                           
  4795                           ; BSR set to: 15
  4796  0080EC  0012               	return		;funcret
  4797  0080EE                     __end_of_system_minimal_init_undo:
  4798                           	opt stack 0
  4799                           tblptru	equ	0xFF8
  4800                           tblptrh	equ	0xFF7
  4801                           tblptrl	equ	0xFF6
  4802                           tablat	equ	0xFF5
  4803                           intcon	equ	0xFF2
  4804                           intcon3	equ	0xFF0
  4805                           postinc0	equ	0xFEE
  4806                           wreg	equ	0xFE8
  4807                           postdec1	equ	0xFE5
  4808                           plusw1	equ	0xFE3
  4809                           fsr1h	equ	0xFE2
  4810                           fsr1l	equ	0xFE1
  4811                           plusw2	equ	0xFDB
  4812                           status	equ	0xFD8
  4813                           
  4814 ;; *************** function _i2c_reset *****************
  4815 ;; Defined at:
  4816 ;;		line 110 in file "i2c.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;		None
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;		None
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      void 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4834 ;;Total ram usage:        0 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_system_minimal_init_undo
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text10
  4844  00811E                     __ptext10:
  4845                           	opt stack 0
  4846  00811E                     _i2c_reset:
  4847                           	opt stack 29
  4848                           
  4849                           ;i2c.c: 112: SSP1STATbits.SMP = 0;
  4850                           
  4851                           ; BSR set to: 15
  4852                           ;incstack = 0
  4853  00811E  9EC7               	bcf	4039,7,c	;volatile
  4854                           
  4855                           ;i2c.c: 113: SSP1STATbits.CKE = 0;
  4856  008120  9CC7               	bcf	4039,6,c	;volatile
  4857                           
  4858                           ;i2c.c: 114: SSP1CON1 = 0x00;
  4859  008122  0E00               	movlw	0
  4860  008124  6EC6               	movwf	4038,c	;volatile
  4861                           
  4862                           ;i2c.c: 115: SSP1ADD = 0x00;
  4863  008126  0E00               	movlw	0
  4864  008128  6EC8               	movwf	4040,c	;volatile
  4865  00812A  0012               	return		;funcret
  4866  00812C                     __end_of_i2c_reset:
  4867                           	opt stack 0
  4868                           tblptru	equ	0xFF8
  4869                           tblptrh	equ	0xFF7
  4870                           tblptrl	equ	0xFF6
  4871                           tablat	equ	0xFF5
  4872                           intcon	equ	0xFF2
  4873                           intcon3	equ	0xFF0
  4874                           postinc0	equ	0xFEE
  4875                           wreg	equ	0xFE8
  4876                           postdec1	equ	0xFE5
  4877                           plusw1	equ	0xFE3
  4878                           fsr1h	equ	0xFE2
  4879                           fsr1l	equ	0xFE1
  4880                           plusw2	equ	0xFDB
  4881                           status	equ	0xFD8
  4882                           
  4883 ;; *************** function _system_minimal_init *****************
  4884 ;; Defined at:
  4885 ;;		line 139 in file "os.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;		None
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      void 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4903 ;;Total ram usage:        0 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    2
  4906 ;; This function calls:
  4907 ;;		_i2c_init
  4908 ;; This function is called by:
  4909 ;;		_main
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text11
  4914  0080EE                     __ptext11:
  4915                           	opt stack 0
  4916  0080EE                     _system_minimal_init:
  4917                           	opt stack 28
  4918                           
  4919                           ;os.c: 142: TRISCbits.TRISC2 = 0;
  4920                           
  4921                           ;incstack = 0
  4922  0080EE  9494               	bcf	3988,2,c	;volatile
  4923                           
  4924                           ;os.c: 143: LATCbits.LC2 = 1;
  4925  0080F0  848B               	bsf	3979,2,c	;volatile
  4926                           
  4927                           ;os.c: 146: TRISAbits.TRISA0 = 1;
  4928  0080F2  8092               	bsf	3986,0,c	;volatile
  4929                           
  4930                           ;os.c: 147: ANCON0bits.PCFG0 = 1;
  4931  0080F4  010F               	movlb	15	; () banked
  4932  0080F6  8148               	bsf	72,0,b	;volatile
  4933                           
  4934                           ; BSR set to: 15
  4935                           ;os.c: 150: i2c_init();
  4936  0080F8  EC9D  F040         	call	_i2c_init	;wreg free
  4937  0080FC  0012               	return		;funcret
  4938  0080FE                     __end_of_system_minimal_init:
  4939                           	opt stack 0
  4940                           tblptru	equ	0xFF8
  4941                           tblptrh	equ	0xFF7
  4942                           tblptrl	equ	0xFF6
  4943                           tablat	equ	0xFF5
  4944                           intcon	equ	0xFF2
  4945                           intcon3	equ	0xFF0
  4946                           postinc0	equ	0xFEE
  4947                           wreg	equ	0xFE8
  4948                           postdec1	equ	0xFE5
  4949                           plusw1	equ	0xFE3
  4950                           fsr1h	equ	0xFE2
  4951                           fsr1l	equ	0xFE1
  4952                           plusw2	equ	0xFDB
  4953                           status	equ	0xFD8
  4954                           
  4955 ;; *************** function _i2c_init *****************
  4956 ;; Defined at:
  4957 ;;		line 102 in file "i2c.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;		None
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;		None
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  1    wreg      void 
  4964 ;; Registers used:
  4965 ;;		wreg, status,2, status,0, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4975 ;;Total ram usage:        0 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:    1
  4978 ;; This function calls:
  4979 ;;		__i2c_open_1
  4980 ;;		_i2c_set_frequency
  4981 ;; This function is called by:
  4982 ;;		_system_minimal_init
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text12
  4987  00813A                     __ptext12:
  4988                           	opt stack 0
  4989  00813A                     _i2c_init:
  4990                           	opt stack 28
  4991                           
  4992                           ;i2c.c: 105: _i2c_open_1();
  4993                           
  4994                           ;incstack = 0
  4995  00813A  EC20  F040         	call	__i2c_open_1	;wreg free
  4996                           
  4997                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4998  00813E  0E00               	movlw	0
  4999  008140  ECC7  F03E         	call	_i2c_set_frequency
  5000  008144  0012               	return		;funcret
  5001  008146                     __end_of_i2c_init:
  5002                           	opt stack 0
  5003                           tblptru	equ	0xFF8
  5004                           tblptrh	equ	0xFF7
  5005                           tblptrl	equ	0xFF6
  5006                           tablat	equ	0xFF5
  5007                           intcon	equ	0xFF2
  5008                           intcon3	equ	0xFF0
  5009                           postinc0	equ	0xFEE
  5010                           wreg	equ	0xFE8
  5011                           postdec1	equ	0xFE5
  5012                           plusw1	equ	0xFE3
  5013                           fsr1h	equ	0xFE2
  5014                           fsr1l	equ	0xFE1
  5015                           plusw2	equ	0xFDB
  5016                           status	equ	0xFD8
  5017                           
  5018 ;; *************** function __i2c_open_1 *****************
  5019 ;; Defined at:
  5020 ;;		line 36 in file "i2c.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      void 
  5027 ;; Registers used:
  5028 ;;		wreg, status,2
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5038 ;;Total ram usage:        0 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_i2c_init
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text13
  5048  008040                     __ptext13:
  5049                           	opt stack 0
  5050  008040                     __i2c_open_1:
  5051                           	opt stack 28
  5052                           
  5053                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  5054                           
  5055                           ;incstack = 0
  5056  008040  9EC7               	bcf	4039,7,c	;volatile
  5057                           
  5058                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  5059  008042  9CC7               	bcf	4039,6,c	;volatile
  5060                           
  5061                           ;i2c.c: 40: SSP1ADD = 29;
  5062  008044  0E1D               	movlw	29
  5063  008046  6EC8               	movwf	4040,c	;volatile
  5064                           
  5065                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  5066  008048  9EC6               	bcf	4038,7,c	;volatile
  5067                           
  5068                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  5069  00804A  9CC6               	bcf	4038,6,c	;volatile
  5070                           
  5071                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  5072  00804C  50C6               	movf	4038,w,c	;volatile
  5073  00804E  0BF0               	andlw	-16
  5074  008050  0908               	iorlw	8
  5075  008052  6EC6               	movwf	4038,c	;volatile
  5076                           
  5077                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  5078  008054  8AC6               	bsf	4038,5,c	;volatile
  5079  008056  0012               	return		;funcret
  5080  008058                     __end_of__i2c_open_1:
  5081                           	opt stack 0
  5082                           tblptru	equ	0xFF8
  5083                           tblptrh	equ	0xFF7
  5084                           tblptrl	equ	0xFF6
  5085                           tablat	equ	0xFF5
  5086                           intcon	equ	0xFF2
  5087                           intcon3	equ	0xFF0
  5088                           postinc0	equ	0xFEE
  5089                           wreg	equ	0xFE8
  5090                           postdec1	equ	0xFE5
  5091                           plusw1	equ	0xFE3
  5092                           fsr1h	equ	0xFE2
  5093                           fsr1l	equ	0xFE1
  5094                           plusw2	equ	0xFDB
  5095                           status	equ	0xFD8
  5096                           
  5097 ;; *************** function _system_full_init *****************
  5098 ;; Defined at:
  5099 ;;		line 169 in file "os.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;		None
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;		None
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  1    wreg      void 
  5106 ;; Registers used:
  5107 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5117 ;;Total ram usage:        0 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; Hardware stack levels required when called:    7
  5120 ;; This function calls:
  5121 ;;		__system_encoder_init
  5122 ;;		__system_timer0_init
  5123 ;;		_fat_init
  5124 ;;		_flash_init
  5125 ;;		_ui_init
  5126 ;; This function is called by:
  5127 ;;		_main
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text14
  5132  0070C4                     __ptext14:
  5133                           	opt stack 0
  5134  0070C4                     _system_full_init:
  5135                           	opt stack 23
  5136                           
  5137                           ;os.c: 176: TRISDbits.TRISD0 = 0;
  5138                           
  5139                           ;incstack = 0
  5140  0070C4  9095               	bcf	3989,0,c	;volatile
  5141                           
  5142                           ;os.c: 177: LATDbits.LD0 = 0;
  5143  0070C6  908C               	bcf	3980,0,c	;volatile
  5144                           
  5145                           ;os.c: 180: TRISDbits.TRISD3 = 0;
  5146  0070C8  9695               	bcf	3989,3,c	;volatile
  5147                           
  5148                           ;os.c: 181: LATDbits.LD3 = 0;
  5149  0070CA  968C               	bcf	3980,3,c	;volatile
  5150                           
  5151                           ;os.c: 184: TRISDbits.TRISD1 = 0;
  5152  0070CC  9295               	bcf	3989,1,c	;volatile
  5153                           
  5154                           ;os.c: 185: LATDbits.LD1 = 0;
  5155  0070CE  928C               	bcf	3980,1,c	;volatile
  5156                           
  5157                           ;os.c: 188: TRISBbits.TRISB1 = 0;
  5158  0070D0  9293               	bcf	3987,1,c	;volatile
  5159                           
  5160                           ;os.c: 189: LATBbits.LB1 = 0;
  5161  0070D2  928A               	bcf	3978,1,c	;volatile
  5162                           
  5163                           ;os.c: 192: TRISBbits.TRISB2 = 0;
  5164  0070D4  9493               	bcf	3987,2,c	;volatile
  5165                           
  5166                           ;os.c: 193: LATBbits.LB2 = 0;
  5167  0070D6  948A               	bcf	3978,2,c	;volatile
  5168                           
  5169                           ;os.c: 194: TRISBbits.TRISB3 = 0;
  5170  0070D8  9693               	bcf	3987,3,c	;volatile
  5171                           
  5172                           ;os.c: 195: LATBbits.LB3 = 0;
  5173  0070DA  968A               	bcf	3978,3,c	;volatile
  5174                           
  5175                           ;os.c: 198: TRISDbits.TRISD6 = 1;
  5176  0070DC  8C95               	bsf	3989,6,c	;volatile
  5177                           
  5178                           ;os.c: 199: TRISDbits.TRISD4 = 0;
  5179  0070DE  9895               	bcf	3989,4,c	;volatile
  5180                           
  5181                           ;os.c: 200: TRISDbits.TRISD5 = 0;
  5182  0070E0  9A95               	bcf	3989,5,c	;volatile
  5183                           
  5184                           ;os.c: 201: TRISDbits.TRISD7 = 0;
  5185  0070E2  9E95               	bcf	3989,7,c	;volatile
  5186                           
  5187                           ;os.c: 202: LATDbits.LD7 = 1;
  5188  0070E4  8E8C               	bsf	3980,7,c	;volatile
  5189                           
  5190                           ;os.c: 203: TRISDbits.TRISD2 = 1;
  5191  0070E6  8495               	bsf	3989,2,c	;volatile
  5192                           
  5193                           ;os.c: 206: TRISCbits.TRISC7 = 0;
  5194  0070E8  9E94               	bcf	3988,7,c	;volatile
  5195                           
  5196                           ;os.c: 207: LATCbits.LC7 = 0;
  5197  0070EA  9E8B               	bcf	3979,7,c	;volatile
  5198                           
  5199                           ;os.c: 210: TRISEbits.TRISE2 = 0;
  5200  0070EC  9496               	bcf	3990,2,c	;volatile
  5201                           
  5202                           ;os.c: 211: LATEbits.LE2 = 1;
  5203  0070EE  848D               	bsf	3981,2,c	;volatile
  5204                           
  5205                           ;os.c: 212: TRISEbits.TRISE1 = 0;
  5206  0070F0  9296               	bcf	3990,1,c	;volatile
  5207                           
  5208                           ;os.c: 213: LATEbits.LE1 = 1;
  5209  0070F2  828D               	bsf	3981,1,c	;volatile
  5210                           
  5211                           ;os.c: 214: TRISEbits.TRISE0 = 0;
  5212  0070F4  9096               	bcf	3990,0,c	;volatile
  5213                           
  5214                           ;os.c: 215: LATEbits.LE0 = 1;
  5215  0070F6  808D               	bsf	3981,0,c	;volatile
  5216                           
  5217                           ;os.c: 216: TRISAbits.TRISA5 = 0;
  5218  0070F8  9A92               	bcf	3986,5,c	;volatile
  5219                           
  5220                           ;os.c: 217: LATAbits.LA5 = 1;
  5221  0070FA  8A89               	bsf	3977,5,c	;volatile
  5222                           
  5223                           ;os.c: 220: TRISBbits.TRISB7 = 1;
  5224  0070FC  8E93               	bsf	3987,7,c	;volatile
  5225                           
  5226                           ;os.c: 221: TRISBbits.TRISB6 = 1;
  5227  0070FE  8C93               	bsf	3987,6,c	;volatile
  5228                           
  5229                           ;os.c: 224: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5230  007100  0E10               	movlw	16
  5231  007102  0100               	movlb	0	; () banked
  5232  007104  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  5233                           
  5234                           ;os.c: 225: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  5235  007106  0E00               	movlw	0
  5236  007108  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;os.c: 228: flash_init();
  5240  00710A  ECF9  F03F         	call	_flash_init	;wreg free
  5241                           
  5242                           ;os.c: 231: fat_init();
  5243  00710E  EC7F  F040         	call	_fat_init	;wreg free
  5244                           
  5245                           ;os.c: 234: _system_encoder_init();
  5246  007112  EC02  F03D         	call	__system_encoder_init	;wreg free
  5247                           
  5248                           ;os.c: 237: ui_init();
  5249  007116  EC42  F040         	call	_ui_init	;wreg free
  5250                           
  5251                           ;os.c: 240: _system_timer0_init();
  5252  00711A  ECCD  F03F         	call	__system_timer0_init	;wreg free
  5253  00711E  0012               	return		;funcret
  5254  007120                     __end_of_system_full_init:
  5255                           	opt stack 0
  5256                           tblptru	equ	0xFF8
  5257                           tblptrh	equ	0xFF7
  5258                           tblptrl	equ	0xFF6
  5259                           tablat	equ	0xFF5
  5260                           intcon	equ	0xFF2
  5261                           intcon3	equ	0xFF0
  5262                           postinc0	equ	0xFEE
  5263                           wreg	equ	0xFE8
  5264                           postdec1	equ	0xFE5
  5265                           plusw1	equ	0xFE3
  5266                           fsr1h	equ	0xFE2
  5267                           fsr1l	equ	0xFE1
  5268                           plusw2	equ	0xFDB
  5269                           status	equ	0xFD8
  5270                           
  5271 ;; *************** function _ui_init *****************
  5272 ;; Defined at:
  5273 ;;		line 101 in file "ui.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; This function calls:
  5294 ;;		Nothing
  5295 ;; This function is called by:
  5296 ;;		_system_full_init
  5297 ;;		_ui_run
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text15
  5302  008084                     __ptext15:
  5303                           	opt stack 0
  5304  008084                     _ui_init:
  5305                           	opt stack 29
  5306                           
  5307                           ;ui.c: 103: system_ui_inactive_count = 0;
  5308                           
  5309                           ;incstack = 0
  5310  008084  0E00               	movlw	0
  5311  008086  0101               	movlb	1	; () banked
  5312  008088  6F79               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5313  00808A  0E00               	movlw	0
  5314  00808C  6F78               	movwf	_system_ui_inactive_count& (0+255),b
  5315                           
  5316                           ; BSR set to: 1
  5317                           ;ui.c: 105: LATCbits.LC2 = 1;
  5318  00808E  848B               	bsf	3979,2,c	;volatile
  5319                           
  5320                           ;ui.c: 106: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  5321  008090  0E01               	movlw	1
  5322  008092  0100               	movlb	0	; () banked
  5323  008094  6FE0               	movwf	_userInterfaceStatus& (0+255),b
  5324                           
  5325                           ; BSR set to: 0
  5326  008096  0012               	return		;funcret
  5327  008098                     __end_of_ui_init:
  5328                           	opt stack 0
  5329                           tblptru	equ	0xFF8
  5330                           tblptrh	equ	0xFF7
  5331                           tblptrl	equ	0xFF6
  5332                           tablat	equ	0xFF5
  5333                           intcon	equ	0xFF2
  5334                           intcon3	equ	0xFF0
  5335                           postinc0	equ	0xFEE
  5336                           wreg	equ	0xFE8
  5337                           postdec1	equ	0xFE5
  5338                           plusw1	equ	0xFE3
  5339                           fsr1h	equ	0xFE2
  5340                           fsr1l	equ	0xFE1
  5341                           plusw2	equ	0xFDB
  5342                           status	equ	0xFD8
  5343                           
  5344 ;; *************** function _flash_init *****************
  5345 ;; Defined at:
  5346 ;;		line 337 in file "flash.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;		None
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;		None
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5364 ;;Total ram usage:        0 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    4
  5367 ;; This function calls:
  5368 ;;		__flash_set_page_size
  5369 ;;		_spi_init
  5370 ;;		_spi_set_configuration
  5371 ;; This function is called by:
  5372 ;;		_system_full_init
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text16
  5377  007FF2                     __ptext16:
  5378                           	opt stack 0
  5379  007FF2                     _flash_init:
  5380                           	opt stack 25
  5381                           
  5382                           ;flash.c: 340: spi_init(SPI_CONFIGURATION_INTERNAL);
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;incstack = 0
  5386  007FF2  0E00               	movlw	0
  5387  007FF4  ECC6  F03C         	call	_spi_init
  5388                           
  5389                           ;flash.c: 341: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5390  007FF8  0E00               	movlw	0
  5391  007FFA  EC6C  F021         	call	_spi_set_configuration
  5392                           
  5393                           ;flash.c: 344: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5394  007FFE  0E00               	movlw	0
  5395  008000  ECBD  F033         	call	__flash_set_page_size
  5396                           
  5397                           ;flash.c: 347: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5398  008004  0E01               	movlw	1
  5399  008006  EC6C  F021         	call	_spi_set_configuration
  5400  00800A  0012               	return		;funcret
  5401  00800C                     __end_of_flash_init:
  5402                           	opt stack 0
  5403                           tblptru	equ	0xFF8
  5404                           tblptrh	equ	0xFF7
  5405                           tblptrl	equ	0xFF6
  5406                           tablat	equ	0xFF5
  5407                           intcon	equ	0xFF2
  5408                           intcon3	equ	0xFF0
  5409                           postinc0	equ	0xFEE
  5410                           wreg	equ	0xFE8
  5411                           postdec1	equ	0xFE5
  5412                           plusw1	equ	0xFE3
  5413                           fsr1h	equ	0xFE2
  5414                           fsr1l	equ	0xFE1
  5415                           plusw2	equ	0xFDB
  5416                           status	equ	0xFD8
  5417                           
  5418 ;; *************** function _spi_init *****************
  5419 ;; Defined at:
  5420 ;;		line 122 in file "spi.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  configuratio    1    wreg     enum E6749
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  configuratio    1    3[COMRAM] enum E6749
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5437 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5438 ;;Total ram usage:        1 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:    1
  5441 ;; This function calls:
  5442 ;;		__spi_init
  5443 ;; This function is called by:
  5444 ;;		_flash_init
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           	psect	text17
  5449  00798C                     __ptext17:
  5450                           	opt stack 0
  5451  00798C                     _spi_init:
  5452                           	opt stack 27
  5453                           
  5454                           ;incstack = 0
  5455                           ;spi_init@configuration stored from wreg
  5456  00798C  6E04               	movwf	spi_init@configuration,c
  5457                           
  5458                           ;spi.c: 124: switch(configuration)
  5459  00798E  D012               	goto	l2807
  5460  007990                     
  5461                           ;spi.c: 127: _spi_init(config_internal);
  5462  007990  C165  F001         	movff	_config_internal,__spi_init@details
  5463  007994  C166  F002         	movff	_config_internal+1,__spi_init@details+1
  5464  007998  C167  F003         	movff	_config_internal+2,__spi_init@details+2
  5465  00799C  EC1F  F03D         	call	__spi_init	;wreg free
  5466                           
  5467                           ;spi.c: 128: break;
  5468  0079A0  D010               	goto	l2809
  5469  0079A2                     
  5470                           ;spi.c: 131: _spi_init(config_external);
  5471  0079A2  C162  F001         	movff	_config_external,__spi_init@details
  5472  0079A6  C163  F002         	movff	_config_external+1,__spi_init@details+1
  5473  0079AA  C164  F003         	movff	_config_external+2,__spi_init@details+2
  5474  0079AE  EC1F  F03D         	call	__spi_init	;wreg free
  5475                           
  5476                           ;spi.c: 133: }
  5477                           
  5478                           ;spi.c: 132: break;
  5479  0079B2  D007               	goto	l2809
  5480  0079B4                     l2807:
  5481  0079B4  5004               	movf	spi_init@configuration,w,c
  5482                           
  5483                           ; Switch size 1, requested type "space"
  5484                           ; Number of cases is 2, Range of values is 0 to 1
  5485                           ; switch strategies available:
  5486                           ; Name         Instructions Cycles
  5487                           ; simple_byte            7     4 (average)
  5488                           ;	Chosen strategy is simple_byte
  5489  0079B6  0A00               	xorlw	0	; case 0
  5490  0079B8  B4D8               	btfsc	status,2,c
  5491  0079BA  D7EA               	goto	l2808
  5492  0079BC  0A01               	xorlw	1	; case 1
  5493  0079BE  B4D8               	btfsc	status,2,c
  5494  0079C0  D7F0               	goto	l2810
  5495  0079C2                     l2809:
  5496                           
  5497                           ;spi.c: 135: active_configuration = configuration;
  5498  0079C2  C004  F186         	movff	spi_init@configuration,_active_configuration
  5499  0079C6  0012               	return		;funcret
  5500  0079C8                     __end_of_spi_init:
  5501                           	opt stack 0
  5502                           tblptru	equ	0xFF8
  5503                           tblptrh	equ	0xFF7
  5504                           tblptrl	equ	0xFF6
  5505                           tablat	equ	0xFF5
  5506                           intcon	equ	0xFF2
  5507                           intcon3	equ	0xFF0
  5508                           postinc0	equ	0xFEE
  5509                           wreg	equ	0xFE8
  5510                           postdec1	equ	0xFE5
  5511                           plusw1	equ	0xFE3
  5512                           fsr1h	equ	0xFE2
  5513                           fsr1l	equ	0xFE1
  5514                           plusw2	equ	0xFDB
  5515                           status	equ	0xFD8
  5516                           
  5517 ;; *************** function __spi_init *****************
  5518 ;; Defined at:
  5519 ;;		line 25 in file "spi.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  details         3    0[COMRAM] struct .
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;		None
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      void 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5533 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5536 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5537 ;;Total ram usage:        3 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; This function calls:
  5540 ;;		Nothing
  5541 ;; This function is called by:
  5542 ;;		_spi_init
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           	psect	text18
  5547  007A3E                     __ptext18:
  5548                           	opt stack 0
  5549  007A3E                     __spi_init:
  5550                           	opt stack 27
  5551                           
  5552                           ;spi.c: 31: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5553                           
  5554                           ;incstack = 0
  5555  007A3E  0E55               	movlw	85
  5556  007A40  6EA7               	movwf	4007,c	;volsfr
  5557  007A42  0EAA               	movlw	170
  5558  007A44  6EA7               	movwf	4007,c	;volsfr
  5559  007A46  010E               	movlb	14	; () banked
  5560  007A48  91BF               	bcf	191,0,b	;volatile
  5561                           
  5562                           ;spi.c: 32: RPINR21 = 23;
  5563  007A4A  0E17               	movlw	23
  5564  007A4C  6FFC               	movwf	252,b	;volatile
  5565                           
  5566                           ;spi.c: 33: RPOR21 = 10;
  5567  007A4E  0E0A               	movlw	10
  5568  007A50  6FD5               	movwf	213,b	;volatile
  5569                           
  5570                           ;spi.c: 35: RPOR22 = 11;
  5571  007A52  0E0B               	movlw	11
  5572  007A54  6FD6               	movwf	214,b	;volatile
  5573                           
  5574                           ;spi.c: 36: RPINR22 = 22;
  5575  007A56  0E16               	movlw	22
  5576  007A58  6FFD               	movwf	253,b	;volatile
  5577                           
  5578                           ;spi.c: 37: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  5579  007A5A  0E55               	movlw	85
  5580  007A5C  6EA7               	movwf	4007,c	;volsfr
  5581  007A5E  0EAA               	movlw	170
  5582  007A60  6EA7               	movwf	4007,c	;volsfr
  5583                           
  5584                           ; BSR set to: 14
  5585  007A62  81BF               	bsf	191,0,b	;volatile
  5586                           
  5587                           ; BSR set to: 14
  5588                           ;spi.c: 40: SSP2STATbits.SMP = 1;
  5589  007A64  8E73               	bsf	3955,7,c	;volatile
  5590                           
  5591                           ; BSR set to: 14
  5592                           ;spi.c: 41: SSP2STATbits.CKE = 1;
  5593  007A66  8C73               	bsf	3955,6,c	;volatile
  5594                           
  5595                           ; BSR set to: 14
  5596                           ;spi.c: 42: SSP2CON1bits.CKP = 0;
  5597  007A68  9872               	bcf	3954,4,c	;volatile
  5598                           
  5599                           ; BSR set to: 14
  5600                           ;spi.c: 43: SSP2CON1bits.SSPM =0b0000;
  5601  007A6A  9072               	bcf	3954,0,c	;volatile
  5602  007A6C  9272               	bcf	3954,1,c	;volatile
  5603  007A6E  9472               	bcf	3954,2,c	;volatile
  5604  007A70  9672               	bcf	3954,3,c	;volatile
  5605                           
  5606                           ; BSR set to: 14
  5607                           ;spi.c: 44: SSP2CON1bits.SSPEN = 1;
  5608  007A72  8A72               	bsf	3954,5,c	;volatile
  5609                           
  5610                           ; BSR set to: 14
  5611  007A74  0012               	return		;funcret
  5612  007A76                     __end_of__spi_init:
  5613                           	opt stack 0
  5614                           tblptru	equ	0xFF8
  5615                           tblptrh	equ	0xFF7
  5616                           tblptrl	equ	0xFF6
  5617                           tablat	equ	0xFF5
  5618                           intcon	equ	0xFF2
  5619                           intcon3	equ	0xFF0
  5620                           postinc0	equ	0xFEE
  5621                           wreg	equ	0xFE8
  5622                           postdec1	equ	0xFE5
  5623                           plusw1	equ	0xFE3
  5624                           fsr1h	equ	0xFE2
  5625                           fsr1l	equ	0xFE1
  5626                           plusw2	equ	0xFDB
  5627                           status	equ	0xFD8
  5628                           
  5629 ;; *************** function __flash_set_page_size *****************
  5630 ;; Defined at:
  5631 ;;		line 95 in file "flash.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  size            1    wreg     enum E6886
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  size            1   23[COMRAM] enum E6886
  5636 ;;  command         4   19[COMRAM] unsigned char [4]
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5647 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5649 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5650 ;;Total ram usage:        5 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    3
  5653 ;; This function calls:
  5654 ;;		__flash_is_busy
  5655 ;;		_memcpy
  5656 ;;		_spi_tx
  5657 ;; This function is called by:
  5658 ;;		_flash_init
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text19
  5663  00677A                     __ptext19:
  5664                           	opt stack 0
  5665  00677A                     __flash_set_page_size:
  5666                           	opt stack 25
  5667                           
  5668                           ; BSR set to: 14
  5669                           ;incstack = 0
  5670                           ;__flash_set_page_size@size stored from wreg
  5671  00677A  6E18               	movwf	__flash_set_page_size@size,c
  5672  00677C                     
  5673                           ;flash.c: 97: uint8_t command[4];;flash.c: 100: while(_flash_is_busy());
  5674  00677C  ECBC  F03F         	call	__flash_is_busy	;wreg free
  5675  006780  0900               	iorlw	0
  5676  006782  A4D8               	btfss	status,2,c
  5677  006784  D7FB               	goto	l13131
  5678                           
  5679                           ;flash.c: 103: if(size==FLASH_PAGE_SIZE_512)
  5680  006786  5018               	movf	__flash_set_page_size@size,w,c
  5681  006788  A4D8               	btfss	status,2,c
  5682  00678A  D013               	goto	l1741
  5683                           
  5684                           ;flash.c: 104: memcpy(command, flash_command_pagesize_512, 4);
  5685  00678C  0E14               	movlw	low __flash_set_page_size@command
  5686  00678E  6E01               	movwf	memcpy@d1,c
  5687  006790  0E00               	movlw	high __flash_set_page_size@command
  5688  006792  6E02               	movwf	memcpy@d1+1,c
  5689  006794  0EC4               	movlw	low _flash_command_pagesize_512
  5690  006796  6E03               	movwf	memcpy@s1,c
  5691  006798  0E8F               	movlw	high _flash_command_pagesize_512
  5692  00679A  6E04               	movwf	memcpy@s1+1,c
  5693  00679C  5003               	movf	memcpy@s1,w,c
  5694  00679E  1004               	iorwf	memcpy@s1+1,w,c
  5695  0067A0  A4D8               	btfss	status,2,c
  5696  0067A2  0E00               	movlw	low (__mediumconst shr (0+16))
  5697  0067A4  6E05               	movwf	memcpy@s1+2,c
  5698  0067A6  0E00               	movlw	0
  5699  0067A8  6E07               	movwf	memcpy@n+1,c
  5700  0067AA  0E04               	movlw	4
  5701  0067AC  6E06               	movwf	memcpy@n,c
  5702  0067AE  EC3E  F037         	call	_memcpy	;wreg free
  5703  0067B2                     l1741:
  5704                           
  5705                           ;flash.c: 105: if(size==FLASH_PAGE_SIZE_528)
  5706  0067B2  0418               	decf	__flash_set_page_size@size,w,c
  5707  0067B4  A4D8               	btfss	status,2,c
  5708  0067B6  D013               	goto	l1742
  5709                           
  5710                           ;flash.c: 106: memcpy(command, flash_command_pagesize_528, 4);
  5711  0067B8  0E14               	movlw	low __flash_set_page_size@command
  5712  0067BA  6E01               	movwf	memcpy@d1,c
  5713  0067BC  0E00               	movlw	high __flash_set_page_size@command
  5714  0067BE  6E02               	movwf	memcpy@d1+1,c
  5715  0067C0  0EC0               	movlw	low _flash_command_pagesize_528
  5716  0067C2  6E03               	movwf	memcpy@s1,c
  5717  0067C4  0E8F               	movlw	high _flash_command_pagesize_528
  5718  0067C6  6E04               	movwf	memcpy@s1+1,c
  5719  0067C8  5003               	movf	memcpy@s1,w,c
  5720  0067CA  1004               	iorwf	memcpy@s1+1,w,c
  5721  0067CC  A4D8               	btfss	status,2,c
  5722  0067CE  0E00               	movlw	low (__mediumconst shr (0+16))
  5723  0067D0  6E05               	movwf	memcpy@s1+2,c
  5724  0067D2  0E00               	movlw	0
  5725  0067D4  6E07               	movwf	memcpy@n+1,c
  5726  0067D6  0E04               	movlw	4
  5727  0067D8  6E06               	movwf	memcpy@n,c
  5728  0067DA  EC3E  F037         	call	_memcpy	;wreg free
  5729  0067DE                     l1742:
  5730                           
  5731                           ;flash.c: 109: spi_tx(command, 4);
  5732  0067DE  0E14               	movlw	low __flash_set_page_size@command
  5733  0067E0  6E01               	movwf	spi_tx@data,c
  5734  0067E2  0E00               	movlw	high __flash_set_page_size@command
  5735  0067E4  6E02               	movwf	spi_tx@data+1,c
  5736  0067E6  0E00               	movlw	0
  5737  0067E8  6E04               	movwf	spi_tx@length+1,c
  5738  0067EA  0E04               	movlw	4
  5739  0067EC  6E03               	movwf	spi_tx@length,c
  5740  0067EE  EC9B  F039         	call	_spi_tx	;wreg free
  5741  0067F2  0012               	return		;funcret
  5742  0067F4                     __end_of__flash_set_page_size:
  5743                           	opt stack 0
  5744                           tblptru	equ	0xFF8
  5745                           tblptrh	equ	0xFF7
  5746                           tblptrl	equ	0xFF6
  5747                           tablat	equ	0xFF5
  5748                           intcon	equ	0xFF2
  5749                           intcon3	equ	0xFF0
  5750                           postinc0	equ	0xFEE
  5751                           wreg	equ	0xFE8
  5752                           postdec1	equ	0xFE5
  5753                           plusw1	equ	0xFE3
  5754                           fsr1h	equ	0xFE2
  5755                           fsr1l	equ	0xFE1
  5756                           plusw2	equ	0xFDB
  5757                           status	equ	0xFD8
  5758                           
  5759 ;; *************** function _fat_init *****************
  5760 ;; Defined at:
  5761 ;;		line 993 in file "fat16.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;		None
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;		None
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  1    wreg      void 
  5768 ;; Registers used:
  5769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5779 ;;Total ram usage:        0 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    6
  5782 ;; This function calls:
  5783 ;;		_fat_format
  5784 ;;		_fat_get_format_status
  5785 ;; This function is called by:
  5786 ;;		_system_full_init
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text20
  5791  0080FE                     __ptext20:
  5792                           	opt stack 0
  5793  0080FE                     _fat_init:
  5794                           	opt stack 23
  5795                           
  5796                           ;fat16.c: 996: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5797                           
  5798                           ;incstack = 0
  5799  0080FE  EC03  F02E         	call	_fat_get_format_status	;wreg free
  5800  008102  0900               	iorlw	0
  5801  008104  A4D8               	btfss	status,2,c
  5802  008106  0012               	return	
  5803                           
  5804                           ;fat16.c: 997: {;fat16.c: 998: fat_format();
  5805  008108  ECFA  F012         	call	_fat_format	;wreg free
  5806  00810C  0012               	return	
  5807  00810E                     __end_of_fat_init:
  5808                           	opt stack 0
  5809                           tblptru	equ	0xFF8
  5810                           tblptrh	equ	0xFF7
  5811                           tblptrl	equ	0xFF6
  5812                           tablat	equ	0xFF5
  5813                           intcon	equ	0xFF2
  5814                           intcon3	equ	0xFF0
  5815                           postinc0	equ	0xFEE
  5816                           wreg	equ	0xFE8
  5817                           postdec1	equ	0xFE5
  5818                           plusw1	equ	0xFE3
  5819                           fsr1h	equ	0xFE2
  5820                           fsr1l	equ	0xFE1
  5821                           plusw2	equ	0xFDB
  5822                           status	equ	0xFD8
  5823                           
  5824 ;; *************** function _fat_get_format_status *****************
  5825 ;; Defined at:
  5826 ;;		line 905 in file "fat16.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;		None
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  cntr            2   45[COMRAM] unsigned int 
  5831 ;; Return value:  Size  Location     Type
  5832 ;;                  1    wreg      enum E6872
  5833 ;; Registers used:
  5834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5842 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5843 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5844 ;;Total ram usage:        4 bytes
  5845 ;; Hardware stack levels used:    1
  5846 ;; Hardware stack levels required when called:    5
  5847 ;; This function calls:
  5848 ;;		__get_fbr
  5849 ;;		__get_mbr
  5850 ;;		_flash_page_read
  5851 ;; This function is called by:
  5852 ;;		_fat_init
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text21
  5857  005C06                     __ptext21:
  5858                           	opt stack 0
  5859  005C06                     _fat_get_format_status:
  5860                           	opt stack 23
  5861                           
  5862                           ;fat16.c: 907: uint16_t cntr;;fat16.c: 910: flash_page_read(0, buffer);
  5863                           
  5864                           ;incstack = 0
  5865  005C06  0E00               	movlw	0
  5866  005C08  6E29               	movwf	flash_page_read@page+1,c
  5867  005C0A  0E00               	movlw	0
  5868  005C0C  6E28               	movwf	flash_page_read@page,c
  5869  005C0E  0E80               	movlw	low _buffer
  5870  005C10  6E2A               	movwf	flash_page_read@data,c
  5871  005C12  0E03               	movlw	high _buffer
  5872  005C14  6E2B               	movwf	flash_page_read@data+1,c
  5873  005C16  ECF2  F03D         	call	_flash_page_read	;wreg free
  5874                           
  5875                           ;fat16.c: 911: for(cntr=0; cntr<512; ++cntr)
  5876  005C1A  0E00               	movlw	0
  5877  005C1C  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5878  005C1E  0E00               	movlw	0
  5879  005C20  6E2E               	movwf	fat_get_format_status@cntr,c
  5880  005C22                     l13159:
  5881  005C22  0E02               	movlw	2
  5882  005C24  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5883  005C26  B0D8               	btfsc	status,0,c
  5884  005C28  D016               	goto	u10040
  5885                           
  5886                           ;fat16.c: 912: {;fat16.c: 913: if(buffer[cntr] != _get_mbr(cntr))
  5887  005C2A  0E80               	movlw	low _buffer
  5888  005C2C  242E               	addwf	fat_get_format_status@cntr,w,c
  5889  005C2E  6ED9               	movwf	fsr2l,c
  5890  005C30  0E03               	movlw	high _buffer
  5891  005C32  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5892  005C34  6EDA               	movwf	fsr2h,c
  5893  005C36  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  5894  005C3A  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  5895  005C3E  EC4C  F029         	call	__get_mbr	;wreg free
  5896  005C42  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5897  005C44  50DE               	movf	postinc2,w,c
  5898  005C46  182D               	xorwf	??_fat_get_format_status+1,w,c
  5899  005C48  B4D8               	btfsc	status,2,c
  5900  005C4A  D002               	goto	l2167
  5901                           
  5902                           ;fat16.c: 914: {;fat16.c: 915: return DRIVE_NOT_FORMATED;
  5903  005C4C  0E00               	movlw	0
  5904  005C4E  0012               	return	
  5905  005C50                     l2167:
  5906  005C50  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5907  005C52  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5908  005C54  D7E6               	goto	l13159
  5909  005C56                     u10040:
  5910                           
  5911                           ;fat16.c: 916: };fat16.c: 917: };fat16.c: 920: flash_page_read(1, buffer);
  5912  005C56  0E00               	movlw	0
  5913  005C58  6E29               	movwf	flash_page_read@page+1,c
  5914  005C5A  0E01               	movlw	1
  5915  005C5C  6E28               	movwf	flash_page_read@page,c
  5916  005C5E  0E80               	movlw	low _buffer
  5917  005C60  6E2A               	movwf	flash_page_read@data,c
  5918  005C62  0E03               	movlw	high _buffer
  5919  005C64  6E2B               	movwf	flash_page_read@data+1,c
  5920  005C66  ECF2  F03D         	call	_flash_page_read	;wreg free
  5921                           
  5922                           ;fat16.c: 921: for(cntr=0; cntr<512; ++cntr)
  5923  005C6A  0E00               	movlw	0
  5924  005C6C  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5925  005C6E  0E00               	movlw	0
  5926  005C70  6E2E               	movwf	fat_get_format_status@cntr,c
  5927  005C72                     l13177:
  5928  005C72  0E02               	movlw	2
  5929  005C74  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5930  005C76  B0D8               	btfsc	status,0,c
  5931  005C78  D016               	goto	u10070
  5932                           
  5933                           ;fat16.c: 922: {;fat16.c: 923: if(buffer[cntr] != _get_fbr(cntr))
  5934  005C7A  0E80               	movlw	low _buffer
  5935  005C7C  242E               	addwf	fat_get_format_status@cntr,w,c
  5936  005C7E  6ED9               	movwf	fsr2l,c
  5937  005C80  0E03               	movlw	high _buffer
  5938  005C82  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5939  005C84  6EDA               	movwf	fsr2h,c
  5940  005C86  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  5941  005C8A  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  5942  005C8E  EC66  F00D         	call	__get_fbr	;wreg free
  5943  005C92  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5944  005C94  50DE               	movf	postinc2,w,c
  5945  005C96  182D               	xorwf	??_fat_get_format_status+1,w,c
  5946  005C98  B4D8               	btfsc	status,2,c
  5947  005C9A  D002               	goto	l2171
  5948                           
  5949                           ;fat16.c: 924: {;fat16.c: 925: return DRIVE_NOT_FORMATED;
  5950  005C9C  0E00               	movlw	0
  5951  005C9E  0012               	return	
  5952  005CA0                     l2171:
  5953  005CA0  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5954  005CA2  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5955  005CA4  D7E6               	goto	l13177
  5956  005CA6                     u10070:
  5957                           
  5958                           ;fat16.c: 926: };fat16.c: 927: };fat16.c: 930: return DRIVE_FORMATED;
  5959  005CA6  0E01               	movlw	1
  5960  005CA8  0012               	return	
  5961  005CAA                     __end_of_fat_get_format_status:
  5962                           	opt stack 0
  5963                           tblptru	equ	0xFF8
  5964                           tblptrh	equ	0xFF7
  5965                           tblptrl	equ	0xFF6
  5966                           tablat	equ	0xFF5
  5967                           intcon	equ	0xFF2
  5968                           intcon3	equ	0xFF0
  5969                           postinc0	equ	0xFEE
  5970                           wreg	equ	0xFE8
  5971                           postdec1	equ	0xFE5
  5972                           plusw1	equ	0xFE3
  5973                           fsr1h	equ	0xFE2
  5974                           fsr1l	equ	0xFE1
  5975                           postinc2	equ	0xFDE
  5976                           plusw2	equ	0xFDB
  5977                           fsr2h	equ	0xFDA
  5978                           fsr2l	equ	0xFD9
  5979                           status	equ	0xFD8
  5980                           
  5981 ;; *************** function _fat_format *****************
  5982 ;; Defined at:
  5983 ;;		line 933 in file "fat16.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;		None
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;  cntr            2   36[COMRAM] unsigned int 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1    wreg      void 
  5990 ;; Registers used:
  5991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6001 ;;Total ram usage:        2 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    5
  6004 ;; This function calls:
  6005 ;;		__get_data
  6006 ;;		__get_fat
  6007 ;;		__get_fbr
  6008 ;;		__get_mbr
  6009 ;;		__get_root
  6010 ;;		_flash_page_write
  6011 ;; This function is called by:
  6012 ;;		_fat_init
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text22
  6017  0025F4                     __ptext22:
  6018                           	opt stack 0
  6019  0025F4                     _fat_format:
  6020                           	opt stack 23
  6021                           
  6022                           ;fat16.c: 935: uint16_t cntr;;fat16.c: 938: for(cntr=0; cntr<512; ++cntr)
  6023                           
  6024                           ;incstack = 0
  6025  0025F4  0E00               	movlw	0
  6026  0025F6  6E26               	movwf	fat_format@cntr+1,c
  6027  0025F8  0E00               	movlw	0
  6028  0025FA  6E25               	movwf	fat_format@cntr,c
  6029  0025FC                     l13197:
  6030  0025FC  0E02               	movlw	2
  6031  0025FE  5C26               	subwf	fat_format@cntr+1,w,c
  6032  002600  B0D8               	btfsc	status,0,c
  6033  002602  D010               	goto	u10090
  6034                           
  6035                           ;fat16.c: 939: {;fat16.c: 940: buffer[cntr] = _get_mbr(cntr);
  6036  002604  0E80               	movlw	low _buffer
  6037  002606  2425               	addwf	fat_format@cntr,w,c
  6038  002608  6ED9               	movwf	fsr2l,c
  6039  00260A  0E03               	movlw	high _buffer
  6040  00260C  2026               	addwfc	fat_format@cntr+1,w,c
  6041  00260E  6EDA               	movwf	fsr2h,c
  6042  002610  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
  6043  002614  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
  6044  002618  EC4C  F029         	call	__get_mbr	;wreg free
  6045  00261C  6EDF               	movwf	indf2,c
  6046  00261E  4A25               	infsnz	fat_format@cntr,f,c
  6047  002620  2A26               	incf	fat_format@cntr+1,f,c
  6048  002622  D7EC               	goto	l13197
  6049  002624                     u10090:
  6050                           
  6051                           ;fat16.c: 941: };fat16.c: 942: flash_page_write(0, buffer);
  6052  002624  0E00               	movlw	0
  6053  002626  6E21               	movwf	flash_page_write@page+1,c
  6054  002628  0E00               	movlw	0
  6055  00262A  6E20               	movwf	flash_page_write@page,c
  6056  00262C  0E80               	movlw	low _buffer
  6057  00262E  6E22               	movwf	flash_page_write@data,c
  6058  002630  0E03               	movlw	high _buffer
  6059  002632  6E23               	movwf	flash_page_write@data+1,c
  6060  002634  EC1D  F03A         	call	_flash_page_write	;wreg free
  6061                           
  6062                           ;fat16.c: 945: for(cntr=0; cntr<512; ++cntr)
  6063  002638  0E00               	movlw	0
  6064  00263A  6E26               	movwf	fat_format@cntr+1,c
  6065  00263C  0E00               	movlw	0
  6066  00263E  6E25               	movwf	fat_format@cntr,c
  6067  002640                     l13211:
  6068  002640  0E02               	movlw	2
  6069  002642  5C26               	subwf	fat_format@cntr+1,w,c
  6070  002644  B0D8               	btfsc	status,0,c
  6071  002646  D010               	goto	u10110
  6072                           
  6073                           ;fat16.c: 946: {;fat16.c: 947: buffer[cntr] = _get_fbr(cntr);
  6074  002648  0E80               	movlw	low _buffer
  6075  00264A  2425               	addwf	fat_format@cntr,w,c
  6076  00264C  6ED9               	movwf	fsr2l,c
  6077  00264E  0E03               	movlw	high _buffer
  6078  002650  2026               	addwfc	fat_format@cntr+1,w,c
  6079  002652  6EDA               	movwf	fsr2h,c
  6080  002654  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
  6081  002658  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
  6082  00265C  EC66  F00D         	call	__get_fbr	;wreg free
  6083  002660  6EDF               	movwf	indf2,c
  6084  002662  4A25               	infsnz	fat_format@cntr,f,c
  6085  002664  2A26               	incf	fat_format@cntr+1,f,c
  6086  002666  D7EC               	goto	l13211
  6087  002668                     u10110:
  6088                           
  6089                           ;fat16.c: 948: };fat16.c: 949: flash_page_write(1, buffer);
  6090  002668  0E00               	movlw	0
  6091  00266A  6E21               	movwf	flash_page_write@page+1,c
  6092  00266C  0E01               	movlw	1
  6093  00266E  6E20               	movwf	flash_page_write@page,c
  6094  002670  0E80               	movlw	low _buffer
  6095  002672  6E22               	movwf	flash_page_write@data,c
  6096  002674  0E03               	movlw	high _buffer
  6097  002676  6E23               	movwf	flash_page_write@data+1,c
  6098  002678  EC1D  F03A         	call	_flash_page_write	;wreg free
  6099                           
  6100                           ;fat16.c: 952: for(cntr=0; cntr<512; ++cntr)
  6101  00267C  0E00               	movlw	0
  6102  00267E  6E26               	movwf	fat_format@cntr+1,c
  6103  002680  0E00               	movlw	0
  6104  002682  6E25               	movwf	fat_format@cntr,c
  6105  002684                     l13225:
  6106  002684  0E02               	movlw	2
  6107  002686  5C26               	subwf	fat_format@cntr+1,w,c
  6108  002688  B0D8               	btfsc	status,0,c
  6109  00268A  D010               	goto	u10130
  6110                           
  6111                           ;fat16.c: 953: {;fat16.c: 954: buffer[cntr] = _get_fat(cntr);
  6112  00268C  0E80               	movlw	low _buffer
  6113  00268E  2425               	addwf	fat_format@cntr,w,c
  6114  002690  6ED9               	movwf	fsr2l,c
  6115  002692  0E03               	movlw	high _buffer
  6116  002694  2026               	addwfc	fat_format@cntr+1,w,c
  6117  002696  6EDA               	movwf	fsr2h,c
  6118  002698  C025  F001         	movff	fat_format@cntr,__get_fat@idx
  6119  00269C  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
  6120  0026A0  ECC7  F039         	call	__get_fat	;wreg free
  6121  0026A4  6EDF               	movwf	indf2,c
  6122  0026A6  4A25               	infsnz	fat_format@cntr,f,c
  6123  0026A8  2A26               	incf	fat_format@cntr+1,f,c
  6124  0026AA  D7EC               	goto	l13225
  6125  0026AC                     u10130:
  6126                           
  6127                           ;fat16.c: 955: };fat16.c: 956: flash_page_write(2, buffer);
  6128  0026AC  0E00               	movlw	0
  6129  0026AE  6E21               	movwf	flash_page_write@page+1,c
  6130  0026B0  0E02               	movlw	2
  6131  0026B2  6E20               	movwf	flash_page_write@page,c
  6132  0026B4  0E80               	movlw	low _buffer
  6133  0026B6  6E22               	movwf	flash_page_write@data,c
  6134  0026B8  0E03               	movlw	high _buffer
  6135  0026BA  6E23               	movwf	flash_page_write@data+1,c
  6136  0026BC  EC1D  F03A         	call	_flash_page_write	;wreg free
  6137                           
  6138                           ;fat16.c: 959: for(cntr=0; cntr<512; ++cntr)
  6139  0026C0  0E00               	movlw	0
  6140  0026C2  6E26               	movwf	fat_format@cntr+1,c
  6141  0026C4  0E00               	movlw	0
  6142  0026C6  6E25               	movwf	fat_format@cntr,c
  6143  0026C8                     l13239:
  6144  0026C8  0E02               	movlw	2
  6145  0026CA  5C26               	subwf	fat_format@cntr+1,w,c
  6146  0026CC  B0D8               	btfsc	status,0,c
  6147  0026CE  D00B               	goto	u10150
  6148                           
  6149                           ;fat16.c: 960: {;fat16.c: 961: buffer[cntr] = 0x00;
  6150  0026D0  0E80               	movlw	low _buffer
  6151  0026D2  2425               	addwf	fat_format@cntr,w,c
  6152  0026D4  6ED9               	movwf	fsr2l,c
  6153  0026D6  0E03               	movlw	high _buffer
  6154  0026D8  2026               	addwfc	fat_format@cntr+1,w,c
  6155  0026DA  6EDA               	movwf	fsr2h,c
  6156  0026DC  0E00               	movlw	0
  6157  0026DE  6EDF               	movwf	indf2,c
  6158  0026E0  4A25               	infsnz	fat_format@cntr,f,c
  6159  0026E2  2A26               	incf	fat_format@cntr+1,f,c
  6160  0026E4  D7F1               	goto	l13239
  6161  0026E6                     u10150:
  6162                           
  6163                           ;fat16.c: 962: };fat16.c: 963: for(cntr=2+1; cntr<=33; ++cntr)
  6164  0026E6  0E00               	movlw	0
  6165  0026E8  6E26               	movwf	fat_format@cntr+1,c
  6166  0026EA  0E03               	movlw	3
  6167  0026EC  6E25               	movwf	fat_format@cntr,c
  6168  0026EE                     l13251:
  6169  0026EE  5026               	movf	fat_format@cntr+1,w,c
  6170  0026F0  E111               	bnz	l13261
  6171  0026F2  0E22               	movlw	34
  6172  0026F4  5C25               	subwf	fat_format@cntr,w,c
  6173  0026F6  B0D8               	btfsc	status,0,c
  6174  0026F8  D00D               	goto	u10170
  6175                           
  6176                           ;fat16.c: 964: {;fat16.c: 965: flash_page_write(cntr, buffer);
  6177  0026FA  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  6178  0026FE  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  6179  002702  0E80               	movlw	low _buffer
  6180  002704  6E22               	movwf	flash_page_write@data,c
  6181  002706  0E03               	movlw	high _buffer
  6182  002708  6E23               	movwf	flash_page_write@data+1,c
  6183  00270A  EC1D  F03A         	call	_flash_page_write	;wreg free
  6184  00270E  4A25               	infsnz	fat_format@cntr,f,c
  6185  002710  2A26               	incf	fat_format@cntr+1,f,c
  6186  002712  D7ED               	goto	l13251
  6187  002714                     u10170:
  6188  002714                     l13261:
  6189                           
  6190                           ;fat16.c: 966: };fat16.c: 969: for(cntr=0; cntr<512; ++cntr)
  6191  002714  0E00               	movlw	0
  6192  002716  6E26               	movwf	fat_format@cntr+1,c
  6193  002718  0E00               	movlw	0
  6194  00271A  6E25               	movwf	fat_format@cntr,c
  6195  00271C                     l13263:
  6196  00271C  0E02               	movlw	2
  6197  00271E  5C26               	subwf	fat_format@cntr+1,w,c
  6198  002720  B0D8               	btfsc	status,0,c
  6199  002722  D010               	goto	u10190
  6200                           
  6201                           ;fat16.c: 970: {;fat16.c: 971: buffer[cntr] = _get_root(cntr);
  6202  002724  0E80               	movlw	low _buffer
  6203  002726  2425               	addwf	fat_format@cntr,w,c
  6204  002728  6ED9               	movwf	fsr2l,c
  6205  00272A  0E03               	movlw	high _buffer
  6206  00272C  2026               	addwfc	fat_format@cntr+1,w,c
  6207  00272E  6EDA               	movwf	fsr2h,c
  6208  002730  C025  F001         	movff	fat_format@cntr,__get_root@idx
  6209  002734  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
  6210  002738  EC8D  F019         	call	__get_root	;wreg free
  6211  00273C  6EDF               	movwf	indf2,c
  6212  00273E  4A25               	infsnz	fat_format@cntr,f,c
  6213  002740  2A26               	incf	fat_format@cntr+1,f,c
  6214  002742  D7EC               	goto	l13263
  6215  002744                     u10190:
  6216                           
  6217                           ;fat16.c: 972: };fat16.c: 973: flash_page_write(34, buffer);
  6218  002744  0E00               	movlw	0
  6219  002746  6E21               	movwf	flash_page_write@page+1,c
  6220  002748  0E22               	movlw	34
  6221  00274A  6E20               	movwf	flash_page_write@page,c
  6222  00274C  0E80               	movlw	low _buffer
  6223  00274E  6E22               	movwf	flash_page_write@data,c
  6224  002750  0E03               	movlw	high _buffer
  6225  002752  6E23               	movwf	flash_page_write@data+1,c
  6226  002754  EC1D  F03A         	call	_flash_page_write	;wreg free
  6227                           
  6228                           ;fat16.c: 976: for(cntr=0; cntr<512; ++cntr)
  6229  002758  0E00               	movlw	0
  6230  00275A  6E26               	movwf	fat_format@cntr+1,c
  6231  00275C  0E00               	movlw	0
  6232  00275E  6E25               	movwf	fat_format@cntr,c
  6233  002760                     l13277:
  6234  002760  0E02               	movlw	2
  6235  002762  5C26               	subwf	fat_format@cntr+1,w,c
  6236  002764  B0D8               	btfsc	status,0,c
  6237  002766  D00B               	goto	u10210
  6238                           
  6239                           ;fat16.c: 977: {;fat16.c: 978: buffer[cntr] = 0x00;
  6240  002768  0E80               	movlw	low _buffer
  6241  00276A  2425               	addwf	fat_format@cntr,w,c
  6242  00276C  6ED9               	movwf	fsr2l,c
  6243  00276E  0E03               	movlw	high _buffer
  6244  002770  2026               	addwfc	fat_format@cntr+1,w,c
  6245  002772  6EDA               	movwf	fsr2h,c
  6246  002774  0E00               	movlw	0
  6247  002776  6EDF               	movwf	indf2,c
  6248  002778  4A25               	infsnz	fat_format@cntr,f,c
  6249  00277A  2A26               	incf	fat_format@cntr+1,f,c
  6250  00277C  D7F1               	goto	l13277
  6251  00277E                     u10210:
  6252                           
  6253                           ;fat16.c: 979: };fat16.c: 980: for(cntr=34+1; cntr<=37; ++cntr)
  6254  00277E  0E00               	movlw	0
  6255  002780  6E26               	movwf	fat_format@cntr+1,c
  6256  002782  0E23               	movlw	35
  6257  002784  6E25               	movwf	fat_format@cntr,c
  6258  002786                     l13289:
  6259  002786  5026               	movf	fat_format@cntr+1,w,c
  6260  002788  E111               	bnz	l13299
  6261  00278A  0E26               	movlw	38
  6262  00278C  5C25               	subwf	fat_format@cntr,w,c
  6263  00278E  B0D8               	btfsc	status,0,c
  6264  002790  D00D               	goto	u10230
  6265                           
  6266                           ;fat16.c: 981: {;fat16.c: 982: flash_page_write(cntr, buffer);
  6267  002792  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  6268  002796  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  6269  00279A  0E80               	movlw	low _buffer
  6270  00279C  6E22               	movwf	flash_page_write@data,c
  6271  00279E  0E03               	movlw	high _buffer
  6272  0027A0  6E23               	movwf	flash_page_write@data+1,c
  6273  0027A2  EC1D  F03A         	call	_flash_page_write	;wreg free
  6274  0027A6  4A25               	infsnz	fat_format@cntr,f,c
  6275  0027A8  2A26               	incf	fat_format@cntr+1,f,c
  6276  0027AA  D7ED               	goto	l13289
  6277  0027AC                     u10230:
  6278  0027AC                     l13299:
  6279                           
  6280                           ;fat16.c: 983: };fat16.c: 986: for(cntr=0; cntr<512; ++cntr)
  6281  0027AC  0E00               	movlw	0
  6282  0027AE  6E26               	movwf	fat_format@cntr+1,c
  6283  0027B0  0E00               	movlw	0
  6284  0027B2  6E25               	movwf	fat_format@cntr,c
  6285  0027B4                     l13301:
  6286  0027B4  0E02               	movlw	2
  6287  0027B6  5C26               	subwf	fat_format@cntr+1,w,c
  6288  0027B8  B0D8               	btfsc	status,0,c
  6289  0027BA  D010               	goto	u10250
  6290                           
  6291                           ;fat16.c: 987: {;fat16.c: 988: buffer[cntr] = _get_data(cntr);
  6292  0027BC  0E80               	movlw	low _buffer
  6293  0027BE  2425               	addwf	fat_format@cntr,w,c
  6294  0027C0  6ED9               	movwf	fsr2l,c
  6295  0027C2  0E03               	movlw	high _buffer
  6296  0027C4  2026               	addwfc	fat_format@cntr+1,w,c
  6297  0027C6  6EDA               	movwf	fsr2h,c
  6298  0027C8  C025  F001         	movff	fat_format@cntr,__get_data@idx
  6299  0027CC  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
  6300  0027D0  ECF2  F03E         	call	__get_data	;wreg free
  6301  0027D4  6EDF               	movwf	indf2,c
  6302  0027D6  4A25               	infsnz	fat_format@cntr,f,c
  6303  0027D8  2A26               	incf	fat_format@cntr+1,f,c
  6304  0027DA  D7EC               	goto	l13301
  6305  0027DC                     u10250:
  6306                           
  6307                           ;fat16.c: 989: };fat16.c: 990: flash_page_write(38, buffer);
  6308  0027DC  0E00               	movlw	0
  6309  0027DE  6E21               	movwf	flash_page_write@page+1,c
  6310  0027E0  0E26               	movlw	38
  6311  0027E2  6E20               	movwf	flash_page_write@page,c
  6312  0027E4  0E80               	movlw	low _buffer
  6313  0027E6  6E22               	movwf	flash_page_write@data,c
  6314  0027E8  0E03               	movlw	high _buffer
  6315  0027EA  6E23               	movwf	flash_page_write@data+1,c
  6316  0027EC  EC1D  F03A         	call	_flash_page_write	;wreg free
  6317  0027F0  0012               	return		;funcret
  6318  0027F2                     __end_of_fat_format:
  6319                           	opt stack 0
  6320                           tblptru	equ	0xFF8
  6321                           tblptrh	equ	0xFF7
  6322                           tblptrl	equ	0xFF6
  6323                           tablat	equ	0xFF5
  6324                           intcon	equ	0xFF2
  6325                           intcon3	equ	0xFF0
  6326                           postinc0	equ	0xFEE
  6327                           wreg	equ	0xFE8
  6328                           postdec1	equ	0xFE5
  6329                           plusw1	equ	0xFE3
  6330                           fsr1h	equ	0xFE2
  6331                           fsr1l	equ	0xFE1
  6332                           indf2	equ	0xFDF
  6333                           postinc2	equ	0xFDE
  6334                           plusw2	equ	0xFDB
  6335                           fsr2h	equ	0xFDA
  6336                           fsr2l	equ	0xFD9
  6337                           status	equ	0xFD8
  6338                           
  6339 ;; *************** function __get_root *****************
  6340 ;; Defined at:
  6341 ;;		line 819 in file "fat16.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  idx             2    0[COMRAM] unsigned int 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      unsigned char 
  6348 ;; Registers used:
  6349 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6357 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6358 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;Total ram usage:        6 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		_fat_format
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text23
  6369  00331A                     __ptext23:
  6370                           	opt stack 0
  6371  00331A                     __get_root:
  6372                           	opt stack 27
  6373                           
  6374                           ;fat16.c: 821: if (idx < 0x20)
  6375                           
  6376                           ;incstack = 0
  6377  00331A  5002               	movf	__get_root@idx+1,w,c
  6378  00331C  E11D               	bnz	l12715
  6379  00331E  0E20               	movlw	32
  6380  003320  5C01               	subwf	__get_root@idx,w,c
  6381  003322  B0D8               	btfsc	status,0,c
  6382  003324  D019               	goto	l2132
  6383                           
  6384                           ;fat16.c: 822: {;fat16.c: 823: if (idx < 11)
  6385  003326  5002               	movf	__get_root@idx+1,w,c
  6386  003328  E110               	bnz	l12709
  6387  00332A  0E0B               	movlw	11
  6388  00332C  5C01               	subwf	__get_root@idx,w,c
  6389  00332E  B0D8               	btfsc	status,0,c
  6390  003330  D00C               	goto	l2130
  6391                           
  6392                           ;fat16.c: 824: {;fat16.c: 825: return "SolarChargr"[idx];
  6393  003332  0EDD               	movlw	low STR_9
  6394  003334  2401               	addwf	__get_root@idx,w,c
  6395  003336  6EF6               	movwf	tblptrl,c
  6396  003338  0E8F               	movlw	high STR_9
  6397  00333A  2002               	addwfc	__get_root@idx+1,w,c
  6398  00333C  6EF7               	movwf	tblptrh,c
  6399  00333E                     	if	1	;There are 3 active tblptr bytes
  6400  00333E  6AF8               	clrf	tblptru,c
  6401  003340  0E00               	movlw	low (__mediumconst shr (0+16))
  6402  003342  22F8               	addwfc	tblptru,f,c
  6403  003344                     	endif
  6404  003344  0008               	tblrd		*
  6405  003346  50F5               	movf	tablat,w,c
  6406  003348  0012               	return	
  6407  00334A                     l2130:
  6408  00334A                     l12709:
  6409                           
  6410                           ;fat16.c: 826: };fat16.c: 827: if(idx==11)
  6411  00334A  0E0B               	movlw	11
  6412  00334C  1801               	xorwf	__get_root@idx,w,c
  6413  00334E  1002               	iorwf	__get_root@idx+1,w,c
  6414  003350  A4D8               	btfss	status,2,c
  6415  003352  D002               	goto	l2132
  6416                           
  6417                           ;fat16.c: 828: {;fat16.c: 829: return 0x08;
  6418  003354  0E08               	movlw	8
  6419  003356  0012               	return	
  6420  003358                     l2132:
  6421  003358                     l12715:
  6422                           
  6423                           ;fat16.c: 830: };fat16.c: 831: };fat16.c: 832: if (idx < 0x40)
  6424  003358  5002               	movf	__get_root@idx+1,w,c
  6425  00335A  E103               	bnz	u9601
  6426  00335C  0E40               	movlw	64
  6427  00335E  5C01               	subwf	__get_root@idx,w,c
  6428  003360  B0D8               	btfsc	status,0,c
  6429  003362                     u9601:
  6430  003362  D0A4               	goto	l2158
  6431                           
  6432                           ;fat16.c: 833: {;fat16.c: 834: idx -= 0x20;
  6433  003364  0E20               	movlw	32
  6434  003366  5E01               	subwf	__get_root@idx,f,c
  6435  003368  0E00               	movlw	0
  6436  00336A  5A02               	subwfb	__get_root@idx+1,f,c
  6437                           
  6438                           ;fat16.c: 835: if (idx < 0+8)
  6439  00336C  5002               	movf	__get_root@idx+1,w,c
  6440  00336E  E110               	bnz	l12723
  6441  003370  0E08               	movlw	8
  6442  003372  5C01               	subwf	__get_root@idx,w,c
  6443  003374  B0D8               	btfsc	status,0,c
  6444  003376  D00C               	goto	l2134
  6445                           
  6446                           ;fat16.c: 836: {;fat16.c: 837: return "FILE    "[idx];
  6447  003378  0EE9               	movlw	low STR_10
  6448  00337A  2401               	addwf	__get_root@idx,w,c
  6449  00337C  6EF6               	movwf	tblptrl,c
  6450  00337E  0E8F               	movlw	high STR_10
  6451  003380  2002               	addwfc	__get_root@idx+1,w,c
  6452  003382  6EF7               	movwf	tblptrh,c
  6453  003384                     	if	1	;There are 3 active tblptr bytes
  6454  003384  6AF8               	clrf	tblptru,c
  6455  003386  0E00               	movlw	low (__mediumconst shr (0+16))
  6456  003388  22F8               	addwfc	tblptru,f,c
  6457  00338A                     	endif
  6458  00338A  0008               	tblrd		*
  6459  00338C  50F5               	movf	tablat,w,c
  6460  00338E  0012               	return	
  6461  003390                     l2134:
  6462  003390                     l12723:
  6463                           
  6464                           ;fat16.c: 838: };fat16.c: 839: if (idx < 11)
  6465  003390  5002               	movf	__get_root@idx+1,w,c
  6466  003392  E146               	bnz	l12815
  6467  003394  0E0B               	movlw	11
  6468  003396  5C01               	subwf	__get_root@idx,w,c
  6469  003398  B0D8               	btfsc	status,0,c
  6470  00339A  D042               	goto	l2136
  6471                           
  6472                           ;fat16.c: 840: {;fat16.c: 841: return "TXT"[idx-8];
  6473  00339C  0EF8               	movlw	248
  6474  00339E  6E03               	movwf	??__get_root& (0+255),c
  6475  0033A0  0EFF               	movlw	255
  6476  0033A2  6E04               	movwf	(??__get_root+1)& (0+255),c
  6477  0033A4  C001  F005         	movff	__get_root@idx,??__get_root+2
  6478  0033A8  C002  F006         	movff	__get_root@idx+1,??__get_root+3
  6479  0033AC  5003               	movf	??__get_root,w,c
  6480  0033AE  2605               	addwf	??__get_root+2,f,c
  6481  0033B0  5004               	movf	??__get_root+1,w,c
  6482  0033B2  2206               	addwfc	??__get_root+3,f,c
  6483  0033B4  0EFB               	movlw	low STR_11
  6484  0033B6  2405               	addwf	??__get_root+2,w,c
  6485  0033B8  6EF6               	movwf	tblptrl,c
  6486  0033BA  0E8F               	movlw	high STR_11
  6487  0033BC  2006               	addwfc	??__get_root+3,w,c
  6488  0033BE  6EF7               	movwf	tblptrh,c
  6489  0033C0                     	if	1	;There are 3 active tblptr bytes
  6490  0033C0  6AF8               	clrf	tblptru,c
  6491  0033C2  0E00               	movlw	low (__mediumconst shr (0+16))
  6492  0033C4  22F8               	addwfc	tblptru,f,c
  6493  0033C6                     	endif
  6494  0033C6  0008               	tblrd		*
  6495  0033C8  50F5               	movf	tablat,w,c
  6496  0033CA  0012               	return	
  6497  0033CC                     
  6498                           ;fat16.c: 846: return 0x20;
  6499  0033CC  0E20               	movlw	32
  6500  0033CE  0012               	return	
  6501  0033D0                     
  6502                           ;fat16.c: 848: return 0x06;
  6503  0033D0  0E06               	movlw	6
  6504  0033D2  0012               	return	
  6505  0033D4                     
  6506                           ;fat16.c: 850: return 0x28;
  6507  0033D4  0E28               	movlw	40
  6508  0033D6  0012               	return	
  6509  0033D8                     
  6510                           ;fat16.c: 852: return 0x78;
  6511  0033D8  0E78               	movlw	120
  6512  0033DA  0012               	return	
  6513  0033DC                     
  6514                           ;fat16.c: 854: return 0xDE;
  6515  0033DC  0EDE               	movlw	222
  6516  0033DE  0012               	return	
  6517  0033E0                     
  6518                           ;fat16.c: 856: return 0x38;
  6519  0033E0  0E38               	movlw	56
  6520  0033E2  0012               	return	
  6521  0033E4                     
  6522                           ;fat16.c: 858: return 0x5F;
  6523  0033E4  0E5F               	movlw	95
  6524  0033E6  0012               	return	
  6525  0033E8                     
  6526                           ;fat16.c: 860: return 0x4B;
  6527  0033E8  0E4B               	movlw	75
  6528  0033EA  0012               	return	
  6529  0033EC                     
  6530                           ;fat16.c: 862: return 0x00;
  6531  0033EC  0E00               	movlw	0
  6532  0033EE  0012               	return	
  6533  0033F0                     
  6534                           ;fat16.c: 864: return 0x00;
  6535  0033F0  0E00               	movlw	0
  6536  0033F2  0012               	return	
  6537  0033F4                     
  6538                           ;fat16.c: 866: return 0x04;
  6539  0033F4  0E04               	movlw	4
  6540  0033F6  0012               	return	
  6541  0033F8                     
  6542                           ;fat16.c: 868: return 0x77;
  6543  0033F8  0E77               	movlw	119
  6544  0033FA  0012               	return	
  6545  0033FC                     
  6546                           ;fat16.c: 870: return 0xDE;
  6547  0033FC  0EDE               	movlw	222
  6548  0033FE  0012               	return	
  6549  003400                     
  6550                           ;fat16.c: 872: return 0x38;
  6551  003400  0E38               	movlw	56
  6552  003402  0012               	return	
  6553  003404                     
  6554                           ;fat16.c: 874: return ((unsigned char)((((uint16_t)2))&0xFF));
  6555  003404  0E02               	movlw	2
  6556  003406  0012               	return	
  6557  003408                     
  6558                           ;fat16.c: 876: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  6559  003408  0E00               	movlw	0
  6560  00340A  0012               	return	
  6561  00340C                     
  6562                           ;fat16.c: 878: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0xF
      +                          F));
  6563  00340C  0E0C               	movlw	12
  6564  00340E  0012               	return	
  6565  003410                     
  6566                           ;fat16.c: 881: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>8
      +                          )&0xFF));
  6567  003410  0E00               	movlw	0
  6568  003412  0012               	return	
  6569  003414                     
  6570                           ;fat16.c: 884: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF)
      +                          ))&0xFF));
  6571  003414  0E00               	movlw	0
  6572  003416  0012               	return	
  6573  003418                     
  6574                           ;fat16.c: 887: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  6575  003418  0E00               	movlw	0
  6576  00341A  0012               	return	
  6577  00341C                     
  6578                           ;fat16.c: 890: return 0x00;
  6579  00341C  0E00               	movlw	0
  6580  00341E  0012               	return	
  6581  003420                     l2136:
  6582  003420                     l12815:
  6583  003420  C001  F003         	movff	__get_root@idx,??__get_root
  6584  003424  C002  F004         	movff	__get_root@idx+1,??__get_root+1
  6585                           
  6586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6587                           ; Switch size 1, requested type "space"
  6588                           ; Number of cases is 1, Range of values is 0 to 0
  6589                           ; switch strategies available:
  6590                           ; Name         Instructions Cycles
  6591                           ; simple_byte            4     3 (average)
  6592                           ;	Chosen strategy is simple_byte
  6593  003428  5004               	movf	??__get_root+1,w,c
  6594  00342A  0A00               	xorlw	0	; case 0
  6595  00342C  A4D8               	btfss	status,2,c
  6596  00342E  D7F6               	goto	l2157
  6597                           
  6598                           ; Switch size 1, requested type "space"
  6599                           ; Number of cases is 20, Range of values is 11 to 31
  6600                           ; switch strategies available:
  6601                           ; Name         Instructions Cycles
  6602                           ; simple_byte           61    31 (average)
  6603                           ;	Chosen strategy is simple_byte
  6604  003430  5003               	movf	??__get_root,w,c
  6605  003432  0A0B               	xorlw	11	; case 11
  6606  003434  B4D8               	btfsc	status,2,c
  6607  003436  D7CA               	goto	l2137
  6608  003438  0A06               	xorlw	6	; case 13
  6609  00343A  B4D8               	btfsc	status,2,c
  6610  00343C  D7C9               	goto	l2138
  6611  00343E  0A03               	xorlw	3	; case 14
  6612  003440  B4D8               	btfsc	status,2,c
  6613  003442  D7C8               	goto	l2139
  6614  003444  0A01               	xorlw	1	; case 15
  6615  003446  B4D8               	btfsc	status,2,c
  6616  003448  D7C7               	goto	l2140
  6617  00344A  0A1F               	xorlw	31	; case 16
  6618  00344C  B4D8               	btfsc	status,2,c
  6619  00344E  D7C6               	goto	l2141
  6620  003450  0A01               	xorlw	1	; case 17
  6621  003452  B4D8               	btfsc	status,2,c
  6622  003454  D7C5               	goto	l2142
  6623  003456  0A03               	xorlw	3	; case 18
  6624  003458  B4D8               	btfsc	status,2,c
  6625  00345A  D7C4               	goto	l2143
  6626  00345C  0A01               	xorlw	1	; case 19
  6627  00345E  B4D8               	btfsc	status,2,c
  6628  003460  D7C3               	goto	l2144
  6629  003462  0A07               	xorlw	7	; case 20
  6630  003464  B4D8               	btfsc	status,2,c
  6631  003466  D7C2               	goto	l2145
  6632  003468  0A01               	xorlw	1	; case 21
  6633  00346A  B4D8               	btfsc	status,2,c
  6634  00346C  D7C1               	goto	l2146
  6635  00346E  0A03               	xorlw	3	; case 22
  6636  003470  B4D8               	btfsc	status,2,c
  6637  003472  D7C0               	goto	l2147
  6638  003474  0A01               	xorlw	1	; case 23
  6639  003476  B4D8               	btfsc	status,2,c
  6640  003478  D7BF               	goto	l2148
  6641  00347A  0A0F               	xorlw	15	; case 24
  6642  00347C  B4D8               	btfsc	status,2,c
  6643  00347E  D7BE               	goto	l2149
  6644  003480  0A01               	xorlw	1	; case 25
  6645  003482  B4D8               	btfsc	status,2,c
  6646  003484  D7BD               	goto	l2150
  6647  003486  0A03               	xorlw	3	; case 26
  6648  003488  B4D8               	btfsc	status,2,c
  6649  00348A  D7BC               	goto	l2151
  6650  00348C  0A01               	xorlw	1	; case 27
  6651  00348E  B4D8               	btfsc	status,2,c
  6652  003490  D7BB               	goto	l2152
  6653  003492  0A07               	xorlw	7	; case 28
  6654  003494  B4D8               	btfsc	status,2,c
  6655  003496  D7BA               	goto	l2153
  6656  003498  0A01               	xorlw	1	; case 29
  6657  00349A  B4D8               	btfsc	status,2,c
  6658  00349C  D7B9               	goto	l2154
  6659  00349E  0A03               	xorlw	3	; case 30
  6660  0034A0  B4D8               	btfsc	status,2,c
  6661  0034A2  D7B8               	goto	l2155
  6662  0034A4  0A01               	xorlw	1	; case 31
  6663  0034A6  B4D8               	btfsc	status,2,c
  6664  0034A8  D7B7               	goto	l2156
  6665  0034AA  D7B8               	goto	l2157
  6666  0034AC                     l2158:
  6667                           
  6668                           ;fat16.c: 892: };fat16.c: 893: return 0X00;
  6669  0034AC  0E00               	movlw	0
  6670  0034AE  0012               	return	
  6671  0034B0                     __end_of__get_root:
  6672                           	opt stack 0
  6673                           tblptru	equ	0xFF8
  6674                           tblptrh	equ	0xFF7
  6675                           tblptrl	equ	0xFF6
  6676                           tablat	equ	0xFF5
  6677                           intcon	equ	0xFF2
  6678                           intcon3	equ	0xFF0
  6679                           postinc0	equ	0xFEE
  6680                           wreg	equ	0xFE8
  6681                           postdec1	equ	0xFE5
  6682                           plusw1	equ	0xFE3
  6683                           fsr1h	equ	0xFE2
  6684                           fsr1l	equ	0xFE1
  6685                           indf2	equ	0xFDF
  6686                           postinc2	equ	0xFDE
  6687                           plusw2	equ	0xFDB
  6688                           fsr2h	equ	0xFDA
  6689                           fsr2l	equ	0xFD9
  6690                           status	equ	0xFD8
  6691                           
  6692 ;; *************** function __get_mbr *****************
  6693 ;; Defined at:
  6694 ;;		line 646 in file "fat16.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  idx             2    0[COMRAM] unsigned int 
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;		None
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  1    wreg      unsigned char 
  6701 ;; Registers used:
  6702 ;;		wreg, status,2, status,0
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6710 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6711 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6712 ;;Total ram usage:        4 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; This function calls:
  6715 ;;		Nothing
  6716 ;; This function is called by:
  6717 ;;		_fat_get_format_status
  6718 ;;		_fat_format
  6719 ;; This function uses a non-reentrant model
  6720 ;;
  6721                           
  6722                           	psect	text24
  6723  005298                     __ptext24:
  6724                           	opt stack 0
  6725  005298                     __get_mbr:
  6726                           	opt stack 27
  6727                           
  6728                           ;fat16.c: 648: switch (idx)
  6729                           
  6730                           ;incstack = 0
  6731  005298  D026               	goto	l2039
  6732  00529A                     
  6733                           ;fat16.c: 651: return 0x80;
  6734  00529A  0E80               	movlw	128
  6735  00529C  0012               	return	
  6736  00529E                     
  6737                           ;fat16.c: 653: return 0;
  6738  00529E  0E00               	movlw	0
  6739  0052A0  0012               	return	
  6740  0052A2                     
  6741                           ;fat16.c: 655: return 2;
  6742  0052A2  0E02               	movlw	2
  6743  0052A4  0012               	return	
  6744  0052A6                     
  6745                           ;fat16.c: 657: return 0;
  6746  0052A6  0E00               	movlw	0
  6747  0052A8  0012               	return	
  6748  0052AA                     
  6749                           ;fat16.c: 659: return 0x04;
  6750  0052AA  0E04               	movlw	4
  6751  0052AC  0012               	return	
  6752  0052AE                     
  6753                           ;fat16.c: 661: return 2;
  6754  0052AE  0E02               	movlw	2
  6755  0052B0  0012               	return	
  6756  0052B2                     
  6757                           ;fat16.c: 663: return 3;
  6758  0052B2  0E03               	movlw	3
  6759  0052B4  0012               	return	
  6760  0052B6                     
  6761                           ;fat16.c: 665: return 8;
  6762  0052B6  0E08               	movlw	8
  6763  0052B8  0012               	return	
  6764  0052BA                     
  6765                           ;fat16.c: 667: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
  6766  0052BA  0E01               	movlw	1
  6767  0052BC  0012               	return	
  6768  0052BE                     
  6769                           ;fat16.c: 669: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
  6770  0052BE  0E00               	movlw	0
  6771  0052C0  0012               	return	
  6772  0052C2                     
  6773                           ;fat16.c: 671: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
  6774  0052C2  0E00               	movlw	0
  6775  0052C4  0012               	return	
  6776  0052C6                     
  6777                           ;fat16.c: 673: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6778  0052C6  0E00               	movlw	0
  6779  0052C8  0012               	return	
  6780  0052CA                     
  6781                           ;fat16.c: 675: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&0
      +                          xFF));
  6782  0052CA  0EFF               	movlw	255
  6783  0052CC  0012               	return	
  6784  0052CE                     
  6785                           ;fat16.c: 677: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))>
      +                          >8)&0xFF));
  6786  0052CE  0E1F               	movlw	31
  6787  0052D0  0012               	return	
  6788  0052D2                     
  6789                           ;fat16.c: 679: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFFF
      +                          F)))&0xFF));
  6790  0052D2  0E00               	movlw	0
  6791  0052D4  0012               	return	
  6792  0052D6                     
  6793                           ;fat16.c: 681: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))>>8)&0xFF));
  6794  0052D6  0E00               	movlw	0
  6795  0052D8  0012               	return	
  6796  0052DA                     
  6797                           ;fat16.c: 683: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  6798  0052DA  0E55               	movlw	85
  6799  0052DC  0012               	return	
  6800  0052DE                     
  6801                           ;fat16.c: 685: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  6802  0052DE  0EAA               	movlw	170
  6803  0052E0  0012               	return	
  6804  0052E2                     
  6805                           ;fat16.c: 687: return 0X00;
  6806  0052E2  0E00               	movlw	0
  6807                           
  6808                           ;fat16.c: 688: }
  6809  0052E4  0012               	return	
  6810  0052E6                     l2039:
  6811  0052E6  C001  F003         	movff	__get_mbr@idx,??__get_mbr
  6812  0052EA  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
  6813                           
  6814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6815                           ; Switch size 1, requested type "space"
  6816                           ; Number of cases is 1, Range of values is 1 to 1
  6817                           ; switch strategies available:
  6818                           ; Name         Instructions Cycles
  6819                           ; simple_byte            4     3 (average)
  6820                           ;	Chosen strategy is simple_byte
  6821  0052EE  5004               	movf	??__get_mbr+1,w,c
  6822  0052F0  0A01               	xorlw	1	; case 1
  6823  0052F2  A4D8               	btfss	status,2,c
  6824  0052F4  D7F6               	goto	l2059
  6825                           
  6826                           ; Switch size 1, requested type "space"
  6827                           ; Number of cases is 18, Range of values is 190 to 255
  6828                           ; switch strategies available:
  6829                           ; Name         Instructions Cycles
  6830                           ; simple_byte           55    28 (average)
  6831                           ;	Chosen strategy is simple_byte
  6832  0052F6  5003               	movf	??__get_mbr,w,c
  6833  0052F8  0ABE               	xorlw	190	; case 190
  6834  0052FA  B4D8               	btfsc	status,2,c
  6835  0052FC  D7CE               	goto	l2040
  6836  0052FE  0A01               	xorlw	1	; case 191
  6837  005300  B4D8               	btfsc	status,2,c
  6838  005302  D7CD               	goto	l2042
  6839  005304  0A7F               	xorlw	127	; case 192
  6840  005306  B4D8               	btfsc	status,2,c
  6841  005308  D7CC               	goto	l2043
  6842  00530A  0A01               	xorlw	1	; case 193
  6843  00530C  B4D8               	btfsc	status,2,c
  6844  00530E  D7CB               	goto	l2044
  6845  005310  0A03               	xorlw	3	; case 194
  6846  005312  B4D8               	btfsc	status,2,c
  6847  005314  D7CA               	goto	l2045
  6848  005316  0A01               	xorlw	1	; case 195
  6849  005318  B4D8               	btfsc	status,2,c
  6850  00531A  D7C9               	goto	l2046
  6851  00531C  0A07               	xorlw	7	; case 196
  6852  00531E  B4D8               	btfsc	status,2,c
  6853  005320  D7C8               	goto	l2047
  6854  005322  0A01               	xorlw	1	; case 197
  6855  005324  B4D8               	btfsc	status,2,c
  6856  005326  D7C7               	goto	l2048
  6857  005328  0A03               	xorlw	3	; case 198
  6858  00532A  B4D8               	btfsc	status,2,c
  6859  00532C  D7C6               	goto	l2049
  6860  00532E  0A01               	xorlw	1	; case 199
  6861  005330  B4D8               	btfsc	status,2,c
  6862  005332  D7C5               	goto	l2050
  6863  005334  0A0F               	xorlw	15	; case 200
  6864  005336  B4D8               	btfsc	status,2,c
  6865  005338  D7C4               	goto	l2051
  6866  00533A  0A01               	xorlw	1	; case 201
  6867  00533C  B4D8               	btfsc	status,2,c
  6868  00533E  D7C3               	goto	l2052
  6869  005340  0A03               	xorlw	3	; case 202
  6870  005342  B4D8               	btfsc	status,2,c
  6871  005344  D7C2               	goto	l2053
  6872  005346  0A01               	xorlw	1	; case 203
  6873  005348  B4D8               	btfsc	status,2,c
  6874  00534A  D7C1               	goto	l2054
  6875  00534C  0A07               	xorlw	7	; case 204
  6876  00534E  B4D8               	btfsc	status,2,c
  6877  005350  D7C0               	goto	l2055
  6878  005352  0A01               	xorlw	1	; case 205
  6879  005354  B4D8               	btfsc	status,2,c
  6880  005356  D7BF               	goto	l2056
  6881  005358  0A33               	xorlw	51	; case 254
  6882  00535A  B4D8               	btfsc	status,2,c
  6883  00535C  D7BE               	goto	l2057
  6884  00535E  0A01               	xorlw	1	; case 255
  6885  005360  B4D8               	btfsc	status,2,c
  6886  005362  D7BD               	goto	l2058
  6887  005364  D7BE               	goto	l2059
  6888  005366                     __end_of__get_mbr:
  6889                           	opt stack 0
  6890                           tblptru	equ	0xFF8
  6891                           tblptrh	equ	0xFF7
  6892                           tblptrl	equ	0xFF6
  6893                           tablat	equ	0xFF5
  6894                           intcon	equ	0xFF2
  6895                           intcon3	equ	0xFF0
  6896                           postinc0	equ	0xFEE
  6897                           wreg	equ	0xFE8
  6898                           postdec1	equ	0xFE5
  6899                           plusw1	equ	0xFE3
  6900                           fsr1h	equ	0xFE2
  6901                           fsr1l	equ	0xFE1
  6902                           indf2	equ	0xFDF
  6903                           postinc2	equ	0xFDE
  6904                           plusw2	equ	0xFDB
  6905                           fsr2h	equ	0xFDA
  6906                           fsr2l	equ	0xFD9
  6907                           status	equ	0xFD8
  6908                           
  6909 ;; *************** function __get_fbr *****************
  6910 ;; Defined at:
  6911 ;;		line 691 in file "fat16.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;  idx             2    0[COMRAM] unsigned int 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;		None
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  1    wreg      unsigned char 
  6918 ;; Registers used:
  6919 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6927 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6928 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6929 ;;Total ram usage:        4 bytes
  6930 ;; Hardware stack levels used:    1
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_fat_get_format_status
  6935 ;;		_fat_format
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           	psect	text25
  6940  001ACC                     __ptext25:
  6941                           	opt stack 0
  6942  001ACC                     __get_fbr:
  6943                           	opt stack 27
  6944                           
  6945                           ;fat16.c: 693: switch (idx)
  6946                           
  6947                           ;incstack = 0
  6948  001ACC  D091               	goto	l2063
  6949  001ACE                     
  6950                           ;fat16.c: 696: return 0xEB;
  6951  001ACE  0EEB               	movlw	235
  6952  001AD0  0012               	return	
  6953  001AD2                     
  6954                           ;fat16.c: 698: return 0x3C;
  6955  001AD2  0E3C               	movlw	60
  6956  001AD4  0012               	return	
  6957  001AD6                     
  6958                           ;fat16.c: 700: return 0x90;
  6959  001AD6  0E90               	movlw	144
  6960  001AD8  0012               	return	
  6961  001ADA                     
  6962                           ;fat16.c: 702: return "MSDOS5.0"[0];
  6963  001ADA  0EF2               	movlw	low STR_1
  6964  001ADC  6EF6               	movwf	tblptrl,c
  6965  001ADE                     	if	1	;There is more than 1 active tblptr byte
  6966  001ADE  0E8F               	movlw	high STR_1
  6967  001AE0  6EF7               	movwf	tblptrh,c
  6968  001AE2                     	endif
  6969  001AE2                     	if	1	;There are 3 active tblptr bytes
  6970  001AE2  0E00               	movlw	low (STR_1 shr (0+16))
  6971  001AE4  6EF8               	movwf	tblptru,c
  6972  001AE6                     	endif
  6973  001AE6  0008               	tblrd		*
  6974  001AE8  50F5               	movf	tablat,w,c
  6975  001AEA  0012               	return	
  6976  001AEC                     
  6977                           ;fat16.c: 704: return "MSDOS5.0"[1];
  6978  001AEC  0EF3               	movlw	low (STR_1+1)
  6979  001AEE  6EF6               	movwf	tblptrl,c
  6980  001AF0  0E8F               	movlw	high (STR_1+1)
  6981  001AF2  6EF7               	movwf	tblptrh,c
  6982  001AF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6983  001AF4  6AF8               	clrf	tblptru,c
  6984  001AF6                     	endif
  6985  001AF6                     	if	0	;tblptru may be non-zero
  6986  001AF6                     	endif
  6987  001AF6  0008               	tblrd		*
  6988  001AF8  50F5               	movf	tablat,w,c
  6989  001AFA  0012               	return	
  6990  001AFC                     
  6991                           ;fat16.c: 706: return "MSDOS5.0"[2];
  6992  001AFC  0EF4               	movlw	low (STR_1+2)
  6993  001AFE  6EF6               	movwf	tblptrl,c
  6994  001B00  0E8F               	movlw	high (STR_1+2)
  6995  001B02  6EF7               	movwf	tblptrh,c
  6996  001B04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6997  001B04  6AF8               	clrf	tblptru,c
  6998  001B06                     	endif
  6999  001B06                     	if	0	;tblptru may be non-zero
  7000  001B06                     	endif
  7001  001B06  0008               	tblrd		*
  7002  001B08  50F5               	movf	tablat,w,c
  7003  001B0A  0012               	return	
  7004  001B0C                     
  7005                           ;fat16.c: 708: return "MSDOS5.0"[3];
  7006  001B0C  0EF5               	movlw	low (STR_1+3)
  7007  001B0E  6EF6               	movwf	tblptrl,c
  7008  001B10  0E8F               	movlw	high (STR_1+3)
  7009  001B12  6EF7               	movwf	tblptrh,c
  7010  001B14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7011  001B14  6AF8               	clrf	tblptru,c
  7012  001B16                     	endif
  7013  001B16                     	if	0	;tblptru may be non-zero
  7014  001B16                     	endif
  7015  001B16  0008               	tblrd		*
  7016  001B18  50F5               	movf	tablat,w,c
  7017  001B1A  0012               	return	
  7018  001B1C                     
  7019                           ;fat16.c: 710: return "MSDOS5.0"[4];
  7020  001B1C  0EF6               	movlw	low (STR_1+4)
  7021  001B1E  6EF6               	movwf	tblptrl,c
  7022  001B20  0E8F               	movlw	high (STR_1+4)
  7023  001B22  6EF7               	movwf	tblptrh,c
  7024  001B24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7025  001B24  6AF8               	clrf	tblptru,c
  7026  001B26                     	endif
  7027  001B26                     	if	0	;tblptru may be non-zero
  7028  001B26                     	endif
  7029  001B26  0008               	tblrd		*
  7030  001B28  50F5               	movf	tablat,w,c
  7031  001B2A  0012               	return	
  7032  001B2C                     
  7033                           ;fat16.c: 712: return "MSDOS5.0"[5];
  7034  001B2C  0EF7               	movlw	low (STR_1+5)
  7035  001B2E  6EF6               	movwf	tblptrl,c
  7036  001B30  0E8F               	movlw	high (STR_1+5)
  7037  001B32  6EF7               	movwf	tblptrh,c
  7038  001B34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7039  001B34  6AF8               	clrf	tblptru,c
  7040  001B36                     	endif
  7041  001B36                     	if	0	;tblptru may be non-zero
  7042  001B36                     	endif
  7043  001B36  0008               	tblrd		*
  7044  001B38  50F5               	movf	tablat,w,c
  7045  001B3A  0012               	return	
  7046  001B3C                     
  7047                           ;fat16.c: 714: return "MSDOS5.0"[6];
  7048  001B3C  0EF8               	movlw	low (STR_1+6)
  7049  001B3E  6EF6               	movwf	tblptrl,c
  7050  001B40  0E8F               	movlw	high (STR_1+6)
  7051  001B42  6EF7               	movwf	tblptrh,c
  7052  001B44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7053  001B44  6AF8               	clrf	tblptru,c
  7054  001B46                     	endif
  7055  001B46                     	if	0	;tblptru may be non-zero
  7056  001B46                     	endif
  7057  001B46  0008               	tblrd		*
  7058  001B48  50F5               	movf	tablat,w,c
  7059  001B4A  0012               	return	
  7060  001B4C                     
  7061                           ;fat16.c: 716: return "MSDOS5.0"[7];
  7062  001B4C  0EF9               	movlw	low (STR_1+7)
  7063  001B4E  6EF6               	movwf	tblptrl,c
  7064  001B50  0E8F               	movlw	high (STR_1+7)
  7065  001B52  6EF7               	movwf	tblptrh,c
  7066  001B54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7067  001B54  6AF8               	clrf	tblptru,c
  7068  001B56                     	endif
  7069  001B56                     	if	0	;tblptru may be non-zero
  7070  001B56                     	endif
  7071  001B56  0008               	tblrd		*
  7072  001B58  50F5               	movf	tablat,w,c
  7073  001B5A  0012               	return	
  7074  001B5C                     
  7075                           ;fat16.c: 718: return ((unsigned char)((((uint16_t)512))&0xFF));
  7076  001B5C  0E00               	movlw	0
  7077  001B5E  0012               	return	
  7078  001B60                     
  7079                           ;fat16.c: 720: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  7080  001B60  0E02               	movlw	2
  7081  001B62  0012               	return	
  7082  001B64                     
  7083                           ;fat16.c: 722: return 1;
  7084  001B64  0E01               	movlw	1
  7085  001B66  0012               	return	
  7086  001B68                     
  7087                           ;fat16.c: 724: return ((unsigned char)((((uint16_t)1))&0xFF));
  7088  001B68  0E01               	movlw	1
  7089  001B6A  0012               	return	
  7090  001B6C                     
  7091                           ;fat16.c: 726: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  7092  001B6C  0E00               	movlw	0
  7093  001B6E  0012               	return	
  7094  001B70                     
  7095                           ;fat16.c: 728: return 1;
  7096  001B70  0E01               	movlw	1
  7097  001B72  0012               	return	
  7098  001B74                     
  7099                           ;fat16.c: 730: return ((unsigned char)((((uint16_t)64))&0xFF));
  7100  001B74  0E40               	movlw	64
  7101  001B76  0012               	return	
  7102  001B78                     
  7103                           ;fat16.c: 732: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  7104  001B78  0E00               	movlw	0
  7105  001B7A  0012               	return	
  7106  001B7C                     
  7107                           ;fat16.c: 734: return ((unsigned char)((((uint16_t)8191))&0xFF));
  7108  001B7C  0EFF               	movlw	255
  7109  001B7E  0012               	return	
  7110  001B80                     
  7111                           ;fat16.c: 736: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  7112  001B80  0E1F               	movlw	31
  7113  001B82  0012               	return	
  7114  001B84                     
  7115                           ;fat16.c: 738: return 0XF8;
  7116  001B84  0EF8               	movlw	248
  7117  001B86  0012               	return	
  7118  001B88                     
  7119                           ;fat16.c: 740: return ((unsigned char)((((uint16_t)32))&0xFF));
  7120  001B88  0E20               	movlw	32
  7121  001B8A  0012               	return	
  7122  001B8C                     
  7123                           ;fat16.c: 742: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  7124  001B8C  0E00               	movlw	0
  7125  001B8E  0012               	return	
  7126  001B90                     
  7127                           ;fat16.c: 744: return ((unsigned char)((((uint16_t)63))&0xFF));
  7128  001B90  0E3F               	movlw	63
  7129  001B92  0012               	return	
  7130  001B94                     
  7131                           ;fat16.c: 746: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  7132  001B94  0E00               	movlw	0
  7133  001B96  0012               	return	
  7134  001B98                     
  7135                           ;fat16.c: 748: return ((unsigned char)((((uint16_t)16))&0xFF));
  7136  001B98  0E10               	movlw	16
  7137  001B9A  0012               	return	
  7138  001B9C                     
  7139                           ;fat16.c: 750: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  7140  001B9C  0E00               	movlw	0
  7141  001B9E  0012               	return	
  7142  001BA0                     
  7143                           ;fat16.c: 752: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xFF
      +                          ));
  7144  001BA0  0E00               	movlw	0
  7145  001BA2  0012               	return	
  7146  001BA4                     
  7147                           ;fat16.c: 754: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8)
      +                          &0xFF));
  7148  001BA4  0E00               	movlw	0
  7149  001BA6  0012               	return	
  7150  001BA8                     
  7151                           ;fat16.c: 756: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF))
      +                          )&0xFF));
  7152  001BA8  0E00               	movlw	0
  7153  001BAA  0012               	return	
  7154  001BAC                     
  7155                           ;fat16.c: 758: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  7156  001BAC  0E00               	movlw	0
  7157  001BAE  0012               	return	
  7158  001BB0                     
  7159                           ;fat16.c: 760: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  7160  001BB0  0E01               	movlw	1
  7161  001BB2  0012               	return	
  7162  001BB4                     
  7163                           ;fat16.c: 762: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  7164  001BB4  0E00               	movlw	0
  7165  001BB6  0012               	return	
  7166  001BB8                     
  7167                           ;fat16.c: 764: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0xF
      +                          F));
  7168  001BB8  0E22               	movlw	34
  7169  001BBA  0012               	return	
  7170  001BBC                     
  7171                           ;fat16.c: 766: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>8
      +                          )&0xFF));
  7172  001BBC  0E00               	movlw	0
  7173  001BBE  0012               	return	
  7174  001BC0                     
  7175                           ;fat16.c: 770: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  7176                           
  7177                           ;fat16.c: 769: case 0x2F:
  7178  001BC0  0E00               	movlw	0
  7179  001BC2  0012               	return	
  7180  001BC4                     
  7181                           ;fat16.c: 772: return 'F';
  7182  001BC4  0E46               	movlw	70
  7183  001BC6  0012               	return	
  7184  001BC8                     
  7185                           ;fat16.c: 774: return 'A';
  7186  001BC8  0E41               	movlw	65
  7187  001BCA  0012               	return	
  7188  001BCC                     
  7189                           ;fat16.c: 776: return 'T';
  7190  001BCC  0E54               	movlw	84
  7191  001BCE  0012               	return	
  7192  001BD0                     
  7193                           ;fat16.c: 778: return '1';
  7194  001BD0  0E31               	movlw	49
  7195  001BD2  0012               	return	
  7196  001BD4                     
  7197                           ;fat16.c: 780: return '6';
  7198  001BD4  0E36               	movlw	54
  7199  001BD6  0012               	return	
  7200  001BD8                     
  7201                           ;fat16.c: 782: return ' ';
  7202  001BD8  0E20               	movlw	32
  7203  001BDA  0012               	return	
  7204  001BDC                     
  7205                           ;fat16.c: 784: return ' ';
  7206  001BDC  0E20               	movlw	32
  7207  001BDE  0012               	return	
  7208  001BE0                     
  7209                           ;fat16.c: 786: return ' ';
  7210  001BE0  0E20               	movlw	32
  7211  001BE2  0012               	return	
  7212  001BE4                     
  7213                           ;fat16.c: 788: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  7214  001BE4  0E55               	movlw	85
  7215  001BE6  0012               	return	
  7216  001BE8                     
  7217                           ;fat16.c: 790: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  7218  001BE8  0EAA               	movlw	170
  7219  001BEA  0012               	return	
  7220  001BEC                     
  7221                           ;fat16.c: 792: return 0X00;
  7222  001BEC  0E00               	movlw	0
  7223                           
  7224                           ;fat16.c: 793: }
  7225  001BEE  0012               	return	
  7226  001BF0                     l2063:
  7227  001BF0  C001  F003         	movff	__get_fbr@idx,??__get_fbr
  7228  001BF4  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
  7229                           
  7230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7231                           ; Switch size 1, requested type "space"
  7232                           ; Number of cases is 2, Range of values is 0 to 1
  7233                           ; switch strategies available:
  7234                           ; Name         Instructions Cycles
  7235                           ; simple_byte            7     4 (average)
  7236                           ;	Chosen strategy is simple_byte
  7237  001BF8  5004               	movf	??__get_fbr+1,w,c
  7238  001BFA  0A00               	xorlw	0	; case 0
  7239  001BFC  B4D8               	btfsc	status,2,c
  7240  001BFE  D004               	goto	l15269
  7241  001C00  0A01               	xorlw	1	; case 1
  7242  001C02  B4D8               	btfsc	status,2,c
  7243  001C04  D08D               	goto	l15271
  7244  001C06  D7F2               	goto	l2113
  7245  001C08                     l15269:
  7246                           
  7247                           ; Switch size 1, requested type "space"
  7248                           ; Number of cases is 46, Range of values is 0 to 61
  7249                           ; switch strategies available:
  7250                           ; Name         Instructions Cycles
  7251                           ; simple_byte          139    70 (average)
  7252                           ;	Chosen strategy is simple_byte
  7253  001C08  5003               	movf	??__get_fbr,w,c
  7254  001C0A  0A00               	xorlw	0	; case 0
  7255  001C0C  B4D8               	btfsc	status,2,c
  7256  001C0E  D75F               	goto	l2064
  7257  001C10  0A01               	xorlw	1	; case 1
  7258  001C12  B4D8               	btfsc	status,2,c
  7259  001C14  D75E               	goto	l2066
  7260  001C16  0A03               	xorlw	3	; case 2
  7261  001C18  B4D8               	btfsc	status,2,c
  7262  001C1A  D75D               	goto	l2067
  7263  001C1C  0A01               	xorlw	1	; case 3
  7264  001C1E  B4D8               	btfsc	status,2,c
  7265  001C20  D75C               	goto	l2068
  7266  001C22  0A07               	xorlw	7	; case 4
  7267  001C24  B4D8               	btfsc	status,2,c
  7268  001C26  D762               	goto	l2069
  7269  001C28  0A01               	xorlw	1	; case 5
  7270  001C2A  B4D8               	btfsc	status,2,c
  7271  001C2C  D767               	goto	l2070
  7272  001C2E  0A03               	xorlw	3	; case 6
  7273  001C30  B4D8               	btfsc	status,2,c
  7274  001C32  D76C               	goto	l2071
  7275  001C34  0A01               	xorlw	1	; case 7
  7276  001C36  B4D8               	btfsc	status,2,c
  7277  001C38  D771               	goto	l2072
  7278  001C3A  0A0F               	xorlw	15	; case 8
  7279  001C3C  B4D8               	btfsc	status,2,c
  7280  001C3E  D776               	goto	l2073
  7281  001C40  0A01               	xorlw	1	; case 9
  7282  001C42  B4D8               	btfsc	status,2,c
  7283  001C44  D77B               	goto	l2074
  7284  001C46  0A03               	xorlw	3	; case 10
  7285  001C48  B4D8               	btfsc	status,2,c
  7286  001C4A  D780               	goto	l2075
  7287  001C4C  0A01               	xorlw	1	; case 11
  7288  001C4E  B4D8               	btfsc	status,2,c
  7289  001C50  D785               	goto	l2076
  7290  001C52  0A07               	xorlw	7	; case 12
  7291  001C54  B4D8               	btfsc	status,2,c
  7292  001C56  D784               	goto	l2077
  7293  001C58  0A01               	xorlw	1	; case 13
  7294  001C5A  B4D8               	btfsc	status,2,c
  7295  001C5C  D783               	goto	l2078
  7296  001C5E  0A03               	xorlw	3	; case 14
  7297  001C60  B4D8               	btfsc	status,2,c
  7298  001C62  D782               	goto	l2079
  7299  001C64  0A01               	xorlw	1	; case 15
  7300  001C66  B4D8               	btfsc	status,2,c
  7301  001C68  D781               	goto	l2080
  7302  001C6A  0A1F               	xorlw	31	; case 16
  7303  001C6C  B4D8               	btfsc	status,2,c
  7304  001C6E  D780               	goto	l2081
  7305  001C70  0A01               	xorlw	1	; case 17
  7306  001C72  B4D8               	btfsc	status,2,c
  7307  001C74  D77F               	goto	l2082
  7308  001C76  0A03               	xorlw	3	; case 18
  7309  001C78  B4D8               	btfsc	status,2,c
  7310  001C7A  D77E               	goto	l2083
  7311  001C7C  0A01               	xorlw	1	; case 19
  7312  001C7E  B4D8               	btfsc	status,2,c
  7313  001C80  D77D               	goto	l2084
  7314  001C82  0A07               	xorlw	7	; case 20
  7315  001C84  B4D8               	btfsc	status,2,c
  7316  001C86  D77C               	goto	l2085
  7317  001C88  0A01               	xorlw	1	; case 21
  7318  001C8A  B4D8               	btfsc	status,2,c
  7319  001C8C  D77B               	goto	l2086
  7320  001C8E  0A03               	xorlw	3	; case 22
  7321  001C90  B4D8               	btfsc	status,2,c
  7322  001C92  D77A               	goto	l2087
  7323  001C94  0A01               	xorlw	1	; case 23
  7324  001C96  B4D8               	btfsc	status,2,c
  7325  001C98  D779               	goto	l2088
  7326  001C9A  0A0F               	xorlw	15	; case 24
  7327  001C9C  B4D8               	btfsc	status,2,c
  7328  001C9E  D778               	goto	l2089
  7329  001CA0  0A01               	xorlw	1	; case 25
  7330  001CA2  B4D8               	btfsc	status,2,c
  7331  001CA4  D777               	goto	l2090
  7332  001CA6  0A03               	xorlw	3	; case 26
  7333  001CA8  B4D8               	btfsc	status,2,c
  7334  001CAA  D776               	goto	l2091
  7335  001CAC  0A01               	xorlw	1	; case 27
  7336  001CAE  B4D8               	btfsc	status,2,c
  7337  001CB0  D775               	goto	l2092
  7338  001CB2  0A07               	xorlw	7	; case 28
  7339  001CB4  B4D8               	btfsc	status,2,c
  7340  001CB6  D774               	goto	l2093
  7341  001CB8  0A01               	xorlw	1	; case 29
  7342  001CBA  B4D8               	btfsc	status,2,c
  7343  001CBC  D773               	goto	l2094
  7344  001CBE  0A03               	xorlw	3	; case 30
  7345  001CC0  B4D8               	btfsc	status,2,c
  7346  001CC2  D772               	goto	l2095
  7347  001CC4  0A01               	xorlw	1	; case 31
  7348  001CC6  B4D8               	btfsc	status,2,c
  7349  001CC8  D771               	goto	l2096
  7350  001CCA  0A37               	xorlw	55	; case 40
  7351  001CCC  B4D8               	btfsc	status,2,c
  7352  001CCE  D770               	goto	l2097
  7353  001CD0  0A01               	xorlw	1	; case 41
  7354  001CD2  B4D8               	btfsc	status,2,c
  7355  001CD4  D76F               	goto	l2098
  7356  001CD6  0A05               	xorlw	5	; case 44
  7357  001CD8  B4D8               	btfsc	status,2,c
  7358  001CDA  D76E               	goto	l2099
  7359  001CDC  0A01               	xorlw	1	; case 45
  7360  001CDE  B4D8               	btfsc	status,2,c
  7361  001CE0  D76D               	goto	l2100
  7362  001CE2  0A03               	xorlw	3	; case 46
  7363  001CE4  B4D8               	btfsc	status,2,c
  7364  001CE6  D76C               	goto	l2101
  7365  001CE8  0A01               	xorlw	1	; case 47
  7366  001CEA  B4D8               	btfsc	status,2,c
  7367  001CEC  D769               	goto	l2101
  7368  001CEE  0A19               	xorlw	25	; case 54
  7369  001CF0  B4D8               	btfsc	status,2,c
  7370  001CF2  D768               	goto	l2103
  7371  001CF4  0A01               	xorlw	1	; case 55
  7372  001CF6  B4D8               	btfsc	status,2,c
  7373  001CF8  D767               	goto	l2104
  7374  001CFA  0A0F               	xorlw	15	; case 56
  7375  001CFC  B4D8               	btfsc	status,2,c
  7376  001CFE  D766               	goto	l2105
  7377  001D00  0A01               	xorlw	1	; case 57
  7378  001D02  B4D8               	btfsc	status,2,c
  7379  001D04  D765               	goto	l2106
  7380  001D06  0A03               	xorlw	3	; case 58
  7381  001D08  B4D8               	btfsc	status,2,c
  7382  001D0A  D764               	goto	l2107
  7383  001D0C  0A01               	xorlw	1	; case 59
  7384  001D0E  B4D8               	btfsc	status,2,c
  7385  001D10  D763               	goto	l2108
  7386  001D12  0A07               	xorlw	7	; case 60
  7387  001D14  B4D8               	btfsc	status,2,c
  7388  001D16  D762               	goto	l2109
  7389  001D18  0A01               	xorlw	1	; case 61
  7390  001D1A  B4D8               	btfsc	status,2,c
  7391  001D1C  D761               	goto	l2110
  7392  001D1E  D766               	goto	l2113
  7393  001D20                     l15271:
  7394                           
  7395                           ; Switch size 1, requested type "space"
  7396                           ; Number of cases is 2, Range of values is 254 to 255
  7397                           ; switch strategies available:
  7398                           ; Name         Instructions Cycles
  7399                           ; simple_byte            7     4 (average)
  7400                           ;	Chosen strategy is simple_byte
  7401  001D20  5003               	movf	??__get_fbr,w,c
  7402  001D22  0AFE               	xorlw	254	; case 254
  7403  001D24  B4D8               	btfsc	status,2,c
  7404  001D26  D75E               	goto	l2111
  7405  001D28  0A01               	xorlw	1	; case 255
  7406  001D2A  B4D8               	btfsc	status,2,c
  7407  001D2C  D75D               	goto	l2112
  7408  001D2E  D75E               	goto	l2113
  7409  001D30                     __end_of__get_fbr:
  7410                           	opt stack 0
  7411                           tblptru	equ	0xFF8
  7412                           tblptrh	equ	0xFF7
  7413                           tblptrl	equ	0xFF6
  7414                           tablat	equ	0xFF5
  7415                           intcon	equ	0xFF2
  7416                           intcon3	equ	0xFF0
  7417                           postinc0	equ	0xFEE
  7418                           wreg	equ	0xFE8
  7419                           postdec1	equ	0xFE5
  7420                           plusw1	equ	0xFE3
  7421                           fsr1h	equ	0xFE2
  7422                           fsr1l	equ	0xFE1
  7423                           indf2	equ	0xFDF
  7424                           postinc2	equ	0xFDE
  7425                           plusw2	equ	0xFDB
  7426                           fsr2h	equ	0xFDA
  7427                           fsr2l	equ	0xFD9
  7428                           status	equ	0xFD8
  7429                           
  7430 ;; *************** function __get_fat *****************
  7431 ;; Defined at:
  7432 ;;		line 796 in file "fat16.c"
  7433 ;; Parameters:    Size  Location     Type
  7434 ;;  idx             2    0[COMRAM] unsigned int 
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;		None
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  1    wreg      unsigned char 
  7439 ;; Registers used:
  7440 ;;		wreg, status,2, status,0
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7449 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7450 ;;Total ram usage:        4 bytes
  7451 ;; Hardware stack levels used:    1
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		_fat_format
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text26
  7460  00738E                     __ptext26:
  7461                           	opt stack 0
  7462  00738E                     __get_fat:
  7463                           	opt stack 27
  7464                           
  7465                           ;fat16.c: 798: switch (idx)
  7466                           
  7467                           ;incstack = 0
  7468  00738E  D00E               	goto	l2117
  7469  007390                     
  7470                           ;fat16.c: 802: return 0xF8;
  7471  007390  0EF8               	movlw	248
  7472  007392  0012               	return	
  7473  007394                     
  7474                           ;fat16.c: 804: return 0xFF;
  7475  007394  0EFF               	movlw	255
  7476  007396  0012               	return	
  7477  007398                     
  7478                           ;fat16.c: 806: return 0xFF;
  7479  007398  0EFF               	movlw	255
  7480  00739A  0012               	return	
  7481  00739C                     
  7482                           ;fat16.c: 808: return 0xFF;
  7483  00739C  0EFF               	movlw	255
  7484  00739E  0012               	return	
  7485  0073A0                     
  7486                           ;fat16.c: 811: return 0xFF;
  7487  0073A0  0EFF               	movlw	255
  7488  0073A2  0012               	return	
  7489  0073A4                     
  7490                           ;fat16.c: 813: return 0xFF;
  7491  0073A4  0EFF               	movlw	255
  7492  0073A6  0012               	return	
  7493  0073A8                     
  7494                           ;fat16.c: 815: return 0X00;
  7495  0073A8  0E00               	movlw	0
  7496                           
  7497                           ;fat16.c: 816: }
  7498  0073AA  0012               	return	
  7499  0073AC                     l2117:
  7500  0073AC  C001  F003         	movff	__get_fat@idx,??__get_fat
  7501  0073B0  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
  7502                           
  7503                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7504                           ; Switch size 1, requested type "space"
  7505                           ; Number of cases is 1, Range of values is 0 to 0
  7506                           ; switch strategies available:
  7507                           ; Name         Instructions Cycles
  7508                           ; simple_byte            4     3 (average)
  7509                           ;	Chosen strategy is simple_byte
  7510  0073B4  5004               	movf	??__get_fat+1,w,c
  7511  0073B6  0A00               	xorlw	0	; case 0
  7512  0073B8  A4D8               	btfss	status,2,c
  7513  0073BA  D7F6               	goto	l2125
  7514                           
  7515                           ; Switch size 1, requested type "space"
  7516                           ; Number of cases is 6, Range of values is 0 to 5
  7517                           ; switch strategies available:
  7518                           ; Name         Instructions Cycles
  7519                           ; simple_byte           19    10 (average)
  7520                           ;	Chosen strategy is simple_byte
  7521  0073BC  5003               	movf	??__get_fat,w,c
  7522  0073BE  0A00               	xorlw	0	; case 0
  7523  0073C0  B4D8               	btfsc	status,2,c
  7524  0073C2  D7E6               	goto	l2118
  7525  0073C4  0A01               	xorlw	1	; case 1
  7526  0073C6  B4D8               	btfsc	status,2,c
  7527  0073C8  D7E5               	goto	l2120
  7528  0073CA  0A03               	xorlw	3	; case 2
  7529  0073CC  B4D8               	btfsc	status,2,c
  7530  0073CE  D7E4               	goto	l2121
  7531  0073D0  0A01               	xorlw	1	; case 3
  7532  0073D2  B4D8               	btfsc	status,2,c
  7533  0073D4  D7E3               	goto	l2122
  7534  0073D6  0A07               	xorlw	7	; case 4
  7535  0073D8  B4D8               	btfsc	status,2,c
  7536  0073DA  D7E2               	goto	l2123
  7537  0073DC  0A01               	xorlw	1	; case 5
  7538  0073DE  B4D8               	btfsc	status,2,c
  7539  0073E0  D7E1               	goto	l2124
  7540  0073E2  D7E2               	goto	l2125
  7541  0073E4                     __end_of__get_fat:
  7542                           	opt stack 0
  7543                           tblptru	equ	0xFF8
  7544                           tblptrh	equ	0xFF7
  7545                           tblptrl	equ	0xFF6
  7546                           tablat	equ	0xFF5
  7547                           intcon	equ	0xFF2
  7548                           intcon3	equ	0xFF0
  7549                           postinc0	equ	0xFEE
  7550                           wreg	equ	0xFE8
  7551                           postdec1	equ	0xFE5
  7552                           plusw1	equ	0xFE3
  7553                           fsr1h	equ	0xFE2
  7554                           fsr1l	equ	0xFE1
  7555                           indf2	equ	0xFDF
  7556                           postinc2	equ	0xFDE
  7557                           plusw2	equ	0xFDB
  7558                           fsr2h	equ	0xFDA
  7559                           fsr2l	equ	0xFD9
  7560                           status	equ	0xFD8
  7561                           
  7562 ;; *************** function __get_data *****************
  7563 ;; Defined at:
  7564 ;;		line 896 in file "fat16.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;  idx             2    0[COMRAM] unsigned int 
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;		None
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  1    wreg      unsigned char 
  7571 ;; Registers used:
  7572 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7582 ;;Total ram usage:        2 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; This function calls:
  7585 ;;		Nothing
  7586 ;; This function is called by:
  7587 ;;		_fat_format
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           	psect	text27
  7592  007DE4                     __ptext27:
  7593                           	opt stack 0
  7594  007DE4                     __get_data:
  7595                           	opt stack 27
  7596                           
  7597                           ;fat16.c: 898: if (idx < 12)
  7598                           
  7599                           ;incstack = 0
  7600  007DE4  5002               	movf	__get_data@idx+1,w,c
  7601  007DE6  E110               	bnz	l12831
  7602  007DE8  0E0C               	movlw	12
  7603  007DEA  5C01               	subwf	__get_data@idx,w,c
  7604  007DEC  B0D8               	btfsc	status,0,c
  7605  007DEE  D00C               	goto	l2161
  7606                           
  7607                           ;fat16.c: 899: {;fat16.c: 900: return "hello world!"[idx];
  7608  007DF0  0ED0               	movlw	low STR_12
  7609  007DF2  2401               	addwf	__get_data@idx,w,c
  7610  007DF4  6EF6               	movwf	tblptrl,c
  7611  007DF6  0E8F               	movlw	high STR_12
  7612  007DF8  2002               	addwfc	__get_data@idx+1,w,c
  7613  007DFA  6EF7               	movwf	tblptrh,c
  7614  007DFC                     	if	1	;There are 3 active tblptr bytes
  7615  007DFC  6AF8               	clrf	tblptru,c
  7616  007DFE  0E00               	movlw	low (__mediumconst shr (0+16))
  7617  007E00  22F8               	addwfc	tblptru,f,c
  7618  007E02                     	endif
  7619  007E02  0008               	tblrd		*
  7620  007E04  50F5               	movf	tablat,w,c
  7621  007E06  0012               	return	
  7622  007E08                     l2161:
  7623  007E08                     l12831:
  7624                           
  7625                           ;fat16.c: 901: };fat16.c: 902: return 0X00;
  7626  007E08  0E00               	movlw	0
  7627  007E0A  0012               	return	
  7628  007E0C                     __end_of__get_data:
  7629                           	opt stack 0
  7630                           tblptru	equ	0xFF8
  7631                           tblptrh	equ	0xFF7
  7632                           tblptrl	equ	0xFF6
  7633                           tablat	equ	0xFF5
  7634                           intcon	equ	0xFF2
  7635                           intcon3	equ	0xFF0
  7636                           postinc0	equ	0xFEE
  7637                           wreg	equ	0xFE8
  7638                           postdec1	equ	0xFE5
  7639                           plusw1	equ	0xFE3
  7640                           fsr1h	equ	0xFE2
  7641                           fsr1l	equ	0xFE1
  7642                           indf2	equ	0xFDF
  7643                           postinc2	equ	0xFDE
  7644                           plusw2	equ	0xFDB
  7645                           fsr2h	equ	0xFDA
  7646                           fsr2l	equ	0xFD9
  7647                           status	equ	0xFD8
  7648                           
  7649 ;; *************** function __system_timer0_init *****************
  7650 ;; Defined at:
  7651 ;;		line 112 in file "os.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7669 ;;Total ram usage:        0 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; This function calls:
  7672 ;;		Nothing
  7673 ;; This function is called by:
  7674 ;;		_system_full_init
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           	psect	text28
  7679  007F9A                     __ptext28:
  7680                           	opt stack 0
  7681  007F9A                     __system_timer0_init:
  7682                           	opt stack 29
  7683                           
  7684                           ;os.c: 115: T0CONbits.T0CS = 0;
  7685                           
  7686                           ;incstack = 0
  7687  007F9A  9AD5               	bcf	4053,5,c	;volatile
  7688                           
  7689                           ;os.c: 117: T0CONbits.T08BIT = 0;
  7690  007F9C  9CD5               	bcf	4053,6,c	;volatile
  7691                           
  7692                           ;os.c: 119: T0CONbits.T0PS2 = 0;
  7693  007F9E  94D5               	bcf	4053,2,c	;volatile
  7694                           
  7695                           ;os.c: 120: T0CONbits.T0PS1 = 1;
  7696  007FA0  82D5               	bsf	4053,1,c	;volatile
  7697                           
  7698                           ;os.c: 121: T0CONbits.T0PS0 = 0;
  7699  007FA2  90D5               	bcf	4053,0,c	;volatile
  7700                           
  7701                           ;os.c: 123: T0CONbits.PSA = 0;
  7702  007FA4  96D5               	bcf	4053,3,c	;volatile
  7703                           
  7704                           ;os.c: 125: TMR0H = 0xD1;
  7705  007FA6  0ED1               	movlw	209
  7706  007FA8  6ED7               	movwf	4055,c	;volatile
  7707                           
  7708                           ;os.c: 126: TMR0L = 0x20;
  7709  007FAA  0E20               	movlw	32
  7710  007FAC  6ED6               	movwf	4054,c	;volatile
  7711                           
  7712                           ;os.c: 128: T0CONbits.TMR0ON = 1;
  7713  007FAE  8ED5               	bsf	4053,7,c	;volatile
  7714                           
  7715                           ;os.c: 132: INTCONbits.TMR0IF = 0;
  7716  007FB0  94F2               	bcf	intcon,2,c	;volatile
  7717                           
  7718                           ;os.c: 135: os.timeSlot = 0;
  7719  007FB2  0E00               	movlw	0
  7720  007FB4  0100               	movlb	0	; () banked
  7721  007FB6  6FBB               	movwf	(_os+2)& (0+255),b	;volatile
  7722                           
  7723                           ; BSR set to: 0
  7724  007FB8  0012               	return		;funcret
  7725  007FBA                     __end_of__system_timer0_init:
  7726                           	opt stack 0
  7727                           tblptru	equ	0xFF8
  7728                           tblptrh	equ	0xFF7
  7729                           tblptrl	equ	0xFF6
  7730                           tablat	equ	0xFF5
  7731                           intcon	equ	0xFF2
  7732                           intcon3	equ	0xFF0
  7733                           postinc0	equ	0xFEE
  7734                           wreg	equ	0xFE8
  7735                           postdec1	equ	0xFE5
  7736                           plusw1	equ	0xFE3
  7737                           fsr1h	equ	0xFE2
  7738                           fsr1l	equ	0xFE1
  7739                           indf2	equ	0xFDF
  7740                           postinc2	equ	0xFDE
  7741                           plusw2	equ	0xFDB
  7742                           fsr2h	equ	0xFDA
  7743                           fsr2l	equ	0xFD9
  7744                           status	equ	0xFD8
  7745                           
  7746 ;; *************** function __system_encoder_init *****************
  7747 ;; Defined at:
  7748 ;;		line 73 in file "os.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;		None
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;		None
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      void 
  7755 ;; Registers used:
  7756 ;;		wreg, status,2
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7766 ;;Total ram usage:        0 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_system_full_init
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text29
  7776  007A04                     __ptext29:
  7777                           	opt stack 0
  7778  007A04                     __system_encoder_init:
  7779                           	opt stack 29
  7780                           
  7781                           ;os.c: 75: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;incstack = 0
  7785  007A04  0E55               	movlw	85
  7786  007A06  6EA7               	movwf	4007,c	;volsfr
  7787  007A08  0EAA               	movlw	170
  7788  007A0A  6EA7               	movwf	4007,c	;volsfr
  7789  007A0C  010E               	movlb	14	; () banked
  7790  007A0E  91BF               	bcf	191,0,b	;volatile
  7791                           
  7792                           ;os.c: 76: RPINR1 = 0;
  7793  007A10  0E00               	movlw	0
  7794  007A12  6FE1               	movwf	225,b	;volatile
  7795                           
  7796                           ;os.c: 77: RPINR3 = 9;
  7797  007A14  0E09               	movlw	9
  7798  007A16  6FE3               	movwf	227,b	;volatile
  7799                           
  7800                           ;os.c: 78: RPINR2 = 10;
  7801  007A18  0E0A               	movlw	10
  7802  007A1A  6FE2               	movwf	226,b	;volatile
  7803                           
  7804                           ;os.c: 79: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  7805  007A1C  0E55               	movlw	85
  7806  007A1E  6EA7               	movwf	4007,c	;volsfr
  7807  007A20  0EAA               	movlw	170
  7808  007A22  6EA7               	movwf	4007,c	;volsfr
  7809                           
  7810                           ; BSR set to: 14
  7811  007A24  91BF               	bcf	191,0,b	;volatile
  7812                           
  7813                           ; BSR set to: 14
  7814                           ;os.c: 82: INTCON2bits.INTEDG1 = 0;
  7815  007A26  9AF1               	bcf	intcon2,5,c	;volatile
  7816                           
  7817                           ; BSR set to: 14
  7818                           ;os.c: 83: INTCON3bits.INT1IF = 0;
  7819  007A28  90F0               	bcf	intcon3,0,c	;volatile
  7820                           
  7821                           ; BSR set to: 14
  7822                           ;os.c: 85: INTCON2bits.INTEDG2 = 1;
  7823  007A2A  88F1               	bsf	intcon2,4,c	;volatile
  7824                           
  7825                           ; BSR set to: 14
  7826                           ;os.c: 86: INTCON3bits.INT2IF = 0;
  7827  007A2C  92F0               	bcf	intcon3,1,c	;volatile
  7828                           
  7829                           ; BSR set to: 14
  7830                           ;os.c: 88: INTCON2bits.INTEDG3 = 1;
  7831  007A2E  86F1               	bsf	intcon2,3,c	;volatile
  7832                           
  7833                           ; BSR set to: 14
  7834                           ;os.c: 89: INTCON3bits.INT3IF = 0;
  7835  007A30  94F0               	bcf	intcon3,2,c	;volatile
  7836                           
  7837                           ;os.c: 91: os.encoderCount = 0;
  7838  007A32  0E00               	movlw	0
  7839  007A34  0100               	movlb	0	; () banked
  7840  007A36  6FB9               	movwf	_os& (0+255),b	;volatile
  7841                           
  7842                           ;os.c: 92: os.buttonCount = 0;
  7843  007A38  0E00               	movlw	0
  7844  007A3A  6FBA               	movwf	(_os+1)& (0+255),b	;volatile
  7845                           
  7846                           ; BSR set to: 0
  7847  007A3C  0012               	return		;funcret
  7848  007A3E                     __end_of__system_encoder_init:
  7849                           	opt stack 0
  7850                           tblptru	equ	0xFF8
  7851                           tblptrh	equ	0xFF7
  7852                           tblptrl	equ	0xFF6
  7853                           tablat	equ	0xFF5
  7854                           intcon	equ	0xFF2
  7855                           intcon2	equ	0xFF1
  7856                           intcon3	equ	0xFF0
  7857                           postinc0	equ	0xFEE
  7858                           wreg	equ	0xFE8
  7859                           postdec1	equ	0xFE5
  7860                           plusw1	equ	0xFE3
  7861                           fsr1h	equ	0xFE2
  7862                           fsr1l	equ	0xFE1
  7863                           indf2	equ	0xFDF
  7864                           postinc2	equ	0xFDE
  7865                           plusw2	equ	0xFDB
  7866                           fsr2h	equ	0xFDA
  7867                           fsr2l	equ	0xFD9
  7868                           status	equ	0xFD8
  7869                           
  7870 ;; *************** function _spi_get_external_tx_buffer *****************
  7871 ;; Defined at:
  7872 ;;		line 75 in file "spi.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;		None
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;		None
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  2    0[COMRAM] PTR unsigned char 
  7879 ;; Registers used:
  7880 ;;		wreg, status,2, status,0
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7889 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7890 ;;Total ram usage:        2 bytes
  7891 ;; Hardware stack levels used:    1
  7892 ;; This function calls:
  7893 ;;		Nothing
  7894 ;; This function is called by:
  7895 ;;		_main
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           	psect	text30
  7900  008146                     __ptext30:
  7901                           	opt stack 0
  7902  008146                     _spi_get_external_tx_buffer:
  7903                           	opt stack 30
  7904                           
  7905                           ;spi.c: 77: return _spi_external_tx_buffer;
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;incstack = 0
  7909  008146  0E50               	movlw	low __spi_external_tx_buffer
  7910  008148  6E01               	movwf	?_spi_get_external_tx_buffer,c
  7911  00814A  0E02               	movlw	high __spi_external_tx_buffer
  7912  00814C  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  7913  00814E  0012               	return	
  7914  008150                     __end_of_spi_get_external_tx_buffer:
  7915                           	opt stack 0
  7916                           tblptru	equ	0xFF8
  7917                           tblptrh	equ	0xFF7
  7918                           tblptrl	equ	0xFF6
  7919                           tablat	equ	0xFF5
  7920                           intcon	equ	0xFF2
  7921                           intcon2	equ	0xFF1
  7922                           intcon3	equ	0xFF0
  7923                           postinc0	equ	0xFEE
  7924                           wreg	equ	0xFE8
  7925                           postdec1	equ	0xFE5
  7926                           plusw1	equ	0xFE3
  7927                           fsr1h	equ	0xFE2
  7928                           fsr1l	equ	0xFE1
  7929                           indf2	equ	0xFDF
  7930                           postinc2	equ	0xFDE
  7931                           plusw2	equ	0xFDB
  7932                           fsr2h	equ	0xFDA
  7933                           fsr2l	equ	0xFD9
  7934                           status	equ	0xFD8
  7935                           
  7936 ;; *************** function _spi_get_external_rx_buffer *****************
  7937 ;; Defined at:
  7938 ;;		line 80 in file "spi.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;		None
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;		None
  7943 ;; Return value:  Size  Location     Type
  7944 ;;                  2    0[COMRAM] PTR unsigned char 
  7945 ;; Registers used:
  7946 ;;		wreg, status,2, status,0
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7955 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7956 ;;Total ram usage:        2 bytes
  7957 ;; Hardware stack levels used:    1
  7958 ;; This function calls:
  7959 ;;		Nothing
  7960 ;; This function is called by:
  7961 ;;		_main
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text31
  7966  008150                     __ptext31:
  7967                           	opt stack 0
  7968  008150                     _spi_get_external_rx_buffer:
  7969                           	opt stack 30
  7970                           
  7971                           ;spi.c: 82: return _spi_external_rx_buffer;
  7972                           
  7973                           ;incstack = 0
  7974  008150  0E00               	movlw	low __spi_external_rx_buffer
  7975  008152  6E01               	movwf	?_spi_get_external_rx_buffer,c
  7976  008154  0E03               	movlw	high __spi_external_rx_buffer
  7977  008156  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  7978  008158  0012               	return	
  7979  00815A                     __end_of_spi_get_external_rx_buffer:
  7980                           	opt stack 0
  7981                           tblptru	equ	0xFF8
  7982                           tblptrh	equ	0xFF7
  7983                           tblptrl	equ	0xFF6
  7984                           tablat	equ	0xFF5
  7985                           intcon	equ	0xFF2
  7986                           intcon2	equ	0xFF1
  7987                           intcon3	equ	0xFF0
  7988                           postinc0	equ	0xFEE
  7989                           wreg	equ	0xFE8
  7990                           postdec1	equ	0xFE5
  7991                           plusw1	equ	0xFE3
  7992                           fsr1h	equ	0xFE2
  7993                           fsr1l	equ	0xFE1
  7994                           indf2	equ	0xFDF
  7995                           postinc2	equ	0xFDE
  7996                           plusw2	equ	0xFDB
  7997                           fsr2h	equ	0xFDA
  7998                           fsr2l	equ	0xFD9
  7999                           status	equ	0xFD8
  8000                           
  8001 ;; *************** function _jump_to_main_program *****************
  8002 ;; Defined at:
  8003 ;;		line 248 in file "os.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;		None
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;		None
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  1    wreg      void 
  8010 ;; Registers used:
  8011 ;;		None
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8021 ;;Total ram usage:        0 bytes
  8022 ;; Hardware stack levels used:    1
  8023 ;; This function calls:
  8024 ;;		Nothing
  8025 ;; This function is called by:
  8026 ;;		_main
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           	psect	text32
  8031  0081EA                     __ptext32:
  8032                           	opt stack 0
  8033  0081EA                     _jump_to_main_program:
  8034                           	opt stack 30
  8035                           
  8036                           ;incstack = 0
  8037  0081EA  EF00 F048          	goto	36864	; ;# 
  8038  0081EE  0012               	return		;funcret
  8039  0081F0                     __end_of_jump_to_main_program:
  8040                           	opt stack 0
  8041                           tblptru	equ	0xFF8
  8042                           tblptrh	equ	0xFF7
  8043                           tblptrl	equ	0xFF6
  8044                           tablat	equ	0xFF5
  8045                           intcon	equ	0xFF2
  8046                           intcon2	equ	0xFF1
  8047                           intcon3	equ	0xFF0
  8048                           postinc0	equ	0xFEE
  8049                           wreg	equ	0xFE8
  8050                           postdec1	equ	0xFE5
  8051                           plusw1	equ	0xFE3
  8052                           fsr1h	equ	0xFE2
  8053                           fsr1l	equ	0xFE1
  8054                           indf2	equ	0xFDF
  8055                           postinc2	equ	0xFDE
  8056                           plusw2	equ	0xFDB
  8057                           fsr2h	equ	0xFDA
  8058                           fsr2l	equ	0xFD9
  8059                           status	equ	0xFD8
  8060                           
  8061 ;; *************** function _bootloader_run *****************
  8062 ;; Defined at:
  8063 ;;		line 63 in file "bootloader.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;  timeslot        1    wreg     unsigned char 
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;  timeslot        1   93[COMRAM] unsigned char 
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      void 
  8070 ;; Registers used:
  8071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8078 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8080 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8081 ;;Total ram usage:        1 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; Hardware stack levels required when called:    8
  8084 ;; This function calls:
  8085 ;;		__bootloader_find_file
  8086 ;;		__bootloader_program
  8087 ;;		__bootloader_verify_file
  8088 ;; This function is called by:
  8089 ;;		_main
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           	psect	text33
  8094  00717C                     __ptext33:
  8095                           	opt stack 0
  8096  00717C                     _bootloader_run:
  8097                           	opt stack 22
  8098                           
  8099                           ;incstack = 0
  8100                           ;bootloader_run@timeslot stored from wreg
  8101  00717C  6E5E               	movwf	bootloader_run@timeslot,c
  8102                           
  8103                           ;bootloader.c: 65: switch(os.bootloader_mode)
  8104  00717E  D015               	goto	l2307
  8105  007180                     
  8106                           ;bootloader.c: 68: if(timeslot==0)
  8107  007180  505E               	movf	bootloader_run@timeslot,w,c
  8108  007182  A4D8               	btfss	status,2,c
  8109  007184  0012               	return	
  8110                           
  8111                           ;bootloader.c: 69: {;bootloader.c: 70: _bootloader_find_file();
  8112  007186  ECB0  F02D         	call	__bootloader_find_file	;wreg free
  8113                           
  8114                           ;bootloader.c: 71: };bootloader.c: 72: break;
  8115  00718A  0012               	return	
  8116  00718C                     
  8117                           ;bootloader.c: 75: if(timeslot==0)
  8118  00718C  505E               	movf	bootloader_run@timeslot,w,c
  8119  00718E  A4D8               	btfss	status,2,c
  8120  007190  0012               	return	
  8121                           
  8122                           ;bootloader.c: 76: {;bootloader.c: 77: _bootloader_find_file();
  8123  007192  ECB0  F02D         	call	__bootloader_find_file	;wreg free
  8124                           
  8125                           ;bootloader.c: 78: };bootloader.c: 79: break;
  8126  007196  0012               	return	
  8127  007198                     
  8128                           ;bootloader.c: 82: _bootloader_verify_file();
  8129  007198  ECBE  F007         	call	__bootloader_verify_file	;wreg free
  8130                           
  8131                           ;bootloader.c: 89: break;
  8132                           
  8133                           ;bootloader.c: 88: case BOOTLOADER_MODE_CHECK_FAILED:
  8134                           
  8135                           ;bootloader.c: 86: break;
  8136                           
  8137                           ;bootloader.c: 85: case BOOTLOADER_MODE_CHECK_COMPLETE:
  8138                           
  8139                           ;bootloader.c: 83: break;
  8140  00719C  0012               	return	
  8141  00719E                     
  8142                           ;bootloader.c: 92: if(timeslot==0)
  8143  00719E  505E               	movf	bootloader_run@timeslot,w,c
  8144  0071A0  A4D8               	btfss	status,2,c
  8145  0071A2  0012               	return	
  8146                           
  8147                           ;bootloader.c: 93: {;bootloader.c: 94: _bootloader_program();
  8148  0071A4  EC2D  F004         	call	__bootloader_program	;wreg free
  8149                           
  8150                           ;bootloader.c: 100: }
  8151                           
  8152                           ;bootloader.c: 99: break;
  8153                           
  8154                           ;bootloader.c: 98: case BOOTLOADER_MODE_DONE:
  8155                           
  8156                           ;bootloader.c: 95: };bootloader.c: 96: break;
  8157  0071A8  0012               	return	
  8158  0071AA                     l2307:
  8159  0071AA  0100               	movlb	0	; () banked
  8160  0071AC  51BD               	movf	(_os+4)& (0+255),w,b	;volatile
  8161                           
  8162                           ; Switch size 1, requested type "space"
  8163                           ; Number of cases is 7, Range of values is 16 to 112
  8164                           ; switch strategies available:
  8165                           ; Name         Instructions Cycles
  8166                           ; simple_byte           22    12 (average)
  8167                           ;	Chosen strategy is simple_byte
  8168  0071AE  0A10               	xorlw	16	; case 16
  8169  0071B0  B4D8               	btfsc	status,2,c
  8170  0071B2  D7E6               	goto	l2308
  8171  0071B4  0A30               	xorlw	48	; case 32
  8172  0071B6  B4D8               	btfsc	status,2,c
  8173  0071B8  D7E9               	goto	l2311
  8174  0071BA  0A10               	xorlw	16	; case 48
  8175  0071BC  B4D8               	btfsc	status,2,c
  8176  0071BE  D7EC               	goto	l2313
  8177  0071C0  0A70               	xorlw	112	; case 64
  8178  0071C2  B4D8               	btfsc	status,2,c
  8179  0071C4  0012               	return	
  8180  0071C6  0A10               	xorlw	16	; case 80
  8181  0071C8  B4D8               	btfsc	status,2,c
  8182  0071CA  0012               	return	
  8183  0071CC  0A30               	xorlw	48	; case 96
  8184  0071CE  B4D8               	btfsc	status,2,c
  8185  0071D0  D7E6               	goto	l2316
  8186  0071D2  0A10               	xorlw	16	; case 112
  8187  0071D4  0012               	return	
  8188  0071D6                     __end_of_bootloader_run:
  8189                           	opt stack 0
  8190                           tblptru	equ	0xFF8
  8191                           tblptrh	equ	0xFF7
  8192                           tblptrl	equ	0xFF6
  8193                           tablat	equ	0xFF5
  8194                           intcon	equ	0xFF2
  8195                           intcon2	equ	0xFF1
  8196                           intcon3	equ	0xFF0
  8197                           postinc0	equ	0xFEE
  8198                           wreg	equ	0xFE8
  8199                           postdec1	equ	0xFE5
  8200                           plusw1	equ	0xFE3
  8201                           fsr1h	equ	0xFE2
  8202                           fsr1l	equ	0xFE1
  8203                           indf2	equ	0xFDF
  8204                           postinc2	equ	0xFDE
  8205                           plusw2	equ	0xFDB
  8206                           fsr2h	equ	0xFDA
  8207                           fsr2l	equ	0xFD9
  8208                           status	equ	0xFD8
  8209                           
  8210 ;; *************** function __bootloader_verify_file *****************
  8211 ;; Defined at:
  8212 ;;		line 179 in file "bootloader.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;		None
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;  root           32    8[BANK0 ] struct .
  8217 ;;  address32       4   45[BANK0 ] unsigned long 
  8218 ;;  return_value    4   41[BANK0 ] unsigned long 
  8219 ;;  rec_counter     1   40[BANK0 ] unsigned char 
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  1    wreg      void 
  8222 ;; Registers used:
  8223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8230 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8231 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8232 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8233 ;;Total ram usage:       49 bytes
  8234 ;; Hardware stack levels used:    1
  8235 ;; Hardware stack levels required when called:    7
  8236 ;; This function calls:
  8237 ;;		__bootloader_check_address
  8238 ;;		_fat_get_file_information
  8239 ;;		_fat_get_file_size
  8240 ;;		_fat_read_from_file_fast
  8241 ;;		_parseHexFileEntry
  8242 ;; This function is called by:
  8243 ;;		_bootloader_run
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           	psect	text34
  8248  000F7C                     __ptext34:
  8249                           	opt stack 0
  8250  000F7C                     __bootloader_verify_file:
  8251                           	opt stack 22
  8252                           
  8253                           ;bootloader.c: 181: uint8_t rec_counter;;bootloader.c: 182: uint32_t return_value = 0;
  8254                           
  8255                           ;incstack = 0
  8256  000F7C  0E00               	movlw	0
  8257  000F7E  0100               	movlb	0	; () banked
  8258  000F80  6F89               	movwf	__bootloader_verify_file@return_value& (0+255),b
  8259  000F82  0E00               	movlw	0
  8260  000F84  6F8A               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  8261  000F86  0E00               	movlw	0
  8262  000F88  6F8B               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  8263  000F8A  0E00               	movlw	0
  8264  000F8C  6F8C               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;bootloader.c: 183: uint32_t address32;;bootloader.c: 184: rootEntry_t root;;bootloader.
      +                          c: 186: if(hex_file_offset==0)
  8268  000F8E  51CF               	movf	_hex_file_offset& (0+255),w,b
  8269  000F90  11D0               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  8270  000F92  11D1               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  8271  000F94  11D2               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  8272  000F96  A4D8               	btfss	status,2,c
  8273  000F98  D010               	goto	l2340
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;bootloader.c: 187: {;bootloader.c: 189: fat_get_file_information(file_number, &root);
  8277  000F9A  0E68               	movlw	low __bootloader_verify_file@root
  8278  000F9C  6E37               	movwf	fat_get_file_information@data,c
  8279  000F9E  0E00               	movlw	high __bootloader_verify_file@root
  8280  000FA0  6E38               	movwf	fat_get_file_information@data+1,c
  8281  000FA2  51FF               	movf	_file_number& (0+255),w,b
  8282  000FA4  ECAD  F034         	call	_fat_get_file_information
  8283                           
  8284                           ;bootloader.c: 190: fast_read_cluster = root.firstCluster;
  8285  000FA8  C082  F0F9         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  8286  000FAC  C083  F0FA         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  8287                           
  8288                           ;bootloader.c: 191: fast_read_cluster_number = 0;
  8289  000FB0  0E00               	movlw	0
  8290  000FB2  0100               	movlb	0	; () banked
  8291  000FB4  6FF8               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  8292  000FB6  0E00               	movlw	0
  8293  000FB8  6FF7               	movwf	_fast_read_cluster_number& (0+255),b
  8294  000FBA                     l2340:
  8295                           
  8296                           ; BSR set to: 0
  8297                           ;bootloader.c: 192: };bootloader.c: 195: hex_file_size = fat_get_file_size(file_number);
  8298                           
  8299                           ; BSR set to: 0
  8300  000FBA  51FF               	movf	_file_number& (0+255),w,b
  8301  000FBC  EC21  F035         	call	_fat_get_file_size
  8302  000FC0  C030  F0CB         	movff	?_fat_get_file_size,_hex_file_size
  8303  000FC4  C031  F0CC         	movff	?_fat_get_file_size+1,_hex_file_size+1
  8304  000FC8  C032  F0CD         	movff	?_fat_get_file_size+2,_hex_file_size+2
  8305  000FCC  C033  F0CE         	movff	?_fat_get_file_size+3,_hex_file_size+3
  8306                           
  8307                           ;bootloader.c: 198: for(rec_counter=0; rec_counter<16; ++rec_counter)
  8308  000FD0  0E00               	movlw	0
  8309  000FD2  0100               	movlb	0	; () banked
  8310  000FD4  6F88               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  8311  000FD6                     l14267:
  8312                           
  8313                           ; BSR set to: 0
  8314  000FD6  0E0F               	movlw	15
  8315  000FD8  6588               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  8316  000FDA  D001               	goto	l2341
  8317  000FDC  0012               	return	
  8318  000FDE                     l2341:
  8319                           
  8320                           ; BSR set to: 0
  8321                           ;bootloader.c: 199: {;bootloader.c: 201: if((hex_file_size-hex_file_offset)>=50)
  8322                           
  8323                           ; BSR set to: 0
  8324  000FDE  C0CF  F060         	movff	_hex_file_offset,??__bootloader_verify_file
  8325  000FE2  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  8326  000FE6  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  8327  000FEA  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  8328  000FEE  1F60               	comf	??__bootloader_verify_file& (0+255),f,b
  8329  000FF0  1F61               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  8330  000FF2  1F62               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  8331  000FF4  1F63               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  8332  000FF6  2B60               	incf	??__bootloader_verify_file& (0+255),f,b
  8333  000FF8  0E00               	movlw	0
  8334  000FFA  2361               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  8335  000FFC  2362               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  8336  000FFE  2363               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  8337  001000  51CB               	movf	_hex_file_size& (0+255),w,b
  8338  001002  2560               	addwf	??__bootloader_verify_file& (0+255),w,b
  8339  001004  6F64               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  8340  001006  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  8341  001008  2161               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  8342  00100A  6F65               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  8343  00100C  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  8344  00100E  2162               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  8345  001010  6F66               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  8346  001012  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  8347  001014  2163               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  8348  001016  6F67               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  8349  001018  5167               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  8350  00101A  1166               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  8351  00101C  1165               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  8352  00101E  E104               	bnz	u11150
  8353  001020  0E32               	movlw	50
  8354  001022  5D64               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  8355  001024  A0D8               	btfss	status,0,c
  8356  001026  D01F               	goto	l2343
  8357  001028                     u11150:
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;bootloader.c: 202: {;bootloader.c: 204: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  8361  001028  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  8362  00102C  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  8363  001030  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  8364  001034  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  8365  001038  0E32               	movlw	50
  8366  00103A  6E3C               	movwf	fat_read_from_file_fast@length,c
  8367  00103C  0E00               	movlw	0
  8368  00103E  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  8369  001040  0E00               	movlw	0
  8370  001042  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  8371  001044  0E00               	movlw	0
  8372  001046  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  8373  001048  0E88               	movlw	low _file_buffer
  8374  00104A  6E40               	movwf	fat_read_from_file_fast@data,c
  8375  00104C  0E01               	movlw	high _file_buffer
  8376  00104E  6E41               	movwf	fat_read_from_file_fast@data+1,c
  8377  001050  0EF9               	movlw	low _fast_read_cluster
  8378  001052  6E42               	movwf	fat_read_from_file_fast@cluster,c
  8379  001054  0E00               	movlw	high _fast_read_cluster
  8380  001056  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  8381  001058  0EF7               	movlw	low _fast_read_cluster_number
  8382  00105A  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  8383  00105C  0E00               	movlw	high _fast_read_cluster_number
  8384  00105E  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  8385  001060  ECC4  F00F         	call	_fat_read_from_file_fast	;wreg free
  8386                           
  8387                           ;bootloader.c: 205: }
  8388  001064  D034               	goto	l2344
  8389  001066                     l2343:
  8390                           
  8391                           ;bootloader.c: 206: else;bootloader.c: 207: {;bootloader.c: 209: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  8392  001066  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  8393  00106A  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  8394  00106E  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  8395  001072  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  8396  001076  C0CF  F060         	movff	_hex_file_offset,??__bootloader_verify_file
  8397  00107A  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  8398  00107E  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  8399  001082  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  8400  001086  0100               	movlb	0	; () banked
  8401  001088  1F60               	comf	??__bootloader_verify_file& (0+255),f,b
  8402  00108A  1F61               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  8403  00108C  1F62               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  8404  00108E  1F63               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  8405  001090  2B60               	incf	??__bootloader_verify_file& (0+255),f,b
  8406  001092  0E00               	movlw	0
  8407  001094  2361               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  8408  001096  2362               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  8409  001098  2363               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  8410  00109A  51CB               	movf	_hex_file_size& (0+255),w,b
  8411  00109C  2560               	addwf	??__bootloader_verify_file& (0+255),w,b
  8412  00109E  6E3C               	movwf	fat_read_from_file_fast@length,c
  8413  0010A0  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  8414  0010A2  2161               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  8415  0010A4  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  8416  0010A6  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  8417  0010A8  2162               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  8418  0010AA  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  8419  0010AC  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  8420  0010AE  2163               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  8421  0010B0  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  8422  0010B2  0E88               	movlw	low _file_buffer
  8423  0010B4  6E40               	movwf	fat_read_from_file_fast@data,c
  8424  0010B6  0E01               	movlw	high _file_buffer
  8425  0010B8  6E41               	movwf	fat_read_from_file_fast@data+1,c
  8426  0010BA  0EF9               	movlw	low _fast_read_cluster
  8427  0010BC  6E42               	movwf	fat_read_from_file_fast@cluster,c
  8428  0010BE  0E00               	movlw	high _fast_read_cluster
  8429  0010C0  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  8430  0010C2  0EF7               	movlw	low _fast_read_cluster_number
  8431  0010C4  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  8432  0010C6  0E00               	movlw	high _fast_read_cluster_number
  8433  0010C8  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  8434  0010CA  ECC4  F00F         	call	_fat_read_from_file_fast	;wreg free
  8435  0010CE                     l2344:
  8436                           
  8437                           ;bootloader.c: 210: };bootloader.c: 213: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  8438  0010CE  0E88               	movlw	low _file_buffer
  8439  0010D0  6E0C               	movwf	parseHexFileEntry@data,c
  8440  0010D2  0E01               	movlw	high _file_buffer
  8441  0010D4  6E0D               	movwf	parseHexFileEntry@data+1,c
  8442  0010D6  0E00               	movlw	0
  8443  0010D8  6E0E               	movwf	parseHexFileEntry@offset,c
  8444  0010DA  0E00               	movlw	0
  8445  0010DC  6E0F               	movwf	parseHexFileEntry@offset+1,c
  8446  0010DE  0E00               	movlw	0
  8447  0010E0  6E10               	movwf	parseHexFileEntry@offset+2,c
  8448  0010E2  0E00               	movlw	0
  8449  0010E4  6E11               	movwf	parseHexFileEntry@offset+3,c
  8450  0010E6  0EBA               	movlw	low _hex_file_entry
  8451  0010E8  6E12               	movwf	parseHexFileEntry@hexEntry,c
  8452  0010EA  0E01               	movlw	high _hex_file_entry
  8453  0010EC  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  8454  0010EE  EC10  F000         	call	_parseHexFileEntry	;wreg free
  8455  0010F2  C00C  F089         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  8456  0010F6  C00D  F08A         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  8457  0010FA  C00E  F08B         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  8458  0010FE  C00F  F08C         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  8459                           
  8460                           ;bootloader.c: 216: ++hex_file_entries;
  8461  001102  0101               	movlb	1	; () banked
  8462  001104  4B74               	infsnz	_hex_file_entries& (0+255),f,b
  8463  001106  2B75               	incf	(_hex_file_entries+1)& (0+255),f,b
  8464                           
  8465                           ; BSR set to: 1
  8466                           ;bootloader.c: 219: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  8467  001108  0E04               	movlw	4
  8468  00110A  19BE               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  8469  00110C  A4D8               	btfss	status,2,c
  8470  00110E  D01C               	goto	l2345
  8471                           
  8472                           ; BSR set to: 1
  8473                           ;bootloader.c: 220: {;bootloader.c: 221: extended_linear_address = hex_file_entry.data[0
      +                          ];
  8474  001110  51BF               	movf	(_hex_file_entry+5)& (0+255),w,b
  8475  001112  6F46               	movwf	_extended_linear_address& (0+255),b
  8476  001114  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  8477  001116  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  8478  001118  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  8479                           
  8480                           ; BSR set to: 1
  8481                           ;bootloader.c: 222: extended_linear_address <<= 8;
  8482  00111A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  8483  00111E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  8484  001122  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  8485  001126  6B46               	clrf	_extended_linear_address& (0+255),b
  8486                           
  8487                           ; BSR set to: 1
  8488                           ;bootloader.c: 223: extended_linear_address |= hex_file_entry.data[1];
  8489  001128  51C0               	movf	(_hex_file_entry+6)& (0+255),w,b
  8490  00112A  1346               	iorwf	_extended_linear_address& (0+255),f,b
  8491                           
  8492                           ; BSR set to: 1
  8493                           ;bootloader.c: 224: extended_linear_address <<= 8;
  8494  00112C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  8495  001130  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  8496  001134  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  8497  001138  6B46               	clrf	_extended_linear_address& (0+255),b
  8498                           
  8499                           ; BSR set to: 1
  8500                           ;bootloader.c: 225: extended_linear_address <<= 8;
  8501  00113A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  8502  00113E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  8503  001142  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  8504  001146  6B46               	clrf	_extended_linear_address& (0+255),b
  8505  001148                     l2345:
  8506                           
  8507                           ; BSR set to: 1
  8508                           ;bootloader.c: 226: };bootloader.c: 229: if(hex_file_entry.recordType==RecordTypeData)
  8509                           
  8510                           ; BSR set to: 1
  8511  001148  51BE               	movf	(_hex_file_entry+4)& (0+255),w,b
  8512  00114A  A4D8               	btfss	status,2,c
  8513  00114C  D05D               	goto	l2349
  8514                           
  8515                           ; BSR set to: 1
  8516                           ;bootloader.c: 230: {;bootloader.c: 232: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  8517  00114E  51BC               	movf	(_hex_file_entry+2)& (0+255),w,b
  8518  001150  2546               	addwf	_extended_linear_address& (0+255),w,b
  8519  001152  0100               	movlb	0	; () banked
  8520  001154  6F8D               	movwf	__bootloader_verify_file@address32& (0+255),b
  8521  001156  0101               	movlb	1	; () banked
  8522  001158  51BD               	movf	(_hex_file_entry+3)& (0+255),w,b
  8523  00115A  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  8524  00115C  0100               	movlb	0	; () banked
  8525  00115E  6F8E               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  8526  001160  0E00               	movlw	0
  8527  001162  0101               	movlb	1	; () banked
  8528  001164  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  8529  001166  0100               	movlb	0	; () banked
  8530  001168  6F8F               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  8531  00116A  0E00               	movlw	0
  8532  00116C  0101               	movlb	1	; () banked
  8533  00116E  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  8534  001170  0100               	movlb	0	; () banked
  8535  001172  6F90               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  8536                           
  8537                           ;bootloader.c: 235: if(address32<file_minimum_address)
  8538  001174  0101               	movlb	1	; () banked
  8539  001176  514E               	movf	_file_minimum_address& (0+255),w,b
  8540  001178  0100               	movlb	0	; () banked
  8541  00117A  5D8D               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  8542  00117C  0101               	movlb	1	; () banked
  8543  00117E  514F               	movf	(_file_minimum_address+1)& (0+255),w,b
  8544  001180  0100               	movlb	0	; () banked
  8545  001182  598E               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  8546  001184  0101               	movlb	1	; () banked
  8547  001186  5150               	movf	(_file_minimum_address+2)& (0+255),w,b
  8548  001188  0100               	movlb	0	; () banked
  8549  00118A  598F               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  8550  00118C  0101               	movlb	1	; () banked
  8551  00118E  5151               	movf	(_file_minimum_address+3)& (0+255),w,b
  8552  001190  0100               	movlb	0	; () banked
  8553  001192  5990               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  8554  001194  B0D8               	btfsc	status,0,c
  8555  001196  D008               	goto	l2347
  8556                           
  8557                           ; BSR set to: 0
  8558                           ;bootloader.c: 236: {;bootloader.c: 237: file_minimum_address = address32;
  8559  001198  C08D  F14E         	movff	__bootloader_verify_file@address32,_file_minimum_address
  8560  00119C  C08E  F14F         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  8561  0011A0  C08F  F150         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  8562  0011A4  C090  F151         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  8563  0011A8                     l2347:
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;bootloader.c: 238: };bootloader.c: 239: if(address32>file_maximum_address)
  8567                           
  8568                           ; BSR set to: 0
  8569  0011A8  518D               	movf	__bootloader_verify_file@address32& (0+255),w,b
  8570  0011AA  0101               	movlb	1	; () banked
  8571  0011AC  5D4A               	subwf	_file_maximum_address& (0+255),w,b
  8572  0011AE  0100               	movlb	0	; () banked
  8573  0011B0  518E               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  8574  0011B2  0101               	movlb	1	; () banked
  8575  0011B4  594B               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  8576  0011B6  0100               	movlb	0	; () banked
  8577  0011B8  518F               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  8578  0011BA  0101               	movlb	1	; () banked
  8579  0011BC  594C               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  8580  0011BE  0100               	movlb	0	; () banked
  8581  0011C0  5190               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  8582  0011C2  0101               	movlb	1	; () banked
  8583  0011C4  594D               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  8584  0011C6  B0D8               	btfsc	status,0,c
  8585  0011C8  D008               	goto	l2348
  8586                           
  8587                           ; BSR set to: 1
  8588                           ;bootloader.c: 240: {;bootloader.c: 241: file_maximum_address = address32;
  8589  0011CA  C08D  F14A         	movff	__bootloader_verify_file@address32,_file_maximum_address
  8590  0011CE  C08E  F14B         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  8591  0011D2  C08F  F14C         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  8592  0011D6  C090  F14D         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  8593  0011DA                     l2348:
  8594                           
  8595                           ; BSR set to: 1
  8596                           ;bootloader.c: 242: };bootloader.c: 245: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  8597                           
  8598                           ; BSR set to: 1
  8599  0011DA  C08D  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  8600  0011DE  C08E  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  8601  0011E2  C08F  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  8602  0011E6  C090  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  8603  0011EA  C1BA  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  8604  0011EE  ECA3  F027         	call	__bootloader_check_address	;wreg free
  8605  0011F2  0AFF               	xorlw	255
  8606  0011F4  A4D8               	btfss	status,2,c
  8607  0011F6  D008               	goto	l2349
  8608                           
  8609                           ;bootloader.c: 246: {;bootloader.c: 248: last_error = ShortRecordErrorAddressRange;
  8610  0011F8  0E0B               	movlw	11
  8611  0011FA  0100               	movlb	0	; () banked
  8612  0011FC  6FDE               	movwf	_last_error& (0+255),b
  8613                           
  8614                           ;bootloader.c: 250: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  8615  0011FE  0E50               	movlw	80
  8616  001200  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  8617                           
  8618                           ;bootloader.c: 251: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  8619  001202  0E50               	movlw	80
  8620  001204  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  8621                           
  8622                           ;bootloader.c: 252: break;
  8623  001206  0012               	return	
  8624  001208                     l2349:
  8625                           
  8626                           ;bootloader.c: 253: };bootloader.c: 254: };bootloader.c: 256: if(return_value==0)
  8627                           
  8628                           ; BSR set to: 0
  8629                           
  8630                           ; BSR set to: 0
  8631  001208  0100               	movlb	0	; () banked
  8632  00120A  5189               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  8633  00120C  118A               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  8634  00120E  118B               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  8635  001210  118C               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  8636  001212  A4D8               	btfss	status,2,c
  8637  001214  D027               	goto	l2350
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;bootloader.c: 257: {;bootloader.c: 260: total_hex_file_entries = hex_file_entries;
  8641  001216  C174  F172         	movff	_hex_file_entries,_total_hex_file_entries
  8642  00121A  C175  F173         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;bootloader.c: 261: hex_file_entries = 0;
  8646  00121E  0E00               	movlw	0
  8647  001220  0101               	movlb	1	; () banked
  8648  001222  6F75               	movwf	(_hex_file_entries+1)& (0+255),b
  8649  001224  0E00               	movlw	0
  8650  001226  6F74               	movwf	_hex_file_entries& (0+255),b
  8651                           
  8652                           ;bootloader.c: 262: hex_file_offset = 0;
  8653  001228  0E00               	movlw	0
  8654  00122A  0100               	movlb	0	; () banked
  8655  00122C  6FCF               	movwf	_hex_file_offset& (0+255),b
  8656  00122E  0E00               	movlw	0
  8657  001230  6FD0               	movwf	(_hex_file_offset+1)& (0+255),b
  8658  001232  0E00               	movlw	0
  8659  001234  6FD1               	movwf	(_hex_file_offset+2)& (0+255),b
  8660  001236  0E00               	movlw	0
  8661  001238  6FD2               	movwf	(_hex_file_offset+3)& (0+255),b
  8662                           
  8663                           ;bootloader.c: 263: extended_linear_address = 0;
  8664  00123A  0E00               	movlw	0
  8665  00123C  0101               	movlb	1	; () banked
  8666  00123E  6F46               	movwf	_extended_linear_address& (0+255),b
  8667  001240  0E00               	movlw	0
  8668  001242  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
  8669  001244  0E00               	movlw	0
  8670  001246  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
  8671  001248  0E00               	movlw	0
  8672  00124A  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
  8673                           
  8674                           ;bootloader.c: 264: flash_pages_written = 0;
  8675  00124C  0E00               	movlw	0
  8676  00124E  6F71               	movwf	(_flash_pages_written+1)& (0+255),b
  8677  001250  0E00               	movlw	0
  8678  001252  6F70               	movwf	_flash_pages_written& (0+255),b
  8679                           
  8680                           ;bootloader.c: 265: start_from_byte_next = 0;
  8681  001254  0E00               	movlw	0
  8682  001256  0100               	movlb	0	; () banked
  8683  001258  6FDD               	movwf	_start_from_byte_next& (0+255),b
  8684                           
  8685                           ;bootloader.c: 267: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  8686  00125A  0E40               	movlw	64
  8687  00125C  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  8688                           
  8689                           ;bootloader.c: 268: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  8690  00125E  0E40               	movlw	64
  8691  001260  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  8692                           
  8693                           ;bootloader.c: 269: break;
  8694  001262  0012               	return	
  8695  001264                     l2350:
  8696                           
  8697                           ; BSR set to: 0
  8698                           ;bootloader.c: 271: else if(return_value>0xFFFFFFF0)
  8699                           
  8700                           ; BSR set to: 0
  8701  001264  0EF1               	movlw	241
  8702  001266  5D89               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  8703  001268  0EFF               	movlw	255
  8704  00126A  598A               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  8705  00126C  0EFF               	movlw	255
  8706  00126E  598B               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  8707  001270  0EFF               	movlw	255
  8708  001272  598C               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  8709  001274  A0D8               	btfss	status,0,c
  8710  001276  D007               	goto	l2352
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;bootloader.c: 272: {;bootloader.c: 274: last_error = return_value & 0xF;
  8714  001278  5189               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  8715  00127A  0B0F               	andlw	15
  8716  00127C  6FDE               	movwf	_last_error& (0+255),b
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;bootloader.c: 276: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  8720  00127E  0E50               	movlw	80
  8721  001280  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;bootloader.c: 277: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  8725  001282  0E50               	movlw	80
  8726  001284  D7ED               	goto	L1
  8727  001286                     l2352:
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;bootloader.c: 280: else;bootloader.c: 281: {;bootloader.c: 283: hex_file_offset += retu
      +                          rn_value;
  8731                           
  8732                           ; BSR set to: 0
  8733  001286  5189               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  8734  001288  27CF               	addwf	_hex_file_offset& (0+255),f,b
  8735  00128A  518A               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  8736  00128C  23D0               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  8737  00128E  518B               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  8738  001290  23D1               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  8739  001292  518C               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  8740  001294  23D2               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  8741                           
  8742                           ; BSR set to: 0
  8743                           
  8744                           ; BSR set to: 0
  8745                           
  8746                           ; BSR set to: 0
  8747  001296  2B88               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  8748  001298  D69E               	goto	l14267
  8749  00129A                     __end_of__bootloader_verify_file:
  8750                           	opt stack 0
  8751                           tblptru	equ	0xFF8
  8752                           tblptrh	equ	0xFF7
  8753                           tblptrl	equ	0xFF6
  8754                           tablat	equ	0xFF5
  8755                           intcon	equ	0xFF2
  8756                           intcon2	equ	0xFF1
  8757                           intcon3	equ	0xFF0
  8758                           postinc0	equ	0xFEE
  8759                           wreg	equ	0xFE8
  8760                           postdec1	equ	0xFE5
  8761                           plusw1	equ	0xFE3
  8762                           fsr1h	equ	0xFE2
  8763                           fsr1l	equ	0xFE1
  8764                           indf2	equ	0xFDF
  8765                           postinc2	equ	0xFDE
  8766                           plusw2	equ	0xFDB
  8767                           fsr2h	equ	0xFDA
  8768                           fsr2l	equ	0xFD9
  8769                           status	equ	0xFD8
  8770                           
  8771 ;; *************** function __bootloader_program *****************
  8772 ;; Defined at:
  8773 ;;		line 288 in file "bootloader.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;		None
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;  root           32   14[BANK0 ] struct .
  8778 ;;  address32       4   50[BANK0 ] unsigned long 
  8779 ;;  return_value    4   46[BANK0 ] unsigned long 
  8780 ;;  page_to_writ    2   57[BANK0 ] unsigned int 
  8781 ;;  cntr            2   55[BANK0 ] unsigned int 
  8782 ;;  address_with    2   12[BANK0 ] unsigned int 
  8783 ;;  entry_page      2   10[BANK0 ] unsigned int 
  8784 ;;  buffer          2    8[BANK0 ] PTR unsigned char 
  8785 ;;		 -> pageBuffer(1024), 
  8786 ;;  start_from_b    1   54[BANK0 ] unsigned char 
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      void 
  8789 ;; Registers used:
  8790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8797 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8798 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8799 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;Total ram usage:       59 bytes
  8801 ;; Hardware stack levels used:    1
  8802 ;; Hardware stack levels required when called:    7
  8803 ;; This function calls:
  8804 ;;		__bootloader_check_address
  8805 ;;		_fat_get_file_information
  8806 ;;		_fat_read_from_file_fast
  8807 ;;		_internalFlash_addressWithinPage
  8808 ;;		_internalFlash_erasePage
  8809 ;;		_internalFlash_getBuffer
  8810 ;;		_internalFlash_pageFromAddress
  8811 ;;		_internalFlash_readPage
  8812 ;;		_internalFlash_writePage
  8813 ;;		_parseHexFileEntry
  8814 ;; This function is called by:
  8815 ;;		_bootloader_run
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text35
  8820  00085A                     __ptext35:
  8821                           	opt stack 0
  8822  00085A                     __bootloader_program:
  8823                           	opt stack 22
  8824                           
  8825                           ;bootloader.c: 290: uint16_t cntr;;bootloader.c: 291: uint8_t* buffer;;bootloader.c: 292
      +                          : uint16_t entry_page;;bootloader.c: 293: uint16_t page_to_write = 0;
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;incstack = 0
  8829  00085A  0E00               	movlw	0
  8830  00085C  0100               	movlb	0	; () banked
  8831  00085E  6F9A               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  8832  000860  0E00               	movlw	0
  8833  000862  6F99               	movwf	__bootloader_program@page_to_write& (0+255),b
  8834                           
  8835                           ;bootloader.c: 294: uint8_t start_from_byte;;bootloader.c: 295: uint32_t address32;;boot
      +                          loader.c: 296: uint32_t return_value = 0;
  8836  000864  0E00               	movlw	0
  8837  000866  6F8E               	movwf	__bootloader_program@return_value& (0+255),b
  8838  000868  0E00               	movlw	0
  8839  00086A  6F8F               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  8840  00086C  0E00               	movlw	0
  8841  00086E  6F90               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  8842  000870  0E00               	movlw	0
  8843  000872  6F91               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;bootloader.c: 297: uint16_t address_within_page;;bootloader.c: 298: rootEntry_t root;;b
      +                          ootloader.c: 300: if(hex_file_offset==0)
  8847  000874  51CF               	movf	_hex_file_offset& (0+255),w,b
  8848  000876  11D0               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  8849  000878  11D1               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  8850  00087A  11D2               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  8851  00087C  A4D8               	btfss	status,2,c
  8852  00087E  D010               	goto	l2357
  8853                           
  8854                           ; BSR set to: 0
  8855                           ;bootloader.c: 301: {;bootloader.c: 303: fat_get_file_information(file_number, &root);
  8856  000880  0E6E               	movlw	low __bootloader_program@root
  8857  000882  6E37               	movwf	fat_get_file_information@data,c
  8858  000884  0E00               	movlw	high __bootloader_program@root
  8859  000886  6E38               	movwf	fat_get_file_information@data+1,c
  8860  000888  51FF               	movf	_file_number& (0+255),w,b
  8861  00088A  ECAD  F034         	call	_fat_get_file_information
  8862                           
  8863                           ;bootloader.c: 304: fast_read_cluster = root.firstCluster;
  8864  00088E  C088  F0F9         	movff	__bootloader_program@root+26,_fast_read_cluster
  8865  000892  C089  F0FA         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  8866                           
  8867                           ;bootloader.c: 305: fast_read_cluster_number = 0;
  8868  000896  0E00               	movlw	0
  8869  000898  0100               	movlb	0	; () banked
  8870  00089A  6FF8               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  8871  00089C  0E00               	movlw	0
  8872  00089E  6FF7               	movwf	_fast_read_cluster_number& (0+255),b
  8873  0008A0                     l2357:
  8874                           
  8875                           ;bootloader.c: 310: {;bootloader.c: 315: if((hex_file_size-hex_file_offset)>=50)
  8876                           
  8877                           ; BSR set to: 0
  8878                           
  8879                           ;bootloader.c: 306: };bootloader.c: 309: while(1)
  8880                           
  8881                           ; BSR set to: 0
  8882  0008A0  C0CF  F060         	movff	_hex_file_offset,??__bootloader_program
  8883  0008A4  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_program+1
  8884  0008A8  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_program+2
  8885  0008AC  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_program+3
  8886  0008B0  0100               	movlb	0	; () banked
  8887  0008B2  1F60               	comf	??__bootloader_program& (0+255),f,b
  8888  0008B4  1F61               	comf	(??__bootloader_program+1)& (0+255),f,b
  8889  0008B6  1F62               	comf	(??__bootloader_program+2)& (0+255),f,b
  8890  0008B8  1F63               	comf	(??__bootloader_program+3)& (0+255),f,b
  8891  0008BA  2B60               	incf	??__bootloader_program& (0+255),f,b
  8892  0008BC  0E00               	movlw	0
  8893  0008BE  2361               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  8894  0008C0  2362               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  8895  0008C2  2363               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  8896  0008C4  51CB               	movf	_hex_file_size& (0+255),w,b
  8897  0008C6  2560               	addwf	??__bootloader_program& (0+255),w,b
  8898  0008C8  6F64               	movwf	(??__bootloader_program+4)& (0+255),b
  8899  0008CA  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  8900  0008CC  2161               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  8901  0008CE  6F65               	movwf	(??__bootloader_program+5)& (0+255),b
  8902  0008D0  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  8903  0008D2  2162               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  8904  0008D4  6F66               	movwf	(??__bootloader_program+6)& (0+255),b
  8905  0008D6  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  8906  0008D8  2163               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  8907  0008DA  6F67               	movwf	(??__bootloader_program+7)& (0+255),b
  8908  0008DC  5167               	movf	(??__bootloader_program+7)& (0+255),w,b
  8909  0008DE  1166               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  8910  0008E0  1165               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  8911  0008E2  E104               	bnz	u11250
  8912  0008E4  0E32               	movlw	50
  8913  0008E6  5D64               	subwf	(??__bootloader_program+4)& (0+255),w,b
  8914  0008E8  A0D8               	btfss	status,0,c
  8915  0008EA  D01F               	goto	l2359
  8916  0008EC                     u11250:
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;bootloader.c: 316: {;bootloader.c: 318: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  8920  0008EC  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  8921  0008F0  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  8922  0008F4  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  8923  0008F8  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  8924  0008FC  0E32               	movlw	50
  8925  0008FE  6E3C               	movwf	fat_read_from_file_fast@length,c
  8926  000900  0E00               	movlw	0
  8927  000902  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  8928  000904  0E00               	movlw	0
  8929  000906  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  8930  000908  0E00               	movlw	0
  8931  00090A  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  8932  00090C  0E88               	movlw	low _file_buffer
  8933  00090E  6E40               	movwf	fat_read_from_file_fast@data,c
  8934  000910  0E01               	movlw	high _file_buffer
  8935  000912  6E41               	movwf	fat_read_from_file_fast@data+1,c
  8936  000914  0EF9               	movlw	low _fast_read_cluster
  8937  000916  6E42               	movwf	fat_read_from_file_fast@cluster,c
  8938  000918  0E00               	movlw	high _fast_read_cluster
  8939  00091A  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  8940  00091C  0EF7               	movlw	low _fast_read_cluster_number
  8941  00091E  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  8942  000920  0E00               	movlw	high _fast_read_cluster_number
  8943  000922  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  8944  000924  ECC4  F00F         	call	_fat_read_from_file_fast	;wreg free
  8945                           
  8946                           ;bootloader.c: 319: }
  8947  000928  D034               	goto	l2360
  8948  00092A                     l2359:
  8949                           
  8950                           ;bootloader.c: 320: else;bootloader.c: 321: {;bootloader.c: 323: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  8951  00092A  C0CF  F038         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  8952  00092E  C0D0  F039         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  8953  000932  C0D1  F03A         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  8954  000936  C0D2  F03B         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  8955  00093A  C0CF  F060         	movff	_hex_file_offset,??__bootloader_program
  8956  00093E  C0D0  F061         	movff	_hex_file_offset+1,??__bootloader_program+1
  8957  000942  C0D1  F062         	movff	_hex_file_offset+2,??__bootloader_program+2
  8958  000946  C0D2  F063         	movff	_hex_file_offset+3,??__bootloader_program+3
  8959  00094A  0100               	movlb	0	; () banked
  8960  00094C  1F60               	comf	??__bootloader_program& (0+255),f,b
  8961  00094E  1F61               	comf	(??__bootloader_program+1)& (0+255),f,b
  8962  000950  1F62               	comf	(??__bootloader_program+2)& (0+255),f,b
  8963  000952  1F63               	comf	(??__bootloader_program+3)& (0+255),f,b
  8964  000954  2B60               	incf	??__bootloader_program& (0+255),f,b
  8965  000956  0E00               	movlw	0
  8966  000958  2361               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  8967  00095A  2362               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  8968  00095C  2363               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  8969  00095E  51CB               	movf	_hex_file_size& (0+255),w,b
  8970  000960  2560               	addwf	??__bootloader_program& (0+255),w,b
  8971  000962  6E3C               	movwf	fat_read_from_file_fast@length,c
  8972  000964  51CC               	movf	(_hex_file_size+1)& (0+255),w,b
  8973  000966  2161               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  8974  000968  6E3D               	movwf	fat_read_from_file_fast@length+1,c
  8975  00096A  51CD               	movf	(_hex_file_size+2)& (0+255),w,b
  8976  00096C  2162               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  8977  00096E  6E3E               	movwf	fat_read_from_file_fast@length+2,c
  8978  000970  51CE               	movf	(_hex_file_size+3)& (0+255),w,b
  8979  000972  2163               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  8980  000974  6E3F               	movwf	fat_read_from_file_fast@length+3,c
  8981  000976  0E88               	movlw	low _file_buffer
  8982  000978  6E40               	movwf	fat_read_from_file_fast@data,c
  8983  00097A  0E01               	movlw	high _file_buffer
  8984  00097C  6E41               	movwf	fat_read_from_file_fast@data+1,c
  8985  00097E  0EF9               	movlw	low _fast_read_cluster
  8986  000980  6E42               	movwf	fat_read_from_file_fast@cluster,c
  8987  000982  0E00               	movlw	high _fast_read_cluster
  8988  000984  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
  8989  000986  0EF7               	movlw	low _fast_read_cluster_number
  8990  000988  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
  8991  00098A  0E00               	movlw	high _fast_read_cluster_number
  8992  00098C  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
  8993  00098E  ECC4  F00F         	call	_fat_read_from_file_fast	;wreg free
  8994  000992                     l2360:
  8995                           
  8996                           ;bootloader.c: 324: };bootloader.c: 327: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  8997  000992  0E88               	movlw	low _file_buffer
  8998  000994  6E0C               	movwf	parseHexFileEntry@data,c
  8999  000996  0E01               	movlw	high _file_buffer
  9000  000998  6E0D               	movwf	parseHexFileEntry@data+1,c
  9001  00099A  0E00               	movlw	0
  9002  00099C  6E0E               	movwf	parseHexFileEntry@offset,c
  9003  00099E  0E00               	movlw	0
  9004  0009A0  6E0F               	movwf	parseHexFileEntry@offset+1,c
  9005  0009A2  0E00               	movlw	0
  9006  0009A4  6E10               	movwf	parseHexFileEntry@offset+2,c
  9007  0009A6  0E00               	movlw	0
  9008  0009A8  6E11               	movwf	parseHexFileEntry@offset+3,c
  9009  0009AA  0EBA               	movlw	low _hex_file_entry
  9010  0009AC  6E12               	movwf	parseHexFileEntry@hexEntry,c
  9011  0009AE  0E01               	movlw	high _hex_file_entry
  9012  0009B0  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  9013  0009B2  EC10  F000         	call	_parseHexFileEntry	;wreg free
  9014  0009B6  C00C  F08E         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  9015  0009BA  C00D  F08F         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  9016  0009BE  C00E  F090         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  9017  0009C2  C00F  F091         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  9018                           
  9019                           ;bootloader.c: 330: ++hex_file_entries;
  9020  0009C6  0101               	movlb	1	; () banked
  9021  0009C8  4B74               	infsnz	_hex_file_entries& (0+255),f,b
  9022  0009CA  2B75               	incf	(_hex_file_entries+1)& (0+255),f,b
  9023                           
  9024                           ; BSR set to: 1
  9025                           ;bootloader.c: 333: if(return_value>RecordErrorNoError)
  9026  0009CC  0EF1               	movlw	241
  9027  0009CE  0100               	movlb	0	; () banked
  9028  0009D0  5D8E               	subwf	__bootloader_program@return_value& (0+255),w,b
  9029  0009D2  0EFF               	movlw	255
  9030  0009D4  598F               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  9031  0009D6  0EFF               	movlw	255
  9032  0009D8  5990               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  9033  0009DA  0EFF               	movlw	255
  9034  0009DC  5991               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  9035  0009DE  A0D8               	btfss	status,0,c
  9036  0009E0  D005               	goto	l2361
  9037                           
  9038                           ; BSR set to: 0
  9039                           ;bootloader.c: 334: {;bootloader.c: 336: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  9040  0009E2  0E50               	movlw	80
  9041  0009E4  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  9042                           
  9043                           ;bootloader.c: 337: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  9044  0009E6  0E50               	movlw	80
  9045  0009E8  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;bootloader.c: 338: return;
  9049  0009EA  0012               	return	
  9050  0009EC                     l2361:
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;bootloader.c: 340: else;bootloader.c: 341: {;bootloader.c: 343: hex_file_offset += retu
      +                          rn_value;
  9054                           
  9055                           ; BSR set to: 0
  9056  0009EC  518E               	movf	__bootloader_program@return_value& (0+255),w,b
  9057  0009EE  27CF               	addwf	_hex_file_offset& (0+255),f,b
  9058  0009F0  518F               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  9059  0009F2  23D0               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  9060  0009F4  5190               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  9061  0009F6  23D1               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  9062  0009F8  5191               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  9063  0009FA  23D2               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;bootloader.c: 344: };bootloader.c: 346: switch(hex_file_entry.recordType)
  9067  0009FC  D0FC               	goto	l2364
  9068  0009FE                     
  9069                           ;bootloader.c: 352: extended_linear_address = hex_file_entry.data[0];
  9070                           
  9071                           ; BSR set to: 0
  9072  0009FE  0101               	movlb	1	; () banked
  9073  000A00  51BF               	movf	(_hex_file_entry+5)& (0+255),w,b
  9074  000A02  6F46               	movwf	_extended_linear_address& (0+255),b
  9075  000A04  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  9076  000A06  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  9077  000A08  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  9078                           
  9079                           ; BSR set to: 1
  9080                           ;bootloader.c: 353: extended_linear_address <<= 8;
  9081  000A0A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  9082  000A0E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  9083  000A12  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  9084  000A16  6B46               	clrf	_extended_linear_address& (0+255),b
  9085                           
  9086                           ; BSR set to: 1
  9087                           ;bootloader.c: 354: extended_linear_address |= hex_file_entry.data[1];
  9088  000A18  51C0               	movf	(_hex_file_entry+6)& (0+255),w,b
  9089  000A1A  1346               	iorwf	_extended_linear_address& (0+255),f,b
  9090                           
  9091                           ; BSR set to: 1
  9092                           ;bootloader.c: 355: extended_linear_address <<= 8;
  9093  000A1C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  9094  000A20  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  9095  000A24  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  9096  000A28  6B46               	clrf	_extended_linear_address& (0+255),b
  9097                           
  9098                           ; BSR set to: 1
  9099                           ;bootloader.c: 356: extended_linear_address <<= 8;
  9100  000A2A  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  9101  000A2E  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  9102  000A32  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  9103  000A36  6B46               	clrf	_extended_linear_address& (0+255),b
  9104                           
  9105                           ; BSR set to: 1
  9106                           ;bootloader.c: 358: break;
  9107                           
  9108                           ;bootloader.c: 357: continue;
  9109  000A38  D733               	goto	l2357
  9110  000A3A                     l2368:
  9111                           
  9112                           ; BSR set to: 1
  9113                           ;bootloader.c: 363: start_from_byte = start_from_byte_next;
  9114  000A3A  C0DD  F096         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  9115                           
  9116                           ; BSR set to: 1
  9117                           ;bootloader.c: 365: start_from_byte_next = 0;
  9118  000A3E  0E00               	movlw	0
  9119  000A40  0100               	movlb	0	; () banked
  9120  000A42  6FDD               	movwf	_start_from_byte_next& (0+255),b
  9121                           
  9122                           ; BSR set to: 0
  9123                           ;bootloader.c: 368: address32 = extended_linear_address + hex_file_entry.address;
  9124  000A44  0101               	movlb	1	; () banked
  9125  000A46  51BC               	movf	(_hex_file_entry+2)& (0+255),w,b
  9126  000A48  2546               	addwf	_extended_linear_address& (0+255),w,b
  9127  000A4A  0100               	movlb	0	; () banked
  9128  000A4C  6F92               	movwf	__bootloader_program@address32& (0+255),b
  9129  000A4E  0101               	movlb	1	; () banked
  9130  000A50  51BD               	movf	(_hex_file_entry+3)& (0+255),w,b
  9131  000A52  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  9132  000A54  0100               	movlb	0	; () banked
  9133  000A56  6F93               	movwf	(__bootloader_program@address32+1)& (0+255),b
  9134  000A58  0E00               	movlw	0
  9135  000A5A  0101               	movlb	1	; () banked
  9136  000A5C  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  9137  000A5E  0100               	movlb	0	; () banked
  9138  000A60  6F94               	movwf	(__bootloader_program@address32+2)& (0+255),b
  9139  000A62  0E00               	movlw	0
  9140  000A64  0101               	movlb	1	; () banked
  9141  000A66  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  9142  000A68  0100               	movlb	0	; () banked
  9143  000A6A  6F95               	movwf	(__bootloader_program@address32+3)& (0+255),b
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;bootloader.c: 369: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  9147  000A6C  5196               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  9148  000A6E  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  9149  000A70  6E01               	movwf	internalFlash_pageFromAddress@address,c
  9150  000A72  0E00               	movlw	0
  9151  000A74  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  9152  000A76  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  9153  000A78  0E00               	movlw	0
  9154  000A7A  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  9155  000A7C  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  9156  000A7E  0E00               	movlw	0
  9157  000A80  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  9158  000A82  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  9159  000A84  ECEB  F03F         	call	_internalFlash_pageFromAddress	;wreg free
  9160  000A88  C001  F06A         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  9161  000A8C  C002  F06B         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  9162                           
  9163                           ;bootloader.c: 372: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  9164  000A90  0100               	movlb	0	; () banked
  9165  000A92  5196               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  9166  000A94  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  9167  000A96  6E01               	movwf	__bootloader_check_address@address,c
  9168  000A98  0E00               	movlw	0
  9169  000A9A  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  9170  000A9C  6E02               	movwf	__bootloader_check_address@address+1,c
  9171  000A9E  0E00               	movlw	0
  9172  000AA0  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  9173  000AA2  6E03               	movwf	__bootloader_check_address@address+2,c
  9174  000AA4  0E00               	movlw	0
  9175  000AA6  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  9176  000AA8  6E04               	movwf	__bootloader_check_address@address+3,c
  9177  000AAA  5196               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  9178  000AAC  0800               	sublw	0
  9179  000AAE  0101               	movlb	1	; () banked
  9180  000AB0  25BA               	addwf	_hex_file_entry& (0+255),w,b
  9181  000AB2  6E05               	movwf	__bootloader_check_address@dataLength,c
  9182  000AB4  ECA3  F027         	call	__bootloader_check_address	;wreg free
  9183  000AB8  0900               	iorlw	0
  9184  000ABA  A4D8               	btfss	status,2,c
  9185  000ABC  D6F1               	goto	l2357
  9186                           
  9187                           ;bootloader.c: 375: };bootloader.c: 377: if(page_to_write==0)
  9188                           
  9189                           ;bootloader.c: 373: {;bootloader.c: 374: break;
  9190  000ABE  0100               	movlb	0	; () banked
  9191  000AC0  5199               	movf	__bootloader_program@page_to_write& (0+255),w,b
  9192  000AC2  119A               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  9193  000AC4  A4D8               	btfss	status,2,c
  9194  000AC6  D010               	goto	l2370
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;bootloader.c: 378: {;bootloader.c: 382: page_to_write = entry_page;
  9198  000AC8  C06A  F099         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  9199  000ACC  C06B  F09A         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;bootloader.c: 383: internalFlash_readPage(page_to_write);
  9203  000AD0  C099  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  9204  000AD4  C09A  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  9205  000AD8  EC23  F03C         	call	_internalFlash_readPage	;wreg free
  9206                           
  9207                           ;bootloader.c: 384: buffer = internalFlash_getBuffer();
  9208  000ADC  ECAD  F040         	call	_internalFlash_getBuffer	;wreg free
  9209  000AE0  C001  F068         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  9210  000AE4  C002  F069         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  9211  000AE8                     l2370:
  9212                           
  9213                           ;bootloader.c: 385: };bootloader.c: 387: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  9214  000AE8  C096  F097         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  9215  000AEC  0100               	movlb	0	; () banked
  9216  000AEE  6B98               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  9217  000AF0  D05D               	goto	l2371
  9218  000AF2                     
  9219                           ; BSR set to: 0
  9220                           ;bootloader.c: 388: {;bootloader.c: 391: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  9221                           
  9222                           ; BSR set to: 0
  9223  000AF2  5197               	movf	__bootloader_program@cntr& (0+255),w,b
  9224  000AF4  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  9225  000AF6  6E01               	movwf	internalFlash_pageFromAddress@address,c
  9226  000AF8  5198               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  9227  000AFA  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  9228  000AFC  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  9229  000AFE  0E00               	movlw	0
  9230  000B00  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  9231  000B02  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  9232  000B04  0E00               	movlw	0
  9233  000B06  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  9234  000B08  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  9235  000B0A  ECEB  F03F         	call	_internalFlash_pageFromAddress	;wreg free
  9236  000B0E  0100               	movlb	0	; () banked
  9237  000B10  5199               	movf	__bootloader_program@page_to_write& (0+255),w,b
  9238  000B12  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  9239  000B14  E12A               	bnz	l14399
  9240  000B16  519A               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  9241  000B18  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  9242  000B1A  A4D8               	btfss	status,2,c
  9243  000B1C  D026               	goto	l2373
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;bootloader.c: 392: {;bootloader.c: 393: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  9247  000B1E  5197               	movf	__bootloader_program@cntr& (0+255),w,b
  9248  000B20  2592               	addwf	__bootloader_program@address32& (0+255),w,b
  9249  000B22  6E09               	movwf	internalFlash_addressWithinPage@address,c
  9250  000B24  5198               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  9251  000B26  2193               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  9252  000B28  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  9253  000B2A  0E00               	movlw	0
  9254  000B2C  2194               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  9255  000B2E  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  9256  000B30  0E00               	movlw	0
  9257  000B32  2195               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  9258  000B34  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  9259  000B36  C099  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  9260  000B3A  C09A  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  9261  000B3E  ECD3  F037         	call	_internalFlash_addressWithinPage	;wreg free
  9262  000B42  C009  F06C         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  9263  000B46  C00A  F06D         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  9264                           
  9265                           ;bootloader.c: 394: buffer[address_within_page] = hex_file_entry.data[cntr];
  9266  000B4A  0EBF               	movlw	low (_hex_file_entry+5)
  9267  000B4C  0100               	movlb	0	; () banked
  9268  000B4E  2597               	addwf	__bootloader_program@cntr& (0+255),w,b
  9269  000B50  6ED9               	movwf	fsr2l,c
  9270  000B52  0E01               	movlw	high (_hex_file_entry+5)
  9271  000B54  2198               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  9272  000B56  6EDA               	movwf	fsr2h,c
  9273  000B58  516C               	movf	__bootloader_program@address_within_page& (0+255),w,b
  9274  000B5A  2568               	addwf	__bootloader_program@buffer& (0+255),w,b
  9275  000B5C  6EE1               	movwf	fsr1l,c
  9276  000B5E  516D               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  9277  000B60  2169               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  9278  000B62  6EE2               	movwf	fsr1h,c
  9279  000B64  CFDF FFE7          	movff	indf2,indf1
  9280                           
  9281                           ;bootloader.c: 395: }
  9282  000B68  D01E               	goto	l2374
  9283  000B6A                     l2373:
  9284  000B6A                     l14399:
  9285                           
  9286                           ; BSR set to: 0
  9287                           ;bootloader.c: 396: else;bootloader.c: 397: {;bootloader.c: 399: hex_file_offset -= retu
      +                          rn_value;
  9288  000B6A  518E               	movf	__bootloader_program@return_value& (0+255),w,b
  9289  000B6C  5FCF               	subwf	_hex_file_offset& (0+255),f,b
  9290  000B6E  518F               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  9291  000B70  5BD0               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  9292  000B72  5190               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  9293  000B74  5BD1               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  9294  000B76  5191               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  9295  000B78  5BD2               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;bootloader.c: 400: --hex_file_entries;
  9299  000B7A  0101               	movlb	1	; () banked
  9300  000B7C  0774               	decf	_hex_file_entries& (0+255),f,b
  9301  000B7E  A0D8               	btfss	status,0,c
  9302  000B80  0775               	decf	(_hex_file_entries+1)& (0+255),f,b
  9303                           
  9304                           ; BSR set to: 1
  9305                           ;bootloader.c: 402: start_from_byte_next = cntr;
  9306  000B82  C097  F0DD         	movff	__bootloader_program@cntr,_start_from_byte_next
  9307                           
  9308                           ; BSR set to: 1
  9309                           ;bootloader.c: 404: internalFlash_erasePage(page_to_write);
  9310  000B86  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  9311  000B8A  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  9312  000B8E  EC8C  F03D         	call	_internalFlash_erasePage	;wreg free
  9313                           
  9314                           ;bootloader.c: 405: internalFlash_writePage(page_to_write);
  9315  000B92  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  9316  000B96  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  9317  000B9A  EC7E  F033         	call	_internalFlash_writePage	;wreg free
  9318                           
  9319                           ;bootloader.c: 406: ++flash_pages_written;
  9320  000B9E  0101               	movlb	1	; () banked
  9321  000BA0  4B70               	infsnz	_flash_pages_written& (0+255),f,b
  9322  000BA2  2B71               	incf	(_flash_pages_written+1)& (0+255),f,b
  9323                           
  9324                           ; BSR set to: 1
  9325                           ;bootloader.c: 408: return;
  9326  000BA4  0012               	return	
  9327  000BA6                     l2374:
  9328                           
  9329                           ; BSR set to: 1
  9330  000BA6  0100               	movlb	0	; () banked
  9331  000BA8  4B97               	infsnz	__bootloader_program@cntr& (0+255),f,b
  9332  000BAA  2B98               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  9333  000BAC                     l2371:
  9334                           
  9335                           ; BSR set to: 0
  9336                           
  9337                           ; BSR set to: 0
  9338  000BAC  0101               	movlb	1	; () banked
  9339  000BAE  51BA               	movf	_hex_file_entry& (0+255),w,b
  9340  000BB0  0100               	movlb	0	; () banked
  9341  000BB2  5D97               	subwf	__bootloader_program@cntr& (0+255),w,b
  9342  000BB4  0101               	movlb	1	; () banked
  9343  000BB6  51BB               	movf	(_hex_file_entry+1)& (0+255),w,b
  9344  000BB8  0100               	movlb	0	; () banked
  9345  000BBA  5998               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  9346  000BBC  B0D8               	btfsc	status,0,c
  9347  000BBE  D670               	goto	l2357
  9348  000BC0  D798               	goto	l2372
  9349  000BC2                     
  9350                           ;bootloader.c: 416: if(page_to_write!=0)
  9351                           
  9352                           ; BSR set to: 0
  9353  000BC2  0100               	movlb	0	; () banked
  9354  000BC4  5199               	movf	__bootloader_program@page_to_write& (0+255),w,b
  9355  000BC6  119A               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  9356  000BC8  B4D8               	btfsc	status,2,c
  9357  000BCA  0012               	return	
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;bootloader.c: 417: {;bootloader.c: 419: internalFlash_erasePage(page_to_write);
  9361  000BCC  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  9362  000BD0  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  9363  000BD4  EC8C  F03D         	call	_internalFlash_erasePage	;wreg free
  9364                           
  9365                           ;bootloader.c: 420: internalFlash_writePage(page_to_write);
  9366  000BD8  C099  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  9367  000BDC  C09A  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  9368  000BE0  EC7E  F033         	call	_internalFlash_writePage	;wreg free
  9369                           
  9370                           ;bootloader.c: 421: ++flash_pages_written;
  9371  000BE4  0101               	movlb	1	; () banked
  9372  000BE6  4B70               	infsnz	_flash_pages_written& (0+255),f,b
  9373  000BE8  2B71               	incf	(_flash_pages_written+1)& (0+255),f,b
  9374                           
  9375                           ; BSR set to: 1
  9376                           ;bootloader.c: 423: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  9377  000BEA  0E70               	movlw	112
  9378  000BEC  0100               	movlb	0	; () banked
  9379  000BEE  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
  9380                           
  9381                           ; BSR set to: 0
  9382                           ;bootloader.c: 424: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  9383  000BF0  0E70               	movlw	112
  9384  000BF2  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;bootloader.c: 425: };bootloader.c: 427: return;
  9388                           
  9389                           ; BSR set to: 0
  9390  000BF4  0012               	return	
  9391  000BF6                     l2364:
  9392                           
  9393                           ; BSR set to: 0
  9394                           
  9395                           ; BSR set to: 0
  9396  000BF6  0101               	movlb	1	; () banked
  9397  000BF8  51BE               	movf	(_hex_file_entry+4)& (0+255),w,b
  9398                           
  9399                           ; Switch size 1, requested type "space"
  9400                           ; Number of cases is 3, Range of values is 0 to 4
  9401                           ; switch strategies available:
  9402                           ; Name         Instructions Cycles
  9403                           ; simple_byte           10     6 (average)
  9404                           ;	Chosen strategy is simple_byte
  9405  000BFA  0A00               	xorlw	0	; case 0
  9406  000BFC  B4D8               	btfsc	status,2,c
  9407  000BFE  D71D               	goto	l2368
  9408  000C00  0A01               	xorlw	1	; case 1
  9409  000C02  B4D8               	btfsc	status,2,c
  9410  000C04  D7DE               	goto	l2376
  9411  000C06  0A05               	xorlw	5	; case 4
  9412  000C08  B4D8               	btfsc	status,2,c
  9413  000C0A  D6F9               	goto	l2365
  9414                           
  9415                           ; BSR set to: 1
  9416                           
  9417                           ; BSR set to: 1
  9418  000C0C  D649               	goto	l2357
  9419  000C0E                     __end_of__bootloader_program:
  9420                           	opt stack 0
  9421                           tblptru	equ	0xFF8
  9422                           tblptrh	equ	0xFF7
  9423                           tblptrl	equ	0xFF6
  9424                           tablat	equ	0xFF5
  9425                           intcon	equ	0xFF2
  9426                           intcon2	equ	0xFF1
  9427                           intcon3	equ	0xFF0
  9428                           postinc0	equ	0xFEE
  9429                           wreg	equ	0xFE8
  9430                           indf1	equ	0xFE7
  9431                           postdec1	equ	0xFE5
  9432                           plusw1	equ	0xFE3
  9433                           fsr1h	equ	0xFE2
  9434                           fsr1l	equ	0xFE1
  9435                           indf2	equ	0xFDF
  9436                           postinc2	equ	0xFDE
  9437                           plusw2	equ	0xFDB
  9438                           fsr2h	equ	0xFDA
  9439                           fsr2l	equ	0xFD9
  9440                           status	equ	0xFD8
  9441                           
  9442 ;; *************** function _parseHexFileEntry *****************
  9443 ;; Defined at:
  9444 ;;		line 59 in file "hex.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;  data            2   11[COMRAM] PTR unsigned char 
  9447 ;;		 -> file_buffer(50), 
  9448 ;;  offset          4   13[COMRAM] unsigned long 
  9449 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  9450 ;;		 -> hex_file_entry(23), 
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;  i               1   27[COMRAM] unsigned char 
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  4   11[COMRAM] unsigned long 
  9455 ;; Registers used:
  9456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9462 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9464 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9465 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9466 ;;Total ram usage:       17 bytes
  9467 ;; Hardware stack levels used:    1
  9468 ;; Hardware stack levels required when called:    2
  9469 ;; This function calls:
  9470 ;;		_hexCharsToUint16
  9471 ;;		_hexCharsToUint8
  9472 ;; This function is called by:
  9473 ;;		__bootloader_verify_file
  9474 ;;		__bootloader_program
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text36
  9479  000020                     __ptext36:
  9480                           	opt stack 0
  9481  000020                     _parseHexFileEntry:
  9482                           	opt stack 26
  9483                           
  9484                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  9485                           
  9486                           ;incstack = 0
  9487  000020  500E               	movf	parseHexFileEntry@offset,w,c
  9488  000022  240C               	addwf	parseHexFileEntry@data,w,c
  9489  000024  6ED9               	movwf	fsr2l,c
  9490  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  9491  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9492  00002A  6EDA               	movwf	fsr2h,c
  9493  00002C  0E3A               	movlw	58
  9494  00002E  18DE               	xorwf	postinc2,w,c
  9495  000030  B4D8               	btfsc	status,2,c
  9496  000032  D005               	goto	l2219
  9497                           
  9498                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  9499  000034  680C               	setf	?_parseHexFileEntry,c
  9500  000036  680D               	setf	?_parseHexFileEntry+1,c
  9501  000038  680E               	setf	?_parseHexFileEntry+2,c
  9502  00003A  680F               	setf	?_parseHexFileEntry+3,c
  9503  00003C  0012               	return	
  9504  00003E                     l2219:
  9505                           
  9506                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  9507  00003E  0E02               	movlw	2
  9508  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  9509  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9510  000044  0E00               	movlw	0
  9511  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9512  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  9513  00004A  5014               	movf	??_parseHexFileEntry,w,c
  9514  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  9515  00004E  6ED9               	movwf	fsr2l,c
  9516  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  9517  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9518  000054  6EDA               	movwf	fsr2h,c
  9519  000056  50DF               	movf	indf2,w,c
  9520  000058  6E03               	movwf	hexCharsToUint8@c2,c
  9521  00005A  0E01               	movlw	1
  9522  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  9523  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9524  000060  0E00               	movlw	0
  9525  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9526  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  9527  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  9528  000068  240C               	addwf	parseHexFileEntry@data,w,c
  9529  00006A  6ED9               	movwf	fsr2l,c
  9530  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  9531  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9532  000070  6EDA               	movwf	fsr2h,c
  9533  000072  50DF               	movf	indf2,w,c
  9534  000074  ECDD  F03F         	call	_hexCharsToUint8
  9535  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  9536  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  9537  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9538  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9539  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  9540  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  9541                           
  9542                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  9543  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9544  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9545  000094  0E01               	movlw	1
  9546  000096  50DB               	movf	plusw2,w,c
  9547  000098  E104               	bnz	u10270
  9548  00009A  0E11               	movlw	17
  9549  00009C  5CDE               	subwf	postinc2,w,c
  9550  00009E  A0D8               	btfss	status,0,c
  9551  0000A0  D009               	goto	l2221
  9552  0000A2                     u10270:
  9553                           
  9554                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  9555  0000A2  0EFC               	movlw	252
  9556  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  9557  0000A6  0EFF               	movlw	255
  9558  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  9559  0000AA  0EFF               	movlw	255
  9560  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  9561  0000AE  0EFF               	movlw	255
  9562  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  9563  0000B2  0012               	return	
  9564  0000B4                     l2221:
  9565                           
  9566                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  9567  0000B4  0E04               	movlw	4
  9568  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  9569  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9570  0000BA  0E00               	movlw	0
  9571  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9572  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  9573  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  9574  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  9575  0000C4  6ED9               	movwf	fsr2l,c
  9576  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  9577  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9578  0000CA  6EDA               	movwf	fsr2h,c
  9579  0000CC  50DF               	movf	indf2,w,c
  9580  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  9581  0000D0  0E05               	movlw	5
  9582  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  9583  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9584  0000D6  0E00               	movlw	0
  9585  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9586  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  9587  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  9588  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  9589  0000E0  6ED9               	movwf	fsr2l,c
  9590  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  9591  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9592  0000E6  6EDA               	movwf	fsr2h,c
  9593  0000E8  50DF               	movf	indf2,w,c
  9594  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  9595  0000EC  0E06               	movlw	6
  9596  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  9597  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  9598  0000F2  0E00               	movlw	0
  9599  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9600  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  9601  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  9602  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  9603  0000FC  6ED9               	movwf	fsr2l,c
  9604  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  9605  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9606  000102  6EDA               	movwf	fsr2h,c
  9607  000104  50DF               	movf	indf2,w,c
  9608  000106  6E05               	movwf	hexCharsToUint16@c4,c
  9609  000108  0E03               	movlw	3
  9610  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  9611  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  9612  00010E  0E00               	movlw	0
  9613  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9614  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  9615  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  9616  000116  240C               	addwf	parseHexFileEntry@data,w,c
  9617  000118  6ED9               	movwf	fsr2l,c
  9618  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  9619  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9620  00011E  6EDA               	movwf	fsr2h,c
  9621  000120  50DF               	movf	indf2,w,c
  9622  000122  EC5A  F035         	call	_hexCharsToUint16
  9623  000126  EE20 F002          	lfsr	2,2
  9624  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9625  00012C  26D9               	addwf	fsr2l,f,c
  9626  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9627  000130  22DA               	addwfc	fsr2h,f,c
  9628  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  9629  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  9630                           
  9631                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  9632  00013A  EE20 F004          	lfsr	2,4
  9633  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9634  000140  26D9               	addwf	fsr2l,f,c
  9635  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9636  000144  22DA               	addwfc	fsr2h,f,c
  9637  000146  0E08               	movlw	8
  9638  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  9639  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9640  00014C  0E00               	movlw	0
  9641  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9642  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  9643  000152  5014               	movf	??_parseHexFileEntry,w,c
  9644  000154  240C               	addwf	parseHexFileEntry@data,w,c
  9645  000156  6EE1               	movwf	fsr1l,c
  9646  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  9647  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9648  00015C  6EE2               	movwf	fsr1h,c
  9649  00015E  50E7               	movf	indf1,w,c
  9650  000160  6E03               	movwf	hexCharsToUint8@c2,c
  9651  000162  0E07               	movlw	7
  9652  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  9653  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9654  000168  0E00               	movlw	0
  9655  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9656  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  9657  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  9658  000170  240C               	addwf	parseHexFileEntry@data,w,c
  9659  000172  6EE1               	movwf	fsr1l,c
  9660  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  9661  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9662  000178  6EE2               	movwf	fsr1h,c
  9663  00017A  50E7               	movf	indf1,w,c
  9664  00017C  ECDD  F03F         	call	_hexCharsToUint8
  9665  000180  6EDF               	movwf	indf2,c
  9666                           
  9667                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  9668  000182  0E00               	movlw	0
  9669  000184  6E1C               	movwf	parseHexFileEntry@i,c
  9670  000186  D03D               	goto	l2222
  9671  000188                     
  9672                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  9673  000188  501C               	movf	parseHexFileEntry@i,w,c
  9674  00018A  0D01               	mullw	1
  9675  00018C  0E05               	movlw	5
  9676  00018E  26F3               	addwf	prodl,f,c
  9677  000190  0E00               	movlw	0
  9678  000192  22F4               	addwfc	prodh,f,c
  9679  000194  50F3               	movf	prodl,w,c
  9680  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  9681  000198  6ED9               	movwf	fsr2l,c
  9682  00019A  50F4               	movf	prodh,w,c
  9683  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  9684  00019E  6EDA               	movwf	fsr2h,c
  9685  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  9686  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  9687  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  9688  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  9689  0001AA  0E00               	movlw	0
  9690  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9691  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  9692  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  9693  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  9694  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9695  0001B6  0E0A               	movlw	10
  9696  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  9697  0001BA  0E00               	movlw	0
  9698  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9699  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  9700  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  9701  0001C2  6EE1               	movwf	fsr1l,c
  9702  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  9703  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9704  0001C8  6EE2               	movwf	fsr1h,c
  9705  0001CA  50E7               	movf	indf1,w,c
  9706  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  9707  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  9708  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  9709  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  9710  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  9711  0001D8  0E00               	movlw	0
  9712  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9713  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  9714  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  9715  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  9716  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9717  0001E4  0E09               	movlw	9
  9718  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  9719  0001E8  0E00               	movlw	0
  9720  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9721  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  9722  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  9723  0001F0  6EE1               	movwf	fsr1l,c
  9724  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  9725  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9726  0001F6  6EE2               	movwf	fsr1h,c
  9727  0001F8  50E7               	movf	indf1,w,c
  9728  0001FA  ECDD  F03F         	call	_hexCharsToUint8
  9729  0001FE  6EDF               	movwf	indf2,c
  9730  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  9731  000202                     l2222:
  9732  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9733  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9734  00020A  501C               	movf	parseHexFileEntry@i,w,c
  9735  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9736  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  9737  000210  50DE               	movf	postinc2,w,c
  9738  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  9739  000214  50DE               	movf	postinc2,w,c
  9740  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  9741  000218  A0D8               	btfss	status,0,c
  9742  00021A  D7B6               	goto	l2223
  9743                           
  9744                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  9745  00021C  EE20 F015          	lfsr	2,21
  9746  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9747  000222  26D9               	addwf	fsr2l,f,c
  9748  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9749  000226  22DA               	addwfc	fsr2h,f,c
  9750  000228  501C               	movf	parseHexFileEntry@i,w,c
  9751  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  9752  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  9753  000230  2614               	addwf	??_parseHexFileEntry,f,c
  9754  000232  0E00               	movlw	0
  9755  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9756  000236  500E               	movf	parseHexFileEntry@offset,w,c
  9757  000238  2614               	addwf	??_parseHexFileEntry,f,c
  9758  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  9759  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9760  00023E  0E0A               	movlw	10
  9761  000240  2614               	addwf	??_parseHexFileEntry,f,c
  9762  000242  0E00               	movlw	0
  9763  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9764  000246  5014               	movf	??_parseHexFileEntry,w,c
  9765  000248  240C               	addwf	parseHexFileEntry@data,w,c
  9766  00024A  6EE1               	movwf	fsr1l,c
  9767  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  9768  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9769  000250  6EE2               	movwf	fsr1h,c
  9770  000252  50E7               	movf	indf1,w,c
  9771  000254  6E03               	movwf	hexCharsToUint8@c2,c
  9772  000256  501C               	movf	parseHexFileEntry@i,w,c
  9773  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  9774  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  9775  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  9776  000260  0E00               	movlw	0
  9777  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9778  000264  500E               	movf	parseHexFileEntry@offset,w,c
  9779  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  9780  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  9781  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9782  00026C  0E09               	movlw	9
  9783  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  9784  000270  0E00               	movlw	0
  9785  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9786  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  9787  000276  240C               	addwf	parseHexFileEntry@data,w,c
  9788  000278  6EE1               	movwf	fsr1l,c
  9789  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  9790  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9791  00027E  6EE2               	movwf	fsr1h,c
  9792  000280  50E7               	movf	indf1,w,c
  9793  000282  ECDD  F03F         	call	_hexCharsToUint8
  9794  000286  6EDF               	movwf	indf2,c
  9795                           
  9796                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  9797  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9798  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9799  000290  EE10 F016          	lfsr	1,22
  9800  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9801  000296  26E1               	addwf	fsr1l,f,c
  9802  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9803  00029A  22E2               	addwfc	fsr1h,f,c
  9804  00029C  CFDF FFE7          	movff	indf2,indf1
  9805                           
  9806                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  9807  0002A0  EE20 F002          	lfsr	2,2
  9808  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9809  0002A6  26D9               	addwf	fsr2l,f,c
  9810  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9811  0002AA  22DA               	addwfc	fsr2h,f,c
  9812  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  9813  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  9814  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  9815  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  9816  0002BA  EE20 F016          	lfsr	2,22
  9817  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9818  0002C0  26D9               	addwf	fsr2l,f,c
  9819  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9820  0002C4  22DA               	addwfc	fsr2h,f,c
  9821  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  9822  0002C8  26DF               	addwf	indf2,f,c
  9823                           
  9824                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  9825  0002CA  EE20 F002          	lfsr	2,2
  9826  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9827  0002D0  26D9               	addwf	fsr2l,f,c
  9828  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9829  0002D4  22DA               	addwfc	fsr2h,f,c
  9830  0002D6  50DF               	movf	indf2,w,c
  9831  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9832  0002DA  EE20 F016          	lfsr	2,22
  9833  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9834  0002E0  26D9               	addwf	fsr2l,f,c
  9835  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9836  0002E4  22DA               	addwfc	fsr2h,f,c
  9837  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  9838  0002E8  26DF               	addwf	indf2,f,c
  9839                           
  9840                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  9841  0002EA  EE20 F004          	lfsr	2,4
  9842  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9843  0002F0  26D9               	addwf	fsr2l,f,c
  9844  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9845  0002F4  22DA               	addwfc	fsr2h,f,c
  9846  0002F6  50DF               	movf	indf2,w,c
  9847  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9848  0002FA  EE20 F016          	lfsr	2,22
  9849  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9850  000300  26D9               	addwf	fsr2l,f,c
  9851  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9852  000304  22DA               	addwfc	fsr2h,f,c
  9853  000306  5014               	movf	??_parseHexFileEntry,w,c
  9854  000308  26DF               	addwf	indf2,f,c
  9855                           
  9856                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  9857  00030A  0E00               	movlw	0
  9858  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  9859  00030E  D017               	goto	l2225
  9860  000310                     
  9861                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  9862  000310  501C               	movf	parseHexFileEntry@i,w,c
  9863  000312  0D01               	mullw	1
  9864  000314  0E05               	movlw	5
  9865  000316  26F3               	addwf	prodl,f,c
  9866  000318  0E00               	movlw	0
  9867  00031A  22F4               	addwfc	prodh,f,c
  9868  00031C  50F3               	movf	prodl,w,c
  9869  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  9870  000320  6ED9               	movwf	fsr2l,c
  9871  000322  50F4               	movf	prodh,w,c
  9872  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  9873  000326  6EDA               	movwf	fsr2h,c
  9874  000328  50DF               	movf	indf2,w,c
  9875  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9876  00032C  EE20 F016          	lfsr	2,22
  9877  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9878  000332  26D9               	addwf	fsr2l,f,c
  9879  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9880  000336  22DA               	addwfc	fsr2h,f,c
  9881  000338  5014               	movf	??_parseHexFileEntry,w,c
  9882  00033A  26DF               	addwf	indf2,f,c
  9883  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  9884  00033E                     l2225:
  9885  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9886  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9887  000346  501C               	movf	parseHexFileEntry@i,w,c
  9888  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9889  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  9890  00034C  50DE               	movf	postinc2,w,c
  9891  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  9892  000350  50DE               	movf	postinc2,w,c
  9893  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  9894  000354  A0D8               	btfss	status,0,c
  9895  000356  D7DC               	goto	l2226
  9896                           
  9897                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  9898  000358  EE20 F015          	lfsr	2,21
  9899  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9900  00035E  26D9               	addwf	fsr2l,f,c
  9901  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9902  000362  22DA               	addwfc	fsr2h,f,c
  9903  000364  50DF               	movf	indf2,w,c
  9904  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9905  000368  EE20 F016          	lfsr	2,22
  9906  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9907  00036E  26D9               	addwf	fsr2l,f,c
  9908  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9909  000372  22DA               	addwfc	fsr2h,f,c
  9910  000374  5014               	movf	??_parseHexFileEntry,w,c
  9911  000376  26DF               	addwf	indf2,f,c
  9912                           
  9913                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  9914  000378  EE20 F016          	lfsr	2,22
  9915  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9916  00037E  26D9               	addwf	fsr2l,f,c
  9917  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9918  000382  22DA               	addwfc	fsr2h,f,c
  9919  000384  50DF               	movf	indf2,w,c
  9920  000386  B4D8               	btfsc	status,2,c
  9921  000388  D009               	goto	l2228
  9922                           
  9923                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  9924  00038A  0EFE               	movlw	254
  9925  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  9926  00038E  0EFF               	movlw	255
  9927  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  9928  000392  0EFF               	movlw	255
  9929  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  9930  000396  0EFF               	movlw	255
  9931  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  9932  00039A  0012               	return	
  9933  00039C                     l2228:
  9934                           
  9935                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  9936  00039C  EE20 F004          	lfsr	2,4
  9937  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9938  0003A2  26D9               	addwf	fsr2l,f,c
  9939  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9940  0003A6  22DA               	addwfc	fsr2h,f,c
  9941  0003A8  04DE               	decf	postinc2,w,c
  9942  0003AA  A4D8               	btfss	status,2,c
  9943  0003AC  D009               	goto	l2229
  9944                           
  9945                           ;hex.c: 110: {;hex.c: 112: return 0;
  9946  0003AE  0E00               	movlw	0
  9947  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  9948  0003B2  0E00               	movlw	0
  9949  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  9950  0003B6  0E00               	movlw	0
  9951  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  9952  0003BA  0E00               	movlw	0
  9953  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  9954                           
  9955                           ;hex.c: 113: }
  9956  0003BE  0012               	return	
  9957  0003C0                     l2229:
  9958                           
  9959                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  9960  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  9961  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  9962  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  9963  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  9964  0003CA  0E00               	movlw	0
  9965  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9966  0003CE  0E0B               	movlw	11
  9967  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  9968  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9969  0003D4  0E00               	movlw	0
  9970  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  9971  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  9972  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  9973  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  9974  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  9975  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  9976  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  9977  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  9978  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  9979  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  9980  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  9981  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  9982  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  9983  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  9984  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  9985                           
  9986                           ;hex.c: 117: if (data[++offset] == ':')
  9987  0003F4  0E01               	movlw	1
  9988  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  9989  0003F8  0E00               	movlw	0
  9990  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  9991  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  9992  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  9993  000400  500E               	movf	parseHexFileEntry@offset,w,c
  9994  000402  240C               	addwf	parseHexFileEntry@data,w,c
  9995  000404  6ED9               	movwf	fsr2l,c
  9996  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  9997  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9998  00040A  6EDA               	movwf	fsr2h,c
  9999  00040C  0E3A               	movlw	58
 10000  00040E  18DE               	xorwf	postinc2,w,c
 10001  000410  A4D8               	btfss	status,2,c
 10002  000412  D009               	goto	l2231
 10003                           
 10004                           ;hex.c: 118: {;hex.c: 119: return offset;
 10005  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 10006  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 10007  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 10008  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 10009                           
 10010                           ;hex.c: 120: }
 10011  000424  0012               	return	
 10012  000426                     l2231:
 10013                           
 10014                           ;hex.c: 121: else if (data[++offset] == ':')
 10015  000426  0E01               	movlw	1
 10016  000428  260E               	addwf	parseHexFileEntry@offset,f,c
 10017  00042A  0E00               	movlw	0
 10018  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 10019  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 10020  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 10021  000432  500E               	movf	parseHexFileEntry@offset,w,c
 10022  000434  240C               	addwf	parseHexFileEntry@data,w,c
 10023  000436  6ED9               	movwf	fsr2l,c
 10024  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
 10025  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 10026  00043C  6EDA               	movwf	fsr2h,c
 10027  00043E  0E3A               	movlw	58
 10028  000440  18DE               	xorwf	postinc2,w,c
 10029  000442  A4D8               	btfss	status,2,c
 10030  000444  D009               	goto	l2233
 10031                           
 10032                           ;hex.c: 122: {;hex.c: 123: return offset;
 10033  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 10034  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 10035  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 10036  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 10037                           
 10038                           ;hex.c: 124: }
 10039  000456  0012               	return	
 10040  000458                     l2233:
 10041                           
 10042                           ;hex.c: 125: else if (data[++offset] == ':')
 10043  000458  0E01               	movlw	1
 10044  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
 10045  00045C  0E00               	movlw	0
 10046  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 10047  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 10048  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 10049  000464  500E               	movf	parseHexFileEntry@offset,w,c
 10050  000466  240C               	addwf	parseHexFileEntry@data,w,c
 10051  000468  6ED9               	movwf	fsr2l,c
 10052  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
 10053  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 10054  00046E  6EDA               	movwf	fsr2h,c
 10055  000470  0E3A               	movlw	58
 10056  000472  18DE               	xorwf	postinc2,w,c
 10057  000474  A4D8               	btfss	status,2,c
 10058  000476  D009               	goto	l2235
 10059                           
 10060                           ;hex.c: 126: {;hex.c: 127: return offset;
 10061  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 10062  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 10063  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 10064  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 10065                           
 10066                           ;hex.c: 128: }
 10067  000488  0012               	return	
 10068  00048A                     l2235:
 10069                           
 10070                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
 10071  00048A  0EFD               	movlw	253
 10072  00048C  6E0C               	movwf	?_parseHexFileEntry,c
 10073  00048E  0EFF               	movlw	255
 10074  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
 10075  000492  0EFF               	movlw	255
 10076  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
 10077  000496  0EFF               	movlw	255
 10078  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
 10079  00049A  0012               	return	
 10080  00049C                     __end_of_parseHexFileEntry:
 10081                           	opt stack 0
 10082                           tblptru	equ	0xFF8
 10083                           tblptrh	equ	0xFF7
 10084                           tblptrl	equ	0xFF6
 10085                           tablat	equ	0xFF5
 10086                           prodh	equ	0xFF4
 10087                           prodl	equ	0xFF3
 10088                           intcon	equ	0xFF2
 10089                           intcon2	equ	0xFF1
 10090                           intcon3	equ	0xFF0
 10091                           postinc0	equ	0xFEE
 10092                           wreg	equ	0xFE8
 10093                           indf1	equ	0xFE7
 10094                           postdec1	equ	0xFE5
 10095                           plusw1	equ	0xFE3
 10096                           fsr1h	equ	0xFE2
 10097                           fsr1l	equ	0xFE1
 10098                           indf2	equ	0xFDF
 10099                           postinc2	equ	0xFDE
 10100                           postdec2	equ	0xFDD
 10101                           plusw2	equ	0xFDB
 10102                           fsr2h	equ	0xFDA
 10103                           fsr2l	equ	0xFD9
 10104                           status	equ	0xFD8
 10105                           
 10106 ;; *************** function _hexCharsToUint8 *****************
 10107 ;; Defined at:
 10108 ;;		line 42 in file "hex.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;  c1              1    wreg     unsigned char 
 10111 ;;  c2              1    2[COMRAM] unsigned char 
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;  c1              1    4[COMRAM] unsigned char 
 10114 ;;  retVal          1    5[COMRAM] unsigned char 
 10115 ;; Return value:  Size  Location     Type
 10116 ;;                  1    wreg      unsigned char 
 10117 ;; Registers used:
 10118 ;;		wreg, status,2, status,0, cstack
 10119 ;; Tracked objects:
 10120 ;;		On entry : 0/0
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10124 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10127 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10128 ;;Total ram usage:        4 bytes
 10129 ;; Hardware stack levels used:    1
 10130 ;; Hardware stack levels required when called:    1
 10131 ;; This function calls:
 10132 ;;		_hexCharToUint8
 10133 ;; This function is called by:
 10134 ;;		_parseHexFileEntry
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           	psect	text37
 10139  007FBA                     __ptext37:
 10140                           	opt stack 0
 10141  007FBA                     _hexCharsToUint8:
 10142                           	opt stack 26
 10143                           
 10144                           ;incstack = 0
 10145                           ;hexCharsToUint8@c1 stored from wreg
 10146  007FBA  6E05               	movwf	hexCharsToUint8@c1,c
 10147                           
 10148                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
 10149  007FBC  5005               	movf	hexCharsToUint8@c1,w,c
 10150  007FBE  EC9B  F03E         	call	_hexCharToUint8
 10151  007FC2  6E04               	movwf	??_hexCharsToUint8& (0+255),c
 10152  007FC4  3804               	swapf	??_hexCharsToUint8,w,c
 10153  007FC6  0BF0               	andlw	240
 10154  007FC8  6E06               	movwf	hexCharsToUint8@retVal,c
 10155                           
 10156                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
 10157  007FCA  5003               	movf	hexCharsToUint8@c2,w,c
 10158  007FCC  EC9B  F03E         	call	_hexCharToUint8
 10159  007FD0  1206               	iorwf	hexCharsToUint8@retVal,f,c
 10160                           
 10161                           ;hex.c: 46: return retVal;
 10162  007FD2  5006               	movf	hexCharsToUint8@retVal,w,c
 10163  007FD4  0012               	return	
 10164  007FD6                     __end_of_hexCharsToUint8:
 10165                           	opt stack 0
 10166                           tblptru	equ	0xFF8
 10167                           tblptrh	equ	0xFF7
 10168                           tblptrl	equ	0xFF6
 10169                           tablat	equ	0xFF5
 10170                           prodh	equ	0xFF4
 10171                           prodl	equ	0xFF3
 10172                           intcon	equ	0xFF2
 10173                           intcon2	equ	0xFF1
 10174                           intcon3	equ	0xFF0
 10175                           postinc0	equ	0xFEE
 10176                           wreg	equ	0xFE8
 10177                           indf1	equ	0xFE7
 10178                           postdec1	equ	0xFE5
 10179                           plusw1	equ	0xFE3
 10180                           fsr1h	equ	0xFE2
 10181                           fsr1l	equ	0xFE1
 10182                           indf2	equ	0xFDF
 10183                           postinc2	equ	0xFDE
 10184                           postdec2	equ	0xFDD
 10185                           plusw2	equ	0xFDB
 10186                           fsr2h	equ	0xFDA
 10187                           fsr2l	equ	0xFD9
 10188                           status	equ	0xFD8
 10189                           
 10190 ;; *************** function _hexCharsToUint16 *****************
 10191 ;; Defined at:
 10192 ;;		line 49 in file "hex.c"
 10193 ;; Parameters:    Size  Location     Type
 10194 ;;  c1              1    wreg     unsigned char 
 10195 ;;  c2              1    2[COMRAM] unsigned char 
 10196 ;;  c3              1    3[COMRAM] unsigned char 
 10197 ;;  c4              1    4[COMRAM] unsigned char 
 10198 ;; Auto vars:     Size  Location     Type
 10199 ;;  c1              1    8[COMRAM] unsigned char 
 10200 ;;  retVal          2    9[COMRAM] unsigned int 
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  2    2[COMRAM] unsigned int 
 10203 ;; Registers used:
 10204 ;;		wreg, status,2, status,0, cstack
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10210 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10211 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10212 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10213 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10214 ;;Total ram usage:        9 bytes
 10215 ;; Hardware stack levels used:    1
 10216 ;; Hardware stack levels required when called:    1
 10217 ;; This function calls:
 10218 ;;		_hexCharToUint8
 10219 ;; This function is called by:
 10220 ;;		_parseHexFileEntry
 10221 ;; This function uses a non-reentrant model
 10222 ;;
 10223                           
 10224                           	psect	text38
 10225  006AB4                     __ptext38:
 10226                           	opt stack 0
 10227  006AB4                     _hexCharsToUint16:
 10228                           	opt stack 26
 10229                           
 10230                           ;incstack = 0
 10231                           ;hexCharsToUint16@c1 stored from wreg
 10232  006AB4  6E09               	movwf	hexCharsToUint16@c1,c
 10233                           
 10234                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
 10235  006AB6  5009               	movf	hexCharsToUint16@c1,w,c
 10236  006AB8  EC9B  F03E         	call	_hexCharToUint8
 10237  006ABC  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 10238  006ABE  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 10239  006AC0  0E0C               	movlw	12
 10240  006AC2                     u9645:
 10241  006AC2  90D8               	bcf	status,0,c
 10242  006AC4  3606               	rlcf	??_hexCharsToUint16,f,c
 10243  006AC6  3607               	rlcf	??_hexCharsToUint16+1,f,c
 10244  006AC8  2EE8               	decfsz	wreg,f,c
 10245  006ACA  D7FB               	goto	u9645
 10246  006ACC  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
 10247  006AD0  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
 10248                           
 10249                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
 10250  006AD4  5003               	movf	hexCharsToUint16@c2,w,c
 10251  006AD6  EC9B  F03E         	call	_hexCharToUint8
 10252  006ADA  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 10253  006ADC  5006               	movf	??_hexCharsToUint16,w,c
 10254  006ADE  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
 10255  006AE0  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 10256  006AE2  5007               	movf	??_hexCharsToUint16+1,w,c
 10257  006AE4  120A               	iorwf	hexCharsToUint16@retVal,f,c
 10258  006AE6  5008               	movf	??_hexCharsToUint16+2,w,c
 10259  006AE8  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 10260                           
 10261                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
 10262  006AEA  5004               	movf	hexCharsToUint16@c3,w,c
 10263  006AEC  EC9B  F03E         	call	_hexCharToUint8
 10264  006AF0  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 10265  006AF2  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 10266  006AF4  3A06               	swapf	??_hexCharsToUint16,f,c
 10267  006AF6  3A07               	swapf	??_hexCharsToUint16+1,f,c
 10268  006AF8  0EF0               	movlw	240
 10269  006AFA  1607               	andwf	??_hexCharsToUint16+1,f,c
 10270  006AFC  5006               	movf	??_hexCharsToUint16,w,c
 10271  006AFE  0B0F               	andlw	15
 10272  006B00  1207               	iorwf	??_hexCharsToUint16+1,f,c
 10273  006B02  0EF0               	movlw	240
 10274  006B04  1606               	andwf	??_hexCharsToUint16,f,c
 10275  006B06  5006               	movf	??_hexCharsToUint16,w,c
 10276  006B08  120A               	iorwf	hexCharsToUint16@retVal,f,c
 10277  006B0A  5007               	movf	??_hexCharsToUint16+1,w,c
 10278  006B0C  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 10279                           
 10280                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
 10281  006B0E  5005               	movf	hexCharsToUint16@c4,w,c
 10282  006B10  EC9B  F03E         	call	_hexCharToUint8
 10283  006B14  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 10284  006B16  5006               	movf	??_hexCharsToUint16,w,c
 10285  006B18  120A               	iorwf	hexCharsToUint16@retVal,f,c
 10286                           
 10287                           ;hex.c: 55: return retVal;
 10288  006B1A  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
 10289  006B1E  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
 10290  006B22  0012               	return	
 10291  006B24                     __end_of_hexCharsToUint16:
 10292                           	opt stack 0
 10293                           tblptru	equ	0xFF8
 10294                           tblptrh	equ	0xFF7
 10295                           tblptrl	equ	0xFF6
 10296                           tablat	equ	0xFF5
 10297                           prodh	equ	0xFF4
 10298                           prodl	equ	0xFF3
 10299                           intcon	equ	0xFF2
 10300                           intcon2	equ	0xFF1
 10301                           intcon3	equ	0xFF0
 10302                           postinc0	equ	0xFEE
 10303                           wreg	equ	0xFE8
 10304                           indf1	equ	0xFE7
 10305                           postdec1	equ	0xFE5
 10306                           plusw1	equ	0xFE3
 10307                           fsr1h	equ	0xFE2
 10308                           fsr1l	equ	0xFE1
 10309                           indf2	equ	0xFDF
 10310                           postinc2	equ	0xFDE
 10311                           postdec2	equ	0xFDD
 10312                           plusw2	equ	0xFDB
 10313                           fsr2h	equ	0xFDA
 10314                           fsr2l	equ	0xFD9
 10315                           status	equ	0xFD8
 10316                           
 10317 ;; *************** function _hexCharToUint8 *****************
 10318 ;; Defined at:
 10319 ;;		line 11 in file "hex.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;  c               1    wreg     unsigned char 
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;  c               1    0[COMRAM] unsigned char 
 10324 ;;  ascii           1    1[COMRAM] unsigned char 
 10325 ;; Return value:  Size  Location     Type
 10326 ;;                  1    wreg      unsigned char 
 10327 ;; Registers used:
 10328 ;;		wreg, status,2, status,0
 10329 ;; Tracked objects:
 10330 ;;		On entry : 0/0
 10331 ;;		On exit  : 0/0
 10332 ;;		Unchanged: 0/0
 10333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10338 ;;Total ram usage:        2 bytes
 10339 ;; Hardware stack levels used:    1
 10340 ;; This function calls:
 10341 ;;		Nothing
 10342 ;; This function is called by:
 10343 ;;		_hexCharsToUint8
 10344 ;;		_hexCharsToUint16
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           	psect	text39
 10349  007D36                     __ptext39:
 10350                           	opt stack 0
 10351  007D36                     _hexCharToUint8:
 10352                           	opt stack 26
 10353                           
 10354                           ;incstack = 0
 10355                           ;hexCharToUint8@c stored from wreg
 10356  007D36  6E01               	movwf	hexCharToUint8@c,c
 10357                           
 10358                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
 10359  007D38  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
 10360                           
 10361                           ;hex.c: 16: if (ascii >= 97)
 10362  007D3C  0E60               	movlw	96
 10363  007D3E  6402               	cpfsgt	hexCharToUint8@ascii,c
 10364  007D40  D002               	goto	l2204
 10365                           
 10366                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
 10367  007D42  0E57               	movlw	87
 10368  007D44  D006               	goto	L3
 10369  007D46                     l2204:
 10370                           
 10371                           ;hex.c: 21: else if (ascii >= 65)
 10372  007D46  0E40               	movlw	64
 10373  007D48  6402               	cpfsgt	hexCharToUint8@ascii,c
 10374  007D4A  D002               	goto	l2206
 10375                           
 10376                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
 10377  007D4C  0E37               	movlw	55
 10378  007D4E  D001               	goto	L3
 10379  007D50                     l2206:
 10380                           
 10381                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
 10382  007D50  0E30               	movlw	48
 10383  007D52                     L3:
 10384  007D52  5E02               	subwf	hexCharToUint8@ascii,f,c
 10385                           
 10386                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
 10387  007D54  0E0F               	movlw	15
 10388  007D56  6402               	cpfsgt	hexCharToUint8@ascii,c
 10389  007D58  D002               	goto	l2208
 10390                           
 10391                           ;hex.c: 32: {;hex.c: 33: return 0;
 10392  007D5A  0E00               	movlw	0
 10393                           
 10394                           ;hex.c: 34: }
 10395  007D5C  0012               	return	
 10396  007D5E                     l2208:
 10397                           
 10398                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
 10399  007D5E  5002               	movf	hexCharToUint8@ascii,w,c
 10400  007D60  0012               	return	
 10401  007D62                     __end_of_hexCharToUint8:
 10402                           	opt stack 0
 10403                           tblptru	equ	0xFF8
 10404                           tblptrh	equ	0xFF7
 10405                           tblptrl	equ	0xFF6
 10406                           tablat	equ	0xFF5
 10407                           prodh	equ	0xFF4
 10408                           prodl	equ	0xFF3
 10409                           intcon	equ	0xFF2
 10410                           intcon2	equ	0xFF1
 10411                           intcon3	equ	0xFF0
 10412                           postinc0	equ	0xFEE
 10413                           wreg	equ	0xFE8
 10414                           indf1	equ	0xFE7
 10415                           postdec1	equ	0xFE5
 10416                           plusw1	equ	0xFE3
 10417                           fsr1h	equ	0xFE2
 10418                           fsr1l	equ	0xFE1
 10419                           indf2	equ	0xFDF
 10420                           postinc2	equ	0xFDE
 10421                           postdec2	equ	0xFDD
 10422                           plusw2	equ	0xFDB
 10423                           fsr2h	equ	0xFDA
 10424                           fsr2l	equ	0xFD9
 10425                           status	equ	0xFD8
 10426                           
 10427 ;; *************** function _internalFlash_writePage *****************
 10428 ;; Defined at:
 10429 ;;		line 63 in file "internal_flash.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;  page            2    2[COMRAM] unsigned int 
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;  address         4    4[COMRAM] unsigned long 
 10434 ;;  cntr            2    8[COMRAM] unsigned int 
 10435 ;;  byte_cntr       1   11[COMRAM] unsigned char 
 10436 ;;  block_cntr      1   10[COMRAM] unsigned char 
 10437 ;;  i               1    0        unsigned char 
 10438 ;;  gie             1    0        unsigned char 
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  1    wreg      void 
 10441 ;; Registers used:
 10442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10443 ;; Tracked objects:
 10444 ;;		On entry : 0/0
 10445 ;;		On exit  : 0/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10449 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10451 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10452 ;;Total ram usage:       10 bytes
 10453 ;; Hardware stack levels used:    1
 10454 ;; Hardware stack levels required when called:    1
 10455 ;; This function calls:
 10456 ;;		__internalFlash_unlockAndActivate
 10457 ;; This function is called by:
 10458 ;;		__bootloader_program
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           	psect	text40
 10463  0066FC                     __ptext40:
 10464                           	opt stack 0
 10465  0066FC                     _internalFlash_writePage:
 10466                           	opt stack 27
 10467                           
 10468                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
 10469                           
 10470                           ;incstack = 0
 10471  0066FC  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
 10472  006700  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
 10473  006704  6A07               	clrf	internalFlash_writePage@address+2,c
 10474  006706  6A08               	clrf	internalFlash_writePage@address+3,c
 10475                           
 10476                           ;internal_flash.c: 74: address <<= 10;
 10477  006708  0E0A               	movlw	10
 10478  00670A                     u10445:
 10479  00670A  90D8               	bcf	status,0,c
 10480  00670C  3605               	rlcf	internalFlash_writePage@address,f,c
 10481  00670E  3606               	rlcf	internalFlash_writePage@address+1,f,c
 10482  006710  3607               	rlcf	internalFlash_writePage@address+2,f,c
 10483  006712  3608               	rlcf	internalFlash_writePage@address+3,f,c
 10484  006714  2EE8               	decfsz	wreg,f,c
 10485  006716  D7F9               	goto	u10445
 10486                           
 10487                           ;internal_flash.c: 76: TBLPTR = address;
 10488  006718  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
 10489  00671C  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
 10490  006720  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
 10491                           
 10492                           ;internal_flash.c: 79: cntr = 0;
 10493  006724  0E00               	movlw	0
 10494  006726  6E0A               	movwf	internalFlash_writePage@cntr+1,c
 10495  006728  0E00               	movlw	0
 10496  00672A  6E09               	movwf	internalFlash_writePage@cntr,c
 10497                           
 10498                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
 10499  00672C  0E00               	movlw	0
 10500  00672E  6E0B               	movwf	internalFlash_writePage@block_cntr,c
 10501  006730                     l13469:
 10502  006730  0E0F               	movlw	15
 10503  006732  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
 10504  006734  D001               	goto	l2456
 10505  006736  0012               	return	
 10506  006738                     l2456:
 10507                           
 10508                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
 10509  006738  0E00               	movlw	0
 10510  00673A  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
 10511  00673C                     l13475:
 10512  00673C  0E3F               	movlw	63
 10513  00673E  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
 10514  006740  D001               	goto	l2458
 10515  006742  D00D               	goto	u10470
 10516  006744                     l2458:
 10517                           
 10518                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
 10519  006744  0E00               	movlw	low _pageBuffer
 10520  006746  2409               	addwf	internalFlash_writePage@cntr,w,c
 10521  006748  6ED9               	movwf	fsr2l,c
 10522  00674A  0E08               	movlw	high _pageBuffer
 10523  00674C  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
 10524  00674E  6EDA               	movwf	fsr2h,c
 10525  006750  50DF               	movf	indf2,w,c
 10526  006752  6EF5               	movwf	tablat,c	;volatile
 10527  006754  000D               	tblwt		*+	;# 
 10528                           
 10529                           ;internal_flash.c: 91: ++cntr;
 10530  006756  4A09               	infsnz	internalFlash_writePage@cntr,f,c
 10531  006758  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
 10532  00675A  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
 10533  00675C  D7EF               	goto	l13475
 10534  00675E                     u10470:
 10535  00675E  000A               	tblrd		*-	;# 
 10536                           
 10537                           ;internal_flash.c: 98: EECON1 = 0x84;
 10538  006760  0E84               	movlw	132
 10539  006762  6EA6               	movwf	4006,c	;volsfr
 10540                           
 10541                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 10542  006764  0EB5               	movlw	181
 10543  006766  EC06  F03F         	call	__internalFlash_unlockAndActivate
 10544                           
 10545                           ;internal_flash.c: 100: TBLPTR++;
 10546  00676A  0E01               	movlw	1
 10547  00676C  26F6               	addwf	tblptrl,f,c	;volatile
 10548  00676E  0E00               	movlw	0
 10549  006770  22F7               	addwfc	tblptrh,f,c	;volatile
 10550  006772  0E00               	movlw	0
 10551  006774  22F8               	addwfc	tblptru,f,c	;volatile
 10552  006776  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
 10553  006778  D7DB               	goto	l13469
 10554  00677A                     __end_of_internalFlash_writePage:
 10555                           	opt stack 0
 10556                           tblptru	equ	0xFF8
 10557                           tblptrh	equ	0xFF7
 10558                           tblptrl	equ	0xFF6
 10559                           tablat	equ	0xFF5
 10560                           prodh	equ	0xFF4
 10561                           prodl	equ	0xFF3
 10562                           intcon	equ	0xFF2
 10563                           intcon2	equ	0xFF1
 10564                           intcon3	equ	0xFF0
 10565                           postinc0	equ	0xFEE
 10566                           wreg	equ	0xFE8
 10567                           indf1	equ	0xFE7
 10568                           postdec1	equ	0xFE5
 10569                           plusw1	equ	0xFE3
 10570                           fsr1h	equ	0xFE2
 10571                           fsr1l	equ	0xFE1
 10572                           indf2	equ	0xFDF
 10573                           postinc2	equ	0xFDE
 10574                           postdec2	equ	0xFDD
 10575                           plusw2	equ	0xFDB
 10576                           fsr2h	equ	0xFDA
 10577                           fsr2l	equ	0xFD9
 10578                           status	equ	0xFD8
 10579                           
 10580 ;; *************** function _internalFlash_readPage *****************
 10581 ;; Defined at:
 10582 ;;		line 37 in file "internal_flash.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;  page            2   21[COMRAM] unsigned int 
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;  address         4   23[COMRAM] unsigned long 
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  1    wreg      void 
 10589 ;; Registers used:
 10590 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10597 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10599 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10600 ;;Total ram usage:        6 bytes
 10601 ;; Hardware stack levels used:    1
 10602 ;; Hardware stack levels required when called:    2
 10603 ;; This function calls:
 10604 ;;		_internalFlash_addressFromPage
 10605 ;;		_internalFlash_read
 10606 ;; This function is called by:
 10607 ;;		__bootloader_program
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           
 10611                           	psect	text41
 10612  007846                     __ptext41:
 10613                           	opt stack 0
 10614  007846                     _internalFlash_readPage:
 10615                           	opt stack 26
 10616                           
 10617                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
 10618                           
 10619                           ;incstack = 0
 10620  007846  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
 10621  00784A  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
 10622  00784E  EC6E  F03E         	call	_internalFlash_addressFromPage	;wreg free
 10623  007852  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
 10624  007856  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
 10625  00785A  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
 10626  00785E  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
 10627                           
 10628                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
 10629  007862  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
 10630  007866  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
 10631  00786A  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
 10632  00786E  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
 10633  007872  0E04               	movlw	4
 10634  007874  6E13               	movwf	internalFlash_read@data_length+1,c
 10635  007876  0E00               	movlw	0
 10636  007878  6E12               	movwf	internalFlash_read@data_length,c
 10637  00787A  0E00               	movlw	low _pageBuffer
 10638  00787C  6E14               	movwf	internalFlash_read@buffer,c
 10639  00787E  0E08               	movlw	high _pageBuffer
 10640  007880  6E15               	movwf	internalFlash_read@buffer+1,c
 10641  007882  EC57  F03D         	call	_internalFlash_read	;wreg free
 10642  007886  0012               	return		;funcret
 10643  007888                     __end_of_internalFlash_readPage:
 10644                           	opt stack 0
 10645                           tblptru	equ	0xFF8
 10646                           tblptrh	equ	0xFF7
 10647                           tblptrl	equ	0xFF6
 10648                           tablat	equ	0xFF5
 10649                           prodh	equ	0xFF4
 10650                           prodl	equ	0xFF3
 10651                           intcon	equ	0xFF2
 10652                           intcon2	equ	0xFF1
 10653                           intcon3	equ	0xFF0
 10654                           postinc0	equ	0xFEE
 10655                           wreg	equ	0xFE8
 10656                           indf1	equ	0xFE7
 10657                           postdec1	equ	0xFE5
 10658                           plusw1	equ	0xFE3
 10659                           fsr1h	equ	0xFE2
 10660                           fsr1l	equ	0xFE1
 10661                           indf2	equ	0xFDF
 10662                           postinc2	equ	0xFDE
 10663                           postdec2	equ	0xFDD
 10664                           plusw2	equ	0xFDB
 10665                           fsr2h	equ	0xFDA
 10666                           fsr2l	equ	0xFD9
 10667                           status	equ	0xFD8
 10668                           
 10669 ;; *************** function _internalFlash_read *****************
 10670 ;; Defined at:
 10671 ;;		line 144 in file "internal_flash.c"
 10672 ;; Parameters:    Size  Location     Type
 10673 ;;  address         4   13[COMRAM] unsigned long 
 10674 ;;  data_length     2   17[COMRAM] unsigned int 
 10675 ;;  buffer          2   19[COMRAM] PTR unsigned char 
 10676 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
 10677 ;; Auto vars:     Size  Location     Type
 10678 ;;		None
 10679 ;; Return value:  Size  Location     Type
 10680 ;;                  1    wreg      unsigned char 
 10681 ;; Registers used:
 10682 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10683 ;; Tracked objects:
 10684 ;;		On entry : 0/0
 10685 ;;		On exit  : 0/0
 10686 ;;		Unchanged: 0/0
 10687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10688 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10691 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10692 ;;Total ram usage:        8 bytes
 10693 ;; Hardware stack levels used:    1
 10694 ;; Hardware stack levels required when called:    1
 10695 ;; This function calls:
 10696 ;;		_memcpy
 10697 ;; This function is called by:
 10698 ;;		_internalFlash_readPage
 10699 ;;		__bootloader_verify_program_memory
 10700 ;; This function uses a non-reentrant model
 10701 ;;
 10702                           
 10703                           	psect	text42
 10704  007AAE                     __ptext42:
 10705                           	opt stack 0
 10706  007AAE                     _internalFlash_read:
 10707                           	opt stack 26
 10708                           
 10709                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
 10710                           
 10711                           ;incstack = 0
 10712  007AAE  5011               	movf	internalFlash_read@address+3,w,c
 10713  007AB0  E118               	bnz	l2472
 10714  007AB2  280E               	incf	internalFlash_read@address,w,c
 10715  007AB4  0EFF               	movlw	255
 10716  007AB6  580F               	subwfb	internalFlash_read@address+1,w,c
 10717  007AB8  0E01               	movlw	1
 10718  007ABA  5810               	subwfb	internalFlash_read@address+2,w,c
 10719  007ABC  B0D8               	btfsc	status,0,c
 10720  007ABE  0012               	return	
 10721                           
 10722                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
 10723                           
 10724                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
 10725  007AC0  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
 10726  007AC4  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
 10727  007AC8  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
 10728  007ACC  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
 10729  007AD0  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
 10730  007AD4  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
 10731  007AD8  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
 10732  007ADC  EC3E  F037         	call	_memcpy	;wreg free
 10733  007AE0  0012               	return	
 10734  007AE2                     l2472:
 10735  007AE2  0012               	return		;funcret
 10736  007AE4                     __end_of_internalFlash_read:
 10737                           	opt stack 0
 10738                           tblptru	equ	0xFF8
 10739                           tblptrh	equ	0xFF7
 10740                           tblptrl	equ	0xFF6
 10741                           tablat	equ	0xFF5
 10742                           prodh	equ	0xFF4
 10743                           prodl	equ	0xFF3
 10744                           intcon	equ	0xFF2
 10745                           intcon2	equ	0xFF1
 10746                           intcon3	equ	0xFF0
 10747                           postinc0	equ	0xFEE
 10748                           wreg	equ	0xFE8
 10749                           indf1	equ	0xFE7
 10750                           postdec1	equ	0xFE5
 10751                           plusw1	equ	0xFE3
 10752                           fsr1h	equ	0xFE2
 10753                           fsr1l	equ	0xFE1
 10754                           indf2	equ	0xFDF
 10755                           postinc2	equ	0xFDE
 10756                           postdec2	equ	0xFDD
 10757                           plusw2	equ	0xFDB
 10758                           fsr2h	equ	0xFDA
 10759                           fsr2l	equ	0xFD9
 10760                           status	equ	0xFD8
 10761                           
 10762 ;; *************** function _internalFlash_pageFromAddress *****************
 10763 ;; Defined at:
 10764 ;;		line 308 in file "internal_flash.c"
 10765 ;; Parameters:    Size  Location     Type
 10766 ;;  address         4    0[COMRAM] unsigned long 
 10767 ;; Auto vars:     Size  Location     Type
 10768 ;;		None
 10769 ;; Return value:  Size  Location     Type
 10770 ;;                  2    0[COMRAM] unsigned int 
 10771 ;; Registers used:
 10772 ;;		wreg, status,2, status,0
 10773 ;; Tracked objects:
 10774 ;;		On entry : 0/0
 10775 ;;		On exit  : 0/0
 10776 ;;		Unchanged: 0/0
 10777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10781 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10782 ;;Total ram usage:        5 bytes
 10783 ;; Hardware stack levels used:    1
 10784 ;; This function calls:
 10785 ;;		Nothing
 10786 ;; This function is called by:
 10787 ;;		__bootloader_program
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           	psect	text43
 10792  007FD6                     __ptext43:
 10793                           	opt stack 0
 10794  007FD6                     _internalFlash_pageFromAddress:
 10795                           	opt stack 28
 10796                           
 10797                           ;internal_flash.c: 310: address >>= 10;
 10798                           
 10799                           ;incstack = 0
 10800  007FD6  0E0A               	movlw	10
 10801  007FD8  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
 10802  007FDA                     u10425:
 10803  007FDA  90D8               	bcf	status,0,c
 10804  007FDC  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
 10805  007FDE  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
 10806  007FE0  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
 10807  007FE2  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
 10808  007FE4  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
 10809  007FE6  D7F9               	goto	u10425
 10810                           
 10811                           ;internal_flash.c: 311: return (uint16_t) address;
 10812  007FE8  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
 10813  007FEC  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
 10814  007FF0  0012               	return	
 10815  007FF2                     __end_of_internalFlash_pageFromAddress:
 10816                           	opt stack 0
 10817                           tblptru	equ	0xFF8
 10818                           tblptrh	equ	0xFF7
 10819                           tblptrl	equ	0xFF6
 10820                           tablat	equ	0xFF5
 10821                           prodh	equ	0xFF4
 10822                           prodl	equ	0xFF3
 10823                           intcon	equ	0xFF2
 10824                           intcon2	equ	0xFF1
 10825                           intcon3	equ	0xFF0
 10826                           postinc0	equ	0xFEE
 10827                           wreg	equ	0xFE8
 10828                           indf1	equ	0xFE7
 10829                           postdec1	equ	0xFE5
 10830                           plusw1	equ	0xFE3
 10831                           fsr1h	equ	0xFE2
 10832                           fsr1l	equ	0xFE1
 10833                           indf2	equ	0xFDF
 10834                           postinc2	equ	0xFDE
 10835                           postdec2	equ	0xFDD
 10836                           plusw2	equ	0xFDB
 10837                           fsr2h	equ	0xFDA
 10838                           fsr2l	equ	0xFD9
 10839                           status	equ	0xFD8
 10840                           
 10841 ;; *************** function _internalFlash_getBuffer *****************
 10842 ;; Defined at:
 10843 ;;		line 32 in file "internal_flash.c"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;		None
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;		None
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  2    0[COMRAM] PTR unsigned char 
 10850 ;; Registers used:
 10851 ;;		wreg, status,2, status,0
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10861 ;;Total ram usage:        2 bytes
 10862 ;; Hardware stack levels used:    1
 10863 ;; This function calls:
 10864 ;;		Nothing
 10865 ;; This function is called by:
 10866 ;;		__bootloader_program
 10867 ;; This function uses a non-reentrant model
 10868 ;;
 10869                           
 10870                           	psect	text44
 10871  00815A                     __ptext44:
 10872                           	opt stack 0
 10873  00815A                     _internalFlash_getBuffer:
 10874                           	opt stack 28
 10875                           
 10876                           ;internal_flash.c: 34: return pageBuffer;
 10877                           
 10878                           ;incstack = 0
 10879  00815A  0E00               	movlw	low _pageBuffer
 10880  00815C  6E01               	movwf	?_internalFlash_getBuffer,c
 10881  00815E  0E08               	movlw	high _pageBuffer
 10882  008160  6E02               	movwf	?_internalFlash_getBuffer+1,c
 10883  008162  0012               	return	
 10884  008164                     __end_of_internalFlash_getBuffer:
 10885                           	opt stack 0
 10886                           tblptru	equ	0xFF8
 10887                           tblptrh	equ	0xFF7
 10888                           tblptrl	equ	0xFF6
 10889                           tablat	equ	0xFF5
 10890                           prodh	equ	0xFF4
 10891                           prodl	equ	0xFF3
 10892                           intcon	equ	0xFF2
 10893                           intcon2	equ	0xFF1
 10894                           intcon3	equ	0xFF0
 10895                           postinc0	equ	0xFEE
 10896                           wreg	equ	0xFE8
 10897                           indf1	equ	0xFE7
 10898                           postdec1	equ	0xFE5
 10899                           plusw1	equ	0xFE3
 10900                           fsr1h	equ	0xFE2
 10901                           fsr1l	equ	0xFE1
 10902                           indf2	equ	0xFDF
 10903                           postinc2	equ	0xFDE
 10904                           postdec2	equ	0xFDD
 10905                           plusw2	equ	0xFDB
 10906                           fsr2h	equ	0xFDA
 10907                           fsr2l	equ	0xFD9
 10908                           status	equ	0xFD8
 10909                           
 10910 ;; *************** function _internalFlash_erasePage *****************
 10911 ;; Defined at:
 10912 ;;		line 44 in file "internal_flash.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  page            2    2[COMRAM] unsigned int 
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;  address         4    4[COMRAM] unsigned long 
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  1    wreg      void 
 10919 ;; Registers used:
 10920 ;;		wreg, status,2, status,0, cstack
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10927 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10929 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10930 ;;Total ram usage:        6 bytes
 10931 ;; Hardware stack levels used:    1
 10932 ;; Hardware stack levels required when called:    1
 10933 ;; This function calls:
 10934 ;;		__internalFlash_unlockAndActivate
 10935 ;; This function is called by:
 10936 ;;		__bootloader_program
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text45
 10941  007B18                     __ptext45:
 10942                           	opt stack 0
 10943  007B18                     _internalFlash_erasePage:
 10944                           	opt stack 27
 10945                           
 10946                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
 10947                           
 10948                           ;incstack = 0
 10949  007B18  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
 10950  007B1C  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
 10951  007B20  6A07               	clrf	internalFlash_erasePage@address+2,c
 10952  007B22  6A08               	clrf	internalFlash_erasePage@address+3,c
 10953                           
 10954                           ;internal_flash.c: 50: address <<= 10;
 10955  007B24  0E0A               	movlw	10
 10956  007B26                     u10435:
 10957  007B26  90D8               	bcf	status,0,c
 10958  007B28  3605               	rlcf	internalFlash_erasePage@address,f,c
 10959  007B2A  3606               	rlcf	internalFlash_erasePage@address+1,f,c
 10960  007B2C  3607               	rlcf	internalFlash_erasePage@address+2,f,c
 10961  007B2E  3608               	rlcf	internalFlash_erasePage@address+3,f,c
 10962  007B30  2EE8               	decfsz	wreg,f,c
 10963  007B32  D7F9               	goto	u10435
 10964                           
 10965                           ;internal_flash.c: 51: TBLPTR = address;
 10966  007B34  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
 10967  007B38  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
 10968  007B3C  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
 10969                           
 10970                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
 10971  007B40  84A6               	bsf	4006,2,c	;volsfr
 10972                           
 10973                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
 10974  007B42  88A6               	bsf	4006,4,c	;volsfr
 10975                           
 10976                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 10977  007B44  0EB5               	movlw	181
 10978  007B46  EC06  F03F         	call	__internalFlash_unlockAndActivate
 10979  007B4A  0012               	return		;funcret
 10980  007B4C                     __end_of_internalFlash_erasePage:
 10981                           	opt stack 0
 10982                           tblptru	equ	0xFF8
 10983                           tblptrh	equ	0xFF7
 10984                           tblptrl	equ	0xFF6
 10985                           tablat	equ	0xFF5
 10986                           prodh	equ	0xFF4
 10987                           prodl	equ	0xFF3
 10988                           intcon	equ	0xFF2
 10989                           intcon2	equ	0xFF1
 10990                           intcon3	equ	0xFF0
 10991                           postinc0	equ	0xFEE
 10992                           wreg	equ	0xFE8
 10993                           indf1	equ	0xFE7
 10994                           postdec1	equ	0xFE5
 10995                           plusw1	equ	0xFE3
 10996                           fsr1h	equ	0xFE2
 10997                           fsr1l	equ	0xFE1
 10998                           indf2	equ	0xFDF
 10999                           postinc2	equ	0xFDE
 11000                           postdec2	equ	0xFDD
 11001                           plusw2	equ	0xFDB
 11002                           fsr2h	equ	0xFDA
 11003                           fsr2l	equ	0xFD9
 11004                           status	equ	0xFD8
 11005                           
 11006 ;; *************** function __internalFlash_unlockAndActivate *****************
 11007 ;; Defined at:
 11008 ;;		line 106 in file "internal_flash.c"
 11009 ;; Parameters:    Size  Location     Type
 11010 ;;  UnlockKey       1    wreg     unsigned char 
 11011 ;; Auto vars:     Size  Location     Type
 11012 ;;  UnlockKey       1    0[COMRAM] unsigned char 
 11013 ;;  InterruptEna    1    1[COMRAM] unsigned char 
 11014 ;; Return value:  Size  Location     Type
 11015 ;;                  1    wreg      void 
 11016 ;; Registers used:
 11017 ;;		wreg, status,2, status,0
 11018 ;; Tracked objects:
 11019 ;;		On entry : 0/0
 11020 ;;		On exit  : 0/0
 11021 ;;		Unchanged: 0/0
 11022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11024 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11027 ;;Total ram usage:        2 bytes
 11028 ;; Hardware stack levels used:    1
 11029 ;; This function calls:
 11030 ;;		Nothing
 11031 ;; This function is called by:
 11032 ;;		_internalFlash_erasePage
 11033 ;;		_internalFlash_writePage
 11034 ;;		_EraseBlock
 11035 ;; This function uses a non-reentrant model
 11036 ;;
 11037                           
 11038                           	psect	text46
 11039  007E0C                     __ptext46:
 11040                           	opt stack 0
 11041  007E0C                     __internalFlash_unlockAndActivate:
 11042                           	opt stack 27
 11043                           
 11044                           ;incstack = 0
 11045                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
 11046  007E0C  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
 11047                           
 11048                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
 11049  007E0E  0EB5               	movlw	181
 11050  007E10  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
 11051  007E12  B4D8               	btfsc	status,2,c
 11052  007E14  D002               	goto	l2463
 11053                           
 11054                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
 11055  007E16  94A6               	bcf	4006,2,c	;volsfr
 11056                           
 11057                           ;internal_flash.c: 118: return;
 11058  007E18  0012               	return	
 11059  007E1A                     l2463:
 11060                           
 11061                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
 11062  007E1A  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
 11063                           
 11064                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
 11065  007E1E  9EF2               	bcf	intcon,7,c	;volatile
 11066                           
 11067                           ;internal_flash.c: 123: EECON2 = 0x55;
 11068  007E20  0E55               	movlw	85
 11069  007E22  6EA7               	movwf	4007,c	;volsfr
 11070                           
 11071                           ;internal_flash.c: 124: EECON2 = 0xAA;
 11072  007E24  0EAA               	movlw	170
 11073  007E26  6EA7               	movwf	4007,c	;volsfr
 11074                           
 11075                           ;internal_flash.c: 125: EECON1bits.WR = 1;
 11076  007E28  82A6               	bsf	4006,1,c	;volsfr
 11077                           
 11078                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
 11079  007E2A  94A6               	bcf	4006,2,c	;volsfr
 11080                           
 11081                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
 11082  007E2C  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
 11083  007E2E  0012               	return	
 11084                           
 11085                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
 11086  007E30  8EF2               	bsf	intcon,7,c	;volatile
 11087  007E32  0012               	return	
 11088  007E34                     __end_of__internalFlash_unlockAndActivate:
 11089                           	opt stack 0
 11090                           tblptru	equ	0xFF8
 11091                           tblptrh	equ	0xFF7
 11092                           tblptrl	equ	0xFF6
 11093                           tablat	equ	0xFF5
 11094                           prodh	equ	0xFF4
 11095                           prodl	equ	0xFF3
 11096                           intcon	equ	0xFF2
 11097                           intcon2	equ	0xFF1
 11098                           intcon3	equ	0xFF0
 11099                           postinc0	equ	0xFEE
 11100                           wreg	equ	0xFE8
 11101                           indf1	equ	0xFE7
 11102                           postdec1	equ	0xFE5
 11103                           plusw1	equ	0xFE3
 11104                           fsr1h	equ	0xFE2
 11105                           fsr1l	equ	0xFE1
 11106                           indf2	equ	0xFDF
 11107                           postinc2	equ	0xFDE
 11108                           postdec2	equ	0xFDD
 11109                           plusw2	equ	0xFDB
 11110                           fsr2h	equ	0xFDA
 11111                           fsr2l	equ	0xFD9
 11112                           status	equ	0xFD8
 11113                           
 11114 ;; *************** function _internalFlash_addressWithinPage *****************
 11115 ;; Defined at:
 11116 ;;		line 322 in file "internal_flash.c"
 11117 ;; Parameters:    Size  Location     Type
 11118 ;;  address         4    8[COMRAM] unsigned long 
 11119 ;;  page            2   12[COMRAM] unsigned int 
 11120 ;; Auto vars:     Size  Location     Type
 11121 ;;  page_start_a    4   18[COMRAM] unsigned long 
 11122 ;; Return value:  Size  Location     Type
 11123 ;;                  2    8[COMRAM] unsigned int 
 11124 ;; Registers used:
 11125 ;;		wreg, status,2, status,0, cstack
 11126 ;; Tracked objects:
 11127 ;;		On entry : 0/0
 11128 ;;		On exit  : 0/0
 11129 ;;		Unchanged: 0/0
 11130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11131 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11132 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11133 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11134 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11135 ;;Total ram usage:       14 bytes
 11136 ;; Hardware stack levels used:    1
 11137 ;; Hardware stack levels required when called:    1
 11138 ;; This function calls:
 11139 ;;		_internalFlash_addressFromPage
 11140 ;; This function is called by:
 11141 ;;		__bootloader_program
 11142 ;; This function uses a non-reentrant model
 11143 ;;
 11144                           
 11145                           	psect	text47
 11146  006FA6                     __ptext47:
 11147                           	opt stack 0
 11148  006FA6                     _internalFlash_addressWithinPage:
 11149                           	opt stack 27
 11150                           
 11151                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
 11152                           
 11153                           ;incstack = 0
 11154  006FA6  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
 11155  006FAA  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
 11156  006FAE  EC6E  F03E         	call	_internalFlash_addressFromPage	;wreg free
 11157  006FB2  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
 11158  006FB6  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
 11159  006FBA  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
 11160  006FBE  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
 11161                           
 11162                           ;internal_flash.c: 326: address = address - page_start_address;
 11163  006FC2  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
 11164  006FC6  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
 11165  006FCA  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
 11166  006FCE  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
 11167  006FD2  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
 11168  006FD4  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
 11169  006FD6  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
 11170  006FD8  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
 11171  006FDA  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
 11172  006FDC  0E00               	movlw	0
 11173  006FDE  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
 11174  006FE0  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
 11175  006FE2  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
 11176  006FE4  5009               	movf	internalFlash_addressWithinPage@address,w,c
 11177  006FE6  240F               	addwf	??_internalFlash_addressWithinPage,w,c
 11178  006FE8  6E09               	movwf	internalFlash_addressWithinPage@address,c
 11179  006FEA  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
 11180  006FEC  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
 11181  006FEE  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 11182  006FF0  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
 11183  006FF2  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
 11184  006FF4  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 11185  006FF6  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
 11186  006FF8  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
 11187  006FFA  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 11188                           
 11189                           ;internal_flash.c: 327: return (uint16_t) address;
 11190  006FFC  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
 11191  007000  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
 11192  007004  0012               	return	
 11193  007006                     __end_of_internalFlash_addressWithinPage:
 11194                           	opt stack 0
 11195                           tblptru	equ	0xFF8
 11196                           tblptrh	equ	0xFF7
 11197                           tblptrl	equ	0xFF6
 11198                           tablat	equ	0xFF5
 11199                           prodh	equ	0xFF4
 11200                           prodl	equ	0xFF3
 11201                           intcon	equ	0xFF2
 11202                           intcon2	equ	0xFF1
 11203                           intcon3	equ	0xFF0
 11204                           postinc0	equ	0xFEE
 11205                           wreg	equ	0xFE8
 11206                           indf1	equ	0xFE7
 11207                           postdec1	equ	0xFE5
 11208                           plusw1	equ	0xFE3
 11209                           fsr1h	equ	0xFE2
 11210                           fsr1l	equ	0xFE1
 11211                           indf2	equ	0xFDF
 11212                           postinc2	equ	0xFDE
 11213                           postdec2	equ	0xFDD
 11214                           plusw2	equ	0xFDB
 11215                           fsr2h	equ	0xFDA
 11216                           fsr2l	equ	0xFD9
 11217                           status	equ	0xFD8
 11218                           
 11219 ;; *************** function _internalFlash_addressFromPage *****************
 11220 ;; Defined at:
 11221 ;;		line 314 in file "internal_flash.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  page            2    0[COMRAM] unsigned int 
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;  address         4    4[COMRAM] unsigned long 
 11226 ;; Return value:  Size  Location     Type
 11227 ;;                  4    0[COMRAM] unsigned long 
 11228 ;; Registers used:
 11229 ;;		wreg, status,2, status,0
 11230 ;; Tracked objects:
 11231 ;;		On entry : 0/0
 11232 ;;		On exit  : 0/0
 11233 ;;		Unchanged: 0/0
 11234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11236 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11238 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11239 ;;Total ram usage:        8 bytes
 11240 ;; Hardware stack levels used:    1
 11241 ;; This function calls:
 11242 ;;		Nothing
 11243 ;; This function is called by:
 11244 ;;		_internalFlash_readPage
 11245 ;;		_internalFlash_addressWithinPage
 11246 ;; This function uses a non-reentrant model
 11247 ;;
 11248                           
 11249                           	psect	text48
 11250  007CDC                     __ptext48:
 11251                           	opt stack 0
 11252  007CDC                     _internalFlash_addressFromPage:
 11253                           	opt stack 27
 11254                           
 11255                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
 11256                           
 11257                           ;incstack = 0
 11258  007CDC  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
 11259  007CE0  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
 11260  007CE4  6A07               	clrf	internalFlash_addressFromPage@address+2,c
 11261  007CE6  6A08               	clrf	internalFlash_addressFromPage@address+3,c
 11262                           
 11263                           ;internal_flash.c: 318: address <<= 10;
 11264  007CE8  0E0A               	movlw	10
 11265  007CEA                     u9665:
 11266  007CEA  90D8               	bcf	status,0,c
 11267  007CEC  3605               	rlcf	internalFlash_addressFromPage@address,f,c
 11268  007CEE  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
 11269  007CF0  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
 11270  007CF2  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
 11271  007CF4  2EE8               	decfsz	wreg,f,c
 11272  007CF6  D7F9               	goto	u9665
 11273                           
 11274                           ;internal_flash.c: 319: return address;
 11275  007CF8  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
 11276  007CFC  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
 11277  007D00  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
 11278  007D04  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
 11279  007D08  0012               	return	
 11280  007D0A                     __end_of_internalFlash_addressFromPage:
 11281                           	opt stack 0
 11282                           tblptru	equ	0xFF8
 11283                           tblptrh	equ	0xFF7
 11284                           tblptrl	equ	0xFF6
 11285                           tablat	equ	0xFF5
 11286                           prodh	equ	0xFF4
 11287                           prodl	equ	0xFF3
 11288                           intcon	equ	0xFF2
 11289                           intcon2	equ	0xFF1
 11290                           intcon3	equ	0xFF0
 11291                           postinc0	equ	0xFEE
 11292                           wreg	equ	0xFE8
 11293                           indf1	equ	0xFE7
 11294                           postdec1	equ	0xFE5
 11295                           plusw1	equ	0xFE3
 11296                           fsr1h	equ	0xFE2
 11297                           fsr1l	equ	0xFE1
 11298                           indf2	equ	0xFDF
 11299                           postinc2	equ	0xFDE
 11300                           postdec2	equ	0xFDD
 11301                           plusw2	equ	0xFDB
 11302                           fsr2h	equ	0xFDA
 11303                           fsr2l	equ	0xFD9
 11304                           status	equ	0xFD8
 11305                           
 11306 ;; *************** function __bootloader_check_address *****************
 11307 ;; Defined at:
 11308 ;;		line 103 in file "bootloader.c"
 11309 ;; Parameters:    Size  Location     Type
 11310 ;;  address         4    0[COMRAM] unsigned long 
 11311 ;;  dataLength      1    4[COMRAM] unsigned char 
 11312 ;; Auto vars:     Size  Location     Type
 11313 ;;  cntr            1   11[COMRAM] unsigned char 
 11314 ;;  byte_status     1   10[COMRAM] enum E6943
 11315 ;;  worst_case      1    9[COMRAM] enum E6943
 11316 ;; Return value:  Size  Location     Type
 11317 ;;                  1    wreg      enum E6943
 11318 ;; Registers used:
 11319 ;;		wreg, status,2, status,0
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11325 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11326 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11327 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11328 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11329 ;;Total ram usage:       12 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; This function calls:
 11332 ;;		Nothing
 11333 ;; This function is called by:
 11334 ;;		__bootloader_verify_file
 11335 ;;		__bootloader_program
 11336 ;; This function uses a non-reentrant model
 11337 ;;
 11338                           
 11339                           	psect	text49
 11340  004F46                     __ptext49:
 11341                           	opt stack 0
 11342  004F46                     __bootloader_check_address:
 11343                           	opt stack 28
 11344                           
 11345                           ;bootloader.c: 105: addressCheckResult_t byte_status;;bootloader.c: 106: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 107: uint8_t cntr;;bootloader.c: 109: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
 11346                           
 11347                           ;incstack = 0
 11348  004F46  0E00               	movlw	0
 11349  004F48  6E0A               	movwf	__bootloader_check_address@worst_case,c
 11350                           
 11351                           ;bootloader.c: 112: for(cntr=0; cntr<dataLength; ++cntr)
 11352  004F4A  0E00               	movlw	0
 11353  004F4C  6E0C               	movwf	__bootloader_check_address@cntr,c
 11354  004F4E  D062               	goto	l2322
 11355  004F50                     
 11356                           ;bootloader.c: 113: {;bootloader.c: 115: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
 11357  004F50  500C               	movf	__bootloader_check_address@cntr,w,c
 11358  004F52  2401               	addwf	__bootloader_check_address@address,w,c
 11359  004F54  6E06               	movwf	??__bootloader_check_address& (0+255),c
 11360  004F56  0E00               	movlw	0
 11361  004F58  2002               	addwfc	__bootloader_check_address@address+1,w,c
 11362  004F5A  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 11363  004F5C  0E00               	movlw	0
 11364  004F5E  2003               	addwfc	__bootloader_check_address@address+2,w,c
 11365  004F60  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 11366  004F62  0E00               	movlw	0
 11367  004F64  2004               	addwfc	__bootloader_check_address@address+3,w,c
 11368  004F66  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 11369  004F68  5009               	movf	??__bootloader_check_address+3,w,c
 11370  004F6A  1008               	iorwf	??__bootloader_check_address+2,w,c
 11371  004F6C  E104               	bnz	u10350
 11372  004F6E  0E90               	movlw	144
 11373  004F70  5C07               	subwf	??__bootloader_check_address+1,w,c
 11374  004F72  A0D8               	btfss	status,0,c
 11375  004F74  D018               	goto	l2324
 11376  004F76                     u10350:
 11377  004F76  500C               	movf	__bootloader_check_address@cntr,w,c
 11378  004F78  2401               	addwf	__bootloader_check_address@address,w,c
 11379  004F7A  6E06               	movwf	??__bootloader_check_address& (0+255),c
 11380  004F7C  0E00               	movlw	0
 11381  004F7E  2002               	addwfc	__bootloader_check_address@address+1,w,c
 11382  004F80  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 11383  004F82  0E00               	movlw	0
 11384  004F84  2003               	addwfc	__bootloader_check_address@address+2,w,c
 11385  004F86  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 11386  004F88  0E00               	movlw	0
 11387  004F8A  2004               	addwfc	__bootloader_check_address@address+3,w,c
 11388  004F8C  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 11389  004F8E  5009               	movf	??__bootloader_check_address+3,w,c
 11390  004F90  E10A               	bnz	l13401
 11391  004F92  0EF8               	movlw	248
 11392  004F94  5C06               	subwf	??__bootloader_check_address,w,c
 11393  004F96  0EFF               	movlw	255
 11394  004F98  5807               	subwfb	??__bootloader_check_address+1,w,c
 11395  004F9A  0E01               	movlw	1
 11396  004F9C  5808               	subwfb	??__bootloader_check_address+2,w,c
 11397  004F9E  B0D8               	btfsc	status,0,c
 11398  004FA0  D002               	goto	l2324
 11399                           
 11400                           ;bootloader.c: 116: {;bootloader.c: 117: byte_status = ADDRESS_CHECK_RESULT_OK;
 11401  004FA2  0E00               	movlw	0
 11402  004FA4  D029               	goto	L4
 11403  004FA6                     l2324:
 11404  004FA6                     l13401:
 11405                           
 11406                           ;bootloader.c: 121: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 11407  004FA6  500C               	movf	__bootloader_check_address@cntr,w,c
 11408  004FA8  2401               	addwf	__bootloader_check_address@address,w,c
 11409  004FAA  6E06               	movwf	??__bootloader_check_address& (0+255),c
 11410  004FAC  0E00               	movlw	0
 11411  004FAE  2002               	addwfc	__bootloader_check_address@address+1,w,c
 11412  004FB0  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 11413  004FB2  0E00               	movlw	0
 11414  004FB4  2003               	addwfc	__bootloader_check_address@address+2,w,c
 11415  004FB6  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 11416  004FB8  0E00               	movlw	0
 11417  004FBA  2004               	addwfc	__bootloader_check_address@address+3,w,c
 11418  004FBC  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 11419  004FBE  5009               	movf	??__bootloader_check_address+3,w,c
 11420  004FC0  E108               	bnz	u10370
 11421  004FC2  0EF8               	movlw	248
 11422  004FC4  5C06               	subwf	??__bootloader_check_address,w,c
 11423  004FC6  0EFF               	movlw	255
 11424  004FC8  5807               	subwfb	??__bootloader_check_address+1,w,c
 11425  004FCA  0E01               	movlw	1
 11426  004FCC  5808               	subwfb	??__bootloader_check_address+2,w,c
 11427  004FCE  A0D8               	btfss	status,0,c
 11428  004FD0  D015               	goto	l2326
 11429  004FD2                     u10370:
 11430  004FD2  500C               	movf	__bootloader_check_address@cntr,w,c
 11431  004FD4  2401               	addwf	__bootloader_check_address@address,w,c
 11432  004FD6  6E06               	movwf	??__bootloader_check_address& (0+255),c
 11433  004FD8  0E00               	movlw	0
 11434  004FDA  2002               	addwfc	__bootloader_check_address@address+1,w,c
 11435  004FDC  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 11436  004FDE  0E00               	movlw	0
 11437  004FE0  2003               	addwfc	__bootloader_check_address@address+2,w,c
 11438  004FE2  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 11439  004FE4  0E00               	movlw	0
 11440  004FE6  2004               	addwfc	__bootloader_check_address@address+3,w,c
 11441  004FE8  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 11442  004FEA  5009               	movf	??__bootloader_check_address+3,w,c
 11443  004FEC  E107               	bnz	l2326
 11444  004FEE  0E02               	movlw	2
 11445  004FF0  5C08               	subwf	??__bootloader_check_address+2,w,c
 11446  004FF2  B0D8               	btfsc	status,0,c
 11447  004FF4  D003               	goto	l2326
 11448                           
 11449                           ;bootloader.c: 122: {;bootloader.c: 123: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 11450  004FF6  0E01               	movlw	1
 11451  004FF8                     L4:
 11452  004FF8  6E0B               	movwf	__bootloader_check_address@byte_status,c
 11453                           
 11454                           ;bootloader.c: 124: }
 11455  004FFA  D001               	goto	l2327
 11456  004FFC                     l2326:
 11457                           
 11458                           ;bootloader.c: 125: else;bootloader.c: 126: {;bootloader.c: 127: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 11459  004FFC  680B               	setf	__bootloader_check_address@byte_status,c
 11460  004FFE                     l2327:
 11461                           
 11462                           ;bootloader.c: 128: };bootloader.c: 131: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 11463  004FFE  280B               	incf	__bootloader_check_address@byte_status,w,c
 11464  005000  A4D8               	btfss	status,2,c
 11465  005002  D002               	goto	l2328
 11466                           
 11467                           ;bootloader.c: 132: {;bootloader.c: 133: return ADDRESS_CHECK_RESULT_ERROR;
 11468  005004  0EFF               	movlw	255
 11469  005006  0012               	return	
 11470  005008                     l2328:
 11471                           
 11472                           ;bootloader.c: 134: };bootloader.c: 137: if(byte_status > worst_case)
 11473  005008  500B               	movf	__bootloader_check_address@byte_status,w,c
 11474  00500A  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 11475  00500C  A0D8               	btfss	status,0,c
 11476                           
 11477                           ;bootloader.c: 138: {;bootloader.c: 139: worst_case = byte_status;
 11478  00500E  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 11479  005012  2A0C               	incf	__bootloader_check_address@cntr,f,c
 11480  005014                     l2322:
 11481  005014  5005               	movf	__bootloader_check_address@dataLength,w,c
 11482  005016  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 11483  005018  A0D8               	btfss	status,0,c
 11484  00501A  D79A               	goto	l2323
 11485                           
 11486                           ;bootloader.c: 140: };bootloader.c: 141: };bootloader.c: 143: return worst_case;
 11487  00501C  500A               	movf	__bootloader_check_address@worst_case,w,c
 11488  00501E  0012               	return	
 11489  005020                     __end_of__bootloader_check_address:
 11490                           	opt stack 0
 11491                           tblptru	equ	0xFF8
 11492                           tblptrh	equ	0xFF7
 11493                           tblptrl	equ	0xFF6
 11494                           tablat	equ	0xFF5
 11495                           prodh	equ	0xFF4
 11496                           prodl	equ	0xFF3
 11497                           intcon	equ	0xFF2
 11498                           intcon2	equ	0xFF1
 11499                           intcon3	equ	0xFF0
 11500                           postinc0	equ	0xFEE
 11501                           wreg	equ	0xFE8
 11502                           indf1	equ	0xFE7
 11503                           postdec1	equ	0xFE5
 11504                           plusw1	equ	0xFE3
 11505                           fsr1h	equ	0xFE2
 11506                           fsr1l	equ	0xFE1
 11507                           indf2	equ	0xFDF
 11508                           postinc2	equ	0xFDE
 11509                           postdec2	equ	0xFDD
 11510                           plusw2	equ	0xFDB
 11511                           fsr2h	equ	0xFDA
 11512                           fsr2l	equ	0xFD9
 11513                           status	equ	0xFD8
 11514                           
 11515 ;; *************** function __bootloader_find_file *****************
 11516 ;; Defined at:
 11517 ;;		line 146 in file "bootloader.c"
 11518 ;; Parameters:    Size  Location     Type
 11519 ;;		None
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;		None
 11522 ;; Return value:  Size  Location     Type
 11523 ;;                  1    wreg      void 
 11524 ;; Registers used:
 11525 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11526 ;; Tracked objects:
 11527 ;;		On entry : 0/0
 11528 ;;		On exit  : 0/0
 11529 ;;		Unchanged: 0/0
 11530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11535 ;;Total ram usage:        0 bytes
 11536 ;; Hardware stack levels used:    1
 11537 ;; Hardware stack levels required when called:    6
 11538 ;; This function calls:
 11539 ;;		_fat_find_file
 11540 ;;		_fat_get_file_size
 11541 ;; This function is called by:
 11542 ;;		_bootloader_run
 11543 ;; This function uses a non-reentrant model
 11544 ;;
 11545                           
 11546                           	psect	text50
 11547  005B60                     __ptext50:
 11548                           	opt stack 0
 11549  005B60                     __bootloader_find_file:
 11550                           	opt stack 23
 11551                           
 11552                           ;bootloader.c: 149: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 11553                           
 11554                           ;incstack = 0
 11555  005B60  0EB7               	movlw	low _bootloader_filename
 11556  005B62  6E30               	movwf	fat_find_file@name,c
 11557  005B64  0E8F               	movlw	high _bootloader_filename
 11558  005B66  6E31               	movwf	fat_find_file@name+1,c
 11559  005B68  0EC8               	movlw	low _bootloader_extension
 11560  005B6A  6E32               	movwf	fat_find_file@extension,c
 11561  005B6C  0E8F               	movlw	high _bootloader_extension
 11562  005B6E  6E33               	movwf	fat_find_file@extension+1,c
 11563  005B70  EC9D  F02B         	call	_fat_find_file	;wreg free
 11564  005B74  0100               	movlb	0	; () banked
 11565  005B76  6FFF               	movwf	_file_number& (0+255),b
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;bootloader.c: 152: if(file_number!=0xFF)
 11569  005B78  29FF               	incf	_file_number& (0+255),w,b
 11570  005B7A  B4D8               	btfsc	status,2,c
 11571  005B7C  D034               	goto	l2334
 11572                           
 11573                           ; BSR set to: 0
 11574                           ;bootloader.c: 153: {;bootloader.c: 155: hex_file_size = fat_get_file_size(file_number);
 11575  005B7E  51FF               	movf	_file_number& (0+255),w,b
 11576  005B80  EC21  F035         	call	_fat_get_file_size
 11577  005B84  C030  F0CB         	movff	?_fat_get_file_size,_hex_file_size
 11578  005B88  C031  F0CC         	movff	?_fat_get_file_size+1,_hex_file_size+1
 11579  005B8C  C032  F0CD         	movff	?_fat_get_file_size+2,_hex_file_size+2
 11580  005B90  C033  F0CE         	movff	?_fat_get_file_size+3,_hex_file_size+3
 11581                           
 11582                           ;bootloader.c: 157: hex_file_entries = 0;
 11583  005B94  0E00               	movlw	0
 11584  005B96  0101               	movlb	1	; () banked
 11585  005B98  6F75               	movwf	(_hex_file_entries+1)& (0+255),b
 11586  005B9A  0E00               	movlw	0
 11587  005B9C  6F74               	movwf	_hex_file_entries& (0+255),b
 11588                           
 11589                           ; BSR set to: 1
 11590                           ;bootloader.c: 158: hex_file_offset = 0;
 11591  005B9E  0E00               	movlw	0
 11592  005BA0  0100               	movlb	0	; () banked
 11593  005BA2  6FCF               	movwf	_hex_file_offset& (0+255),b
 11594  005BA4  0E00               	movlw	0
 11595  005BA6  6FD0               	movwf	(_hex_file_offset+1)& (0+255),b
 11596  005BA8  0E00               	movlw	0
 11597  005BAA  6FD1               	movwf	(_hex_file_offset+2)& (0+255),b
 11598  005BAC  0E00               	movlw	0
 11599  005BAE  6FD2               	movwf	(_hex_file_offset+3)& (0+255),b
 11600                           
 11601                           ; BSR set to: 0
 11602                           ;bootloader.c: 159: file_minimum_address = 0xFFFFFFFF;
 11603  005BB0  0101               	movlb	1	; () banked
 11604  005BB2  694E               	setf	_file_minimum_address& (0+255),b
 11605  005BB4  694F               	setf	(_file_minimum_address+1)& (0+255),b
 11606  005BB6  6950               	setf	(_file_minimum_address+2)& (0+255),b
 11607  005BB8  6951               	setf	(_file_minimum_address+3)& (0+255),b
 11608                           
 11609                           ; BSR set to: 1
 11610                           ;bootloader.c: 160: file_maximum_address = 0x00000000;
 11611  005BBA  0E00               	movlw	0
 11612  005BBC  6F4A               	movwf	_file_maximum_address& (0+255),b
 11613  005BBE  0E00               	movlw	0
 11614  005BC0  6F4B               	movwf	(_file_maximum_address+1)& (0+255),b
 11615  005BC2  0E00               	movlw	0
 11616  005BC4  6F4C               	movwf	(_file_maximum_address+2)& (0+255),b
 11617  005BC6  0E00               	movlw	0
 11618  005BC8  6F4D               	movwf	(_file_maximum_address+3)& (0+255),b
 11619                           
 11620                           ; BSR set to: 1
 11621                           ;bootloader.c: 161: extended_linear_address = 0x00000000;
 11622  005BCA  0E00               	movlw	0
 11623  005BCC  6F46               	movwf	_extended_linear_address& (0+255),b
 11624  005BCE  0E00               	movlw	0
 11625  005BD0  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
 11626  005BD2  0E00               	movlw	0
 11627  005BD4  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
 11628  005BD6  0E00               	movlw	0
 11629  005BD8  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
 11630                           
 11631                           ; BSR set to: 1
 11632                           ;bootloader.c: 162: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 11633  005BDA  0E20               	movlw	32
 11634  005BDC  0100               	movlb	0	; () banked
 11635  005BDE  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
 11636                           
 11637                           ; BSR set to: 0
 11638                           ;bootloader.c: 163: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 11639  005BE0  0E20               	movlw	32
 11640  005BE2  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
 11641                           
 11642                           ;bootloader.c: 164: }
 11643  005BE4  0012               	return	
 11644  005BE6                     l2334:
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;bootloader.c: 166: else;bootloader.c: 167: {;bootloader.c: 169: hex_file_size = 0;
 11648                           
 11649                           ; BSR set to: 0
 11650  005BE6  0E00               	movlw	0
 11651  005BE8  6FCB               	movwf	_hex_file_size& (0+255),b
 11652  005BEA  0E00               	movlw	0
 11653  005BEC  6FCC               	movwf	(_hex_file_size+1)& (0+255),b
 11654  005BEE  0E00               	movlw	0
 11655  005BF0  6FCD               	movwf	(_hex_file_size+2)& (0+255),b
 11656  005BF2  0E00               	movlw	0
 11657  005BF4  6FCE               	movwf	(_hex_file_size+3)& (0+255),b
 11658                           
 11659                           ;bootloader.c: 171: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 11660  005BF6  0E10               	movlw	16
 11661  005BF8  6FBD               	movwf	(_os+4)& (0+255),b	;volatile
 11662                           
 11663                           ;bootloader.c: 172: if(os.display_mode != DISPLAY_MODE_BOOTLOADER_START)
 11664  005BFA  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
 11665  005BFC  B4D8               	btfsc	status,2,c
 11666  005BFE  0012               	return	
 11667                           
 11668                           ; BSR set to: 0
 11669                           ;bootloader.c: 173: {;bootloader.c: 174: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARC
      +                          H;
 11670  005C00  0E10               	movlw	16
 11671  005C02  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
 11672                           
 11673                           ; BSR set to: 0
 11674  005C04  0012               	return	
 11675  005C06                     __end_of__bootloader_find_file:
 11676                           	opt stack 0
 11677                           tblptru	equ	0xFF8
 11678                           tblptrh	equ	0xFF7
 11679                           tblptrl	equ	0xFF6
 11680                           tablat	equ	0xFF5
 11681                           prodh	equ	0xFF4
 11682                           prodl	equ	0xFF3
 11683                           intcon	equ	0xFF2
 11684                           intcon2	equ	0xFF1
 11685                           intcon3	equ	0xFF0
 11686                           postinc0	equ	0xFEE
 11687                           wreg	equ	0xFE8
 11688                           indf1	equ	0xFE7
 11689                           postdec1	equ	0xFE5
 11690                           plusw1	equ	0xFE3
 11691                           fsr1h	equ	0xFE2
 11692                           fsr1l	equ	0xFE1
 11693                           indf2	equ	0xFDF
 11694                           postinc2	equ	0xFDE
 11695                           postdec2	equ	0xFDD
 11696                           plusw2	equ	0xFDB
 11697                           fsr2h	equ	0xFDA
 11698                           fsr2l	equ	0xFD9
 11699                           status	equ	0xFD8
 11700                           
 11701 ;; *************** function __normal_mode *****************
 11702 ;; Defined at:
 11703 ;;		line 205 in file "main.c"
 11704 ;; Parameters:    Size  Location     Type
 11705 ;;		None
 11706 ;; Auto vars:     Size  Location     Type
 11707 ;;		None
 11708 ;; Return value:  Size  Location     Type
 11709 ;;                  1    wreg      unsigned char 
 11710 ;; Registers used:
 11711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11712 ;; Tracked objects:
 11713 ;;		On entry : 0/0
 11714 ;;		On exit  : 0/0
 11715 ;;		Unchanged: 0/0
 11716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11721 ;;Total ram usage:        0 bytes
 11722 ;; Hardware stack levels used:    1
 11723 ;; Hardware stack levels required when called:    3
 11724 ;; This function calls:
 11725 ;;		_i2c_eeprom_readByte
 11726 ;;		_i2c_eeprom_writeByte
 11727 ;; This function is called by:
 11728 ;;		_main
 11729 ;; This function uses a non-reentrant model
 11730 ;;
 11731                           
 11732                           	psect	text51
 11733  007066                     __ptext51:
 11734                           	opt stack 0
 11735  007066                     __normal_mode:
 11736                           	opt stack 27
 11737                           
 11738                           ;main.c: 207: if(i2c_eeprom_readByte(0x100)==0x94)
 11739                           
 11740                           ; BSR set to: 0
 11741                           ;incstack = 0
 11742  007066  0E01               	movlw	1
 11743  007068  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 11744  00706A  0E00               	movlw	0
 11745  00706C  6E12               	movwf	i2c_eeprom_readByte@address,c
 11746  00706E  EC45  F03B         	call	_i2c_eeprom_readByte	;wreg free
 11747  007072  0A94               	xorlw	148
 11748  007074  A4D8               	btfss	status,2,c
 11749  007076  D00A               	goto	l914
 11750                           
 11751                           ;main.c: 208: {;main.c: 210: i2c_eeprom_writeByte(0x100, 0x00);
 11752  007078  0E01               	movlw	1
 11753  00707A  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 11754  00707C  0E00               	movlw	0
 11755  00707E  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 11756  007080  0E00               	movlw	0
 11757  007082  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 11758  007084  EC86  F03C         	call	_i2c_eeprom_writeByte	;wreg free
 11759                           
 11760                           ;main.c: 212: return 0;
 11761  007088  0E00               	movlw	0
 11762  00708A  0012               	return	
 11763  00708C                     l914:
 11764                           
 11765                           ;main.c: 214: else if(i2c_eeprom_readByte(0x100)==0x78)
 11766  00708C  0E01               	movlw	1
 11767  00708E  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 11768  007090  0E00               	movlw	0
 11769  007092  6E12               	movwf	i2c_eeprom_readByte@address,c
 11770  007094  EC45  F03B         	call	_i2c_eeprom_readByte	;wreg free
 11771  007098  0A78               	xorlw	120
 11772  00709A  A4D8               	btfss	status,2,c
 11773  00709C  D00A               	goto	l917
 11774                           
 11775                           ;main.c: 215: {;main.c: 217: i2c_eeprom_writeByte(0x100, 0x00);
 11776  00709E  0E01               	movlw	1
 11777  0070A0  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 11778  0070A2  0E00               	movlw	0
 11779  0070A4  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 11780  0070A6  0E00               	movlw	0
 11781  0070A8  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 11782  0070AA  EC86  F03C         	call	_i2c_eeprom_writeByte	;wreg free
 11783                           
 11784                           ;main.c: 219: return 1;
 11785  0070AE  0E01               	movlw	1
 11786  0070B0  0012               	return	
 11787  0070B2                     l917:
 11788                           
 11789                           ;main.c: 220: };main.c: 226: LATAbits.LA0 = 1;
 11790  0070B2  8089               	bsf	3977,0,c	;volatile
 11791                           
 11792                           ;main.c: 227: TRISAbits.TRISA0 = 0;
 11793  0070B4  9092               	bcf	3986,0,c	;volatile
 11794                           
 11795                           ;main.c: 228: TRISAbits.TRISA0 = 1;
 11796  0070B6  8092               	bsf	3986,0,c	;volatile
 11797                           
 11798                           ;main.c: 230: if(!PORTAbits.RA0)
 11799  0070B8  B080               	btfsc	3968,0,c	;volatile
 11800  0070BA  D002               	goto	l918
 11801                           
 11802                           ;main.c: 231: {;main.c: 233: return 0;
 11803  0070BC  0E00               	movlw	0
 11804                           
 11805                           ;main.c: 234: }
 11806  0070BE  0012               	return	
 11807  0070C0                     l918:
 11808                           
 11809                           ;main.c: 235: else;main.c: 236: {;main.c: 238: return 1;
 11810  0070C0  0E01               	movlw	1
 11811  0070C2  0012               	return	
 11812  0070C4                     __end_of__normal_mode:
 11813                           	opt stack 0
 11814                           tblptru	equ	0xFF8
 11815                           tblptrh	equ	0xFF7
 11816                           tblptrl	equ	0xFF6
 11817                           tablat	equ	0xFF5
 11818                           prodh	equ	0xFF4
 11819                           prodl	equ	0xFF3
 11820                           intcon	equ	0xFF2
 11821                           intcon2	equ	0xFF1
 11822                           intcon3	equ	0xFF0
 11823                           postinc0	equ	0xFEE
 11824                           wreg	equ	0xFE8
 11825                           indf1	equ	0xFE7
 11826                           postdec1	equ	0xFE5
 11827                           plusw1	equ	0xFE3
 11828                           fsr1h	equ	0xFE2
 11829                           fsr1l	equ	0xFE1
 11830                           indf2	equ	0xFDF
 11831                           postinc2	equ	0xFDE
 11832                           postdec2	equ	0xFDD
 11833                           plusw2	equ	0xFDB
 11834                           fsr2h	equ	0xFDA
 11835                           fsr2l	equ	0xFD9
 11836                           status	equ	0xFD8
 11837                           
 11838 ;; *************** function _i2c_eeprom_readByte *****************
 11839 ;; Defined at:
 11840 ;;		line 367 in file "i2c.c"
 11841 ;; Parameters:    Size  Location     Type
 11842 ;;  address         2   17[COMRAM] unsigned int 
 11843 ;; Auto vars:     Size  Location     Type
 11844 ;;  addr            1   23[COMRAM] unsigned char 
 11845 ;;  slave_addres    1   22[COMRAM] unsigned char 
 11846 ;; Return value:  Size  Location     Type
 11847 ;;                  1    wreg      unsigned char 
 11848 ;; Registers used:
 11849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11850 ;; Tracked objects:
 11851 ;;		On entry : 0/0
 11852 ;;		On exit  : 0/0
 11853 ;;		Unchanged: 0/0
 11854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11856 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11857 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11858 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11859 ;;Total ram usage:        7 bytes
 11860 ;; Hardware stack levels used:    1
 11861 ;; Hardware stack levels required when called:    2
 11862 ;; This function calls:
 11863 ;;		__i2c_read
 11864 ;;		__i2c_write
 11865 ;;		_i2c_set_frequency
 11866 ;; This function is called by:
 11867 ;;		__normal_mode
 11868 ;; This function uses a non-reentrant model
 11869 ;;
 11870                           
 11871                           	psect	text52
 11872  00768A                     __ptext52:
 11873                           	opt stack 0
 11874  00768A                     _i2c_eeprom_readByte:
 11875                           	opt stack 27
 11876                           
 11877                           ;i2c.c: 369: uint8_t slave_address;;i2c.c: 370: uint8_t addr;;i2c.c: 371: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 11878                           
 11879                           ;incstack = 0
 11880  00768A  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 11881  00768E  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 11882  007692  0E07               	movlw	7
 11883  007694  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 11884  007696                     u11005:
 11885  007696  90D8               	bcf	status,0,c
 11886  007698  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 11887  00769A  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 11888  00769C  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 11889  00769E  D7FB               	goto	u11005
 11890  0076A0  5014               	movf	??_i2c_eeprom_readByte,w,c
 11891  0076A2  0B0E               	andlw	14
 11892  0076A4  09A0               	iorlw	160
 11893  0076A6  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 11894                           
 11895                           ;i2c.c: 372: addr = address & 0xFF;
 11896  0076A8  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 11897                           
 11898                           ;i2c.c: 375: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 11899  0076AC  0E02               	movlw	2
 11900  0076AE  ECC7  F03E         	call	_i2c_set_frequency
 11901                           
 11902                           ;i2c.c: 377: _i2c_write(slave_address, &addr, 1);
 11903  0076B2  0E18               	movlw	low i2c_eeprom_readByte@addr
 11904  0076B4  6E06               	movwf	__i2c_write@data,c
 11905  0076B6  0E00               	movlw	high i2c_eeprom_readByte@addr
 11906  0076B8  6E07               	movwf	__i2c_write@data+1,c
 11907  0076BA  0E01               	movlw	1
 11908  0076BC  6E08               	movwf	__i2c_write@length,c
 11909  0076BE  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 11910  0076C0  ECB9  F03B         	call	__i2c_write
 11911                           
 11912                           ;i2c.c: 378: _i2c_read(slave_address, &addr, 1);
 11913  0076C4  0E18               	movlw	low i2c_eeprom_readByte@addr
 11914  0076C6  6E06               	movwf	__i2c_read@data,c
 11915  0076C8  0E00               	movlw	high i2c_eeprom_readByte@addr
 11916  0076CA  6E07               	movwf	__i2c_read@data+1,c
 11917  0076CC  0E01               	movlw	1
 11918  0076CE  6E08               	movwf	__i2c_read@length,c
 11919  0076D0  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 11920  0076D2  EC2D  F032         	call	__i2c_read
 11921                           
 11922                           ;i2c.c: 379: return addr;
 11923  0076D6  5018               	movf	i2c_eeprom_readByte@addr,w,c
 11924  0076D8  0012               	return	
 11925  0076DA                     __end_of_i2c_eeprom_readByte:
 11926                           	opt stack 0
 11927                           tblptru	equ	0xFF8
 11928                           tblptrh	equ	0xFF7
 11929                           tblptrl	equ	0xFF6
 11930                           tablat	equ	0xFF5
 11931                           prodh	equ	0xFF4
 11932                           prodl	equ	0xFF3
 11933                           intcon	equ	0xFF2
 11934                           intcon2	equ	0xFF1
 11935                           intcon3	equ	0xFF0
 11936                           postinc0	equ	0xFEE
 11937                           wreg	equ	0xFE8
 11938                           indf1	equ	0xFE7
 11939                           postdec1	equ	0xFE5
 11940                           plusw1	equ	0xFE3
 11941                           fsr1h	equ	0xFE2
 11942                           fsr1l	equ	0xFE1
 11943                           indf2	equ	0xFDF
 11944                           postinc2	equ	0xFDE
 11945                           postdec2	equ	0xFDD
 11946                           plusw2	equ	0xFDB
 11947                           fsr2h	equ	0xFDA
 11948                           fsr2l	equ	0xFD9
 11949                           status	equ	0xFD8
 11950                           
 11951 ;; *************** function __i2c_read *****************
 11952 ;; Defined at:
 11953 ;;		line 161 in file "i2c.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;  slave_addres    1    wreg     unsigned char 
 11956 ;;  data            2    5[COMRAM] PTR unsigned char 
 11957 ;;		 -> i2c_eeprom_readByte@addr(1), 
 11958 ;;  length          1    7[COMRAM] unsigned char 
 11959 ;; Auto vars:     Size  Location     Type
 11960 ;;  slave_addres    1   15[COMRAM] unsigned char 
 11961 ;;  cntr            1   16[COMRAM] unsigned char 
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  1    wreg      void 
 11964 ;; Registers used:
 11965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11971 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11973 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11974 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11975 ;;Total ram usage:       12 bytes
 11976 ;; Hardware stack levels used:    1
 11977 ;; Hardware stack levels required when called:    1
 11978 ;; This function calls:
 11979 ;;		__i2c_acknowledge
 11980 ;;		__i2c_get
 11981 ;;		__i2c_not_acknowledge
 11982 ;;		__i2c_send
 11983 ;;		__i2c_start
 11984 ;;		__i2c_stop
 11985 ;;		__i2c_wait_idle
 11986 ;; This function is called by:
 11987 ;;		_i2c_eeprom_readByte
 11988 ;;		_i2c_eeprom_read
 11989 ;; This function uses a non-reentrant model
 11990 ;;
 11991                           
 11992                           	psect	text53
 11993  00645A                     __ptext53:
 11994                           	opt stack 0
 11995  00645A                     __i2c_read:
 11996                           	opt stack 27
 11997                           
 11998                           ;incstack = 0
 11999                           ;__i2c_read@slave_address stored from wreg
 12000  00645A  6E10               	movwf	__i2c_read@slave_address,c
 12001                           
 12002                           ;i2c.c: 163: uint8_t cntr;;i2c.c: 165: _i2c_wait_idle();
 12003  00645C  ECEB  F038         	call	__i2c_wait_idle	;wreg free
 12004                           
 12005                           ;i2c.c: 166: _i2c_start();
 12006  006460  ECED  F040         	call	__i2c_start	;wreg free
 12007                           
 12008                           ;i2c.c: 167: _i2c_wait_idle();
 12009  006464  ECEB  F038         	call	__i2c_wait_idle	;wreg free
 12010                           
 12011                           ;i2c.c: 168: _i2c_send(slave_address | 0x01);
 12012  006468  5010               	movf	__i2c_read@slave_address,w,c
 12013  00646A  0901               	iorlw	1
 12014  00646C  ECF1  F040         	call	__i2c_send
 12015                           
 12016                           ;i2c.c: 169: _i2c_wait_idle();
 12017  006470  ECEB  F038         	call	__i2c_wait_idle	;wreg free
 12018                           
 12019                           ;i2c.c: 171: for(cntr=0; cntr<length-1; ++cntr)
 12020  006474  0E00               	movlw	0
 12021  006476  6E11               	movwf	__i2c_read@cntr,c
 12022  006478  D00E               	goto	l1209
 12023  00647A                     
 12024                           ;i2c.c: 172: {;i2c.c: 173: data[cntr] = _i2c_get();
 12025  00647A  5011               	movf	__i2c_read@cntr,w,c
 12026  00647C  0D01               	mullw	1
 12027  00647E  50F3               	movf	prodl,w,c
 12028  006480  2406               	addwf	__i2c_read@data,w,c
 12029  006482  6ED9               	movwf	fsr2l,c
 12030  006484  50F4               	movf	prodh,w,c
 12031  006486  2007               	addwfc	__i2c_read@data+1,w,c
 12032  006488  6EDA               	movwf	fsr2h,c
 12033  00648A  ECB7  F040         	call	__i2c_get	;wreg free
 12034  00648E  6EDF               	movwf	indf2,c
 12035                           
 12036                           ;i2c.c: 174: _i2c_acknowledge();
 12037  006490  ECBC  F040         	call	__i2c_acknowledge	;wreg free
 12038  006494  2A11               	incf	__i2c_read@cntr,f,c
 12039  006496                     l1209:
 12040  006496  0EFF               	movlw	255
 12041  006498  6E09               	movwf	??__i2c_read& (0+255),c
 12042  00649A  0EFF               	movlw	255
 12043  00649C  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 12044  00649E  5008               	movf	__i2c_read@length,w,c
 12045  0064A0  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 12046  0064A2  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 12047  0064A4  5009               	movf	??__i2c_read,w,c
 12048  0064A6  260B               	addwf	??__i2c_read+2,f,c
 12049  0064A8  500A               	movf	??__i2c_read+1,w,c
 12050  0064AA  220C               	addwfc	??__i2c_read+3,f,c
 12051  0064AC  5011               	movf	__i2c_read@cntr,w,c
 12052  0064AE  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 12053  0064B0  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 12054  0064B2  500B               	movf	??__i2c_read+2,w,c
 12055  0064B4  5C0D               	subwf	??__i2c_read+4,w,c
 12056  0064B6  500E               	movf	??__i2c_read+5,w,c
 12057  0064B8  0A80               	xorlw	128
 12058  0064BA  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 12059  0064BC  500C               	movf	??__i2c_read+3,w,c
 12060  0064BE  0A80               	xorlw	128
 12061  0064C0  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 12062  0064C2  A0D8               	btfss	status,0,c
 12063  0064C4  D7DA               	goto	l1210
 12064                           
 12065                           ;i2c.c: 175: };i2c.c: 176: data[cntr] = _i2c_get();
 12066  0064C6  5011               	movf	__i2c_read@cntr,w,c
 12067  0064C8  0D01               	mullw	1
 12068  0064CA  50F3               	movf	prodl,w,c
 12069  0064CC  2406               	addwf	__i2c_read@data,w,c
 12070  0064CE  6ED9               	movwf	fsr2l,c
 12071  0064D0  50F4               	movf	prodh,w,c
 12072  0064D2  2007               	addwfc	__i2c_read@data+1,w,c
 12073  0064D4  6EDA               	movwf	fsr2h,c
 12074  0064D6  ECB7  F040         	call	__i2c_get	;wreg free
 12075  0064DA  6EDF               	movwf	indf2,c
 12076                           
 12077                           ;i2c.c: 177: _i2c_not_acknowledge();
 12078  0064DC  ECB2  F040         	call	__i2c_not_acknowledge	;wreg free
 12079                           
 12080                           ;i2c.c: 179: _i2c_stop();
 12081  0064E0  ECE9  F040         	call	__i2c_stop	;wreg free
 12082  0064E4  0012               	return		;funcret
 12083  0064E6                     __end_of__i2c_read:
 12084                           	opt stack 0
 12085                           tblptru	equ	0xFF8
 12086                           tblptrh	equ	0xFF7
 12087                           tblptrl	equ	0xFF6
 12088                           tablat	equ	0xFF5
 12089                           prodh	equ	0xFF4
 12090                           prodl	equ	0xFF3
 12091                           intcon	equ	0xFF2
 12092                           intcon2	equ	0xFF1
 12093                           intcon3	equ	0xFF0
 12094                           postinc0	equ	0xFEE
 12095                           wreg	equ	0xFE8
 12096                           indf1	equ	0xFE7
 12097                           postdec1	equ	0xFE5
 12098                           plusw1	equ	0xFE3
 12099                           fsr1h	equ	0xFE2
 12100                           fsr1l	equ	0xFE1
 12101                           indf2	equ	0xFDF
 12102                           postinc2	equ	0xFDE
 12103                           postdec2	equ	0xFDD
 12104                           plusw2	equ	0xFDB
 12105                           fsr2h	equ	0xFDA
 12106                           fsr2l	equ	0xFD9
 12107                           status	equ	0xFD8
 12108                           
 12109 ;; *************** function __i2c_not_acknowledge *****************
 12110 ;; Defined at:
 12111 ;;		line 90 in file "i2c.c"
 12112 ;; Parameters:    Size  Location     Type
 12113 ;;		None
 12114 ;; Auto vars:     Size  Location     Type
 12115 ;;		None
 12116 ;; Return value:  Size  Location     Type
 12117 ;;                  1    wreg      void 
 12118 ;; Registers used:
 12119 ;;		None
 12120 ;; Tracked objects:
 12121 ;;		On entry : 0/0
 12122 ;;		On exit  : 0/0
 12123 ;;		Unchanged: 0/0
 12124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12129 ;;Total ram usage:        0 bytes
 12130 ;; Hardware stack levels used:    1
 12131 ;; This function calls:
 12132 ;;		Nothing
 12133 ;; This function is called by:
 12134 ;;		__i2c_read
 12135 ;; This function uses a non-reentrant model
 12136 ;;
 12137                           
 12138                           	psect	text54
 12139  008164                     __ptext54:
 12140                           	opt stack 0
 12141  008164                     __i2c_not_acknowledge:
 12142                           	opt stack 27
 12143                           
 12144                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 12145                           
 12146                           ;incstack = 0
 12147  008164  8AC5               	bsf	4037,5,c	;volatile
 12148                           
 12149                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 12150  008166  88C5               	bsf	4037,4,c	;volatile
 12151  008168  A8C5               	btfss	4037,4,c	;volatile
 12152  00816A  0012               	return	
 12153  00816C  D7FD               	goto	l1181
 12154  00816E                     __end_of__i2c_not_acknowledge:
 12155                           	opt stack 0
 12156                           tblptru	equ	0xFF8
 12157                           tblptrh	equ	0xFF7
 12158                           tblptrl	equ	0xFF6
 12159                           tablat	equ	0xFF5
 12160                           prodh	equ	0xFF4
 12161                           prodl	equ	0xFF3
 12162                           intcon	equ	0xFF2
 12163                           intcon2	equ	0xFF1
 12164                           intcon3	equ	0xFF0
 12165                           postinc0	equ	0xFEE
 12166                           wreg	equ	0xFE8
 12167                           indf1	equ	0xFE7
 12168                           postdec1	equ	0xFE5
 12169                           plusw1	equ	0xFE3
 12170                           fsr1h	equ	0xFE2
 12171                           fsr1l	equ	0xFE1
 12172                           indf2	equ	0xFDF
 12173                           postinc2	equ	0xFDE
 12174                           postdec2	equ	0xFDD
 12175                           plusw2	equ	0xFDB
 12176                           fsr2h	equ	0xFDA
 12177                           fsr2l	equ	0xFD9
 12178                           status	equ	0xFD8
 12179                           
 12180 ;; *************** function __i2c_get *****************
 12181 ;; Defined at:
 12182 ;;		line 67 in file "i2c.c"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;		None
 12185 ;; Auto vars:     Size  Location     Type
 12186 ;;		None
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  1    wreg      unsigned char 
 12189 ;; Registers used:
 12190 ;;		wreg, status,2
 12191 ;; Tracked objects:
 12192 ;;		On entry : 0/0
 12193 ;;		On exit  : 0/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12200 ;;Total ram usage:        0 bytes
 12201 ;; Hardware stack levels used:    1
 12202 ;; This function calls:
 12203 ;;		Nothing
 12204 ;; This function is called by:
 12205 ;;		__i2c_read
 12206 ;; This function uses a non-reentrant model
 12207 ;;
 12208                           
 12209                           	psect	text55
 12210  00816E                     __ptext55:
 12211                           	opt stack 0
 12212  00816E                     __i2c_get:
 12213                           	opt stack 27
 12214                           
 12215                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 12216                           
 12217                           ;incstack = 0
 12218  00816E  86C5               	bsf	4037,3,c	;volatile
 12219  008170  B6C5               	btfsc	4037,3,c	;volatile
 12220  008172  D7FE               	goto	l1163
 12221                           
 12222                           ;i2c.c: 71: return SSP1BUF;
 12223  008174  50C9               	movf	4041,w,c	;volatile
 12224  008176  0012               	return	
 12225  008178                     __end_of__i2c_get:
 12226                           	opt stack 0
 12227                           tblptru	equ	0xFF8
 12228                           tblptrh	equ	0xFF7
 12229                           tblptrl	equ	0xFF6
 12230                           tablat	equ	0xFF5
 12231                           prodh	equ	0xFF4
 12232                           prodl	equ	0xFF3
 12233                           intcon	equ	0xFF2
 12234                           intcon2	equ	0xFF1
 12235                           intcon3	equ	0xFF0
 12236                           postinc0	equ	0xFEE
 12237                           wreg	equ	0xFE8
 12238                           indf1	equ	0xFE7
 12239                           postdec1	equ	0xFE5
 12240                           plusw1	equ	0xFE3
 12241                           fsr1h	equ	0xFE2
 12242                           fsr1l	equ	0xFE1
 12243                           indf2	equ	0xFDF
 12244                           postinc2	equ	0xFDE
 12245                           postdec2	equ	0xFDD
 12246                           plusw2	equ	0xFDB
 12247                           fsr2h	equ	0xFDA
 12248                           fsr2l	equ	0xFD9
 12249                           status	equ	0xFD8
 12250                           
 12251 ;; *************** function __i2c_acknowledge *****************
 12252 ;; Defined at:
 12253 ;;		line 82 in file "i2c.c"
 12254 ;; Parameters:    Size  Location     Type
 12255 ;;		None
 12256 ;; Auto vars:     Size  Location     Type
 12257 ;;		None
 12258 ;; Return value:  Size  Location     Type
 12259 ;;                  1    wreg      void 
 12260 ;; Registers used:
 12261 ;;		None
 12262 ;; Tracked objects:
 12263 ;;		On entry : 0/0
 12264 ;;		On exit  : 0/0
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12271 ;;Total ram usage:        0 bytes
 12272 ;; Hardware stack levels used:    1
 12273 ;; This function calls:
 12274 ;;		Nothing
 12275 ;; This function is called by:
 12276 ;;		__i2c_read
 12277 ;; This function uses a non-reentrant model
 12278 ;;
 12279                           
 12280                           	psect	text56
 12281  008178                     __ptext56:
 12282                           	opt stack 0
 12283  008178                     __i2c_acknowledge:
 12284                           	opt stack 27
 12285                           
 12286                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 12287                           
 12288                           ;incstack = 0
 12289  008178  9AC5               	bcf	4037,5,c	;volatile
 12290                           
 12291                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 12292  00817A  88C5               	bsf	4037,4,c	;volatile
 12293  00817C  A8C5               	btfss	4037,4,c	;volatile
 12294  00817E  0012               	return	
 12295  008180  D7FD               	goto	l1175
 12296  008182                     __end_of__i2c_acknowledge:
 12297                           	opt stack 0
 12298                           tblptru	equ	0xFF8
 12299                           tblptrh	equ	0xFF7
 12300                           tblptrl	equ	0xFF6
 12301                           tablat	equ	0xFF5
 12302                           prodh	equ	0xFF4
 12303                           prodl	equ	0xFF3
 12304                           intcon	equ	0xFF2
 12305                           intcon2	equ	0xFF1
 12306                           intcon3	equ	0xFF0
 12307                           postinc0	equ	0xFEE
 12308                           wreg	equ	0xFE8
 12309                           indf1	equ	0xFE7
 12310                           postdec1	equ	0xFE5
 12311                           plusw1	equ	0xFE3
 12312                           fsr1h	equ	0xFE2
 12313                           fsr1l	equ	0xFE1
 12314                           indf2	equ	0xFDF
 12315                           postinc2	equ	0xFDE
 12316                           postdec2	equ	0xFDD
 12317                           plusw2	equ	0xFDB
 12318                           fsr2h	equ	0xFDA
 12319                           fsr2l	equ	0xFD9
 12320                           status	equ	0xFD8
 12321                           
 12322 ;; *************** function _USBDeviceTasks *****************
 12323 ;; Defined at:
 12324 ;;		line 477 in file "usb_device.c"
 12325 ;; Parameters:    Size  Location     Type
 12326 ;;		None
 12327 ;; Auto vars:     Size  Location     Type
 12328 ;;  i               1   31[COMRAM] unsigned char 
 12329 ;; Return value:  Size  Location     Type
 12330 ;;                  1    wreg      void 
 12331 ;; Registers used:
 12332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12333 ;; Tracked objects:
 12334 ;;		On entry : 0/0
 12335 ;;		On exit  : 0/0
 12336 ;;		Unchanged: 0/0
 12337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12341 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12342 ;;Total ram usage:        1 bytes
 12343 ;; Hardware stack levels used:    1
 12344 ;; Hardware stack levels required when called:    8
 12345 ;; This function calls:
 12346 ;;		_USBCtrlEPAllowStatusStage
 12347 ;;		_USBCtrlEPService
 12348 ;;		_USBDeviceInit
 12349 ;;		_USBIncrement1msInternalTimers
 12350 ;;		_USBStallHandler
 12351 ;;		_USBSuspend
 12352 ;;		_USBWakeFromSuspend
 12353 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12354 ;; This function is called by:
 12355 ;;		_main
 12356 ;; This function uses a non-reentrant model
 12357 ;;
 12358                           
 12359                           	psect	text57
 12360  00362C                     __ptext57:
 12361                           	opt stack 0
 12362  00362C                     _USBDeviceTasks:
 12363                           	opt stack 22
 12364                           
 12365                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 12366                           
 12367                           ; BSR set to: 15
 12368                           
 12369                           ; BSR set to: 15
 12370                           ;usb_device.c: 543: return;
 12371                           
 12372                           ; BSR set to: 15
 12373                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 12374                           
 12375                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 12376                           
 12377                           ;usb_device.c: 511: UIE = 0;
 12378                           
 12379                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 12380                           
 12381                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 12382                           
 12383                           ;incstack = 0
 12384  00362C  505F               	movf	_USBDeviceState,w,c
 12385  00362E  A4D8               	btfss	status,2,c
 12386  003630  D011               	goto	l150
 12387                           
 12388                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 12389  003632  0E00               	movlw	0
 12390  003634  6E65               	movwf	3941,c	;volatile
 12391                           
 12392                           ;usb_device.c: 572: UIE = 0;
 12393  003636  0E00               	movlw	0
 12394  003638  010F               	movlb	15	; () banked
 12395  00363A  6F36               	movwf	54,b	;volatile
 12396                           
 12397                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12398  00363C  0E16               	movlw	22
 12399  00363E  6F39               	movwf	57,b	;volatile
 12400  003640  0E9F               	movlw	159
 12401  003642  6F37               	movwf	55,b	;volatile
 12402  003644  0E7B               	movlw	123
 12403  003646  6F36               	movwf	54,b	;volatile
 12404                           
 12405                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 12406  003648  D001               	goto	l151
 12407  00364A                     l152:
 12408  00364A  8665               	bsf	3941,3,c	;volatile
 12409  00364C                     l151:
 12410  00364C  A665               	btfss	3941,3,c	;volatile
 12411  00364E  D7FD               	goto	l152
 12412                           
 12413                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 12414  003650  0E01               	movlw	1
 12415  003652  6E5F               	movwf	_USBDeviceState,c
 12416  003654                     l150:
 12417                           
 12418                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 12419  003654  045F               	decf	_USBDeviceState,w,c
 12420  003656  B4D8               	btfsc	status,2,c
 12421                           
 12422                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 12423  003658  BA65               	btfsc	3941,5,c	;volatile
 12424  00365A  D009               	goto	l155
 12425                           
 12426                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 12427  00365C  0E00               	movlw	0
 12428  00365E  6E62               	movwf	3938,c	;volatile
 12429                           
 12430                           ;usb_device.c: 612: UIE=0;
 12431  003660  0E00               	movlw	0
 12432  003662  010F               	movlb	15	; () banked
 12433  003664  6F36               	movwf	54,b	;volatile
 12434                           
 12435                           ; BSR set to: 15
 12436                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 12437  003666  8136               	bsf	54,0,b	;volatile
 12438                           
 12439                           ; BSR set to: 15
 12440                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 12441  003668  8936               	bsf	54,4,b	;volatile
 12442                           
 12443                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 12444  00366A  0E02               	movlw	2
 12445  00366C  6E5F               	movwf	_USBDeviceState,c
 12446  00366E                     l155:
 12447                           
 12448                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 12449                           
 12450                           ; BSR set to: 15
 12451                           
 12452                           ; BSR set to: 15
 12453  00366E  A462               	btfss	3938,2,c	;volatile
 12454  003670  D006               	goto	l156
 12455  003672  010F               	movlb	15	; () banked
 12456  003674  A536               	btfss	54,2,b	;volatile
 12457  003676  D003               	goto	l156
 12458                           
 12459                           ; BSR set to: 15
 12460                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 12461  003678  9462               	bcf	3938,2,c	;volatile
 12462                           
 12463                           ; BSR set to: 15
 12464                           ;usb_device.c: 640: USBWakeFromSuspend();
 12465  00367A  EC3B  F03D         	call	_USBWakeFromSuspend	;wreg free
 12466  00367E                     l156:
 12467                           
 12468                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 12469  00367E  A265               	btfss	3941,1,c	;volatile
 12470  003680  D002               	goto	l157
 12471                           
 12472                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 12473  003682  98A1               	bcf	4001,4,c	;volatile
 12474                           
 12475                           ;usb_device.c: 650: return;
 12476  003684  0012               	return	
 12477  003686                     l157:
 12478                           
 12479                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 12480  003686  A062               	btfss	3938,0,c	;volatile
 12481  003688  D008               	goto	l158
 12482  00368A  010F               	movlb	15	; () banked
 12483  00368C  A136               	btfss	54,0,b	;volatile
 12484  00368E  D005               	goto	l158
 12485                           
 12486                           ; BSR set to: 15
 12487                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 12488  003690  ECED  F01D         	call	_USBDeviceInit	;wreg free
 12489                           
 12490                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 12491  003694  0E04               	movlw	4
 12492  003696  6E5F               	movwf	_USBDeviceState,c
 12493                           
 12494                           ;usb_device.c: 681: (UIR &= 0xFE);
 12495  003698  9062               	bcf	3938,0,c	;volatile
 12496  00369A                     l158:
 12497                           
 12498                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 12499  00369A  A862               	btfss	3938,4,c	;volatile
 12500  00369C  D004               	goto	l159
 12501  00369E  010F               	movlb	15	; () banked
 12502  0036A0  B936               	btfsc	54,4,b	;volatile
 12503                           
 12504                           ; BSR set to: 15
 12505                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 12506  0036A2  EC56  F03E         	call	_USBSuspend	;wreg free
 12507  0036A6                     l159:
 12508                           
 12509                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 12510  0036A6  AC62               	btfss	3938,6,c	;volatile
 12511  0036A8  D01C               	goto	l163
 12512                           
 12513                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 12514  0036AA  010F               	movlb	15	; () banked
 12515  0036AC  AD36               	btfss	54,6,b	;volatile
 12516  0036AE  D00E               	goto	l161
 12517                           
 12518                           ; BSR set to: 15
 12519                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 12520  0036B0  0E00               	movlw	0
 12521  0036B2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12522  0036B4  0E73               	movlw	115
 12523  0036B6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12524  0036B8  0E00               	movlw	0
 12525  0036BA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12526  0036BC  0E00               	movlw	0
 12527  0036BE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12528  0036C0  0E00               	movlw	0
 12529  0036C2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12530  0036C4  0E01               	movlw	1
 12531  0036C6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12532  0036C8  ECB9  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12533  0036CC                     l161:
 12534                           
 12535                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 12536  0036CC  9C62               	bcf	3938,6,c	;volatile
 12537                           
 12538                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 12539  0036CE  ECAB  F03F         	call	_USBIncrement1msInternalTimers	;wreg free
 12540                           
 12541                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 12542  0036D2  0100               	movlb	0	; () banked
 12543  0036D4  51F0               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 12544  0036D6  A4D8               	btfss	status,2,c
 12545                           
 12546                           ; BSR set to: 0
 12547                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 12548  0036D8  07F0               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 12549                           
 12550                           ; BSR set to: 0
 12551                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 12552                           
 12553                           ; BSR set to: 0
 12554  0036DA  51F0               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 12555  0036DC  B4D8               	btfsc	status,2,c
 12556                           
 12557                           ; BSR set to: 0
 12558                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 12559  0036DE  EC17  F02A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12560  0036E2                     l163:
 12561                           
 12562                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 12563  0036E2  AA62               	btfss	3938,5,c	;volatile
 12564  0036E4  D004               	goto	l164
 12565  0036E6  010F               	movlb	15	; () banked
 12566  0036E8  BB36               	btfsc	54,5,b	;volatile
 12567                           
 12568                           ; BSR set to: 15
 12569                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 12570  0036EA  EC01  F03C         	call	_USBStallHandler	;wreg free
 12571  0036EE                     l164:
 12572                           
 12573                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 12574  0036EE  A262               	btfss	3938,1,c	;volatile
 12575  0036F0  D012               	goto	l165
 12576  0036F2  010F               	movlb	15	; () banked
 12577  0036F4  A336               	btfss	54,1,b	;volatile
 12578  0036F6  D00F               	goto	l165
 12579                           
 12580                           ; BSR set to: 15
 12581                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 12582  0036F8  0E7F               	movlw	127
 12583  0036FA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12584  0036FC  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12585  0036FE  0E00               	movlw	0
 12586  003700  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12587  003702  0E00               	movlw	0
 12588  003704  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12589  003706  0E00               	movlw	0
 12590  003708  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12591  00370A  0E01               	movlw	1
 12592  00370C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12593  00370E  ECB9  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12594                           
 12595                           ;usb_device.c: 759: {UEIR = 0;};
 12596  003712  0E00               	movlw	0
 12597  003714  6E63               	movwf	3939,c	;volatile
 12598  003716                     l165:
 12599                           
 12600                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 12601  003716  0E04               	movlw	4
 12602  003718  605F               	cpfslt	_USBDeviceState,c
 12603  00371A  D002               	goto	l166
 12604                           
 12605                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 12606  00371C  98A1               	bcf	4001,4,c	;volatile
 12607                           
 12608                           ;usb_device.c: 777: return;
 12609  00371E  0012               	return	
 12610  003720                     l166:
 12611                           
 12612                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 12613  003720  010F               	movlb	15	; () banked
 12614  003722  A736               	btfss	54,3,b	;volatile
 12615  003724  D03C               	goto	u11570
 12616                           
 12617                           ; BSR set to: 15
 12618                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 12619  003726  0E00               	movlw	0
 12620  003728  6E20               	movwf	USBDeviceTasks@i,c
 12621  00372A                     l14525:
 12622                           
 12623                           ; BSR set to: 15
 12624  00372A  0E03               	movlw	3
 12625  00372C  6420               	cpfsgt	USBDeviceTasks@i,c
 12626  00372E  D001               	goto	l168
 12627  003730  D036               	goto	u11570
 12628  003732                     l168:
 12629                           
 12630                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 12631  003732  A662               	btfss	3938,3,c	;volatile
 12632  003734  D034               	goto	u11570
 12633                           
 12634                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 12635  003736  CF64 F0FD          	movff	3940,_USTATcopy	;volatile
 12636                           
 12637                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 12638  00373A  0100               	movlb	0	; () banked
 12639  00373C  31FD               	rrcf	_USTATcopy& (0+255),w,b
 12640  00373E  32E8               	rrcf	wreg,f,c
 12641  003740  32E8               	rrcf	wreg,f,c
 12642  003742  0B0F               	andlw	15
 12643  003744  6FF2               	movwf	_endpoint_number& (0+255),b
 12644                           
 12645                           ; BSR set to: 0
 12646                           ;usb_device.c: 793: (UIR &= 0xF7);
 12647  003746  9662               	bcf	3938,3,c	;volatile
 12648                           
 12649                           ; BSR set to: 0
 12650                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 12651  003748  B5FD               	btfsc	_USTATcopy& (0+255),2,b
 12652  00374A  D007               	goto	l171
 12653                           
 12654                           ; BSR set to: 0
 12655                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 12656  00374C  51F2               	movf	_endpoint_number& (0+255),w,b
 12657  00374E  0D01               	mullw	1
 12658  003750  0E68               	movlw	low _ep_data_out
 12659  003752  24F3               	addwf	prodl,w,c
 12660  003754  6ED9               	movwf	fsr2l,c
 12661  003756  0E01               	movlw	high _ep_data_out
 12662  003758  D007               	goto	L5
 12663  00375A                     l171:
 12664                           
 12665                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 12666                           
 12667                           ; BSR set to: 1
 12668  00375A  0100               	movlb	0	; () banked
 12669  00375C  51F2               	movf	_endpoint_number& (0+255),w,b
 12670  00375E  0D01               	mullw	1
 12671  003760  0E6B               	movlw	low _ep_data_in
 12672  003762  24F3               	addwf	prodl,w,c
 12673  003764  6ED9               	movwf	fsr2l,c
 12674  003766  0E01               	movlw	high _ep_data_in
 12675  003768                     L5:
 12676  003768  20F4               	addwfc	prodh,w,c
 12677  00376A  6EDA               	movwf	fsr2h,c
 12678  00376C  0101               	movlb	1	; () banked
 12679  00376E  70DF               	btg	indf2,0,c
 12680                           
 12681                           ; BSR set to: 1
 12682                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 12683                           
 12684                           ; BSR set to: 1
 12685  003770  0100               	movlb	0	; () banked
 12686  003772  51F2               	movf	_endpoint_number& (0+255),w,b
 12687  003774  A4D8               	btfss	status,2,c
 12688  003776  D003               	goto	l173
 12689                           
 12690                           ; BSR set to: 0
 12691                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 12692  003778  ECB1  F02C         	call	_USBCtrlEPService	;wreg free
 12693                           
 12694                           ;usb_device.c: 813: }
 12695  00377C  D00E               	goto	l175
 12696  00377E                     l173:
 12697                           
 12698                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 12699  00377E  0E00               	movlw	0
 12700  003780  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12701  003782  0E72               	movlw	114
 12702  003784  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12703  003786  0EFD               	movlw	low _USTATcopy
 12704  003788  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12705  00378A  0E00               	movlw	high _USTATcopy
 12706  00378C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12707  00378E  0E00               	movlw	0
 12708  003790  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12709  003792  0E00               	movlw	0
 12710  003794  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12711  003796  ECB9  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12712  00379A                     l175:
 12713  00379A  2A20               	incf	USBDeviceTasks@i,f,c
 12714  00379C  D7C6               	goto	l14525
 12715  00379E                     u11570:
 12716                           
 12717                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 12718  00379E  98A1               	bcf	4001,4,c	;volatile
 12719  0037A0  0012               	return		;funcret
 12720  0037A2                     __end_of_USBDeviceTasks:
 12721                           	opt stack 0
 12722                           tblptru	equ	0xFF8
 12723                           tblptrh	equ	0xFF7
 12724                           tblptrl	equ	0xFF6
 12725                           tablat	equ	0xFF5
 12726                           prodh	equ	0xFF4
 12727                           prodl	equ	0xFF3
 12728                           intcon	equ	0xFF2
 12729                           intcon2	equ	0xFF1
 12730                           intcon3	equ	0xFF0
 12731                           postinc0	equ	0xFEE
 12732                           wreg	equ	0xFE8
 12733                           indf1	equ	0xFE7
 12734                           postdec1	equ	0xFE5
 12735                           plusw1	equ	0xFE3
 12736                           fsr1h	equ	0xFE2
 12737                           fsr1l	equ	0xFE1
 12738                           indf2	equ	0xFDF
 12739                           postinc2	equ	0xFDE
 12740                           postdec2	equ	0xFDD
 12741                           plusw2	equ	0xFDB
 12742                           fsr2h	equ	0xFDA
 12743                           fsr2l	equ	0xFD9
 12744                           status	equ	0xFD8
 12745                           
 12746 ;; *************** function _USBWakeFromSuspend *****************
 12747 ;; Defined at:
 12748 ;;		line 2305 in file "usb_device.c"
 12749 ;; Parameters:    Size  Location     Type
 12750 ;;		None
 12751 ;; Auto vars:     Size  Location     Type
 12752 ;;		None
 12753 ;; Return value:  Size  Location     Type
 12754 ;;                  1    wreg      void 
 12755 ;; Registers used:
 12756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12757 ;; Tracked objects:
 12758 ;;		On entry : 0/0
 12759 ;;		On exit  : 0/0
 12760 ;;		Unchanged: 0/0
 12761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12766 ;;Total ram usage:        0 bytes
 12767 ;; Hardware stack levels used:    1
 12768 ;; Hardware stack levels required when called:    4
 12769 ;; This function calls:
 12770 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12771 ;; This function is called by:
 12772 ;;		_USBDeviceTasks
 12773 ;; This function uses a non-reentrant model
 12774 ;;
 12775                           
 12776                           	psect	text58
 12777  007A76                     __ptext58:
 12778                           	opt stack 0
 12779  007A76                     _USBWakeFromSuspend:
 12780                           	opt stack 25
 12781                           
 12782                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 12783                           
 12784                           ;incstack = 0
 12785  007A76  0E00               	movlw	0
 12786  007A78  0100               	movlb	0	; () banked
 12787  007A7A  6FF3               	movwf	_USBBusIsSuspended& (0+255),b
 12788                           
 12789                           ; BSR set to: 0
 12790                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 12791  007A7C  0E00               	movlw	0
 12792  007A7E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12793  007A80  0E74               	movlw	116
 12794  007A82  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12795  007A84  0E00               	movlw	0
 12796  007A86  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12797  007A88  0E00               	movlw	0
 12798  007A8A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12799  007A8C  0E00               	movlw	0
 12800  007A8E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12801  007A90  0E00               	movlw	0
 12802  007A92  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12803  007A94  ECB9  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12804                           
 12805                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 12806  007A98  9265               	bcf	3941,1,c	;volatile
 12807                           
 12808                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 12809  007A9A  010F               	movlb	15	; () banked
 12810  007A9C  9536               	bcf	54,2,b	;volatile
 12811                           
 12812                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 12813  007A9E  D001               	goto	l303
 12814  007AA0                     
 12815                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 12816                           
 12817                           ; BSR set to: 15
 12818  007AA0  9462               	bcf	3938,2,c	;volatile
 12819  007AA2                     l303:
 12820  007AA2  B462               	btfsc	3938,2,c	;volatile
 12821  007AA4  D7FD               	goto	l304
 12822                           
 12823                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 12824  007AA6  0E00               	movlw	0
 12825  007AA8  0100               	movlb	0	; () banked
 12826  007AAA  6FEA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12827                           
 12828                           ; BSR set to: 0
 12829  007AAC  0012               	return		;funcret
 12830  007AAE                     __end_of_USBWakeFromSuspend:
 12831                           	opt stack 0
 12832                           tblptru	equ	0xFF8
 12833                           tblptrh	equ	0xFF7
 12834                           tblptrl	equ	0xFF6
 12835                           tablat	equ	0xFF5
 12836                           prodh	equ	0xFF4
 12837                           prodl	equ	0xFF3
 12838                           intcon	equ	0xFF2
 12839                           intcon2	equ	0xFF1
 12840                           intcon3	equ	0xFF0
 12841                           postinc0	equ	0xFEE
 12842                           wreg	equ	0xFE8
 12843                           indf1	equ	0xFE7
 12844                           postdec1	equ	0xFE5
 12845                           plusw1	equ	0xFE3
 12846                           fsr1h	equ	0xFE2
 12847                           fsr1l	equ	0xFE1
 12848                           indf2	equ	0xFDF
 12849                           postinc2	equ	0xFDE
 12850                           postdec2	equ	0xFDD
 12851                           plusw2	equ	0xFDB
 12852                           fsr2h	equ	0xFDA
 12853                           fsr2l	equ	0xFD9
 12854                           status	equ	0xFD8
 12855                           
 12856 ;; *************** function _USBSuspend *****************
 12857 ;; Defined at:
 12858 ;;		line 2247 in file "usb_device.c"
 12859 ;; Parameters:    Size  Location     Type
 12860 ;;		None
 12861 ;; Auto vars:     Size  Location     Type
 12862 ;;		None
 12863 ;; Return value:  Size  Location     Type
 12864 ;;                  1    wreg      void 
 12865 ;; Registers used:
 12866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12867 ;; Tracked objects:
 12868 ;;		On entry : 0/0
 12869 ;;		On exit  : 0/0
 12870 ;;		Unchanged: 0/0
 12871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12876 ;;Total ram usage:        0 bytes
 12877 ;; Hardware stack levels used:    1
 12878 ;; Hardware stack levels required when called:    4
 12879 ;; This function calls:
 12880 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12881 ;; This function is called by:
 12882 ;;		_USBDeviceTasks
 12883 ;; This function uses a non-reentrant model
 12884 ;;
 12885                           
 12886                           	psect	text59
 12887  007CAC                     __ptext59:
 12888                           	opt stack 0
 12889  007CAC                     _USBSuspend:
 12890                           	opt stack 25
 12891                           
 12892                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 12893                           
 12894                           ; BSR set to: 0
 12895                           ;incstack = 0
 12896  007CAC  010F               	movlb	15	; () banked
 12897  007CAE  8536               	bsf	54,2,b	;volatile
 12898                           
 12899                           ; BSR set to: 15
 12900                           ;usb_device.c: 2273: (UIR &= 0xEF);
 12901  007CB0  9862               	bcf	3938,4,c	;volatile
 12902                           
 12903                           ; BSR set to: 15
 12904                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 12905  007CB2  8265               	bsf	3941,1,c	;volatile
 12906                           
 12907                           ; BSR set to: 15
 12908                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 12909  007CB4  0E01               	movlw	1
 12910  007CB6  0100               	movlb	0	; () banked
 12911  007CB8  6FF3               	movwf	_USBBusIsSuspended& (0+255),b
 12912                           
 12913                           ; BSR set to: 0
 12914                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 12915  007CBA  0E00               	movlw	0
 12916  007CBC  6FEA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12917                           
 12918                           ; BSR set to: 0
 12919                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12920  007CBE  0E00               	movlw	0
 12921  007CC0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12922  007CC2  0E75               	movlw	117
 12923  007CC4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12924  007CC6  0E00               	movlw	0
 12925  007CC8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12926  007CCA  0E00               	movlw	0
 12927  007CCC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12928  007CCE  0E00               	movlw	0
 12929  007CD0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12930  007CD2  0E00               	movlw	0
 12931  007CD4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12932  007CD6  ECB9  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12933  007CDA  0012               	return		;funcret
 12934  007CDC                     __end_of_USBSuspend:
 12935                           	opt stack 0
 12936                           tblptru	equ	0xFF8
 12937                           tblptrh	equ	0xFF7
 12938                           tblptrl	equ	0xFF6
 12939                           tablat	equ	0xFF5
 12940                           prodh	equ	0xFF4
 12941                           prodl	equ	0xFF3
 12942                           intcon	equ	0xFF2
 12943                           intcon2	equ	0xFF1
 12944                           intcon3	equ	0xFF0
 12945                           postinc0	equ	0xFEE
 12946                           wreg	equ	0xFE8
 12947                           indf1	equ	0xFE7
 12948                           postdec1	equ	0xFE5
 12949                           plusw1	equ	0xFE3
 12950                           fsr1h	equ	0xFE2
 12951                           fsr1l	equ	0xFE1
 12952                           indf2	equ	0xFDF
 12953                           postinc2	equ	0xFDE
 12954                           postdec2	equ	0xFDD
 12955                           plusw2	equ	0xFDB
 12956                           fsr2h	equ	0xFDA
 12957                           fsr2l	equ	0xFD9
 12958                           status	equ	0xFD8
 12959                           
 12960 ;; *************** function _USBStallHandler *****************
 12961 ;; Defined at:
 12962 ;;		line 2204 in file "usb_device.c"
 12963 ;; Parameters:    Size  Location     Type
 12964 ;;		None
 12965 ;; Auto vars:     Size  Location     Type
 12966 ;;		None
 12967 ;; Return value:  Size  Location     Type
 12968 ;;                  1    wreg      void 
 12969 ;; Registers used:
 12970 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12971 ;; Tracked objects:
 12972 ;;		On entry : 0/0
 12973 ;;		On exit  : 0/0
 12974 ;;		Unchanged: 0/0
 12975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12980 ;;Total ram usage:        1 bytes
 12981 ;; Hardware stack levels used:    1
 12982 ;; This function calls:
 12983 ;;		Nothing
 12984 ;; This function is called by:
 12985 ;;		_USBDeviceTasks
 12986 ;; This function uses a non-reentrant model
 12987 ;;
 12988                           
 12989                           	psect	text60
 12990  007802                     __ptext60:
 12991                           	opt stack 0
 12992  007802                     _USBStallHandler:
 12993                           	opt stack 29
 12994                           
 12995                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 12996                           
 12997                           ;incstack = 0
 12998  007802  010F               	movlb	15	; () banked
 12999  007804  A126               	btfss	38,0,b	;volatile
 13000  007806  D01D               	goto	l295
 13001                           
 13002                           ; BSR set to: 15
 13003                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 13004  007808  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13005  00780C  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13006  007810  0E80               	movlw	128
 13007  007812  18DE               	xorwf	postinc2,w,c
 13008  007814  A4D8               	btfss	status,2,c
 13009  007816  D014               	goto	l296
 13010                           
 13011                           ; BSR set to: 15
 13012  007818  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 13013  00781C  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13014  007820  0E84               	movlw	132
 13015  007822  18DE               	xorwf	postinc2,w,c
 13016  007824  A4D8               	btfss	status,2,c
 13017  007826  D00C               	goto	l296
 13018                           
 13019                           ; BSR set to: 15
 13020                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 13021  007828  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13022  00782C  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13023  007830  0E0C               	movlw	12
 13024  007832  6EDF               	movwf	indf2,c
 13025                           
 13026                           ; BSR set to: 15
 13027                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 13028  007834  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13029  007838  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13030  00783C  0E00               	movlw	0
 13031  00783E  8EDB               	bsf	plusw2,7,c
 13032  007840                     l296:
 13033                           
 13034                           ; BSR set to: 15
 13035                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 13036                           
 13037                           ; BSR set to: 15
 13038  007840  9126               	bcf	38,0,b	;volatile
 13039  007842                     l295:
 13040                           
 13041                           ; BSR set to: 15
 13042                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 13043  007842  9A62               	bcf	3938,5,c	;volatile
 13044                           
 13045                           ; BSR set to: 15
 13046  007844  0012               	return		;funcret
 13047  007846                     __end_of_USBStallHandler:
 13048                           	opt stack 0
 13049                           tblptru	equ	0xFF8
 13050                           tblptrh	equ	0xFF7
 13051                           tblptrl	equ	0xFF6
 13052                           tablat	equ	0xFF5
 13053                           prodh	equ	0xFF4
 13054                           prodl	equ	0xFF3
 13055                           intcon	equ	0xFF2
 13056                           intcon2	equ	0xFF1
 13057                           intcon3	equ	0xFF0
 13058                           postinc0	equ	0xFEE
 13059                           wreg	equ	0xFE8
 13060                           indf1	equ	0xFE7
 13061                           postdec1	equ	0xFE5
 13062                           plusw1	equ	0xFE3
 13063                           fsr1h	equ	0xFE2
 13064                           fsr1l	equ	0xFE1
 13065                           indf2	equ	0xFDF
 13066                           postinc2	equ	0xFDE
 13067                           postdec2	equ	0xFDD
 13068                           plusw2	equ	0xFDB
 13069                           fsr2h	equ	0xFDA
 13070                           fsr2l	equ	0xFD9
 13071                           status	equ	0xFD8
 13072                           
 13073 ;; *************** function _USBIncrement1msInternalTimers *****************
 13074 ;; Defined at:
 13075 ;;		line 3027 in file "usb_device.c"
 13076 ;; Parameters:    Size  Location     Type
 13077 ;;		None
 13078 ;; Auto vars:     Size  Location     Type
 13079 ;;		None
 13080 ;; Return value:  Size  Location     Type
 13081 ;;                  1    wreg      void 
 13082 ;; Registers used:
 13083 ;;		wreg, status,2, status,0
 13084 ;; Tracked objects:
 13085 ;;		On entry : 0/0
 13086 ;;		On exit  : 0/0
 13087 ;;		Unchanged: 0/0
 13088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13093 ;;Total ram usage:        0 bytes
 13094 ;; Hardware stack levels used:    1
 13095 ;; This function calls:
 13096 ;;		Nothing
 13097 ;; This function is called by:
 13098 ;;		_USBDeviceTasks
 13099 ;; This function uses a non-reentrant model
 13100 ;;
 13101                           
 13102                           	psect	text61
 13103  007F56                     __ptext61:
 13104                           	opt stack 0
 13105  007F56                     _USBIncrement1msInternalTimers:
 13106                           	opt stack 29
 13107                           
 13108                           ;usb_device.c: 3035: USB1msTickCount++;
 13109                           
 13110                           ; BSR set to: 15
 13111                           ;incstack = 0
 13112  007F56  0E01               	movlw	1
 13113  007F58  0101               	movlb	1	; () banked
 13114  007F5A  275E               	addwf	_USB1msTickCount& (0+255),f,b
 13115  007F5C  0E00               	movlw	0
 13116  007F5E  235F               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 13117  007F60  2360               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 13118  007F62  2361               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 13119                           
 13120                           ; BSR set to: 1
 13121                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 13122  007F64  0100               	movlb	0	; () banked
 13123  007F66  51F3               	movf	_USBBusIsSuspended& (0+255),w,b
 13124  007F68  A4D8               	btfss	status,2,c
 13125  007F6A  0012               	return	
 13126                           
 13127                           ; BSR set to: 0
 13128                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 13129  007F6C  2BEA               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 13130                           
 13131                           ; BSR set to: 0
 13132                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 13133  007F6E  51EA               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 13134  007F70  A4D8               	btfss	status,2,c
 13135  007F72  0012               	return	
 13136                           
 13137                           ; BSR set to: 0
 13138                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 13139  007F74  69EA               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 13140                           
 13141                           ; BSR set to: 0
 13142  007F76  0012               	return	
 13143  007F78                     __end_of_USBIncrement1msInternalTimers:
 13144                           	opt stack 0
 13145                           tblptru	equ	0xFF8
 13146                           tblptrh	equ	0xFF7
 13147                           tblptrl	equ	0xFF6
 13148                           tablat	equ	0xFF5
 13149                           prodh	equ	0xFF4
 13150                           prodl	equ	0xFF3
 13151                           intcon	equ	0xFF2
 13152                           intcon2	equ	0xFF1
 13153                           intcon3	equ	0xFF0
 13154                           postinc0	equ	0xFEE
 13155                           wreg	equ	0xFE8
 13156                           indf1	equ	0xFE7
 13157                           postdec1	equ	0xFE5
 13158                           plusw1	equ	0xFE3
 13159                           fsr1h	equ	0xFE2
 13160                           fsr1l	equ	0xFE1
 13161                           indf2	equ	0xFDF
 13162                           postinc2	equ	0xFDE
 13163                           postdec2	equ	0xFDD
 13164                           plusw2	equ	0xFDB
 13165                           fsr2h	equ	0xFDA
 13166                           fsr2l	equ	0xFD9
 13167                           status	equ	0xFD8
 13168                           
 13169 ;; *************** function _USBDeviceInit *****************
 13170 ;; Defined at:
 13171 ;;		line 277 in file "usb_device.c"
 13172 ;; Parameters:    Size  Location     Type
 13173 ;;		None
 13174 ;; Auto vars:     Size  Location     Type
 13175 ;;  i               1    8[COMRAM] unsigned char 
 13176 ;; Return value:  Size  Location     Type
 13177 ;;                  1    wreg      void 
 13178 ;; Registers used:
 13179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13180 ;; Tracked objects:
 13181 ;;		On entry : 0/0
 13182 ;;		On exit  : 0/0
 13183 ;;		Unchanged: 0/0
 13184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13186 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13188 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13189 ;;Total ram usage:        1 bytes
 13190 ;; Hardware stack levels used:    1
 13191 ;; Hardware stack levels required when called:    1
 13192 ;; This function calls:
 13193 ;;		_memset
 13194 ;; This function is called by:
 13195 ;;		_USBDeviceTasks
 13196 ;;		_main
 13197 ;; This function uses a non-reentrant model
 13198 ;;
 13199                           
 13200                           	psect	text62
 13201  003BDA                     __ptext62:
 13202                           	opt stack 0
 13203  003BDA                     _USBDeviceInit:
 13204                           	opt stack 28
 13205                           
 13206                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 13207                           
 13208                           ; BSR set to: 0
 13209                           ;incstack = 0
 13210  003BDA  98A0               	bcf	4000,4,c	;volatile
 13211                           
 13212                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 13213  003BDC  0E00               	movlw	0
 13214  003BDE  6E63               	movwf	3939,c	;volatile
 13215                           
 13216                           ;usb_device.c: 291: {UIR = 0;};
 13217  003BE0  0E00               	movlw	0
 13218  003BE2  6E62               	movwf	3938,c	;volatile
 13219                           
 13220                           ;usb_device.c: 294: UEP0 = 0;
 13221  003BE4  0E00               	movlw	0
 13222  003BE6  010F               	movlb	15	; () banked
 13223  003BE8  6F26               	movwf	38,b	;volatile
 13224                           
 13225                           ; BSR set to: 15
 13226                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 13227  003BEA  0E27               	movlw	39
 13228  003BEC  6E01               	movwf	memset@p1,c
 13229  003BEE  0E0F               	movlw	15
 13230  003BF0  6E02               	movwf	memset@p1+1,c
 13231  003BF2  0E00               	movlw	0
 13232  003BF4  6E04               	movwf	memset@c+1,c
 13233  003BF6  0E00               	movlw	0
 13234  003BF8  6E03               	movwf	memset@c,c
 13235  003BFA  0E00               	movlw	0
 13236  003BFC  6E06               	movwf	memset@n+1,c
 13237  003BFE  0E02               	movlw	2
 13238  003C00  6E05               	movwf	memset@n,c
 13239  003C02  ECB1  F03E         	call	_memset	;wreg free
 13240                           
 13241                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 13242  003C06  0E16               	movlw	22
 13243  003C08  010F               	movlb	15	; () banked
 13244  003C0A  6F39               	movwf	57,b	;volatile
 13245                           
 13246                           ; BSR set to: 15
 13247  003C0C  0E9F               	movlw	159
 13248  003C0E  6F37               	movwf	55,b	;volatile
 13249                           
 13250                           ; BSR set to: 15
 13251  003C10  0E7B               	movlw	123
 13252  003C12  6F36               	movwf	54,b	;volatile
 13253                           
 13254                           ; BSR set to: 15
 13255                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 13256  003C14  0E00               	movlw	0
 13257  003C16  6E09               	movwf	USBDeviceInit@i,c
 13258  003C18                     l13795:
 13259                           
 13260                           ; BSR set to: 15
 13261  003C18  0E0B               	movlw	11
 13262  003C1A  6409               	cpfsgt	USBDeviceInit@i,c
 13263  003C1C  D001               	goto	l139
 13264  003C1E  D00E               	goto	u10600
 13265  003C20                     l139:
 13266                           
 13267                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 13268                           
 13269                           ; BSR set to: 15
 13270  003C20  5009               	movf	USBDeviceInit@i,w,c
 13271  003C22  0D04               	mullw	4
 13272  003C24  0E00               	movlw	0
 13273  003C26  24F3               	addwf	prodl,w,c
 13274  003C28  6ED9               	movwf	fsr2l,c
 13275  003C2A  0E0D               	movlw	13
 13276  003C2C  20F4               	addwfc	prodh,w,c
 13277  003C2E  6EDA               	movwf	fsr2h,c
 13278  003C30  6ADE               	clrf	postinc2,c
 13279  003C32  6ADE               	clrf	postinc2,c
 13280  003C34  6ADE               	clrf	postinc2,c
 13281  003C36  6ADD               	clrf	postdec2,c
 13282  003C38  2A09               	incf	USBDeviceInit@i,f,c
 13283  003C3A  D7EE               	goto	l13795
 13284  003C3C                     u10600:
 13285                           
 13286                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 13287  003C3C  8C65               	bsf	3941,6,c	;volatile
 13288                           
 13289                           ;usb_device.c: 316: UADDR = 0x00;
 13290  003C3E  0E00               	movlw	0
 13291  003C40  010F               	movlb	15	; () banked
 13292  003C42  6F38               	movwf	56,b	;volatile
 13293                           
 13294                           ; BSR set to: 15
 13295                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 13296  003C44  9865               	bcf	3941,4,c	;volatile
 13297                           
 13298                           ; BSR set to: 15
 13299                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 13300  003C46  9C65               	bcf	3941,6,c	;volatile
 13301  003C48                     
 13302                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 13303                           
 13304                           ; BSR set to: 15
 13305  003C48  9662               	bcf	3938,3,c	;volatile
 13306                           
 13307                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 13308  003C4A  0E00               	movlw	0
 13309  003C4C  0100               	movlb	0	; () banked
 13310  003C4E  6FC2               	movwf	(_inPipes+3)& (0+255),b
 13311                           
 13312                           ; BSR set to: 0
 13313                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 13314  003C50  0E00               	movlw	0
 13315  003C52  0101               	movlb	1	; () banked
 13316  003C54  6F34               	movwf	(_outPipes+3)& (0+255),b
 13317                           
 13318                           ; BSR set to: 1
 13319                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 13320  003C56  0E00               	movlw	0
 13321  003C58  6F36               	movwf	(_outPipes+5)& (0+255),b
 13322  003C5A  0E00               	movlw	0
 13323  003C5C  6F35               	movwf	(_outPipes+4)& (0+255),b
 13324                           
 13325                           ; BSR set to: 1
 13326                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 13327  003C5E  B662               	btfsc	3938,3,c	;volatile
 13328  003C60  D7F3               	goto	l141
 13329                           
 13330                           ; BSR set to: 1
 13331                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 13332                           
 13333                           ; BSR set to: 1
 13334  003C62  0E01               	movlw	1
 13335  003C64  0100               	movlb	0	; () banked
 13336  003C66  6FEE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13337                           
 13338                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 13339  003C68  0E01               	movlw	1
 13340  003C6A  6FED               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13341                           
 13342                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 13343  003C6C  0E00               	movlw	0
 13344  003C6E  6FEC               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13345                           
 13346                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 13347  003C70  0E00               	movlw	0
 13348  003C72  6FEB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13349                           
 13350                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 13351  003C74  0E00               	movlw	0
 13352  003C76  6FF3               	movwf	_USBBusIsSuspended& (0+255),b
 13353                           
 13354                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 13355  003C78  0E00               	movlw	0
 13356  003C7A  6E09               	movwf	USBDeviceInit@i,c
 13357  003C7C                     l13823:
 13358                           
 13359                           ; BSR set to: 0
 13360  003C7C  0E02               	movlw	2
 13361  003C7E  6409               	cpfsgt	USBDeviceInit@i,c
 13362  003C80  D001               	goto	l143
 13363  003C82  D02E               	goto	u10630
 13364  003C84                     l143:
 13365                           
 13366                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 13367                           
 13368                           ; BSR set to: 0
 13369  003C84  5009               	movf	USBDeviceInit@i,w,c
 13370  003C86  0D02               	mullw	2
 13371  003C88  0EC5               	movlw	low _pBDTEntryIn
 13372  003C8A  24F3               	addwf	prodl,w,c
 13373  003C8C  6ED9               	movwf	fsr2l,c
 13374  003C8E  0E00               	movlw	high _pBDTEntryIn
 13375  003C90  20F4               	addwfc	prodh,w,c
 13376  003C92  6EDA               	movwf	fsr2h,c
 13377  003C94  0E00               	movlw	0
 13378  003C96  6EDE               	movwf	postinc2,c
 13379  003C98  0E00               	movlw	0
 13380  003C9A  6EDD               	movwf	postdec2,c
 13381                           
 13382                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 13383  003C9C  5009               	movf	USBDeviceInit@i,w,c
 13384  003C9E  0D02               	mullw	2
 13385  003CA0  0E40               	movlw	low _pBDTEntryOut
 13386  003CA2  24F3               	addwf	prodl,w,c
 13387  003CA4  6ED9               	movwf	fsr2l,c
 13388  003CA6  0E01               	movlw	high _pBDTEntryOut
 13389  003CA8  20F4               	addwfc	prodh,w,c
 13390  003CAA  6EDA               	movwf	fsr2h,c
 13391  003CAC  0E00               	movlw	0
 13392  003CAE  6EDE               	movwf	postinc2,c
 13393  003CB0  0E00               	movlw	0
 13394  003CB2  6EDD               	movwf	postdec2,c
 13395                           
 13396                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 13397  003CB4  5009               	movf	USBDeviceInit@i,w,c
 13398  003CB6  0D01               	mullw	1
 13399  003CB8  0E6B               	movlw	low _ep_data_in
 13400  003CBA  24F3               	addwf	prodl,w,c
 13401  003CBC  6ED9               	movwf	fsr2l,c
 13402  003CBE  0E01               	movlw	high _ep_data_in
 13403  003CC0  20F4               	addwfc	prodh,w,c
 13404  003CC2  6EDA               	movwf	fsr2h,c
 13405  003CC4  0E00               	movlw	0
 13406  003CC6  6EDF               	movwf	indf2,c
 13407                           
 13408                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 13409  003CC8  5009               	movf	USBDeviceInit@i,w,c
 13410  003CCA  0D01               	mullw	1
 13411  003CCC  0E68               	movlw	low _ep_data_out
 13412  003CCE  24F3               	addwf	prodl,w,c
 13413  003CD0  6ED9               	movwf	fsr2l,c
 13414  003CD2  0E01               	movlw	high _ep_data_out
 13415  003CD4  20F4               	addwfc	prodh,w,c
 13416  003CD6  6EDA               	movwf	fsr2h,c
 13417  003CD8  0E00               	movlw	0
 13418  003CDA  6EDF               	movwf	indf2,c
 13419  003CDC  2A09               	incf	USBDeviceInit@i,f,c
 13420  003CDE  D7CE               	goto	l13823
 13421  003CE0                     u10630:
 13422                           
 13423                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13424  003CE0  0E08               	movlw	8
 13425  003CE2  0100               	movlb	0	; () banked
 13426  003CE4  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 13427  003CE6  0E0D               	movlw	13
 13428  003CE8  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 13432  003CEA  0E16               	movlw	22
 13433  003CEC  010F               	movlb	15	; () banked
 13434  003CEE  6F26               	movwf	38,b	;volatile
 13435                           
 13436                           ; BSR set to: 15
 13437                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13438  003CF0  0E0D               	movlw	13
 13439  003CF2  010D               	movlb	13	; () banked
 13440  003CF4  6F03               	movwf	3,b	;volatile
 13441  003CF6  0E30               	movlw	48
 13442  003CF8  6F02               	movwf	2,b	;volatile
 13443                           
 13444                           ; BSR set to: 13
 13445                           ;usb_device.c: 359: BDT[0].CNT = 8;
 13446  003CFA  0E08               	movlw	8
 13447  003CFC  6F01               	movwf	1,b	;volatile
 13448                           
 13449                           ; BSR set to: 13
 13450                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 13451  003CFE  0E04               	movlw	4
 13452  003D00  6F00               	movwf	0,b	;volatile
 13453                           
 13454                           ; BSR set to: 13
 13455                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 13456  003D02  8F00               	bsf	0,7,b	;volatile
 13457                           
 13458                           ; BSR set to: 13
 13459                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 13460  003D04  0E00               	movlw	0
 13461  003D06  0100               	movlb	0	; () banked
 13462  003D08  6FFE               	movwf	_USBActiveConfiguration& (0+255),b
 13463                           
 13464                           ; BSR set to: 0
 13465                           ;usb_device.c: 366: USB1msTickCount = 0;
 13466  003D0A  0E00               	movlw	0
 13467  003D0C  0101               	movlb	1	; () banked
 13468  003D0E  6F5E               	movwf	_USB1msTickCount& (0+255),b
 13469  003D10  0E00               	movlw	0
 13470  003D12  6F5F               	movwf	(_USB1msTickCount+1)& (0+255),b
 13471  003D14  0E00               	movlw	0
 13472  003D16  6F60               	movwf	(_USB1msTickCount+2)& (0+255),b
 13473  003D18  0E00               	movlw	0
 13474  003D1A  6F61               	movwf	(_USB1msTickCount+3)& (0+255),b
 13475                           
 13476                           ; BSR set to: 1
 13477                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 13478  003D1C  0E00               	movlw	0
 13479  003D1E  0100               	movlb	0	; () banked
 13480  003D20  6FEA               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 13481                           
 13482                           ; BSR set to: 0
 13483                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 13484  003D22  0E00               	movlw	0
 13485  003D24  6E5F               	movwf	_USBDeviceState,c
 13486                           
 13487                           ; BSR set to: 0
 13488  003D26  0012               	return		;funcret
 13489  003D28                     __end_of_USBDeviceInit:
 13490                           	opt stack 0
 13491                           tblptru	equ	0xFF8
 13492                           tblptrh	equ	0xFF7
 13493                           tblptrl	equ	0xFF6
 13494                           tablat	equ	0xFF5
 13495                           prodh	equ	0xFF4
 13496                           prodl	equ	0xFF3
 13497                           intcon	equ	0xFF2
 13498                           intcon2	equ	0xFF1
 13499                           intcon3	equ	0xFF0
 13500                           postinc0	equ	0xFEE
 13501                           wreg	equ	0xFE8
 13502                           indf1	equ	0xFE7
 13503                           postdec1	equ	0xFE5
 13504                           plusw1	equ	0xFE3
 13505                           fsr1h	equ	0xFE2
 13506                           fsr1l	equ	0xFE1
 13507                           indf2	equ	0xFDF
 13508                           postinc2	equ	0xFDE
 13509                           postdec2	equ	0xFDD
 13510                           plusw2	equ	0xFDB
 13511                           fsr2h	equ	0xFDA
 13512                           fsr2l	equ	0xFD9
 13513                           status	equ	0xFD8
 13514                           
 13515 ;; *************** function _USBCtrlEPService *****************
 13516 ;; Defined at:
 13517 ;;		line 2374 in file "usb_device.c"
 13518 ;; Parameters:    Size  Location     Type
 13519 ;;		None
 13520 ;; Auto vars:     Size  Location     Type
 13521 ;;		None
 13522 ;; Return value:  Size  Location     Type
 13523 ;;                  1    wreg      void 
 13524 ;; Registers used:
 13525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 13526 ;; Tracked objects:
 13527 ;;		On entry : 0/0
 13528 ;;		On exit  : 0/0
 13529 ;;		Unchanged: 0/0
 13530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13533 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13534 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13535 ;;Total ram usage:        2 bytes
 13536 ;; Hardware stack levels used:    1
 13537 ;; Hardware stack levels required when called:    7
 13538 ;; This function calls:
 13539 ;;		_USBCtrlTrfInHandler
 13540 ;;		_USBCtrlTrfOutHandler
 13541 ;;		_USBCtrlTrfSetupHandler
 13542 ;;		_memcpy
 13543 ;; This function is called by:
 13544 ;;		_USBDeviceTasks
 13545 ;; This function uses a non-reentrant model
 13546 ;;
 13547                           
 13548                           	psect	text63
 13549  005962                     __ptext63:
 13550                           	opt stack 0
 13551  005962                     _USBCtrlEPService:
 13552                           	opt stack 22
 13553                           
 13554                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 13555                           
 13556                           ; BSR set to: 0
 13557                           ;incstack = 0
 13558  005962  0E2D               	movlw	45
 13559  005964  0100               	movlb	0	; () banked
 13560  005966  6FF0               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 13561                           
 13562                           ; BSR set to: 0
 13563                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 13564  005968  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 13565  00596C  0EFD               	movlw	253
 13566  00596E  161E               	andwf	??_USBCtrlEPService,f,c
 13567  005970  A4D8               	btfss	status,2,c
 13568  005972  D044               	goto	l309
 13569                           
 13570                           ; BSR set to: 0
 13571                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 13572  005974  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 13573  005978  90D8               	bcf	status,0,c
 13574  00597A  321E               	rrcf	??_USBCtrlEPService,f,c
 13575  00597C  0E3F               	movlw	63
 13576  00597E  161E               	andwf	??_USBCtrlEPService,f,c
 13577  005980  501E               	movf	??_USBCtrlEPService,w,c
 13578  005982  0D04               	mullw	4
 13579  005984  0E00               	movlw	0
 13580  005986  24F3               	addwf	prodl,w,c
 13581  005988  6FDB               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13582  00598A  0E0D               	movlw	13
 13583  00598C  20F4               	addwfc	prodh,w,c
 13584  00598E  6FDC               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13585                           
 13586                           ; BSR set to: 0
 13587                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13588  005990  C0DB  F0D9         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13589  005994  C0DC  F0DA         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13590                           
 13591                           ; BSR set to: 0
 13592                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 13593  005998  0E04               	movlw	4
 13594  00599A  19D9               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 13595  00599C  6FD9               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 13596  00599E  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13597  0059A0  6FDA               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 13598                           
 13599                           ; BSR set to: 0
 13600                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 13601  0059A2  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13602  0059A6  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13603  0059AA  30DF               	rrcf	223,w,c
 13604  0059AC  32E8               	rrcf	wreg,f,c
 13605  0059AE  0B0F               	andlw	15
 13606  0059B0  0A0D               	xorlw	13
 13607  0059B2  A4D8               	btfss	status,2,c
 13608  0059B4  D020               	goto	l310
 13609                           
 13610                           ; BSR set to: 0
 13611                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 13612  0059B6  0E30               	movlw	48
 13613  0059B8  6E01               	movwf	memcpy@d1,c
 13614  0059BA  0E0D               	movlw	13
 13615  0059BC  6E02               	movwf	memcpy@d1+1,c
 13616  0059BE  EE20 F002          	lfsr	2,2
 13617  0059C2  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13618  0059C4  26D9               	addwf	fsr2l,f,c
 13619  0059C6  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13620  0059C8  22DA               	addwfc	fsr2h,f,c
 13621  0059CA  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 13622  0059CE  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 13623  0059D2  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 13624  0059D6  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 13625  0059DA  5003               	movf	memcpy@s1,w,c
 13626  0059DC  1004               	iorwf	memcpy@s1+1,w,c
 13627  0059DE  A4D8               	btfss	status,2,c
 13628  0059E0  0E20               	movlw	32
 13629  0059E2  6E05               	movwf	memcpy@s1+2,c
 13630  0059E4  0E00               	movlw	0
 13631  0059E6  6E07               	movwf	memcpy@n+1,c
 13632  0059E8  0E08               	movlw	8
 13633  0059EA  6E06               	movwf	memcpy@n,c
 13634  0059EC  EC3E  F037         	call	_memcpy	;wreg free
 13635                           
 13636                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 13637  0059F0  EC56  F031         	call	_USBCtrlTrfSetupHandler	;wreg free
 13638                           
 13639                           ;usb_device.c: 2411: }
 13640  0059F4  0012               	return	
 13641  0059F6                     l310:
 13642                           
 13643                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 13644  0059F6  EC03  F038         	call	_USBCtrlTrfOutHandler	;wreg free
 13645                           
 13646                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 13647  0059FA  0012               	return	
 13648  0059FC                     l309:
 13649                           
 13650                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 13651  0059FC  0100               	movlb	0	; () banked
 13652  0059FE  51FD               	movf	_USTATcopy& (0+255),w,b
 13653  005A00  0BFD               	andlw	253
 13654  005A02  0A04               	xorlw	4
 13655  005A04  A4D8               	btfss	status,2,c
 13656  005A06  0012               	return	
 13657                           
 13658                           ; BSR set to: 0
 13659                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 13660  005A08  ECB3  F029         	call	_USBCtrlTrfInHandler	;wreg free
 13661  005A0C  0012               	return	
 13662  005A0E                     __end_of_USBCtrlEPService:
 13663                           	opt stack 0
 13664                           tblptru	equ	0xFF8
 13665                           tblptrh	equ	0xFF7
 13666                           tblptrl	equ	0xFF6
 13667                           tablat	equ	0xFF5
 13668                           prodh	equ	0xFF4
 13669                           prodl	equ	0xFF3
 13670                           intcon	equ	0xFF2
 13671                           intcon2	equ	0xFF1
 13672                           intcon3	equ	0xFF0
 13673                           postinc0	equ	0xFEE
 13674                           wreg	equ	0xFE8
 13675                           indf1	equ	0xFE7
 13676                           postdec1	equ	0xFE5
 13677                           plusw1	equ	0xFE3
 13678                           fsr1h	equ	0xFE2
 13679                           fsr1l	equ	0xFE1
 13680                           indf2	equ	0xFDF
 13681                           postinc2	equ	0xFDE
 13682                           postdec2	equ	0xFDD
 13683                           plusw2	equ	0xFDB
 13684                           fsr2h	equ	0xFDA
 13685                           fsr2l	equ	0xFD9
 13686                           status	equ	0xFD8
 13687                           
 13688 ;; *************** function _USBCtrlTrfSetupHandler *****************
 13689 ;; Defined at:
 13690 ;;		line 2467 in file "usb_device.c"
 13691 ;; Parameters:    Size  Location     Type
 13692 ;;		None
 13693 ;; Auto vars:     Size  Location     Type
 13694 ;;		None
 13695 ;; Return value:  Size  Location     Type
 13696 ;;                  1    wreg      void 
 13697 ;; Registers used:
 13698 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13699 ;; Tracked objects:
 13700 ;;		On entry : 0/0
 13701 ;;		On exit  : 0/0
 13702 ;;		Unchanged: 0/0
 13703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13708 ;;Total ram usage:        0 bytes
 13709 ;; Hardware stack levels used:    1
 13710 ;; Hardware stack levels required when called:    6
 13711 ;; This function calls:
 13712 ;;		_USBCheckStdRequest
 13713 ;;		_USBCtrlEPServiceComplete
 13714 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13715 ;; This function is called by:
 13716 ;;		_USBCtrlEPService
 13717 ;; This function uses a non-reentrant model
 13718 ;;
 13719                           
 13720                           	psect	text64
 13721  0062AC                     __ptext64:
 13722                           	opt stack 0
 13723  0062AC                     _USBCtrlTrfSetupHandler:
 13724                           	opt stack 22
 13725                           
 13726                           ;usb_device.c: 2472: shortPacketStatus = 0;
 13727                           
 13728                           ;incstack = 0
 13729  0062AC  0E00               	movlw	0
 13730  0062AE  0100               	movlb	0	; () banked
 13731  0062B0  6FF6               	movwf	_shortPacketStatus& (0+255),b
 13732                           
 13733                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 13734  0062B2  0E00               	movlw	0
 13735  0062B4  6FEF               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 13736                           
 13737                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 13738  0062B6  0E00               	movlw	0
 13739  0062B8  6FEC               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13740                           
 13741                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 13742  0062BA  0E00               	movlw	0
 13743  0062BC  6FEB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13744                           
 13745                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 13746  0062BE  0E00               	movlw	0
 13747  0062C0  6FF1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13748                           
 13749                           ;usb_device.c: 2477: controlTransferState = 0;
 13750  0062C2  0E00               	movlw	0
 13751  0062C4  6FF5               	movwf	_controlTransferState& (0+255),b
 13752                           
 13753                           ; BSR set to: 0
 13754                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 13755  0062C6  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 13756  0062CA  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13757  0062CE  0E7F               	movlw	127
 13758  0062D0  16DF               	andwf	indf2,f,c
 13759                           
 13760                           ; BSR set to: 0
 13761                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 13762  0062D2  0E04               	movlw	4
 13763  0062D4  19C5               	xorwf	_pBDTEntryIn& (0+255),w,b
 13764  0062D6  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 13765  0062D8  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13766  0062DA  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13767                           
 13768                           ; BSR set to: 0
 13769                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 13770  0062DC  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 13771  0062E0  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13772  0062E4  0E7F               	movlw	127
 13773  0062E6  16DF               	andwf	indf2,f,c
 13774                           
 13775                           ; BSR set to: 0
 13776                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 13777  0062E8  0E04               	movlw	4
 13778  0062EA  19C5               	xorwf	_pBDTEntryIn& (0+255),w,b
 13779  0062EC  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 13780  0062EE  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13781  0062F0  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13782                           
 13783                           ; BSR set to: 0
 13784                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 13785  0062F2  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13786  0062F6  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13787  0062FA  0E7F               	movlw	127
 13788  0062FC  16DF               	andwf	indf2,f,c
 13789                           
 13790                           ; BSR set to: 0
 13791                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 13792  0062FE  0E00               	movlw	0
 13793  006300  6FC2               	movwf	(_inPipes+3)& (0+255),b
 13794                           
 13795                           ; BSR set to: 0
 13796                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 13797  006302  0E00               	movlw	0
 13798  006304  6FC4               	movwf	(_inPipes+5)& (0+255),b
 13799  006306  0E00               	movlw	0
 13800  006308  6FC3               	movwf	(_inPipes+4)& (0+255),b
 13801                           
 13802                           ; BSR set to: 0
 13803                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 13804  00630A  0E00               	movlw	0
 13805  00630C  0101               	movlb	1	; () banked
 13806  00630E  6F34               	movwf	(_outPipes+3)& (0+255),b
 13807                           
 13808                           ; BSR set to: 1
 13809                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 13810  006310  0E00               	movlw	0
 13811  006312  6F36               	movwf	(_outPipes+5)& (0+255),b
 13812  006314  0E00               	movlw	0
 13813  006316  6F35               	movwf	(_outPipes+4)& (0+255),b
 13814                           
 13815                           ; BSR set to: 1
 13816                           ;usb_device.c: 2502: USBCheckStdRequest();
 13817  006318  ECFF  F024         	call	_USBCheckStdRequest	;wreg free
 13818                           
 13819                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 13820  00631C  0E00               	movlw	0
 13821  00631E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13822  006320  0E03               	movlw	3
 13823  006322  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13824  006324  0E00               	movlw	0
 13825  006326  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13826  006328  0E00               	movlw	0
 13827  00632A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13828  00632C  0E00               	movlw	0
 13829  00632E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13830  006330  0E00               	movlw	0
 13831  006332  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13832  006334  ECB9  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13833                           
 13834                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 13835  006338  EC7F  F024         	call	_USBCtrlEPServiceComplete	;wreg free
 13836  00633C  0012               	return		;funcret
 13837  00633E                     __end_of_USBCtrlTrfSetupHandler:
 13838                           	opt stack 0
 13839                           tblptru	equ	0xFF8
 13840                           tblptrh	equ	0xFF7
 13841                           tblptrl	equ	0xFF6
 13842                           tablat	equ	0xFF5
 13843                           prodh	equ	0xFF4
 13844                           prodl	equ	0xFF3
 13845                           intcon	equ	0xFF2
 13846                           intcon2	equ	0xFF1
 13847                           intcon3	equ	0xFF0
 13848                           postinc0	equ	0xFEE
 13849                           wreg	equ	0xFE8
 13850                           indf1	equ	0xFE7
 13851                           postdec1	equ	0xFE5
 13852                           plusw1	equ	0xFE3
 13853                           fsr1h	equ	0xFE2
 13854                           fsr1l	equ	0xFE1
 13855                           indf2	equ	0xFDF
 13856                           postinc2	equ	0xFDE
 13857                           postdec2	equ	0xFDD
 13858                           plusw2	equ	0xFDB
 13859                           fsr2h	equ	0xFDA
 13860                           fsr2l	equ	0xFD9
 13861                           status	equ	0xFD8
 13862                           
 13863 ;; *************** function _USBCtrlEPServiceComplete *****************
 13864 ;; Defined at:
 13865 ;;		line 1618 in file "usb_device.c"
 13866 ;; Parameters:    Size  Location     Type
 13867 ;;		None
 13868 ;; Auto vars:     Size  Location     Type
 13869 ;;		None
 13870 ;; Return value:  Size  Location     Type
 13871 ;;                  1    wreg      void 
 13872 ;; Registers used:
 13873 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13874 ;; Tracked objects:
 13875 ;;		On entry : 0/0
 13876 ;;		On exit  : 0/0
 13877 ;;		Unchanged: 0/0
 13878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13883 ;;Total ram usage:        0 bytes
 13884 ;; Hardware stack levels used:    1
 13885 ;; Hardware stack levels required when called:    2
 13886 ;; This function calls:
 13887 ;;		_USBCtrlEPAllowDataStage
 13888 ;;		_USBCtrlEPAllowStatusStage
 13889 ;; This function is called by:
 13890 ;;		_USBCtrlTrfSetupHandler
 13891 ;; This function uses a non-reentrant model
 13892 ;;
 13893                           
 13894                           	psect	text65
 13895  0048FE                     __ptext65:
 13896                           	opt stack 0
 13897  0048FE                     _USBCtrlEPServiceComplete:
 13898                           	opt stack 25
 13899                           
 13900                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 13901                           
 13902                           ;incstack = 0
 13903  0048FE  9865               	bcf	3941,4,c	;volatile
 13904                           
 13905                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 13906  004900  0100               	movlb	0	; () banked
 13907  004902  BFC2               	btfsc	(_inPipes+3)& (0+255),7,b
 13908  004904  D03C               	goto	l219
 13909                           
 13910                           ; BSR set to: 0
 13911                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 13912  004906  0101               	movlb	1	; () banked
 13913  004908  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 13914  00490A  D00D               	goto	l220
 13915                           
 13916                           ; BSR set to: 1
 13917                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 13918  00490C  0E02               	movlw	2
 13919  00490E  0100               	movlb	0	; () banked
 13920  004910  6FF5               	movwf	_controlTransferState& (0+255),b
 13921                           
 13922                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 13923  004912  51EB               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 13924  004914  B4D8               	btfsc	status,2,c
 13925                           
 13926                           ; BSR set to: 0
 13927                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 13928  004916  ECF8  F02E         	call	_USBCtrlEPAllowDataStage	;wreg free
 13929                           
 13930                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 13931  00491A  0E00               	movlw	0
 13932  00491C  0100               	movlb	0	; () banked
 13933  00491E  6FED               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13934                           
 13935                           ; BSR set to: 0
 13936                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 13937  004920  0E00               	movlw	0
 13938  004922  6FEE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13939                           
 13940                           ;usb_device.c: 1654: }
 13941  004924  0012               	return	
 13942  004926                     l220:
 13943                           
 13944                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 13945                           
 13946                           ; BSR set to: 0
 13947  004926  0100               	movlb	0	; () banked
 13948  004928  EE20 F001          	lfsr	2,1
 13949  00492C  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13950  00492E  26D9               	addwf	fsr2l,f,c
 13951  004930  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13952  004932  22DA               	addwfc	fsr2h,f,c
 13953  004934  0E08               	movlw	8
 13954  004936  6EDF               	movwf	indf2,c
 13955                           
 13956                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13957  004938  EE20 F002          	lfsr	2,2
 13958  00493C  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13959  00493E  26D9               	addwf	fsr2l,f,c
 13960  004940  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13961  004942  22DA               	addwfc	fsr2h,f,c
 13962  004944  0E30               	movlw	48
 13963  004946  6EDE               	movwf	postinc2,c
 13964  004948  0E0D               	movlw	13
 13965  00494A  6EDD               	movwf	postdec2,c
 13966                           
 13967                           ; BSR set to: 0
 13968                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13969  00494C  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13970  004950  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13971  004954  0E0C               	movlw	12
 13972  004956  6EDF               	movwf	indf2,c
 13973                           
 13974                           ; BSR set to: 0
 13975                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13976  004958  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13977  00495C  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13978  004960  0E00               	movlw	0
 13979  004962  8EDB               	bsf	plusw2,7,c
 13980                           
 13981                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 13982  004964  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 13983  004968  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13984  00496C  0E04               	movlw	4
 13985  00496E  6EDF               	movwf	indf2,c
 13986                           
 13987                           ; BSR set to: 0
 13988                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13989  004970  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 13990  004974  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13991  004978  0E00               	movlw	0
 13992  00497A  8EDB               	bsf	plusw2,7,c
 13993                           
 13994                           ; BSR set to: 0
 13995                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 13996  00497C  0012               	return	
 13997  00497E                     l219:
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 14001  00497E  010D               	movlb	13	; () banked
 14002  004980  AF30               	btfss	48,7,b	;volatile
 14003  004982  D012               	goto	l224
 14004                           
 14005                           ; BSR set to: 13
 14006                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 14007  004984  0E01               	movlw	1
 14008  004986  0100               	movlb	0	; () banked
 14009  004988  6FF5               	movwf	_controlTransferState& (0+255),b
 14010                           
 14011                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 14012  00498A  51EC               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 14013  00498C  B4D8               	btfsc	status,2,c
 14014                           
 14015                           ; BSR set to: 0
 14016                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 14017  00498E  ECF8  F02E         	call	_USBCtrlEPAllowDataStage	;wreg free
 14018                           
 14019                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 14020  004992  0E00               	movlw	0
 14021  004994  0100               	movlb	0	; () banked
 14022  004996  6FED               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 14023                           
 14024                           ; BSR set to: 0
 14025                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 14026  004998  0E00               	movlw	0
 14027  00499A  6FEE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 14028                           
 14029                           ; BSR set to: 0
 14030                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 14031  00499C  51EF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 14032  00499E  A4D8               	btfss	status,2,c
 14033  0049A0  0012               	return	
 14034                           
 14035                           ; BSR set to: 0
 14036                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 14037  0049A2  EC17  F02A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14038                           
 14039                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 14040  0049A6  0012               	return	
 14041  0049A8                     l224:
 14042                           
 14043                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 14044  0049A8  0E02               	movlw	2
 14045  0049AA  0100               	movlb	0	; () banked
 14046  0049AC  6FF5               	movwf	_controlTransferState& (0+255),b
 14047                           
 14048                           ; BSR set to: 0
 14049                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 14050  0049AE  EE20 F001          	lfsr	2,1
 14051  0049B2  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14052  0049B4  26D9               	addwf	fsr2l,f,c
 14053  0049B6  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14054  0049B8  22DA               	addwfc	fsr2h,f,c
 14055  0049BA  0E08               	movlw	8
 14056  0049BC  6EDF               	movwf	indf2,c
 14057                           
 14058                           ; BSR set to: 0
 14059                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 14060  0049BE  EE20 F002          	lfsr	2,2
 14061  0049C2  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14062  0049C4  26D9               	addwf	fsr2l,f,c
 14063  0049C6  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14064  0049C8  22DA               	addwfc	fsr2h,f,c
 14065  0049CA  0E30               	movlw	48
 14066  0049CC  6EDE               	movwf	postinc2,c
 14067  0049CE  0E0D               	movlw	13
 14068  0049D0  6EDD               	movwf	postdec2,c
 14069                           
 14070                           ; BSR set to: 0
 14071                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 14072  0049D2  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14073  0049D6  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14074  0049DA  0E04               	movlw	4
 14075  0049DC  6EDF               	movwf	indf2,c
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14079  0049DE  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14080  0049E2  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14081  0049E6  0E00               	movlw	0
 14082  0049E8  8EDB               	bsf	plusw2,7,c
 14083                           
 14084                           ; BSR set to: 0
 14085                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 14086  0049EA  0E00               	movlw	0
 14087  0049EC  6FED               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 14088                           
 14089                           ; BSR set to: 0
 14090                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 14091  0049EE  0E00               	movlw	0
 14092  0049F0  6FEE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 14093                           
 14094                           ; BSR set to: 0
 14095                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 14096  0049F2  51EF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 14097  0049F4  A4D8               	btfss	status,2,c
 14098  0049F6  0012               	return	
 14099                           
 14100                           ; BSR set to: 0
 14101                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 14102  0049F8  EC17  F02A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14103  0049FC  0012               	return	
 14104  0049FE                     __end_of_USBCtrlEPServiceComplete:
 14105                           	opt stack 0
 14106                           tblptru	equ	0xFF8
 14107                           tblptrh	equ	0xFF7
 14108                           tblptrl	equ	0xFF6
 14109                           tablat	equ	0xFF5
 14110                           prodh	equ	0xFF4
 14111                           prodl	equ	0xFF3
 14112                           intcon	equ	0xFF2
 14113                           intcon2	equ	0xFF1
 14114                           intcon3	equ	0xFF0
 14115                           postinc0	equ	0xFEE
 14116                           wreg	equ	0xFE8
 14117                           indf1	equ	0xFE7
 14118                           postdec1	equ	0xFE5
 14119                           plusw1	equ	0xFE3
 14120                           fsr1h	equ	0xFE2
 14121                           fsr1l	equ	0xFE1
 14122                           indf2	equ	0xFDF
 14123                           postinc2	equ	0xFDE
 14124                           postdec2	equ	0xFDD
 14125                           plusw2	equ	0xFDB
 14126                           fsr2h	equ	0xFDA
 14127                           fsr2l	equ	0xFD9
 14128                           status	equ	0xFD8
 14129                           
 14130 ;; *************** function _USBCtrlEPAllowDataStage *****************
 14131 ;; Defined at:
 14132 ;;		line 1490 in file "usb_device.c"
 14133 ;; Parameters:    Size  Location     Type
 14134 ;;		None
 14135 ;; Auto vars:     Size  Location     Type
 14136 ;;		None
 14137 ;; Return value:  Size  Location     Type
 14138 ;;                  1    wreg      void 
 14139 ;; Registers used:
 14140 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14141 ;; Tracked objects:
 14142 ;;		On entry : 0/0
 14143 ;;		On exit  : 0/0
 14144 ;;		Unchanged: 0/0
 14145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14150 ;;Total ram usage:        0 bytes
 14151 ;; Hardware stack levels used:    1
 14152 ;; Hardware stack levels required when called:    1
 14153 ;; This function calls:
 14154 ;;		_USBCtrlTrfTxService
 14155 ;; This function is called by:
 14156 ;;		_USBCtrlEPServiceComplete
 14157 ;; This function uses a non-reentrant model
 14158 ;;
 14159                           
 14160                           	psect	text66
 14161  005DF0                     __ptext66:
 14162                           	opt stack 0
 14163  005DF0                     _USBCtrlEPAllowDataStage:
 14164                           	opt stack 25
 14165                           
 14166                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 14167                           
 14168                           ;incstack = 0
 14169  005DF0  0E00               	movlw	0
 14170  005DF2  0100               	movlb	0	; () banked
 14171  005DF4  6FEC               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 14172                           
 14173                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 14174  005DF6  0E00               	movlw	0
 14175  005DF8  6FEB               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 14176                           
 14177                           ; BSR set to: 0
 14178                           ;usb_device.c: 1495: if(controlTransferState == 2)
 14179  005DFA  0E02               	movlw	2
 14180  005DFC  19F5               	xorwf	_controlTransferState& (0+255),w,b
 14181  005DFE  A4D8               	btfss	status,2,c
 14182  005E00  D01F               	goto	l208
 14183                           
 14184                           ; BSR set to: 0
 14185                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 14186  005E02  EE20 F001          	lfsr	2,1
 14187  005E06  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14188  005E08  26D9               	addwf	fsr2l,f,c
 14189  005E0A  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14190  005E0C  22DA               	addwfc	fsr2h,f,c
 14191  005E0E  0E08               	movlw	8
 14192  005E10  6EDF               	movwf	indf2,c
 14193                           
 14194                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 14195  005E12  EE20 F002          	lfsr	2,2
 14196  005E16  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14197  005E18  26D9               	addwf	fsr2l,f,c
 14198  005E1A  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14199  005E1C  22DA               	addwfc	fsr2h,f,c
 14200  005E1E  0E38               	movlw	56
 14201  005E20  6EDE               	movwf	postinc2,c
 14202  005E22  0E0D               	movlw	13
 14203  005E24  6EDD               	movwf	postdec2,c
 14204                           
 14205                           ; BSR set to: 0
 14206                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 14207  005E26  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14208  005E2A  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14209  005E2E  0E48               	movlw	72
 14210  005E30  6EDF               	movwf	indf2,c
 14211                           
 14212                           ; BSR set to: 0
 14213                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14214  005E32  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14215  005E36  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14216  005E3A  0E00               	movlw	0
 14217  005E3C  8EDB               	bsf	plusw2,7,c
 14218                           
 14219                           ;usb_device.c: 1502: }
 14220  005E3E  0012               	return	
 14221  005E40                     l208:
 14222                           
 14223                           ; BSR set to: 0
 14224                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 14225                           
 14226                           ; BSR set to: 0
 14227  005E40  51C3               	movf	(_inPipes+4)& (0+255),w,b
 14228  005E42  010D               	movlb	13	; () banked
 14229  005E44  5D36               	subwf	54,w,b	;volatile
 14230  005E46  0100               	movlb	0	; () banked
 14231  005E48  51C4               	movf	(_inPipes+5)& (0+255),w,b
 14232  005E4A  010D               	movlb	13	; () banked
 14233  005E4C  5937               	subwfb	55,w,b	;volatile
 14234  005E4E  B0D8               	btfsc	status,0,c
 14235  005E50  D004               	goto	l210
 14236                           
 14237                           ; BSR set to: 13
 14238                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 14239  005E52  CD36 F0C3          	movff	3382,_inPipes+4	;volatile
 14240  005E56  CD37 F0C4          	movff	3383,_inPipes+5	;volatile
 14241  005E5A                     l210:
 14242                           
 14243                           ; BSR set to: 13
 14244                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 14245                           
 14246                           ; BSR set to: 13
 14247  005E5A  EC10  F028         	call	_USBCtrlTrfTxService	;wreg free
 14248                           
 14249                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 14250  005E5E  0100               	movlb	0	; () banked
 14251  005E60  EE20 F002          	lfsr	2,2
 14252  005E64  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 14253  005E66  26D9               	addwf	fsr2l,f,c
 14254  005E68  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 14255  005E6A  22DA               	addwfc	fsr2h,f,c
 14256  005E6C  0E38               	movlw	56
 14257  005E6E  6EDE               	movwf	postinc2,c
 14258  005E70  0E0D               	movlw	13
 14259  005E72  6EDD               	movwf	postdec2,c
 14260                           
 14261                           ; BSR set to: 0
 14262                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14263  005E74  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 14264  005E78  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14265  005E7C  0E48               	movlw	72
 14266  005E7E  6EDF               	movwf	indf2,c
 14267                           
 14268                           ; BSR set to: 0
 14269                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14270  005E80  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 14271  005E84  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14272  005E88  0E00               	movlw	0
 14273  005E8A  8EDB               	bsf	plusw2,7,c
 14274  005E8C  0012               	return	
 14275  005E8E                     __end_of_USBCtrlEPAllowDataStage:
 14276                           	opt stack 0
 14277                           tblptru	equ	0xFF8
 14278                           tblptrh	equ	0xFF7
 14279                           tblptrl	equ	0xFF6
 14280                           tablat	equ	0xFF5
 14281                           prodh	equ	0xFF4
 14282                           prodl	equ	0xFF3
 14283                           intcon	equ	0xFF2
 14284                           intcon2	equ	0xFF1
 14285                           intcon3	equ	0xFF0
 14286                           postinc0	equ	0xFEE
 14287                           wreg	equ	0xFE8
 14288                           indf1	equ	0xFE7
 14289                           postdec1	equ	0xFE5
 14290                           plusw1	equ	0xFE3
 14291                           fsr1h	equ	0xFE2
 14292                           fsr1l	equ	0xFE1
 14293                           indf2	equ	0xFDF
 14294                           postinc2	equ	0xFDE
 14295                           postdec2	equ	0xFDD
 14296                           plusw2	equ	0xFDB
 14297                           fsr2h	equ	0xFDA
 14298                           fsr2l	equ	0xFD9
 14299                           status	equ	0xFD8
 14300                           
 14301 ;; *************** function _USBCheckStdRequest *****************
 14302 ;; Defined at:
 14303 ;;		line 2688 in file "usb_device.c"
 14304 ;; Parameters:    Size  Location     Type
 14305 ;;		None
 14306 ;; Auto vars:     Size  Location     Type
 14307 ;;		None
 14308 ;; Return value:  Size  Location     Type
 14309 ;;                  1    wreg      void 
 14310 ;; Registers used:
 14311 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14312 ;; Tracked objects:
 14313 ;;		On entry : 0/0
 14314 ;;		On exit  : 0/0
 14315 ;;		Unchanged: 0/0
 14316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14321 ;;Total ram usage:        0 bytes
 14322 ;; Hardware stack levels used:    1
 14323 ;; Hardware stack levels required when called:    5
 14324 ;; This function calls:
 14325 ;;		_USBStdFeatureReqHandler
 14326 ;;		_USBStdGetDscHandler
 14327 ;;		_USBStdGetStatusHandler
 14328 ;;		_USBStdSetCfgHandler
 14329 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14330 ;; This function is called by:
 14331 ;;		_USBCtrlTrfSetupHandler
 14332 ;; This function uses a non-reentrant model
 14333 ;;
 14334                           
 14335                           	psect	text67
 14336  0049FE                     __ptext67:
 14337                           	opt stack 0
 14338  0049FE                     _USBCheckStdRequest:
 14339                           	opt stack 22
 14340                           
 14341                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 14342                           
 14343                           ; BSR set to: 0
 14344                           ;incstack = 0
 14345  0049FE  010D               	movlb	13	; () banked
 14346  004A00  3930               	swapf	48,w,b	;volatile
 14347  004A02  32E8               	rrcf	wreg,f,c
 14348  004A04  0B03               	andlw	3
 14349  004A06  0900               	iorlw	0
 14350  004A08  A4D8               	btfss	status,2,c
 14351  004A0A  0012               	return	
 14352  004A0C  D047               	goto	l343
 14353  004A0E                     l344:
 14354                           
 14355                           ; BSR set to: 13
 14356                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 14357  004A0E  0100               	movlb	0	; () banked
 14358  004A10  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14359                           
 14360                           ; BSR set to: 0
 14361                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 14362  004A12  0E08               	movlw	8
 14363  004A14  6E5F               	movwf	_USBDeviceState,c
 14364                           
 14365                           ;usb_device.c: 2698: break;
 14366  004A16  0012               	return	
 14367  004A18                     
 14368                           ;usb_device.c: 2700: USBStdGetDscHandler();
 14369                           
 14370                           ; BSR set to: 0
 14371  004A18  EC94  F01E         	call	_USBStdGetDscHandler	;wreg free
 14372                           
 14373                           ;usb_device.c: 2701: break;
 14374  004A1C  0012               	return	
 14375  004A1E                     
 14376                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 14377  004A1E  EC33  F027         	call	_USBStdSetCfgHandler	;wreg free
 14378                           
 14379                           ;usb_device.c: 2704: break;
 14380  004A22  0012               	return	
 14381  004A24                     
 14382                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 14383  004A24  0EFE               	movlw	low _USBActiveConfiguration
 14384  004A26  0100               	movlb	0	; () banked
 14385  004A28  6FBF               	movwf	_inPipes& (0+255),b
 14386  004A2A  0E00               	movlw	high _USBActiveConfiguration
 14387  004A2C  6FC0               	movwf	(_inPipes+1)& (0+255),b
 14388                           
 14389                           ; BSR set to: 0
 14390                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14391  004A2E  81C2               	bsf	(_inPipes+3)& (0+255),0,b
 14392                           
 14393                           ; BSR set to: 0
 14394                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 14395  004A30  0E01               	movlw	1
 14396  004A32  6FC3               	movwf	(_inPipes+4)& (0+255),b
 14397                           
 14398                           ; BSR set to: 0
 14399                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 14400  004A34  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14401                           
 14402                           ;usb_device.c: 2710: break;
 14403  004A36  0012               	return	
 14404  004A38                     
 14405                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 14406                           
 14407                           ; BSR set to: 0
 14408  004A38  EC07  F02D         	call	_USBStdGetStatusHandler	;wreg free
 14409                           
 14410                           ;usb_device.c: 2713: break;
 14411  004A3C  0012               	return	
 14412  004A3E                     
 14413                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 14414  004A3E  EC24  F00C         	call	_USBStdFeatureReqHandler	;wreg free
 14415                           
 14416                           ;usb_device.c: 2717: break;
 14417  004A42  0012               	return	
 14418  004A44                     
 14419                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 14420  004A44  010D               	movlb	13	; () banked
 14421  004A46  5134               	movf	52,w,b	;volatile
 14422  004A48  0D01               	mullw	1
 14423  004A4A  0ED6               	movlw	low _USBAlternateInterface
 14424  004A4C  24F3               	addwf	prodl,w,c
 14425  004A4E  0100               	movlb	0	; () banked
 14426  004A50  6FBF               	movwf	_inPipes& (0+255),b
 14427  004A52  0E01               	movlw	high _USBAlternateInterface
 14428  004A54  20F4               	addwfc	prodh,w,c
 14429  004A56  6FC0               	movwf	(_inPipes+1)& (0+255),b
 14430                           
 14431                           ; BSR set to: 0
 14432                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14433  004A58  81C2               	bsf	(_inPipes+3)& (0+255),0,b
 14434                           
 14435                           ; BSR set to: 0
 14436                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 14437  004A5A  0E01               	movlw	1
 14438  004A5C  6FC3               	movwf	(_inPipes+4)& (0+255),b
 14439                           
 14440                           ; BSR set to: 0
 14441                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 14442  004A5E  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14443                           
 14444                           ;usb_device.c: 2723: break;
 14445  004A60  0012               	return	
 14446  004A62                     l353:
 14447                           
 14448                           ; BSR set to: 13
 14449                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 14450  004A62  0100               	movlb	0	; () banked
 14451  004A64  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14452                           
 14453                           ; BSR set to: 0
 14454                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 14455  004A66  010D               	movlb	13	; () banked
 14456  004A68  5134               	movf	52,w,b	;volatile
 14457  004A6A  0D01               	mullw	1
 14458  004A6C  0ED6               	movlw	low _USBAlternateInterface
 14459  004A6E  24F3               	addwf	prodl,w,c
 14460  004A70  6ED9               	movwf	fsr2l,c
 14461  004A72  0E01               	movlw	high _USBAlternateInterface
 14462  004A74  20F4               	addwfc	prodh,w,c
 14463  004A76  6EDA               	movwf	fsr2h,c
 14464  004A78  CD32 FFDF          	movff	3378,indf2	;volatile
 14465                           
 14466                           ;usb_device.c: 2727: break;
 14467  004A7C  0012               	return	
 14468  004A7E                     
 14469                           ; BSR set to: 13
 14470                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 14471                           
 14472                           ; BSR set to: 13
 14473  004A7E  0E00               	movlw	0
 14474  004A80  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14475  004A82  0E02               	movlw	2
 14476  004A84  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14477  004A86  0E00               	movlw	0
 14478  004A88  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14479  004A8A  0E00               	movlw	0
 14480  004A8C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14481  004A8E  0E00               	movlw	0
 14482  004A90  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14483  004A92  0E00               	movlw	0
 14484  004A94  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14485  004A96  ECB9  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14486                           
 14487                           ;usb_device.c: 2734: }
 14488                           
 14489                           ;usb_device.c: 2733: break;
 14490                           
 14491                           ;usb_device.c: 2732: default:
 14492                           
 14493                           ;usb_device.c: 2731: case 12:
 14494                           
 14495                           ;usb_device.c: 2730: break;
 14496  004A9A  0012               	return	
 14497  004A9C                     l343:
 14498  004A9C  010D               	movlb	13	; () banked
 14499  004A9E  5131               	movf	49,w,b	;volatile
 14500                           
 14501                           ; Switch size 1, requested type "space"
 14502                           ; Number of cases is 11, Range of values is 0 to 12
 14503                           ; switch strategies available:
 14504                           ; Name         Instructions Cycles
 14505                           ; simple_byte           34    18 (average)
 14506                           ;	Chosen strategy is simple_byte
 14507  004AA0  0A00               	xorlw	0	; case 0
 14508  004AA2  B4D8               	btfsc	status,2,c
 14509  004AA4  D7C9               	goto	l349
 14510  004AA6  0A01               	xorlw	1	; case 1
 14511  004AA8  B4D8               	btfsc	status,2,c
 14512  004AAA  D7C9               	goto	l350
 14513  004AAC  0A02               	xorlw	2	; case 3
 14514  004AAE  B4D8               	btfsc	status,2,c
 14515  004AB0  D7C6               	goto	l350
 14516  004AB2  0A06               	xorlw	6	; case 5
 14517  004AB4  B4D8               	btfsc	status,2,c
 14518  004AB6  D7AB               	goto	l344
 14519  004AB8  0A03               	xorlw	3	; case 6
 14520  004ABA  B4D8               	btfsc	status,2,c
 14521  004ABC  D7AD               	goto	l346
 14522  004ABE  0A01               	xorlw	1	; case 7
 14523  004AC0  B4D8               	btfsc	status,2,c
 14524  004AC2  D7DD               	goto	l354
 14525  004AC4  0A0F               	xorlw	15	; case 8
 14526  004AC6  B4D8               	btfsc	status,2,c
 14527  004AC8  D7AD               	goto	l348
 14528  004ACA  0A01               	xorlw	1	; case 9
 14529  004ACC  B4D8               	btfsc	status,2,c
 14530  004ACE  D7A7               	goto	l347
 14531  004AD0  0A03               	xorlw	3	; case 10
 14532  004AD2  B4D8               	btfsc	status,2,c
 14533  004AD4  D7B7               	goto	l352
 14534  004AD6  0A01               	xorlw	1	; case 11
 14535  004AD8  B4D8               	btfsc	status,2,c
 14536  004ADA  D7C3               	goto	l353
 14537  004ADC  0A07               	xorlw	7	; case 12
 14538  004ADE  0012               	return	
 14539  004AE0                     __end_of_USBCheckStdRequest:
 14540                           	opt stack 0
 14541                           tblptru	equ	0xFF8
 14542                           tblptrh	equ	0xFF7
 14543                           tblptrl	equ	0xFF6
 14544                           tablat	equ	0xFF5
 14545                           prodh	equ	0xFF4
 14546                           prodl	equ	0xFF3
 14547                           intcon	equ	0xFF2
 14548                           intcon2	equ	0xFF1
 14549                           intcon3	equ	0xFF0
 14550                           postinc0	equ	0xFEE
 14551                           wreg	equ	0xFE8
 14552                           indf1	equ	0xFE7
 14553                           postdec1	equ	0xFE5
 14554                           plusw1	equ	0xFE3
 14555                           fsr1h	equ	0xFE2
 14556                           fsr1l	equ	0xFE1
 14557                           indf2	equ	0xFDF
 14558                           postinc2	equ	0xFDE
 14559                           postdec2	equ	0xFDD
 14560                           plusw2	equ	0xFDB
 14561                           fsr2h	equ	0xFDA
 14562                           fsr2l	equ	0xFD9
 14563                           status	equ	0xFD8
 14564                           
 14565 ;; *************** function _USBStdSetCfgHandler *****************
 14566 ;; Defined at:
 14567 ;;		line 1970 in file "usb_device.c"
 14568 ;; Parameters:    Size  Location     Type
 14569 ;;		None
 14570 ;; Auto vars:     Size  Location     Type
 14571 ;;  i               1   23[COMRAM] unsigned char 
 14572 ;; Return value:  Size  Location     Type
 14573 ;;                  1    wreg      void 
 14574 ;; Registers used:
 14575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14576 ;; Tracked objects:
 14577 ;;		On entry : 0/0
 14578 ;;		On exit  : 0/0
 14579 ;;		Unchanged: 0/0
 14580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14585 ;;Total ram usage:        1 bytes
 14586 ;; Hardware stack levels used:    1
 14587 ;; Hardware stack levels required when called:    4
 14588 ;; This function calls:
 14589 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14590 ;;		_memset
 14591 ;; This function is called by:
 14592 ;;		_USBCheckStdRequest
 14593 ;; This function uses a non-reentrant model
 14594 ;;
 14595                           
 14596                           	psect	text68
 14597  004E66                     __ptext68:
 14598                           	opt stack 0
 14599  004E66                     _USBStdSetCfgHandler:
 14600                           	opt stack 22
 14601                           
 14602                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 14603                           
 14604                           ;incstack = 0
 14605  004E66  0100               	movlb	0	; () banked
 14606  004E68  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14607                           
 14608                           ; BSR set to: 0
 14609                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 14610  004E6A  0E27               	movlw	39
 14611  004E6C  6E01               	movwf	memset@p1,c
 14612  004E6E  0E0F               	movlw	15
 14613  004E70  6E02               	movwf	memset@p1+1,c
 14614  004E72  0E00               	movlw	0
 14615  004E74  6E04               	movwf	memset@c+1,c
 14616  004E76  0E00               	movlw	0
 14617  004E78  6E03               	movwf	memset@c,c
 14618  004E7A  0E00               	movlw	0
 14619  004E7C  6E06               	movwf	memset@n+1,c
 14620  004E7E  0E02               	movlw	2
 14621  004E80  6E05               	movwf	memset@n,c
 14622  004E82  ECB1  F03E         	call	_memset	;wreg free
 14623                           
 14624                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 14625  004E86  0E00               	movlw	0
 14626  004E88  6E01               	movwf	memset@p1,c
 14627  004E8A  0E0D               	movlw	13
 14628  004E8C  6E02               	movwf	memset@p1+1,c
 14629  004E8E  0E00               	movlw	0
 14630  004E90  6E04               	movwf	memset@c+1,c
 14631  004E92  0E00               	movlw	0
 14632  004E94  6E03               	movwf	memset@c,c
 14633  004E96  0E00               	movlw	0
 14634  004E98  6E06               	movwf	memset@n+1,c
 14635  004E9A  0E30               	movlw	48
 14636  004E9C  6E05               	movwf	memset@n,c
 14637  004E9E  ECB1  F03E         	call	_memset	;wreg free
 14638                           
 14639                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 14640  004EA2  8C65               	bsf	3941,6,c	;volatile
 14641                           
 14642                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 14643  004EA4  0E00               	movlw	0
 14644  004EA6  6E18               	movwf	USBStdSetCfgHandler@i,c
 14645  004EA8                     l11545:
 14646  004EA8  0E02               	movlw	2
 14647  004EAA  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 14648  004EAC  D001               	goto	l260
 14649  004EAE  D016               	goto	u8550
 14650  004EB0                     l260:
 14651                           
 14652                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 14653  004EB0  5018               	movf	USBStdSetCfgHandler@i,w,c
 14654  004EB2  0D01               	mullw	1
 14655  004EB4  0E6B               	movlw	low _ep_data_in
 14656  004EB6  24F3               	addwf	prodl,w,c
 14657  004EB8  6ED9               	movwf	fsr2l,c
 14658  004EBA  0E01               	movlw	high _ep_data_in
 14659  004EBC  20F4               	addwfc	prodh,w,c
 14660  004EBE  6EDA               	movwf	fsr2h,c
 14661  004EC0  0E00               	movlw	0
 14662  004EC2  6EDF               	movwf	indf2,c
 14663                           
 14664                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 14665  004EC4  5018               	movf	USBStdSetCfgHandler@i,w,c
 14666  004EC6  0D01               	mullw	1
 14667  004EC8  0E68               	movlw	low _ep_data_out
 14668  004ECA  24F3               	addwf	prodl,w,c
 14669  004ECC  6ED9               	movwf	fsr2l,c
 14670  004ECE  0E01               	movlw	high _ep_data_out
 14671  004ED0  20F4               	addwfc	prodh,w,c
 14672  004ED2  6EDA               	movwf	fsr2h,c
 14673  004ED4  0E00               	movlw	0
 14674  004ED6  6EDF               	movwf	indf2,c
 14675  004ED8  2A18               	incf	USBStdSetCfgHandler@i,f,c
 14676  004EDA  D7E6               	goto	l11545
 14677  004EDC                     u8550:
 14678                           
 14679                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 14680  004EDC  0ED6               	movlw	low _USBAlternateInterface
 14681  004EDE  6E01               	movwf	memset@p1,c
 14682  004EE0  0E01               	movlw	high _USBAlternateInterface
 14683  004EE2  6E02               	movwf	memset@p1+1,c
 14684  004EE4  0E00               	movlw	0
 14685  004EE6  6E04               	movwf	memset@c+1,c
 14686  004EE8  0E00               	movlw	0
 14687  004EEA  6E03               	movwf	memset@c,c
 14688  004EEC  0E00               	movlw	0
 14689  004EEE  6E06               	movwf	memset@n+1,c
 14690  004EF0  0E02               	movlw	2
 14691  004EF2  6E05               	movwf	memset@n,c
 14692  004EF4  ECB1  F03E         	call	_memset	;wreg free
 14693                           
 14694                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 14695  004EF8  9C65               	bcf	3941,6,c	;volatile
 14696                           
 14697                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14698  004EFA  0E08               	movlw	8
 14699  004EFC  0100               	movlb	0	; () banked
 14700  004EFE  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 14701  004F00  0E0D               	movlw	13
 14702  004F02  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 14703                           
 14704                           ; BSR set to: 0
 14705                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 14706  004F04  0E00               	movlw	0
 14707  004F06  6FDB               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 14708  004F08  0E0D               	movlw	13
 14709  004F0A  6FDC               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 14710                           
 14711                           ; BSR set to: 0
 14712                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 14713  004F0C  C0DB  F0D9         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 14714  004F10  C0DC  F0DA         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 14715                           
 14716                           ; BSR set to: 0
 14717                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 14718  004F14  CD32 F0FE          	movff	3378,_USBActiveConfiguration	;volatile
 14719                           
 14720                           ; BSR set to: 0
 14721                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 14722  004F18  51FE               	movf	_USBActiveConfiguration& (0+255),w,b
 14723  004F1A  A4D8               	btfss	status,2,c
 14724  004F1C  D003               	goto	l262
 14725                           
 14726                           ; BSR set to: 0
 14727                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 14728  004F1E  0E10               	movlw	16
 14729  004F20  6E5F               	movwf	_USBDeviceState,c
 14730                           
 14731                           ;usb_device.c: 2015: }
 14732  004F22  0012               	return	
 14733  004F24                     l262:
 14734                           
 14735                           ; BSR set to: 0
 14736                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 14737                           
 14738                           ; BSR set to: 0
 14739  004F24  0E00               	movlw	0
 14740  004F26  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14741  004F28  0E01               	movlw	1
 14742  004F2A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14743  004F2C  0EFE               	movlw	low _USBActiveConfiguration
 14744  004F2E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14745  004F30  0E00               	movlw	high _USBActiveConfiguration
 14746  004F32  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14747  004F34  0E00               	movlw	0
 14748  004F36  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14749  004F38  0E01               	movlw	1
 14750  004F3A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14751  004F3C  ECB9  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14752                           
 14753                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 14754  004F40  0E20               	movlw	32
 14755  004F42  6E5F               	movwf	_USBDeviceState,c
 14756  004F44  0012               	return	
 14757  004F46                     __end_of_USBStdSetCfgHandler:
 14758                           	opt stack 0
 14759                           tblptru	equ	0xFF8
 14760                           tblptrh	equ	0xFF7
 14761                           tblptrl	equ	0xFF6
 14762                           tablat	equ	0xFF5
 14763                           prodh	equ	0xFF4
 14764                           prodl	equ	0xFF3
 14765                           intcon	equ	0xFF2
 14766                           intcon2	equ	0xFF1
 14767                           intcon3	equ	0xFF0
 14768                           postinc0	equ	0xFEE
 14769                           wreg	equ	0xFE8
 14770                           indf1	equ	0xFE7
 14771                           postdec1	equ	0xFE5
 14772                           plusw1	equ	0xFE3
 14773                           fsr1h	equ	0xFE2
 14774                           fsr1l	equ	0xFE1
 14775                           indf2	equ	0xFDF
 14776                           postinc2	equ	0xFDE
 14777                           postdec2	equ	0xFDD
 14778                           plusw2	equ	0xFDB
 14779                           fsr2h	equ	0xFDA
 14780                           fsr2l	equ	0xFD9
 14781                           status	equ	0xFD8
 14782                           
 14783 ;; *************** function _memset *****************
 14784 ;; Defined at:
 14785 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 14786 ;; Parameters:    Size  Location     Type
 14787 ;;  p1              2    0[COMRAM] PTR void 
 14788 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14789 ;;  c               2    2[COMRAM] int 
 14790 ;;  n               2    4[COMRAM] unsigned int 
 14791 ;; Auto vars:     Size  Location     Type
 14792 ;;  p               2    6[COMRAM] PTR unsigned char 
 14793 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14794 ;; Return value:  Size  Location     Type
 14795 ;;                  2    0[COMRAM] PTR void 
 14796 ;; Registers used:
 14797 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14798 ;; Tracked objects:
 14799 ;;		On entry : 0/0
 14800 ;;		On exit  : 0/0
 14801 ;;		Unchanged: 0/0
 14802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14803 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14806 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14807 ;;Total ram usage:        8 bytes
 14808 ;; Hardware stack levels used:    1
 14809 ;; This function calls:
 14810 ;;		Nothing
 14811 ;; This function is called by:
 14812 ;;		_USBDeviceInit
 14813 ;;		_USBStdSetCfgHandler
 14814 ;; This function uses a non-reentrant model
 14815 ;;
 14816                           
 14817                           	psect	text69
 14818  007D62                     __ptext69:
 14819                           	opt stack 0
 14820  007D62                     _memset:
 14821                           	opt stack 28
 14822                           
 14823                           ;incstack = 0
 14824  007D62  C001  F007         	movff	memset@p1,memset@p
 14825  007D66  C002  F008         	movff	memset@p1+1,memset@p+1
 14826  007D6A  D008               	goto	l3533
 14827  007D6C                     l10631:
 14828  007D6C  C007  FFD9         	movff	memset@p,fsr2l
 14829  007D70  C008  FFDA         	movff	memset@p+1,fsr2h
 14830  007D74  C003  FFDF         	movff	memset@c,indf2
 14831  007D78  4A07               	infsnz	memset@p,f,c
 14832  007D7A  2A08               	incf	memset@p+1,f,c
 14833  007D7C                     l3533:
 14834  007D7C  0605               	decf	memset@n,f,c
 14835  007D7E  A0D8               	btfss	status,0,c
 14836  007D80  0606               	decf	memset@n+1,f,c
 14837  007D82  2805               	incf	memset@n,w,c
 14838  007D84  E1F3               	bnz	l10631
 14839  007D86  2806               	incf	memset@n+1,w,c
 14840  007D88  B4D8               	btfsc	status,2,c
 14841  007D8A  0012               	return	
 14842  007D8C  D7EF               	goto	l3534
 14843  007D8E                     __end_of_memset:
 14844                           	opt stack 0
 14845                           tblptru	equ	0xFF8
 14846                           tblptrh	equ	0xFF7
 14847                           tblptrl	equ	0xFF6
 14848                           tablat	equ	0xFF5
 14849                           prodh	equ	0xFF4
 14850                           prodl	equ	0xFF3
 14851                           intcon	equ	0xFF2
 14852                           intcon2	equ	0xFF1
 14853                           intcon3	equ	0xFF0
 14854                           postinc0	equ	0xFEE
 14855                           wreg	equ	0xFE8
 14856                           indf1	equ	0xFE7
 14857                           postdec1	equ	0xFE5
 14858                           plusw1	equ	0xFE3
 14859                           fsr1h	equ	0xFE2
 14860                           fsr1l	equ	0xFE1
 14861                           indf2	equ	0xFDF
 14862                           postinc2	equ	0xFDE
 14863                           postdec2	equ	0xFDD
 14864                           plusw2	equ	0xFDB
 14865                           fsr2h	equ	0xFDA
 14866                           fsr2l	equ	0xFD9
 14867                           status	equ	0xFD8
 14868                           
 14869 ;; *************** function _USBStdGetStatusHandler *****************
 14870 ;; Defined at:
 14871 ;;		line 2131 in file "usb_device.c"
 14872 ;; Parameters:    Size  Location     Type
 14873 ;;		None
 14874 ;; Auto vars:     Size  Location     Type
 14875 ;;  p               2    1[COMRAM] PTR struct __BDT
 14876 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 14877 ;; Return value:  Size  Location     Type
 14878 ;;                  1    wreg      void 
 14879 ;; Registers used:
 14880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14881 ;; Tracked objects:
 14882 ;;		On entry : 0/0
 14883 ;;		On exit  : 0/0
 14884 ;;		Unchanged: 0/0
 14885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14887 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14888 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14889 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14890 ;;Total ram usage:        3 bytes
 14891 ;; Hardware stack levels used:    1
 14892 ;; This function calls:
 14893 ;;		Nothing
 14894 ;; This function is called by:
 14895 ;;		_USBCheckStdRequest
 14896 ;; This function uses a non-reentrant model
 14897 ;;
 14898                           
 14899                           	psect	text70
 14900  005A0E                     __ptext70:
 14901                           	opt stack 0
 14902  005A0E                     _USBStdGetStatusHandler:
 14903                           	opt stack 26
 14904                           
 14905                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 14906                           
 14907                           ;incstack = 0
 14908  005A0E  0E00               	movlw	0
 14909  005A10  010D               	movlb	13	; () banked
 14910  005A12  6F38               	movwf	56,b	;volatile
 14911                           
 14912                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 14913  005A14  0E00               	movlw	0
 14914  005A16  6F39               	movwf	57,b	;volatile
 14915                           
 14916                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 14917  005A18  D039               	goto	l281
 14918  005A1A                     l282:
 14919                           
 14920                           ; BSR set to: 13
 14921                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 14922  005A1A  0100               	movlb	0	; () banked
 14923  005A1C  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14924                           
 14925                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 14926                           
 14927                           ; BSR set to: 13
 14928                           
 14929                           ; BSR set to: 0
 14930                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 14931                           
 14932                           ;usb_device.c: 2144: if(0 == 1)
 14933  005A1E  0100               	movlb	0	; () banked
 14934  005A20  05F4               	decf	_RemoteWakeup& (0+255),w,b
 14935  005A22  A4D8               	btfss	status,2,c
 14936  005A24  D03E               	goto	l285
 14937                           
 14938                           ; BSR set to: 0
 14939                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 14940  005A26  010D               	movlb	13	; () banked
 14941  005A28  8338               	bsf	56,1,b	;volatile
 14942                           
 14943                           ; BSR set to: 13
 14944                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 14945  005A2A  D03B               	goto	l285
 14946  005A2C                     l286:
 14947                           
 14948                           ; BSR set to: 13
 14949                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 14950  005A2C  0100               	movlb	0	; () banked
 14951  005A2E  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14952                           
 14953                           ;usb_device.c: 2156: break;
 14954  005A30  D038               	goto	l285
 14955  005A32                     l287:
 14956                           
 14957                           ; BSR set to: 13
 14958                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 14959  005A32  0100               	movlb	0	; () banked
 14960  005A34  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 14961                           
 14962                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 14963  005A36  010D               	movlb	13	; () banked
 14964  005A38  BF34               	btfsc	52,7,b	;volatile
 14965  005A3A  D00A               	goto	l288
 14966                           
 14967                           ; BSR set to: 13
 14968                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14969  005A3C  5134               	movf	52,w,b	;volatile
 14970  005A3E  0B0F               	andlw	15
 14971  005A40  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14972  005A42  5001               	movf	??_USBStdGetStatusHandler,w,c
 14973  005A44  0D02               	mullw	2
 14974  005A46  0E40               	movlw	low _pBDTEntryOut
 14975  005A48  24F3               	addwf	prodl,w,c
 14976  005A4A  6ED9               	movwf	fsr2l,c
 14977  005A4C  0E01               	movlw	high _pBDTEntryOut
 14978  005A4E  D009               	goto	L6
 14979  005A50                     l288:
 14980                           
 14981                           ; BSR set to: 13
 14982                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 14983                           
 14984                           ; BSR set to: 13
 14985  005A50  5134               	movf	52,w,b	;volatile
 14986  005A52  0B0F               	andlw	15
 14987  005A54  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14988  005A56  5001               	movf	??_USBStdGetStatusHandler,w,c
 14989  005A58  0D02               	mullw	2
 14990  005A5A  0EC5               	movlw	low _pBDTEntryIn
 14991  005A5C  24F3               	addwf	prodl,w,c
 14992  005A5E  6ED9               	movwf	fsr2l,c
 14993  005A60  0E00               	movlw	high _pBDTEntryIn
 14994  005A62                     L6:
 14995  005A62  20F4               	addwfc	prodh,w,c
 14996  005A64  6EDA               	movwf	fsr2h,c
 14997  005A66  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 14998  005A6A  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 14999                           
 15000                           ; BSR set to: 13
 15001                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 15002                           
 15003                           ; BSR set to: 13
 15004  005A6E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 15005  005A72  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 15006  005A76  AEDF               	btfss	indf2,7,c
 15007  005A78  D014               	goto	l285
 15008                           
 15009                           ; BSR set to: 13
 15010  005A7A  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 15011  005A7E  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 15012  005A82  A4DF               	btfss	indf2,2,c
 15013  005A84  D00E               	goto	l285
 15014                           
 15015                           ; BSR set to: 13
 15016                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 15017  005A86  0E01               	movlw	1
 15018  005A88  6F38               	movwf	56,b	;volatile
 15019                           
 15020                           ; BSR set to: 13
 15021                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 15022                           
 15023                           ; BSR set to: 13
 15024                           ;usb_device.c: 2176: break;
 15025  005A8A  D00B               	goto	l285
 15026  005A8C                     l281:
 15027                           
 15028                           ; BSR set to: 13
 15029                           
 15030                           ; BSR set to: 13
 15031  005A8C  5130               	movf	48,w,b	;volatile
 15032  005A8E  0B1F               	andlw	31
 15033                           
 15034                           ; Switch size 1, requested type "space"
 15035                           ; Number of cases is 3, Range of values is 0 to 2
 15036                           ; switch strategies available:
 15037                           ; Name         Instructions Cycles
 15038                           ; simple_byte           10     6 (average)
 15039                           ;	Chosen strategy is simple_byte
 15040  005A90  0A00               	xorlw	0	; case 0
 15041  005A92  B4D8               	btfsc	status,2,c
 15042  005A94  D7C2               	goto	l282
 15043  005A96  0A01               	xorlw	1	; case 1
 15044  005A98  B4D8               	btfsc	status,2,c
 15045  005A9A  D7C8               	goto	l286
 15046  005A9C  0A03               	xorlw	3	; case 2
 15047  005A9E  B4D8               	btfsc	status,2,c
 15048  005AA0  D7C8               	goto	l287
 15049  005AA2                     l285:
 15050                           
 15051                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 15052  005AA2  0100               	movlb	0	; () banked
 15053  005AA4  AFC2               	btfss	(_inPipes+3)& (0+255),7,b
 15054  005AA6  0012               	return	
 15055                           
 15056                           ; BSR set to: 0
 15057                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 15058  005AA8  0E38               	movlw	56
 15059  005AAA  6FBF               	movwf	_inPipes& (0+255),b
 15060  005AAC  0E0D               	movlw	13
 15061  005AAE  6FC0               	movwf	(_inPipes+1)& (0+255),b
 15062                           
 15063                           ; BSR set to: 0
 15064                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15065  005AB0  81C2               	bsf	(_inPipes+3)& (0+255),0,b
 15066                           
 15067                           ; BSR set to: 0
 15068                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 15069  005AB2  0E02               	movlw	2
 15070  005AB4  6FC3               	movwf	(_inPipes+4)& (0+255),b
 15071  005AB6  0012               	return	
 15072  005AB8                     __end_of_USBStdGetStatusHandler:
 15073                           	opt stack 0
 15074                           tblptru	equ	0xFF8
 15075                           tblptrh	equ	0xFF7
 15076                           tblptrl	equ	0xFF6
 15077                           tablat	equ	0xFF5
 15078                           prodh	equ	0xFF4
 15079                           prodl	equ	0xFF3
 15080                           intcon	equ	0xFF2
 15081                           intcon2	equ	0xFF1
 15082                           intcon3	equ	0xFF0
 15083                           postinc0	equ	0xFEE
 15084                           wreg	equ	0xFE8
 15085                           indf1	equ	0xFE7
 15086                           postdec1	equ	0xFE5
 15087                           plusw1	equ	0xFE3
 15088                           fsr1h	equ	0xFE2
 15089                           fsr1l	equ	0xFE1
 15090                           indf2	equ	0xFDF
 15091                           postinc2	equ	0xFDE
 15092                           postdec2	equ	0xFDD
 15093                           plusw2	equ	0xFDB
 15094                           fsr2h	equ	0xFDA
 15095                           fsr2l	equ	0xFD9
 15096                           status	equ	0xFD8
 15097                           
 15098 ;; *************** function _USBStdGetDscHandler *****************
 15099 ;; Defined at:
 15100 ;;		line 2045 in file "usb_device.c"
 15101 ;; Parameters:    Size  Location     Type
 15102 ;;		None
 15103 ;; Auto vars:     Size  Location     Type
 15104 ;;		None
 15105 ;; Return value:  Size  Location     Type
 15106 ;;                  1    wreg      void 
 15107 ;; Registers used:
 15108 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 15109 ;; Tracked objects:
 15110 ;;		On entry : 0/0
 15111 ;;		On exit  : 0/0
 15112 ;;		Unchanged: 0/0
 15113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15117 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15118 ;;Total ram usage:        2 bytes
 15119 ;; Hardware stack levels used:    1
 15120 ;; This function calls:
 15121 ;;		Nothing
 15122 ;; This function is called by:
 15123 ;;		_USBCheckStdRequest
 15124 ;; This function uses a non-reentrant model
 15125 ;;
 15126                           
 15127                           	psect	text71
 15128  003D28                     __ptext71:
 15129                           	opt stack 0
 15130  003D28                     _USBStdGetDscHandler:
 15131                           	opt stack 26
 15132                           
 15133                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 15134                           
 15135                           ; BSR set to: 0
 15136                           ;incstack = 0
 15137  003D28  0E80               	movlw	128
 15138  003D2A  010D               	movlb	13	; () banked
 15139  003D2C  1930               	xorwf	48,w,b	;volatile
 15140  003D2E  A4D8               	btfss	status,2,c
 15141  003D30  0012               	return	
 15142                           
 15143                           ; BSR set to: 13
 15144                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 15145  003D32  0EC0               	movlw	192
 15146  003D34  0100               	movlb	0	; () banked
 15147  003D36  6FC2               	movwf	(_inPipes+3)& (0+255),b
 15148                           
 15149                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 15150  003D38  D088               	goto	l268
 15151  003D3A                     
 15152                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 15153                           
 15154                           ; BSR set to: 0
 15155  003D3A  0EA5               	movlw	low _device_dsc
 15156  003D3C  0100               	movlb	0	; () banked
 15157  003D3E  6FBF               	movwf	_inPipes& (0+255),b
 15158  003D40  0E8F               	movlw	high _device_dsc
 15159  003D42  6FC0               	movwf	(_inPipes+1)& (0+255),b
 15160                           
 15161                           ; BSR set to: 0
 15162                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 15163  003D44  0E00               	movlw	0
 15164  003D46  6FC4               	movwf	(_inPipes+5)& (0+255),b
 15165  003D48  0E12               	movlw	18
 15166  003D4A  6FC3               	movwf	(_inPipes+4)& (0+255),b
 15167                           
 15168                           ;usb_device.c: 2060: break;
 15169  003D4C  0012               	return	
 15170  003D4E                     
 15171                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 15172                           
 15173                           ; BSR set to: 0
 15174  003D4E  010D               	movlb	13	; () banked
 15175  003D50  5132               	movf	50,w,b	;volatile
 15176  003D52  A4D8               	btfss	status,2,c
 15177  003D54  D043               	goto	l272
 15178                           
 15179                           ; BSR set to: 13
 15180                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 15181  003D56  5132               	movf	50,w,b	;volatile
 15182  003D58  0D02               	mullw	2
 15183  003D5A  0EA5               	movlw	low _USB_CD_Ptr
 15184  003D5C  24F3               	addwf	prodl,w,c
 15185  003D5E  6EF6               	movwf	tblptrl,c
 15186  003D60  0E8E               	movlw	high _USB_CD_Ptr
 15187  003D62  20F4               	addwfc	prodh,w,c
 15188  003D64  6EF7               	movwf	tblptrh,c
 15189  003D66                     	if	1	;There are 3 active tblptr bytes
 15190  003D66  6AF8               	clrf	tblptru,c
 15191  003D68  0E00               	movlw	low (__mediumconst shr (0+16))
 15192  003D6A  22F8               	addwfc	tblptru,f,c
 15193  003D6C                     	endif
 15194  003D6C  0009               	tblrd		*+
 15195  003D6E  CFF5 F0BF          	movff	tablat,_inPipes
 15196  003D72  000A               	tblrd		*-
 15197  003D74  CFF5 F0C0          	movff	tablat,_inPipes+1
 15198                           
 15199                           ; BSR set to: 13
 15200                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 15201  003D78  0E02               	movlw	2
 15202  003D7A  0100               	movlb	0	; () banked
 15203  003D7C  25BF               	addwf	_inPipes& (0+255),w,b
 15204  003D7E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15205  003D80  0E00               	movlw	0
 15206  003D82  21C0               	addwfc	(_inPipes+1)& (0+255),w,b
 15207  003D84  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 15208  003D86  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 15209  003D8A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 15210  003D8E  6AF8               	clrf	tblptru,c
 15211  003D90  0E0E               	movlw	(high __ramtop+-1)
 15212  003D92  64F7               	cpfsgt	tblptrh,c
 15213  003D94  D003               	bra	u8597
 15214  003D96  0008               	tblrd		*
 15215  003D98  50F5               	movf	tablat,w,c
 15216  003D9A  D005               	bra	u8590
 15217  003D9C                     u8597:
 15218  003D9C  CFF6 FFE9          	movff	tblptrl,fsr0l
 15219  003DA0  CFF7 FFEA          	movff	tblptrh,fsr0h
 15220  003DA4  50EF               	movf	indf0,w,c
 15221  003DA6                     u8590:
 15222  003DA6  0100               	movlb	0	; () banked
 15223  003DA8  6FC3               	movwf	(_inPipes+4)& (0+255),b
 15224                           
 15225                           ; BSR set to: 0
 15226                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 15227  003DAA  0E03               	movlw	3
 15228  003DAC  25BF               	addwf	_inPipes& (0+255),w,b
 15229  003DAE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15230  003DB0  0E00               	movlw	0
 15231  003DB2  21C0               	addwfc	(_inPipes+1)& (0+255),w,b
 15232  003DB4  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 15233  003DB6  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 15234  003DBA  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 15235  003DBE  6AF8               	clrf	tblptru,c
 15236  003DC0  0E0E               	movlw	(high __ramtop+-1)
 15237  003DC2  64F7               	cpfsgt	tblptrh,c
 15238  003DC4  D003               	bra	u8607
 15239  003DC6  0008               	tblrd		*
 15240  003DC8  50F5               	movf	tablat,w,c
 15241  003DCA  D005               	bra	u8600
 15242  003DCC                     u8607:
 15243  003DCC  CFF6 FFE9          	movff	tblptrl,fsr0l
 15244  003DD0  CFF7 FFEA          	movff	tblptrh,fsr0h
 15245  003DD4  50EF               	movf	indf0,w,c
 15246  003DD6                     u8600:
 15247  003DD6  0100               	movlb	0	; () banked
 15248  003DD8  6FC4               	movwf	(_inPipes+5)& (0+255),b
 15249                           
 15250                           ;usb_device.c: 2078: }
 15251  003DDA  0012               	return	
 15252  003DDC                     l272:
 15253                           
 15254                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 15255                           
 15256                           ; BSR set to: 0
 15257  003DDC  0E00               	movlw	0
 15258  003DDE  0100               	movlb	0	; () banked
 15259  003DE0  6FC2               	movwf	(_inPipes+3)& (0+255),b
 15260                           
 15261                           ; BSR set to: 0
 15262                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 15263  003DE2  0012               	return	
 15264  003DE4                     
 15265                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 15266                           
 15267                           ; BSR set to: 0
 15268  003DE4  0E04               	movlw	4
 15269  003DE6  010D               	movlb	13	; () banked
 15270  003DE8  6132               	cpfslt	50,b	;volatile
 15271  003DEA  D027               	goto	l275
 15272                           
 15273                           ; BSR set to: 13
 15274                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 15275  003DEC  5132               	movf	50,w,b	;volatile
 15276  003DEE  0D02               	mullw	2
 15277  003DF0  0E7B               	movlw	low _USB_SD_Ptr
 15278  003DF2  24F3               	addwf	prodl,w,c
 15279  003DF4  6EF6               	movwf	tblptrl,c
 15280  003DF6  0E8E               	movlw	high _USB_SD_Ptr
 15281  003DF8  20F4               	addwfc	prodh,w,c
 15282  003DFA  6EF7               	movwf	tblptrh,c
 15283  003DFC                     	if	1	;There are 3 active tblptr bytes
 15284  003DFC  6AF8               	clrf	tblptru,c
 15285  003DFE  0E00               	movlw	low (__mediumconst shr (0+16))
 15286  003E00  22F8               	addwfc	tblptru,f,c
 15287  003E02                     	endif
 15288  003E02  0009               	tblrd		*+
 15289  003E04  CFF5 F0BF          	movff	tablat,_inPipes
 15290  003E08  000A               	tblrd		*-
 15291  003E0A  CFF5 F0C0          	movff	tablat,_inPipes+1
 15292                           
 15293                           ; BSR set to: 13
 15294                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 15295  003E0E  C0BF  FFF6         	movff	_inPipes,tblptrl
 15296  003E12  C0C0  FFF7         	movff	_inPipes+1,tblptrh
 15297  003E16  6AF8               	clrf	tblptru,c
 15298  003E18  0E0E               	movlw	(high __ramtop+-1)
 15299  003E1A  64F7               	cpfsgt	tblptrh,c
 15300  003E1C  D003               	bra	u8627
 15301  003E1E  0008               	tblrd		*
 15302  003E20  50F5               	movf	tablat,w,c
 15303  003E22  D005               	bra	u8620
 15304  003E24                     u8627:
 15305  003E24  CFF6 FFE9          	movff	tblptrl,fsr0l
 15306  003E28  CFF7 FFEA          	movff	tblptrh,fsr0h
 15307  003E2C  50EF               	movf	indf0,w,c
 15308  003E2E                     u8620:
 15309  003E2E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15310  003E30  5001               	movf	??_USBStdGetDscHandler,w,c
 15311  003E32  0100               	movlb	0	; () banked
 15312  003E34  6FC3               	movwf	(_inPipes+4)& (0+255),b
 15313  003E36  6BC4               	clrf	(_inPipes+5)& (0+255),b
 15314                           
 15315                           ;usb_device.c: 2094: }
 15316  003E38  0012               	return	
 15317  003E3A                     l275:
 15318                           
 15319                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 15320                           
 15321                           ; BSR set to: 0
 15322  003E3A  0E00               	movlw	0
 15323  003E3C  0100               	movlb	0	; () banked
 15324  003E3E  6FC2               	movwf	(_inPipes+3)& (0+255),b
 15325                           
 15326                           ; BSR set to: 0
 15327                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 15328  003E40  0012               	return	
 15329  003E42                     
 15330                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 15331                           
 15332                           ; BSR set to: 0
 15333  003E42  0E00               	movlw	0
 15334  003E44  0100               	movlb	0	; () banked
 15335  003E46  6FC2               	movwf	(_inPipes+3)& (0+255),b
 15336                           
 15337                           ; BSR set to: 0
 15338                           ;usb_device.c: 2112: }
 15339                           
 15340                           ;usb_device.c: 2111: break;
 15341  003E48  0012               	return	
 15342  003E4A                     l268:
 15343                           
 15344                           ; BSR set to: 0
 15345                           
 15346                           ; BSR set to: 0
 15347  003E4A  010D               	movlb	13	; () banked
 15348  003E4C  5133               	movf	51,w,b	;volatile
 15349                           
 15350                           ; Switch size 1, requested type "space"
 15351                           ; Number of cases is 3, Range of values is 1 to 3
 15352                           ; switch strategies available:
 15353                           ; Name         Instructions Cycles
 15354                           ; simple_byte           10     6 (average)
 15355                           ;	Chosen strategy is simple_byte
 15356  003E4E  0A01               	xorlw	1	; case 1
 15357  003E50  B4D8               	btfsc	status,2,c
 15358  003E52  D773               	goto	l269
 15359  003E54  0A03               	xorlw	3	; case 2
 15360  003E56  B4D8               	btfsc	status,2,c
 15361  003E58  D77A               	goto	l271
 15362  003E5A  0A01               	xorlw	1	; case 3
 15363  003E5C  B4D8               	btfsc	status,2,c
 15364  003E5E  D7C2               	goto	l274
 15365  003E60  D7F0               	goto	l277
 15366  003E62                     __end_of_USBStdGetDscHandler:
 15367                           	opt stack 0
 15368                           tblptru	equ	0xFF8
 15369                           tblptrh	equ	0xFF7
 15370                           tblptrl	equ	0xFF6
 15371                           tablat	equ	0xFF5
 15372                           prodh	equ	0xFF4
 15373                           prodl	equ	0xFF3
 15374                           intcon	equ	0xFF2
 15375                           intcon2	equ	0xFF1
 15376                           intcon3	equ	0xFF0
 15377                           indf0	equ	0xFEF
 15378                           postinc0	equ	0xFEE
 15379                           fsr0h	equ	0xFEA
 15380                           fsr0l	equ	0xFE9
 15381                           wreg	equ	0xFE8
 15382                           indf1	equ	0xFE7
 15383                           postdec1	equ	0xFE5
 15384                           plusw1	equ	0xFE3
 15385                           fsr1h	equ	0xFE2
 15386                           fsr1l	equ	0xFE1
 15387                           indf2	equ	0xFDF
 15388                           postinc2	equ	0xFDE
 15389                           postdec2	equ	0xFDD
 15390                           plusw2	equ	0xFDB
 15391                           fsr2h	equ	0xFDA
 15392                           fsr2l	equ	0xFD9
 15393                           status	equ	0xFD8
 15394                           
 15395 ;; *************** function _USBStdFeatureReqHandler *****************
 15396 ;; Defined at:
 15397 ;;		line 2756 in file "usb_device.c"
 15398 ;; Parameters:    Size  Location     Type
 15399 ;;		None
 15400 ;; Auto vars:     Size  Location     Type
 15401 ;;  p               2   27[COMRAM] PTR struct __BDT
 15402 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 15403 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 15404 ;;		 -> UEP0(1), 
 15405 ;;  current_ep_d    1   26[COMRAM] struct .
 15406 ;; Return value:  Size  Location     Type
 15407 ;;                  1    wreg      void 
 15408 ;; Registers used:
 15409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15410 ;; Tracked objects:
 15411 ;;		On entry : 0/0
 15412 ;;		On exit  : 0/0
 15413 ;;		Unchanged: 0/0
 15414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15416 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15417 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15418 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15419 ;;Total ram usage:        6 bytes
 15420 ;; Hardware stack levels used:    1
 15421 ;; Hardware stack levels required when called:    4
 15422 ;; This function calls:
 15423 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15424 ;; This function is called by:
 15425 ;;		_USBCheckStdRequest
 15426 ;; This function uses a non-reentrant model
 15427 ;;
 15428                           
 15429                           	psect	text72
 15430  001848                     __ptext72:
 15431                           	opt stack 0
 15432  001848                     _USBStdFeatureReqHandler:
 15433                           	opt stack 22
 15434                           
 15435                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 15436                           
 15437                           ;incstack = 0
 15438  001848  010D               	movlb	13	; () banked
 15439  00184A  0532               	decf	50,w,b	;volatile
 15440  00184C  A4D8               	btfss	status,2,c
 15441  00184E  D011               	goto	l361
 15442                           
 15443                           ; BSR set to: 13
 15444  001850  5130               	movf	48,w,b	;volatile
 15445  001852  0B1F               	andlw	31
 15446  001854  0900               	iorlw	0
 15447  001856  A4D8               	btfss	status,2,c
 15448  001858  D00C               	goto	l361
 15449                           
 15450                           ; BSR set to: 13
 15451                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 15452  00185A  0100               	movlb	0	; () banked
 15453  00185C  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 15454                           
 15455                           ; BSR set to: 0
 15456                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 15457  00185E  0E03               	movlw	3
 15458  001860  010D               	movlb	13	; () banked
 15459  001862  1931               	xorwf	49,w,b	;volatile
 15460  001864  A4D8               	btfss	status,2,c
 15461  001866  D002               	goto	l360
 15462                           
 15463                           ; BSR set to: 13
 15464                           ;usb_device.c: 2806: RemoteWakeup = 1;
 15465  001868  0E01               	movlw	1
 15466  00186A  D001               	goto	L7
 15467  00186C                     l360:
 15468                           
 15469                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 15470                           
 15471                           ; BSR set to: 0
 15472  00186C  0E00               	movlw	0
 15473  00186E                     L7:
 15474  00186E  0100               	movlb	0	; () banked
 15475  001870  6FF4               	movwf	_RemoteWakeup& (0+255),b
 15476  001872                     l361:
 15477                           
 15478                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 15479                           
 15480                           ; BSR set to: 0
 15481  001872  010D               	movlb	13	; () banked
 15482  001874  5132               	movf	50,w,b	;volatile
 15483  001876  A4D8               	btfss	status,2,c
 15484  001878  0012               	return	
 15485                           
 15486                           ; BSR set to: 13
 15487  00187A  5130               	movf	48,w,b	;volatile
 15488  00187C  0B1F               	andlw	31
 15489  00187E  0A02               	xorlw	2
 15490  001880  A4D8               	btfss	status,2,c
 15491  001882  0012               	return	
 15492                           
 15493                           ; BSR set to: 13
 15494  001884  5134               	movf	52,w,b	;volatile
 15495  001886  0B0F               	andlw	15
 15496  001888  0900               	iorlw	0
 15497  00188A  B4D8               	btfsc	status,2,c
 15498  00188C  0012               	return	
 15499                           
 15500                           ; BSR set to: 13
 15501  00188E  5134               	movf	52,w,b	;volatile
 15502  001890  0B0F               	andlw	15
 15503  001892  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15504  001894  0E03               	movlw	3
 15505  001896  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 15506  001898  0012               	return	
 15507                           
 15508                           ; BSR set to: 13
 15509  00189A  0E20               	movlw	32
 15510  00189C  185F               	xorwf	_USBDeviceState,w,c
 15511  00189E  A4D8               	btfss	status,2,c
 15512  0018A0  0012               	return	
 15513                           
 15514                           ; BSR set to: 13
 15515                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 15516  0018A2  0100               	movlb	0	; () banked
 15517  0018A4  8FC2               	bsf	(_inPipes+3)& (0+255),7,b
 15518                           
 15519                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 15520  0018A6  010D               	movlb	13	; () banked
 15521  0018A8  BF34               	btfsc	52,7,b	;volatile
 15522  0018AA  D019               	goto	l363
 15523                           
 15524                           ; BSR set to: 13
 15525                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 15526  0018AC  5134               	movf	52,w,b	;volatile
 15527  0018AE  0B0F               	andlw	15
 15528  0018B0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15529  0018B2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15530  0018B4  0D02               	mullw	2
 15531  0018B6  0E40               	movlw	low _pBDTEntryOut
 15532  0018B8  24F3               	addwf	prodl,w,c
 15533  0018BA  6ED9               	movwf	fsr2l,c
 15534  0018BC  0E01               	movlw	high _pBDTEntryOut
 15535  0018BE  20F4               	addwfc	prodh,w,c
 15536  0018C0  6EDA               	movwf	fsr2h,c
 15537  0018C2  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 15538  0018C6  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 15539                           
 15540                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 15541  0018CA  5134               	movf	52,w,b	;volatile
 15542  0018CC  0B0F               	andlw	15
 15543  0018CE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15544  0018D0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15545  0018D2  0D01               	mullw	1
 15546  0018D4  0E68               	movlw	low _ep_data_out
 15547  0018D6  24F3               	addwf	prodl,w,c
 15548  0018D8  6ED9               	movwf	fsr2l,c
 15549  0018DA  0E01               	movlw	high _ep_data_out
 15550  0018DC  D018               	goto	L8
 15551  0018DE                     l363:
 15552                           
 15553                           ; BSR set to: 13
 15554                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 15555                           
 15556                           ; BSR set to: 13
 15557  0018DE  5134               	movf	52,w,b	;volatile
 15558  0018E0  0B0F               	andlw	15
 15559  0018E2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15560  0018E4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15561  0018E6  0D02               	mullw	2
 15562  0018E8  0EC5               	movlw	low _pBDTEntryIn
 15563  0018EA  24F3               	addwf	prodl,w,c
 15564  0018EC  6ED9               	movwf	fsr2l,c
 15565  0018EE  0E00               	movlw	high _pBDTEntryIn
 15566  0018F0  20F4               	addwfc	prodh,w,c
 15567  0018F2  6EDA               	movwf	fsr2h,c
 15568  0018F4  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 15569  0018F8  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 15570                           
 15571                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 15572  0018FC  5134               	movf	52,w,b	;volatile
 15573  0018FE  0B0F               	andlw	15
 15574  001900  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15575  001902  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15576  001904  0D01               	mullw	1
 15577  001906  0E6B               	movlw	low _ep_data_in
 15578  001908  24F3               	addwf	prodl,w,c
 15579  00190A  6ED9               	movwf	fsr2l,c
 15580  00190C  0E01               	movlw	high _ep_data_in
 15581  00190E                     L8:
 15582  00190E  20F4               	addwfc	prodh,w,c
 15583  001910  6EDA               	movwf	fsr2h,c
 15584  001912  50DF               	movf	indf2,w,c
 15585  001914  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 15586                           
 15587                           ; BSR set to: 13
 15588                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 15589                           
 15590                           ; BSR set to: 13
 15591  001916  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 15592  001918  D006               	goto	l365
 15593                           
 15594                           ; BSR set to: 13
 15595                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 15596  00191A  0EFB               	movlw	251
 15597  00191C  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 15598  00191E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15599  001920  0EFF               	movlw	255
 15600  001922  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 15601  001924  D004               	goto	L9
 15602  001926                     l365:
 15603                           
 15604                           ; BSR set to: 13
 15605                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 15606                           
 15607                           ; BSR set to: 13
 15608  001926  0E04               	movlw	4
 15609  001928  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 15610  00192A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15611  00192C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15612  00192E                     L9:
 15613  00192E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15614                           
 15615                           ; BSR set to: 13
 15616                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 15617                           
 15618                           ; BSR set to: 13
 15619  001930  BF34               	btfsc	52,7,b	;volatile
 15620  001932  D00A               	goto	l367
 15621                           
 15622                           ; BSR set to: 13
 15623                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 15624  001934  5134               	movf	52,w,b	;volatile
 15625  001936  0B0F               	andlw	15
 15626  001938  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15627  00193A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15628  00193C  0D02               	mullw	2
 15629  00193E  0E40               	movlw	low _pBDTEntryOut
 15630  001940  24F3               	addwf	prodl,w,c
 15631  001942  6ED9               	movwf	fsr2l,c
 15632  001944  0E01               	movlw	high _pBDTEntryOut
 15633  001946  D009               	goto	L10
 15634  001948                     l367:
 15635                           
 15636                           ; BSR set to: 13
 15637                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 15638                           
 15639                           ; BSR set to: 13
 15640  001948  5134               	movf	52,w,b	;volatile
 15641  00194A  0B0F               	andlw	15
 15642  00194C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15643  00194E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15644  001950  0D02               	mullw	2
 15645  001952  0EC5               	movlw	low _pBDTEntryIn
 15646  001954  24F3               	addwf	prodl,w,c
 15647  001956  6ED9               	movwf	fsr2l,c
 15648  001958  0E00               	movlw	high _pBDTEntryIn
 15649  00195A                     L10:
 15650  00195A  20F4               	addwfc	prodh,w,c
 15651  00195C  6EDA               	movwf	fsr2h,c
 15652  00195E  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 15653  001962  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 15654                           
 15655                           ; BSR set to: 13
 15656                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 15657                           
 15658                           ; BSR set to: 13
 15659  001966  0E03               	movlw	3
 15660  001968  1931               	xorwf	49,w,b	;volatile
 15661  00196A  A4D8               	btfss	status,2,c
 15662  00196C  D02D               	goto	l369
 15663                           
 15664                           ; BSR set to: 13
 15665                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 15666  00196E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15667  001972  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15668  001976  AEDF               	btfss	indf2,7,c
 15669  001978  D01A               	goto	l372
 15670                           
 15671                           ; BSR set to: 13
 15672                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 15673  00197A  BF34               	btfsc	52,7,b	;volatile
 15674  00197C  D00A               	goto	l371
 15675                           
 15676                           ; BSR set to: 13
 15677                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 15678  00197E  5134               	movf	52,w,b	;volatile
 15679  001980  0B0F               	andlw	15
 15680  001982  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15681  001984  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15682  001986  0D01               	mullw	1
 15683  001988  0E68               	movlw	low _ep_data_out
 15684  00198A  24F3               	addwf	prodl,w,c
 15685  00198C  6ED9               	movwf	fsr2l,c
 15686  00198E  0E01               	movlw	high _ep_data_out
 15687  001990  D00A               	goto	L11
 15688  001992                     l371:
 15689                           
 15690                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 15691                           
 15692                           ; BSR set to: 1
 15693  001992  010D               	movlb	13	; () banked
 15694  001994  5134               	movf	52,w,b	;volatile
 15695  001996  0B0F               	andlw	15
 15696  001998  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15697  00199A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15698  00199C  0D01               	mullw	1
 15699  00199E  0E6B               	movlw	low _ep_data_in
 15700  0019A0  24F3               	addwf	prodl,w,c
 15701  0019A2  6ED9               	movwf	fsr2l,c
 15702  0019A4  0E01               	movlw	high _ep_data_in
 15703  0019A6                     L11:
 15704  0019A6  20F4               	addwfc	prodh,w,c
 15705  0019A8  6EDA               	movwf	fsr2h,c
 15706  0019AA  0101               	movlb	1	; () banked
 15707  0019AC  82DF               	bsf	indf2,1,c
 15708  0019AE                     l372:
 15709                           
 15710                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 15711                           
 15712                           ; BSR set to: 1
 15713                           
 15714                           ; BSR set to: 1
 15715  0019AE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15716  0019B2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15717  0019B6  0E00               	movlw	0
 15718  0019B8  84DB               	bsf	plusw2,2,c
 15719                           
 15720                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 15721  0019BA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15722  0019BE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15723  0019C2  0E00               	movlw	0
 15724  0019C4  8EDB               	bsf	plusw2,7,c
 15725                           
 15726                           ;usb_device.c: 2878: }
 15727  0019C6  0012               	return	
 15728  0019C8                     l369:
 15729                           
 15730                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 15731  0019C8  0E04               	movlw	4
 15732  0019CA  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 15733  0019CC  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15734  0019CE  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15735  0019D0  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15736                           
 15737                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 15738  0019D2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15739  0019D6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15740  0019DA  AEDF               	btfss	indf2,7,c
 15741  0019DC  D01B               	goto	l374
 15742                           
 15743                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 15744  0019DE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15745  0019E2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15746  0019E6  0E7F               	movlw	127
 15747  0019E8  16DF               	andwf	indf2,f,c
 15748                           
 15749                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 15750  0019EA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15751  0019EE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15752  0019F2  0E00               	movlw	0
 15753  0019F4  8CDB               	bsf	plusw2,6,c
 15754                           
 15755                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15756  0019F6  0E00               	movlw	0
 15757  0019F8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15758  0019FA  0E05               	movlw	5
 15759  0019FC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15760  0019FE  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15761  001A02  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15762  001A06  0E00               	movlw	0
 15763  001A08  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15764  001A0A  0E02               	movlw	2
 15765  001A0C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15766  001A0E  ECB9  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15767                           
 15768                           ;usb_device.c: 2893: }
 15769  001A12  D006               	goto	l375
 15770  001A14                     l374:
 15771                           
 15772                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 15773  001A14  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15774  001A18  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15775  001A1C  0E00               	movlw	0
 15776  001A1E  8CDB               	bsf	plusw2,6,c
 15777  001A20                     l375:
 15778                           
 15779                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 15780  001A20  0E04               	movlw	4
 15781  001A22  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 15782  001A24  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15783  001A26  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15784  001A28  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15785                           
 15786                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 15787  001A2A  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 15788  001A2C  D006               	goto	u8840
 15789  001A2E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15790  001A32  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15791  001A36  AEDF               	btfss	indf2,7,c
 15792  001A38  D030               	goto	l376
 15793  001A3A                     u8840:
 15794                           
 15795                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 15796  001A3A  010D               	movlb	13	; () banked
 15797  001A3C  BF34               	btfsc	52,7,b	;volatile
 15798  001A3E  D00A               	goto	l379
 15799                           
 15800                           ; BSR set to: 13
 15801                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 15802  001A40  5134               	movf	52,w,b	;volatile
 15803  001A42  0B0F               	andlw	15
 15804  001A44  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15805  001A46  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15806  001A48  0D01               	mullw	1
 15807  001A4A  0E68               	movlw	low _ep_data_out
 15808  001A4C  24F3               	addwf	prodl,w,c
 15809  001A4E  6ED9               	movwf	fsr2l,c
 15810  001A50  0E01               	movlw	high _ep_data_out
 15811  001A52  D00A               	goto	L12
 15812  001A54                     l379:
 15813                           
 15814                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 15815                           
 15816                           ; BSR set to: 1
 15817  001A54  010D               	movlb	13	; () banked
 15818  001A56  5134               	movf	52,w,b	;volatile
 15819  001A58  0B0F               	andlw	15
 15820  001A5A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15821  001A5C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15822  001A5E  0D01               	mullw	1
 15823  001A60  0E6B               	movlw	low _ep_data_in
 15824  001A62  24F3               	addwf	prodl,w,c
 15825  001A64  6ED9               	movwf	fsr2l,c
 15826  001A66  0E01               	movlw	high _ep_data_in
 15827  001A68                     L12:
 15828  001A68  20F4               	addwfc	prodh,w,c
 15829  001A6A  6EDA               	movwf	fsr2h,c
 15830  001A6C  0101               	movlb	1	; () banked
 15831  001A6E  92DF               	bcf	indf2,1,c
 15832                           
 15833                           ; BSR set to: 1
 15834                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 15835                           
 15836                           ; BSR set to: 1
 15837  001A70  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15838  001A74  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15839  001A78  0E3B               	movlw	59
 15840  001A7A  16DF               	andwf	indf2,f,c
 15841                           
 15842                           ; BSR set to: 1
 15843                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15844  001A7C  0E00               	movlw	0
 15845  001A7E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15846  001A80  0E05               	movlw	5
 15847  001A82  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15848  001A84  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15849  001A88  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15850  001A8C  0E00               	movlw	0
 15851  001A8E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15852  001A90  0E02               	movlw	2
 15853  001A92  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15854  001A94  ECB9  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15855                           
 15856                           ;usb_device.c: 2923: }
 15857  001A98  D006               	goto	l381
 15858  001A9A                     l376:
 15859                           
 15860                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 15861  001A9A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15862  001A9E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15863  001AA2  0E3B               	movlw	59
 15864  001AA4  16DF               	andwf	indf2,f,c
 15865  001AA6                     l381:
 15866                           
 15867                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 15868  001AA6  010D               	movlb	13	; () banked
 15869  001AA8  5134               	movf	52,w,b	;volatile
 15870  001AAA  0B0F               	andlw	15
 15871  001AAC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15872  001AAE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15873  001AB0  0D01               	mullw	1
 15874  001AB2  0E26               	movlw	38
 15875  001AB4  24F3               	addwf	prodl,w,c
 15876  001AB6  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 15877  001AB8  0E0F               	movlw	15
 15878  001ABA  20F4               	addwfc	prodh,w,c
 15879  001ABC  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 15880                           
 15881                           ; BSR set to: 13
 15882                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 15883  001ABE  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 15884  001AC2  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 15885  001AC6  0EFE               	movlw	254
 15886  001AC8  16DF               	andwf	indf2,f,c
 15887                           
 15888                           ; BSR set to: 13
 15889  001ACA  0012               	return	
 15890  001ACC                     __end_of_USBStdFeatureReqHandler:
 15891                           	opt stack 0
 15892                           tblptru	equ	0xFF8
 15893                           tblptrh	equ	0xFF7
 15894                           tblptrl	equ	0xFF6
 15895                           tablat	equ	0xFF5
 15896                           prodh	equ	0xFF4
 15897                           prodl	equ	0xFF3
 15898                           intcon	equ	0xFF2
 15899                           intcon2	equ	0xFF1
 15900                           intcon3	equ	0xFF0
 15901                           indf0	equ	0xFEF
 15902                           postinc0	equ	0xFEE
 15903                           fsr0h	equ	0xFEA
 15904                           fsr0l	equ	0xFE9
 15905                           wreg	equ	0xFE8
 15906                           indf1	equ	0xFE7
 15907                           postdec1	equ	0xFE5
 15908                           plusw1	equ	0xFE3
 15909                           fsr1h	equ	0xFE2
 15910                           fsr1l	equ	0xFE1
 15911                           indf2	equ	0xFDF
 15912                           postinc2	equ	0xFDE
 15913                           postdec2	equ	0xFDD
 15914                           plusw2	equ	0xFDB
 15915                           fsr2h	equ	0xFDA
 15916                           fsr2l	equ	0xFD9
 15917                           status	equ	0xFD8
 15918                           
 15919 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 15920 ;; Defined at:
 15921 ;;		line 54 in file "usb_events.c"
 15922 ;; Parameters:    Size  Location     Type
 15923 ;;  event           2   15[COMRAM] enum E6832
 15924 ;;  pdata           2   17[COMRAM] PTR void 
 15925 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 15926 ;;		 -> BDT(48), 
 15927 ;;  size            2   19[COMRAM] unsigned int 
 15928 ;; Auto vars:     Size  Location     Type
 15929 ;;		None
 15930 ;; Return value:  Size  Location     Type
 15931 ;;                  1    wreg      unsigned char 
 15932 ;; Registers used:
 15933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15934 ;; Tracked objects:
 15935 ;;		On entry : 0/0
 15936 ;;		On exit  : 0/0
 15937 ;;		Unchanged: 0/0
 15938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15939 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15941 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15942 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15943 ;;Total ram usage:        8 bytes
 15944 ;; Hardware stack levels used:    1
 15945 ;; Hardware stack levels required when called:    3
 15946 ;; This function calls:
 15947 ;;		_APP_DeviceCustomHIDInitialize
 15948 ;;		_APP_DeviceMSDInitialize
 15949 ;;		_MSDTransferTerminated
 15950 ;;		_SYSTEM_Initialize
 15951 ;;		_USBCheckHIDRequest
 15952 ;;		_USBCheckMSDRequest
 15953 ;; This function is called by:
 15954 ;;		_USBDeviceTasks
 15955 ;;		_USBStdSetCfgHandler
 15956 ;;		_USBSuspend
 15957 ;;		_USBWakeFromSuspend
 15958 ;;		_USBCtrlTrfSetupHandler
 15959 ;;		_USBCheckStdRequest
 15960 ;;		_USBStdFeatureReqHandler
 15961 ;; This function uses a non-reentrant model
 15962 ;;
 15963                           
 15964                           	psect	text73
 15965  006572                     __ptext73:
 15966                           	opt stack 0
 15967  006572                     _USER_USB_CALLBACK_EVENT_HANDLER:
 15968                           	opt stack 26
 15969                           
 15970                           ;usb_events.c: 56: switch((int)event)
 15971                           
 15972                           ;incstack = 0
 15973  006572  D019               	goto	l800
 15974  006574                     
 15975                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 15976  006574  0E01               	movlw	1
 15977  006576  ECC9  F03A         	call	_SYSTEM_Initialize
 15978                           
 15979                           ;usb_events.c: 79: break;
 15980  00657A  0012               	return	
 15981  00657C                     
 15982                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 15983  00657C  0E02               	movlw	2
 15984  00657E  ECC9  F03A         	call	_SYSTEM_Initialize
 15985                           
 15986                           ;usb_events.c: 90: break;
 15987  006582  0012               	return	
 15988  006584                     
 15989                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 15990  006584  ECA6  F03D         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 15991                           
 15992                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 15993  006588  EC87  F040         	call	_APP_DeviceMSDInitialize	;wreg free
 15994                           
 15995                           ;usb_events.c: 100: break;
 15996                           
 15997                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 15998                           
 15999                           ;usb_events.c: 97: break;
 16000  00658C  0012               	return	
 16001  00658E                     
 16002                           ;usb_events.c: 105: USBCheckHIDRequest();
 16003  00658E  EC70  F025         	call	_USBCheckHIDRequest	;wreg free
 16004                           
 16005                           ;usb_events.c: 108: USBCheckMSDRequest();
 16006  006592  ECDB  F02A         	call	_USBCheckMSDRequest	;wreg free
 16007                           
 16008                           ;usb_events.c: 112: break;
 16009                           
 16010                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 16011                           
 16012                           ;usb_events.c: 109: break;
 16013  006596  0012               	return	
 16014  006598                     
 16015                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 16016  006598  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 16017  00659C  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 16018  0065A0  ECF2  F039         	call	_MSDTransferTerminated	;wreg free
 16019                           
 16020                           ;usb_events.c: 129: }
 16021                           
 16022                           ;usb_events.c: 128: break;
 16023                           
 16024                           ;usb_events.c: 127: default:
 16025                           
 16026                           ;usb_events.c: 125: break;
 16027  0065A4  0012               	return	
 16028  0065A6                     l800:
 16029  0065A6  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 16030  0065AA  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 16031                           
 16032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 16033                           ; Switch size 1, requested type "space"
 16034                           ; Number of cases is 2, Range of values is 0 to 127
 16035                           ; switch strategies available:
 16036                           ; Name         Instructions Cycles
 16037                           ; simple_byte            7     4 (average)
 16038                           ;	Chosen strategy is simple_byte
 16039  0065AE  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 16040  0065B0  0A00               	xorlw	0	; case 0
 16041  0065B2  B4D8               	btfsc	status,2,c
 16042  0065B4  D004               	goto	l15275
 16043  0065B6  0A7F               	xorlw	127	; case 127
 16044  0065B8  A4D8               	btfss	status,2,c
 16045  0065BA  0012               	return	
 16046  0065BC  D01A               	goto	l15277
 16047  0065BE                     l15275:
 16048                           
 16049                           ; Switch size 1, requested type "space"
 16050                           ; Number of cases is 8, Range of values is 1 to 117
 16051                           ; switch strategies available:
 16052                           ; Name         Instructions Cycles
 16053                           ; simple_byte           25    13 (average)
 16054                           ;	Chosen strategy is simple_byte
 16055  0065BE  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16056  0065C0  0A01               	xorlw	1	; case 1
 16057  0065C2  B4D8               	btfsc	status,2,c
 16058  0065C4  D7DF               	goto	l806
 16059  0065C6  0A03               	xorlw	3	; case 2
 16060  0065C8  B4D8               	btfsc	status,2,c
 16061  0065CA  0012               	return	
 16062  0065CC  0A01               	xorlw	1	; case 3
 16063  0065CE  B4D8               	btfsc	status,2,c
 16064  0065D0  D7DE               	goto	l808
 16065  0065D2  0A06               	xorlw	6	; case 5
 16066  0065D4  B4D8               	btfsc	status,2,c
 16067  0065D6  D7E0               	goto	l810
 16068  0065D8  0A77               	xorlw	119	; case 114
 16069  0065DA  B4D8               	btfsc	status,2,c
 16070  0065DC  0012               	return	
 16071  0065DE  0A01               	xorlw	1	; case 115
 16072  0065E0  B4D8               	btfsc	status,2,c
 16073  0065E2  0012               	return	
 16074  0065E4  0A07               	xorlw	7	; case 116
 16075  0065E6  B4D8               	btfsc	status,2,c
 16076  0065E8  D7C9               	goto	l805
 16077  0065EA  0A01               	xorlw	1	; case 117
 16078  0065EC  A4D8               	btfss	status,2,c
 16079  0065EE  0012               	return	
 16080  0065F0  D7C1               	goto	l804
 16081  0065F2                     l15277:
 16082                           
 16083                           ; Switch size 1, requested type "space"
 16084                           ; Number of cases is 1, Range of values is 255 to 255
 16085                           ; switch strategies available:
 16086                           ; Name         Instructions Cycles
 16087                           ; simple_byte            4     3 (average)
 16088                           ;	Chosen strategy is simple_byte
 16089  0065F2  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16090  0065F4  0AFF               	xorlw	255	; case 255
 16091  0065F6  0012               	return	
 16092  0065F8                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 16093                           	opt stack 0
 16094                           tblptru	equ	0xFF8
 16095                           tblptrh	equ	0xFF7
 16096                           tblptrl	equ	0xFF6
 16097                           tablat	equ	0xFF5
 16098                           prodh	equ	0xFF4
 16099                           prodl	equ	0xFF3
 16100                           intcon	equ	0xFF2
 16101                           intcon2	equ	0xFF1
 16102                           intcon3	equ	0xFF0
 16103                           indf0	equ	0xFEF
 16104                           postinc0	equ	0xFEE
 16105                           fsr0h	equ	0xFEA
 16106                           fsr0l	equ	0xFE9
 16107                           wreg	equ	0xFE8
 16108                           indf1	equ	0xFE7
 16109                           postdec1	equ	0xFE5
 16110                           plusw1	equ	0xFE3
 16111                           fsr1h	equ	0xFE2
 16112                           fsr1l	equ	0xFE1
 16113                           indf2	equ	0xFDF
 16114                           postinc2	equ	0xFDE
 16115                           postdec2	equ	0xFDD
 16116                           plusw2	equ	0xFDB
 16117                           fsr2h	equ	0xFDA
 16118                           fsr2l	equ	0xFD9
 16119                           status	equ	0xFD8
 16120                           
 16121 ;; *************** function _USBCheckMSDRequest *****************
 16122 ;; Defined at:
 16123 ;;		line 218 in file "usb_device_msd.c"
 16124 ;; Parameters:    Size  Location     Type
 16125 ;;		None
 16126 ;; Auto vars:     Size  Location     Type
 16127 ;;		None
 16128 ;; Return value:  Size  Location     Type
 16129 ;;                  1    wreg      void 
 16130 ;; Registers used:
 16131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16132 ;; Tracked objects:
 16133 ;;		On entry : 0/0
 16134 ;;		On exit  : 0/0
 16135 ;;		Unchanged: 0/0
 16136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16138 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16140 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16141 ;;Total ram usage:        4 bytes
 16142 ;; Hardware stack levels used:    1
 16143 ;; Hardware stack levels required when called:    1
 16144 ;; This function calls:
 16145 ;;		_USBTransferOnePacket
 16146 ;; This function is called by:
 16147 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16148 ;; This function uses a non-reentrant model
 16149 ;;
 16150                           
 16151                           	psect	text74
 16152  0055B6                     __ptext74:
 16153                           	opt stack 0
 16154  0055B6                     _USBCheckMSDRequest:
 16155                           	opt stack 27
 16156                           
 16157                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 16158                           
 16159                           ;incstack = 0
 16160  0055B6  010D               	movlb	13	; () banked
 16161  0055B8  5130               	movf	48,w,b	;volatile
 16162  0055BA  0B1F               	andlw	31
 16163  0055BC  06E8               	decf	wreg,f,c
 16164  0055BE  A4D8               	btfss	status,2,c
 16165  0055C0  0012               	return	
 16166                           
 16167                           ; BSR set to: 13
 16168                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 16169                           
 16170                           ; BSR set to: 13
 16171                           
 16172                           ; BSR set to: 13
 16173                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 16174  0055C2  5134               	movf	52,w,b	;volatile
 16175  0055C4  A4D8               	btfss	status,2,c
 16176  0055C6  0012               	return	
 16177  0055C8  D04E               	goto	l529
 16178  0055CA                     
 16179                           ; BSR set to: 13
 16180                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 16181                           
 16182                           ; BSR set to: 13
 16183  0055CA  5132               	movf	50,w,b	;volatile
 16184  0055CC  1133               	iorwf	51,w,b	;volatile
 16185  0055CE  A4D8               	btfss	status,2,c
 16186  0055D0  0012               	return	
 16187                           
 16188                           ; BSR set to: 13
 16189  0055D2  5136               	movf	54,w,b	;volatile
 16190  0055D4  1137               	iorwf	55,w,b	;volatile
 16191  0055D6  A4D8               	btfss	status,2,c
 16192  0055D8  0012               	return	
 16193                           
 16194                           ; BSR set to: 13
 16195                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 16196                           
 16197                           ; BSR set to: 13
 16198                           
 16199                           ; BSR set to: 13
 16200                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 16201  0055DA  0E00               	movlw	0
 16202  0055DC  0100               	movlb	0	; () banked
 16203  0055DE  6FE9               	movwf	_MSD_State& (0+255),b
 16204                           
 16205                           ; BSR set to: 0
 16206                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 16207  0055E0  69E8               	setf	_MSDCommandState& (0+255),b
 16208                           
 16209                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 16210  0055E2  0E00               	movlw	0
 16211  0055E4  6FE7               	movwf	_MSDReadState& (0+255),b
 16212                           
 16213                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 16214  0055E6  0E00               	movlw	0
 16215  0055E8  6FE6               	movwf	_MSDWriteState& (0+255),b
 16216                           
 16217                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 16218  0055EA  0E01               	movlw	1
 16219  0055EC  6FE1               	movwf	_MSDCBWValid& (0+255),b
 16220                           
 16221                           ; BSR set to: 0
 16222                           
 16223                           ; BSR set to: 0
 16224                           
 16225                           ; BSR set to: 0
 16226                           
 16227                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 16228  0055EE  C144  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 16229  0055F2  C145  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 16230                           
 16231                           ; BSR set to: 0
 16232  0055F6  500C               	movf	_USBCheckMSDRequest$2319,w,c
 16233  0055F8  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 16234  0055FA  B4D8               	btfsc	status,2,c
 16235  0055FC  D00A               	goto	u6970
 16236                           
 16237                           ; BSR set to: 0
 16238                           
 16239                           ; BSR set to: 0
 16240                           
 16241                           ; BSR set to: 0
 16242                           
 16243                           ; BSR set to: 0
 16244  0055FE  C144  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 16245  005602  C145  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 16246                           
 16247                           ; BSR set to: 0
 16248                           
 16249                           ; BSR set to: 0
 16250  005606  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 16251  00560A  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 16252  00560E  BEDF               	btfsc	indf2,7,c
 16253  005610  D00F               	goto	l534
 16254  005612                     u6970:
 16255                           
 16256                           ; BSR set to: 0
 16257                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 16258                           
 16259                           ; BSR set to: 0
 16260  005612  0E00               	movlw	0
 16261  005614  6E01               	movwf	USBTransferOnePacket@dir,c
 16262  005616  0E40               	movlw	64
 16263  005618  6E02               	movwf	USBTransferOnePacket@data,c
 16264  00561A  0E0D               	movlw	13
 16265  00561C  6E03               	movwf	USBTransferOnePacket@data+1,c
 16266  00561E  0E40               	movlw	64
 16267  005620  6E04               	movwf	USBTransferOnePacket@len,c
 16268  005622  0E02               	movlw	2
 16269  005624  ECFE  F023         	call	_USBTransferOnePacket
 16270  005628  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16271  00562C  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16272  005630                     l534:
 16273                           
 16274                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 16275  005630  0E80               	movlw	128
 16276  005632  0100               	movlb	0	; () banked
 16277  005634  6FC2               	movwf	(_inPipes+3)& (0+255),b
 16278                           
 16279                           ;usb_device_msd.c: 263: break;
 16280  005636  0012               	return	
 16281  005638                     
 16282                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 16283                           
 16284                           ; BSR set to: 0
 16285  005638  010D               	movlb	13	; () banked
 16286  00563A  5132               	movf	50,w,b	;volatile
 16287  00563C  1133               	iorwf	51,w,b	;volatile
 16288  00563E  A4D8               	btfss	status,2,c
 16289  005640  0012               	return	
 16290                           
 16291                           ; BSR set to: 13
 16292  005642  0536               	decf	54,w,b	;volatile
 16293  005644  1137               	iorwf	55,w,b	;volatile
 16294  005646  A4D8               	btfss	status,2,c
 16295  005648  0012               	return	
 16296                           
 16297                           ; BSR set to: 13
 16298                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 16299                           
 16300                           ; BSR set to: 13
 16301                           
 16302                           ; BSR set to: 13
 16303                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 16304  00564A  0E00               	movlw	0
 16305  00564C  6F38               	movwf	56,b	;volatile
 16306                           
 16307                           ; BSR set to: 13
 16308                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 16309  00564E  0E38               	movlw	56
 16310  005650  0100               	movlb	0	; () banked
 16311  005652  6FBF               	movwf	_inPipes& (0+255),b
 16312  005654  0E0D               	movlw	13
 16313  005656  6FC0               	movwf	(_inPipes+1)& (0+255),b
 16314                           
 16315                           ; BSR set to: 0
 16316  005658  0E00               	movlw	0
 16317  00565A  6FC4               	movwf	(_inPipes+5)& (0+255),b
 16318  00565C  0E01               	movlw	1
 16319  00565E  6FC3               	movwf	(_inPipes+4)& (0+255),b
 16320                           
 16321                           ; BSR set to: 0
 16322  005660  0EC1               	movlw	193
 16323  005662  6FC2               	movwf	(_inPipes+3)& (0+255),b
 16324                           
 16325                           ; BSR set to: 0
 16326                           ;usb_device_msd.c: 278: }
 16327                           
 16328                           ;usb_device_msd.c: 277: break;
 16329  005664  0012               	return	
 16330  005666                     l529:
 16331                           
 16332                           ; BSR set to: 0
 16333  005666  010D               	movlb	13	; () banked
 16334  005668  5131               	movf	49,w,b	;volatile
 16335                           
 16336                           ; Switch size 1, requested type "space"
 16337                           ; Number of cases is 2, Range of values is 254 to 255
 16338                           ; switch strategies available:
 16339                           ; Name         Instructions Cycles
 16340                           ; simple_byte            7     4 (average)
 16341                           ;	Chosen strategy is simple_byte
 16342  00566A  0AFE               	xorlw	254	; case 254
 16343  00566C  B4D8               	btfsc	status,2,c
 16344  00566E  D7E4               	goto	l546
 16345  005670  0A01               	xorlw	1	; case 255
 16346  005672  A4D8               	btfss	status,2,c
 16347  005674  0012               	return	
 16348  005676  D7A9               	goto	l530
 16349  005678                     __end_of_USBCheckMSDRequest:
 16350                           	opt stack 0
 16351                           tblptru	equ	0xFF8
 16352                           tblptrh	equ	0xFF7
 16353                           tblptrl	equ	0xFF6
 16354                           tablat	equ	0xFF5
 16355                           prodh	equ	0xFF4
 16356                           prodl	equ	0xFF3
 16357                           intcon	equ	0xFF2
 16358                           intcon2	equ	0xFF1
 16359                           intcon3	equ	0xFF0
 16360                           indf0	equ	0xFEF
 16361                           postinc0	equ	0xFEE
 16362                           fsr0h	equ	0xFEA
 16363                           fsr0l	equ	0xFE9
 16364                           wreg	equ	0xFE8
 16365                           indf1	equ	0xFE7
 16366                           postdec1	equ	0xFE5
 16367                           plusw1	equ	0xFE3
 16368                           fsr1h	equ	0xFE2
 16369                           fsr1l	equ	0xFE1
 16370                           indf2	equ	0xFDF
 16371                           postinc2	equ	0xFDE
 16372                           postdec2	equ	0xFDD
 16373                           plusw2	equ	0xFDB
 16374                           fsr2h	equ	0xFDA
 16375                           fsr2l	equ	0xFD9
 16376                           status	equ	0xFD8
 16377                           
 16378 ;; *************** function _USBCheckHIDRequest *****************
 16379 ;; Defined at:
 16380 ;;		line 153 in file "usb_device_hid.c"
 16381 ;; Parameters:    Size  Location     Type
 16382 ;;		None
 16383 ;; Auto vars:     Size  Location     Type
 16384 ;;		None
 16385 ;; Return value:  Size  Location     Type
 16386 ;;                  1    wreg      void 
 16387 ;; Registers used:
 16388 ;;		wreg, status,2, status,0
 16389 ;; Tracked objects:
 16390 ;;		On entry : 0/0
 16391 ;;		On exit  : 0/0
 16392 ;;		Unchanged: 0/0
 16393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16398 ;;Total ram usage:        0 bytes
 16399 ;; Hardware stack levels used:    1
 16400 ;; This function calls:
 16401 ;;		Nothing
 16402 ;; This function is called by:
 16403 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16404 ;; This function uses a non-reentrant model
 16405 ;;
 16406                           
 16407                           	psect	text75
 16408  004AE0                     __ptext75:
 16409                           	opt stack 0
 16410  004AE0                     _USBCheckHIDRequest:
 16411                           	opt stack 28
 16412                           
 16413                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 16414                           
 16415                           ;incstack = 0
 16416  004AE0  010D               	movlb	13	; () banked
 16417  004AE2  5130               	movf	48,w,b	;volatile
 16418  004AE4  0B1F               	andlw	31
 16419  004AE6  06E8               	decf	wreg,f,c
 16420  004AE8  A4D8               	btfss	status,2,c
 16421  004AEA  0012               	return	
 16422                           
 16423                           ; BSR set to: 13
 16424                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 16425                           
 16426                           ; BSR set to: 13
 16427                           
 16428                           ; BSR set to: 13
 16429  004AEC  5134               	movf	52,w,b	;volatile
 16430  004AEE  A4D8               	btfss	status,2,c
 16431  004AF0  0012               	return	
 16432                           
 16433                           ; BSR set to: 13
 16434                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 16435                           
 16436                           ; BSR set to: 13
 16437                           
 16438                           ; BSR set to: 13
 16439  004AF2  0E06               	movlw	6
 16440  004AF4  1931               	xorwf	49,w,b	;volatile
 16441  004AF6  B4D8               	btfsc	status,2,c
 16442  004AF8  D01A               	goto	l411
 16443  004AFA  D022               	goto	l414
 16444  004AFC                     
 16445                           ; BSR set to: 13
 16446                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 16447                           
 16448                           ; BSR set to: 13
 16449  004AFC  0100               	movlb	0	; () banked
 16450  004AFE  05FE               	decf	_USBActiveConfiguration& (0+255),w,b
 16451  004B00  A4D8               	btfss	status,2,c
 16452  004B02  D01E               	goto	l414
 16453                           
 16454                           ; BSR set to: 0
 16455                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 16456  004B04  0EBA               	movlw	low (_configDescriptor1+18)
 16457  004B06  6FBF               	movwf	_inPipes& (0+255),b
 16458  004B08  0E8E               	movlw	high (_configDescriptor1+18)
 16459  004B0A  6FC0               	movwf	(_inPipes+1)& (0+255),b
 16460                           
 16461                           ; BSR set to: 0
 16462  004B0C  0E00               	movlw	0
 16463  004B0E  6FC4               	movwf	(_inPipes+5)& (0+255),b
 16464  004B10  0E09               	movlw	9
 16465  004B12  D00B               	goto	L13
 16466  004B14                     l10251:
 16467                           
 16468                           ; BSR set to: 0
 16469  004B14  0EC0               	movlw	192
 16470  004B16  6FC2               	movwf	(_inPipes+3)& (0+255),b
 16471                           
 16472                           ; BSR set to: 0
 16473                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 16474  004B18  D013               	goto	l414
 16475  004B1A                     
 16476                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 16477                           
 16478                           ; BSR set to: 0
 16479  004B1A  0E6E               	movlw	low _hid_rpt01
 16480  004B1C  0100               	movlb	0	; () banked
 16481  004B1E  6FBF               	movwf	_inPipes& (0+255),b
 16482  004B20  0E8F               	movlw	high _hid_rpt01
 16483  004B22  6FC0               	movwf	(_inPipes+1)& (0+255),b
 16484                           
 16485                           ; BSR set to: 0
 16486  004B24  0E00               	movlw	0
 16487  004B26  6FC4               	movwf	(_inPipes+5)& (0+255),b
 16488  004B28  0E1D               	movlw	29
 16489  004B2A                     L13:
 16490  004B2A  6FC3               	movwf	(_inPipes+4)& (0+255),b
 16491  004B2C  D7F3               	goto	l10251
 16492  004B2E                     l411:
 16493                           
 16494                           ; BSR set to: 0
 16495  004B2E  010D               	movlb	13	; () banked
 16496  004B30  5133               	movf	51,w,b	;volatile
 16497                           
 16498                           ; Switch size 1, requested type "space"
 16499                           ; Number of cases is 3, Range of values is 33 to 35
 16500                           ; switch strategies available:
 16501                           ; Name         Instructions Cycles
 16502                           ; simple_byte           10     6 (average)
 16503                           ;	Chosen strategy is simple_byte
 16504  004B32  0A21               	xorlw	33	; case 33
 16505  004B34  B4D8               	btfsc	status,2,c
 16506  004B36  D7E2               	goto	l412
 16507  004B38  0A03               	xorlw	3	; case 34
 16508  004B3A  B4D8               	btfsc	status,2,c
 16509  004B3C  D7EE               	goto	l415
 16510  004B3E  0A01               	xorlw	1	; case 35
 16511  004B40                     l414:
 16512                           
 16513                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 16514                           
 16515                           ; BSR set to: 13
 16516                           
 16517                           ; BSR set to: 13
 16518  004B40  010D               	movlb	13	; () banked
 16519  004B42  3930               	swapf	48,w,b	;volatile
 16520  004B44  32E8               	rrcf	wreg,f,c
 16521  004B46  0B03               	andlw	3
 16522  004B48  06E8               	decf	wreg,f,c
 16523  004B4A  A4D8               	btfss	status,2,c
 16524  004B4C  0012               	return	
 16525  004B4E  D024               	goto	l418
 16526  004B50                     
 16527                           ; BSR set to: 13
 16528                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 16529                           
 16530                           ; BSR set to: 13
 16531  004B50  0EFC               	movlw	low _idle_rate
 16532  004B52  0100               	movlb	0	; () banked
 16533  004B54  6FBF               	movwf	_inPipes& (0+255),b
 16534  004B56  0E00               	movlw	high _idle_rate
 16535  004B58  6FC0               	movwf	(_inPipes+1)& (0+255),b
 16536                           
 16537                           ; BSR set to: 0
 16538  004B5A  0E00               	movlw	0
 16539  004B5C  6FC4               	movwf	(_inPipes+5)& (0+255),b
 16540  004B5E  0E01               	movlw	1
 16541  004B60  6FC3               	movwf	(_inPipes+4)& (0+255),b
 16542                           
 16543                           ; BSR set to: 0
 16544  004B62  0EC1               	movlw	193
 16545  004B64  6FC2               	movwf	(_inPipes+3)& (0+255),b
 16546                           
 16547                           ;usb_device_hid.c: 223: break;
 16548  004B66  0012               	return	
 16549  004B68                     
 16550                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 16551                           
 16552                           ; BSR set to: 0
 16553  004B68  0E80               	movlw	128
 16554  004B6A  0100               	movlb	0	; () banked
 16555  004B6C  6FC2               	movwf	(_inPipes+3)& (0+255),b
 16556                           
 16557                           ; BSR set to: 0
 16558                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 16559  004B6E  CD33 F0FC          	movff	3379,_idle_rate	;volatile
 16560                           
 16561                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 16562  004B72  0012               	return	
 16563  004B74                     
 16564                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 16565                           
 16566                           ; BSR set to: 0
 16567  004B74  0EFB               	movlw	low _active_protocol
 16568  004B76  0100               	movlb	0	; () banked
 16569  004B78  6FBF               	movwf	_inPipes& (0+255),b
 16570  004B7A  0E00               	movlw	high _active_protocol
 16571  004B7C  6FC0               	movwf	(_inPipes+1)& (0+255),b
 16572                           
 16573                           ; BSR set to: 0
 16574  004B7E  0E00               	movlw	0
 16575  004B80  6FC4               	movwf	(_inPipes+5)& (0+255),b
 16576  004B82  0E01               	movlw	1
 16577  004B84  6FC3               	movwf	(_inPipes+4)& (0+255),b
 16578                           
 16579                           ; BSR set to: 0
 16580  004B86  0E81               	movlw	129
 16581  004B88  6FC2               	movwf	(_inPipes+3)& (0+255),b
 16582                           
 16583                           ;usb_device_hid.c: 234: break;
 16584  004B8A  0012               	return	
 16585  004B8C                     
 16586                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 16587                           
 16588                           ; BSR set to: 0
 16589  004B8C  0E80               	movlw	128
 16590  004B8E  0100               	movlb	0	; () banked
 16591  004B90  6FC2               	movwf	(_inPipes+3)& (0+255),b
 16592                           
 16593                           ; BSR set to: 0
 16594                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 16595  004B92  CD32 F0FB          	movff	3378,_active_protocol	;volatile
 16596                           
 16597                           ; BSR set to: 0
 16598                           ;usb_device_hid.c: 239: }
 16599                           
 16600                           ;usb_device_hid.c: 238: break;
 16601  004B96  0012               	return	
 16602  004B98                     l418:
 16603                           
 16604                           ; BSR set to: 0
 16605  004B98  010D               	movlb	13	; () banked
 16606  004B9A  5131               	movf	49,w,b	;volatile
 16607                           
 16608                           ; Switch size 1, requested type "space"
 16609                           ; Number of cases is 6, Range of values is 1 to 11
 16610                           ; switch strategies available:
 16611                           ; Name         Instructions Cycles
 16612                           ; simple_byte           19    10 (average)
 16613                           ;	Chosen strategy is simple_byte
 16614  004B9C  0A01               	xorlw	1	; case 1
 16615  004B9E  B4D8               	btfsc	status,2,c
 16616  004BA0  0012               	return	
 16617  004BA2  0A03               	xorlw	3	; case 2
 16618  004BA4  B4D8               	btfsc	status,2,c
 16619  004BA6  D7D4               	goto	l422
 16620  004BA8  0A01               	xorlw	1	; case 3
 16621  004BAA  B4D8               	btfsc	status,2,c
 16622  004BAC  D7E3               	goto	l424
 16623  004BAE  0A0A               	xorlw	10	; case 9
 16624  004BB0  B4D8               	btfsc	status,2,c
 16625  004BB2  0012               	return	
 16626  004BB4  0A03               	xorlw	3	; case 10
 16627  004BB6  B4D8               	btfsc	status,2,c
 16628  004BB8  D7D7               	goto	l423
 16629  004BBA  0A01               	xorlw	1	; case 11
 16630  004BBC  A4D8               	btfss	status,2,c
 16631  004BBE  0012               	return	
 16632  004BC0  D7E5               	goto	l425
 16633  004BC2                     __end_of_USBCheckHIDRequest:
 16634                           	opt stack 0
 16635                           tblptru	equ	0xFF8
 16636                           tblptrh	equ	0xFF7
 16637                           tblptrl	equ	0xFF6
 16638                           tablat	equ	0xFF5
 16639                           prodh	equ	0xFF4
 16640                           prodl	equ	0xFF3
 16641                           intcon	equ	0xFF2
 16642                           intcon2	equ	0xFF1
 16643                           intcon3	equ	0xFF0
 16644                           indf0	equ	0xFEF
 16645                           postinc0	equ	0xFEE
 16646                           fsr0h	equ	0xFEA
 16647                           fsr0l	equ	0xFE9
 16648                           wreg	equ	0xFE8
 16649                           indf1	equ	0xFE7
 16650                           postdec1	equ	0xFE5
 16651                           plusw1	equ	0xFE3
 16652                           fsr1h	equ	0xFE2
 16653                           fsr1l	equ	0xFE1
 16654                           indf2	equ	0xFDF
 16655                           postinc2	equ	0xFDE
 16656                           postdec2	equ	0xFDD
 16657                           plusw2	equ	0xFDB
 16658                           fsr2h	equ	0xFDA
 16659                           fsr2l	equ	0xFD9
 16660                           status	equ	0xFD8
 16661                           
 16662 ;; *************** function _SYSTEM_Initialize *****************
 16663 ;; Defined at:
 16664 ;;		line 80 in file "system.c"
 16665 ;; Parameters:    Size  Location     Type
 16666 ;;  state           1    wreg     enum E6623
 16667 ;; Auto vars:     Size  Location     Type
 16668 ;;  state           1    4[COMRAM] enum E6623
 16669 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 16670 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 16671 ;; Return value:  Size  Location     Type
 16672 ;;                  1    wreg      void 
 16673 ;; Registers used:
 16674 ;;		wreg, status,2, status,0
 16675 ;; Tracked objects:
 16676 ;;		On entry : 0/0
 16677 ;;		On exit  : 0/0
 16678 ;;		Unchanged: 0/0
 16679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16681 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16683 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16684 ;;Total ram usage:        5 bytes
 16685 ;; Hardware stack levels used:    1
 16686 ;; This function calls:
 16687 ;;		Nothing
 16688 ;; This function is called by:
 16689 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16690 ;;		_main
 16691 ;; This function uses a non-reentrant model
 16692 ;;
 16693                           
 16694                           	psect	text76
 16695  007592                     __ptext76:
 16696                           	opt stack 0
 16697  007592                     _SYSTEM_Initialize:
 16698                           	opt stack 28
 16699                           
 16700                           ;incstack = 0
 16701                           ;SYSTEM_Initialize@state stored from wreg
 16702  007592  6E05               	movwf	SYSTEM_Initialize@state,c
 16703                           
 16704                           ;system.c: 82: switch(state)
 16705  007594  D01D               	goto	l926
 16706  007596                     
 16707                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 16708  007596  0E02               	movlw	2
 16709  007598  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 16710  00759A  0E58               	movlw	88
 16711  00759C  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 16712                           
 16713                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 16714  00759E  8C9B               	bsf	3995,6,c	;volatile
 16715  0075A0                     l10437:
 16716  0075A0  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 16717  0075A2  A0D8               	btfss	status,0,c
 16718  0075A4  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 16719  0075A6  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 16720  0075A8  E1FB               	bnz	l10437
 16721  0075AA  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 16722  0075AC  B4D8               	btfsc	status,2,c
 16723  0075AE  0012               	return	
 16724  0075B0  D7F7               	goto	l929
 16725  0075B2                     
 16726                           ;system.c: 119: OSCCON = 0x70;
 16727  0075B2  0E70               	movlw	112
 16728  0075B4  6ED3               	movwf	4051,c	;volatile
 16729                           
 16730                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 16731  0075B6  0E03               	movlw	3
 16732  0075B8  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3113+1,c
 16733  0075BA  0E20               	movlw	32
 16734  0075BC  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3113,c
 16735  0075BE                     l10441:
 16736  0075BE  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3113,f,c
 16737  0075C0  A0D8               	btfss	status,0,c
 16738  0075C2  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3113+1,f,c
 16739  0075C4  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3113,w,c
 16740  0075C6  E1FB               	bnz	l10441
 16741  0075C8  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3113+1,w,c
 16742  0075CA  B4D8               	btfsc	status,2,c
 16743  0075CC  0012               	return	
 16744  0075CE  D7F7               	goto	l935
 16745  0075D0                     l926:
 16746  0075D0  5005               	movf	SYSTEM_Initialize@state,w,c
 16747                           
 16748                           ; Switch size 1, requested type "space"
 16749                           ; Number of cases is 3, Range of values is 0 to 2
 16750                           ; switch strategies available:
 16751                           ; Name         Instructions Cycles
 16752                           ; simple_byte           10     6 (average)
 16753                           ;	Chosen strategy is simple_byte
 16754  0075D2  0A00               	xorlw	0	; case 0
 16755  0075D4  B4D8               	btfsc	status,2,c
 16756  0075D6  D7DF               	goto	l927
 16757  0075D8  0A01               	xorlw	1	; case 1
 16758  0075DA  B4D8               	btfsc	status,2,c
 16759  0075DC  0012               	return	
 16760  0075DE  0A03               	xorlw	3	; case 2
 16761  0075E0  A4D8               	btfss	status,2,c
 16762  0075E2  0012               	return	
 16763  0075E4  D7E6               	goto	l933
 16764  0075E6                     __end_of_SYSTEM_Initialize:
 16765                           	opt stack 0
 16766                           tblptru	equ	0xFF8
 16767                           tblptrh	equ	0xFF7
 16768                           tblptrl	equ	0xFF6
 16769                           tablat	equ	0xFF5
 16770                           prodh	equ	0xFF4
 16771                           prodl	equ	0xFF3
 16772                           intcon	equ	0xFF2
 16773                           intcon2	equ	0xFF1
 16774                           intcon3	equ	0xFF0
 16775                           indf0	equ	0xFEF
 16776                           postinc0	equ	0xFEE
 16777                           fsr0h	equ	0xFEA
 16778                           fsr0l	equ	0xFE9
 16779                           wreg	equ	0xFE8
 16780                           indf1	equ	0xFE7
 16781                           postdec1	equ	0xFE5
 16782                           plusw1	equ	0xFE3
 16783                           fsr1h	equ	0xFE2
 16784                           fsr1l	equ	0xFE1
 16785                           indf2	equ	0xFDF
 16786                           postinc2	equ	0xFDE
 16787                           postdec2	equ	0xFDD
 16788                           plusw2	equ	0xFDB
 16789                           fsr2h	equ	0xFDA
 16790                           fsr2l	equ	0xFD9
 16791                           status	equ	0xFD8
 16792                           
 16793 ;; *************** function _MSDTransferTerminated *****************
 16794 ;; Defined at:
 16795 ;;		line 1674 in file "usb_device_msd.c"
 16796 ;; Parameters:    Size  Location     Type
 16797 ;;  handle          2   11[COMRAM] PTR void 
 16798 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 16799 ;;		 -> BDT(48), 
 16800 ;; Auto vars:     Size  Location     Type
 16801 ;;		None
 16802 ;; Return value:  Size  Location     Type
 16803 ;;                  1    wreg      void 
 16804 ;; Registers used:
 16805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16806 ;; Tracked objects:
 16807 ;;		On entry : 0/0
 16808 ;;		On exit  : 0/0
 16809 ;;		Unchanged: 0/0
 16810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16812 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16814 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16815 ;;Total ram usage:        4 bytes
 16816 ;; Hardware stack levels used:    1
 16817 ;; Hardware stack levels required when called:    1
 16818 ;; This function calls:
 16819 ;;		_USBStallEndpoint
 16820 ;;		_USBTransferOnePacket
 16821 ;; This function is called by:
 16822 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16823 ;; This function uses a non-reentrant model
 16824 ;;
 16825                           
 16826                           	psect	text77
 16827  0073E4                     __ptext77:
 16828                           	opt stack 0
 16829  0073E4                     _MSDTransferTerminated:
 16830                           	opt stack 27
 16831                           
 16832                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 16833                           
 16834                           ;incstack = 0
 16835  0073E4  0100               	movlb	0	; () banked
 16836  0073E6  51E1               	movf	_MSDCBWValid& (0+255),w,b
 16837  0073E8  A4D8               	btfss	status,2,c
 16838  0073EA  D00B               	goto	l764
 16839                           
 16840                           ; BSR set to: 0
 16841                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 16842  0073EC  0E01               	movlw	1
 16843  0073EE  6E01               	movwf	USBStallEndpoint@dir,c
 16844  0073F0  0E02               	movlw	2
 16845  0073F2  ECF1  F021         	call	_USBStallEndpoint
 16846                           
 16847                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 16848  0073F6  0E00               	movlw	0
 16849  0073F8  6E01               	movwf	USBStallEndpoint@dir,c
 16850  0073FA  0E02               	movlw	2
 16851  0073FC  ECF1  F021         	call	_USBStallEndpoint
 16852                           
 16853                           ;usb_device_msd.c: 1681: }
 16854  007400  0012               	return	
 16855  007402                     l764:
 16856  007402  C144  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 16857  007406  C145  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 16858  00740A  500E               	movf	_MSDTransferTerminated$2407,w,c
 16859  00740C  180C               	xorwf	MSDTransferTerminated@handle,w,c
 16860  00740E  E114               	bnz	l767
 16861  007410  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 16862  007412  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 16863  007414  A4D8               	btfss	status,2,c
 16864  007416  0012               	return	
 16865                           
 16866                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 16867  007418  0E00               	movlw	0
 16868  00741A  6E01               	movwf	USBTransferOnePacket@dir,c
 16869  00741C  0E40               	movlw	64
 16870  00741E  6E02               	movwf	USBTransferOnePacket@data,c
 16871  007420  0E0D               	movlw	13
 16872  007422  6E03               	movwf	USBTransferOnePacket@data+1,c
 16873  007424  0E40               	movlw	64
 16874  007426  6E04               	movwf	USBTransferOnePacket@len,c
 16875  007428  0E02               	movlw	2
 16876  00742A  ECFE  F023         	call	_USBTransferOnePacket
 16877  00742E  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16878  007432  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16879  007436  0012               	return	
 16880  007438                     l767:
 16881  007438  0012               	return		;funcret
 16882  00743A                     __end_of_MSDTransferTerminated:
 16883                           	opt stack 0
 16884                           tblptru	equ	0xFF8
 16885                           tblptrh	equ	0xFF7
 16886                           tblptrl	equ	0xFF6
 16887                           tablat	equ	0xFF5
 16888                           prodh	equ	0xFF4
 16889                           prodl	equ	0xFF3
 16890                           intcon	equ	0xFF2
 16891                           intcon2	equ	0xFF1
 16892                           intcon3	equ	0xFF0
 16893                           indf0	equ	0xFEF
 16894                           postinc0	equ	0xFEE
 16895                           fsr0h	equ	0xFEA
 16896                           fsr0l	equ	0xFE9
 16897                           wreg	equ	0xFE8
 16898                           indf1	equ	0xFE7
 16899                           postdec1	equ	0xFE5
 16900                           plusw1	equ	0xFE3
 16901                           fsr1h	equ	0xFE2
 16902                           fsr1l	equ	0xFE1
 16903                           indf2	equ	0xFDF
 16904                           postinc2	equ	0xFDE
 16905                           postdec2	equ	0xFDD
 16906                           plusw2	equ	0xFDB
 16907                           fsr2h	equ	0xFDA
 16908                           fsr2l	equ	0xFD9
 16909                           status	equ	0xFD8
 16910                           
 16911 ;; *************** function _APP_DeviceMSDInitialize *****************
 16912 ;; Defined at:
 16913 ;;		line 84 in file "app_device_msd.c"
 16914 ;; Parameters:    Size  Location     Type
 16915 ;;		None
 16916 ;; Auto vars:     Size  Location     Type
 16917 ;;		None
 16918 ;; Return value:  Size  Location     Type
 16919 ;;                  1    wreg      void 
 16920 ;; Registers used:
 16921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16922 ;; Tracked objects:
 16923 ;;		On entry : 0/0
 16924 ;;		On exit  : 0/0
 16925 ;;		Unchanged: 0/0
 16926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16931 ;;Total ram usage:        0 bytes
 16932 ;; Hardware stack levels used:    1
 16933 ;; Hardware stack levels required when called:    2
 16934 ;; This function calls:
 16935 ;;		_USBEnableEndpoint
 16936 ;;		_USBMSDInit
 16937 ;; This function is called by:
 16938 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16939 ;; This function uses a non-reentrant model
 16940 ;;
 16941                           
 16942                           	psect	text78
 16943  00810E                     __ptext78:
 16944                           	opt stack 0
 16945  00810E                     _APP_DeviceMSDInitialize:
 16946                           	opt stack 26
 16947                           
 16948                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 16949                           
 16950                           ;incstack = 0
 16951  00810E  0E1E               	movlw	30
 16952  008110  6E09               	movwf	USBEnableEndpoint@options,c
 16953  008112  0E02               	movlw	2
 16954  008114  ECE4  F03C         	call	_USBEnableEndpoint
 16955                           
 16956                           ;app_device_msd.c: 93: USBMSDInit();
 16957  008118  ECF8  F022         	call	_USBMSDInit	;wreg free
 16958  00811C  0012               	return		;funcret
 16959  00811E                     __end_of_APP_DeviceMSDInitialize:
 16960                           	opt stack 0
 16961                           tblptru	equ	0xFF8
 16962                           tblptrh	equ	0xFF7
 16963                           tblptrl	equ	0xFF6
 16964                           tablat	equ	0xFF5
 16965                           prodh	equ	0xFF4
 16966                           prodl	equ	0xFF3
 16967                           intcon	equ	0xFF2
 16968                           intcon2	equ	0xFF1
 16969                           intcon3	equ	0xFF0
 16970                           indf0	equ	0xFEF
 16971                           postinc0	equ	0xFEE
 16972                           fsr0h	equ	0xFEA
 16973                           fsr0l	equ	0xFE9
 16974                           wreg	equ	0xFE8
 16975                           indf1	equ	0xFE7
 16976                           postdec1	equ	0xFE5
 16977                           plusw1	equ	0xFE3
 16978                           fsr1h	equ	0xFE2
 16979                           fsr1l	equ	0xFE1
 16980                           indf2	equ	0xFDF
 16981                           postinc2	equ	0xFDE
 16982                           postdec2	equ	0xFDD
 16983                           plusw2	equ	0xFDB
 16984                           fsr2h	equ	0xFDA
 16985                           fsr2l	equ	0xFD9
 16986                           status	equ	0xFD8
 16987                           
 16988 ;; *************** function _USBMSDInit *****************
 16989 ;; Defined at:
 16990 ;;		line 142 in file "usb_device_msd.c"
 16991 ;; Parameters:    Size  Location     Type
 16992 ;;		None
 16993 ;; Auto vars:     Size  Location     Type
 16994 ;;		None
 16995 ;; Return value:  Size  Location     Type
 16996 ;;                  1    wreg      void 
 16997 ;; Registers used:
 16998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16999 ;; Tracked objects:
 17000 ;;		On entry : 0/0
 17001 ;;		On exit  : 0/0
 17002 ;;		Unchanged: 0/0
 17003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17006 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17007 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17008 ;;Total ram usage:        3 bytes
 17009 ;; Hardware stack levels used:    1
 17010 ;; Hardware stack levels required when called:    1
 17011 ;; This function calls:
 17012 ;;		_ExternalFlash_MediaDetect
 17013 ;;		_ExternalFlash_MediaInitialize
 17014 ;;		_ResetSenseData
 17015 ;;		_USBTransferOnePacket
 17016 ;; This function is called by:
 17017 ;;		_APP_DeviceMSDInitialize
 17018 ;; This function uses a non-reentrant model
 17019 ;;
 17020                           
 17021                           	psect	text79
 17022  0045F0                     __ptext79:
 17023                           	opt stack 0
 17024  0045F0                     _USBMSDInit:
 17025                           	opt stack 26
 17026                           
 17027                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 17028                           
 17029                           ;incstack = 0
 17030  0045F0  0E00               	movlw	0
 17031  0045F2  6E01               	movwf	USBTransferOnePacket@dir,c
 17032  0045F4  0E40               	movlw	64
 17033  0045F6  6E02               	movwf	USBTransferOnePacket@data,c
 17034  0045F8  0E0D               	movlw	13
 17035  0045FA  6E03               	movwf	USBTransferOnePacket@data+1,c
 17036  0045FC  0E40               	movlw	64
 17037  0045FE  6E04               	movwf	USBTransferOnePacket@len,c
 17038  004600  0E02               	movlw	2
 17039  004602  ECFE  F023         	call	_USBTransferOnePacket
 17040  004606  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 17041  00460A  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 17042  00460E  C0C9  F0D5         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 17043  004612  C0CA  F0D6         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 17044                           
 17045                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 17046  004616  0E00               	movlw	0
 17047  004618  0100               	movlb	0	; () banked
 17048  00461A  6FE9               	movwf	_MSD_State& (0+255),b
 17049                           
 17050                           ; BSR set to: 0
 17051                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 17052  00461C  69E8               	setf	_MSDCommandState& (0+255),b
 17053                           
 17054                           ; BSR set to: 0
 17055                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 17056  00461E  0E00               	movlw	0
 17057  004620  6FE7               	movwf	_MSDReadState& (0+255),b
 17058                           
 17059                           ; BSR set to: 0
 17060                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 17061  004622  0E00               	movlw	0
 17062  004624  6FE6               	movwf	_MSDWriteState& (0+255),b
 17063                           
 17064                           ; BSR set to: 0
 17065                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 17066  004626  0E00               	movlw	0
 17067  004628  6FE2               	movwf	_MSDHostNoData& (0+255),b
 17068                           
 17069                           ; BSR set to: 0
 17070                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 17071  00462A  0E00               	movlw	0
 17072  00462C  0101               	movlb	1	; () banked
 17073  00462E  6F56               	movwf	_gblNumBLKS& (0+255),b
 17074  004630  0E00               	movlw	0
 17075  004632  6F57               	movwf	(_gblNumBLKS+1)& (0+255),b
 17076  004634  0E00               	movlw	0
 17077  004636  6F58               	movwf	(_gblNumBLKS+2)& (0+255),b
 17078  004638  0E00               	movlw	0
 17079  00463A  6F59               	movwf	(_gblNumBLKS+3)& (0+255),b
 17080                           
 17081                           ; BSR set to: 1
 17082                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 17083  00463C  0E00               	movlw	0
 17084  00463E  6F52               	movwf	_gblBLKLen& (0+255),b
 17085  004640  0E00               	movlw	0
 17086  004642  6F53               	movwf	(_gblBLKLen+1)& (0+255),b
 17087  004644  0E00               	movlw	0
 17088  004646  6F54               	movwf	(_gblBLKLen+2)& (0+255),b
 17089  004648  0E00               	movlw	0
 17090  00464A  6F55               	movwf	(_gblBLKLen+3)& (0+255),b
 17091                           
 17092                           ; BSR set to: 1
 17093                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 17094  00464C  0E01               	movlw	1
 17095  00464E  0100               	movlb	0	; () banked
 17096  004650  6FE1               	movwf	_MSDCBWValid& (0+255),b
 17097                           
 17098                           ; BSR set to: 0
 17099                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 17100  004652  0E00               	movlw	0
 17101  004654  0101               	movlb	1	; () banked
 17102  004656  6F7F               	movwf	(_gblMediaPresent+1)& (0+255),b
 17103  004658  0E00               	movlw	0
 17104  00465A  6F7E               	movwf	_gblMediaPresent& (0+255),b
 17105                           
 17106                           ; BSR set to: 1
 17107                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 17108  00465C  0E00               	movlw	0
 17109  00465E  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 17110  004660  D046               	goto	l518
 17111  004662                     
 17112                           ; BSR set to: 1
 17113                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 17114                           
 17115                           ; BSR set to: 1
 17116  004662  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17117  004664  0D01               	mullw	1
 17118  004666  0EE3               	movlw	low _SoftDetach
 17119  004668  24F3               	addwf	prodl,w,c
 17120  00466A  6ED9               	movwf	fsr2l,c
 17121  00466C  0E00               	movlw	high _SoftDetach
 17122  00466E  20F4               	addwfc	prodh,w,c
 17123  004670  6EDA               	movwf	fsr2h,c
 17124  004672  0E00               	movlw	0
 17125  004674  6EDF               	movwf	indf2,c
 17126                           
 17127                           ; BSR set to: 1
 17128                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 17129  004676  C1E6  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 17130  00467A  C1E7  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 17131  00467E  D801               	call	u6598
 17132  004680  D009               	goto	u6599
 17133  004682                     u6598:
 17134  004682  0005               	push	
 17135  004684  6EFA               	movwf	pclath,c
 17136  004686  51DE               	movf	(_LUN+6)& (0+255),w,b
 17137  004688  6EFD               	movwf	tosl,c
 17138  00468A  51DF               	movf	(_LUN+7)& (0+255),w,b
 17139  00468C  6EFE               	movwf	tosh,c
 17140  00468E  6AFF               	clrf	tosu,c
 17141  004690  50FA               	movf	pclath,w,c
 17142  004692  0012               	return		;indir
 17143  004694                     u6599:
 17144  004694  0900               	iorlw	0
 17145  004696  B4D8               	btfsc	status,2,c
 17146  004698  D026               	goto	l521
 17147                           
 17148                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 17149  00469A  C1E6  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 17150  00469E  C1E7  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 17151  0046A2  D801               	call	u6618
 17152  0046A4  D00A               	goto	u6619
 17153  0046A6                     u6618:
 17154  0046A6  0005               	push	
 17155  0046A8  6EFA               	movwf	pclath,c
 17156  0046AA  0101               	movlb	1	; () banked
 17157  0046AC  51D8               	movf	_LUN& (0+255),w,b
 17158  0046AE  6EFD               	movwf	tosl,c
 17159  0046B0  51D9               	movf	(_LUN+1)& (0+255),w,b
 17160  0046B2  6EFE               	movwf	tosh,c
 17161  0046B4  6AFF               	clrf	tosu,c
 17162  0046B6  50FA               	movf	pclath,w,c
 17163  0046B8  0012               	return		;indir
 17164  0046BA                     u6619:
 17165  0046BA  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 17166  0046BC  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 17167  0046BE  B4D8               	btfsc	status,2,c
 17168  0046C0  D012               	goto	l521
 17169                           
 17170                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 17171  0046C2  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 17172  0046C6  0E01               	movlw	1
 17173  0046C8  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 17174  0046CA  0E00               	movlw	0
 17175  0046CC  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 17176  0046CE  2A0C               	incf	??_USBMSDInit,f,c
 17177  0046D0  D003               	goto	u6634
 17178  0046D2                     u6635:
 17179  0046D2  90D8               	bcf	status,0,c
 17180  0046D4  360D               	rlcf	??_USBMSDInit+1,f,c
 17181  0046D6  360E               	rlcf	??_USBMSDInit+2,f,c
 17182  0046D8                     u6634:
 17183  0046D8  2E0C               	decfsz	??_USBMSDInit,f,c
 17184  0046DA  D7FB               	goto	u6635
 17185  0046DC  500D               	movf	??_USBMSDInit+1,w,c
 17186  0046DE  0101               	movlb	1	; () banked
 17187  0046E0  137E               	iorwf	_gblMediaPresent& (0+255),f,b
 17188  0046E2  500E               	movf	??_USBMSDInit+2,w,c
 17189  0046E4  137F               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 17190  0046E6                     l521:
 17191                           
 17192                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 17193                           
 17194                           ; BSR set to: 1
 17195                           
 17196                           ; BSR set to: 1
 17197  0046E6  ECA2  F037         	call	_ResetSenseData	;wreg free
 17198  0046EA  0101               	movlb	1	; () banked
 17199  0046EC  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 17200  0046EE                     l518:
 17201                           
 17202                           ; BSR set to: 1
 17203                           
 17204                           ; BSR set to: 1
 17205  0046EE  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17206  0046F0  A4D8               	btfss	status,2,c
 17207  0046F2  0012               	return	
 17208  0046F4  D7B6               	goto	l519
 17209  0046F6                     __end_of_USBMSDInit:
 17210                           	opt stack 0
 17211                           tosu	equ	0xFFF
 17212                           tosh	equ	0xFFE
 17213                           tosl	equ	0xFFD
 17214                           pclath	equ	0xFFA
 17215                           tblptru	equ	0xFF8
 17216                           tblptrh	equ	0xFF7
 17217                           tblptrl	equ	0xFF6
 17218                           tablat	equ	0xFF5
 17219                           prodh	equ	0xFF4
 17220                           prodl	equ	0xFF3
 17221                           intcon	equ	0xFF2
 17222                           intcon2	equ	0xFF1
 17223                           intcon3	equ	0xFF0
 17224                           indf0	equ	0xFEF
 17225                           postinc0	equ	0xFEE
 17226                           fsr0h	equ	0xFEA
 17227                           fsr0l	equ	0xFE9
 17228                           wreg	equ	0xFE8
 17229                           indf1	equ	0xFE7
 17230                           postdec1	equ	0xFE5
 17231                           plusw1	equ	0xFE3
 17232                           fsr1h	equ	0xFE2
 17233                           fsr1l	equ	0xFE1
 17234                           indf2	equ	0xFDF
 17235                           postinc2	equ	0xFDE
 17236                           postdec2	equ	0xFDD
 17237                           plusw2	equ	0xFDB
 17238                           fsr2h	equ	0xFDA
 17239                           fsr2l	equ	0xFD9
 17240                           status	equ	0xFD8
 17241                           
 17242 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 17243 ;; Defined at:
 17244 ;;		line 47 in file "app_device_custom_hid.c"
 17245 ;; Parameters:    Size  Location     Type
 17246 ;;		None
 17247 ;; Auto vars:     Size  Location     Type
 17248 ;;		None
 17249 ;; Return value:  Size  Location     Type
 17250 ;;                  1    wreg      void 
 17251 ;; Registers used:
 17252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17253 ;; Tracked objects:
 17254 ;;		On entry : 0/0
 17255 ;;		On exit  : 0/0
 17256 ;;		Unchanged: 0/0
 17257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17262 ;;Total ram usage:        0 bytes
 17263 ;; Hardware stack levels used:    1
 17264 ;; Hardware stack levels required when called:    2
 17265 ;; This function calls:
 17266 ;;		_USBEnableEndpoint
 17267 ;;		_USBTransferOnePacket
 17268 ;; This function is called by:
 17269 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17270 ;; This function uses a non-reentrant model
 17271 ;;
 17272                           
 17273                           	psect	text80
 17274  007B4C                     __ptext80:
 17275                           	opt stack 0
 17276  007B4C                     _APP_DeviceCustomHIDInitialize:
 17277                           	opt stack 26
 17278                           
 17279                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 17280                           
 17281                           ; BSR set to: 1
 17282                           ;incstack = 0
 17283  007B4C  0E00               	movlw	0
 17284  007B4E  0101               	movlb	1	; () banked
 17285  007B50  6F7A               	movwf	_USBInHandle& (0+255),b
 17286  007B52  0E00               	movlw	0
 17287  007B54  6F7B               	movwf	(_USBInHandle+1)& (0+255),b
 17288                           
 17289                           ; BSR set to: 1
 17290                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 17291  007B56  0E1E               	movlw	30
 17292  007B58  6E09               	movwf	USBEnableEndpoint@options,c
 17293  007B5A  0E01               	movlw	1
 17294  007B5C  ECE4  F03C         	call	_USBEnableEndpoint
 17295                           
 17296                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 17297  007B60  0E00               	movlw	0
 17298  007B62  6E01               	movwf	USBTransferOnePacket@dir,c
 17299  007B64  0E90               	movlw	low _ReceivedDataBuffer
 17300  007B66  6E02               	movwf	USBTransferOnePacket@data,c
 17301  007B68  0E02               	movlw	high _ReceivedDataBuffer
 17302  007B6A  6E03               	movwf	USBTransferOnePacket@data+1,c
 17303  007B6C  0E40               	movlw	64
 17304  007B6E  6E04               	movwf	USBTransferOnePacket@len,c
 17305  007B70  0E01               	movlw	1
 17306  007B72  ECFE  F023         	call	_USBTransferOnePacket
 17307  007B76  C001  F17C         	movff	?_USBTransferOnePacket,_USBOutHandle
 17308  007B7A  C002  F17D         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 17309  007B7E  0012               	return		;funcret
 17310  007B80                     __end_of_APP_DeviceCustomHIDInitialize:
 17311                           	opt stack 0
 17312                           tosu	equ	0xFFF
 17313                           tosh	equ	0xFFE
 17314                           tosl	equ	0xFFD
 17315                           pclath	equ	0xFFA
 17316                           tblptru	equ	0xFF8
 17317                           tblptrh	equ	0xFF7
 17318                           tblptrl	equ	0xFF6
 17319                           tablat	equ	0xFF5
 17320                           prodh	equ	0xFF4
 17321                           prodl	equ	0xFF3
 17322                           intcon	equ	0xFF2
 17323                           intcon2	equ	0xFF1
 17324                           intcon3	equ	0xFF0
 17325                           indf0	equ	0xFEF
 17326                           postinc0	equ	0xFEE
 17327                           fsr0h	equ	0xFEA
 17328                           fsr0l	equ	0xFE9
 17329                           wreg	equ	0xFE8
 17330                           indf1	equ	0xFE7
 17331                           postdec1	equ	0xFE5
 17332                           plusw1	equ	0xFE3
 17333                           fsr1h	equ	0xFE2
 17334                           fsr1l	equ	0xFE1
 17335                           indf2	equ	0xFDF
 17336                           postinc2	equ	0xFDE
 17337                           postdec2	equ	0xFDD
 17338                           plusw2	equ	0xFDB
 17339                           fsr2h	equ	0xFDA
 17340                           fsr2l	equ	0xFD9
 17341                           status	equ	0xFD8
 17342                           
 17343 ;; *************** function _USBEnableEndpoint *****************
 17344 ;; Defined at:
 17345 ;;		line 878 in file "usb_device.c"
 17346 ;; Parameters:    Size  Location     Type
 17347 ;;  ep              1    wreg     unsigned char 
 17348 ;;  options         1    8[COMRAM] unsigned char 
 17349 ;; Auto vars:     Size  Location     Type
 17350 ;;  ep              1   11[COMRAM] unsigned char 
 17351 ;;  p               2    9[COMRAM] PTR unsigned char 
 17352 ;;		 -> UEP0(1), 
 17353 ;; Return value:  Size  Location     Type
 17354 ;;                  1    wreg      void 
 17355 ;; Registers used:
 17356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17357 ;; Tracked objects:
 17358 ;;		On entry : 0/0
 17359 ;;		On exit  : 0/0
 17360 ;;		Unchanged: 0/0
 17361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17362 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17363 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17365 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17366 ;;Total ram usage:        4 bytes
 17367 ;; Hardware stack levels used:    1
 17368 ;; Hardware stack levels required when called:    1
 17369 ;; This function calls:
 17370 ;;		_USBConfigureEndpoint
 17371 ;; This function is called by:
 17372 ;;		_APP_DeviceCustomHIDInitialize
 17373 ;;		_APP_DeviceMSDInitialize
 17374 ;; This function uses a non-reentrant model
 17375 ;;
 17376                           
 17377                           	psect	text81
 17378  0079C8                     __ptext81:
 17379                           	opt stack 0
 17380  0079C8                     _USBEnableEndpoint:
 17381                           	opt stack 26
 17382                           
 17383                           ;incstack = 0
 17384                           ;USBEnableEndpoint@ep stored from wreg
 17385  0079C8  6E0C               	movwf	USBEnableEndpoint@ep,c
 17386                           
 17387                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 17388  0079CA  A409               	btfss	USBEnableEndpoint@options,2,c
 17389  0079CC  D005               	goto	l178
 17390                           
 17391                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 17392  0079CE  0E00               	movlw	0
 17393  0079D0  6E01               	movwf	USBConfigureEndpoint@direction,c
 17394  0079D2  500C               	movf	USBEnableEndpoint@ep,w,c
 17395  0079D4  EC2F  F030         	call	_USBConfigureEndpoint
 17396  0079D8                     l178:
 17397                           
 17398                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 17399  0079D8  A209               	btfss	USBEnableEndpoint@options,1,c
 17400  0079DA  D005               	goto	l179
 17401                           
 17402                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 17403  0079DC  0E01               	movlw	1
 17404  0079DE  6E01               	movwf	USBConfigureEndpoint@direction,c
 17405  0079E0  500C               	movf	USBEnableEndpoint@ep,w,c
 17406  0079E2  EC2F  F030         	call	_USBConfigureEndpoint
 17407  0079E6                     l179:
 17408                           
 17409                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 17410  0079E6  500C               	movf	USBEnableEndpoint@ep,w,c
 17411  0079E8  0D01               	mullw	1
 17412  0079EA  0E26               	movlw	38
 17413  0079EC  24F3               	addwf	prodl,w,c
 17414  0079EE  6E0A               	movwf	USBEnableEndpoint@p,c
 17415  0079F0  0E0F               	movlw	15
 17416  0079F2  20F4               	addwfc	prodh,w,c
 17417  0079F4  6E0B               	movwf	USBEnableEndpoint@p+1,c
 17418                           
 17419                           ;usb_device.c: 901: *p = options;
 17420  0079F6  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 17421  0079FA  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 17422  0079FE  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 17423  007A02  0012               	return		;funcret
 17424  007A04                     __end_of_USBEnableEndpoint:
 17425                           	opt stack 0
 17426                           tosu	equ	0xFFF
 17427                           tosh	equ	0xFFE
 17428                           tosl	equ	0xFFD
 17429                           pclath	equ	0xFFA
 17430                           tblptru	equ	0xFF8
 17431                           tblptrh	equ	0xFF7
 17432                           tblptrl	equ	0xFF6
 17433                           tablat	equ	0xFF5
 17434                           prodh	equ	0xFF4
 17435                           prodl	equ	0xFF3
 17436                           intcon	equ	0xFF2
 17437                           intcon2	equ	0xFF1
 17438                           intcon3	equ	0xFF0
 17439                           indf0	equ	0xFEF
 17440                           postinc0	equ	0xFEE
 17441                           fsr0h	equ	0xFEA
 17442                           fsr0l	equ	0xFE9
 17443                           wreg	equ	0xFE8
 17444                           indf1	equ	0xFE7
 17445                           postdec1	equ	0xFE5
 17446                           plusw1	equ	0xFE3
 17447                           fsr1h	equ	0xFE2
 17448                           fsr1l	equ	0xFE1
 17449                           indf2	equ	0xFDF
 17450                           postinc2	equ	0xFDE
 17451                           postdec2	equ	0xFDD
 17452                           plusw2	equ	0xFDB
 17453                           fsr2h	equ	0xFDA
 17454                           fsr2l	equ	0xFD9
 17455                           status	equ	0xFD8
 17456                           
 17457 ;; *************** function _USBConfigureEndpoint *****************
 17458 ;; Defined at:
 17459 ;;		line 1545 in file "usb_device.c"
 17460 ;; Parameters:    Size  Location     Type
 17461 ;;  EPNum           1    wreg     unsigned char 
 17462 ;;  direction       1    0[COMRAM] unsigned char 
 17463 ;; Auto vars:     Size  Location     Type
 17464 ;;  EPNum           1    5[COMRAM] unsigned char 
 17465 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 17466 ;;		 -> BDT(48), 
 17467 ;; Return value:  Size  Location     Type
 17468 ;;                  1    wreg      void 
 17469 ;; Registers used:
 17470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17471 ;; Tracked objects:
 17472 ;;		On entry : 0/0
 17473 ;;		On exit  : 0/0
 17474 ;;		Unchanged: 0/0
 17475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17476 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17477 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17478 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17479 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17480 ;;Total ram usage:        8 bytes
 17481 ;; Hardware stack levels used:    1
 17482 ;; This function calls:
 17483 ;;		Nothing
 17484 ;; This function is called by:
 17485 ;;		_USBEnableEndpoint
 17486 ;; This function uses a non-reentrant model
 17487 ;;
 17488                           
 17489                           	psect	text82
 17490  00605E                     __ptext82:
 17491                           	opt stack 0
 17492  00605E                     _USBConfigureEndpoint:
 17493                           	opt stack 26
 17494                           
 17495                           ;incstack = 0
 17496                           ;USBConfigureEndpoint@EPNum stored from wreg
 17497  00605E  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 17498                           
 17499                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 17500  006060  0E00               	movlw	0
 17501  006062  6E07               	movwf	USBConfigureEndpoint@handle,c
 17502  006064  0E0D               	movlw	13
 17503  006066  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 17504                           
 17505                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 17506  006068  5001               	movf	USBConfigureEndpoint@direction,w,c
 17507  00606A  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 17508  00606C  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 17509  00606E  90D8               	bcf	status,0,c
 17510  006070  3602               	rlcf	??_USBConfigureEndpoint,f,c
 17511  006072  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 17512  006074  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17513  006076  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 17514  006078  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 17515  00607A  90D8               	bcf	status,0,c
 17516  00607C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17517  00607E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17518  006080  90D8               	bcf	status,0,c
 17519  006082  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17520  006084  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17521  006086  5002               	movf	??_USBConfigureEndpoint,w,c
 17522  006088  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 17523  00608A  5003               	movf	??_USBConfigureEndpoint+1,w,c
 17524  00608C  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 17525  00608E  90D8               	bcf	status,0,c
 17526  006090  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17527  006092  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17528  006094  90D8               	bcf	status,0,c
 17529  006096  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17530  006098  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17531  00609A  5004               	movf	??_USBConfigureEndpoint+2,w,c
 17532  00609C  2607               	addwf	USBConfigureEndpoint@handle,f,c
 17533  00609E  5005               	movf	??_USBConfigureEndpoint+3,w,c
 17534  0060A0  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 17535                           
 17536                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 17537  0060A2  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17538  0060A6  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17539  0060AA  9EDF               	bcf	indf2,7,c
 17540                           
 17541                           ;usb_device.c: 1559: if(direction == 0)
 17542  0060AC  5001               	movf	USBConfigureEndpoint@direction,w,c
 17543  0060AE  A4D8               	btfss	status,2,c
 17544  0060B0  D007               	goto	l214
 17545                           
 17546                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 17547  0060B2  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17548  0060B4  0D02               	mullw	2
 17549  0060B6  0E40               	movlw	low _pBDTEntryOut
 17550  0060B8  24F3               	addwf	prodl,w,c
 17551  0060BA  6ED9               	movwf	fsr2l,c
 17552  0060BC  0E01               	movlw	high _pBDTEntryOut
 17553  0060BE  D006               	goto	L14
 17554  0060C0                     l214:
 17555                           
 17556                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 17557  0060C0  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17558  0060C2  0D02               	mullw	2
 17559  0060C4  0EC5               	movlw	low _pBDTEntryIn
 17560  0060C6  24F3               	addwf	prodl,w,c
 17561  0060C8  6ED9               	movwf	fsr2l,c
 17562  0060CA  0E00               	movlw	high _pBDTEntryIn
 17563  0060CC                     L14:
 17564  0060CC  20F4               	addwfc	prodh,w,c
 17565  0060CE  6EDA               	movwf	fsr2h,c
 17566  0060D0  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 17567  0060D4  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 17568                           
 17569                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 17570  0060D8  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17571  0060DC  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17572  0060E0  9CDF               	bcf	indf2,6,c
 17573                           
 17574                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 17575  0060E2  EE20 F004          	lfsr	2,4
 17576  0060E6  5007               	movf	USBConfigureEndpoint@handle,w,c
 17577  0060E8  26D9               	addwf	fsr2l,f,c
 17578  0060EA  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 17579  0060EC  22DA               	addwfc	fsr2h,f,c
 17580  0060EE  8CDF               	bsf	indf2,6,c
 17581  0060F0  0012               	return		;funcret
 17582  0060F2                     __end_of_USBConfigureEndpoint:
 17583                           	opt stack 0
 17584                           tosu	equ	0xFFF
 17585                           tosh	equ	0xFFE
 17586                           tosl	equ	0xFFD
 17587                           pclath	equ	0xFFA
 17588                           tblptru	equ	0xFF8
 17589                           tblptrh	equ	0xFF7
 17590                           tblptrl	equ	0xFF6
 17591                           tablat	equ	0xFF5
 17592                           prodh	equ	0xFF4
 17593                           prodl	equ	0xFF3
 17594                           intcon	equ	0xFF2
 17595                           intcon2	equ	0xFF1
 17596                           intcon3	equ	0xFF0
 17597                           indf0	equ	0xFEF
 17598                           postinc0	equ	0xFEE
 17599                           fsr0h	equ	0xFEA
 17600                           fsr0l	equ	0xFE9
 17601                           wreg	equ	0xFE8
 17602                           indf1	equ	0xFE7
 17603                           postdec1	equ	0xFE5
 17604                           plusw1	equ	0xFE3
 17605                           fsr1h	equ	0xFE2
 17606                           fsr1l	equ	0xFE1
 17607                           indf2	equ	0xFDF
 17608                           postinc2	equ	0xFDE
 17609                           postdec2	equ	0xFDD
 17610                           plusw2	equ	0xFDB
 17611                           fsr2h	equ	0xFDA
 17612                           fsr2l	equ	0xFD9
 17613                           status	equ	0xFD8
 17614                           
 17615 ;; *************** function _USBCtrlTrfOutHandler *****************
 17616 ;; Defined at:
 17617 ;;		line 2540 in file "usb_device.c"
 17618 ;; Parameters:    Size  Location     Type
 17619 ;;		None
 17620 ;; Auto vars:     Size  Location     Type
 17621 ;;		None
 17622 ;; Return value:  Size  Location     Type
 17623 ;;                  1    wreg      void 
 17624 ;; Registers used:
 17625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17626 ;; Tracked objects:
 17627 ;;		On entry : 0/0
 17628 ;;		On exit  : 0/0
 17629 ;;		Unchanged: 0/0
 17630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17635 ;;Total ram usage:        0 bytes
 17636 ;; Hardware stack levels used:    1
 17637 ;; Hardware stack levels required when called:    2
 17638 ;; This function calls:
 17639 ;;		_USBCtrlTrfRxService
 17640 ;; This function is called by:
 17641 ;;		_USBCtrlEPService
 17642 ;; This function uses a non-reentrant model
 17643 ;;
 17644                           
 17645                           	psect	text83
 17646  007006                     __ptext83:
 17647                           	opt stack 0
 17648  007006                     _USBCtrlTrfOutHandler:
 17649                           	opt stack 26
 17650                           
 17651                           ;usb_device.c: 2542: if(controlTransferState == 2)
 17652                           
 17653                           ;incstack = 0
 17654  007006  0E02               	movlw	2
 17655  007008  0100               	movlb	0	; () banked
 17656  00700A  19F5               	xorwf	_controlTransferState& (0+255),w,b
 17657  00700C  A4D8               	btfss	status,2,c
 17658  00700E  D003               	goto	l320
 17659                           
 17660                           ; BSR set to: 0
 17661                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 17662  007010  EC57  F020         	call	_USBCtrlTrfRxService	;wreg free
 17663                           
 17664                           ;usb_device.c: 2545: }
 17665  007014  0012               	return	
 17666  007016                     l320:
 17667                           
 17668                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 17669  007016  0E00               	movlw	0
 17670  007018  0100               	movlb	0	; () banked
 17671  00701A  6FF5               	movwf	_controlTransferState& (0+255),b
 17672                           
 17673                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 17674  00701C  51F1               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 17675  00701E  A4D8               	btfss	status,2,c
 17676  007020  D01F               	goto	l322
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 17680  007022  EE20 F001          	lfsr	2,1
 17681  007026  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17682  007028  26D9               	addwf	fsr2l,f,c
 17683  00702A  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17684  00702C  22DA               	addwfc	fsr2h,f,c
 17685  00702E  0E08               	movlw	8
 17686  007030  6EDF               	movwf	indf2,c
 17687                           
 17688                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17689  007032  EE20 F002          	lfsr	2,2
 17690  007036  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17691  007038  26D9               	addwf	fsr2l,f,c
 17692  00703A  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17693  00703C  22DA               	addwfc	fsr2h,f,c
 17694  00703E  0E30               	movlw	48
 17695  007040  6EDE               	movwf	postinc2,c
 17696  007042  0E0D               	movlw	13
 17697  007044  6EDD               	movwf	postdec2,c
 17698                           
 17699                           ; BSR set to: 0
 17700                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17701  007046  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17702  00704A  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17703  00704E  0E0C               	movlw	12
 17704  007050  6EDF               	movwf	indf2,c
 17705                           
 17706                           ; BSR set to: 0
 17707                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17708  007052  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17709  007056  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17710  00705A  0E00               	movlw	0
 17711  00705C  8EDB               	bsf	plusw2,7,c
 17712                           
 17713                           ;usb_device.c: 2563: }
 17714  00705E  0012               	return	
 17715  007060                     l322:
 17716                           
 17717                           ; BSR set to: 0
 17718                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 17719                           
 17720                           ; BSR set to: 0
 17721  007060  0E00               	movlw	0
 17722  007062  6FF1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17723                           
 17724                           ; BSR set to: 0
 17725  007064  0012               	return	
 17726  007066                     __end_of_USBCtrlTrfOutHandler:
 17727                           	opt stack 0
 17728                           tosu	equ	0xFFF
 17729                           tosh	equ	0xFFE
 17730                           tosl	equ	0xFFD
 17731                           pclath	equ	0xFFA
 17732                           tblptru	equ	0xFF8
 17733                           tblptrh	equ	0xFF7
 17734                           tblptrl	equ	0xFF6
 17735                           tablat	equ	0xFF5
 17736                           prodh	equ	0xFF4
 17737                           prodl	equ	0xFF3
 17738                           intcon	equ	0xFF2
 17739                           intcon2	equ	0xFF1
 17740                           intcon3	equ	0xFF0
 17741                           indf0	equ	0xFEF
 17742                           postinc0	equ	0xFEE
 17743                           fsr0h	equ	0xFEA
 17744                           fsr0l	equ	0xFE9
 17745                           wreg	equ	0xFE8
 17746                           indf1	equ	0xFE7
 17747                           postdec1	equ	0xFE5
 17748                           plusw1	equ	0xFE3
 17749                           fsr1h	equ	0xFE2
 17750                           fsr1l	equ	0xFE1
 17751                           indf2	equ	0xFDF
 17752                           postinc2	equ	0xFDE
 17753                           postdec2	equ	0xFDD
 17754                           plusw2	equ	0xFDB
 17755                           fsr2h	equ	0xFDA
 17756                           fsr2l	equ	0xFD9
 17757                           status	equ	0xFD8
 17758                           
 17759 ;; *************** function _USBCtrlTrfRxService *****************
 17760 ;; Defined at:
 17761 ;;		line 1854 in file "usb_device.c"
 17762 ;; Parameters:    Size  Location     Type
 17763 ;;		None
 17764 ;; Auto vars:     Size  Location     Type
 17765 ;;  byteToRead      1    1[COMRAM] unsigned char 
 17766 ;;  i               1    0[COMRAM] unsigned char 
 17767 ;; Return value:  Size  Location     Type
 17768 ;;                  1    wreg      void 
 17769 ;; Registers used:
 17770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17771 ;; Tracked objects:
 17772 ;;		On entry : 0/0
 17773 ;;		On exit  : 0/0
 17774 ;;		Unchanged: 0/0
 17775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17777 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17780 ;;Total ram usage:        2 bytes
 17781 ;; Hardware stack levels used:    1
 17782 ;; Hardware stack levels required when called:    1
 17783 ;; This function calls:
 17784 ;;		_USBCtrlEPAllowStatusStage
 17785 ;; This function is called by:
 17786 ;;		_USBCtrlTrfOutHandler
 17787 ;; This function uses a non-reentrant model
 17788 ;;
 17789                           
 17790                           	psect	text84
 17791  0040AE                     __ptext84:
 17792                           	opt stack 0
 17793  0040AE                     _USBCtrlTrfRxService:
 17794                           	opt stack 26
 17795                           
 17796                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 17797                           
 17798                           ;incstack = 0
 17799  0040AE  0100               	movlb	0	; () banked
 17800  0040B0  EE20 F001          	lfsr	2,1
 17801  0040B4  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17802  0040B6  26D9               	addwf	fsr2l,f,c
 17803  0040B8  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17804  0040BA  22DA               	addwfc	fsr2h,f,c
 17805  0040BC  50DF               	movf	indf2,w,c
 17806  0040BE  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 17807                           
 17808                           ; BSR set to: 0
 17809                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 17810  0040C0  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17811  0040C2  0101               	movlb	1	; () banked
 17812  0040C4  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 17813  0040C6  0E00               	movlw	0
 17814  0040C8  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 17815  0040CA  A0D8               	btfss	status,0,c
 17816                           
 17817                           ; BSR set to: 1
 17818                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 17819  0040CC  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 17820                           
 17821                           ; BSR set to: 1
 17822                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 17823                           
 17824                           ; BSR set to: 1
 17825  0040D0  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17826  0040D2  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 17827  0040D4  0E00               	movlw	0
 17828  0040D6  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 17829                           
 17830                           ; BSR set to: 1
 17831                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 17832  0040D8  0E00               	movlw	0
 17833  0040DA  6E01               	movwf	USBCtrlTrfRxService@i,c
 17834  0040DC  D011               	goto	l248
 17835  0040DE                     
 17836                           ; BSR set to: 1
 17837                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 17838                           
 17839                           ; BSR set to: 1
 17840  0040DE  5001               	movf	USBCtrlTrfRxService@i,w,c
 17841  0040E0  0D01               	mullw	1
 17842  0040E2  0E38               	movlw	56
 17843  0040E4  24F3               	addwf	prodl,w,c
 17844  0040E6  6ED9               	movwf	fsr2l,c
 17845  0040E8  0E0D               	movlw	13
 17846  0040EA  20F4               	addwfc	prodh,w,c
 17847  0040EC  6EDA               	movwf	fsr2h,c
 17848  0040EE  C131  FFE1         	movff	_outPipes,fsr1l
 17849  0040F2  C132  FFE2         	movff	_outPipes+1,fsr1h
 17850  0040F6  CFDF FFE7          	movff	indf2,indf1
 17851                           
 17852                           ; BSR set to: 1
 17853  0040FA  4B31               	infsnz	_outPipes& (0+255),f,b
 17854  0040FC  2B32               	incf	(_outPipes+1)& (0+255),f,b
 17855                           
 17856                           ; BSR set to: 1
 17857  0040FE  2A01               	incf	USBCtrlTrfRxService@i,f,c
 17858  004100                     l248:
 17859                           
 17860                           ; BSR set to: 1
 17861                           
 17862                           ; BSR set to: 1
 17863  004100  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17864  004102  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 17865  004104  A0D8               	btfss	status,0,c
 17866  004106  D7EB               	goto	l249
 17867                           
 17868                           ; BSR set to: 1
 17869                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 17870                           
 17871                           ; BSR set to: 1
 17872  004108  5135               	movf	(_outPipes+4)& (0+255),w,b
 17873  00410A  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 17874  00410C  B4D8               	btfsc	status,2,c
 17875  00410E  D033               	goto	l251
 17876                           
 17877                           ; BSR set to: 1
 17878                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 17879  004110  0100               	movlb	0	; () banked
 17880  004112  EE20 F001          	lfsr	2,1
 17881  004116  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17882  004118  26D9               	addwf	fsr2l,f,c
 17883  00411A  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17884  00411C  22DA               	addwfc	fsr2h,f,c
 17885  00411E  0E08               	movlw	8
 17886  004120  6EDF               	movwf	indf2,c
 17887                           
 17888                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 17889  004122  EE20 F002          	lfsr	2,2
 17890  004126  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17891  004128  26D9               	addwf	fsr2l,f,c
 17892  00412A  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17893  00412C  22DA               	addwfc	fsr2h,f,c
 17894  00412E  0E38               	movlw	56
 17895  004130  6EDE               	movwf	postinc2,c
 17896  004132  0E0D               	movlw	13
 17897  004134  6EDD               	movwf	postdec2,c
 17898                           
 17899                           ; BSR set to: 0
 17900                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 17901  004136  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17902  00413A  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17903  00413E  BCDF               	btfsc	indf2,6,c
 17904  004140  D00D               	goto	l252
 17905                           
 17906                           ; BSR set to: 0
 17907                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 17908  004142  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17909  004146  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17910  00414A  0E48               	movlw	72
 17911  00414C  6EDF               	movwf	indf2,c
 17912                           
 17913                           ; BSR set to: 0
 17914                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17915  00414E  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17916  004152  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17917  004156  0E00               	movlw	0
 17918  004158  8EDB               	bsf	plusw2,7,c
 17919                           
 17920                           ;usb_device.c: 1891: }
 17921  00415A  0012               	return	
 17922  00415C                     l252:
 17923                           
 17924                           ; BSR set to: 0
 17925                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 17926                           
 17927                           ; BSR set to: 0
 17928  00415C  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17929  004160  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17930  004164  0E08               	movlw	8
 17931  004166  6EDF               	movwf	indf2,c
 17932                           
 17933                           ; BSR set to: 0
 17934                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17935  004168  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17936  00416C  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17937  004170  0E00               	movlw	0
 17938  004172  8EDB               	bsf	plusw2,7,c
 17939                           
 17940                           ; BSR set to: 0
 17941                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 17942  004174  0012               	return	
 17943  004176                     l251:
 17944                           
 17945                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 17946                           
 17947                           ; BSR set to: 0
 17948  004176  0100               	movlb	0	; () banked
 17949  004178  EE20 F001          	lfsr	2,1
 17950  00417C  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17951  00417E  26D9               	addwf	fsr2l,f,c
 17952  004180  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17953  004182  22DA               	addwfc	fsr2h,f,c
 17954  004184  0E08               	movlw	8
 17955  004186  6EDF               	movwf	indf2,c
 17956                           
 17957                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17958  004188  EE20 F002          	lfsr	2,2
 17959  00418C  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17960  00418E  26D9               	addwf	fsr2l,f,c
 17961  004190  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17962  004192  22DA               	addwfc	fsr2h,f,c
 17963  004194  0E30               	movlw	48
 17964  004196  6EDE               	movwf	postinc2,c
 17965  004198  0E0D               	movlw	13
 17966  00419A  6EDD               	movwf	postdec2,c
 17967                           
 17968                           ; BSR set to: 0
 17969                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 17970  00419C  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17971  0041A0  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17972  0041A4  0E04               	movlw	4
 17973  0041A6  6EDF               	movwf	indf2,c
 17974                           
 17975                           ; BSR set to: 0
 17976                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17977  0041A8  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17978  0041AC  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17979  0041B0  0E00               	movlw	0
 17980  0041B2  8EDB               	bsf	plusw2,7,c
 17981                           
 17982                           ; BSR set to: 0
 17983                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 17984                           
 17985                           ; BSR set to: 0
 17986  0041B4  0101               	movlb	1	; () banked
 17987  0041B6  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 17988                           
 17989                           ; BSR set to: 1
 17990                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 17991  0041B8  0100               	movlb	0	; () banked
 17992  0041BA  51EF               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17993  0041BC  A4D8               	btfss	status,2,c
 17994  0041BE  0012               	return	
 17995                           
 17996                           ; BSR set to: 0
 17997                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 17998  0041C0  EC17  F02A         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17999  0041C4  0012               	return	
 18000  0041C6                     __end_of_USBCtrlTrfRxService:
 18001                           	opt stack 0
 18002                           tosu	equ	0xFFF
 18003                           tosh	equ	0xFFE
 18004                           tosl	equ	0xFFD
 18005                           pclath	equ	0xFFA
 18006                           tblptru	equ	0xFF8
 18007                           tblptrh	equ	0xFF7
 18008                           tblptrl	equ	0xFF6
 18009                           tablat	equ	0xFF5
 18010                           prodh	equ	0xFF4
 18011                           prodl	equ	0xFF3
 18012                           intcon	equ	0xFF2
 18013                           intcon2	equ	0xFF1
 18014                           intcon3	equ	0xFF0
 18015                           indf0	equ	0xFEF
 18016                           postinc0	equ	0xFEE
 18017                           fsr0h	equ	0xFEA
 18018                           fsr0l	equ	0xFE9
 18019                           wreg	equ	0xFE8
 18020                           indf1	equ	0xFE7
 18021                           postdec1	equ	0xFE5
 18022                           plusw1	equ	0xFE3
 18023                           fsr1h	equ	0xFE2
 18024                           fsr1l	equ	0xFE1
 18025                           indf2	equ	0xFDF
 18026                           postinc2	equ	0xFDE
 18027                           postdec2	equ	0xFDD
 18028                           plusw2	equ	0xFDB
 18029                           fsr2h	equ	0xFDA
 18030                           fsr2l	equ	0xFD9
 18031                           status	equ	0xFD8
 18032                           
 18033 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 18034 ;; Defined at:
 18035 ;;		line 1418 in file "usb_device.c"
 18036 ;; Parameters:    Size  Location     Type
 18037 ;;		None
 18038 ;; Auto vars:     Size  Location     Type
 18039 ;;		None
 18040 ;; Return value:  Size  Location     Type
 18041 ;;                  1    wreg      void 
 18042 ;; Registers used:
 18043 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18044 ;; Tracked objects:
 18045 ;;		On entry : 0/0
 18046 ;;		On exit  : 0/0
 18047 ;;		Unchanged: 0/0
 18048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18053 ;;Total ram usage:        0 bytes
 18054 ;; Hardware stack levels used:    1
 18055 ;; This function calls:
 18056 ;;		Nothing
 18057 ;; This function is called by:
 18058 ;;		_USBDeviceTasks
 18059 ;;		_USBCtrlEPServiceComplete
 18060 ;;		_USBCtrlTrfRxService
 18061 ;; This function uses a non-reentrant model
 18062 ;;
 18063                           
 18064                           	psect	text85
 18065  00542E                     __ptext85:
 18066                           	opt stack 0
 18067  00542E                     _USBCtrlEPAllowStatusStage:
 18068                           	opt stack 26
 18069                           
 18070                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 18071                           
 18072                           ;incstack = 0
 18073  00542E  0100               	movlb	0	; () banked
 18074  005430  51EE               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 18075  005432  A4D8               	btfss	status,2,c
 18076  005434  0012               	return	
 18077                           
 18078                           ; BSR set to: 0
 18079                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 18080  005436  0E01               	movlw	1
 18081  005438  6FEE               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18082                           
 18083                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 18084  00543A  51ED               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 18085  00543C  A4D8               	btfss	status,2,c
 18086  00543E  0012               	return	
 18087                           
 18088                           ; BSR set to: 0
 18089                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 18090  005440  0E01               	movlw	1
 18091  005442  6FED               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18092                           
 18093                           ; BSR set to: 0
 18094                           ;usb_device.c: 1434: if(controlTransferState == 2)
 18095  005444  0E02               	movlw	2
 18096  005446  19F5               	xorwf	_controlTransferState& (0+255),w,b
 18097  005448  A4D8               	btfss	status,2,c
 18098  00544A  D015               	goto	l202
 18099                           
 18100                           ; BSR set to: 0
 18101                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 18102  00544C  EE20 F001          	lfsr	2,1
 18103  005450  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 18104  005452  26D9               	addwf	fsr2l,f,c
 18105  005454  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18106  005456  22DA               	addwfc	fsr2h,f,c
 18107  005458  0E00               	movlw	0
 18108  00545A  6EDF               	movwf	indf2,c
 18109                           
 18110                           ; BSR set to: 0
 18111                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18112  00545C  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18113  005460  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18114  005464  0E48               	movlw	72
 18115  005466  6EDF               	movwf	indf2,c
 18116                           
 18117                           ; BSR set to: 0
 18118                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18119  005468  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18120  00546C  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18121  005470  0E00               	movlw	0
 18122  005472  8EDB               	bsf	plusw2,7,c
 18123                           
 18124                           ;usb_device.c: 1439: }
 18125  005474  0012               	return	
 18126  005476                     l202:
 18127                           
 18128                           ; BSR set to: 0
 18129                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 18130                           
 18131                           ; BSR set to: 0
 18132  005476  05F5               	decf	_controlTransferState& (0+255),w,b
 18133  005478  A4D8               	btfss	status,2,c
 18134  00547A  0012               	return	
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 18138  00547C  0E00               	movlw	0
 18139  00547E  6FF1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 18140                           
 18141                           ; BSR set to: 0
 18142                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 18143  005480  EE20 F001          	lfsr	2,1
 18144  005484  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 18145  005486  26D9               	addwf	fsr2l,f,c
 18146  005488  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 18147  00548A  22DA               	addwfc	fsr2h,f,c
 18148  00548C  0E08               	movlw	8
 18149  00548E  6EDF               	movwf	indf2,c
 18150                           
 18151                           ; BSR set to: 0
 18152                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 18153  005490  EE20 F002          	lfsr	2,2
 18154  005494  51DB               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 18155  005496  26D9               	addwf	fsr2l,f,c
 18156  005498  51DC               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 18157  00549A  22DA               	addwfc	fsr2h,f,c
 18158  00549C  0E30               	movlw	48
 18159  00549E  6EDE               	movwf	postinc2,c
 18160  0054A0  0E0D               	movlw	13
 18161  0054A2  6EDD               	movwf	postdec2,c
 18162                           
 18163                           ; BSR set to: 0
 18164                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 18165  0054A4  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18166  0054A8  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18167  0054AC  0E04               	movlw	4
 18168  0054AE  6EDF               	movwf	indf2,c
 18169                           
 18170                           ; BSR set to: 0
 18171                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 18172  0054B0  C0DB  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18173  0054B4  C0DC  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18174  0054B8  0E00               	movlw	0
 18175  0054BA  8EDB               	bsf	plusw2,7,c
 18176                           
 18177                           ; BSR set to: 0
 18178                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 18179  0054BC  0E01               	movlw	1
 18180  0054BE  6FF1               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 18181                           
 18182                           ; BSR set to: 0
 18183                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 18184  0054C0  EE20 F001          	lfsr	2,1
 18185  0054C4  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18186  0054C6  26D9               	addwf	fsr2l,f,c
 18187  0054C8  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18188  0054CA  22DA               	addwfc	fsr2h,f,c
 18189  0054CC  0E08               	movlw	8
 18190  0054CE  6EDF               	movwf	indf2,c
 18191                           
 18192                           ; BSR set to: 0
 18193                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18194  0054D0  EE20 F002          	lfsr	2,2
 18195  0054D4  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18196  0054D6  26D9               	addwf	fsr2l,f,c
 18197  0054D8  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18198  0054DA  22DA               	addwfc	fsr2h,f,c
 18199  0054DC  0E30               	movlw	48
 18200  0054DE  6EDE               	movwf	postinc2,c
 18201  0054E0  0E0D               	movlw	13
 18202  0054E2  6EDD               	movwf	postdec2,c
 18203                           
 18204                           ; BSR set to: 0
 18205                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 18206  0054E4  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18207  0054E8  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18208  0054EC  0E80               	movlw	128
 18209  0054EE  6EDF               	movwf	indf2,c
 18210                           
 18211                           ; BSR set to: 0
 18212                           
 18213                           ; BSR set to: 0
 18214                           
 18215                           ; BSR set to: 0
 18216  0054F0  0012               	return	
 18217  0054F2                     __end_of_USBCtrlEPAllowStatusStage:
 18218                           	opt stack 0
 18219                           tosu	equ	0xFFF
 18220                           tosh	equ	0xFFE
 18221                           tosl	equ	0xFFD
 18222                           pclath	equ	0xFFA
 18223                           tblptru	equ	0xFF8
 18224                           tblptrh	equ	0xFF7
 18225                           tblptrl	equ	0xFF6
 18226                           tablat	equ	0xFF5
 18227                           prodh	equ	0xFF4
 18228                           prodl	equ	0xFF3
 18229                           intcon	equ	0xFF2
 18230                           intcon2	equ	0xFF1
 18231                           intcon3	equ	0xFF0
 18232                           indf0	equ	0xFEF
 18233                           postinc0	equ	0xFEE
 18234                           fsr0h	equ	0xFEA
 18235                           fsr0l	equ	0xFE9
 18236                           wreg	equ	0xFE8
 18237                           indf1	equ	0xFE7
 18238                           postdec1	equ	0xFE5
 18239                           plusw1	equ	0xFE3
 18240                           fsr1h	equ	0xFE2
 18241                           fsr1l	equ	0xFE1
 18242                           indf2	equ	0xFDF
 18243                           postinc2	equ	0xFDE
 18244                           postdec2	equ	0xFDD
 18245                           plusw2	equ	0xFDB
 18246                           fsr2h	equ	0xFDA
 18247                           fsr2l	equ	0xFD9
 18248                           status	equ	0xFD8
 18249                           
 18250 ;; *************** function _USBCtrlTrfInHandler *****************
 18251 ;; Defined at:
 18252 ;;		line 2594 in file "usb_device.c"
 18253 ;; Parameters:    Size  Location     Type
 18254 ;;		None
 18255 ;; Auto vars:     Size  Location     Type
 18256 ;;  lastDTS         1    1[COMRAM] unsigned char 
 18257 ;; Return value:  Size  Location     Type
 18258 ;;                  1    wreg      void 
 18259 ;; Registers used:
 18260 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18261 ;; Tracked objects:
 18262 ;;		On entry : 0/0
 18263 ;;		On exit  : 0/0
 18264 ;;		Unchanged: 0/0
 18265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18270 ;;Total ram usage:        1 bytes
 18271 ;; Hardware stack levels used:    1
 18272 ;; Hardware stack levels required when called:    1
 18273 ;; This function calls:
 18274 ;;		_USBCtrlTrfTxService
 18275 ;; This function is called by:
 18276 ;;		_USBCtrlEPService
 18277 ;; This function uses a non-reentrant model
 18278 ;;
 18279                           
 18280                           	psect	text86
 18281  005366                     __ptext86:
 18282                           	opt stack 0
 18283  005366                     _USBCtrlTrfInHandler:
 18284                           	opt stack 27
 18285                           
 18286                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 18287                           
 18288                           ; BSR set to: 0
 18289                           ;incstack = 0
 18290  005366  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18291  00536A  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18292  00536E  0100               	movlb	0	; () banked
 18293  005370  0E00               	movlw	0
 18294  005372  BCDF               	btfsc	indf2,6,c
 18295  005374  0E01               	movlw	1
 18296  005376  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 18297                           
 18298                           ; BSR set to: 0
 18299                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 18300  005378  0E04               	movlw	4
 18301  00537A  19C5               	xorwf	_pBDTEntryIn& (0+255),w,b
 18302  00537C  6FC5               	movwf	_pBDTEntryIn& (0+255),b
 18303  00537E  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18304  005380  6FC6               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18305                           
 18306                           ; BSR set to: 0
 18307                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 18308  005382  0E08               	movlw	8
 18309  005384  185F               	xorwf	_USBDeviceState,w,c
 18310  005386  A4D8               	btfss	status,2,c
 18311  005388  D00C               	goto	l329
 18312                           
 18313                           ; BSR set to: 0
 18314                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 18315  00538A  010D               	movlb	13	; () banked
 18316  00538C  5132               	movf	50,w,b	;volatile
 18317  00538E  0B7F               	andlw	127
 18318  005390  010F               	movlb	15	; () banked
 18319  005392  6F38               	movwf	56,b	;volatile
 18320                           
 18321                           ; BSR set to: 15
 18322                           ;usb_device.c: 2609: if(UADDR != 0u)
 18323  005394  5138               	movf	56,w,b	;volatile
 18324  005396  B4D8               	btfsc	status,2,c
 18325  005398  D002               	goto	l328
 18326                           
 18327                           ; BSR set to: 15
 18328                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 18329  00539A  0E10               	movlw	16
 18330  00539C  D001               	goto	L15
 18331  00539E                     l328:
 18332                           
 18333                           ; BSR set to: 15
 18334                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 18335                           
 18336                           ; BSR set to: 15
 18337  00539E  0E04               	movlw	4
 18338  0053A0                     L15:
 18339  0053A0  6E5F               	movwf	_USBDeviceState,c
 18340  0053A2                     l329:
 18341                           
 18342                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 18343                           
 18344                           ; BSR set to: 15
 18345                           
 18346                           ; BSR set to: 15
 18347  0053A2  0100               	movlb	0	; () banked
 18348  0053A4  05F5               	decf	_controlTransferState& (0+255),w,b
 18349  0053A6  A4D8               	btfss	status,2,c
 18350  0053A8  D03B               	goto	l330
 18351                           
 18352                           ; BSR set to: 0
 18353                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 18354  0053AA  EE20 F002          	lfsr	2,2
 18355  0053AE  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 18356  0053B0  26D9               	addwf	fsr2l,f,c
 18357  0053B2  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18358  0053B4  22DA               	addwfc	fsr2h,f,c
 18359  0053B6  0E38               	movlw	56
 18360  0053B8  6EDE               	movwf	postinc2,c
 18361  0053BA  0E0D               	movlw	13
 18362  0053BC  6EDD               	movwf	postdec2,c
 18363                           
 18364                           ; BSR set to: 0
 18365                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 18366  0053BE  EC10  F028         	call	_USBCtrlTrfTxService	;wreg free
 18367                           
 18368                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 18369  0053C2  0E02               	movlw	2
 18370  0053C4  0100               	movlb	0	; () banked
 18371  0053C6  19F6               	xorwf	_shortPacketStatus& (0+255),w,b
 18372  0053C8  A4D8               	btfss	status,2,c
 18373  0053CA  D00D               	goto	l331
 18374                           
 18375                           ; BSR set to: 0
 18376                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 18377  0053CC  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18378  0053D0  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18379  0053D4  0E04               	movlw	4
 18380  0053D6  6EDF               	movwf	indf2,c
 18381                           
 18382                           ; BSR set to: 0
 18383                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18384  0053D8  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18385  0053DC  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18386  0053E0  0E00               	movlw	0
 18387  0053E2  8EDB               	bsf	plusw2,7,c
 18388                           
 18389                           ;usb_device.c: 2635: }
 18390  0053E4  0012               	return	
 18391  0053E6                     l331:
 18392                           
 18393                           ; BSR set to: 0
 18394                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 18395                           
 18396                           ; BSR set to: 0
 18397  0053E6  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 18398  0053E8  A4D8               	btfss	status,2,c
 18399  0053EA  D00D               	goto	l333
 18400                           
 18401                           ; BSR set to: 0
 18402                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 18403  0053EC  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18404  0053F0  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18405  0053F4  0E48               	movlw	72
 18406  0053F6  6EDF               	movwf	indf2,c
 18407                           
 18408                           ; BSR set to: 0
 18409                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18410  0053F8  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18411  0053FC  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18412  005400  0E00               	movlw	0
 18413  005402  8EDB               	bsf	plusw2,7,c
 18414                           
 18415                           ;usb_device.c: 2642: }
 18416  005404  0012               	return	
 18417  005406                     l333:
 18418                           
 18419                           ; BSR set to: 0
 18420                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 18421                           
 18422                           ; BSR set to: 0
 18423  005406  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18424  00540A  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18425  00540E  0E08               	movlw	8
 18426  005410  6EDF               	movwf	indf2,c
 18427                           
 18428                           ; BSR set to: 0
 18429                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18430  005412  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 18431  005416  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18432  00541A  0E00               	movlw	0
 18433  00541C  8EDB               	bsf	plusw2,7,c
 18434                           
 18435                           ; BSR set to: 0
 18436                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 18437                           
 18438                           ; BSR set to: 0
 18439  00541E  0012               	return	
 18440  005420                     l330:
 18441                           
 18442                           ; BSR set to: 0
 18443                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 18444  005420  0101               	movlb	1	; () banked
 18445  005422  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 18446                           
 18447                           ; BSR set to: 1
 18448                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 18449                           
 18450                           ; BSR set to: 1
 18451  005424  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 18452                           
 18453                           ; BSR set to: 1
 18454                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 18455                           
 18456                           ; BSR set to: 1
 18457  005426  0E00               	movlw	0
 18458  005428  0100               	movlb	0	; () banked
 18459  00542A  6FF5               	movwf	_controlTransferState& (0+255),b
 18460  00542C  0012               	return	
 18461  00542E                     __end_of_USBCtrlTrfInHandler:
 18462                           	opt stack 0
 18463                           tosu	equ	0xFFF
 18464                           tosh	equ	0xFFE
 18465                           tosl	equ	0xFFD
 18466                           pclath	equ	0xFFA
 18467                           tblptru	equ	0xFF8
 18468                           tblptrh	equ	0xFF7
 18469                           tblptrl	equ	0xFF6
 18470                           tablat	equ	0xFF5
 18471                           prodh	equ	0xFF4
 18472                           prodl	equ	0xFF3
 18473                           intcon	equ	0xFF2
 18474                           intcon2	equ	0xFF1
 18475                           intcon3	equ	0xFF0
 18476                           indf0	equ	0xFEF
 18477                           postinc0	equ	0xFEE
 18478                           fsr0h	equ	0xFEA
 18479                           fsr0l	equ	0xFE9
 18480                           wreg	equ	0xFE8
 18481                           indf1	equ	0xFE7
 18482                           postdec1	equ	0xFE5
 18483                           plusw1	equ	0xFE3
 18484                           fsr1h	equ	0xFE2
 18485                           fsr1l	equ	0xFE1
 18486                           indf2	equ	0xFDF
 18487                           postinc2	equ	0xFDE
 18488                           postdec2	equ	0xFDD
 18489                           plusw2	equ	0xFDB
 18490                           fsr2h	equ	0xFDA
 18491                           fsr2l	equ	0xFD9
 18492                           status	equ	0xFD8
 18493                           
 18494 ;; *************** function _USBCtrlTrfTxService *****************
 18495 ;; Defined at:
 18496 ;;		line 1773 in file "usb_device.c"
 18497 ;; Parameters:    Size  Location     Type
 18498 ;;		None
 18499 ;; Auto vars:     Size  Location     Type
 18500 ;;  byteToSend      1    0[COMRAM] unsigned char 
 18501 ;; Return value:  Size  Location     Type
 18502 ;;                  1    wreg      void 
 18503 ;; Registers used:
 18504 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18505 ;; Tracked objects:
 18506 ;;		On entry : 0/0
 18507 ;;		On exit  : 0/0
 18508 ;;		Unchanged: 0/0
 18509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18514 ;;Total ram usage:        1 bytes
 18515 ;; Hardware stack levels used:    1
 18516 ;; This function calls:
 18517 ;;		Nothing
 18518 ;; This function is called by:
 18519 ;;		_USBCtrlEPAllowDataStage
 18520 ;;		_USBCtrlTrfInHandler
 18521 ;; This function uses a non-reentrant model
 18522 ;;
 18523                           
 18524                           	psect	text87
 18525  005020                     __ptext87:
 18526                           	opt stack 0
 18527  005020                     _USBCtrlTrfTxService:
 18528                           	opt stack 25
 18529                           
 18530                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 18531                           
 18532                           ; BSR set to: 0
 18533                           ;incstack = 0
 18534  005020  0E08               	movlw	8
 18535  005022  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 18536                           
 18537                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 18538  005024  0100               	movlb	0	; () banked
 18539  005026  51C4               	movf	(_inPipes+5)& (0+255),w,b
 18540  005028  E110               	bnz	l10679
 18541  00502A  0E08               	movlw	8
 18542  00502C  5DC3               	subwf	(_inPipes+4)& (0+255),w,b
 18543  00502E  B0D8               	btfsc	status,0,c
 18544  005030  D00C               	goto	l235
 18545                           
 18546                           ; BSR set to: 0
 18547                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 18548  005032  C0C3  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 18549                           
 18550                           ; BSR set to: 0
 18551                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 18552  005036  51F6               	movf	_shortPacketStatus& (0+255),w,b
 18553  005038  A4D8               	btfss	status,2,c
 18554  00503A  D002               	goto	l233
 18555                           
 18556                           ; BSR set to: 0
 18557                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 18558  00503C  0E01               	movlw	1
 18559  00503E  D004               	goto	L16
 18560  005040                     l233:
 18561                           
 18562                           ; BSR set to: 0
 18563                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 18564                           
 18565                           ; BSR set to: 0
 18566  005040  05F6               	decf	_shortPacketStatus& (0+255),w,b
 18567  005042  A4D8               	btfss	status,2,c
 18568  005044  D002               	goto	l235
 18569                           
 18570                           ; BSR set to: 0
 18571                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 18572  005046  0E02               	movlw	2
 18573  005048                     L16:
 18574  005048  6FF6               	movwf	_shortPacketStatus& (0+255),b
 18575  00504A                     l235:
 18576  00504A                     l10679:
 18577                           
 18578                           ; BSR set to: 0
 18579                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 18580  00504A  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18581  00504C  5FC3               	subwf	(_inPipes+4)& (0+255),f,b
 18582  00504E  0E00               	movlw	0
 18583  005050  5BC4               	subwfb	(_inPipes+5)& (0+255),f,b
 18584                           
 18585                           ; BSR set to: 0
 18586                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 18587  005052  EE20 F001          	lfsr	2,1
 18588  005056  51C5               	movf	_pBDTEntryIn& (0+255),w,b
 18589  005058  26D9               	addwf	fsr2l,f,c
 18590  00505A  51C6               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18591  00505C  22DA               	addwfc	fsr2h,f,c
 18592  00505E  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 18593                           
 18594                           ; BSR set to: 0
 18595                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 18596  005062  0E38               	movlw	56
 18597  005064  0101               	movlb	1	; () banked
 18598  005066  6F84               	movwf	_pDst& (0+255),b
 18599  005068  0E0D               	movlw	13
 18600  00506A  6F85               	movwf	(_pDst+1)& (0+255),b
 18601                           
 18602                           ; BSR set to: 1
 18603                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 18604  00506C  0100               	movlb	0	; () banked
 18605  00506E  A1C2               	btfss	(_inPipes+3)& (0+255),0,b
 18606  005070  D01D               	goto	l237
 18607  005072  D03C               	goto	l241
 18608  005074                     
 18609                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 18610                           
 18611                           ; BSR set to: 0
 18612  005074  C0BF  FFF6         	movff	_inPipes,tblptrl
 18613  005078  C0C0  FFF7         	movff	_inPipes+1,tblptrh
 18614  00507C  6AF8               	clrf	tblptru,c
 18615  00507E  C184  FFD9         	movff	_pDst,fsr2l
 18616  005082  C185  FFDA         	movff	_pDst+1,fsr2h
 18617  005086  0E0E               	movlw	(high __ramtop+-1)
 18618  005088  64F7               	cpfsgt	tblptrh,c
 18619  00508A  D003               	bra	u7457
 18620  00508C  0008               	tblrd		*
 18621  00508E  50F5               	movf	tablat,w,c
 18622  005090  D005               	bra	u7450
 18623  005092                     u7457:
 18624  005092  CFF6 FFE9          	movff	tblptrl,fsr0l
 18625  005096  CFF7 FFEA          	movff	tblptrh,fsr0h
 18626  00509A  50EF               	movf	indf0,w,c
 18627  00509C                     u7450:
 18628  00509C  6EDF               	movwf	indf2,c
 18629  00509E  0100               	movlb	0	; () banked
 18630  0050A0  4BBF               	infsnz	_inPipes& (0+255),f,b
 18631  0050A2  2BC0               	incf	(_inPipes+1)& (0+255),f,b
 18632                           
 18633                           ; BSR set to: 0
 18634  0050A4  0101               	movlb	1	; () banked
 18635  0050A6  4B84               	infsnz	_pDst& (0+255),f,b
 18636  0050A8  2B85               	incf	(_pDst+1)& (0+255),f,b
 18637                           
 18638                           ; BSR set to: 1
 18639                           ;usb_device.c: 1816: byteToSend--;
 18640  0050AA  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18641  0050AC                     l237:
 18642                           
 18643                           ; BSR set to: 1
 18644  0050AC  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18645  0050AE  B4D8               	btfsc	status,2,c
 18646  0050B0  0012               	return	
 18647  0050B2  D7E0               	goto	l238
 18648  0050B4                     
 18649                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 18650  0050B4  C0BF  FFF6         	movff	_inPipes,tblptrl
 18651  0050B8  C0C0  FFF7         	movff	_inPipes+1,tblptrh
 18652  0050BC  6AF8               	clrf	tblptru,c
 18653  0050BE  C184  FFD9         	movff	_pDst,fsr2l
 18654  0050C2  C185  FFDA         	movff	_pDst+1,fsr2h
 18655  0050C6  0E0E               	movlw	(high __ramtop+-1)
 18656  0050C8  64F7               	cpfsgt	tblptrh,c
 18657  0050CA  D003               	bra	u7477
 18658  0050CC  0008               	tblrd		*
 18659  0050CE  50F5               	movf	tablat,w,c
 18660  0050D0  D005               	bra	u7470
 18661  0050D2                     u7477:
 18662  0050D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 18663  0050D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 18664  0050DA  50EF               	movf	indf0,w,c
 18665  0050DC                     u7470:
 18666  0050DC  6EDF               	movwf	indf2,c
 18667  0050DE  0100               	movlb	0	; () banked
 18668  0050E0  4BBF               	infsnz	_inPipes& (0+255),f,b
 18669  0050E2  2BC0               	incf	(_inPipes+1)& (0+255),f,b
 18670                           
 18671                           ; BSR set to: 0
 18672  0050E4  0101               	movlb	1	; () banked
 18673  0050E6  4B84               	infsnz	_pDst& (0+255),f,b
 18674  0050E8  2B85               	incf	(_pDst+1)& (0+255),f,b
 18675                           
 18676                           ; BSR set to: 1
 18677                           ;usb_device.c: 1824: byteToSend--;
 18678  0050EA  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18679  0050EC                     l241:
 18680                           
 18681                           ; BSR set to: 1
 18682  0050EC  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18683  0050EE  B4D8               	btfsc	status,2,c
 18684  0050F0  0012               	return	
 18685  0050F2  D7E0               	goto	l242
 18686  0050F4                     __end_of_USBCtrlTrfTxService:
 18687                           	opt stack 0
 18688                           tosu	equ	0xFFF
 18689                           tosh	equ	0xFFE
 18690                           tosl	equ	0xFFD
 18691                           pclath	equ	0xFFA
 18692                           tblptru	equ	0xFF8
 18693                           tblptrh	equ	0xFF7
 18694                           tblptrl	equ	0xFF6
 18695                           tablat	equ	0xFF5
 18696                           prodh	equ	0xFF4
 18697                           prodl	equ	0xFF3
 18698                           intcon	equ	0xFF2
 18699                           intcon2	equ	0xFF1
 18700                           intcon3	equ	0xFF0
 18701                           indf0	equ	0xFEF
 18702                           postinc0	equ	0xFEE
 18703                           fsr0h	equ	0xFEA
 18704                           fsr0l	equ	0xFE9
 18705                           wreg	equ	0xFE8
 18706                           indf1	equ	0xFE7
 18707                           postdec1	equ	0xFE5
 18708                           plusw1	equ	0xFE3
 18709                           fsr1h	equ	0xFE2
 18710                           fsr1l	equ	0xFE1
 18711                           indf2	equ	0xFDF
 18712                           postinc2	equ	0xFDE
 18713                           postdec2	equ	0xFDD
 18714                           plusw2	equ	0xFDB
 18715                           fsr2h	equ	0xFDA
 18716                           fsr2l	equ	0xFD9
 18717                           status	equ	0xFD8
 18718                           
 18719 ;; *************** function _APP_DeviceMSDTasks *****************
 18720 ;; Defined at:
 18721 ;;		line 110 in file "app_device_msd.c"
 18722 ;; Parameters:    Size  Location     Type
 18723 ;;		None
 18724 ;; Auto vars:     Size  Location     Type
 18725 ;;		None
 18726 ;; Return value:  Size  Location     Type
 18727 ;;                  1    wreg      void 
 18728 ;; Registers used:
 18729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18730 ;; Tracked objects:
 18731 ;;		On entry : 0/0
 18732 ;;		On exit  : 0/0
 18733 ;;		Unchanged: 0/0
 18734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18739 ;;Total ram usage:        0 bytes
 18740 ;; Hardware stack levels used:    1
 18741 ;; Hardware stack levels required when called:   11
 18742 ;; This function calls:
 18743 ;;		_MSDTasks
 18744 ;; This function is called by:
 18745 ;;		_main
 18746 ;; This function uses a non-reentrant model
 18747 ;;
 18748                           
 18749                           	psect	text88
 18750  008098                     __ptext88:
 18751                           	opt stack 0
 18752  008098                     _APP_DeviceMSDTasks:
 18753                           	opt stack 19
 18754                           
 18755                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 18756                           
 18757                           ;incstack = 0
 18758  008098  0E20               	movlw	32
 18759  00809A  605F               	cpfslt	_USBDeviceState,c
 18760  00809C  D001               	goto	l1008
 18761  00809E  0012               	return	
 18762  0080A0                     l1008:
 18763                           
 18764                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 18765  0080A0  B265               	btfsc	3941,1,c	;volatile
 18766  0080A2  0012               	return	
 18767                           
 18768                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 18769                           
 18770                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 18771  0080A4  EC98  F00E         	call	_MSDTasks	;wreg free
 18772  0080A8  0012               	return		;funcret
 18773  0080AA                     __end_of_APP_DeviceMSDTasks:
 18774                           	opt stack 0
 18775                           tosu	equ	0xFFF
 18776                           tosh	equ	0xFFE
 18777                           tosl	equ	0xFFD
 18778                           pclath	equ	0xFFA
 18779                           tblptru	equ	0xFF8
 18780                           tblptrh	equ	0xFF7
 18781                           tblptrl	equ	0xFF6
 18782                           tablat	equ	0xFF5
 18783                           prodh	equ	0xFF4
 18784                           prodl	equ	0xFF3
 18785                           intcon	equ	0xFF2
 18786                           intcon2	equ	0xFF1
 18787                           intcon3	equ	0xFF0
 18788                           indf0	equ	0xFEF
 18789                           postinc0	equ	0xFEE
 18790                           fsr0h	equ	0xFEA
 18791                           fsr0l	equ	0xFE9
 18792                           wreg	equ	0xFE8
 18793                           indf1	equ	0xFE7
 18794                           postdec1	equ	0xFE5
 18795                           plusw1	equ	0xFE3
 18796                           fsr1h	equ	0xFE2
 18797                           fsr1l	equ	0xFE1
 18798                           indf2	equ	0xFDF
 18799                           postinc2	equ	0xFDE
 18800                           postdec2	equ	0xFDD
 18801                           plusw2	equ	0xFDB
 18802                           fsr2h	equ	0xFDA
 18803                           fsr2l	equ	0xFD9
 18804                           status	equ	0xFD8
 18805                           
 18806 ;; *************** function _MSDTasks *****************
 18807 ;; Defined at:
 18808 ;;		line 335 in file "usb_device_msd.c"
 18809 ;; Parameters:    Size  Location     Type
 18810 ;;		None
 18811 ;; Auto vars:     Size  Location     Type
 18812 ;;  i               1   81[COMRAM] unsigned char 
 18813 ;; Return value:  Size  Location     Type
 18814 ;;                  1    wreg      unsigned char 
 18815 ;; Registers used:
 18816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18817 ;; Tracked objects:
 18818 ;;		On entry : 0/0
 18819 ;;		On exit  : 0/0
 18820 ;;		Unchanged: 0/0
 18821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18823 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18825 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18826 ;;Total ram usage:        6 bytes
 18827 ;; Hardware stack levels used:    1
 18828 ;; Hardware stack levels required when called:   10
 18829 ;; This function calls:
 18830 ;;		_MSDProcessCommand
 18831 ;;		_USBStallEndpoint
 18832 ;;		_USBTransferOnePacket
 18833 ;; This function is called by:
 18834 ;;		_APP_DeviceMSDTasks
 18835 ;; This function uses a non-reentrant model
 18836 ;;
 18837                           
 18838                           	psect	text89
 18839  001D30                     __ptext89:
 18840                           	opt stack 0
 18841  001D30                     _MSDTasks:
 18842                           	opt stack 19
 18843                           
 18844                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 18845                           
 18846                           ;incstack = 0
 18847  001D30  0E20               	movlw	32
 18848  001D32  185F               	xorwf	_USBDeviceState,w,c
 18849  001D34  A4D8               	btfss	status,2,c
 18850  001D36  0012               	return	
 18851  001D38  D118               	goto	l554
 18852  001D3A                     
 18853                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 18854  001D3A  0100               	movlb	0	; () banked
 18855  001D3C  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 18856  001D3E  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 18857  001D40  B4D8               	btfsc	status,2,c
 18858  001D42  D006               	goto	u10750
 18859                           
 18860                           ; BSR set to: 0
 18861  001D44  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 18862  001D48  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 18863  001D4C  BEDF               	btfsc	indf2,7,c
 18864  001D4E  0012               	return	
 18865  001D50                     u10750:
 18866                           
 18867                           ; BSR set to: 0
 18868                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 18869                           
 18870                           ; BSR set to: 0
 18871  001D50  0E00               	movlw	0
 18872  001D52  6E52               	movwf	MSDTasks@i,c
 18873  001D54                     l13933:
 18874                           
 18875                           ; BSR set to: 0
 18876  001D54  0E1E               	movlw	30
 18877  001D56  6452               	cpfsgt	MSDTasks@i,c
 18878  001D58  D001               	goto	l559
 18879  001D5A  D014               	goto	u10770
 18880  001D5C                     l559:
 18881                           
 18882                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 18883                           
 18884                           ; BSR set to: 0
 18885  001D5C  5052               	movf	MSDTasks@i,w,c
 18886  001D5E  0D01               	mullw	1
 18887  001D60  0E40               	movlw	64
 18888  001D62  24F3               	addwf	prodl,w,c
 18889  001D64  6ED9               	movwf	fsr2l,c
 18890  001D66  0E0D               	movlw	13
 18891  001D68  20F4               	addwfc	prodh,w,c
 18892  001D6A  6EDA               	movwf	fsr2h,c
 18893  001D6C  5052               	movf	MSDTasks@i,w,c
 18894  001D6E  0D01               	mullw	1
 18895  001D70  0E00               	movlw	low _gblCBW
 18896  001D72  24F3               	addwf	prodl,w,c
 18897  001D74  6EE1               	movwf	fsr1l,c
 18898  001D76  0E01               	movlw	high _gblCBW
 18899  001D78  20F4               	addwfc	prodh,w,c
 18900  001D7A  6EE2               	movwf	fsr1h,c
 18901  001D7C  CFDF FFE7          	movff	indf2,indf1
 18902  001D80  2A52               	incf	MSDTasks@i,f,c
 18903  001D82  D7E8               	goto	l13933
 18904  001D84                     u10770:
 18905                           
 18906                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 18907  001D84  0100               	movlb	0	; () banked
 18908  001D86  EE20 F001          	lfsr	2,1
 18909  001D8A  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 18910  001D8C  26D9               	addwf	fsr2l,f,c
 18911  001D8E  51D8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 18912  001D90  22DA               	addwfc	fsr2h,f,c
 18913  001D92  0E1F               	movlw	31
 18914  001D94  18DE               	xorwf	postinc2,w,c
 18915  001D96  A4D8               	btfss	status,2,c
 18916  001D98  D072               	goto	l561
 18917                           
 18918                           ; BSR set to: 0
 18919  001D9A  0E55               	movlw	85
 18920  001D9C  0101               	movlb	1	; () banked
 18921  001D9E  1900               	xorwf	_gblCBW& (0+255),w,b
 18922  001DA0  E16E               	bnz	l561
 18923  001DA2  0E53               	movlw	83
 18924  001DA4  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 18925  001DA6  E16B               	bnz	l561
 18926  001DA8  0E42               	movlw	66
 18927  001DAA  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 18928  001DAC  E168               	bnz	l561
 18929  001DAE  0E43               	movlw	67
 18930  001DB0  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 18931  001DB2  A4D8               	btfss	status,2,c
 18932  001DB4  D064               	goto	l561
 18933                           
 18934                           ; BSR set to: 1
 18935                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 18936  001DB6  0E01               	movlw	1
 18937  001DB8  0100               	movlb	0	; () banked
 18938  001DBA  6FE1               	movwf	_MSDCBWValid& (0+255),b
 18939                           
 18940                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 18941  001DBC  0101               	movlb	1	; () banked
 18942  001DBE  510D               	movf	(_gblCBW+13)& (0+255),w,b
 18943  001DC0  A4D8               	btfss	status,2,c
 18944  001DC2  D052               	goto	l562
 18945                           
 18946                           ; BSR set to: 1
 18947  001DC4  0E11               	movlw	17
 18948  001DC6  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 18949  001DC8  D04F               	goto	l562
 18950                           
 18951                           ; BSR set to: 1
 18952  001DCA  510E               	movf	(_gblCBW+14)& (0+255),w,b
 18953  001DCC  B4D8               	btfsc	status,2,c
 18954  001DCE  D04C               	goto	l562
 18955                           
 18956                           ; BSR set to: 1
 18957  001DD0  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 18958  001DD4  0E3F               	movlw	63
 18959  001DD6  164D               	andwf	??_MSDTasks,f,c
 18960  001DD8  A4D8               	btfss	status,2,c
 18961  001DDA  D046               	goto	l562
 18962                           
 18963                           ; BSR set to: 1
 18964                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 18965  001DDC  0E55               	movlw	85
 18966  001DDE  010D               	movlb	13	; () banked
 18967  001DE0  6F80               	movwf	128,b	;volatile
 18968  001DE2  0E53               	movlw	83
 18969  001DE4  6F81               	movwf	129,b	;volatile
 18970  001DE6  0E42               	movlw	66
 18971  001DE8  6F82               	movwf	130,b	;volatile
 18972  001DEA  0E53               	movlw	83
 18973  001DEC  6F83               	movwf	131,b	;volatile
 18974                           
 18975                           ; BSR set to: 13
 18976                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 18977  001DEE  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 18978  001DF2  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 18979  001DF6  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 18980  001DFA  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 18981                           
 18982                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 18983  001DFE  0E00               	movlw	0
 18984  001E00  6F88               	movwf	136,b	;volatile
 18985  001E02  0E00               	movlw	0
 18986  001E04  6F89               	movwf	137,b	;volatile
 18987  001E06  0E00               	movlw	0
 18988  001E08  6F8A               	movwf	138,b	;volatile
 18989  001E0A  0E00               	movlw	0
 18990  001E0C  6F8B               	movwf	139,b	;volatile
 18991                           
 18992                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 18993  001E0E  0E00               	movlw	0
 18994  001E10  6F8C               	movwf	140,b	;volatile
 18995                           
 18996                           ; BSR set to: 13
 18997                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 18998  001E12  0100               	movlb	0	; () banked
 18999  001E14  69E8               	setf	_MSDCommandState& (0+255),b
 19000                           
 19001                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 19002  001E16  0E00               	movlw	0
 19003  001E18  6FE7               	movwf	_MSDReadState& (0+255),b
 19004                           
 19005                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 19006  001E1A  0E00               	movlw	0
 19007  001E1C  6FE6               	movwf	_MSDWriteState& (0+255),b
 19008                           
 19009                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 19010  001E1E  0E00               	movlw	0
 19011  001E20  6FE5               	movwf	_MSDRetryAttempt& (0+255),b
 19012                           
 19013                           ; BSR set to: 0
 19014                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 19015  001E22  0E03               	movlw	3
 19016  001E24  0101               	movlb	1	; () banked
 19017  001E26  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 19018  001E28  B4D8               	btfsc	status,2,c
 19019  001E2A  D008               	goto	l563
 19020                           
 19021                           ; BSR set to: 1
 19022                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 19023  001E2C  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 19024  001E2E  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 19025  001E30  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 19026  001E32  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 19027                           
 19028                           ; BSR set to: 1
 19029                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 19030  001E34  0E00               	movlw	0
 19031  001E36  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19032                           
 19033                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 19034  001E38  0E00               	movlw	0
 19035  001E3A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19036  001E3C                     l563:
 19037                           
 19038                           ; BSR set to: 1
 19039                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 19040                           
 19041                           ; BSR set to: 1
 19042  001E3C  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 19043  001E3E  D002               	goto	l564
 19044                           
 19045                           ; BSR set to: 1
 19046                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 19047  001E40  0E01               	movlw	1
 19048  001E42  D001               	goto	L17
 19049  001E44                     l564:
 19050                           
 19051                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 19052                           
 19053                           ; BSR set to: 0
 19054  001E44  0E02               	movlw	2
 19055  001E46                     L17:
 19056  001E46  0100               	movlb	0	; () banked
 19057  001E48  6FE9               	movwf	_MSD_State& (0+255),b
 19058                           
 19059                           ; BSR set to: 0
 19060                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 19061                           
 19062                           ; BSR set to: 0
 19063  001E4A  0101               	movlb	1	; () banked
 19064  001E4C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 19065  001E4E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19066  001E50  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19067  001E52  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 19068  001E54  B4D8               	btfsc	status,2,c
 19069  001E56  D002               	goto	l566
 19070                           
 19071                           ; BSR set to: 1
 19072                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 19073  001E58  0E00               	movlw	0
 19074  001E5A  D001               	goto	L18
 19075  001E5C                     l566:
 19076                           
 19077                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 19078                           
 19079                           ; BSR set to: 0
 19080  001E5C  0E01               	movlw	1
 19081  001E5E                     L18:
 19082  001E5E  0100               	movlb	0	; () banked
 19083  001E60  6FE2               	movwf	_MSDHostNoData& (0+255),b
 19084                           
 19085                           ; BSR set to: 0
 19086                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 19087                           
 19088                           ; BSR set to: 0
 19089  001E62  C10F  F0E8         	movff	_gblCBW+15,_MSDCommandState
 19090                           
 19091                           ;usb_device_msd.c: 454: }
 19092  001E66  0012               	return	
 19093  001E68                     l562:
 19094                           
 19095                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 19096                           
 19097                           ; BSR set to: 0
 19098  001E68  0E01               	movlw	1
 19099  001E6A  6E01               	movwf	USBStallEndpoint@dir,c
 19100  001E6C  0E02               	movlw	2
 19101  001E6E  ECF1  F021         	call	_USBStallEndpoint
 19102                           
 19103                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 19104  001E72  0E00               	movlw	0
 19105  001E74  6E01               	movwf	USBStallEndpoint@dir,c
 19106  001E76  0E02               	movlw	2
 19107  001E78  ECF1  F021         	call	_USBStallEndpoint
 19108                           
 19109                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 19110  001E7C  0012               	return	
 19111  001E7E                     l561:
 19112                           
 19113                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 19114  001E7E  0E01               	movlw	1
 19115  001E80  6E01               	movwf	USBStallEndpoint@dir,c
 19116  001E82  0E02               	movlw	2
 19117  001E84  ECF1  F021         	call	_USBStallEndpoint
 19118                           
 19119                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 19120  001E88  0E00               	movlw	0
 19121  001E8A  6E01               	movwf	USBStallEndpoint@dir,c
 19122  001E8C  0E02               	movlw	2
 19123  001E8E  ECF1  F021         	call	_USBStallEndpoint
 19124                           
 19125                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 19126  001E92  0E00               	movlw	0
 19127  001E94  0100               	movlb	0	; () banked
 19128  001E96  6FE1               	movwf	_MSDCBWValid& (0+255),b
 19129                           
 19130                           ; BSR set to: 0
 19131                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 19132                           
 19133                           ; BSR set to: 0
 19134  001E98  0012               	return	
 19135  001E9A                     
 19136                           ; BSR set to: 0
 19137                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 19138                           
 19139                           ; BSR set to: 0
 19140  001E9A  ECE3  F020         	call	_MSDProcessCommand	;wreg free
 19141  001E9E  0AFF               	xorlw	255
 19142  001EA0  A4D8               	btfss	status,2,c
 19143  001EA2  0012               	return	
 19144                           
 19145                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 19146  001EA4  0E03               	movlw	3
 19147  001EA6  0100               	movlb	0	; () banked
 19148  001EA8  6FE9               	movwf	_MSD_State& (0+255),b
 19149                           
 19150                           ; BSR set to: 0
 19151                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 19152  001EAA  0012               	return	
 19153  001EAC                     
 19154                           ; BSR set to: 0
 19155                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 19156                           
 19157                           ; BSR set to: 0
 19158  001EAC  ECE3  F020         	call	_MSDProcessCommand	;wreg free
 19159  001EB0  0AFF               	xorlw	255
 19160  001EB2  A4D8               	btfss	status,2,c
 19161  001EB4  0012               	return	
 19162                           
 19163                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 19164  001EB6  010D               	movlb	13	; () banked
 19165  001EB8  518C               	movf	140,w,b	;volatile
 19166  001EBA  A4D8               	btfss	status,2,c
 19167  001EBC  D008               	goto	l575
 19168                           
 19169                           ; BSR set to: 13
 19170  001EBE  5188               	movf	136,w,b	;volatile
 19171  001EC0  1189               	iorwf	137,w,b	;volatile
 19172  001EC2  118A               	iorwf	138,w,b	;volatile
 19173  001EC4  118B               	iorwf	139,w,b	;volatile
 19174  001EC6  B4D8               	btfsc	status,2,c
 19175  001EC8  D002               	goto	l575
 19176                           
 19177                           ; BSR set to: 13
 19178                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 19179  001ECA  0E02               	movlw	2
 19180  001ECC  6F8C               	movwf	140,b	;volatile
 19181  001ECE                     l575:
 19182                           
 19183                           ; BSR set to: 13
 19184                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 19185  001ECE  0E03               	movlw	3
 19186  001ED0  0100               	movlb	0	; () banked
 19187  001ED2  6FE9               	movwf	_MSD_State& (0+255),b
 19188                           
 19189                           ; BSR set to: 0
 19190                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 19191  001ED4  0012               	return	
 19192  001ED6                     
 19193                           ; BSR set to: 0
 19194                           
 19195                           ; BSR set to: 0
 19196  001ED6  C0C9  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 19197  001EDA  C0CA  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 19198                           
 19199                           ; BSR set to: 0
 19200                           
 19201                           ; BSR set to: 0
 19202                           
 19203                           ; BSR set to: 0
 19204  001EDE  504E               	movf	_MSDTasks$2372,w,c
 19205  001EE0  104F               	iorwf	_MSDTasks$2372+1,w,c
 19206  001EE2  B4D8               	btfsc	status,2,c
 19207  001EE4  D00A               	goto	l577
 19208                           
 19209                           ; BSR set to: 0
 19210  001EE6  C0C9  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 19211  001EEA  C0CA  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 19212                           
 19213                           ; BSR set to: 0
 19214                           
 19215                           ; BSR set to: 0
 19216                           
 19217                           ; BSR set to: 0
 19218                           
 19219                           ; BSR set to: 0
 19220  001EEE  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 19221  001EF2  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 19222  001EF6  BEDF               	btfsc	indf2,7,c
 19223  001EF8  0012               	return	
 19224  001EFA                     l577:
 19225                           
 19226                           ; BSR set to: 0
 19227                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 19228                           
 19229                           ; BSR set to: 0
 19230  001EFA  0E01               	movlw	1
 19231  001EFC  6E01               	movwf	USBTransferOnePacket@dir,c
 19232  001EFE  0E80               	movlw	128
 19233  001F00  6E02               	movwf	USBTransferOnePacket@data,c
 19234  001F02  0E0D               	movlw	13
 19235  001F04  6E03               	movwf	USBTransferOnePacket@data+1,c
 19236  001F06  0E0D               	movlw	13
 19237  001F08  6E04               	movwf	USBTransferOnePacket@len,c
 19238  001F0A  0E02               	movlw	2
 19239  001F0C  ECFE  F023         	call	_USBTransferOnePacket
 19240  001F10  C001  F0D5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 19241  001F14  C002  F0D6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 19242                           
 19243                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 19244  001F18  0100               	movlb	0	; () banked
 19245  001F1A  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 19246  001F1C  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19247  001F1E  B4D8               	btfsc	status,2,c
 19248  001F20  D006               	goto	u10940
 19249                           
 19250                           ; BSR set to: 0
 19251  001F22  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19252  001F26  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19253  001F2A  BEDF               	btfsc	indf2,7,c
 19254  001F2C  D00F               	goto	l586
 19255  001F2E                     u10940:
 19256                           
 19257                           ; BSR set to: 0
 19258                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 19259                           
 19260                           ; BSR set to: 0
 19261  001F2E  0E00               	movlw	0
 19262  001F30  6E01               	movwf	USBTransferOnePacket@dir,c
 19263  001F32  0E40               	movlw	64
 19264  001F34  6E02               	movwf	USBTransferOnePacket@data,c
 19265  001F36  0E0D               	movlw	13
 19266  001F38  6E03               	movwf	USBTransferOnePacket@data+1,c
 19267  001F3A  0E40               	movlw	64
 19268  001F3C  6E04               	movwf	USBTransferOnePacket@len,c
 19269  001F3E  0E02               	movlw	2
 19270  001F40  ECFE  F023         	call	_USBTransferOnePacket
 19271  001F44  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19272  001F48  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19273  001F4C                     l586:
 19274                           
 19275                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 19276  001F4C  0E00               	movlw	0
 19277  001F4E  0100               	movlb	0	; () banked
 19278  001F50  6FE9               	movwf	_MSD_State& (0+255),b
 19279                           
 19280                           ;usb_device_msd.c: 513: break;
 19281  001F52  0012               	return	
 19282  001F54                     
 19283                           ; BSR set to: 0
 19284                           ;usb_device_msd.c: 518: MSD_State=0x00;
 19285                           
 19286                           ; BSR set to: 0
 19287  001F54  0E00               	movlw	0
 19288  001F56  6FE9               	movwf	_MSD_State& (0+255),b
 19289                           
 19290                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 19291  001F58  0E02               	movlw	2
 19292  001F5A  010D               	movlb	13	; () banked
 19293  001F5C  6F8C               	movwf	140,b	;volatile
 19294                           
 19295                           ; BSR set to: 13
 19296                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 19297  001F5E  0E00               	movlw	0
 19298  001F60  6E01               	movwf	USBStallEndpoint@dir,c
 19299  001F62  0E02               	movlw	2
 19300  001F64  ECF1  F021         	call	_USBStallEndpoint
 19301                           
 19302                           ;usb_device_msd.c: 521: }
 19303  001F68  0012               	return	
 19304  001F6A                     l554:
 19305  001F6A  0100               	movlb	0	; () banked
 19306  001F6C  51E9               	movf	_MSD_State& (0+255),w,b
 19307                           
 19308                           ; Switch size 1, requested type "space"
 19309                           ; Number of cases is 4, Range of values is 0 to 3
 19310                           ; switch strategies available:
 19311                           ; Name         Instructions Cycles
 19312                           ; simple_byte           13     7 (average)
 19313                           ;	Chosen strategy is simple_byte
 19314  001F6E  0A00               	xorlw	0	; case 0
 19315  001F70  B4D8               	btfsc	status,2,c
 19316  001F72  D6E3               	goto	l555
 19317  001F74  0A01               	xorlw	1	; case 1
 19318  001F76  B4D8               	btfsc	status,2,c
 19319  001F78  D790               	goto	l571
 19320  001F7A  0A03               	xorlw	3	; case 2
 19321  001F7C  B4D8               	btfsc	status,2,c
 19322  001F7E  D796               	goto	l573
 19323  001F80  0A01               	xorlw	1	; case 3
 19324  001F82  B4D8               	btfsc	status,2,c
 19325  001F84  D7A8               	goto	l576
 19326  001F86  D7E6               	goto	l589
 19327  001F88                     __end_of_MSDTasks:
 19328                           	opt stack 0
 19329                           tosu	equ	0xFFF
 19330                           tosh	equ	0xFFE
 19331                           tosl	equ	0xFFD
 19332                           pclath	equ	0xFFA
 19333                           tblptru	equ	0xFF8
 19334                           tblptrh	equ	0xFF7
 19335                           tblptrl	equ	0xFF6
 19336                           tablat	equ	0xFF5
 19337                           prodh	equ	0xFF4
 19338                           prodl	equ	0xFF3
 19339                           intcon	equ	0xFF2
 19340                           intcon2	equ	0xFF1
 19341                           intcon3	equ	0xFF0
 19342                           indf0	equ	0xFEF
 19343                           postinc0	equ	0xFEE
 19344                           fsr0h	equ	0xFEA
 19345                           fsr0l	equ	0xFE9
 19346                           wreg	equ	0xFE8
 19347                           indf1	equ	0xFE7
 19348                           postdec1	equ	0xFE5
 19349                           plusw1	equ	0xFE3
 19350                           fsr1h	equ	0xFE2
 19351                           fsr1l	equ	0xFE1
 19352                           indf2	equ	0xFDF
 19353                           postinc2	equ	0xFDE
 19354                           postdec2	equ	0xFDD
 19355                           plusw2	equ	0xFDB
 19356                           fsr2h	equ	0xFDA
 19357                           fsr2l	equ	0xFD9
 19358                           status	equ	0xFD8
 19359                           
 19360 ;; *************** function _MSDProcessCommand *****************
 19361 ;; Defined at:
 19362 ;;		line 553 in file "usb_device_msd.c"
 19363 ;; Parameters:    Size  Location     Type
 19364 ;;		None
 19365 ;; Auto vars:     Size  Location     Type
 19366 ;;		None
 19367 ;; Return value:  Size  Location     Type
 19368 ;;                  1    wreg      unsigned char 
 19369 ;; Registers used:
 19370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19371 ;; Tracked objects:
 19372 ;;		On entry : 0/0
 19373 ;;		On exit  : 0/0
 19374 ;;		Unchanged: 0/0
 19375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19378 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19379 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19380 ;;Total ram usage:        5 bytes
 19381 ;; Hardware stack levels used:    1
 19382 ;; Hardware stack levels required when called:    9
 19383 ;; This function calls:
 19384 ;;		_ExternalFlash_MediaDetect
 19385 ;;		_ExternalFlash_MediaInitialize
 19386 ;;		_MSDProcessCommandMediaAbsent
 19387 ;;		_MSDProcessCommandMediaPresent
 19388 ;; This function is called by:
 19389 ;;		_MSDTasks
 19390 ;; This function uses a non-reentrant model
 19391 ;;
 19392                           
 19393                           	psect	text90
 19394  0041C6                     __ptext90:
 19395                           	opt stack 0
 19396  0041C6                     _MSDProcessCommand:
 19397                           	opt stack 19
 19398                           
 19399                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 19400                           
 19401                           ;incstack = 0
 19402  0041C6  C1E6  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 19403  0041CA  C1E7  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 19404  0041CE  D801               	call	u9898
 19405  0041D0  D00A               	goto	u9899
 19406  0041D2                     u9898:
 19407  0041D2  0005               	push	
 19408  0041D4  6EFA               	movwf	pclath,c
 19409  0041D6  0101               	movlb	1	; () banked
 19410  0041D8  51DE               	movf	(_LUN+6)& (0+255),w,b
 19411  0041DA  6EFD               	movwf	tosl,c
 19412  0041DC  51DF               	movf	(_LUN+7)& (0+255),w,b
 19413  0041DE  6EFE               	movwf	tosh,c
 19414  0041E0  6AFF               	clrf	tosu,c
 19415  0041E2  50FA               	movf	pclath,w,c
 19416  0041E4  0012               	return		;indir
 19417  0041E6                     u9899:
 19418  0041E6  0900               	iorlw	0
 19419  0041E8  B4D8               	btfsc	status,2,c
 19420  0041EA  D00C               	goto	u9910
 19421  0041EC  0101               	movlb	1	; () banked
 19422  0041EE  510D               	movf	(_gblCBW+13)& (0+255),w,b
 19423  0041F0  0D01               	mullw	1
 19424  0041F2  0EE3               	movlw	low _SoftDetach
 19425  0041F4  24F3               	addwf	prodl,w,c
 19426  0041F6  6ED9               	movwf	fsr2l,c
 19427  0041F8  0E00               	movlw	high _SoftDetach
 19428  0041FA  20F4               	addwfc	prodh,w,c
 19429  0041FC  6EDA               	movwf	fsr2h,c
 19430  0041FE  04DE               	decf	postinc2,w,c
 19431  004200  A4D8               	btfss	status,2,c
 19432  004202  D019               	goto	l592
 19433  004204                     u9910:
 19434                           
 19435                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 19436                           
 19437                           ; BSR set to: 1
 19438  004204  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19439  004208  0E01               	movlw	1
 19440  00420A  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19441  00420C  0E00               	movlw	0
 19442  00420E  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19443  004210  2A48               	incf	??_MSDProcessCommand,f,c
 19444  004212  D003               	goto	u9924
 19445  004214                     u9925:
 19446  004214  90D8               	bcf	status,0,c
 19447  004216  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19448  004218  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19449  00421A                     u9924:
 19450  00421A  2E48               	decfsz	??_MSDProcessCommand,f,c
 19451  00421C  D7FB               	goto	u9925
 19452  00421E  1C49               	comf	??_MSDProcessCommand+1,w,c
 19453  004220  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 19454  004222  1C4A               	comf	??_MSDProcessCommand+2,w,c
 19455  004224  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 19456  004226  504B               	movf	??_MSDProcessCommand+3,w,c
 19457  004228  0101               	movlb	1	; () banked
 19458  00422A  177E               	andwf	_gblMediaPresent& (0+255),f,b
 19459  00422C  504C               	movf	??_MSDProcessCommand+4,w,c
 19460  00422E  177F               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 19461                           
 19462                           ; BSR set to: 1
 19463                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 19464  004230  EC71  F037         	call	_MSDProcessCommandMediaAbsent	;wreg free
 19465                           
 19466                           ;usb_device_msd.c: 563: }
 19467  004234  D04E               	goto	l599
 19468  004236                     l592:
 19469                           
 19470                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 19471  004236  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19472  00423A  0E01               	movlw	1
 19473  00423C  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19474  00423E  0E00               	movlw	0
 19475  004240  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19476  004242  2A48               	incf	??_MSDProcessCommand,f,c
 19477  004244  D003               	goto	u9934
 19478  004246                     u9935:
 19479  004246  90D8               	bcf	status,0,c
 19480  004248  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19481  00424A  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19482  00424C                     u9934:
 19483  00424C  2E48               	decfsz	??_MSDProcessCommand,f,c
 19484  00424E  D7FB               	goto	u9935
 19485  004250  0101               	movlb	1	; () banked
 19486  004252  517E               	movf	_gblMediaPresent& (0+255),w,b
 19487  004254  1649               	andwf	??_MSDProcessCommand+1,f,c
 19488  004256  517F               	movf	(_gblMediaPresent+1)& (0+255),w,b
 19489  004258  164A               	andwf	??_MSDProcessCommand+2,f,c
 19490  00425A  5049               	movf	??_MSDProcessCommand+1,w,c
 19491  00425C  104A               	iorwf	??_MSDProcessCommand+2,w,c
 19492  00425E  A4D8               	btfss	status,2,c
 19493  004260  D036               	goto	l596
 19494                           
 19495                           ; BSR set to: 1
 19496                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 19497  004262  C1E6  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 19498  004266  C1E7  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 19499  00426A  D801               	call	u9958
 19500  00426C  D009               	goto	u9959
 19501  00426E                     u9958:
 19502  00426E  0005               	push	
 19503  004270  6EFA               	movwf	pclath,c
 19504  004272  51D8               	movf	_LUN& (0+255),w,b
 19505  004274  6EFD               	movwf	tosl,c
 19506  004276  51D9               	movf	(_LUN+1)& (0+255),w,b
 19507  004278  6EFE               	movwf	tosh,c
 19508  00427A  6AFF               	clrf	tosu,c
 19509  00427C  50FA               	movf	pclath,w,c
 19510  00427E  0012               	return		;indir
 19511  004280                     u9959:
 19512  004280  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 19513  004282  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 19514  004284  B4D8               	btfsc	status,2,c
 19515  004286  D020               	goto	l597
 19516                           
 19517                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 19518  004288  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19519  00428C  0E01               	movlw	1
 19520  00428E  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19521  004290  0E00               	movlw	0
 19522  004292  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19523  004294  2A48               	incf	??_MSDProcessCommand,f,c
 19524  004296  D003               	goto	u9974
 19525  004298                     u9975:
 19526  004298  90D8               	bcf	status,0,c
 19527  00429A  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19528  00429C  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19529  00429E                     u9974:
 19530  00429E  2E48               	decfsz	??_MSDProcessCommand,f,c
 19531  0042A0  D7FB               	goto	u9975
 19532  0042A2  5049               	movf	??_MSDProcessCommand+1,w,c
 19533  0042A4  0101               	movlb	1	; () banked
 19534  0042A6  137E               	iorwf	_gblMediaPresent& (0+255),f,b
 19535  0042A8  504A               	movf	??_MSDProcessCommand+2,w,c
 19536  0042AA  137F               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 19537                           
 19538                           ; BSR set to: 1
 19539                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 19540  0042AC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19541  0042AE  0BF0               	andlw	-16
 19542  0042B0  0906               	iorlw	6
 19543  0042B2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19544                           
 19545                           ; BSR set to: 1
 19546                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 19547  0042B4  0E28               	movlw	40
 19548  0042B6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19549                           
 19550                           ; BSR set to: 1
 19551                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 19552  0042B8  0E00               	movlw	0
 19553  0042BA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19554                           
 19555                           ; BSR set to: 1
 19556                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 19557  0042BC  0E01               	movlw	1
 19558  0042BE  010D               	movlb	13	; () banked
 19559  0042C0  6F8C               	movwf	140,b	;volatile
 19560                           
 19561                           ; BSR set to: 13
 19562                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 19563  0042C2  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19564                           
 19565                           ;usb_device_msd.c: 589: }
 19566  0042C6  D005               	goto	l599
 19567  0042C8                     l597:
 19568                           
 19569                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 19570  0042C8  EC71  F037         	call	_MSDProcessCommandMediaAbsent	;wreg free
 19571                           
 19572                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 19573  0042CC  D002               	goto	l599
 19574  0042CE                     l596:
 19575                           
 19576                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 19577  0042CE  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19578  0042D2                     l599:
 19579                           
 19580                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 19581  0042D2  0100               	movlb	0	; () banked
 19582  0042D4  51E8               	movf	_MSDCommandState& (0+255),w,b
 19583  0042D6  0012               	return	
 19584  0042D8                     __end_of_MSDProcessCommand:
 19585                           	opt stack 0
 19586                           tosu	equ	0xFFF
 19587                           tosh	equ	0xFFE
 19588                           tosl	equ	0xFFD
 19589                           pclath	equ	0xFFA
 19590                           tblptru	equ	0xFF8
 19591                           tblptrh	equ	0xFF7
 19592                           tblptrl	equ	0xFF6
 19593                           tablat	equ	0xFF5
 19594                           prodh	equ	0xFF4
 19595                           prodl	equ	0xFF3
 19596                           intcon	equ	0xFF2
 19597                           intcon2	equ	0xFF1
 19598                           intcon3	equ	0xFF0
 19599                           indf0	equ	0xFEF
 19600                           postinc0	equ	0xFEE
 19601                           fsr0h	equ	0xFEA
 19602                           fsr0l	equ	0xFE9
 19603                           wreg	equ	0xFE8
 19604                           indf1	equ	0xFE7
 19605                           postdec1	equ	0xFE5
 19606                           plusw1	equ	0xFE3
 19607                           fsr1h	equ	0xFE2
 19608                           fsr1l	equ	0xFE1
 19609                           indf2	equ	0xFDF
 19610                           postinc2	equ	0xFDE
 19611                           postdec2	equ	0xFDD
 19612                           plusw2	equ	0xFDB
 19613                           fsr2h	equ	0xFDA
 19614                           fsr2l	equ	0xFD9
 19615                           status	equ	0xFD8
 19616                           
 19617 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 19618 ;; Defined at:
 19619 ;;		line 635 in file "usb_device_msd.c"
 19620 ;; Parameters:    Size  Location     Type
 19621 ;;		None
 19622 ;; Auto vars:     Size  Location     Type
 19623 ;;		None
 19624 ;; Return value:  Size  Location     Type
 19625 ;;                  1    wreg      void 
 19626 ;; Registers used:
 19627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19628 ;; Tracked objects:
 19629 ;;		On entry : 0/0
 19630 ;;		On exit  : 0/0
 19631 ;;		Unchanged: 0/0
 19632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19637 ;;Total ram usage:        0 bytes
 19638 ;; Hardware stack levels used:    1
 19639 ;; Hardware stack levels required when called:    8
 19640 ;; This function calls:
 19641 ;;		_MSDErrorHandler
 19642 ;;		_MSDProcessCommandMediaPresent
 19643 ;;		_ResetSenseData
 19644 ;; This function is called by:
 19645 ;;		_MSDProcessCommand
 19646 ;; This function uses a non-reentrant model
 19647 ;;
 19648                           
 19649                           	psect	text91
 19650  006EE2                     __ptext91:
 19651                           	opt stack 0
 19652  006EE2                     _MSDProcessCommandMediaAbsent:
 19653                           	opt stack 19
 19654                           
 19655                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 19656                           
 19657                           ; BSR set to: 0
 19658                           ;incstack = 0
 19659  006EE2  D01E               	goto	l603
 19660  006EE4                     
 19661                           ;usb_device_msd.c: 646: ResetSenseData();
 19662  006EE4  ECA2  F037         	call	_ResetSenseData	;wreg free
 19663                           
 19664                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 19665  006EE8  0101               	movlb	1	; () banked
 19666  006EEA  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19667  006EEC  0BF0               	andlw	-16
 19668  006EEE  0902               	iorlw	2
 19669  006EF0  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19670                           
 19671                           ; BSR set to: 1
 19672                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 19673  006EF2  0E3A               	movlw	58
 19674  006EF4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19675                           
 19676                           ; BSR set to: 1
 19677                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 19678  006EF6  0E00               	movlw	0
 19679  006EF8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19680                           
 19681                           ; BSR set to: 1
 19682                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 19683  006EFA  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19684                           
 19685                           ;usb_device_msd.c: 655: break;
 19686  006EFE  0012               	return	
 19687  006F00                     
 19688                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 19689  006F00  0E01               	movlw	1
 19690  006F02  010D               	movlb	13	; () banked
 19691  006F04  6F8C               	movwf	140,b	;volatile
 19692                           
 19693                           ; BSR set to: 13
 19694                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 19695  006F06  0100               	movlb	0	; () banked
 19696  006F08  69E8               	setf	_MSDCommandState& (0+255),b
 19697                           
 19698                           ;usb_device_msd.c: 665: break;
 19699  006F0A  0012               	return	
 19700  006F0C                     
 19701                           ; BSR set to: 0
 19702                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 19703                           
 19704                           ; BSR set to: 0
 19705  006F0C  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19706                           
 19707                           ;usb_device_msd.c: 671: break;
 19708  006F10  0012               	return	
 19709  006F12                     
 19710                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 19711  006F12  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19712                           
 19713                           ;usb_device_msd.c: 677: break;
 19714  006F16  0012               	return	
 19715  006F18                     
 19716                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 19717  006F18  0E7F               	movlw	127
 19718  006F1A  EC7B  F023         	call	_MSDErrorHandler
 19719                           
 19720                           ;usb_device_msd.c: 685: }
 19721                           
 19722                           ;usb_device_msd.c: 684: break;
 19723  006F1E  0012               	return	
 19724  006F20                     l603:
 19725  006F20  0100               	movlb	0	; () banked
 19726  006F22  51E8               	movf	_MSDCommandState& (0+255),w,b
 19727                           
 19728                           ; Switch size 1, requested type "space"
 19729                           ; Number of cases is 5, Range of values is 0 to 253
 19730                           ; switch strategies available:
 19731                           ; Name         Instructions Cycles
 19732                           ; simple_byte           16     9 (average)
 19733                           ;	Chosen strategy is simple_byte
 19734  006F24  0A00               	xorlw	0	; case 0
 19735  006F26  B4D8               	btfsc	status,2,c
 19736  006F28  D7EB               	goto	l606
 19737  006F2A  0A03               	xorlw	3	; case 3
 19738  006F2C  B4D8               	btfsc	status,2,c
 19739  006F2E  D7DA               	goto	l604
 19740  006F30  0A11               	xorlw	17	; case 18
 19741  006F32  B4D8               	btfsc	status,2,c
 19742  006F34  D7EB               	goto	l608
 19743  006F36  0A0C               	xorlw	12	; case 30
 19744  006F38  B4D8               	btfsc	status,2,c
 19745  006F3A  D7E2               	goto	l606
 19746  006F3C  0AE3               	xorlw	227	; case 253
 19747  006F3E  B4D8               	btfsc	status,2,c
 19748  006F40  D7E8               	goto	l609
 19749  006F42  D7EA               	goto	l610
 19750  006F44                     __end_of_MSDProcessCommandMediaAbsent:
 19751                           	opt stack 0
 19752                           tosu	equ	0xFFF
 19753                           tosh	equ	0xFFE
 19754                           tosl	equ	0xFFD
 19755                           pclath	equ	0xFFA
 19756                           tblptru	equ	0xFF8
 19757                           tblptrh	equ	0xFF7
 19758                           tblptrl	equ	0xFF6
 19759                           tablat	equ	0xFF5
 19760                           prodh	equ	0xFF4
 19761                           prodl	equ	0xFF3
 19762                           intcon	equ	0xFF2
 19763                           intcon2	equ	0xFF1
 19764                           intcon3	equ	0xFF0
 19765                           indf0	equ	0xFEF
 19766                           postinc0	equ	0xFEE
 19767                           fsr0h	equ	0xFEA
 19768                           fsr0l	equ	0xFE9
 19769                           wreg	equ	0xFE8
 19770                           indf1	equ	0xFE7
 19771                           postdec1	equ	0xFE5
 19772                           plusw1	equ	0xFE3
 19773                           fsr1h	equ	0xFE2
 19774                           fsr1l	equ	0xFE1
 19775                           indf2	equ	0xFDF
 19776                           postinc2	equ	0xFDE
 19777                           postdec2	equ	0xFDD
 19778                           plusw2	equ	0xFDB
 19779                           fsr2h	equ	0xFDA
 19780                           fsr2l	equ	0xFD9
 19781                           status	equ	0xFD8
 19782                           
 19783 ;; *************** function _MSDProcessCommandMediaPresent *****************
 19784 ;; Defined at:
 19785 ;;		line 712 in file "usb_device_msd.c"
 19786 ;; Parameters:    Size  Location     Type
 19787 ;;		None
 19788 ;; Auto vars:     Size  Location     Type
 19789 ;;  capacity        4   66[COMRAM] struct .
 19790 ;;  sectorSize      4   62[COMRAM] struct .
 19791 ;;  i               1   70[COMRAM] unsigned char 
 19792 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 19793 ;; Return value:  Size  Location     Type
 19794 ;;                  1    wreg      void 
 19795 ;; Registers used:
 19796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19797 ;; Tracked objects:
 19798 ;;		On entry : 0/0
 19799 ;;		On exit  : 0/0
 19800 ;;		Unchanged: 0/0
 19801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19803 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19804 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19805 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19806 ;;Total ram usage:       14 bytes
 19807 ;; Hardware stack levels used:    1
 19808 ;; Hardware stack levels required when called:    7
 19809 ;; This function calls:
 19810 ;;		_ExternalFlash_CapacityRead
 19811 ;;		_ExternalFlash_SectorSizeRead
 19812 ;;		_ExternalFlash_WriteProtectStateGet
 19813 ;;		_MSDCheckForErrorCases
 19814 ;;		_MSDComputeDeviceInAndResidue
 19815 ;;		_MSDErrorHandler
 19816 ;;		_MSDReadHandler
 19817 ;;		_MSDWriteHandler
 19818 ;;		_ResetSenseData
 19819 ;;		_USBTransferOnePacket
 19820 ;;		_memcpy
 19821 ;; This function is called by:
 19822 ;;		_MSDProcessCommand
 19823 ;;		_MSDProcessCommandMediaAbsent
 19824 ;; This function uses a non-reentrant model
 19825 ;;
 19826                           
 19827                           	psect	text92
 19828  00049C                     __ptext92:
 19829                           	opt stack 0
 19830  00049C                     _MSDProcessCommandMediaPresent:
 19831                           	opt stack 20
 19832                           
 19833                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 19834                           
 19835                           ;incstack = 0
 19836  00049C  D1B9               	goto	l614
 19837  00049E                     
 19838                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 19839  00049E  ECD7  F016         	call	_MSDReadHandler	;wreg free
 19840  0004A2  0900               	iorlw	0
 19841  0004A4  A4D8               	btfss	status,2,c
 19842  0004A6  0012               	return	
 19843                           
 19844                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 19845  0004A8  0100               	movlb	0	; () banked
 19846  0004AA  69E8               	setf	_MSDCommandState& (0+255),b
 19847                           
 19848                           ; BSR set to: 0
 19849                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 19850  0004AC  0012               	return	
 19851  0004AE                     
 19852                           ; BSR set to: 0
 19853                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 19854                           
 19855                           ; BSR set to: 0
 19856  0004AE  ECC8  F00A         	call	_MSDWriteHandler	;wreg free
 19857  0004B2  0900               	iorlw	0
 19858  0004B4  A4D8               	btfss	status,2,c
 19859  0004B6  0012               	return	
 19860                           
 19861                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 19862  0004B8  0100               	movlb	0	; () banked
 19863  0004BA  69E8               	setf	_MSDCommandState& (0+255),b
 19864                           
 19865                           ; BSR set to: 0
 19866                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 19867  0004BC  0012               	return	
 19868  0004BE                     
 19869                           ; BSR set to: 0
 19870                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 19871                           
 19872                           ; BSR set to: 0
 19873  0004BE  05E2               	decf	_MSDHostNoData& (0+255),w,b
 19874  0004C0  A4D8               	btfss	status,2,c
 19875  0004C2  D002               	goto	l621
 19876                           
 19877                           ; BSR set to: 0
 19878                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 19879  0004C4  69E8               	setf	_MSDCommandState& (0+255),b
 19880                           
 19881                           ;usb_device_msd.c: 751: break;
 19882  0004C6  0012               	return	
 19883  0004C8                     l621:
 19884                           
 19885                           ; BSR set to: 0
 19886                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 19887  0004C8  C112  F0D4         	movff	_gblCBW+18,_TransferLength+1
 19888                           
 19889                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 19890  0004CC  C113  F0D3         	movff	_gblCBW+19,_TransferLength
 19891                           
 19892                           ; BSR set to: 0
 19893                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 19894  0004D0  C0D3  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 19895  0004D4  C0D4  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 19896  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 19897  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 19898  0004DC  ECE1  F025         	call	_MSDCheckForErrorCases	;wreg free
 19899  0004E0  0900               	iorlw	0
 19900  0004E2  A4D8               	btfss	status,2,c
 19901  0004E4  0012               	return	
 19902                           
 19903                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 19904                           
 19905                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 19906  0004E6  0E00               	movlw	0
 19907  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19908  0004EA  0E24               	movlw	36
 19909  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19910  0004EE  EC96  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19911                           
 19912                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 19913  0004F2  0E00               	movlw	0
 19914  0004F4  6E01               	movwf	memcpy@d1,c
 19915  0004F6  0E06               	movlw	6
 19916  0004F8  6E02               	movwf	memcpy@d1+1,c
 19917  0004FA  0E4A               	movlw	low _inq_resp
 19918  0004FC  6E03               	movwf	memcpy@s1,c
 19919  0004FE  0E8F               	movlw	high _inq_resp
 19920  000500  6E04               	movwf	memcpy@s1+1,c
 19921  000502  5003               	movf	memcpy@s1,w,c
 19922  000504  1004               	iorwf	memcpy@s1+1,w,c
 19923  000506  A4D8               	btfss	status,2,c
 19924  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 19925  00050A  6E05               	movwf	memcpy@s1+2,c
 19926  00050C  0E00               	movlw	0
 19927  00050E  6E07               	movwf	memcpy@n+1,c
 19928  000510  0E24               	movlw	36
 19929  000512  6E06               	movwf	memcpy@n,c
 19930  000514  EC3E  F037         	call	_memcpy	;wreg free
 19931                           
 19932                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 19933  000518  0EFD               	movlw	253
 19934  00051A  0100               	movlb	0	; () banked
 19935  00051C  6FE8               	movwf	_MSDCommandState& (0+255),b
 19936                           
 19937                           ;usb_device_msd.c: 773: break;
 19938  00051E  0012               	return	
 19939  000520                     
 19940                           ; BSR set to: 0
 19941                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 19942                           
 19943                           ; BSR set to: 0
 19944  000520  C1E6  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 19945  000524  C1E7  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 19946  000528  D801               	call	u8908
 19947  00052A  D00A               	goto	u8909
 19948  00052C                     u8908:
 19949  00052C  0005               	push	
 19950  00052E  6EFA               	movwf	pclath,c
 19951  000530  0101               	movlb	1	; () banked
 19952  000532  51DA               	movf	(_LUN+2)& (0+255),w,b
 19953  000534  6EFD               	movwf	tosl,c
 19954  000536  51DB               	movf	(_LUN+3)& (0+255),w,b
 19955  000538  6EFE               	movwf	tosh,c
 19956  00053A  6AFF               	clrf	tosu,c
 19957  00053C  50FA               	movf	pclath,w,c
 19958  00053E  0012               	return		;indir
 19959  000540                     u8909:
 19960  000540  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 19961  000544  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 19962  000548  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 19963  00054C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 19964                           
 19965                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 19966  000550  C1E6  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 19967  000554  C1E7  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 19968  000558  D801               	call	u8918
 19969  00055A  D00A               	goto	u8919
 19970  00055C                     u8918:
 19971  00055C  0005               	push	
 19972  00055E  6EFA               	movwf	pclath,c
 19973  000560  0101               	movlb	1	; () banked
 19974  000562  51DC               	movf	(_LUN+4)& (0+255),w,b
 19975  000564  6EFD               	movwf	tosl,c
 19976  000566  51DD               	movf	(_LUN+5)& (0+255),w,b
 19977  000568  6EFE               	movwf	tosh,c
 19978  00056A  6AFF               	clrf	tosu,c
 19979  00056C  50FA               	movf	pclath,w,c
 19980  00056E  0012               	return		;indir
 19981  000570                     u8919:
 19982  000570  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 19983  000574  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 19984  000578  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 19985  00057A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 19986                           
 19987                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 19988  00057C  EE26 F000          	lfsr	2,1536
 19989  000580  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 19990                           
 19991                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 19992  000584  EE26 F001          	lfsr	2,1537	;volatile
 19993  000588  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 19994                           
 19995                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 19996  00058C  EE26 F002          	lfsr	2,1538	;volatile
 19997  000590  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 19998                           
 19999                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 20000  000594  EE26 F003          	lfsr	2,1539	;volatile
 20001  000598  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 20002                           
 20003                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 20004  00059C  EE26 F004          	lfsr	2,1540	;volatile
 20005  0005A0  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 20006                           
 20007                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 20008  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 20009  0005A8  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 20010                           
 20011                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 20012  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 20013  0005B0  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 20014                           
 20015                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 20016  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 20017  0005B8  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 20018                           
 20019                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 20020  0005BC  0E00               	movlw	0
 20021  0005BE  0100               	movlb	0	; () banked
 20022  0005C0  6FD4               	movwf	(_TransferLength+1)& (0+255),b
 20023  0005C2  0E08               	movlw	8
 20024  0005C4  6FD3               	movwf	_TransferLength& (0+255),b
 20025                           
 20026                           ; BSR set to: 0
 20027                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 20028  0005C6  0E00               	movlw	0
 20029  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20030  0005CA  0E08               	movlw	8
 20031  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20032  0005CE  EC96  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20033                           
 20034                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 20035  0005D2  0EFD               	movlw	253
 20036  0005D4  0100               	movlb	0	; () banked
 20037  0005D6  6FE8               	movwf	_MSDCommandState& (0+255),b
 20038                           
 20039                           ;usb_device_msd.c: 802: break;
 20040  0005D8  0012               	return	
 20041  0005DA                     
 20042                           ; BSR set to: 0
 20043                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 20044                           
 20045                           ; BSR set to: 0
 20046  0005DA  05E2               	decf	_MSDHostNoData& (0+255),w,b
 20047  0005DC  A4D8               	btfss	status,2,c
 20048  0005DE  D002               	goto	l625
 20049                           
 20050                           ; BSR set to: 0
 20051                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 20052  0005E0  69E8               	setf	_MSDCommandState& (0+255),b
 20053                           
 20054                           ;usb_device_msd.c: 814: break;
 20055  0005E2  0012               	return	
 20056  0005E4                     l625:
 20057                           
 20058                           ; BSR set to: 0
 20059                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 20060                           
 20061                           ; BSR set to: 0
 20062  0005E4  0E00               	movlw	0
 20063  0005E6  6FD4               	movwf	(_TransferLength+1)& (0+255),b
 20064  0005E8  0E12               	movlw	18
 20065  0005EA  6FD3               	movwf	_TransferLength& (0+255),b
 20066                           
 20067                           ; BSR set to: 0
 20068                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 20069  0005EC  0E00               	movlw	0
 20070  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20071  0005F0  0E12               	movlw	18
 20072  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20073  0005F4  EC96  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20074                           
 20075                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 20076  0005F8  0E00               	movlw	0
 20077  0005FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 20078  0005FC                     l11777:
 20079  0005FC  0E11               	movlw	17
 20080  0005FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 20081  000600  D001               	goto	l626
 20082  000602  D014               	goto	u8940
 20083  000604                     l626:
 20084                           
 20085                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 20086  000604  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20087  000606  0D01               	mullw	1
 20088  000608  0E1F               	movlw	low _gblSenseData
 20089  00060A  24F3               	addwf	prodl,w,c
 20090  00060C  6ED9               	movwf	fsr2l,c
 20091  00060E  0E01               	movlw	high _gblSenseData
 20092  000610  20F4               	addwfc	prodh,w,c
 20093  000612  6EDA               	movwf	fsr2h,c
 20094  000614  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20095  000616  0D01               	mullw	1
 20096  000618  0E00               	movlw	0
 20097  00061A  24F3               	addwf	prodl,w,c
 20098  00061C  6EE1               	movwf	fsr1l,c
 20099  00061E  0E06               	movlw	6
 20100  000620  20F4               	addwfc	prodh,w,c
 20101  000622  6EE2               	movwf	fsr1h,c
 20102  000624  CFDF FFE7          	movff	indf2,indf1
 20103  000628  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 20104  00062A  D7E8               	goto	l11777
 20105  00062C                     u8940:
 20106                           
 20107                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 20108  00062C  0EFD               	movlw	253
 20109  00062E  0100               	movlb	0	; () banked
 20110  000630  6FE8               	movwf	_MSDCommandState& (0+255),b
 20111                           
 20112                           ;usb_device_msd.c: 827: break;
 20113  000632  0012               	return	
 20114  000634                     l628:
 20115                           
 20116                           ; BSR set to: 0
 20117                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 20118  000634  0E03               	movlw	3
 20119  000636  CFE8 F600          	movff	wreg,1536
 20120                           
 20121                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 20122  00063A  0E00               	movlw	0
 20123  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 20124                           
 20125                           ; BSR set to: 0
 20126                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 20127  000640  C1E6  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20128  000644  C1E7  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20129  000648  D801               	call	u8958
 20130  00064A  D00A               	goto	u8959
 20131  00064C                     u8958:
 20132  00064C  0005               	push	
 20133  00064E  6EFA               	movwf	pclath,c
 20134  000650  0101               	movlb	1	; () banked
 20135  000652  51E2               	movf	(_LUN+10)& (0+255),w,b
 20136  000654  6EFD               	movwf	tosl,c
 20137  000656  51E3               	movf	(_LUN+11)& (0+255),w,b
 20138  000658  6EFE               	movwf	tosh,c
 20139  00065A  6AFF               	clrf	tosu,c
 20140  00065C  50FA               	movf	pclath,w,c
 20141  00065E  0012               	return		;indir
 20142  000660                     u8959:
 20143  000660  0900               	iorlw	0
 20144  000662  A4D8               	btfss	status,2,c
 20145  000664  D004               	goto	l630
 20146  000666  0E00               	movlw	0
 20147  000668  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 20148  00066A  0E00               	movlw	0
 20149  00066C  D003               	goto	L19
 20150  00066E                     l630:
 20151  00066E  0E00               	movlw	0
 20152  000670  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 20153  000672  0E80               	movlw	128
 20154  000674                     L19:
 20155  000674  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 20156  000676  EE26 F002          	lfsr	2,1538	;volatile
 20157  00067A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 20158                           
 20159                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 20160  00067E  0E00               	movlw	0
 20161  000680  CFE8 F603          	movff	wreg,1539	;volatile
 20162                           
 20163                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 20164  000684  0E00               	movlw	0
 20165  000686  0100               	movlb	0	; () banked
 20166  000688  6FD4               	movwf	(_TransferLength+1)& (0+255),b
 20167  00068A  0E04               	movlw	4
 20168  00068C  6FD3               	movwf	_TransferLength& (0+255),b
 20169                           
 20170                           ; BSR set to: 0
 20171                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 20172  00068E  0E00               	movlw	0
 20173  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20174  000692  0E04               	movlw	4
 20175  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20176  000696  EC96  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20177                           
 20178                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 20179  00069A  0EFD               	movlw	253
 20180  00069C  0100               	movlb	0	; () banked
 20181  00069E  6FE8               	movwf	_MSDCommandState& (0+255),b
 20182                           
 20183                           ;usb_device_msd.c: 839: break;
 20184  0006A0  0012               	return	
 20185  0006A2                     
 20186                           ; BSR set to: 0
 20187                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 20188                           
 20189                           ; BSR set to: 0
 20190  0006A2  0101               	movlb	1	; () banked
 20191  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20192  0006A6  0BF0               	andlw	-16
 20193  0006A8  0905               	iorlw	5
 20194  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20195                           
 20196                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 20197  0006AC  0E20               	movlw	32
 20198  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20199                           
 20200                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 20201  0006B0  0E00               	movlw	0
 20202  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20203                           
 20204                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 20205  0006B4  0E01               	movlw	1
 20206  0006B6  010D               	movlb	13	; () banked
 20207  0006B8  6F8C               	movwf	140,b	;volatile
 20208                           
 20209                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 20210  0006BA  0E00               	movlw	0
 20211  0006BC  6F88               	movwf	136,b	;volatile
 20212  0006BE  0E00               	movlw	0
 20213  0006C0  6F89               	movwf	137,b	;volatile
 20214  0006C2  0E00               	movlw	0
 20215  0006C4  6F8A               	movwf	138,b	;volatile
 20216  0006C6  0E00               	movlw	0
 20217  0006C8  6F8B               	movwf	139,b	;volatile
 20218                           
 20219                           ; BSR set to: 13
 20220                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 20221  0006CA  0100               	movlb	0	; () banked
 20222  0006CC  69E8               	setf	_MSDCommandState& (0+255),b
 20223                           
 20224                           ;usb_device_msd.c: 848: break;
 20225  0006CE  0012               	return	
 20226  0006D0                     
 20227                           ; BSR set to: 0
 20228                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 20229                           
 20230                           ; BSR set to: 0
 20231  0006D0  0E00               	movlw	0
 20232  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 20233  0006D4  0E00               	movlw	0
 20234  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 20235  0006D8  0E00               	movlw	0
 20236  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 20237  0006DC  0E00               	movlw	0
 20238  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 20239  0006E0  ECE1  F025         	call	_MSDCheckForErrorCases	;wreg free
 20240  0006E4  0900               	iorlw	0
 20241  0006E6  A4D8               	btfss	status,2,c
 20242  0006E8  0012               	return	
 20243                           
 20244                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 20245                           
 20246                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 20247  0006EA  0101               	movlb	1	; () banked
 20248  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20249  0006EE  0B0F               	andlw	15
 20250  0006F0  0A06               	xorlw	6
 20251  0006F2  A4D8               	btfss	status,2,c
 20252  0006F4  D007               	goto	l636
 20253                           
 20254                           ; BSR set to: 1
 20255  0006F6  010D               	movlb	13	; () banked
 20256  0006F8  058C               	decf	140,w,b	;volatile
 20257  0006FA  A4D8               	btfss	status,2,c
 20258  0006FC  D003               	goto	l636
 20259                           
 20260                           ; BSR set to: 13
 20261                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 20262  0006FE  0100               	movlb	0	; () banked
 20263  000700  69E8               	setf	_MSDCommandState& (0+255),b
 20264                           
 20265                           ;usb_device_msd.c: 870: }
 20266  000702  0012               	return	
 20267  000704                     l636:
 20268                           
 20269                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 20270                           
 20271                           ; BSR set to: 0
 20272  000704  ECA2  F037         	call	_ResetSenseData	;wreg free
 20273                           
 20274                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 20275  000708  0E00               	movlw	0
 20276  00070A  010D               	movlb	13	; () banked
 20277  00070C  6F88               	movwf	136,b	;volatile
 20278  00070E  0E00               	movlw	0
 20279  000710  6F89               	movwf	137,b	;volatile
 20280  000712  0E00               	movlw	0
 20281  000714  6F8A               	movwf	138,b	;volatile
 20282  000716  0E00               	movlw	0
 20283  000718  6F8B               	movwf	139,b	;volatile
 20284                           
 20285                           ; BSR set to: 13
 20286                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 20287  00071A  0100               	movlb	0	; () banked
 20288  00071C  69E8               	setf	_MSDCommandState& (0+255),b
 20289                           
 20290                           ; BSR set to: 0
 20291                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 20292  00071E  0012               	return	
 20293  000720                     
 20294                           ; BSR set to: 0
 20295                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 20296                           
 20297                           ; BSR set to: 0
 20298                           
 20299                           ; BSR set to: 0
 20300  000720  0E00               	movlw	0
 20301  000722  010D               	movlb	13	; () banked
 20302  000724  6F88               	movwf	136,b	;volatile
 20303  000726  0E00               	movlw	0
 20304  000728  6F89               	movwf	137,b	;volatile
 20305  00072A  0E00               	movlw	0
 20306  00072C  6F8A               	movwf	138,b	;volatile
 20307  00072E  0E00               	movlw	0
 20308  000730  6F8B               	movwf	139,b	;volatile
 20309                           
 20310                           ; BSR set to: 13
 20311                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 20312  000732  0100               	movlb	0	; () banked
 20313  000734  69E8               	setf	_MSDCommandState& (0+255),b
 20314                           
 20315                           ;usb_device_msd.c: 885: break;
 20316  000736  0012               	return	
 20317  000738                     
 20318                           ; BSR set to: 0
 20319                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 20320                           
 20321                           ; BSR set to: 0
 20322  000738  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 20323  00073A  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20324  00073C  B4D8               	btfsc	status,2,c
 20325  00073E  D006               	goto	u9010
 20326                           
 20327                           ; BSR set to: 0
 20328  000740  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 20329  000744  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20330  000748  BEDF               	btfsc	indf2,7,c
 20331  00074A  0012               	return	
 20332  00074C                     u9010:
 20333                           
 20334                           ; BSR set to: 0
 20335                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 20336                           
 20337                           ; BSR set to: 0
 20338  00074C  0101               	movlb	1	; () banked
 20339  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 20340  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20341  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20342  000754  E104               	bnz	u9020
 20343  000756  0E40               	movlw	64
 20344  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 20345  00075A  A0D8               	btfss	status,0,c
 20346  00075C  D009               	goto	l644
 20347  00075E                     u9020:
 20348                           
 20349                           ; BSR set to: 1
 20350                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 20351  00075E  0E40               	movlw	64
 20352  000760  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 20353                           
 20354                           ; BSR set to: 1
 20355                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 20356  000762  0E40               	movlw	64
 20357  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20358  000766  0E00               	movlw	0
 20359  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20360  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20361  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20362                           
 20363                           ;usb_device_msd.c: 900: }
 20364  00076E  D00A               	goto	l645
 20365  000770                     l644:
 20366                           
 20367                           ; BSR set to: 1
 20368                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 20369  000770  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 20370                           
 20371                           ; BSR set to: 1
 20372                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 20373  000774  0E00               	movlw	0
 20374  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 20375  000778  0E00               	movlw	0
 20376  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 20377  00077C  0E00               	movlw	0
 20378  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 20379  000780  0E00               	movlw	0
 20380  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 20381  000784                     l645:
 20382                           
 20383                           ; BSR set to: 1
 20384                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 20385                           
 20386                           ; BSR set to: 1
 20387  000784  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20388  000786  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 20389  000788  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 20390  00078A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 20391  00078C  0100               	movlb	0	; () banked
 20392  00078E  5DD3               	subwf	_TransferLength& (0+255),w,b
 20393  000790  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 20394  000792  59D4               	subwfb	(_TransferLength+1)& (0+255),w,b
 20395  000794  A0D8               	btfss	status,0,c
 20396  000796  D005               	goto	l646
 20397                           
 20398                           ; BSR set to: 0
 20399                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 20400  000798  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20401  00079A  5FD3               	subwf	_TransferLength& (0+255),f,b
 20402  00079C  0E00               	movlw	0
 20403  00079E  5BD4               	subwfb	(_TransferLength+1)& (0+255),f,b
 20404                           
 20405                           ;usb_device_msd.c: 918: }
 20406  0007A0  D01A               	goto	u9050
 20407  0007A2                     l646:
 20408                           
 20409                           ; BSR set to: 0
 20410                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 20411                           
 20412                           ; BSR set to: 0
 20413  0007A2  0E00               	movlw	0
 20414  0007A4  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 20415  0007A6  D013               	goto	l648
 20416  0007A8                     
 20417                           ; BSR set to: 0
 20418                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 20419                           
 20420                           ; BSR set to: 0
 20421  0007A8  51D3               	movf	_TransferLength& (0+255),w,b
 20422  0007AA  11D4               	iorwf	(_TransferLength+1)& (0+255),w,b
 20423  0007AC  B4D8               	btfsc	status,2,c
 20424  0007AE  D004               	goto	l650
 20425                           
 20426                           ; BSR set to: 0
 20427                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 20428  0007B0  07D3               	decf	_TransferLength& (0+255),f,b
 20429  0007B2  A0D8               	btfss	status,0,c
 20430  0007B4  07D4               	decf	(_TransferLength+1)& (0+255),f,b
 20431                           
 20432                           ;usb_device_msd.c: 932: }
 20433  0007B6  D00A               	goto	l651
 20434  0007B8                     l650:
 20435                           
 20436                           ; BSR set to: 0
 20437                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 20438                           
 20439                           ; BSR set to: 0
 20440  0007B8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20441  0007BA  0D01               	mullw	1
 20442  0007BC  0E00               	movlw	0
 20443  0007BE  24F3               	addwf	prodl,w,c
 20444  0007C0  6ED9               	movwf	fsr2l,c
 20445  0007C2  0E06               	movlw	6
 20446  0007C4  20F4               	addwfc	prodh,w,c
 20447  0007C6  6EDA               	movwf	fsr2h,c
 20448  0007C8  0E00               	movlw	0
 20449  0007CA  6EDF               	movwf	indf2,c
 20450  0007CC                     l651:
 20451                           
 20452                           ; BSR set to: 0
 20453                           
 20454                           ; BSR set to: 0
 20455  0007CC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 20456  0007CE                     l648:
 20457                           
 20458                           ; BSR set to: 0
 20459                           
 20460                           ; BSR set to: 0
 20461  0007CE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20462  0007D0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 20463  0007D2  A0D8               	btfss	status,0,c
 20464  0007D4  D7E9               	goto	l649
 20465  0007D6                     u9050:
 20466                           
 20467                           ; BSR set to: 0
 20468                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 20469                           
 20470                           ; BSR set to: 0
 20471                           
 20472                           ; BSR set to: 0
 20473  0007D6  0E01               	movlw	1
 20474  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 20475  0007DA  0E00               	movlw	0
 20476  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 20477  0007DE  0E06               	movlw	6
 20478  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 20479  0007E2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 20480  0007E6  0E02               	movlw	2
 20481  0007E8  ECFE  F023         	call	_USBTransferOnePacket
 20482  0007EC  C001  F0D5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20483  0007F0  C002  F0D6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20484                           
 20485                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 20486  0007F4  0101               	movlb	1	; () banked
 20487  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20488  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20489  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20490  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 20491  0007FE  A4D8               	btfss	status,2,c
 20492  000800  0012               	return	
 20493                           
 20494                           ; BSR set to: 1
 20495                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 20496  000802  0100               	movlb	0	; () banked
 20497  000804  69E8               	setf	_MSDCommandState& (0+255),b
 20498                           
 20499                           ; BSR set to: 0
 20500                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 20501                           
 20502                           ; BSR set to: 0
 20503                           
 20504                           ;usb_device_msd.c: 949: break;
 20505  000806  0012               	return	
 20506  000808                     
 20507                           ; BSR set to: 0
 20508                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 20509                           
 20510                           ; BSR set to: 0
 20511                           
 20512                           ;usb_device_msd.c: 954: default:
 20513                           
 20514                           ; BSR set to: 0
 20515  000808  0E7F               	movlw	127
 20516  00080A  EC7B  F023         	call	_MSDErrorHandler
 20517                           
 20518                           ;usb_device_msd.c: 960: }
 20519                           
 20520                           ;usb_device_msd.c: 959: break;
 20521  00080E  0012               	return	
 20522  000810                     l614:
 20523  000810  0100               	movlb	0	; () banked
 20524  000812  51E8               	movf	_MSDCommandState& (0+255),w,b
 20525                           
 20526                           ; Switch size 1, requested type "space"
 20527                           ; Number of cases is 12, Range of values is 0 to 254
 20528                           ; switch strategies available:
 20529                           ; Name         Instructions Cycles
 20530                           ; simple_byte           37    19 (average)
 20531                           ;	Chosen strategy is simple_byte
 20532  000814  0A00               	xorlw	0	; case 0
 20533  000816  B4D8               	btfsc	status,2,c
 20534  000818  D75B               	goto	l634
 20535  00081A  0A03               	xorlw	3	; case 3
 20536  00081C  B4D8               	btfsc	status,2,c
 20537  00081E  D6DD               	goto	l624
 20538  000820  0A11               	xorlw	17	; case 18
 20539  000822  B4D8               	btfsc	status,2,c
 20540  000824  D64C               	goto	l620
 20541  000826  0A08               	xorlw	8	; case 26
 20542  000828  B4D8               	btfsc	status,2,c
 20543  00082A  D704               	goto	l628
 20544  00082C  0A01               	xorlw	1	; case 27
 20545  00082E  B4D8               	btfsc	status,2,c
 20546  000830  D777               	goto	l638
 20547  000832  0A05               	xorlw	5	; case 30
 20548  000834  B4D8               	btfsc	status,2,c
 20549  000836  D735               	goto	l633
 20550  000838  0A3B               	xorlw	59	; case 37
 20551  00083A  B4D8               	btfsc	status,2,c
 20552  00083C  D671               	goto	l623
 20553  00083E  0A0D               	xorlw	13	; case 40
 20554  000840  B4D8               	btfsc	status,2,c
 20555  000842  D62D               	goto	l615
 20556  000844  0A02               	xorlw	2	; case 42
 20557  000846  B4D8               	btfsc	status,2,c
 20558  000848  D632               	goto	l618
 20559  00084A  0A05               	xorlw	5	; case 47
 20560  00084C  B4D8               	btfsc	status,2,c
 20561  00084E  D768               	goto	l638
 20562  000850  0AD2               	xorlw	210	; case 253
 20563  000852  B4D8               	btfsc	status,2,c
 20564  000854  D771               	goto	l640
 20565  000856  0A03               	xorlw	3	; case 254
 20566  000858  D7D7               	goto	l654
 20567  00085A                     __end_of_MSDProcessCommandMediaPresent:
 20568                           	opt stack 0
 20569                           tosu	equ	0xFFF
 20570                           tosh	equ	0xFFE
 20571                           tosl	equ	0xFFD
 20572                           pclath	equ	0xFFA
 20573                           tblptru	equ	0xFF8
 20574                           tblptrh	equ	0xFF7
 20575                           tblptrl	equ	0xFF6
 20576                           tablat	equ	0xFF5
 20577                           prodh	equ	0xFF4
 20578                           prodl	equ	0xFF3
 20579                           intcon	equ	0xFF2
 20580                           intcon2	equ	0xFF1
 20581                           intcon3	equ	0xFF0
 20582                           indf0	equ	0xFEF
 20583                           postinc0	equ	0xFEE
 20584                           fsr0h	equ	0xFEA
 20585                           fsr0l	equ	0xFE9
 20586                           wreg	equ	0xFE8
 20587                           indf1	equ	0xFE7
 20588                           postdec1	equ	0xFE5
 20589                           plusw1	equ	0xFE3
 20590                           fsr1h	equ	0xFE2
 20591                           fsr1l	equ	0xFE1
 20592                           indf2	equ	0xFDF
 20593                           postinc2	equ	0xFDE
 20594                           postdec2	equ	0xFDD
 20595                           plusw2	equ	0xFDB
 20596                           fsr2h	equ	0xFDA
 20597                           fsr2l	equ	0xFD9
 20598                           status	equ	0xFD8
 20599                           
 20600 ;; *************** function _MSDWriteHandler *****************
 20601 ;; Defined at:
 20602 ;;		line 1188 in file "usb_device_msd.c"
 20603 ;; Parameters:    Size  Location     Type
 20604 ;;		None
 20605 ;; Auto vars:     Size  Location     Type
 20606 ;;		None
 20607 ;; Return value:  Size  Location     Type
 20608 ;;                  1    wreg      unsigned char 
 20609 ;; Registers used:
 20610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20611 ;; Tracked objects:
 20612 ;;		On entry : 0/0
 20613 ;;		On exit  : 0/0
 20614 ;;		Unchanged: 0/0
 20615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20618 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20619 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20620 ;;Total ram usage:        5 bytes
 20621 ;; Hardware stack levels used:    1
 20622 ;; Hardware stack levels required when called:    6
 20623 ;; This function calls:
 20624 ;;		_ExternalFlash_SectorWrite
 20625 ;;		_ExternalFlash_WriteProtectStateGet
 20626 ;;		_MSDCheckForErrorCases
 20627 ;;		_USBStallEndpoint
 20628 ;;		_USBTransferOnePacket
 20629 ;; This function is called by:
 20630 ;;		_MSDProcessCommandMediaPresent
 20631 ;; This function uses a non-reentrant model
 20632 ;;
 20633                           
 20634                           	psect	text93
 20635  001590                     __ptext93:
 20636                           	opt stack 0
 20637  001590                     _MSDWriteHandler:
 20638                           	opt stack 20
 20639                           
 20640                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 20641                           
 20642                           ;incstack = 0
 20643  001590  D146               	goto	l684
 20644  001592                     l685:
 20645                           
 20646                           ; BSR set to: 0
 20647                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 20648  001592  C111  F15D         	movff	_gblCBW+17,_LBA+3
 20649                           
 20650                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 20651  001596  C112  F15C         	movff	_gblCBW+18,_LBA+2
 20652                           
 20653                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 20654  00159A  C113  F15B         	movff	_gblCBW+19,_LBA+1
 20655                           
 20656                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 20657  00159E  C114  F15A         	movff	_gblCBW+20,_LBA
 20658                           
 20659                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 20660  0015A2  C116  F0D4         	movff	_gblCBW+22,_TransferLength+1
 20661                           
 20662                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 20663  0015A6  C117  F0D3         	movff	_gblCBW+23,_TransferLength
 20664                           
 20665                           ; BSR set to: 0
 20666                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 20667  0015AA  51D3               	movf	_TransferLength& (0+255),w,b
 20668  0015AC  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20669  0015AE  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 20670  0015B0  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 20671  0015B2  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20672  0015B4  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20673  0015B6  0E09               	movlw	9
 20674  0015B8                     u7625:
 20675  0015B8  90D8               	bcf	status,0,c
 20676  0015BA  3630               	rlcf	??_MSDWriteHandler,f,c
 20677  0015BC  3631               	rlcf	??_MSDWriteHandler+1,f,c
 20678  0015BE  3632               	rlcf	??_MSDWriteHandler+2,f,c
 20679  0015C0  3633               	rlcf	??_MSDWriteHandler+3,f,c
 20680  0015C2  2EE8               	decfsz	wreg,f,c
 20681  0015C4  D7F9               	goto	u7625
 20682  0015C6  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 20683  0015CA  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 20684  0015CE  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 20685  0015D2  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 20686  0015D6  ECE1  F025         	call	_MSDCheckForErrorCases	;wreg free
 20687  0015DA  0900               	iorlw	0
 20688  0015DC  A4D8               	btfss	status,2,c
 20689  0015DE  D131               	goto	l687
 20690                           
 20691                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 20692                           
 20693                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 20694  0015E0  C1E6  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20695  0015E4  C1E7  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20696  0015E8  D801               	call	u7648
 20697  0015EA  D00A               	goto	u7649
 20698  0015EC                     u7648:
 20699  0015EC  0005               	push	
 20700  0015EE  6EFA               	movwf	pclath,c
 20701  0015F0  0101               	movlb	1	; () banked
 20702  0015F2  51E2               	movf	(_LUN+10)& (0+255),w,b
 20703  0015F4  6EFD               	movwf	tosl,c
 20704  0015F6  51E3               	movf	(_LUN+11)& (0+255),w,b
 20705  0015F8  6EFE               	movwf	tosh,c
 20706  0015FA  6AFF               	clrf	tosu,c
 20707  0015FC  50FA               	movf	pclath,w,c
 20708  0015FE  0012               	return		;indir
 20709  001600                     u7649:
 20710  001600  0900               	iorlw	0
 20711  001602  B4D8               	btfsc	status,2,c
 20712  001604  D016               	goto	l688
 20713                           
 20714                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 20715  001606  0E01               	movlw	1
 20716  001608  010D               	movlb	13	; () banked
 20717  00160A  6F8C               	movwf	140,b	;volatile
 20718                           
 20719                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 20720  00160C  0101               	movlb	1	; () banked
 20721  00160E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20722  001610  0BF0               	andlw	-16
 20723  001612  0907               	iorlw	7
 20724  001614  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20725                           
 20726                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 20727  001616  0E27               	movlw	39
 20728  001618  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20729                           
 20730                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 20731  00161A  0E00               	movlw	0
 20732  00161C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20733                           
 20734                           ; BSR set to: 1
 20735                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 20736  00161E  0E00               	movlw	0
 20737  001620  6E01               	movwf	USBStallEndpoint@dir,c
 20738  001622  0E02               	movlw	2
 20739  001624  ECF1  F021         	call	_USBStallEndpoint
 20740                           
 20741                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 20742  001628  0E00               	movlw	0
 20743  00162A  0100               	movlb	0	; () banked
 20744  00162C  6FE6               	movwf	_MSDWriteState& (0+255),b
 20745                           
 20746                           ; BSR set to: 0
 20747                           ;usb_device_msd.c: 1228: return MSDWriteState;
 20748  00162E  51E6               	movf	_MSDWriteState& (0+255),w,b
 20749                           
 20750                           ; BSR set to: 0
 20751  001630  0012               	return	
 20752  001632                     l688:
 20753                           
 20754                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 20755                           
 20756                           ; BSR set to: 0
 20757  001632  0E01               	movlw	1
 20758  001634  0100               	movlb	0	; () banked
 20759  001636  6FE9               	movwf	_MSD_State& (0+255),b
 20760  001638                     
 20761                           ; BSR set to: 0
 20762                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 20763                           
 20764                           ; BSR set to: 0
 20765  001638  51D3               	movf	_TransferLength& (0+255),w,b
 20766  00163A  11D4               	iorwf	(_TransferLength+1)& (0+255),w,b
 20767  00163C  A4D8               	btfss	status,2,c
 20768  00163E  D002               	goto	l691
 20769                           
 20770                           ; BSR set to: 0
 20771                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 20772  001640  0E00               	movlw	0
 20773  001642  D056               	goto	L20
 20774  001644                     l691:
 20775                           
 20776                           ; BSR set to: 0
 20777                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 20778                           
 20779                           ; BSR set to: 0
 20780  001644  0E03               	movlw	3
 20781  001646  6FE6               	movwf	_MSDWriteState& (0+255),b
 20782                           
 20783                           ; BSR set to: 0
 20784                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 20785  001648  0E00               	movlw	0
 20786  00164A  0101               	movlb	1	; () banked
 20787  00164C  6F82               	movwf	_ptrNextData& (0+255),b
 20788  00164E  0E06               	movlw	6
 20789  001650  6F83               	movwf	(_ptrNextData+1)& (0+255),b
 20790                           
 20791                           ; BSR set to: 1
 20792                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 20793  001652  0E00               	movlw	0
 20794  001654  010D               	movlb	13	; () banked
 20795  001656  6F88               	movwf	136,b	;volatile
 20796  001658  0E02               	movlw	2
 20797  00165A  6F89               	movwf	137,b	;volatile
 20798  00165C  0E00               	movlw	0
 20799  00165E  6F8A               	movwf	138,b	;volatile
 20800  001660  0E00               	movlw	0
 20801  001662  6F8B               	movwf	139,b	;volatile
 20802  001664                     l692:
 20803                           
 20804                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 20805  001664  010D               	movlb	13	; () banked
 20806  001666  5188               	movf	136,w,b	;volatile
 20807  001668  1189               	iorwf	137,w,b	;volatile
 20808  00166A  118A               	iorwf	138,w,b	;volatile
 20809  00166C  118B               	iorwf	139,w,b	;volatile
 20810  00166E  B4D8               	btfsc	status,2,c
 20811  001670  D01E               	goto	l693
 20812                           
 20813                           ; BSR set to: 13
 20814                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 20815  001672  0100               	movlb	0	; () banked
 20816  001674  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 20817  001676  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20818  001678  B4D8               	btfsc	status,2,c
 20819  00167A  D006               	goto	l694
 20820                           
 20821                           ; BSR set to: 0
 20822  00167C  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20823  001680  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20824  001684  BEDF               	btfsc	indf2,7,c
 20825  001686  D0DD               	goto	l687
 20826  001688                     l694:
 20827                           
 20828                           ; BSR set to: 0
 20829                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 20830                           
 20831                           ; BSR set to: 0
 20832  001688  0E00               	movlw	0
 20833  00168A  6E01               	movwf	USBTransferOnePacket@dir,c
 20834  00168C  C182  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 20835  001690  C183  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 20836  001694  0E40               	movlw	64
 20837  001696  6E04               	movwf	USBTransferOnePacket@len,c
 20838  001698  0E02               	movlw	2
 20839  00169A  ECFE  F023         	call	_USBTransferOnePacket
 20840  00169E  C001  F0D7         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20841  0016A2  C002  F0D8         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20842                           
 20843                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 20844  0016A6  0E04               	movlw	4
 20845  0016A8  0100               	movlb	0	; () banked
 20846  0016AA  6FE6               	movwf	_MSDWriteState& (0+255),b
 20847                           
 20848                           ;usb_device_msd.c: 1260: }
 20849  0016AC  D023               	goto	l695
 20850  0016AE                     l693:
 20851                           
 20852                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 20853                           
 20854                           ; BSR set to: 0
 20855  0016AE  C1E6  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20856  0016B2  C1E7  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20857  0016B6  D801               	call	u7708
 20858  0016B8  D00A               	goto	u7709
 20859  0016BA                     u7708:
 20860  0016BA  0005               	push	
 20861  0016BC  6EFA               	movwf	pclath,c
 20862  0016BE  0101               	movlb	1	; () banked
 20863  0016C0  51E2               	movf	(_LUN+10)& (0+255),w,b
 20864  0016C2  6EFD               	movwf	tosl,c
 20865  0016C4  51E3               	movf	(_LUN+11)& (0+255),w,b
 20866  0016C6  6EFE               	movwf	tosh,c
 20867  0016C8  6AFF               	clrf	tosu,c
 20868  0016CA  50FA               	movf	pclath,w,c
 20869  0016CC  0012               	return		;indir
 20870  0016CE                     u7709:
 20871  0016CE  0900               	iorlw	0
 20872  0016D0  B4D8               	btfsc	status,2,c
 20873  0016D2  D00C               	goto	l696
 20874                           
 20875                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 20876  0016D4  0E01               	movlw	1
 20877  0016D6  010D               	movlb	13	; () banked
 20878  0016D8  6F8C               	movwf	140,b	;volatile
 20879                           
 20880                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 20881  0016DA  0101               	movlb	1	; () banked
 20882  0016DC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20883  0016DE  0BF0               	andlw	-16
 20884  0016E0  0902               	iorlw	2
 20885  0016E2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20886                           
 20887                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 20888  0016E4  0E27               	movlw	39
 20889  0016E6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20890                           
 20891                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 20892  0016E8  0E00               	movlw	0
 20893  0016EA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20894  0016EC                     l696:
 20895                           
 20896                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 20897  0016EC  0E02               	movlw	2
 20898  0016EE  D095               	goto	L22
 20899  0016F0                     L20:
 20900  0016F0  6FE6               	movwf	_MSDWriteState& (0+255),b
 20901                           
 20902                           ;usb_device_msd.c: 1280: break;
 20903  0016F2  D0A7               	goto	l687
 20904  0016F4                     l695:
 20905                           
 20906                           ; BSR set to: 0
 20907                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 20908                           
 20909                           ; BSR set to: 0
 20910                           
 20911                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 20912                           
 20913                           ; BSR set to: 0
 20914  0016F4  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 20915  0016F6  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20916  0016F8  B4D8               	btfsc	status,2,c
 20917  0016FA  D006               	goto	l698
 20918                           
 20919                           ; BSR set to: 0
 20920  0016FC  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20921  001700  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20922  001704  BEDF               	btfsc	indf2,7,c
 20923  001706  D09D               	goto	l687
 20924  001708                     l698:
 20925                           
 20926                           ; BSR set to: 0
 20927                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 20928                           
 20929                           ; BSR set to: 0
 20930  001708  EE20 F001          	lfsr	2,1
 20931  00170C  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 20932  00170E  26D9               	addwf	fsr2l,f,c
 20933  001710  51D8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 20934  001712  22DA               	addwfc	fsr2h,f,c
 20935  001714  50DF               	movf	indf2,w,c
 20936  001716  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20937  001718  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 20938  00171C  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20939  00171E  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20940  001720  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 20941  001722  5031               	movf	??_MSDWriteHandler+1,w,c
 20942  001724  0101               	movlb	1	; () banked
 20943  001726  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20944  001728  5032               	movf	??_MSDWriteHandler+2,w,c
 20945  00172A  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20946  00172C  5033               	movf	??_MSDWriteHandler+3,w,c
 20947  00172E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20948  001730  5034               	movf	??_MSDWriteHandler+4,w,c
 20949  001732  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20950                           
 20951                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 20952  001734  0100               	movlb	0	; () banked
 20953  001736  EE20 F001          	lfsr	2,1
 20954  00173A  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 20955  00173C  26D9               	addwf	fsr2l,f,c
 20956  00173E  51D8               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 20957  001740  22DA               	addwfc	fsr2h,f,c
 20958  001742  50DF               	movf	indf2,w,c
 20959  001744  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20960  001746  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 20961  00174A  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20962  00174C  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20963  00174E  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 20964  001750  5031               	movf	??_MSDWriteHandler+1,w,c
 20965  001752  010D               	movlb	13	; () banked
 20966  001754  5F88               	subwf	136,f,b	;volatile
 20967  001756  5032               	movf	??_MSDWriteHandler+2,w,c
 20968  001758  5B89               	subwfb	137,f,b	;volatile
 20969  00175A  5033               	movf	??_MSDWriteHandler+3,w,c
 20970  00175C  5B8A               	subwfb	138,f,b	;volatile
 20971  00175E  5034               	movf	??_MSDWriteHandler+4,w,c
 20972  001760  5B8B               	subwfb	139,f,b	;volatile
 20973                           
 20974                           ; BSR set to: 13
 20975                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 20976  001762  0E40               	movlw	64
 20977  001764  0101               	movlb	1	; () banked
 20978  001766  2782               	addwf	_ptrNextData& (0+255),f,b
 20979  001768  0E00               	movlw	0
 20980  00176A  2383               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20981                           
 20982                           ; BSR set to: 1
 20983                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 20984  00176C  0E03               	movlw	3
 20985  00176E  D055               	goto	L22
 20986  001770                     
 20987                           ; BSR set to: 0
 20988                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 20989                           
 20990                           ; BSR set to: 0
 20991  001770  010D               	movlb	13	; () banked
 20992  001772  518C               	movf	140,w,b	;volatile
 20993  001774  A4D8               	btfss	status,2,c
 20994  001776  D03B               	goto	l703
 20995                           
 20996                           ; BSR set to: 13
 20997                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 20998  001778  C1E6  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 20999  00177C  C1E7  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 21000  001780  C15A  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 21001  001784  C15B  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 21002  001788  C15C  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 21003  00178C  C15D  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 21004  001790  0E00               	movlw	0
 21005  001792  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 21006  001794  0E06               	movlw	6
 21007  001796  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 21008  001798  0101               	movlb	1	; () banked
 21009  00179A  515A               	movf	_LBA& (0+255),w,b
 21010  00179C  115B               	iorwf	(_LBA+1)& (0+255),w,b
 21011  00179E  115C               	iorwf	(_LBA+2)& (0+255),w,b
 21012  0017A0  115D               	iorwf	(_LBA+3)& (0+255),w,b
 21013  0017A2  A4D8               	btfss	status,2,c
 21014  0017A4  D002               	goto	u7750
 21015  0017A6  0E01               	movlw	1
 21016  0017A8  D001               	goto	u7760
 21017  0017AA                     u7750:
 21018  0017AA  0E00               	movlw	0
 21019  0017AC                     u7760:
 21020  0017AC  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 21021  0017AE  D801               	call	u7778
 21022  0017B0  D009               	goto	u7779
 21023  0017B2                     u7778:
 21024  0017B2  0005               	push	
 21025  0017B4  6EFA               	movwf	pclath,c
 21026  0017B6  51E4               	movf	(_LUN+12)& (0+255),w,b
 21027  0017B8  6EFD               	movwf	tosl,c
 21028  0017BA  51E5               	movf	(_LUN+13)& (0+255),w,b
 21029  0017BC  6EFE               	movwf	tosh,c
 21030  0017BE  6AFF               	clrf	tosu,c
 21031  0017C0  50FA               	movf	pclath,w,c
 21032  0017C2  0012               	return		;indir
 21033  0017C4                     u7779:
 21034  0017C4  06E8               	decf	wreg,f,c
 21035  0017C6  B4D8               	btfsc	status,2,c
 21036  0017C8  D012               	goto	l703
 21037                           
 21038                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 21039  0017CA  0E64               	movlw	100
 21040  0017CC  0100               	movlb	0	; () banked
 21041  0017CE  61E5               	cpfslt	_MSDRetryAttempt& (0+255),b
 21042  0017D0  D002               	goto	l702
 21043                           
 21044                           ; BSR set to: 0
 21045                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 21046  0017D2  2BE5               	incf	_MSDRetryAttempt& (0+255),f,b
 21047                           
 21048                           ;usb_device_msd.c: 1314: break;
 21049  0017D4  D036               	goto	l687
 21050  0017D6                     l702:
 21051                           
 21052                           ; BSR set to: 0
 21053                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 21054                           
 21055                           ; BSR set to: 0
 21056  0017D6  0E01               	movlw	1
 21057  0017D8  010D               	movlb	13	; () banked
 21058  0017DA  6F8C               	movwf	140,b	;volatile
 21059                           
 21060                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 21061  0017DC  0101               	movlb	1	; () banked
 21062  0017DE  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21063  0017E0  0BF0               	andlw	-16
 21064  0017E2  0903               	iorlw	3
 21065  0017E4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21066                           
 21067                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 21068  0017E6  0E00               	movlw	0
 21069  0017E8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21070                           
 21071                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 21072  0017EA  0E00               	movlw	0
 21073  0017EC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21074  0017EE                     l703:
 21075                           
 21076                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 21077                           
 21078                           ; BSR set to: 1
 21079                           
 21080                           ; BSR set to: 1
 21081                           
 21082                           ; BSR set to: 1
 21083  0017EE  0E01               	movlw	1
 21084  0017F0  0101               	movlb	1	; () banked
 21085  0017F2  275A               	addwf	_LBA& (0+255),f,b
 21086  0017F4  0E00               	movlw	0
 21087  0017F6  235B               	addwfc	(_LBA+1)& (0+255),f,b
 21088  0017F8  235C               	addwfc	(_LBA+2)& (0+255),f,b
 21089  0017FA  235D               	addwfc	(_LBA+3)& (0+255),f,b
 21090                           
 21091                           ; BSR set to: 1
 21092                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 21093  0017FC  0100               	movlb	0	; () banked
 21094  0017FE  07D3               	decf	_TransferLength& (0+255),f,b
 21095  001800  A0D8               	btfss	status,0,c
 21096  001802  07D4               	decf	(_TransferLength+1)& (0+255),f,b
 21097                           
 21098                           ; BSR set to: 0
 21099                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 21100  001804  0E01               	movlw	1
 21101  001806  D774               	goto	L20
 21102  001808                     
 21103                           ; BSR set to: 0
 21104                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 21105                           
 21106                           ; BSR set to: 0
 21107  001808  0E02               	movlw	2
 21108  00180A  010D               	movlb	13	; () banked
 21109  00180C  6F8C               	movwf	140,b	;volatile
 21110                           
 21111                           ; BSR set to: 13
 21112                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 21113  00180E  0E00               	movlw	0
 21114  001810  6E01               	movwf	USBStallEndpoint@dir,c
 21115  001812  0E02               	movlw	2
 21116  001814  ECF1  F021         	call	_USBStallEndpoint
 21117                           
 21118                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 21119  001818  0E00               	movlw	0
 21120  00181A                     L22:
 21121  00181A  0100               	movlb	0	; () banked
 21122  00181C  D769               	goto	L20
 21123  00181E                     l684:
 21124                           
 21125                           ; BSR set to: 0
 21126  00181E  0100               	movlb	0	; () banked
 21127  001820  51E6               	movf	_MSDWriteState& (0+255),w,b
 21128                           
 21129                           ; Switch size 1, requested type "space"
 21130                           ; Number of cases is 5, Range of values is 0 to 4
 21131                           ; switch strategies available:
 21132                           ; Name         Instructions Cycles
 21133                           ; simple_byte           16     9 (average)
 21134                           ;	Chosen strategy is simple_byte
 21135  001822  0A00               	xorlw	0	; case 0
 21136  001824  B4D8               	btfsc	status,2,c
 21137  001826  D6B5               	goto	l685
 21138  001828  0A01               	xorlw	1	; case 1
 21139  00182A  B4D8               	btfsc	status,2,c
 21140  00182C  D705               	goto	l690
 21141  00182E  0A03               	xorlw	3	; case 2
 21142  001830  B4D8               	btfsc	status,2,c
 21143  001832  D79E               	goto	l699
 21144  001834  0A01               	xorlw	1	; case 3
 21145  001836  B4D8               	btfsc	status,2,c
 21146  001838  D715               	goto	l692
 21147  00183A  0A07               	xorlw	7	; case 4
 21148  00183C  B4D8               	btfsc	status,2,c
 21149  00183E  D75A               	goto	l695
 21150  001840  D7E3               	goto	l704
 21151  001842                     l687:
 21152                           
 21153                           ;usb_device_msd.c: 1347: return MSDWriteState;
 21154                           
 21155                           ; BSR set to: 0
 21156  001842  0100               	movlb	0	; () banked
 21157  001844  51E6               	movf	_MSDWriteState& (0+255),w,b
 21158  001846  0012               	return	
 21159  001848                     __end_of_MSDWriteHandler:
 21160                           	opt stack 0
 21161                           tosu	equ	0xFFF
 21162                           tosh	equ	0xFFE
 21163                           tosl	equ	0xFFD
 21164                           pclath	equ	0xFFA
 21165                           tblptru	equ	0xFF8
 21166                           tblptrh	equ	0xFF7
 21167                           tblptrl	equ	0xFF6
 21168                           tablat	equ	0xFF5
 21169                           prodh	equ	0xFF4
 21170                           prodl	equ	0xFF3
 21171                           intcon	equ	0xFF2
 21172                           intcon2	equ	0xFF1
 21173                           intcon3	equ	0xFF0
 21174                           indf0	equ	0xFEF
 21175                           postinc0	equ	0xFEE
 21176                           fsr0h	equ	0xFEA
 21177                           fsr0l	equ	0xFE9
 21178                           wreg	equ	0xFE8
 21179                           indf1	equ	0xFE7
 21180                           postdec1	equ	0xFE5
 21181                           plusw1	equ	0xFE3
 21182                           fsr1h	equ	0xFE2
 21183                           fsr1l	equ	0xFE1
 21184                           indf2	equ	0xFDF
 21185                           postinc2	equ	0xFDE
 21186                           postdec2	equ	0xFDD
 21187                           plusw2	equ	0xFDB
 21188                           fsr2h	equ	0xFDA
 21189                           fsr2l	equ	0xFD9
 21190                           status	equ	0xFD8
 21191                           
 21192 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 21193 ;; Defined at:
 21194 ;;		line 34 in file "external_flash.c"
 21195 ;; Parameters:    Size  Location     Type
 21196 ;;  config          2    0[COMRAM] PTR void 
 21197 ;;		 -> NULL(0), 
 21198 ;; Auto vars:     Size  Location     Type
 21199 ;;		None
 21200 ;; Return value:  Size  Location     Type
 21201 ;;                  1    wreg      unsigned char 
 21202 ;; Registers used:
 21203 ;;		wreg
 21204 ;; Tracked objects:
 21205 ;;		On entry : 0/0
 21206 ;;		On exit  : 0/0
 21207 ;;		Unchanged: 0/0
 21208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21212 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21213 ;;Total ram usage:        2 bytes
 21214 ;; Hardware stack levels used:    1
 21215 ;; This function calls:
 21216 ;;		Nothing
 21217 ;; This function is called by:
 21218 ;;		_MSDWriteHandler
 21219 ;;		_MSDProcessCommandMediaPresent
 21220 ;; This function uses a non-reentrant model
 21221 ;;
 21222                           
 21223                           	psect	text94
 21224  00820E                     __ptext94:
 21225                           	opt stack 0
 21226  00820E                     _ExternalFlash_WriteProtectStateGet:
 21227                           	opt stack 25
 21228                           
 21229                           ;external_flash.c: 37: return 0;
 21230                           
 21231                           ; BSR set to: 0
 21232                           ;incstack = 0
 21233  00820E  0E00               	movlw	0
 21234  008210  0012               	return	
 21235  008212                     __end_of_ExternalFlash_WriteProtectStateGet:
 21236                           	opt stack 0
 21237                           tosu	equ	0xFFF
 21238                           tosh	equ	0xFFE
 21239                           tosl	equ	0xFFD
 21240                           pclath	equ	0xFFA
 21241                           tblptru	equ	0xFF8
 21242                           tblptrh	equ	0xFF7
 21243                           tblptrl	equ	0xFF6
 21244                           tablat	equ	0xFF5
 21245                           prodh	equ	0xFF4
 21246                           prodl	equ	0xFF3
 21247                           intcon	equ	0xFF2
 21248                           intcon2	equ	0xFF1
 21249                           intcon3	equ	0xFF0
 21250                           indf0	equ	0xFEF
 21251                           postinc0	equ	0xFEE
 21252                           fsr0h	equ	0xFEA
 21253                           fsr0l	equ	0xFE9
 21254                           wreg	equ	0xFE8
 21255                           indf1	equ	0xFE7
 21256                           postdec1	equ	0xFE5
 21257                           plusw1	equ	0xFE3
 21258                           fsr1h	equ	0xFE2
 21259                           fsr1l	equ	0xFE1
 21260                           indf2	equ	0xFDF
 21261                           postinc2	equ	0xFDE
 21262                           postdec2	equ	0xFDD
 21263                           plusw2	equ	0xFDB
 21264                           fsr2h	equ	0xFDA
 21265                           fsr2l	equ	0xFD9
 21266                           status	equ	0xFD8
 21267                           
 21268 ;; *************** function _ExternalFlash_SectorWrite *****************
 21269 ;; Defined at:
 21270 ;;		line 56 in file "external_flash.c"
 21271 ;; Parameters:    Size  Location     Type
 21272 ;;  config          2   36[COMRAM] PTR void 
 21273 ;;		 -> NULL(0), 
 21274 ;;  sector_addr     4   38[COMRAM] unsigned long 
 21275 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 21276 ;;		 -> msd_buffer(512), 
 21277 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 21278 ;; Auto vars:     Size  Location     Type
 21279 ;;  page            2   45[COMRAM] unsigned int 
 21280 ;; Return value:  Size  Location     Type
 21281 ;;                  1    wreg      unsigned char 
 21282 ;; Registers used:
 21283 ;;		wreg, status,2, status,0, cstack
 21284 ;; Tracked objects:
 21285 ;;		On entry : 0/0
 21286 ;;		On exit  : 0/0
 21287 ;;		Unchanged: 0/0
 21288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21289 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21292 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21293 ;;Total ram usage:       11 bytes
 21294 ;; Hardware stack levels used:    1
 21295 ;; Hardware stack levels required when called:    5
 21296 ;; This function calls:
 21297 ;;		_flash_page_write
 21298 ;; This function is called by:
 21299 ;;		_MSDWriteHandler
 21300 ;; This function uses a non-reentrant model
 21301 ;;
 21302                           
 21303                           	psect	text95
 21304  007B80                     __ptext95:
 21305                           	opt stack 0
 21306  007B80                     _ExternalFlash_SectorWrite:
 21307                           	opt stack 20
 21308                           
 21309                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 21310                           
 21311                           ;incstack = 0
 21312  007B80  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 21313  007B84  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 21314                           
 21315                           ;external_flash.c: 61: if(sector_addr >= 8192)
 21316  007B88  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 21317  007B8A  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 21318  007B8C  E104               	bnz	u7300
 21319  007B8E  0E20               	movlw	32
 21320  007B90  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 21321  007B92  A0D8               	btfss	status,0,c
 21322  007B94  D002               	goto	l1880
 21323  007B96                     u7300:
 21324                           
 21325                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 21326  007B96  0E00               	movlw	0
 21327  007B98  0012               	return	
 21328  007B9A                     l1880:
 21329                           
 21330                           ;external_flash.c: 64: };external_flash.c: 67: flash_page_write(page, buffer);
 21331  007B9A  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 21332  007B9E  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 21333  007BA2  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 21334  007BA6  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 21335  007BAA  EC1D  F03A         	call	_flash_page_write	;wreg free
 21336                           
 21337                           ;external_flash.c: 69: return 1;
 21338  007BAE  0E01               	movlw	1
 21339  007BB0  0012               	return	
 21340  007BB2                     __end_of_ExternalFlash_SectorWrite:
 21341                           	opt stack 0
 21342                           tosu	equ	0xFFF
 21343                           tosh	equ	0xFFE
 21344                           tosl	equ	0xFFD
 21345                           pclath	equ	0xFFA
 21346                           tblptru	equ	0xFF8
 21347                           tblptrh	equ	0xFF7
 21348                           tblptrl	equ	0xFF6
 21349                           tablat	equ	0xFF5
 21350                           prodh	equ	0xFF4
 21351                           prodl	equ	0xFF3
 21352                           intcon	equ	0xFF2
 21353                           intcon2	equ	0xFF1
 21354                           intcon3	equ	0xFF0
 21355                           indf0	equ	0xFEF
 21356                           postinc0	equ	0xFEE
 21357                           fsr0h	equ	0xFEA
 21358                           fsr0l	equ	0xFE9
 21359                           wreg	equ	0xFE8
 21360                           indf1	equ	0xFE7
 21361                           postdec1	equ	0xFE5
 21362                           plusw1	equ	0xFE3
 21363                           fsr1h	equ	0xFE2
 21364                           fsr1l	equ	0xFE1
 21365                           indf2	equ	0xFDF
 21366                           postinc2	equ	0xFDE
 21367                           postdec2	equ	0xFDD
 21368                           plusw2	equ	0xFDB
 21369                           fsr2h	equ	0xFDA
 21370                           fsr2l	equ	0xFD9
 21371                           status	equ	0xFD8
 21372                           
 21373 ;; *************** function _flash_page_write *****************
 21374 ;; Defined at:
 21375 ;;		line 433 in file "flash.c"
 21376 ;; Parameters:    Size  Location     Type
 21377 ;;  page            2   31[COMRAM] unsigned int 
 21378 ;;  data            2   33[COMRAM] PTR unsigned char 
 21379 ;;		 -> buffer(512), msd_buffer(512), 
 21380 ;; Auto vars:     Size  Location     Type
 21381 ;;  match           1   35[COMRAM] enum E6894
 21382 ;; Return value:  Size  Location     Type
 21383 ;;                  1    wreg      void 
 21384 ;; Registers used:
 21385 ;;		wreg, status,2, status,0, cstack
 21386 ;; Tracked objects:
 21387 ;;		On entry : 0/0
 21388 ;;		On exit  : 0/0
 21389 ;;		Unchanged: 0/0
 21390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21394 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21395 ;;Total ram usage:        5 bytes
 21396 ;; Hardware stack levels used:    1
 21397 ;; Hardware stack levels required when called:    4
 21398 ;; This function calls:
 21399 ;;		__flash_compare_page_to_buffer
 21400 ;;		__flash_write_page_from_buffer
 21401 ;;		__flash_write_to_buffer
 21402 ;;		_spi_set_configuration
 21403 ;; This function is called by:
 21404 ;;		_ExternalFlash_SectorWrite
 21405 ;;		_fat_format
 21406 ;; This function uses a non-reentrant model
 21407 ;;
 21408                           
 21409                           	psect	text96
 21410  00743A                     __ptext96:
 21411                           	opt stack 0
 21412  00743A                     _flash_page_write:
 21413                           	opt stack 23
 21414                           
 21415                           ;flash.c: 435: flashMatchResult_t match;;flash.c: 438: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 21416                           
 21417                           ;incstack = 0
 21418  00743A  0E00               	movlw	0
 21419  00743C  EC6C  F021         	call	_spi_set_configuration
 21420                           
 21421                           ;flash.c: 441: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 21422  007440  0E00               	movlw	0
 21423  007442  6E15               	movwf	__flash_write_to_buffer@start+1,c
 21424  007444  0E00               	movlw	0
 21425  007446  6E14               	movwf	__flash_write_to_buffer@start,c
 21426  007448  C022  F016         	movff	flash_page_write@data,__flash_write_to_buffer@data
 21427  00744C  C023  F017         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 21428  007450  0E02               	movlw	2
 21429  007452  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 21430  007454  0E00               	movlw	0
 21431  007456  6E18               	movwf	__flash_write_to_buffer@data_length,c
 21432  007458  0E00               	movlw	0
 21433  00745A  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 21434  00745C  EC6D  F03B         	call	__flash_write_to_buffer	;wreg free
 21435                           
 21436                           ;flash.c: 444: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 21437  007460  C020  F014         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 21438  007464  C021  F015         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 21439  007468  0E00               	movlw	0
 21440  00746A  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 21441  00746C  ECFA  F033         	call	__flash_compare_page_to_buffer	;wreg free
 21442  007470  6E24               	movwf	flash_page_write@match,c
 21443                           
 21444                           ;flash.c: 447: if(match==DATA_DOES_NOT_MATCH)
 21445  007472  0424               	decf	flash_page_write@match,w,c
 21446  007474  A4D8               	btfss	status,2,c
 21447  007476  D008               	goto	l1837
 21448                           
 21449                           ;flash.c: 448: {;flash.c: 449: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 21450  007478  C020  F014         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 21451  00747C  C021  F015         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 21452  007480  0E00               	movlw	0
 21453  007482  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 21454  007484  EC43  F039         	call	__flash_write_page_from_buffer	;wreg free
 21455  007488                     l1837:
 21456                           
 21457                           ;flash.c: 450: };flash.c: 453: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 21458  007488  0E01               	movlw	1
 21459  00748A  EC6C  F021         	call	_spi_set_configuration
 21460  00748E  0012               	return		;funcret
 21461  007490                     __end_of_flash_page_write:
 21462                           	opt stack 0
 21463                           tosu	equ	0xFFF
 21464                           tosh	equ	0xFFE
 21465                           tosl	equ	0xFFD
 21466                           pclath	equ	0xFFA
 21467                           tblptru	equ	0xFF8
 21468                           tblptrh	equ	0xFF7
 21469                           tblptrl	equ	0xFF6
 21470                           tablat	equ	0xFF5
 21471                           prodh	equ	0xFF4
 21472                           prodl	equ	0xFF3
 21473                           intcon	equ	0xFF2
 21474                           intcon2	equ	0xFF1
 21475                           intcon3	equ	0xFF0
 21476                           indf0	equ	0xFEF
 21477                           postinc0	equ	0xFEE
 21478                           fsr0h	equ	0xFEA
 21479                           fsr0l	equ	0xFE9
 21480                           wreg	equ	0xFE8
 21481                           indf1	equ	0xFE7
 21482                           postdec1	equ	0xFE5
 21483                           plusw1	equ	0xFE3
 21484                           fsr1h	equ	0xFE2
 21485                           fsr1l	equ	0xFE1
 21486                           indf2	equ	0xFDF
 21487                           postinc2	equ	0xFDE
 21488                           postdec2	equ	0xFDD
 21489                           plusw2	equ	0xFDB
 21490                           fsr2h	equ	0xFDA
 21491                           fsr2l	equ	0xFD9
 21492                           status	equ	0xFD8
 21493                           
 21494 ;; *************** function _MSDReadHandler *****************
 21495 ;; Defined at:
 21496 ;;		line 1038 in file "usb_device_msd.c"
 21497 ;; Parameters:    Size  Location     Type
 21498 ;;		None
 21499 ;; Auto vars:     Size  Location     Type
 21500 ;;		None
 21501 ;; Return value:  Size  Location     Type
 21502 ;;                  1    wreg      unsigned char 
 21503 ;; Registers used:
 21504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21505 ;; Tracked objects:
 21506 ;;		On entry : 0/0
 21507 ;;		On exit  : 0/0
 21508 ;;		Unchanged: 0/0
 21509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21512 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21513 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21514 ;;Total ram usage:        4 bytes
 21515 ;; Hardware stack levels used:    1
 21516 ;; Hardware stack levels required when called:    6
 21517 ;; This function calls:
 21518 ;;		_ExternalFlash_SectorRead
 21519 ;;		_MSDCheckForErrorCases
 21520 ;;		_USBStallEndpoint
 21521 ;;		_USBTransferOnePacket
 21522 ;; This function is called by:
 21523 ;;		_MSDProcessCommandMediaPresent
 21524 ;; This function uses a non-reentrant model
 21525 ;;
 21526                           
 21527                           	psect	text97
 21528  002DAE                     __ptext97:
 21529                           	opt stack 0
 21530  002DAE                     _MSDReadHandler:
 21531                           	opt stack 20
 21532                           
 21533                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 21534                           
 21535                           ;incstack = 0
 21536  002DAE  D0D7               	goto	l665
 21537  002DB0                     l666:
 21538                           
 21539                           ; BSR set to: 0
 21540                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 21541  002DB0  C111  F15D         	movff	_gblCBW+17,_LBA+3
 21542                           
 21543                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 21544  002DB4  C112  F15C         	movff	_gblCBW+18,_LBA+2
 21545                           
 21546                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 21547  002DB8  C113  F15B         	movff	_gblCBW+19,_LBA+1
 21548                           
 21549                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 21550  002DBC  C114  F15A         	movff	_gblCBW+20,_LBA
 21551                           
 21552                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 21553  002DC0  C116  F0D4         	movff	_gblCBW+22,_TransferLength+1
 21554                           
 21555                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 21556  002DC4  C117  F0D3         	movff	_gblCBW+23,_TransferLength
 21557                           
 21558                           ; BSR set to: 0
 21559                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 21560  002DC8  51D3               	movf	_TransferLength& (0+255),w,b
 21561  002DCA  6E36               	movwf	??_MSDReadHandler& (0+255),c
 21562  002DCC  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 21563  002DCE  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 21564  002DD0  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 21565  002DD2  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 21566  002DD4  0E09               	movlw	9
 21567  002DD6                     u7515:
 21568  002DD6  90D8               	bcf	status,0,c
 21569  002DD8  3636               	rlcf	??_MSDReadHandler,f,c
 21570  002DDA  3637               	rlcf	??_MSDReadHandler+1,f,c
 21571  002DDC  3638               	rlcf	??_MSDReadHandler+2,f,c
 21572  002DDE  3639               	rlcf	??_MSDReadHandler+3,f,c
 21573  002DE0  2EE8               	decfsz	wreg,f,c
 21574  002DE2  D7F9               	goto	u7515
 21575  002DE4  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 21576  002DE8  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 21577  002DEC  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 21578  002DF0  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 21579  002DF4  ECE1  F025         	call	_MSDCheckForErrorCases	;wreg free
 21580  002DF8  0900               	iorlw	0
 21581  002DFA  A4D8               	btfss	status,2,c
 21582  002DFC  D0C2               	goto	l668
 21583                           
 21584                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 21585                           
 21586                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 21587  002DFE  0E01               	movlw	1
 21588  002E00  0100               	movlb	0	; () banked
 21589  002E02  6FE7               	movwf	_MSDReadState& (0+255),b
 21590  002E04                     
 21591                           ; BSR set to: 0
 21592                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 21593                           
 21594                           ; BSR set to: 0
 21595  002E04  51D3               	movf	_TransferLength& (0+255),w,b
 21596  002E06  11D4               	iorwf	(_TransferLength+1)& (0+255),w,b
 21597  002E08  A4D8               	btfss	status,2,c
 21598  002E0A  D002               	goto	l670
 21599                           
 21600                           ; BSR set to: 0
 21601                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 21602  002E0C  0E00               	movlw	0
 21603  002E0E  D046               	goto	L23
 21604  002E10                     l670:
 21605                           
 21606                           ; BSR set to: 0
 21607                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 21608                           
 21609                           ; BSR set to: 0
 21610  002E10  07D3               	decf	_TransferLength& (0+255),f,b
 21611  002E12  A0D8               	btfss	status,0,c
 21612  002E14  07D4               	decf	(_TransferLength+1)& (0+255),f,b
 21613                           
 21614                           ; BSR set to: 0
 21615                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 21616  002E16  0E02               	movlw	2
 21617  002E18  6FE7               	movwf	_MSDReadState& (0+255),b
 21618  002E1A                     
 21619                           ; BSR set to: 0
 21620                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 21621                           
 21622                           ; BSR set to: 0
 21623  002E1A  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 21624  002E1C  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21625  002E1E  B4D8               	btfsc	status,2,c
 21626  002E20  D006               	goto	l672
 21627                           
 21628                           ; BSR set to: 0
 21629  002E22  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 21630  002E26  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21631  002E2A  BEDF               	btfsc	indf2,7,c
 21632  002E2C  D0AA               	goto	l668
 21633  002E2E                     l672:
 21634                           
 21635                           ; BSR set to: 0
 21636                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 21637                           
 21638                           ; BSR set to: 0
 21639  002E2E  C1E6  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 21640  002E32  C1E7  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 21641  002E36  C15A  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 21642  002E3A  C15B  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 21643  002E3E  C15C  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 21644  002E42  C15D  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 21645  002E46  0E00               	movlw	0
 21646  002E48  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 21647  002E4A  0E06               	movlw	6
 21648  002E4C  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 21649  002E4E  D801               	call	u7568
 21650  002E50  D00A               	goto	u7569
 21651  002E52                     u7568:
 21652  002E52  0005               	push	
 21653  002E54  6EFA               	movwf	pclath,c
 21654  002E56  0101               	movlb	1	; () banked
 21655  002E58  51E0               	movf	(_LUN+8)& (0+255),w,b
 21656  002E5A  6EFD               	movwf	tosl,c
 21657  002E5C  51E1               	movf	(_LUN+9)& (0+255),w,b
 21658  002E5E  6EFE               	movwf	tosh,c
 21659  002E60  6AFF               	clrf	tosu,c
 21660  002E62  50FA               	movf	pclath,w,c
 21661  002E64  0012               	return		;indir
 21662  002E66                     u7569:
 21663  002E66  06E8               	decf	wreg,f,c
 21664  002E68  B4D8               	btfsc	status,2,c
 21665  002E6A  D01A               	goto	l675
 21666                           
 21667                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 21668  002E6C  0E64               	movlw	100
 21669  002E6E  0100               	movlb	0	; () banked
 21670  002E70  61E5               	cpfslt	_MSDRetryAttempt& (0+255),b
 21671  002E72  D002               	goto	l674
 21672                           
 21673                           ; BSR set to: 0
 21674                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 21675  002E74  2BE5               	incf	_MSDRetryAttempt& (0+255),f,b
 21676                           
 21677                           ;usb_device_msd.c: 1088: break;
 21678  002E76  D085               	goto	l668
 21679  002E78                     l674:
 21680                           
 21681                           ; BSR set to: 0
 21682                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 21683                           
 21684                           ; BSR set to: 0
 21685  002E78  0E02               	movlw	2
 21686  002E7A  010D               	movlb	13	; () banked
 21687  002E7C  6F8C               	movwf	140,b	;volatile
 21688                           
 21689                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 21690  002E7E  0101               	movlb	1	; () banked
 21691  002E80  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21692  002E82  0BF0               	andlw	-16
 21693  002E84  0903               	iorlw	3
 21694  002E86  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21695                           
 21696                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 21697  002E88  0E00               	movlw	0
 21698  002E8A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21699                           
 21700                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 21701  002E8C  0E00               	movlw	0
 21702  002E8E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21703                           
 21704                           ; BSR set to: 1
 21705                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 21706  002E90  0E01               	movlw	1
 21707  002E92  6E01               	movwf	USBStallEndpoint@dir,c
 21708  002E94  0E02               	movlw	2
 21709  002E96  ECF1  F021         	call	_USBStallEndpoint
 21710  002E9A  D05E               	goto	l10789
 21711  002E9C                     L23:
 21712  002E9C  6FE7               	movwf	_MSDReadState& (0+255),b
 21713                           
 21714                           ;usb_device_msd.c: 1109: break;
 21715  002E9E  D071               	goto	l668
 21716  002EA0                     l675:
 21717                           
 21718                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 21719                           
 21720                           ; BSR set to: 0
 21721                           
 21722                           ; BSR set to: 0
 21723  002EA0  0E01               	movlw	1
 21724  002EA2  0101               	movlb	1	; () banked
 21725  002EA4  275A               	addwf	_LBA& (0+255),f,b
 21726  002EA6  0E00               	movlw	0
 21727  002EA8  235B               	addwfc	(_LBA+1)& (0+255),f,b
 21728  002EAA  235C               	addwfc	(_LBA+2)& (0+255),f,b
 21729  002EAC  235D               	addwfc	(_LBA+3)& (0+255),f,b
 21730                           
 21731                           ; BSR set to: 1
 21732                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 21733  002EAE  0E00               	movlw	0
 21734  002EB0  010D               	movlb	13	; () banked
 21735  002EB2  6F88               	movwf	136,b	;volatile
 21736  002EB4  0E02               	movlw	2
 21737  002EB6  6F89               	movwf	137,b	;volatile
 21738  002EB8  0E00               	movlw	0
 21739  002EBA  6F8A               	movwf	138,b	;volatile
 21740  002EBC  0E00               	movlw	0
 21741  002EBE  6F8B               	movwf	139,b	;volatile
 21742                           
 21743                           ; BSR set to: 13
 21744                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 21745  002EC0  0E00               	movlw	0
 21746  002EC2  0101               	movlb	1	; () banked
 21747  002EC4  6F82               	movwf	_ptrNextData& (0+255),b
 21748  002EC6  0E06               	movlw	6
 21749  002EC8  6F83               	movwf	(_ptrNextData+1)& (0+255),b
 21750                           
 21751                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 21752  002ECA  0E03               	movlw	3
 21753  002ECC  0100               	movlb	0	; () banked
 21754  002ECE  6FE7               	movwf	_MSDReadState& (0+255),b
 21755  002ED0                     
 21756                           ; BSR set to: 0
 21757                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 21758                           
 21759                           ; BSR set to: 0
 21760  002ED0  010D               	movlb	13	; () banked
 21761  002ED2  5188               	movf	136,w,b	;volatile
 21762  002ED4  1189               	iorwf	137,w,b	;volatile
 21763  002ED6  118A               	iorwf	138,w,b	;volatile
 21764  002ED8  118B               	iorwf	139,w,b	;volatile
 21765  002EDA  A4D8               	btfss	status,2,c
 21766  002EDC  D002               	goto	l677
 21767                           
 21768                           ; BSR set to: 13
 21769                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 21770  002EDE  0E01               	movlw	1
 21771  002EE0  D03C               	goto	L25
 21772  002EE2                     l677:
 21773                           
 21774                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 21775                           
 21776                           ; BSR set to: 0
 21777  002EE2  0E04               	movlw	4
 21778  002EE4  0100               	movlb	0	; () banked
 21779  002EE6  6FE7               	movwf	_MSDReadState& (0+255),b
 21780  002EE8                     
 21781                           ; BSR set to: 0
 21782                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 21783                           
 21784                           ; BSR set to: 0
 21785  002EE8  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 21786  002EEA  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21787  002EEC  B4D8               	btfsc	status,2,c
 21788  002EEE  D006               	goto	l679
 21789                           
 21790                           ; BSR set to: 0
 21791  002EF0  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 21792  002EF4  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21793  002EF8  BEDF               	btfsc	indf2,7,c
 21794  002EFA  D043               	goto	l668
 21795  002EFC                     l679:
 21796                           
 21797                           ; BSR set to: 0
 21798                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 21799                           
 21800                           ; BSR set to: 0
 21801  002EFC  0E01               	movlw	1
 21802  002EFE  6E01               	movwf	USBTransferOnePacket@dir,c
 21803  002F00  C182  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 21804  002F04  C183  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 21805  002F08  0E40               	movlw	64
 21806  002F0A  6E04               	movwf	USBTransferOnePacket@len,c
 21807  002F0C  0E02               	movlw	2
 21808  002F0E  ECFE  F023         	call	_USBTransferOnePacket
 21809  002F12  C001  F0D5         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 21810  002F16  C002  F0D6         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 21811                           
 21812                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 21813  002F1A  0E03               	movlw	3
 21814  002F1C  0100               	movlb	0	; () banked
 21815  002F1E  6FE7               	movwf	_MSDReadState& (0+255),b
 21816                           
 21817                           ; BSR set to: 0
 21818                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 21819  002F20  0E40               	movlw	64
 21820  002F22  0101               	movlb	1	; () banked
 21821  002F24  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 21822  002F26  0E00               	movlw	0
 21823  002F28  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 21824  002F2A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 21825  002F2C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 21826                           
 21827                           ; BSR set to: 1
 21828                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 21829  002F2E  0E40               	movlw	64
 21830  002F30  010D               	movlb	13	; () banked
 21831  002F32  5F88               	subwf	136,f,b	;volatile
 21832  002F34  0E00               	movlw	0
 21833  002F36  5B89               	subwfb	137,f,b	;volatile
 21834  002F38  5B8A               	subwfb	138,f,b	;volatile
 21835  002F3A  5B8B               	subwfb	139,f,b	;volatile
 21836                           
 21837                           ; BSR set to: 13
 21838                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 21839  002F3C  0E40               	movlw	64
 21840  002F3E  0101               	movlb	1	; () banked
 21841  002F40  2782               	addwf	_ptrNextData& (0+255),f,b
 21842  002F42  0E00               	movlw	0
 21843  002F44  2383               	addwfc	(_ptrNextData+1)& (0+255),f,b
 21844                           
 21845                           ;usb_device_msd.c: 1149: break;
 21846  002F46  D01D               	goto	l668
 21847  002F48                     
 21848                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 21849                           
 21850                           ; BSR set to: 1
 21851  002F48  0E02               	movlw	2
 21852  002F4A  010D               	movlb	13	; () banked
 21853  002F4C  6F8C               	movwf	140,b	;volatile
 21854                           
 21855                           ; BSR set to: 13
 21856                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 21857  002F4E  0E01               	movlw	1
 21858  002F50  6E01               	movwf	USBStallEndpoint@dir,c
 21859  002F52  0E02               	movlw	2
 21860  002F54  ECF1  F021         	call	_USBStallEndpoint
 21861  002F58                     l10789:
 21862                           
 21863                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 21864  002F58  0E00               	movlw	0
 21865  002F5A                     L25:
 21866  002F5A  0100               	movlb	0	; () banked
 21867  002F5C  D79F               	goto	L23
 21868  002F5E                     l665:
 21869                           
 21870                           ; BSR set to: 0
 21871  002F5E  0100               	movlb	0	; () banked
 21872  002F60  51E7               	movf	_MSDReadState& (0+255),w,b
 21873                           
 21874                           ; Switch size 1, requested type "space"
 21875                           ; Number of cases is 5, Range of values is 0 to 4
 21876                           ; switch strategies available:
 21877                           ; Name         Instructions Cycles
 21878                           ; simple_byte           16     9 (average)
 21879                           ;	Chosen strategy is simple_byte
 21880  002F62  0A00               	xorlw	0	; case 0
 21881  002F64  B4D8               	btfsc	status,2,c
 21882  002F66  D724               	goto	l666
 21883  002F68  0A01               	xorlw	1	; case 1
 21884  002F6A  B4D8               	btfsc	status,2,c
 21885  002F6C  D74B               	goto	l669
 21886  002F6E  0A03               	xorlw	3	; case 2
 21887  002F70  B4D8               	btfsc	status,2,c
 21888  002F72  D753               	goto	l671
 21889  002F74  0A01               	xorlw	1	; case 3
 21890  002F76  B4D8               	btfsc	status,2,c
 21891  002F78  D7AB               	goto	l676
 21892  002F7A  0A07               	xorlw	7	; case 4
 21893  002F7C  B4D8               	btfsc	status,2,c
 21894  002F7E  D7B4               	goto	l678
 21895  002F80  D7E3               	goto	l680
 21896  002F82                     l668:
 21897                           
 21898                           ;usb_device_msd.c: 1161: return MSDReadState;
 21899                           
 21900                           ; BSR set to: 0
 21901  002F82  0100               	movlb	0	; () banked
 21902  002F84  51E7               	movf	_MSDReadState& (0+255),w,b
 21903  002F86  0012               	return	
 21904  002F88                     __end_of_MSDReadHandler:
 21905                           	opt stack 0
 21906                           tosu	equ	0xFFF
 21907                           tosh	equ	0xFFE
 21908                           tosl	equ	0xFFD
 21909                           pclath	equ	0xFFA
 21910                           tblptru	equ	0xFF8
 21911                           tblptrh	equ	0xFF7
 21912                           tblptrl	equ	0xFF6
 21913                           tablat	equ	0xFF5
 21914                           prodh	equ	0xFF4
 21915                           prodl	equ	0xFF3
 21916                           intcon	equ	0xFF2
 21917                           intcon2	equ	0xFF1
 21918                           intcon3	equ	0xFF0
 21919                           indf0	equ	0xFEF
 21920                           postinc0	equ	0xFEE
 21921                           fsr0h	equ	0xFEA
 21922                           fsr0l	equ	0xFE9
 21923                           wreg	equ	0xFE8
 21924                           indf1	equ	0xFE7
 21925                           postdec1	equ	0xFE5
 21926                           plusw1	equ	0xFE3
 21927                           fsr1h	equ	0xFE2
 21928                           fsr1l	equ	0xFE1
 21929                           indf2	equ	0xFDF
 21930                           postinc2	equ	0xFDE
 21931                           postdec2	equ	0xFDD
 21932                           plusw2	equ	0xFDB
 21933                           fsr2h	equ	0xFDA
 21934                           fsr2l	equ	0xFD9
 21935                           status	equ	0xFD8
 21936                           
 21937 ;; *************** function _MSDCheckForErrorCases *****************
 21938 ;; Defined at:
 21939 ;;		line 1434 in file "usb_device_msd.c"
 21940 ;; Parameters:    Size  Location     Type
 21941 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 21942 ;; Auto vars:     Size  Location     Type
 21943 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 21944 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 21945 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 21946 ;; Return value:  Size  Location     Type
 21947 ;;                  1    wreg      unsigned char 
 21948 ;; Registers used:
 21949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21950 ;; Tracked objects:
 21951 ;;		On entry : 0/0
 21952 ;;		On exit  : 0/0
 21953 ;;		Unchanged: 0/0
 21954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21956 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21958 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21959 ;;Total ram usage:        7 bytes
 21960 ;; Hardware stack levels used:    1
 21961 ;; Hardware stack levels required when called:    2
 21962 ;; This function calls:
 21963 ;;		_MSDErrorHandler
 21964 ;; This function is called by:
 21965 ;;		_MSDProcessCommandMediaPresent
 21966 ;;		_MSDReadHandler
 21967 ;;		_MSDWriteHandler
 21968 ;; This function uses a non-reentrant model
 21969 ;;
 21970                           
 21971                           	psect	text98
 21972  004BC2                     __ptext98:
 21973                           	opt stack 0
 21974  004BC2                     _MSDCheckForErrorCases:
 21975                           	opt stack 23
 21976                           
 21977                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 21978                           
 21979                           ; BSR set to: 0
 21980                           ;incstack = 0
 21981  004BC2  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 21982  004BC4  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 21983  004BC6  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 21984  004BC8  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 21985  004BCA  A4D8               	btfss	status,2,c
 21986  004BCC  D002               	goto	l710
 21987                           
 21988                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 21989  004BCE  0E01               	movlw	1
 21990  004BD0  D001               	goto	L26
 21991  004BD2                     l710:
 21992                           
 21993                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 21994  004BD2  0E00               	movlw	0
 21995  004BD4                     L26:
 21996  004BD4  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 21997                           
 21998                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 21999  004BD6  0100               	movlb	0	; () banked
 22000  004BD8  05E2               	decf	_MSDHostNoData& (0+255),w,b
 22001  004BDA  A4D8               	btfss	status,2,c
 22002  004BDC  D005               	goto	l712
 22003                           
 22004                           ; BSR set to: 0
 22005  004BDE  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 22006  004BE0  A4D8               	btfss	status,2,c
 22007  004BE2  D002               	goto	l712
 22008                           
 22009                           ; BSR set to: 0
 22010                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 22011  004BE4  0E00               	movlw	0
 22012                           
 22013                           ; BSR set to: 0
 22014  004BE6  0012               	return	
 22015  004BE8                     l712:
 22016                           
 22017                           ; BSR set to: 0
 22018                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 22019                           
 22020                           ; BSR set to: 0
 22021  004BE8  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 22022  004BEA  0101               	movlb	1	; () banked
 22023  004BEC  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 22024  004BEE  E11A               	bnz	l10369
 22025  004BF0  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 22026  004BF2  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 22027  004BF4  E117               	bnz	l10369
 22028  004BF6  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 22029  004BF8  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 22030  004BFA  E114               	bnz	l10369
 22031  004BFC  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 22032  004BFE  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 22033  004C00  A4D8               	btfss	status,2,c
 22034  004C02  D010               	goto	l718
 22035                           
 22036                           ; BSR set to: 1
 22037                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 22038  004C04  0100               	movlb	0	; () banked
 22039  004C06  05E9               	decf	_MSD_State& (0+255),w,b
 22040  004C08  A4D8               	btfss	status,2,c
 22041  004C0A  D006               	goto	l715
 22042                           
 22043                           ; BSR set to: 0
 22044                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 22045  004C0C  0E2A               	movlw	42
 22046  004C0E  19E8               	xorwf	_MSDCommandState& (0+255),w,b
 22047  004C10  B4D8               	btfsc	status,2,c
 22048  004C12  D008               	goto	l718
 22049                           
 22050                           ; BSR set to: 0
 22051                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 22052  004C14  0E00               	movlw	0
 22053                           
 22054                           ; BSR set to: 0
 22055  004C16  0012               	return	
 22056  004C18                     l715:
 22057                           
 22058                           ; BSR set to: 0
 22059                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 22060                           
 22061                           ; BSR set to: 0
 22062  004C18  0E2A               	movlw	42
 22063  004C1A  19E8               	xorwf	_MSDCommandState& (0+255),w,b
 22064  004C1C  A4D8               	btfss	status,2,c
 22065  004C1E  D002               	goto	l718
 22066                           
 22067                           ; BSR set to: 0
 22068                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 22069  004C20  0E00               	movlw	0
 22070                           
 22071                           ; BSR set to: 0
 22072  004C22  0012               	return	
 22073  004C24                     l718:
 22074  004C24                     l10369:
 22075                           
 22076                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 22077  004C24  0101               	movlb	1	; () banked
 22078  004C26  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22079  004C28  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 22080  004C2A  5109               	movf	(_gblCBW+9)& (0+255),w,b
 22081  004C2C  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 22082  004C2E  510A               	movf	(_gblCBW+10)& (0+255),w,b
 22083  004C30  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 22084  004C32  510B               	movf	(_gblCBW+11)& (0+255),w,b
 22085  004C34  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 22086  004C36  B0D8               	btfsc	status,0,c
 22087  004C38  D002               	goto	l719
 22088                           
 22089                           ; BSR set to: 1
 22090                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 22091  004C3A  0E01               	movlw	1
 22092  004C3C  D001               	goto	L27
 22093  004C3E                     l719:
 22094                           
 22095                           ; BSR set to: 1
 22096                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 22097                           
 22098                           ; BSR set to: 1
 22099  004C3E  0E00               	movlw	0
 22100  004C40                     L27:
 22101  004C40  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 22102                           
 22103                           ; BSR set to: 1
 22104                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 22105                           
 22106                           ; BSR set to: 1
 22107  004C42  0E02               	movlw	2
 22108  004C44  0100               	movlb	0	; () banked
 22109  004C46  19E9               	xorwf	_MSD_State& (0+255),w,b
 22110  004C48  A4D8               	btfss	status,2,c
 22111  004C4A  D014               	goto	l721
 22112                           
 22113                           ; BSR set to: 0
 22114                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 22115  004C4C  0E2A               	movlw	42
 22116  004C4E  19E8               	xorwf	_MSDCommandState& (0+255),w,b
 22117  004C50  B4D8               	btfsc	status,2,c
 22118  004C52  D005               	goto	l722
 22119                           
 22120                           ; BSR set to: 0
 22121  004C54  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 22122  004C56  A4D8               	btfss	status,2,c
 22123  004C58  D002               	goto	l722
 22124  004C5A                     u7100:
 22125                           
 22126                           ; BSR set to: 0
 22127                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 22128  004C5A  0E05               	movlw	5
 22129  004C5C  D01D               	goto	L30
 22130  004C5E                     l722:
 22131                           
 22132                           ; BSR set to: 0
 22133                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 22134                           
 22135                           ; BSR set to: 0
 22136  004C5E  05E2               	decf	_MSDHostNoData& (0+255),w,b
 22137  004C60  B4D8               	btfsc	status,2,c
 22138  004C62  D00F               	goto	u7150
 22139                           
 22140                           ; BSR set to: 0
 22141                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 22142                           
 22143                           ; BSR set to: 0
 22144                           
 22145                           ; BSR set to: 0
 22146                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 22147  004C64  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 22148  004C66  B4D8               	btfsc	status,2,c
 22149  004C68  D003               	goto	u7130
 22150                           
 22151                           ; BSR set to: 0
 22152                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 22153                           
 22154                           ; BSR set to: 0
 22155                           
 22156                           ; BSR set to: 0
 22157                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 22158  004C6A  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 22159  004C6C  A4D8               	btfss	status,2,c
 22160  004C6E  D7F5               	goto	u7100
 22161  004C70                     u7130:
 22162                           
 22163                           ; BSR set to: 0
 22164                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 22165  004C70  0E04               	movlw	4
 22166  004C72  D012               	goto	L30
 22167  004C74                     l721:
 22168                           
 22169                           ; BSR set to: 0
 22170                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 22171                           
 22172                           ; BSR set to: 0
 22173  004C74  0E2A               	movlw	42
 22174  004C76  19E8               	xorwf	_MSDCommandState& (0+255),w,b
 22175  004C78  B4D8               	btfsc	status,2,c
 22176  004C7A  D00D               	goto	l737
 22177                           
 22178                           ; BSR set to: 0
 22179                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 22180                           
 22181                           ; BSR set to: 0
 22182                           
 22183                           ; BSR set to: 0
 22184                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 22185  004C7C  05E2               	decf	_MSDHostNoData& (0+255),w,b
 22186  004C7E  A4D8               	btfss	status,2,c
 22187  004C80  D002               	goto	l733
 22188  004C82                     u7150:
 22189                           
 22190                           ; BSR set to: 0
 22191                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 22192  004C82  0E01               	movlw	1
 22193  004C84  D009               	goto	L30
 22194  004C86                     l733:
 22195                           
 22196                           ; BSR set to: 0
 22197                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 22198                           
 22199                           ; BSR set to: 0
 22200  004C86  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 22201  004C88  B4D8               	btfsc	status,2,c
 22202  004C8A  D003               	goto	u7170
 22203                           
 22204                           ; BSR set to: 0
 22205                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 22206                           
 22207                           ; BSR set to: 0
 22208                           
 22209                           ; BSR set to: 0
 22210                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 22211  004C8C  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 22212  004C8E  A4D8               	btfss	status,2,c
 22213  004C90  D002               	goto	l737
 22214  004C92                     u7170:
 22215                           
 22216                           ; BSR set to: 0
 22217                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 22218  004C92  0E02               	movlw	2
 22219  004C94  D001               	goto	L30
 22220  004C96                     l737:
 22221                           
 22222                           ; BSR set to: 0
 22223                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 22224                           
 22225                           ; BSR set to: 0
 22226  004C96  0E03               	movlw	3
 22227  004C98                     L30:
 22228  004C98  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 22229                           
 22230                           ; BSR set to: 0
 22231                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 22232                           
 22233                           ; BSR set to: 0
 22234                           
 22235                           ; BSR set to: 0
 22236                           
 22237                           ; BSR set to: 0
 22238                           
 22239                           ; BSR set to: 0
 22240                           
 22241                           ; BSR set to: 0
 22242  004C9A  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 22243  004C9C  EC7B  F023         	call	_MSDErrorHandler
 22244                           
 22245                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 22246  004CA0  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 22247  004CA2  0012               	return	
 22248  004CA4                     __end_of_MSDCheckForErrorCases:
 22249                           	opt stack 0
 22250                           tosu	equ	0xFFF
 22251                           tosh	equ	0xFFE
 22252                           tosl	equ	0xFFD
 22253                           pclath	equ	0xFFA
 22254                           tblptru	equ	0xFF8
 22255                           tblptrh	equ	0xFF7
 22256                           tblptrl	equ	0xFF6
 22257                           tablat	equ	0xFF5
 22258                           prodh	equ	0xFF4
 22259                           prodl	equ	0xFF3
 22260                           intcon	equ	0xFF2
 22261                           intcon2	equ	0xFF1
 22262                           intcon3	equ	0xFF0
 22263                           indf0	equ	0xFEF
 22264                           postinc0	equ	0xFEE
 22265                           fsr0h	equ	0xFEA
 22266                           fsr0l	equ	0xFE9
 22267                           wreg	equ	0xFE8
 22268                           indf1	equ	0xFE7
 22269                           postdec1	equ	0xFE5
 22270                           plusw1	equ	0xFE3
 22271                           fsr1h	equ	0xFE2
 22272                           fsr1l	equ	0xFE1
 22273                           indf2	equ	0xFDF
 22274                           postinc2	equ	0xFDE
 22275                           postdec2	equ	0xFDD
 22276                           plusw2	equ	0xFDB
 22277                           fsr2h	equ	0xFDA
 22278                           fsr2l	equ	0xFD9
 22279                           status	equ	0xFD8
 22280                           
 22281 ;; *************** function _MSDErrorHandler *****************
 22282 ;; Defined at:
 22283 ;;		line 1577 in file "usb_device_msd.c"
 22284 ;; Parameters:    Size  Location     Type
 22285 ;;  ErrorCase       1    wreg     unsigned char 
 22286 ;; Auto vars:     Size  Location     Type
 22287 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 22288 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 22289 ;; Return value:  Size  Location     Type
 22290 ;;                  1    wreg      void 
 22291 ;; Registers used:
 22292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22293 ;; Tracked objects:
 22294 ;;		On entry : 0/0
 22295 ;;		On exit  : 0/0
 22296 ;;		Unchanged: 0/0
 22297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22302 ;;Total ram usage:        2 bytes
 22303 ;; Hardware stack levels used:    1
 22304 ;; Hardware stack levels required when called:    1
 22305 ;; This function calls:
 22306 ;;		_ResetSenseData
 22307 ;;		_USBStallEndpoint
 22308 ;; This function is called by:
 22309 ;;		_MSDProcessCommandMediaAbsent
 22310 ;;		_MSDProcessCommandMediaPresent
 22311 ;;		_MSDCheckForErrorCases
 22312 ;; This function uses a non-reentrant model
 22313 ;;
 22314                           
 22315                           	psect	text99
 22316  0046F6                     __ptext99:
 22317                           	opt stack 0
 22318  0046F6                     _MSDErrorHandler:
 22319                           	opt stack 23
 22320                           
 22321                           ;incstack = 0
 22322                           ;MSDErrorHandler@ErrorCase stored from wreg
 22323  0046F6  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 22324                           
 22325                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 22326  0046F8  0100               	movlb	0	; () banked
 22327  0046FA  51D5               	movf	_USBMSDInHandle& (0+255),w,b
 22328  0046FC  11D6               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 22329  0046FE  B4D8               	btfsc	status,2,c
 22330  004700  D006               	goto	u6660
 22331                           
 22332                           ; BSR set to: 0
 22333  004702  C0D5  FFD9         	movff	_USBMSDInHandle,fsr2l
 22334  004706  C0D6  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 22335  00470A  BEDF               	btfsc	indf2,7,c
 22336  00470C  0012               	return	
 22337  00470E                     u6660:
 22338                           
 22339                           ; BSR set to: 0
 22340                           
 22341                           ; BSR set to: 0
 22342  00470E  51D7               	movf	_USBMSDOutHandle& (0+255),w,b
 22343  004710  11D8               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22344  004712  B4D8               	btfsc	status,2,c
 22345  004714  D006               	goto	l741
 22346                           
 22347                           ; BSR set to: 0
 22348  004716  C0D7  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22349  00471A  C0D8  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22350  00471E  BEDF               	btfsc	indf2,7,c
 22351  004720  0012               	return	
 22352  004722                     l741:
 22353                           
 22354                           ; BSR set to: 0
 22355                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 22356  004722  C0E9  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 22357                           
 22358                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 22359  004726  69E8               	setf	_MSDCommandState& (0+255),b
 22360                           
 22361                           ; BSR set to: 0
 22362                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 22363  004728  0E00               	movlw	0
 22364  00472A  6FE7               	movwf	_MSDReadState& (0+255),b
 22365                           
 22366                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 22367  00472C  0E00               	movlw	0
 22368  00472E  6FE6               	movwf	_MSDWriteState& (0+255),b
 22369                           
 22370                           ; BSR set to: 0
 22371                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 22372  004730  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 22373  004734  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 22374  004738  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 22375  00473C  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 22376                           
 22377                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 22378  004740  0E01               	movlw	1
 22379  004742  010D               	movlb	13	; () banked
 22380  004744  6F8C               	movwf	140,b	;volatile
 22381                           
 22382                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 22383  004746  0E03               	movlw	3
 22384  004748  0100               	movlb	0	; () banked
 22385  00474A  6FE9               	movwf	_MSD_State& (0+255),b
 22386                           
 22387                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 22388  00474C  D043               	goto	l747
 22389  00474E                     
 22390                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 22391                           
 22392                           ; BSR set to: 0
 22393  00474E  0E02               	movlw	2
 22394  004750  010D               	movlb	13	; () banked
 22395  004752  6F8C               	movwf	140,b	;volatile
 22396                           
 22397                           ;usb_device_msd.c: 1607: break;
 22398  004754  0012               	return	
 22399  004756                     
 22400                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 22401                           
 22402                           ; BSR set to: 13
 22403  004756  0E01               	movlw	1
 22404  004758  6E01               	movwf	USBStallEndpoint@dir,c
 22405  00475A  0E02               	movlw	2
 22406  00475C  ECF1  F021         	call	_USBStallEndpoint
 22407                           
 22408                           ;usb_device_msd.c: 1611: break;
 22409  004760  0012               	return	
 22410  004762                     
 22411                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 22412  004762  0E02               	movlw	2
 22413  004764  010D               	movlb	13	; () banked
 22414  004766  6F8C               	movwf	140,b	;volatile
 22415                           
 22416                           ; BSR set to: 13
 22417                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 22418  004768  0E01               	movlw	1
 22419  00476A  6E01               	movwf	USBStallEndpoint@dir,c
 22420  00476C  0E02               	movlw	2
 22421  00476E  ECF1  F021         	call	_USBStallEndpoint
 22422                           
 22423                           ;usb_device_msd.c: 1616: break;
 22424  004772  0012               	return	
 22425  004774                     
 22426                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 22427  004774  0E00               	movlw	0
 22428  004776  6E01               	movwf	USBStallEndpoint@dir,c
 22429  004778  0E02               	movlw	2
 22430  00477A  ECF1  F021         	call	_USBStallEndpoint
 22431                           
 22432                           ;usb_device_msd.c: 1620: break;
 22433  00477E  0012               	return	
 22434  004780                     
 22435                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 22436  004780  0E02               	movlw	2
 22437  004782  010D               	movlb	13	; () banked
 22438  004784  6F8C               	movwf	140,b	;volatile
 22439                           
 22440                           ; BSR set to: 13
 22441                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 22442  004786  0E00               	movlw	0
 22443  004788  6E01               	movwf	USBStallEndpoint@dir,c
 22444  00478A  0E02               	movlw	2
 22445  00478C  ECF1  F021         	call	_USBStallEndpoint
 22446                           
 22447                           ;usb_device_msd.c: 1625: break;
 22448  004790  0012               	return	
 22449  004792                     
 22450                           ;usb_device_msd.c: 1628: ResetSenseData();
 22451  004792  ECA2  F037         	call	_ResetSenseData	;wreg free
 22452                           
 22453                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 22454  004796  0101               	movlb	1	; () banked
 22455  004798  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 22456  00479A  0BF0               	andlw	-16
 22457  00479C  0905               	iorlw	5
 22458  00479E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 22459                           
 22460                           ; BSR set to: 1
 22461                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 22462  0047A0  0E20               	movlw	32
 22463  0047A2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22464                           
 22465                           ; BSR set to: 1
 22466                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 22467  0047A4  0E00               	movlw	0
 22468  0047A6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22469                           
 22470                           ; BSR set to: 1
 22471                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 22472  0047A8  0E02               	movlw	2
 22473  0047AA  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 22474  0047AC  A4D8               	btfss	status,2,c
 22475  0047AE  D00C               	goto	l755
 22476                           
 22477                           ; BSR set to: 1
 22478  0047B0  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22479  0047B2  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 22480  0047B4  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 22481  0047B6  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 22482  0047B8  B4D8               	btfsc	status,2,c
 22483  0047BA  D006               	goto	l755
 22484                           
 22485                           ; BSR set to: 1
 22486                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 22487  0047BC  0E00               	movlw	0
 22488  0047BE  6E01               	movwf	USBStallEndpoint@dir,c
 22489  0047C0  0E02               	movlw	2
 22490  0047C2  ECF1  F021         	call	_USBStallEndpoint
 22491                           
 22492                           ;usb_device_msd.c: 1636: }
 22493  0047C6  0012               	return	
 22494  0047C8                     l755:
 22495                           
 22496                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 22497  0047C8  0E01               	movlw	1
 22498  0047CA  6E01               	movwf	USBStallEndpoint@dir,c
 22499  0047CC  0E02               	movlw	2
 22500  0047CE  ECF1  F021         	call	_USBStallEndpoint
 22501                           
 22502                           ;usb_device_msd.c: 1644: }
 22503                           
 22504                           ;usb_device_msd.c: 1643: break;
 22505                           
 22506                           ;usb_device_msd.c: 1642: default:
 22507                           
 22508                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 22509  0047D2  0012               	return	
 22510  0047D4                     l747:
 22511  0047D4  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 22512                           
 22513                           ; Switch size 1, requested type "space"
 22514                           ; Number of cases is 6, Range of values is 1 to 127
 22515                           ; switch strategies available:
 22516                           ; Name         Instructions Cycles
 22517                           ; simple_byte           19    10 (average)
 22518                           ;	Chosen strategy is simple_byte
 22519  0047D6  0A01               	xorlw	1	; case 1
 22520  0047D8  B4D8               	btfsc	status,2,c
 22521  0047DA  D7B9               	goto	l748
 22522  0047DC  0A03               	xorlw	3	; case 2
 22523  0047DE  B4D8               	btfsc	status,2,c
 22524  0047E0  D7BA               	goto	l750
 22525  0047E2  0A01               	xorlw	1	; case 3
 22526  0047E4  B4D8               	btfsc	status,2,c
 22527  0047E6  D7BD               	goto	l751
 22528  0047E8  0A07               	xorlw	7	; case 4
 22529  0047EA  B4D8               	btfsc	status,2,c
 22530  0047EC  D7C3               	goto	l752
 22531  0047EE  0A01               	xorlw	1	; case 5
 22532  0047F0  B4D8               	btfsc	status,2,c
 22533  0047F2  D7C6               	goto	l753
 22534  0047F4  0A7A               	xorlw	122	; case 127
 22535  0047F6  A4D8               	btfss	status,2,c
 22536  0047F8  0012               	return	
 22537  0047FA  D7CB               	goto	l754
 22538  0047FC                     __end_of_MSDErrorHandler:
 22539                           	opt stack 0
 22540                           tosu	equ	0xFFF
 22541                           tosh	equ	0xFFE
 22542                           tosl	equ	0xFFD
 22543                           pclath	equ	0xFFA
 22544                           tblptru	equ	0xFF8
 22545                           tblptrh	equ	0xFF7
 22546                           tblptrl	equ	0xFF6
 22547                           tablat	equ	0xFF5
 22548                           prodh	equ	0xFF4
 22549                           prodl	equ	0xFF3
 22550                           intcon	equ	0xFF2
 22551                           intcon2	equ	0xFF1
 22552                           intcon3	equ	0xFF0
 22553                           indf0	equ	0xFEF
 22554                           postinc0	equ	0xFEE
 22555                           fsr0h	equ	0xFEA
 22556                           fsr0l	equ	0xFE9
 22557                           wreg	equ	0xFE8
 22558                           indf1	equ	0xFE7
 22559                           postdec1	equ	0xFE5
 22560                           plusw1	equ	0xFE3
 22561                           fsr1h	equ	0xFE2
 22562                           fsr1l	equ	0xFE1
 22563                           indf2	equ	0xFDF
 22564                           postinc2	equ	0xFDE
 22565                           postdec2	equ	0xFDD
 22566                           plusw2	equ	0xFDB
 22567                           fsr2h	equ	0xFDA
 22568                           fsr2l	equ	0xFD9
 22569                           status	equ	0xFD8
 22570                           
 22571 ;; *************** function _USBStallEndpoint *****************
 22572 ;; Defined at:
 22573 ;;		line 1073 in file "usb_device.c"
 22574 ;; Parameters:    Size  Location     Type
 22575 ;;  ep              1    wreg     unsigned char 
 22576 ;;  dir             1    0[COMRAM] unsigned char 
 22577 ;; Auto vars:     Size  Location     Type
 22578 ;;  ep              1    5[COMRAM] unsigned char 
 22579 ;;  p               2    6[COMRAM] PTR struct __BDT
 22580 ;;		 -> BDT(48), 
 22581 ;; Return value:  Size  Location     Type
 22582 ;;                  1    wreg      void 
 22583 ;; Registers used:
 22584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22585 ;; Tracked objects:
 22586 ;;		On entry : 0/0
 22587 ;;		On exit  : 0/0
 22588 ;;		Unchanged: 0/0
 22589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22590 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22591 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22592 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22593 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22594 ;;Total ram usage:        8 bytes
 22595 ;; Hardware stack levels used:    1
 22596 ;; This function calls:
 22597 ;;		Nothing
 22598 ;; This function is called by:
 22599 ;;		_MSDTasks
 22600 ;;		_MSDReadHandler
 22601 ;;		_MSDWriteHandler
 22602 ;;		_MSDErrorHandler
 22603 ;;		_MSDTransferTerminated
 22604 ;; This function uses a non-reentrant model
 22605 ;;
 22606                           
 22607                           	psect	text100
 22608  0043E2                     __ptext100:
 22609                           	opt stack 0
 22610  0043E2                     _USBStallEndpoint:
 22611                           	opt stack 27
 22612                           
 22613                           ;incstack = 0
 22614                           ;USBStallEndpoint@ep stored from wreg
 22615  0043E2  6E06               	movwf	USBStallEndpoint@ep,c
 22616                           
 22617                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 22618  0043E4  5006               	movf	USBStallEndpoint@ep,w,c
 22619  0043E6  A4D8               	btfss	status,2,c
 22620  0043E8  D02C               	goto	l191
 22621                           
 22622                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 22623  0043EA  0100               	movlb	0	; () banked
 22624  0043EC  EE20 F001          	lfsr	2,1
 22625  0043F0  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22626  0043F2  26D9               	addwf	fsr2l,f,c
 22627  0043F4  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22628  0043F6  22DA               	addwfc	fsr2h,f,c
 22629  0043F8  0E08               	movlw	8
 22630  0043FA  6EDF               	movwf	indf2,c
 22631                           
 22632                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22633  0043FC  EE20 F002          	lfsr	2,2
 22634  004400  51D9               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22635  004402  26D9               	addwf	fsr2l,f,c
 22636  004404  51DA               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22637  004406  22DA               	addwfc	fsr2h,f,c
 22638  004408  0E30               	movlw	48
 22639  00440A  6EDE               	movwf	postinc2,c
 22640  00440C  0E0D               	movlw	13
 22641  00440E  6EDD               	movwf	postdec2,c
 22642                           
 22643                           ; BSR set to: 0
 22644                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22645  004410  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22646  004414  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22647  004418  0E0C               	movlw	12
 22648  00441A  6EDF               	movwf	indf2,c
 22649                           
 22650                           ; BSR set to: 0
 22651                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22652  00441C  C0D9  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22653  004420  C0DA  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22654  004424  0E00               	movlw	0
 22655  004426  8EDB               	bsf	plusw2,7,c
 22656                           
 22657                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 22658  004428  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 22659  00442C  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22660  004430  0E04               	movlw	4
 22661  004432  6EDF               	movwf	indf2,c
 22662                           
 22663                           ; BSR set to: 0
 22664                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22665  004434  C0C5  FFD9         	movff	_pBDTEntryIn,fsr2l
 22666  004438  C0C6  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22667  00443C  0E00               	movlw	0
 22668  00443E  8EDB               	bsf	plusw2,7,c
 22669                           
 22670                           ;usb_device.c: 1089: }
 22671  004440  0012               	return	
 22672  004442                     l191:
 22673                           
 22674                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 22675                           
 22676                           ; BSR set to: 0
 22677  004442  5001               	movf	USBStallEndpoint@dir,w,c
 22678  004444  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 22679  004446  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 22680  004448  90D8               	bcf	status,0,c
 22681  00444A  3602               	rlcf	??_USBStallEndpoint,f,c
 22682  00444C  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22683  00444E  5006               	movf	USBStallEndpoint@ep,w,c
 22684  004450  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 22685  004452  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 22686  004454  90D8               	bcf	status,0,c
 22687  004456  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22688  004458  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22689  00445A  90D8               	bcf	status,0,c
 22690  00445C  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22691  00445E  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22692  004460  5002               	movf	??_USBStallEndpoint,w,c
 22693  004462  2604               	addwf	??_USBStallEndpoint+2,f,c
 22694  004464  5003               	movf	??_USBStallEndpoint+1,w,c
 22695  004466  2205               	addwfc	??_USBStallEndpoint+3,f,c
 22696  004468  90D8               	bcf	status,0,c
 22697  00446A  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22698  00446C  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22699  00446E  90D8               	bcf	status,0,c
 22700  004470  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22701  004472  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22702  004474  0E00               	movlw	0
 22703  004476  2404               	addwf	??_USBStallEndpoint+2,w,c
 22704  004478  6E07               	movwf	USBStallEndpoint@p,c
 22705  00447A  0E0D               	movlw	13
 22706  00447C  2005               	addwfc	??_USBStallEndpoint+3,w,c
 22707  00447E  6E08               	movwf	USBStallEndpoint@p+1,c
 22708                           
 22709                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 22710  004480  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22711  004484  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22712  004488  0E00               	movlw	0
 22713  00448A  84DB               	bsf	plusw2,2,c
 22714                           
 22715                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 22716  00448C  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22717  004490  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22718  004494  0E00               	movlw	0
 22719  004496  8EDB               	bsf	plusw2,7,c
 22720                           
 22721                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 22722  004498  5006               	movf	USBStallEndpoint@ep,w,c
 22723  00449A  0D04               	mullw	4
 22724  00449C  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 22725  0044A0  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 22726  0044A4  5001               	movf	USBStallEndpoint@dir,w,c
 22727  0044A6  0D02               	mullw	2
 22728  0044A8  50F3               	movf	prodl,w,c
 22729  0044AA  2602               	addwf	??_USBStallEndpoint,f,c
 22730  0044AC  50F4               	movf	prodh,w,c
 22731  0044AE  2203               	addwfc	??_USBStallEndpoint+1,f,c
 22732  0044B0  90D8               	bcf	status,0,c
 22733  0044B2  3602               	rlcf	??_USBStallEndpoint,f,c
 22734  0044B4  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22735  0044B6  90D8               	bcf	status,0,c
 22736  0044B8  3602               	rlcf	??_USBStallEndpoint,f,c
 22737  0044BA  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22738  0044BC  0E04               	movlw	4
 22739  0044BE  2602               	addwf	??_USBStallEndpoint,f,c
 22740  0044C0  0E00               	movlw	0
 22741  0044C2  2203               	addwfc	??_USBStallEndpoint+1,f,c
 22742  0044C4  0E00               	movlw	0
 22743  0044C6  2402               	addwf	??_USBStallEndpoint,w,c
 22744  0044C8  6E07               	movwf	USBStallEndpoint@p,c
 22745  0044CA  0E0D               	movlw	13
 22746  0044CC  2003               	addwfc	??_USBStallEndpoint+1,w,c
 22747  0044CE  6E08               	movwf	USBStallEndpoint@p+1,c
 22748                           
 22749                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 22750  0044D0  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22751  0044D4  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22752  0044D8  0E00               	movlw	0
 22753  0044DA  84DB               	bsf	plusw2,2,c
 22754                           
 22755                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 22756  0044DC  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22757  0044E0  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22758  0044E4  0E00               	movlw	0
 22759  0044E6  8EDB               	bsf	plusw2,7,c
 22760  0044E8  0012               	return	
 22761  0044EA                     __end_of_USBStallEndpoint:
 22762                           	opt stack 0
 22763                           tosu	equ	0xFFF
 22764                           tosh	equ	0xFFE
 22765                           tosl	equ	0xFFD
 22766                           pclath	equ	0xFFA
 22767                           tblptru	equ	0xFF8
 22768                           tblptrh	equ	0xFF7
 22769                           tblptrl	equ	0xFF6
 22770                           tablat	equ	0xFF5
 22771                           prodh	equ	0xFF4
 22772                           prodl	equ	0xFF3
 22773                           intcon	equ	0xFF2
 22774                           intcon2	equ	0xFF1
 22775                           intcon3	equ	0xFF0
 22776                           indf0	equ	0xFEF
 22777                           postinc0	equ	0xFEE
 22778                           fsr0h	equ	0xFEA
 22779                           fsr0l	equ	0xFE9
 22780                           wreg	equ	0xFE8
 22781                           indf1	equ	0xFE7
 22782                           postdec1	equ	0xFE5
 22783                           plusw1	equ	0xFE3
 22784                           fsr1h	equ	0xFE2
 22785                           fsr1l	equ	0xFE1
 22786                           indf2	equ	0xFDF
 22787                           postinc2	equ	0xFDE
 22788                           postdec2	equ	0xFDD
 22789                           plusw2	equ	0xFDB
 22790                           fsr2h	equ	0xFDA
 22791                           fsr2l	equ	0xFD9
 22792                           status	equ	0xFD8
 22793                           
 22794 ;; *************** function _ResetSenseData *****************
 22795 ;; Defined at:
 22796 ;;		line 1373 in file "usb_device_msd.c"
 22797 ;; Parameters:    Size  Location     Type
 22798 ;;		None
 22799 ;; Auto vars:     Size  Location     Type
 22800 ;;		None
 22801 ;; Return value:  Size  Location     Type
 22802 ;;                  1    wreg      void 
 22803 ;; Registers used:
 22804 ;;		wreg, status,2
 22805 ;; Tracked objects:
 22806 ;;		On entry : 0/0
 22807 ;;		On exit  : 0/0
 22808 ;;		Unchanged: 0/0
 22809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22814 ;;Total ram usage:        0 bytes
 22815 ;; Hardware stack levels used:    1
 22816 ;; This function calls:
 22817 ;;		Nothing
 22818 ;; This function is called by:
 22819 ;;		_USBMSDInit
 22820 ;;		_MSDProcessCommandMediaAbsent
 22821 ;;		_MSDProcessCommandMediaPresent
 22822 ;;		_MSDErrorHandler
 22823 ;; This function uses a non-reentrant model
 22824 ;;
 22825                           
 22826                           	psect	text101
 22827  006F44                     __ptext101:
 22828                           	opt stack 0
 22829  006F44                     _ResetSenseData:
 22830                           	opt stack 26
 22831                           
 22832                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 22833                           
 22834                           ;incstack = 0
 22835  006F44  0101               	movlb	1	; () banked
 22836  006F46  911F               	bcf	_gblSenseData& (0+255),0,b
 22837  006F48  931F               	bcf	_gblSenseData& (0+255),1,b
 22838  006F4A  951F               	bcf	_gblSenseData& (0+255),2,b
 22839  006F4C  971F               	bcf	_gblSenseData& (0+255),3,b
 22840  006F4E  891F               	bsf	_gblSenseData& (0+255),4,b
 22841  006F50  8B1F               	bsf	_gblSenseData& (0+255),5,b
 22842  006F52  8D1F               	bsf	_gblSenseData& (0+255),6,b
 22843                           
 22844                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 22845  006F54  9F1F               	bcf	_gblSenseData& (0+255),7,b
 22846                           
 22847                           ; BSR set to: 1
 22848                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 22849  006F56  0E00               	movlw	0
 22850  006F58  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 22851                           
 22852                           ; BSR set to: 1
 22853                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 22854  006F5A  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 22855  006F5C  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 22856  006F5E  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 22857  006F60  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 22858                           
 22859                           ; BSR set to: 1
 22860                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 22861  006F62  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 22862                           
 22863                           ; BSR set to: 1
 22864                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 22865  006F64  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 22866                           
 22867                           ; BSR set to: 1
 22868                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 22869  006F66  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 22870                           
 22871                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 22872  006F68  0E00               	movlw	0
 22873  006F6A  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 22874                           
 22875                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 22876  006F6C  0E00               	movlw	0
 22877  006F6E  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 22878                           
 22879                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 22880  006F70  0E00               	movlw	0
 22881  006F72  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 22882                           
 22883                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 22884  006F74  0E00               	movlw	0
 22885  006F76  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 22886                           
 22887                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 22888  006F78  0E0A               	movlw	10
 22889  006F7A  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 22890                           
 22891                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 22892  006F7C  0E00               	movlw	0
 22893  006F7E  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 22894  006F80  0E00               	movlw	0
 22895  006F82  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 22896  006F84  0E00               	movlw	0
 22897  006F86  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 22898  006F88  0E00               	movlw	0
 22899  006F8A  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 22900                           
 22901                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 22902  006F8C  0E00               	movlw	0
 22903  006F8E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22904                           
 22905                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 22906  006F90  0E00               	movlw	0
 22907  006F92  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22908                           
 22909                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 22910  006F94  0E00               	movlw	0
 22911  006F96  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 22912                           
 22913                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 22914  006F98  0E00               	movlw	0
 22915  006F9A  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 22916                           
 22917                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 22918  006F9C  0E00               	movlw	0
 22919  006F9E  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 22920                           
 22921                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 22922  006FA0  0E00               	movlw	0
 22923  006FA2  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 22924                           
 22925                           ; BSR set to: 1
 22926  006FA4  0012               	return		;funcret
 22927  006FA6                     __end_of_ResetSenseData:
 22928                           	opt stack 0
 22929                           tosu	equ	0xFFF
 22930                           tosh	equ	0xFFE
 22931                           tosl	equ	0xFFD
 22932                           pclath	equ	0xFFA
 22933                           tblptru	equ	0xFF8
 22934                           tblptrh	equ	0xFF7
 22935                           tblptrl	equ	0xFF6
 22936                           tablat	equ	0xFF5
 22937                           prodh	equ	0xFF4
 22938                           prodl	equ	0xFF3
 22939                           intcon	equ	0xFF2
 22940                           intcon2	equ	0xFF1
 22941                           intcon3	equ	0xFF0
 22942                           indf0	equ	0xFEF
 22943                           postinc0	equ	0xFEE
 22944                           fsr0h	equ	0xFEA
 22945                           fsr0l	equ	0xFE9
 22946                           wreg	equ	0xFE8
 22947                           indf1	equ	0xFE7
 22948                           postdec1	equ	0xFE5
 22949                           plusw1	equ	0xFE3
 22950                           fsr1h	equ	0xFE2
 22951                           fsr1l	equ	0xFE1
 22952                           indf2	equ	0xFDF
 22953                           postinc2	equ	0xFDE
 22954                           postdec2	equ	0xFDD
 22955                           plusw2	equ	0xFDB
 22956                           fsr2h	equ	0xFDA
 22957                           fsr2l	equ	0xFD9
 22958                           status	equ	0xFD8
 22959                           
 22960 ;; *************** function _ExternalFlash_SectorRead *****************
 22961 ;; Defined at:
 22962 ;;		line 40 in file "external_flash.c"
 22963 ;; Parameters:    Size  Location     Type
 22964 ;;  config          2   43[COMRAM] PTR void 
 22965 ;;		 -> NULL(0), 
 22966 ;;  sector_addr     4   45[COMRAM] unsigned long 
 22967 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 22968 ;;		 -> msd_buffer(512), 
 22969 ;; Auto vars:     Size  Location     Type
 22970 ;;  page            2   51[COMRAM] unsigned int 
 22971 ;; Return value:  Size  Location     Type
 22972 ;;                  1    wreg      unsigned char 
 22973 ;; Registers used:
 22974 ;;		wreg, status,2, status,0, cstack
 22975 ;; Tracked objects:
 22976 ;;		On entry : 0/0
 22977 ;;		On exit  : 0/0
 22978 ;;		Unchanged: 0/0
 22979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22980 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22981 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22983 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22984 ;;Total ram usage:       10 bytes
 22985 ;; Hardware stack levels used:    1
 22986 ;; Hardware stack levels required when called:    5
 22987 ;; This function calls:
 22988 ;;		_flash_page_read
 22989 ;; This function is called by:
 22990 ;;		_MSDReadHandler
 22991 ;; This function uses a non-reentrant model
 22992 ;;
 22993                           
 22994                           	psect	text102
 22995  007BB2                     __ptext102:
 22996                           	opt stack 0
 22997  007BB2                     _ExternalFlash_SectorRead:
 22998                           	opt stack 20
 22999                           
 23000                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 23001                           
 23002                           ; BSR set to: 1
 23003                           ;incstack = 0
 23004  007BB2  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 23005  007BB6  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 23006                           
 23007                           ;external_flash.c: 45: if(sector_addr >= 8192)
 23008  007BBA  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 23009  007BBC  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 23010  007BBE  E104               	bnz	u7290
 23011  007BC0  0E20               	movlw	32
 23012  007BC2  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 23013  007BC4  A0D8               	btfss	status,0,c
 23014  007BC6  D002               	goto	l1876
 23015  007BC8                     u7290:
 23016                           
 23017                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 23018  007BC8  0E00               	movlw	0
 23019  007BCA  0012               	return	
 23020  007BCC                     l1876:
 23021                           
 23022                           ;external_flash.c: 48: };external_flash.c: 51: flash_page_read(page, buffer);
 23023  007BCC  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 23024  007BD0  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 23025  007BD4  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 23026  007BD8  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 23027  007BDC  ECF2  F03D         	call	_flash_page_read	;wreg free
 23028                           
 23029                           ;external_flash.c: 53: return 1;
 23030  007BE0  0E01               	movlw	1
 23031  007BE2  0012               	return	
 23032  007BE4                     __end_of_ExternalFlash_SectorRead:
 23033                           	opt stack 0
 23034                           tosu	equ	0xFFF
 23035                           tosh	equ	0xFFE
 23036                           tosl	equ	0xFFD
 23037                           pclath	equ	0xFFA
 23038                           tblptru	equ	0xFF8
 23039                           tblptrh	equ	0xFF7
 23040                           tblptrl	equ	0xFF6
 23041                           tablat	equ	0xFF5
 23042                           prodh	equ	0xFF4
 23043                           prodl	equ	0xFF3
 23044                           intcon	equ	0xFF2
 23045                           intcon2	equ	0xFF1
 23046                           intcon3	equ	0xFF0
 23047                           indf0	equ	0xFEF
 23048                           postinc0	equ	0xFEE
 23049                           fsr0h	equ	0xFEA
 23050                           fsr0l	equ	0xFE9
 23051                           wreg	equ	0xFE8
 23052                           indf1	equ	0xFE7
 23053                           postdec1	equ	0xFE5
 23054                           plusw1	equ	0xFE3
 23055                           fsr1h	equ	0xFE2
 23056                           fsr1l	equ	0xFE1
 23057                           indf2	equ	0xFDF
 23058                           postinc2	equ	0xFDE
 23059                           postdec2	equ	0xFDD
 23060                           plusw2	equ	0xFDB
 23061                           fsr2h	equ	0xFDA
 23062                           fsr2l	equ	0xFD9
 23063                           status	equ	0xFD8
 23064                           
 23065 ;; *************** function _flash_page_read *****************
 23066 ;; Defined at:
 23067 ;;		line 419 in file "flash.c"
 23068 ;; Parameters:    Size  Location     Type
 23069 ;;  page            2   39[COMRAM] unsigned int 
 23070 ;;  data            2   41[COMRAM] PTR unsigned char 
 23071 ;;		 -> buffer(512), msd_buffer(512), 
 23072 ;; Auto vars:     Size  Location     Type
 23073 ;;		None
 23074 ;; Return value:  Size  Location     Type
 23075 ;;                  1    wreg      void 
 23076 ;; Registers used:
 23077 ;;		wreg, status,2, status,0, cstack
 23078 ;; Tracked objects:
 23079 ;;		On entry : 0/0
 23080 ;;		On exit  : 0/0
 23081 ;;		Unchanged: 0/0
 23082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23086 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23087 ;;Total ram usage:        4 bytes
 23088 ;; Hardware stack levels used:    1
 23089 ;; Hardware stack levels required when called:    4
 23090 ;; This function calls:
 23091 ;;		__flash_partial_read
 23092 ;;		_spi_set_configuration
 23093 ;; This function is called by:
 23094 ;;		_ExternalFlash_SectorRead
 23095 ;;		_fat_get_format_status
 23096 ;; This function uses a non-reentrant model
 23097 ;;
 23098                           
 23099                           	psect	text103
 23100  007BE4                     __ptext103:
 23101                           	opt stack 0
 23102  007BE4                     _flash_page_read:
 23103                           	opt stack 23
 23104                           
 23105                           ;flash.c: 422: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 23106                           
 23107                           ;incstack = 0
 23108  007BE4  0E00               	movlw	0
 23109  007BE6  EC6C  F021         	call	_spi_set_configuration
 23110                           
 23111                           ;flash.c: 425: _flash_partial_read(page, 0, 512, data);
 23112  007BEA  C028  F014         	movff	flash_page_read@page,__flash_partial_read@page
 23113  007BEE  C029  F015         	movff	flash_page_read@page+1,__flash_partial_read@page+1
 23114  007BF2  0E00               	movlw	0
 23115  007BF4  6E17               	movwf	__flash_partial_read@start+1,c
 23116  007BF6  0E00               	movlw	0
 23117  007BF8  6E16               	movwf	__flash_partial_read@start,c
 23118  007BFA  0E02               	movlw	2
 23119  007BFC  6E19               	movwf	__flash_partial_read@length+1,c
 23120  007BFE  0E00               	movlw	0
 23121  007C00  6E18               	movwf	__flash_partial_read@length,c
 23122  007C02  C02A  F01A         	movff	flash_page_read@data,__flash_partial_read@data
 23123  007C06  C02B  F01B         	movff	flash_page_read@data+1,__flash_partial_read@data+1
 23124  007C0A  EC36  F034         	call	__flash_partial_read	;wreg free
 23125                           
 23126                           ;flash.c: 428: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 23127  007C0E  0E01               	movlw	1
 23128  007C10  EC6C  F021         	call	_spi_set_configuration
 23129  007C14  0012               	return		;funcret
 23130  007C16                     __end_of_flash_page_read:
 23131                           	opt stack 0
 23132                           tosu	equ	0xFFF
 23133                           tosh	equ	0xFFE
 23134                           tosl	equ	0xFFD
 23135                           pclath	equ	0xFFA
 23136                           tblptru	equ	0xFF8
 23137                           tblptrh	equ	0xFF7
 23138                           tblptrl	equ	0xFF6
 23139                           tablat	equ	0xFF5
 23140                           prodh	equ	0xFF4
 23141                           prodl	equ	0xFF3
 23142                           intcon	equ	0xFF2
 23143                           intcon2	equ	0xFF1
 23144                           intcon3	equ	0xFF0
 23145                           indf0	equ	0xFEF
 23146                           postinc0	equ	0xFEE
 23147                           fsr0h	equ	0xFEA
 23148                           fsr0l	equ	0xFE9
 23149                           wreg	equ	0xFE8
 23150                           indf1	equ	0xFE7
 23151                           postdec1	equ	0xFE5
 23152                           plusw1	equ	0xFE3
 23153                           fsr1h	equ	0xFE2
 23154                           fsr1l	equ	0xFE1
 23155                           indf2	equ	0xFDF
 23156                           postinc2	equ	0xFDE
 23157                           postdec2	equ	0xFDD
 23158                           plusw2	equ	0xFDB
 23159                           fsr2h	equ	0xFDA
 23160                           fsr2l	equ	0xFD9
 23161                           status	equ	0xFD8
 23162                           
 23163 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 23164 ;; Defined at:
 23165 ;;		line 993 in file "usb_device_msd.c"
 23166 ;; Parameters:    Size  Location     Type
 23167 ;;  DiExpected      2    0[COMRAM] unsigned int 
 23168 ;; Auto vars:     Size  Location     Type
 23169 ;;		None
 23170 ;; Return value:  Size  Location     Type
 23171 ;;                  1    wreg      void 
 23172 ;; Registers used:
 23173 ;;		wreg, status,2, status,0
 23174 ;; Tracked objects:
 23175 ;;		On entry : 0/0
 23176 ;;		On exit  : 0/0
 23177 ;;		Unchanged: 0/0
 23178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23181 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23182 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23183 ;;Total ram usage:        6 bytes
 23184 ;; Hardware stack levels used:    1
 23185 ;; This function calls:
 23186 ;;		Nothing
 23187 ;; This function is called by:
 23188 ;;		_MSDProcessCommandMediaPresent
 23189 ;; This function uses a non-reentrant model
 23190 ;;
 23191                           
 23192                           	psect	text104
 23193  005F2C                     __ptext104:
 23194                           	opt stack 0
 23195  005F2C                     _MSDComputeDeviceInAndResidue:
 23196                           	opt stack 26
 23197                           
 23198                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 23199                           
 23200                           ;incstack = 0
 23201  005F2C  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 23202  005F2E  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 23203  005F30  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 23204  005F32  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 23205  005F34  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 23206  005F36  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 23207  005F38  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 23208  005F3A  0101               	movlb	1	; () banked
 23209  005F3C  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 23210  005F3E  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 23211  005F40  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 23212  005F42  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 23213  005F44  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 23214  005F46  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 23215  005F48  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 23216  005F4A  B0D8               	btfsc	status,0,c
 23217  005F4C  D00E               	goto	l659
 23218                           
 23219                           ; BSR set to: 1
 23220                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 23221  005F4E  0E00               	movlw	0
 23222  005F50  010D               	movlb	13	; () banked
 23223  005F52  6F88               	movwf	136,b	;volatile
 23224  005F54  0E00               	movlw	0
 23225  005F56  6F89               	movwf	137,b	;volatile
 23226  005F58  0E00               	movlw	0
 23227  005F5A  6F8A               	movwf	138,b	;volatile
 23228  005F5C  0E00               	movlw	0
 23229  005F5E  6F8B               	movwf	139,b	;volatile
 23230                           
 23231                           ; BSR set to: 13
 23232                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 23233  005F60  C108  F0D3         	movff	_gblCBW+8,_TransferLength
 23234  005F64  C109  F0D4         	movff	_gblCBW+9,_TransferLength+1
 23235                           
 23236                           ;usb_device_msd.c: 1002: }
 23237  005F68  0012               	return	
 23238  005F6A                     l659:
 23239                           
 23240                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 23241                           
 23242                           ; BSR set to: 13
 23243  005F6A  0100               	movlb	0	; () banked
 23244  005F6C  51D3               	movf	_TransferLength& (0+255),w,b
 23245  005F6E  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 23246  005F70  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 23247  005F72  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 23248  005F74  B0D8               	btfsc	status,0,c
 23249  005F76  D004               	goto	l661
 23250                           
 23251                           ; BSR set to: 0
 23252                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 23253  005F78  C001  F0D3         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 23254  005F7C  C002  F0D4         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 23255  005F80                     l661:
 23256                           
 23257                           ; BSR set to: 0
 23258                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 23259                           
 23260                           ; BSR set to: 0
 23261  005F80  51D3               	movf	_TransferLength& (0+255),w,b
 23262  005F82  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 23263  005F84  51D4               	movf	(_TransferLength+1)& (0+255),w,b
 23264  005F86  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 23265  005F88  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 23266  005F8A  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 23267  005F8C  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 23268  005F8E  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 23269  005F90  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 23270  005F92  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 23271  005F94  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 23272  005F96  0E00               	movlw	0
 23273  005F98  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 23274  005F9A  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 23275  005F9C  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 23276  005F9E  0101               	movlb	1	; () banked
 23277  005FA0  5108               	movf	(_gblCBW+8)& (0+255),w,b
 23278  005FA2  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 23279  005FA4  010D               	movlb	13	; () banked
 23280  005FA6  6F88               	movwf	136,b	;volatile
 23281  005FA8  0101               	movlb	1	; () banked
 23282  005FAA  5109               	movf	(_gblCBW+9)& (0+255),w,b
 23283  005FAC  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 23284  005FAE  010D               	movlb	13	; () banked
 23285  005FB0  6F89               	movwf	137,b	;volatile
 23286  005FB2  0101               	movlb	1	; () banked
 23287  005FB4  510A               	movf	(_gblCBW+10)& (0+255),w,b
 23288  005FB6  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 23289  005FB8  010D               	movlb	13	; () banked
 23290  005FBA  6F8A               	movwf	138,b	;volatile
 23291  005FBC  0101               	movlb	1	; () banked
 23292  005FBE  510B               	movf	(_gblCBW+11)& (0+255),w,b
 23293  005FC0  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 23294  005FC2  010D               	movlb	13	; () banked
 23295  005FC4  6F8B               	movwf	139,b	;volatile
 23296  005FC6  0012               	return	
 23297  005FC8                     __end_of_MSDComputeDeviceInAndResidue:
 23298                           	opt stack 0
 23299                           tosu	equ	0xFFF
 23300                           tosh	equ	0xFFE
 23301                           tosl	equ	0xFFD
 23302                           pclath	equ	0xFFA
 23303                           tblptru	equ	0xFF8
 23304                           tblptrh	equ	0xFF7
 23305                           tblptrl	equ	0xFF6
 23306                           tablat	equ	0xFF5
 23307                           prodh	equ	0xFF4
 23308                           prodl	equ	0xFF3
 23309                           intcon	equ	0xFF2
 23310                           intcon2	equ	0xFF1
 23311                           intcon3	equ	0xFF0
 23312                           indf0	equ	0xFEF
 23313                           postinc0	equ	0xFEE
 23314                           fsr0h	equ	0xFEA
 23315                           fsr0l	equ	0xFE9
 23316                           wreg	equ	0xFE8
 23317                           indf1	equ	0xFE7
 23318                           postdec1	equ	0xFE5
 23319                           plusw1	equ	0xFE3
 23320                           fsr1h	equ	0xFE2
 23321                           fsr1l	equ	0xFE1
 23322                           indf2	equ	0xFDF
 23323                           postinc2	equ	0xFDE
 23324                           postdec2	equ	0xFDD
 23325                           plusw2	equ	0xFDB
 23326                           fsr2h	equ	0xFDA
 23327                           fsr2l	equ	0xFD9
 23328                           status	equ	0xFD8
 23329                           
 23330 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 23331 ;; Defined at:
 23332 ;;		line 18 in file "external_flash.c"
 23333 ;; Parameters:    Size  Location     Type
 23334 ;;  config          2    0[COMRAM] PTR void 
 23335 ;;		 -> NULL(0), 
 23336 ;; Auto vars:     Size  Location     Type
 23337 ;;		None
 23338 ;; Return value:  Size  Location     Type
 23339 ;;                  2    0[COMRAM] unsigned int 
 23340 ;; Registers used:
 23341 ;;		wreg, status,2
 23342 ;; Tracked objects:
 23343 ;;		On entry : 0/0
 23344 ;;		On exit  : 0/0
 23345 ;;		Unchanged: 0/0
 23346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23351 ;;Total ram usage:        2 bytes
 23352 ;; Hardware stack levels used:    1
 23353 ;; This function calls:
 23354 ;;		Nothing
 23355 ;; This function is called by:
 23356 ;;		_MSDProcessCommandMediaPresent
 23357 ;; This function uses a non-reentrant model
 23358 ;;
 23359                           
 23360                           	psect	text105
 23361  008182                     __ptext105:
 23362                           	opt stack 0
 23363  008182                     _ExternalFlash_SectorSizeRead:
 23364                           	opt stack 26
 23365                           
 23366                           ;external_flash.c: 20: return 512;
 23367                           
 23368                           ; BSR set to: 13
 23369                           ;incstack = 0
 23370  008182  0E02               	movlw	2
 23371  008184  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 23372  008186  0E00               	movlw	0
 23373  008188  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 23374  00818A  0012               	return	
 23375  00818C                     __end_of_ExternalFlash_SectorSizeRead:
 23376                           	opt stack 0
 23377                           tosu	equ	0xFFF
 23378                           tosh	equ	0xFFE
 23379                           tosl	equ	0xFFD
 23380                           pclath	equ	0xFFA
 23381                           tblptru	equ	0xFF8
 23382                           tblptrh	equ	0xFF7
 23383                           tblptrl	equ	0xFF6
 23384                           tablat	equ	0xFF5
 23385                           prodh	equ	0xFF4
 23386                           prodl	equ	0xFF3
 23387                           intcon	equ	0xFF2
 23388                           intcon2	equ	0xFF1
 23389                           intcon3	equ	0xFF0
 23390                           indf0	equ	0xFEF
 23391                           postinc0	equ	0xFEE
 23392                           fsr0h	equ	0xFEA
 23393                           fsr0l	equ	0xFE9
 23394                           wreg	equ	0xFE8
 23395                           indf1	equ	0xFE7
 23396                           postdec1	equ	0xFE5
 23397                           plusw1	equ	0xFE3
 23398                           fsr1h	equ	0xFE2
 23399                           fsr1l	equ	0xFE1
 23400                           indf2	equ	0xFDF
 23401                           postinc2	equ	0xFDE
 23402                           postdec2	equ	0xFDD
 23403                           plusw2	equ	0xFDB
 23404                           fsr2h	equ	0xFDA
 23405                           fsr2l	equ	0xFD9
 23406                           status	equ	0xFD8
 23407                           
 23408 ;; *************** function _ExternalFlash_CapacityRead *****************
 23409 ;; Defined at:
 23410 ;;		line 23 in file "external_flash.c"
 23411 ;; Parameters:    Size  Location     Type
 23412 ;;  config          2    0[COMRAM] PTR void 
 23413 ;;		 -> NULL(0), 
 23414 ;; Auto vars:     Size  Location     Type
 23415 ;;		None
 23416 ;; Return value:  Size  Location     Type
 23417 ;;                  4    0[COMRAM] unsigned long 
 23418 ;; Registers used:
 23419 ;;		wreg, status,2
 23420 ;; Tracked objects:
 23421 ;;		On entry : 0/0
 23422 ;;		On exit  : 0/0
 23423 ;;		Unchanged: 0/0
 23424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23429 ;;Total ram usage:        4 bytes
 23430 ;; Hardware stack levels used:    1
 23431 ;; This function calls:
 23432 ;;		Nothing
 23433 ;; This function is called by:
 23434 ;;		_MSDProcessCommandMediaPresent
 23435 ;; This function uses a non-reentrant model
 23436 ;;
 23437                           
 23438                           	psect	text106
 23439  0080AA                     __ptext106:
 23440                           	opt stack 0
 23441  0080AA                     _ExternalFlash_CapacityRead:
 23442                           	opt stack 26
 23443                           
 23444                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 23445                           
 23446                           ;incstack = 0
 23447  0080AA  0EFF               	movlw	255
 23448  0080AC  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 23449  0080AE  0E1F               	movlw	31
 23450  0080B0  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 23451  0080B2  0E00               	movlw	0
 23452  0080B4  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 23453  0080B6  0E00               	movlw	0
 23454  0080B8  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 23455  0080BA  0012               	return	
 23456  0080BC                     __end_of_ExternalFlash_CapacityRead:
 23457                           	opt stack 0
 23458                           tosu	equ	0xFFF
 23459                           tosh	equ	0xFFE
 23460                           tosl	equ	0xFFD
 23461                           pclath	equ	0xFFA
 23462                           tblptru	equ	0xFF8
 23463                           tblptrh	equ	0xFF7
 23464                           tblptrl	equ	0xFF6
 23465                           tablat	equ	0xFF5
 23466                           prodh	equ	0xFF4
 23467                           prodl	equ	0xFF3
 23468                           intcon	equ	0xFF2
 23469                           intcon2	equ	0xFF1
 23470                           intcon3	equ	0xFF0
 23471                           indf0	equ	0xFEF
 23472                           postinc0	equ	0xFEE
 23473                           fsr0h	equ	0xFEA
 23474                           fsr0l	equ	0xFE9
 23475                           wreg	equ	0xFE8
 23476                           indf1	equ	0xFE7
 23477                           postdec1	equ	0xFE5
 23478                           plusw1	equ	0xFE3
 23479                           fsr1h	equ	0xFE2
 23480                           fsr1l	equ	0xFE1
 23481                           indf2	equ	0xFDF
 23482                           postinc2	equ	0xFDE
 23483                           postdec2	equ	0xFDD
 23484                           plusw2	equ	0xFDB
 23485                           fsr2h	equ	0xFDA
 23486                           fsr2l	equ	0xFD9
 23487                           status	equ	0xFD8
 23488                           
 23489 ;; *************** function _ExternalFlash_MediaInitialize *****************
 23490 ;; Defined at:
 23491 ;;		line 10 in file "external_flash.c"
 23492 ;; Parameters:    Size  Location     Type
 23493 ;;  config          2    0[COMRAM] PTR void 
 23494 ;;		 -> NULL(0), 
 23495 ;; Auto vars:     Size  Location     Type
 23496 ;;		None
 23497 ;; Return value:  Size  Location     Type
 23498 ;;                  2    0[COMRAM] PTR struct .
 23499 ;; Registers used:
 23500 ;;		wreg, status,2, status,0
 23501 ;; Tracked objects:
 23502 ;;		On entry : 0/0
 23503 ;;		On exit  : 0/0
 23504 ;;		Unchanged: 0/0
 23505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23510 ;;Total ram usage:        2 bytes
 23511 ;; Hardware stack levels used:    1
 23512 ;; This function calls:
 23513 ;;		Nothing
 23514 ;; This function is called by:
 23515 ;;		_USBMSDInit
 23516 ;;		_MSDProcessCommand
 23517 ;; This function uses a non-reentrant model
 23518 ;;
 23519                           
 23520                           	psect	text107
 23521  00800C                     __ptext107:
 23522                           	opt stack 0
 23523  00800C                     _ExternalFlash_MediaInitialize:
 23524                           	opt stack 26
 23525                           
 23526                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 23527                           
 23528                           ;incstack = 0
 23529  00800C  0101               	movlb	1	; () banked
 23530  00800E  81D2               	bsf	(_mediaInformation+1)& (0+255),0,b
 23531                           
 23532                           ; BSR set to: 1
 23533                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 23534  008010  0E02               	movlw	2
 23535  008012  6FD4               	movwf	(_mediaInformation+3)& (0+255),b
 23536  008014  0E00               	movlw	0
 23537  008016  6FD3               	movwf	(_mediaInformation+2)& (0+255),b
 23538                           
 23539                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 23540  008018  0E00               	movlw	0
 23541  00801A  6FD1               	movwf	_mediaInformation& (0+255),b
 23542                           
 23543                           ; BSR set to: 1
 23544                           ;external_flash.c: 15: return &mediaInformation;
 23545  00801C  0ED1               	movlw	low _mediaInformation
 23546  00801E  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 23547  008020  0E01               	movlw	high _mediaInformation
 23548  008022  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 23549  008024  0012               	return	
 23550  008026                     __end_of_ExternalFlash_MediaInitialize:
 23551                           	opt stack 0
 23552                           tosu	equ	0xFFF
 23553                           tosh	equ	0xFFE
 23554                           tosl	equ	0xFFD
 23555                           pclath	equ	0xFFA
 23556                           tblptru	equ	0xFF8
 23557                           tblptrh	equ	0xFF7
 23558                           tblptrl	equ	0xFF6
 23559                           tablat	equ	0xFF5
 23560                           prodh	equ	0xFF4
 23561                           prodl	equ	0xFF3
 23562                           intcon	equ	0xFF2
 23563                           intcon2	equ	0xFF1
 23564                           intcon3	equ	0xFF0
 23565                           indf0	equ	0xFEF
 23566                           postinc0	equ	0xFEE
 23567                           fsr0h	equ	0xFEA
 23568                           fsr0l	equ	0xFE9
 23569                           wreg	equ	0xFE8
 23570                           indf1	equ	0xFE7
 23571                           postdec1	equ	0xFE5
 23572                           plusw1	equ	0xFE3
 23573                           fsr1h	equ	0xFE2
 23574                           fsr1l	equ	0xFE1
 23575                           indf2	equ	0xFDF
 23576                           postinc2	equ	0xFDE
 23577                           postdec2	equ	0xFDD
 23578                           plusw2	equ	0xFDB
 23579                           fsr2h	equ	0xFDA
 23580                           fsr2l	equ	0xFD9
 23581                           status	equ	0xFD8
 23582                           
 23583 ;; *************** function _ExternalFlash_MediaDetect *****************
 23584 ;; Defined at:
 23585 ;;		line 29 in file "external_flash.c"
 23586 ;; Parameters:    Size  Location     Type
 23587 ;;  config          2    0[COMRAM] PTR void 
 23588 ;;		 -> NULL(0), 
 23589 ;; Auto vars:     Size  Location     Type
 23590 ;;		None
 23591 ;; Return value:  Size  Location     Type
 23592 ;;                  1    wreg      unsigned char 
 23593 ;; Registers used:
 23594 ;;		wreg
 23595 ;; Tracked objects:
 23596 ;;		On entry : 0/0
 23597 ;;		On exit  : 0/0
 23598 ;;		Unchanged: 0/0
 23599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23604 ;;Total ram usage:        2 bytes
 23605 ;; Hardware stack levels used:    1
 23606 ;; This function calls:
 23607 ;;		Nothing
 23608 ;; This function is called by:
 23609 ;;		_USBMSDInit
 23610 ;;		_MSDProcessCommand
 23611 ;; This function uses a non-reentrant model
 23612 ;;
 23613                           
 23614                           	psect	text108
 23615  008212                     __ptext108:
 23616                           	opt stack 0
 23617  008212                     _ExternalFlash_MediaDetect:
 23618                           	opt stack 26
 23619                           
 23620                           ;external_flash.c: 31: return 1;
 23621                           
 23622                           ; BSR set to: 1
 23623                           ;incstack = 0
 23624  008212  0E01               	movlw	1
 23625  008214  0012               	return	
 23626  008216                     __end_of_ExternalFlash_MediaDetect:
 23627                           	opt stack 0
 23628                           tosu	equ	0xFFF
 23629                           tosh	equ	0xFFE
 23630                           tosl	equ	0xFFD
 23631                           pclath	equ	0xFFA
 23632                           tblptru	equ	0xFF8
 23633                           tblptrh	equ	0xFF7
 23634                           tblptrl	equ	0xFF6
 23635                           tablat	equ	0xFF5
 23636                           prodh	equ	0xFF4
 23637                           prodl	equ	0xFF3
 23638                           intcon	equ	0xFF2
 23639                           intcon2	equ	0xFF1
 23640                           intcon3	equ	0xFF0
 23641                           indf0	equ	0xFEF
 23642                           postinc0	equ	0xFEE
 23643                           fsr0h	equ	0xFEA
 23644                           fsr0l	equ	0xFE9
 23645                           wreg	equ	0xFE8
 23646                           indf1	equ	0xFE7
 23647                           postdec1	equ	0xFE5
 23648                           plusw1	equ	0xFE3
 23649                           fsr1h	equ	0xFE2
 23650                           fsr1l	equ	0xFE1
 23651                           indf2	equ	0xFDF
 23652                           postinc2	equ	0xFDE
 23653                           postdec2	equ	0xFDD
 23654                           plusw2	equ	0xFDB
 23655                           fsr2h	equ	0xFDA
 23656                           fsr2l	equ	0xFD9
 23657                           status	equ	0xFD8
 23658                           
 23659 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 23660 ;; Defined at:
 23661 ;;		line 74 in file "app_device_custom_hid.c"
 23662 ;; Parameters:    Size  Location     Type
 23663 ;;		None
 23664 ;; Auto vars:     Size  Location     Type
 23665 ;;  idx             1    0        unsigned char 
 23666 ;; Return value:  Size  Location     Type
 23667 ;;                  1    wreg      void 
 23668 ;; Registers used:
 23669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23670 ;; Tracked objects:
 23671 ;;		On entry : 0/0
 23672 ;;		On exit  : 0/0
 23673 ;;		Unchanged: 0/0
 23674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23677 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23678 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23679 ;;Total ram usage:        4 bytes
 23680 ;; Hardware stack levels used:    1
 23681 ;; Hardware stack levels required when called:   11
 23682 ;; This function calls:
 23683 ;;		_USBTransferOnePacket
 23684 ;;		_api_parse
 23685 ;;		_api_prepare
 23686 ;; This function is called by:
 23687 ;;		_main
 23688 ;; This function uses a non-reentrant model
 23689 ;;
 23690                           
 23691                           	psect	text109
 23692  005AB8                     __ptext109:
 23693                           	opt stack 0
 23694  005AB8                     _APP_DeviceCustomHIDTasks:
 23695                           	opt stack 19
 23696                           
 23697                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 23698                           
 23699                           ;incstack = 0
 23700  005AB8  0E20               	movlw	32
 23701  005ABA  605F               	cpfslt	_USBDeviceState,c
 23702  005ABC  D001               	goto	l966
 23703  005ABE  0012               	return	
 23704  005AC0                     l966:
 23705                           
 23706                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 23707  005AC0  B265               	btfsc	3941,1,c	;volatile
 23708  005AC2  0012               	return	
 23709                           
 23710                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 23711                           
 23712                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 23713  005AC4  0101               	movlb	1	; () banked
 23714  005AC6  517C               	movf	_USBOutHandle& (0+255),w,b
 23715  005AC8  117D               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 23716  005ACA  B4D8               	btfsc	status,2,c
 23717  005ACC  D006               	goto	u11660
 23718                           
 23719                           ; BSR set to: 1
 23720  005ACE  C17C  FFD9         	movff	_USBOutHandle,fsr2l
 23721  005AD2  C17D  FFDA         	movff	_USBOutHandle+1,fsr2h
 23722  005AD6  BEDF               	btfsc	indf2,7,c
 23723  005AD8  0012               	return	
 23724  005ADA                     u11660:
 23725                           
 23726                           ; BSR set to: 1
 23727                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 23728                           
 23729                           ; BSR set to: 1
 23730  005ADA  517A               	movf	_USBInHandle& (0+255),w,b
 23731  005ADC  117B               	iorwf	(_USBInHandle+1)& (0+255),w,b
 23732  005ADE  B4D8               	btfsc	status,2,c
 23733  005AE0  D006               	goto	u11680
 23734                           
 23735                           ; BSR set to: 1
 23736  005AE2  C17A  FFD9         	movff	_USBInHandle,fsr2l
 23737  005AE6  C17B  FFDA         	movff	_USBInHandle+1,fsr2h
 23738  005AEA  BEDF               	btfsc	indf2,7,c
 23739  005AEC  D020               	goto	l972
 23740  005AEE                     u11680:
 23741                           
 23742                           ; BSR set to: 1
 23743                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 23744                           
 23745                           ; BSR set to: 1
 23746  005AEE  0E90               	movlw	_ReceivedDataBuffer& (0+255)
 23747  005AF0  0100               	movlb	0	; () banked
 23748  005AF2  6FAB               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 23749  005AF4  6BAC               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 23750  005AF6  C0AB  F0A7         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 23751  005AFA  C0AC  F0A8         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 23752  005AFE  0E40               	movlw	_ToSendDataBuffer& (0+255)
 23753  005B00  6FAD               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 23754  005B02  6BAE               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 23755  005B04  C0AD  F0A9         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 23756  005B08  C0AE  F0AA         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 23757  005B0C  ECC7  F01F         	call	_api_prepare	;wreg free
 23758                           
 23759                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 23760  005B10  0E01               	movlw	1
 23761  005B12  6E01               	movwf	USBTransferOnePacket@dir,c
 23762  005B14  0E40               	movlw	low _ToSendDataBuffer
 23763  005B16  6E02               	movwf	USBTransferOnePacket@data,c
 23764  005B18  0E03               	movlw	high _ToSendDataBuffer
 23765  005B1A  6E03               	movwf	USBTransferOnePacket@data+1,c
 23766  005B1C  0E40               	movlw	64
 23767  005B1E  6E04               	movwf	USBTransferOnePacket@len,c
 23768  005B20  0E01               	movlw	1
 23769  005B22  ECFE  F023         	call	_USBTransferOnePacket
 23770  005B26  C001  F17A         	movff	?_USBTransferOnePacket,_USBInHandle
 23771  005B2A  C002  F17B         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 23772  005B2E                     l972:
 23773                           
 23774                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 23775  005B2E  0E90               	movlw	low _ReceivedDataBuffer
 23776  005B30  0100               	movlb	0	; () banked
 23777  005B32  6F93               	movwf	api_parse@inBuffer& (0+255),b
 23778  005B34  0E02               	movlw	high _ReceivedDataBuffer
 23779  005B36  6F94               	movwf	(api_parse@inBuffer+1)& (0+255),b
 23780  005B38  0E40               	movlw	64
 23781  005B3A  6F95               	movwf	api_parse@receivedDataLength& (0+255),b
 23782  005B3C  EC7A  F028         	call	_api_parse	;wreg free
 23783                           
 23784                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 23785  005B40  0E00               	movlw	0
 23786  005B42  6E01               	movwf	USBTransferOnePacket@dir,c
 23787  005B44  0E90               	movlw	low _ReceivedDataBuffer
 23788  005B46  6E02               	movwf	USBTransferOnePacket@data,c
 23789  005B48  0E02               	movlw	high _ReceivedDataBuffer
 23790  005B4A  6E03               	movwf	USBTransferOnePacket@data+1,c
 23791  005B4C  0E40               	movlw	64
 23792  005B4E  6E04               	movwf	USBTransferOnePacket@len,c
 23793  005B50  0E01               	movlw	1
 23794  005B52  ECFE  F023         	call	_USBTransferOnePacket
 23795  005B56  C001  F17C         	movff	?_USBTransferOnePacket,_USBOutHandle
 23796  005B5A  C002  F17D         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 23797  005B5E  0012               	return	
 23798  005B60                     __end_of_APP_DeviceCustomHIDTasks:
 23799                           	opt stack 0
 23800                           tosu	equ	0xFFF
 23801                           tosh	equ	0xFFE
 23802                           tosl	equ	0xFFD
 23803                           pclath	equ	0xFFA
 23804                           tblptru	equ	0xFF8
 23805                           tblptrh	equ	0xFF7
 23806                           tblptrl	equ	0xFF6
 23807                           tablat	equ	0xFF5
 23808                           prodh	equ	0xFF4
 23809                           prodl	equ	0xFF3
 23810                           intcon	equ	0xFF2
 23811                           intcon2	equ	0xFF1
 23812                           intcon3	equ	0xFF0
 23813                           indf0	equ	0xFEF
 23814                           postinc0	equ	0xFEE
 23815                           fsr0h	equ	0xFEA
 23816                           fsr0l	equ	0xFE9
 23817                           wreg	equ	0xFE8
 23818                           indf1	equ	0xFE7
 23819                           postdec1	equ	0xFE5
 23820                           plusw1	equ	0xFE3
 23821                           fsr1h	equ	0xFE2
 23822                           fsr1l	equ	0xFE1
 23823                           indf2	equ	0xFDF
 23824                           postinc2	equ	0xFDE
 23825                           postdec2	equ	0xFDD
 23826                           plusw2	equ	0xFDB
 23827                           fsr2h	equ	0xFDA
 23828                           fsr2l	equ	0xFD9
 23829                           status	equ	0xFD8
 23830                           
 23831 ;; *************** function _api_prepare *****************
 23832 ;; Defined at:
 23833 ;;		line 52 in file "api.c"
 23834 ;; Parameters:    Size  Location     Type
 23835 ;;  inBuffer        2   71[BANK0 ] PTR unsigned char 
 23836 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 23837 ;;  outBuffer       2   73[BANK0 ] PTR unsigned char 
 23838 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23839 ;; Auto vars:     Size  Location     Type
 23840 ;;  command         1   93[COMRAM] enum E6715
 23841 ;; Return value:  Size  Location     Type
 23842 ;;                  1    wreg      void 
 23843 ;; Registers used:
 23844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23845 ;; Tracked objects:
 23846 ;;		On entry : 0/0
 23847 ;;		On exit  : 0/0
 23848 ;;		Unchanged: 0/0
 23849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23850 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23853 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23854 ;;Total ram usage:        5 bytes
 23855 ;; Hardware stack levels used:    1
 23856 ;; Hardware stack levels required when called:    9
 23857 ;; This function calls:
 23858 ;;		__fill_buffer_find_file
 23859 ;;		__fill_buffer_get_bootloader_details
 23860 ;;		__fill_buffer_get_configuration
 23861 ;;		__fill_buffer_get_display
 23862 ;;		__fill_buffer_get_file_details
 23863 ;;		__fill_buffer_get_status
 23864 ;;		__fill_buffer_read_file
 23865 ;;		_flash_is_busy
 23866 ;;		_memcpy
 23867 ;; This function is called by:
 23868 ;;		_main
 23869 ;;		_APP_DeviceCustomHIDTasks
 23870 ;; This function uses a non-reentrant model
 23871 ;;
 23872                           
 23873                           	psect	text110
 23874  003F8E                     __ptext110:
 23875                           	opt stack 0
 23876  003F8E                     _api_prepare:
 23877                           	opt stack 21
 23878                           
 23879                           ;api.c: 54: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 23880                           
 23881                           ;incstack = 0
 23882  003F8E  C0A7  FFD9         	movff	api_prepare@inBuffer,fsr2l
 23883  003F92  C0A8  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 23884  003F96  50DF               	movf	indf2,w,c
 23885  003F98  6E5E               	movwf	api_prepare@command,c
 23886                           
 23887                           ;api.c: 56: if(command>0x7F)
 23888  003F9A  0E7F               	movlw	127
 23889  003F9C  645E               	cpfsgt	api_prepare@command,c
 23890  003F9E  D073               	goto	l2587
 23891                           
 23892                           ;api.c: 57: {;api.c: 61: if(flash_is_busy())
 23893  003FA0  EC37  F040         	call	_flash_is_busy	;wreg free
 23894  003FA4  0900               	iorlw	0
 23895  003FA6  B4D8               	btfsc	status,2,c
 23896  003FA8  D028               	goto	l2581
 23897                           
 23898                           ;api.c: 62: {;api.c: 63: _fill_buffer_get_status(outBuffer);
 23899  003FAA  C0A9  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 23900  003FAE  C0AA  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 23901  003FB2  EC52  F026         	call	__fill_buffer_get_status	;wreg free
 23902                           
 23903                           ;api.c: 64: return;
 23904  003FB6  0012               	return	
 23905  003FB8                     
 23906                           ;api.c: 72: _fill_buffer_get_file_details(inBuffer, outBuffer);
 23907  003FB8  C0A7  F03F         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 23908  003FBC  C0A8  F040         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 23909  003FC0  C0A9  F041         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 23910  003FC4  C0AA  F042         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 23911  003FC8  ECCA  F035         	call	__fill_buffer_get_file_details	;wreg free
 23912                           
 23913                           ;api.c: 73: break;
 23914  003FCC  0012               	return	
 23915  003FCE                     
 23916                           ;api.c: 77: _fill_buffer_find_file(inBuffer, outBuffer);
 23917  003FCE  C0A7  F044         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 23918  003FD2  C0A8  F045         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 23919  003FD6  C0A9  F046         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 23920  003FDA  C0AA  F047         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 23921  003FDE  ECA7  F02E         	call	__fill_buffer_find_file	;wreg free
 23922                           
 23923                           ;api.c: 78: break;
 23924  003FE2  0012               	return	
 23925  003FE4                     
 23926                           ;api.c: 82: _fill_buffer_read_file(inBuffer, outBuffer);
 23927  003FE4  C0A7  F093         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 23928  003FE8  C0A8  F094         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 23929  003FEC  C0A9  F095         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 23930  003FF0  C0AA  F096         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 23931  003FF4  ECEC  F011         	call	__fill_buffer_read_file	;wreg free
 23932                           
 23933                           ;api.c: 84: }
 23934                           
 23935                           ;api.c: 83: break;
 23936  003FF8  0012               	return	
 23937  003FFA                     l2581:
 23938  003FFA  505E               	movf	api_prepare@command,w,c
 23939                           
 23940                           ; Switch size 1, requested type "space"
 23941                           ; Number of cases is 3, Range of values is 128 to 130
 23942                           ; switch strategies available:
 23943                           ; Name         Instructions Cycles
 23944                           ; simple_byte           10     6 (average)
 23945                           ;	Chosen strategy is simple_byte
 23946  003FFC  0A80               	xorlw	128	; case 128
 23947  003FFE  B4D8               	btfsc	status,2,c
 23948  004000  D7DB               	goto	l2582
 23949  004002  0A01               	xorlw	1	; case 129
 23950  004004  B4D8               	btfsc	status,2,c
 23951  004006  D7E3               	goto	l2584
 23952  004008  0A03               	xorlw	3	; case 130
 23953  00400A  A4D8               	btfss	status,2,c
 23954                           
 23955                           ;api.c: 85: }
 23956  00400C  0012               	return	
 23957  00400E  D7EA               	goto	l2585
 23958  004010                     
 23959                           ;api.c: 93: _fill_buffer_get_status(outBuffer);
 23960  004010  C0A9  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 23961  004014  C0AA  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 23962  004018  EC52  F026         	call	__fill_buffer_get_status	;wreg free
 23963                           
 23964                           ;api.c: 94: break;
 23965  00401C  0012               	return	
 23966  00401E                     
 23967                           ;api.c: 98: _fill_buffer_get_display(outBuffer, 0);
 23968  00401E  C0A9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 23969  004022  C0AA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 23970  004026  0E00               	movlw	0
 23971  004028  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 23972  00402A  ECFD  F02B         	call	__fill_buffer_get_display	;wreg free
 23973                           
 23974                           ;api.c: 99: break;
 23975  00402E  0012               	return	
 23976  004030                     
 23977                           ;api.c: 103: _fill_buffer_get_display(outBuffer, 1);
 23978  004030  C0A9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 23979  004034  C0AA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 23980  004038  0E01               	movlw	1
 23981  00403A  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 23982  00403C  ECFD  F02B         	call	__fill_buffer_get_display	;wreg free
 23983                           
 23984                           ;api.c: 104: break;
 23985  004040  0012               	return	
 23986  004042                     
 23987                           ;api.c: 108: _fill_buffer_get_bootloader_details(outBuffer);
 23988  004042  C0A9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 23989  004046  C0AA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 23990  00404A  ECF1  F014         	call	__fill_buffer_get_bootloader_details	;wreg free
 23991                           
 23992                           ;api.c: 109: break;
 23993  00404E  0012               	return	
 23994  004050                     
 23995                           ;api.c: 113: _fill_buffer_get_configuration(outBuffer);
 23996  004050  C0A9  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 23997  004054  C0AA  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 23998  004058  EC47  F02F         	call	__fill_buffer_get_configuration	;wreg free
 23999                           
 24000                           ;api.c: 114: break;
 24001  00405C  0012               	return	
 24002  00405E                     
 24003                           ;api.c: 118: memcpy(outBuffer, inBuffer, 64);
 24004  00405E  C0A9  F001         	movff	api_prepare@outBuffer,memcpy@d1
 24005  004062  C0AA  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 24006  004066  C0A7  F003         	movff	api_prepare@inBuffer,memcpy@s1
 24007  00406A  C0A8  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 24008  00406E  5003               	movf	memcpy@s1,w,c
 24009  004070  1004               	iorwf	memcpy@s1+1,w,c
 24010  004072  A4D8               	btfss	status,2,c
 24011  004074  0E20               	movlw	32
 24012  004076  6E05               	movwf	memcpy@s1+2,c
 24013  004078  0E00               	movlw	0
 24014  00407A  6E07               	movwf	memcpy@n+1,c
 24015  00407C  0E40               	movlw	64
 24016  00407E  6E06               	movwf	memcpy@n,c
 24017  004080  EC3E  F037         	call	_memcpy	;wreg free
 24018                           
 24019                           ;api.c: 120: }
 24020                           
 24021                           ;api.c: 119: break;
 24022  004084  0012               	return	
 24023  004086                     l2587:
 24024  004086  505E               	movf	api_prepare@command,w,c
 24025                           
 24026                           ; Switch size 1, requested type "space"
 24027                           ; Number of cases is 6, Range of values is 16 to 32
 24028                           ; switch strategies available:
 24029                           ; Name         Instructions Cycles
 24030                           ; simple_byte           19    10 (average)
 24031                           ;	Chosen strategy is simple_byte
 24032  004088  0A10               	xorlw	16	; case 16
 24033  00408A  B4D8               	btfsc	status,2,c
 24034  00408C  D7C1               	goto	l2588
 24035  00408E  0A01               	xorlw	1	; case 17
 24036  004090  B4D8               	btfsc	status,2,c
 24037  004092  D7C5               	goto	l2590
 24038  004094  0A03               	xorlw	3	; case 18
 24039  004096  B4D8               	btfsc	status,2,c
 24040  004098  D7CB               	goto	l2591
 24041  00409A  0A01               	xorlw	1	; case 19
 24042  00409C  B4D8               	btfsc	status,2,c
 24043  00409E  D7D1               	goto	l2592
 24044  0040A0  0A07               	xorlw	7	; case 20
 24045  0040A2  B4D8               	btfsc	status,2,c
 24046  0040A4  D7D5               	goto	l2593
 24047  0040A6  0A34               	xorlw	52	; case 32
 24048  0040A8  A4D8               	btfss	status,2,c
 24049  0040AA  0012               	return	
 24050  0040AC  D7D8               	goto	l2594
 24051  0040AE                     __end_of_api_prepare:
 24052                           	opt stack 0
 24053                           tosu	equ	0xFFF
 24054                           tosh	equ	0xFFE
 24055                           tosl	equ	0xFFD
 24056                           pclath	equ	0xFFA
 24057                           tblptru	equ	0xFF8
 24058                           tblptrh	equ	0xFF7
 24059                           tblptrl	equ	0xFF6
 24060                           tablat	equ	0xFF5
 24061                           prodh	equ	0xFF4
 24062                           prodl	equ	0xFF3
 24063                           intcon	equ	0xFF2
 24064                           intcon2	equ	0xFF1
 24065                           intcon3	equ	0xFF0
 24066                           indf0	equ	0xFEF
 24067                           postinc0	equ	0xFEE
 24068                           fsr0h	equ	0xFEA
 24069                           fsr0l	equ	0xFE9
 24070                           wreg	equ	0xFE8
 24071                           indf1	equ	0xFE7
 24072                           postdec1	equ	0xFE5
 24073                           plusw1	equ	0xFE3
 24074                           fsr1h	equ	0xFE2
 24075                           fsr1l	equ	0xFE1
 24076                           indf2	equ	0xFDF
 24077                           postinc2	equ	0xFDE
 24078                           postdec2	equ	0xFDD
 24079                           plusw2	equ	0xFDB
 24080                           fsr2h	equ	0xFDA
 24081                           fsr2l	equ	0xFD9
 24082                           status	equ	0xFD8
 24083                           
 24084 ;; *************** function __fill_buffer_read_file *****************
 24085 ;; Defined at:
 24086 ;;		line 368 in file "api.c"
 24087 ;; Parameters:    Size  Location     Type
 24088 ;;  inBuffer        2   51[BANK0 ] PTR unsigned char 
 24089 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 24090 ;;  outBuffer       2   53[BANK0 ] PTR unsigned char 
 24091 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24092 ;; Auto vars:     Size  Location     Type
 24093 ;;  start           4   67[BANK0 ] unsigned long 
 24094 ;;  data_length     4   63[BANK0 ] unsigned long 
 24095 ;;  file_size       4   59[BANK0 ] unsigned long 
 24096 ;; Return value:  Size  Location     Type
 24097 ;;                  1    wreg      void 
 24098 ;; Registers used:
 24099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24100 ;; Tracked objects:
 24101 ;;		On entry : 0/0
 24102 ;;		On exit  : 0/0
 24103 ;;		Unchanged: 0/0
 24104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24105 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24106 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24107 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24108 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24109 ;;Total ram usage:       20 bytes
 24110 ;; Hardware stack levels used:    1
 24111 ;; Hardware stack levels required when called:    8
 24112 ;; This function calls:
 24113 ;;		_fat_get_file_size
 24114 ;;		_fat_read_from_file
 24115 ;; This function is called by:
 24116 ;;		_api_prepare
 24117 ;; This function uses a non-reentrant model
 24118 ;;
 24119                           
 24120                           	psect	text111
 24121  0023D8                     __ptext111:
 24122                           	opt stack 0
 24123  0023D8                     __fill_buffer_read_file:
 24124                           	opt stack 21
 24125                           
 24126                           ;api.c: 370: uint32_t start;;api.c: 371: uint32_t file_size;;api.c: 372: uint32_t data_l
      +                          ength;;api.c: 375: outBuffer[0] = DATAREQUEST_FIND_FILE;
 24127                           
 24128                           ;incstack = 0
 24129  0023D8  C095  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 24130  0023DC  C096  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 24131  0023E0  0E81               	movlw	129
 24132  0023E2  6EDF               	movwf	indf2,c
 24133                           
 24134                           ;api.c: 378: outBuffer[1] = 0xC125 >> 8;
 24135  0023E4  0100               	movlb	0	; () banked
 24136  0023E6  EE20 F001          	lfsr	2,1
 24137  0023EA  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24138  0023EC  26D9               	addwf	fsr2l,f,c
 24139  0023EE  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24140  0023F0  22DA               	addwfc	fsr2h,f,c
 24141  0023F2  0EC1               	movlw	193
 24142  0023F4  6EDF               	movwf	indf2,c
 24143                           
 24144                           ; BSR set to: 0
 24145                           ;api.c: 379: outBuffer[2] = (uint8_t) 0xC125;
 24146  0023F6  EE20 F002          	lfsr	2,2
 24147  0023FA  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24148  0023FC  26D9               	addwf	fsr2l,f,c
 24149  0023FE  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24150  002400  22DA               	addwfc	fsr2h,f,c
 24151  002402  0E25               	movlw	37
 24152  002404  6EDF               	movwf	indf2,c
 24153                           
 24154                           ; BSR set to: 0
 24155                           ;api.c: 382: outBuffer[3] = inBuffer[1];
 24156  002406  EE20 F001          	lfsr	2,1
 24157  00240A  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24158  00240C  26D9               	addwf	fsr2l,f,c
 24159  00240E  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24160  002410  22DA               	addwfc	fsr2h,f,c
 24161  002412  EE10 F003          	lfsr	1,3
 24162  002416  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24163  002418  26E1               	addwf	fsr1l,f,c
 24164  00241A  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24165  00241C  22E2               	addwfc	fsr1h,f,c
 24166  00241E  CFDF FFE7          	movff	indf2,indf1
 24167                           
 24168                           ; BSR set to: 0
 24169                           ;api.c: 385: outBuffer[4] = inBuffer[1];
 24170  002422  EE20 F001          	lfsr	2,1
 24171  002426  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24172  002428  26D9               	addwf	fsr2l,f,c
 24173  00242A  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24174  00242C  22DA               	addwfc	fsr2h,f,c
 24175  00242E  EE10 F004          	lfsr	1,4
 24176  002432  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24177  002434  26E1               	addwf	fsr1l,f,c
 24178  002436  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24179  002438  22E2               	addwfc	fsr1h,f,c
 24180  00243A  CFDF FFE7          	movff	indf2,indf1
 24181                           
 24182                           ; BSR set to: 0
 24183                           ;api.c: 386: outBuffer[5] = inBuffer[2];
 24184  00243E  EE20 F002          	lfsr	2,2
 24185  002442  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24186  002444  26D9               	addwf	fsr2l,f,c
 24187  002446  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24188  002448  22DA               	addwfc	fsr2h,f,c
 24189  00244A  EE10 F005          	lfsr	1,5
 24190  00244E  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24191  002450  26E1               	addwf	fsr1l,f,c
 24192  002452  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24193  002454  22E2               	addwfc	fsr1h,f,c
 24194  002456  CFDF FFE7          	movff	indf2,indf1
 24195                           
 24196                           ; BSR set to: 0
 24197                           ;api.c: 387: outBuffer[6] = inBuffer[3];
 24198  00245A  EE20 F003          	lfsr	2,3
 24199  00245E  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24200  002460  26D9               	addwf	fsr2l,f,c
 24201  002462  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24202  002464  22DA               	addwfc	fsr2h,f,c
 24203  002466  EE10 F006          	lfsr	1,6
 24204  00246A  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24205  00246C  26E1               	addwf	fsr1l,f,c
 24206  00246E  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24207  002470  22E2               	addwfc	fsr1h,f,c
 24208  002472  CFDF FFE7          	movff	indf2,indf1
 24209                           
 24210                           ; BSR set to: 0
 24211                           ;api.c: 388: outBuffer[7] = inBuffer[4];
 24212  002476  EE20 F004          	lfsr	2,4
 24213  00247A  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24214  00247C  26D9               	addwf	fsr2l,f,c
 24215  00247E  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24216  002480  22DA               	addwfc	fsr2h,f,c
 24217  002482  EE10 F007          	lfsr	1,7
 24218  002486  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24219  002488  26E1               	addwf	fsr1l,f,c
 24220  00248A  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24221  00248C  22E2               	addwfc	fsr1h,f,c
 24222  00248E  CFDF FFE7          	movff	indf2,indf1
 24223                           
 24224                           ; BSR set to: 0
 24225                           ;api.c: 391: start = inBuffer[4];
 24226  002492  EE20 F004          	lfsr	2,4
 24227  002496  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24228  002498  26D9               	addwf	fsr2l,f,c
 24229  00249A  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24230  00249C  22DA               	addwfc	fsr2h,f,c
 24231  00249E  50DF               	movf	indf2,w,c
 24232  0024A0  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 24233  0024A2  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 24234  0024A4  6FA3               	movwf	__fill_buffer_read_file@start& (0+255),b
 24235  0024A6  6BA4               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 24236  0024A8  6BA5               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 24237  0024AA  6BA6               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 24238                           
 24239                           ; BSR set to: 0
 24240                           ;api.c: 392: start <<= 8;
 24241  0024AC  C0A5  F0A6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 24242  0024B0  C0A4  F0A5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 24243  0024B4  C0A3  F0A4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 24244  0024B8  6BA3               	clrf	__fill_buffer_read_file@start& (0+255),b
 24245                           
 24246                           ; BSR set to: 0
 24247                           ;api.c: 393: start |= inBuffer[3];
 24248  0024BA  EE20 F003          	lfsr	2,3
 24249  0024BE  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24250  0024C0  26D9               	addwf	fsr2l,f,c
 24251  0024C2  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24252  0024C4  22DA               	addwfc	fsr2h,f,c
 24253  0024C6  50DF               	movf	indf2,w,c
 24254  0024C8  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 24255  0024CA  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 24256  0024CC  13A3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 24257                           
 24258                           ; BSR set to: 0
 24259                           ;api.c: 394: start <<= 8;
 24260  0024CE  C0A5  F0A6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 24261  0024D2  C0A4  F0A5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 24262  0024D6  C0A3  F0A4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 24263  0024DA  6BA3               	clrf	__fill_buffer_read_file@start& (0+255),b
 24264                           
 24265                           ; BSR set to: 0
 24266                           ;api.c: 395: start |= inBuffer[2];
 24267  0024DC  EE20 F002          	lfsr	2,2
 24268  0024E0  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24269  0024E2  26D9               	addwf	fsr2l,f,c
 24270  0024E4  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24271  0024E6  22DA               	addwfc	fsr2h,f,c
 24272  0024E8  50DF               	movf	indf2,w,c
 24273  0024EA  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 24274  0024EC  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 24275  0024EE  13A3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 24276                           
 24277                           ; BSR set to: 0
 24278                           ;api.c: 396: start <<= 8;
 24279  0024F0  C0A5  F0A6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 24280  0024F4  C0A4  F0A5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 24281  0024F8  C0A3  F0A4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 24282  0024FC  6BA3               	clrf	__fill_buffer_read_file@start& (0+255),b
 24283                           
 24284                           ; BSR set to: 0
 24285                           ;api.c: 397: start |= inBuffer[1];
 24286  0024FE  EE20 F001          	lfsr	2,1
 24287  002502  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24288  002504  26D9               	addwf	fsr2l,f,c
 24289  002506  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24290  002508  22DA               	addwfc	fsr2h,f,c
 24291  00250A  50DF               	movf	indf2,w,c
 24292  00250C  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 24293  00250E  5197               	movf	??__fill_buffer_read_file& (0+255),w,b
 24294  002510  13A3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 24295                           
 24296                           ; BSR set to: 0
 24297                           ;api.c: 400: file_size = fat_get_file_size(inBuffer[1]);
 24298  002512  EE20 F001          	lfsr	2,1
 24299  002516  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24300  002518  26D9               	addwf	fsr2l,f,c
 24301  00251A  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24302  00251C  22DA               	addwfc	fsr2h,f,c
 24303  00251E  50DF               	movf	indf2,w,c
 24304  002520  EC21  F035         	call	_fat_get_file_size
 24305  002524  C030  F09B         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 24306  002528  C031  F09C         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 24307  00252C  C032  F09D         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 24308  002530  C033  F09E         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 24309                           
 24310                           ;api.c: 401: data_length = file_size - start;
 24311  002534  C0A3  F097         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 24312  002538  C0A4  F098         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 24313  00253C  C0A5  F099         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 24314  002540  C0A6  F09A         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 24315  002544  0100               	movlb	0	; () banked
 24316  002546  1F97               	comf	??__fill_buffer_read_file& (0+255),f,b
 24317  002548  1F98               	comf	(??__fill_buffer_read_file+1)& (0+255),f,b
 24318  00254A  1F99               	comf	(??__fill_buffer_read_file+2)& (0+255),f,b
 24319  00254C  1F9A               	comf	(??__fill_buffer_read_file+3)& (0+255),f,b
 24320  00254E  2B97               	incf	??__fill_buffer_read_file& (0+255),f,b
 24321  002550  0E00               	movlw	0
 24322  002552  2398               	addwfc	(??__fill_buffer_read_file+1)& (0+255),f,b
 24323  002554  2399               	addwfc	(??__fill_buffer_read_file+2)& (0+255),f,b
 24324  002556  239A               	addwfc	(??__fill_buffer_read_file+3)& (0+255),f,b
 24325  002558  519B               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 24326  00255A  2597               	addwf	??__fill_buffer_read_file& (0+255),w,b
 24327  00255C  6F9F               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 24328  00255E  519C               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 24329  002560  2198               	addwfc	(??__fill_buffer_read_file+1)& (0+255),w,b
 24330  002562  6FA0               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 24331  002564  519D               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 24332  002566  2199               	addwfc	(??__fill_buffer_read_file+2)& (0+255),w,b
 24333  002568  6FA1               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 24334  00256A  519E               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 24335  00256C  219A               	addwfc	(??__fill_buffer_read_file+3)& (0+255),w,b
 24336  00256E  6FA2               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 24337                           
 24338                           ; BSR set to: 0
 24339                           ;api.c: 402: if(data_length>54)
 24340  002570  51A2               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 24341  002572  11A1               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 24342  002574  11A0               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 24343  002576  E104               	bnz	u10510
 24344  002578  0E37               	movlw	55
 24345  00257A  5D9F               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 24346  00257C  A0D8               	btfss	status,0,c
 24347  00257E  D008               	goto	l2644
 24348  002580                     u10510:
 24349                           
 24350                           ; BSR set to: 0
 24351                           ;api.c: 403: {;api.c: 405: data_length = 54;
 24352  002580  0E36               	movlw	54
 24353  002582  6F9F               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 24354  002584  0E00               	movlw	0
 24355  002586  6FA0               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 24356  002588  0E00               	movlw	0
 24357  00258A  6FA1               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 24358  00258C  0E00               	movlw	0
 24359  00258E  6FA2               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 24360  002590                     l2644:
 24361                           
 24362                           ; BSR set to: 0
 24363                           ;api.c: 406: };api.c: 409: outBuffer[8] = (uint8_t) data_length;
 24364                           
 24365                           ; BSR set to: 0
 24366  002590  EE20 F008          	lfsr	2,8
 24367  002594  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24368  002596  26D9               	addwf	fsr2l,f,c
 24369  002598  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24370  00259A  22DA               	addwfc	fsr2h,f,c
 24371  00259C  C09F  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 24372                           
 24373                           ; BSR set to: 0
 24374                           ;api.c: 412: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 24375  0025A0  C0A3  F060         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 24376  0025A4  C0A4  F061         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 24377  0025A8  C0A5  F062         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 24378  0025AC  C0A6  F063         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 24379  0025B0  C09F  F064         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 24380  0025B4  C0A0  F065         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 24381  0025B8  C0A1  F066         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 24382  0025BC  C0A2  F067         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 24383  0025C0  0E0A               	movlw	10
 24384  0025C2  2595               	addwf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24385  0025C4  6F68               	movwf	fat_read_from_file@data& (0+255),b
 24386  0025C6  0E00               	movlw	0
 24387  0025C8  2196               	addwfc	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24388  0025CA  6F69               	movwf	(fat_read_from_file@data+1)& (0+255),b
 24389  0025CC  EE20 F001          	lfsr	2,1
 24390  0025D0  5193               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 24391  0025D2  26D9               	addwf	fsr2l,f,c
 24392  0025D4  5194               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 24393  0025D6  22DA               	addwfc	fsr2h,f,c
 24394  0025D8  50DF               	movf	indf2,w,c
 24395  0025DA  EC79  F030         	call	_fat_read_from_file
 24396  0025DE  0100               	movlb	0	; () banked
 24397  0025E0  6F97               	movwf	??__fill_buffer_read_file& (0+255),b
 24398  0025E2  EE20 F009          	lfsr	2,9
 24399  0025E6  5195               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 24400  0025E8  26D9               	addwf	fsr2l,f,c
 24401  0025EA  5196               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 24402  0025EC  22DA               	addwfc	fsr2h,f,c
 24403  0025EE  C097  FFDF         	movff	??__fill_buffer_read_file,indf2
 24404                           
 24405                           ; BSR set to: 0
 24406  0025F2  0012               	return		;funcret
 24407  0025F4                     __end_of__fill_buffer_read_file:
 24408                           	opt stack 0
 24409                           tosu	equ	0xFFF
 24410                           tosh	equ	0xFFE
 24411                           tosl	equ	0xFFD
 24412                           pclath	equ	0xFFA
 24413                           tblptru	equ	0xFF8
 24414                           tblptrh	equ	0xFF7
 24415                           tblptrl	equ	0xFF6
 24416                           tablat	equ	0xFF5
 24417                           prodh	equ	0xFF4
 24418                           prodl	equ	0xFF3
 24419                           intcon	equ	0xFF2
 24420                           intcon2	equ	0xFF1
 24421                           intcon3	equ	0xFF0
 24422                           indf0	equ	0xFEF
 24423                           postinc0	equ	0xFEE
 24424                           fsr0h	equ	0xFEA
 24425                           fsr0l	equ	0xFE9
 24426                           wreg	equ	0xFE8
 24427                           indf1	equ	0xFE7
 24428                           postdec1	equ	0xFE5
 24429                           plusw1	equ	0xFE3
 24430                           fsr1h	equ	0xFE2
 24431                           fsr1l	equ	0xFE1
 24432                           indf2	equ	0xFDF
 24433                           postinc2	equ	0xFDE
 24434                           postdec2	equ	0xFDD
 24435                           plusw2	equ	0xFDB
 24436                           fsr2h	equ	0xFDA
 24437                           fsr2l	equ	0xFD9
 24438                           status	equ	0xFD8
 24439                           
 24440 ;; *************** function _fat_read_from_file *****************
 24441 ;; Defined at:
 24442 ;;		line 559 in file "fat16.c"
 24443 ;; Parameters:    Size  Location     Type
 24444 ;;  file_number     1    wreg     unsigned char 
 24445 ;;  start_byte      4    0[BANK0 ] unsigned long 
 24446 ;;  length          4    4[BANK0 ] unsigned long 
 24447 ;;  data            2    8[BANK0 ] PTR unsigned char 
 24448 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24449 ;; Auto vars:     Size  Location     Type
 24450 ;;  file_number     1   14[BANK0 ] unsigned char 
 24451 ;;  root           32   19[BANK0 ] struct .
 24452 ;;  cluster         2   17[BANK0 ] unsigned int 
 24453 ;;  cluster_numb    2   15[BANK0 ] unsigned int 
 24454 ;; Return value:  Size  Location     Type
 24455 ;;                  1    wreg      unsigned char 
 24456 ;; Registers used:
 24457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24458 ;; Tracked objects:
 24459 ;;		On entry : 0/0
 24460 ;;		On exit  : 0/0
 24461 ;;		Unchanged: 0/0
 24462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24463 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24464 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24465 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24466 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24467 ;;Total ram usage:       51 bytes
 24468 ;; Hardware stack levels used:    1
 24469 ;; Hardware stack levels required when called:    7
 24470 ;; This function calls:
 24471 ;;		_fat_get_file_information
 24472 ;;		_fat_read_from_file_fast
 24473 ;; This function is called by:
 24474 ;;		__fill_buffer_read_file
 24475 ;; This function uses a non-reentrant model
 24476 ;;
 24477                           
 24478                           	psect	text112
 24479  0060F2                     __ptext112:
 24480                           	opt stack 0
 24481  0060F2                     _fat_read_from_file:
 24482                           	opt stack 21
 24483                           
 24484                           ; BSR set to: 0
 24485                           ;incstack = 0
 24486                           ;fat_read_from_file@file_number stored from wreg
 24487  0060F2  0100               	movlb	0	; () banked
 24488  0060F4  6F6E               	movwf	fat_read_from_file@file_number& (0+255),b
 24489                           
 24490                           ;fat16.c: 561: rootEntry_t root;;fat16.c: 562: uint16_t cluster;;fat16.c: 563: uint16_t 
      +                          cluster_number;;fat16.c: 566: fat_get_file_information(file_number, &root);
 24491  0060F6  0E73               	movlw	low fat_read_from_file@root
 24492  0060F8  6E37               	movwf	fat_get_file_information@data,c
 24493  0060FA  0E00               	movlw	high fat_read_from_file@root
 24494  0060FC  6E38               	movwf	fat_get_file_information@data+1,c
 24495  0060FE  0100               	movlb	0	; () banked
 24496  006100  516E               	movf	fat_read_from_file@file_number& (0+255),w,b
 24497  006102  ECAD  F034         	call	_fat_get_file_information
 24498                           
 24499                           ;fat16.c: 567: cluster = root.firstCluster;
 24500  006106  C08D  F071         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 24501  00610A  C08E  F072         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 24502                           
 24503                           ;fat16.c: 568: cluster_number = 0;
 24504  00610E  0E00               	movlw	0
 24505  006110  0100               	movlb	0	; () banked
 24506  006112  6F70               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 24507  006114  0E00               	movlw	0
 24508  006116  6F6F               	movwf	fat_read_from_file@cluster_number& (0+255),b
 24509                           
 24510                           ; BSR set to: 0
 24511                           ;fat16.c: 571: if(start_byte+length > root.fileSize)
 24512  006118  5164               	movf	fat_read_from_file@length& (0+255),w,b
 24513  00611A  2560               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 24514  00611C  6F6A               	movwf	??_fat_read_from_file& (0+255),b
 24515  00611E  5165               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 24516  006120  2161               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 24517  006122  6F6B               	movwf	(??_fat_read_from_file+1)& (0+255),b
 24518  006124  5166               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 24519  006126  2162               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 24520  006128  6F6C               	movwf	(??_fat_read_from_file+2)& (0+255),b
 24521  00612A  5167               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 24522  00612C  2163               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 24523  00612E  6F6D               	movwf	(??_fat_read_from_file+3)& (0+255),b
 24524  006130  516A               	movf	??_fat_read_from_file& (0+255),w,b
 24525  006132  5D8F               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 24526  006134  516B               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 24527  006136  5990               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 24528  006138  516C               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 24529  00613A  5991               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 24530  00613C  516D               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 24531  00613E  5992               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 24532  006140  B0D8               	btfsc	status,0,c
 24533  006142  D002               	goto	l2023
 24534                           
 24535                           ; BSR set to: 0
 24536                           ;fat16.c: 572: {;fat16.c: 574: return 0xFF;
 24537  006144  0EFF               	movlw	255
 24538                           
 24539                           ; BSR set to: 0
 24540  006146  0012               	return	
 24541  006148                     l2023:
 24542                           
 24543                           ; BSR set to: 0
 24544                           ;fat16.c: 575: };fat16.c: 578: return fat_read_from_file_fast(start_byte, length, data, 
      +                          &cluster, &cluster_number);
 24545                           
 24546                           ; BSR set to: 0
 24547  006148  C060  F038         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 24548  00614C  C061  F039         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 24549  006150  C062  F03A         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 24550  006154  C063  F03B         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 24551  006158  C064  F03C         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 24552  00615C  C065  F03D         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 24553  006160  C066  F03E         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 24554  006164  C067  F03F         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 24555  006168  C068  F040         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 24556  00616C  C069  F041         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 24557  006170  0E71               	movlw	low fat_read_from_file@cluster
 24558  006172  6E42               	movwf	fat_read_from_file_fast@cluster,c
 24559  006174  0E00               	movlw	high fat_read_from_file@cluster
 24560  006176  6E43               	movwf	fat_read_from_file_fast@cluster+1,c
 24561  006178  0E6F               	movlw	low fat_read_from_file@cluster_number
 24562  00617A  6E44               	movwf	fat_read_from_file_fast@cluster_number,c
 24563  00617C  0E00               	movlw	high fat_read_from_file@cluster_number
 24564  00617E  6E45               	movwf	fat_read_from_file_fast@cluster_number+1,c
 24565  006180  ECC4  F00F         	call	_fat_read_from_file_fast	;wreg free
 24566  006184  0012               	return	
 24567  006186                     __end_of_fat_read_from_file:
 24568                           	opt stack 0
 24569                           tosu	equ	0xFFF
 24570                           tosh	equ	0xFFE
 24571                           tosl	equ	0xFFD
 24572                           pclath	equ	0xFFA
 24573                           tblptru	equ	0xFF8
 24574                           tblptrh	equ	0xFF7
 24575                           tblptrl	equ	0xFF6
 24576                           tablat	equ	0xFF5
 24577                           prodh	equ	0xFF4
 24578                           prodl	equ	0xFF3
 24579                           intcon	equ	0xFF2
 24580                           intcon2	equ	0xFF1
 24581                           intcon3	equ	0xFF0
 24582                           indf0	equ	0xFEF
 24583                           postinc0	equ	0xFEE
 24584                           fsr0h	equ	0xFEA
 24585                           fsr0l	equ	0xFE9
 24586                           wreg	equ	0xFE8
 24587                           indf1	equ	0xFE7
 24588                           postdec1	equ	0xFE5
 24589                           plusw1	equ	0xFE3
 24590                           fsr1h	equ	0xFE2
 24591                           fsr1l	equ	0xFE1
 24592                           indf2	equ	0xFDF
 24593                           postinc2	equ	0xFDE
 24594                           postdec2	equ	0xFDD
 24595                           plusw2	equ	0xFDB
 24596                           fsr2h	equ	0xFDA
 24597                           fsr2l	equ	0xFD9
 24598                           status	equ	0xFD8
 24599                           
 24600 ;; *************** function _fat_read_from_file_fast *****************
 24601 ;; Defined at:
 24602 ;;		line 581 in file "fat16.c"
 24603 ;; Parameters:    Size  Location     Type
 24604 ;;  start_byte      4   55[COMRAM] unsigned long 
 24605 ;;  length          4   59[COMRAM] unsigned long 
 24606 ;;  data            2   63[COMRAM] PTR unsigned char 
 24607 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), RAM(3759), 
 24608 ;;  cluster         2   65[COMRAM] PTR unsigned int 
 24609 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
 24610 ;;  cluster_numb    2   67[COMRAM] PTR unsigned int 
 24611 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
 24612 ;; Auto vars:     Size  Location     Type
 24613 ;;  position        4   89[COMRAM] unsigned long 
 24614 ;;  read_length     2   87[COMRAM] unsigned int 
 24615 ;;  offset          2   85[COMRAM] unsigned int 
 24616 ;;  working_clus    2   83[COMRAM] unsigned int 
 24617 ;;  sector          2   81[COMRAM] unsigned int 
 24618 ;; Return value:  Size  Location     Type
 24619 ;;                  1    wreg      unsigned char 
 24620 ;; Registers used:
 24621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24622 ;; Tracked objects:
 24623 ;;		On entry : 0/0
 24624 ;;		On exit  : 0/0
 24625 ;;		Unchanged: 0/0
 24626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24627 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24628 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24629 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24630 ;;      Totals:        38       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24631 ;;Total ram usage:       38 bytes
 24632 ;; Hardware stack levels used:    1
 24633 ;; Hardware stack levels required when called:    6
 24634 ;; This function calls:
 24635 ;;		__read_fat
 24636 ;;		__sector_from_cluster
 24637 ;;		_flash_partial_read
 24638 ;; This function is called by:
 24639 ;;		_fat_read_from_file
 24640 ;;		__bootloader_verify_file
 24641 ;;		__bootloader_program
 24642 ;; This function uses a non-reentrant model
 24643 ;;
 24644                           
 24645                           	psect	text113
 24646  001F88                     __ptext113:
 24647                           	opt stack 0
 24648  001F88                     _fat_read_from_file_fast:
 24649                           	opt stack 22
 24650                           
 24651                           ;fat16.c: 583: uint32_t position;;fat16.c: 584: uint16_t offset;;fat16.c: 585: uint16_t 
      +                          sector;;fat16.c: 586: uint16_t read_length;;fat16.c: 587: uint16_t working_cluster;;fat1
      +                          6.c: 590: position = (*cluster_number);
 24652                           
 24653                           ;incstack = 0
 24654  001F88  C044  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 24655  001F8C  C045  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 24656  001F90  CFDE F046          	movff	postinc2,??_fat_read_from_file_fast
 24657  001F94  CFDD F047          	movff	postdec2,??_fat_read_from_file_fast+1
 24658  001F98  C046  F05A         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 24659  001F9C  C047  F05B         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 24660  001FA0  6A5C               	clrf	fat_read_from_file_fast@position+2,c
 24661  001FA2  6A5D               	clrf	fat_read_from_file_fast@position+3,c
 24662                           
 24663                           ;fat16.c: 591: position *= 512;
 24664  001FA4  0E09               	movlw	9
 24665  001FA6                     u9275:
 24666  001FA6  90D8               	bcf	status,0,c
 24667  001FA8  365A               	rlcf	fat_read_from_file_fast@position,f,c
 24668  001FAA  365B               	rlcf	fat_read_from_file_fast@position+1,f,c
 24669  001FAC  365C               	rlcf	fat_read_from_file_fast@position+2,f,c
 24670  001FAE  365D               	rlcf	fat_read_from_file_fast@position+3,f,c
 24671  001FB0  2EE8               	decfsz	wreg,f,c
 24672  001FB2  D7F9               	goto	u9275
 24673                           
 24674                           ;fat16.c: 592: if(position > start_byte)
 24675  001FB4  505A               	movf	fat_read_from_file_fast@position,w,c
 24676  001FB6  5C38               	subwf	fat_read_from_file_fast@start_byte,w,c
 24677  001FB8  505B               	movf	fat_read_from_file_fast@position+1,w,c
 24678  001FBA  5839               	subwfb	fat_read_from_file_fast@start_byte+1,w,c
 24679  001FBC  505C               	movf	fat_read_from_file_fast@position+2,w,c
 24680  001FBE  583A               	subwfb	fat_read_from_file_fast@start_byte+2,w,c
 24681  001FC0  505D               	movf	fat_read_from_file_fast@position+3,w,c
 24682  001FC2  583B               	subwfb	fat_read_from_file_fast@start_byte+3,w,c
 24683  001FC4  B0D8               	btfsc	status,0,c
 24684  001FC6  D023               	goto	l2029
 24685                           
 24686                           ;fat16.c: 593: {;fat16.c: 595: return 0xFF;
 24687  001FC8  0EFF               	movlw	255
 24688  001FCA  0012               	return	
 24689  001FCC                     l12085:
 24690                           
 24691                           ;fat16.c: 598: {;fat16.c: 599: (*cluster) = _read_fat((*cluster));
 24692  001FCC  C042  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 24693  001FD0  C043  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 24694  001FD4  CFDE F030          	movff	postinc2,__read_fat@cluster
 24695  001FD8  CFDD F031          	movff	postdec2,__read_fat@cluster+1
 24696  001FDC  ECDD  F03B         	call	__read_fat	;wreg free
 24697  001FE0  C042  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 24698  001FE4  C043  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 24699  001FE8  C030  FFDE         	movff	?__read_fat,postinc2
 24700  001FEC  C031  FFDD         	movff	?__read_fat+1,postdec2
 24701                           
 24702                           ;fat16.c: 600: ++(*cluster_number);
 24703  001FF0  C044  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 24704  001FF4  C045  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 24705  001FF8  2ADE               	incf	postinc2,f,c
 24706  001FFA  0E00               	movlw	0
 24707  001FFC  22DD               	addwfc	postdec2,f,c
 24708                           
 24709                           ;fat16.c: 601: position += 512;
 24710  001FFE  0E00               	movlw	0
 24711  002000  265A               	addwf	fat_read_from_file_fast@position,f,c
 24712  002002  0E02               	movlw	2
 24713  002004  225B               	addwfc	fat_read_from_file_fast@position+1,f,c
 24714  002006  0E00               	movlw	0
 24715  002008  225C               	addwfc	fat_read_from_file_fast@position+2,f,c
 24716  00200A  0E00               	movlw	0
 24717  00200C  225D               	addwfc	fat_read_from_file_fast@position+3,f,c
 24718  00200E                     l2029:
 24719  00200E  C05A  F046         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 24720  002012  C05B  F047         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 24721  002016  C05C  F048         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+2
 24722  00201A  C05D  F049         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+3
 24723  00201E  1E46               	comf	??_fat_read_from_file_fast,f,c
 24724  002020  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 24725  002022  1E48               	comf	??_fat_read_from_file_fast+2,f,c
 24726  002024  1E49               	comf	??_fat_read_from_file_fast+3,f,c
 24727  002026  2A46               	incf	??_fat_read_from_file_fast,f,c
 24728  002028  0E00               	movlw	0
 24729  00202A  2247               	addwfc	??_fat_read_from_file_fast+1,f,c
 24730  00202C  2248               	addwfc	??_fat_read_from_file_fast+2,f,c
 24731  00202E  2249               	addwfc	??_fat_read_from_file_fast+3,f,c
 24732  002030  5038               	movf	fat_read_from_file_fast@start_byte,w,c
 24733  002032  2446               	addwf	??_fat_read_from_file_fast,w,c
 24734  002034  6E4A               	movwf	(??_fat_read_from_file_fast+4)& (0+255),c
 24735  002036  5039               	movf	fat_read_from_file_fast@start_byte+1,w,c
 24736  002038  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 24737  00203A  6E4B               	movwf	(??_fat_read_from_file_fast+5)& (0+255),c
 24738  00203C  503A               	movf	fat_read_from_file_fast@start_byte+2,w,c
 24739  00203E  2048               	addwfc	??_fat_read_from_file_fast+2,w,c
 24740  002040  6E4C               	movwf	(??_fat_read_from_file_fast+6)& (0+255),c
 24741  002042  503B               	movf	fat_read_from_file_fast@start_byte+3,w,c
 24742  002044  2049               	addwfc	??_fat_read_from_file_fast+3,w,c
 24743  002046  6E4D               	movwf	(??_fat_read_from_file_fast+7)& (0+255),c
 24744  002048  504D               	movf	??_fat_read_from_file_fast+7,w,c
 24745  00204A  104C               	iorwf	??_fat_read_from_file_fast+6,w,c
 24746  00204C  E1BF               	bnz	l12085
 24747  00204E  0E02               	movlw	2
 24748  002050  5C4B               	subwf	??_fat_read_from_file_fast+5,w,c
 24749  002052  B0D8               	btfsc	status,0,c
 24750  002054  D7BB               	goto	l2030
 24751                           
 24752                           ;fat16.c: 602: };fat16.c: 606: working_cluster = (*cluster);
 24753  002056  C042  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 24754  00205A  C043  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 24755  00205E  CFDE F054          	movff	postinc2,fat_read_from_file_fast@working_cluster
 24756  002062  CFDD F055          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 24757                           
 24758                           ;fat16.c: 609: offset = start_byte - position;
 24759  002066  C05A  F046         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 24760  00206A  C05B  F047         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 24761  00206E  1E46               	comf	??_fat_read_from_file_fast,f,c
 24762  002070  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 24763  002072  4A46               	infsnz	??_fat_read_from_file_fast,f,c
 24764  002074  2A47               	incf	??_fat_read_from_file_fast+1,f,c
 24765  002076  5038               	movf	fat_read_from_file_fast@start_byte,w,c
 24766  002078  2446               	addwf	??_fat_read_from_file_fast,w,c
 24767  00207A  6E56               	movwf	fat_read_from_file_fast@offset,c
 24768  00207C  5039               	movf	fat_read_from_file_fast@start_byte+1,w,c
 24769  00207E  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 24770  002080  6E57               	movwf	fat_read_from_file_fast@offset+1,c
 24771                           
 24772                           ;fat16.c: 612: position = 0;
 24773  002082  0E00               	movlw	0
 24774  002084  6E5A               	movwf	fat_read_from_file_fast@position,c
 24775  002086  0E00               	movlw	0
 24776  002088  6E5B               	movwf	fat_read_from_file_fast@position+1,c
 24777  00208A  0E00               	movlw	0
 24778  00208C  6E5C               	movwf	fat_read_from_file_fast@position+2,c
 24779  00208E  0E00               	movlw	0
 24780  002090  6E5D               	movwf	fat_read_from_file_fast@position+3,c
 24781                           
 24782                           ;fat16.c: 613: while(position < length)
 24783  002092  D086               	goto	l2032
 24784  002094                     
 24785                           ;fat16.c: 614: {;fat16.c: 616: if(offset==512)
 24786  002094  0E02               	movlw	2
 24787  002096  1857               	xorwf	fat_read_from_file_fast@offset+1,w,c
 24788  002098  1056               	iorwf	fat_read_from_file_fast@offset,w,c
 24789  00209A  A4D8               	btfss	status,2,c
 24790  00209C  D00E               	goto	l2034
 24791                           
 24792                           ;fat16.c: 617: {;fat16.c: 619: working_cluster = _read_fat(working_cluster);
 24793  00209E  C054  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 24794  0020A2  C055  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 24795  0020A6  ECDD  F03B         	call	__read_fat	;wreg free
 24796  0020AA  C030  F054         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 24797  0020AE  C031  F055         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 24798                           
 24799                           ;fat16.c: 620: offset = 0;
 24800  0020B2  0E00               	movlw	0
 24801  0020B4  6E57               	movwf	fat_read_from_file_fast@offset+1,c
 24802  0020B6  0E00               	movlw	0
 24803  0020B8  6E56               	movwf	fat_read_from_file_fast@offset,c
 24804  0020BA                     l2034:
 24805                           
 24806                           ;fat16.c: 621: };fat16.c: 624: sector = _sector_from_cluster(working_cluster);
 24807  0020BA  C054  F001         	movff	fat_read_from_file_fast@working_cluster,__sector_from_cluster@fat_cluster
 24808  0020BE  C055  F002         	movff	fat_read_from_file_fast@working_cluster+1,__sector_from_cluster@fat_cluster+1
 24809  0020C2  EC96  F040         	call	__sector_from_cluster	;wreg free
 24810  0020C6  C001  F052         	movff	?__sector_from_cluster,fat_read_from_file_fast@sector
 24811  0020CA  C002  F053         	movff	?__sector_from_cluster+1,fat_read_from_file_fast@sector+1
 24812                           
 24813                           ;fat16.c: 627: read_length = 512 - offset;
 24814  0020CE  C056  F046         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 24815  0020D2  C057  F047         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 24816  0020D6  1E46               	comf	??_fat_read_from_file_fast,f,c
 24817  0020D8  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 24818  0020DA  4A46               	infsnz	??_fat_read_from_file_fast,f,c
 24819  0020DC  2A47               	incf	??_fat_read_from_file_fast+1,f,c
 24820  0020DE  0E00               	movlw	0
 24821  0020E0  2446               	addwf	??_fat_read_from_file_fast,w,c
 24822  0020E2  6E58               	movwf	fat_read_from_file_fast@read_length,c
 24823  0020E4  0E02               	movlw	2
 24824  0020E6  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 24825  0020E8  6E59               	movwf	fat_read_from_file_fast@read_length+1,c
 24826                           
 24827                           ;fat16.c: 628: if(read_length > (length-position))
 24828  0020EA  5058               	movf	fat_read_from_file_fast@read_length,w,c
 24829  0020EC  6E46               	movwf	??_fat_read_from_file_fast& (0+255),c
 24830  0020EE  5059               	movf	fat_read_from_file_fast@read_length+1,w,c
 24831  0020F0  6E47               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
 24832  0020F2  6A48               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
 24833  0020F4  6A49               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
 24834  0020F6  C05A  F04A         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 24835  0020FA  C05B  F04B         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 24836  0020FE  C05C  F04C         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 24837  002102  C05D  F04D         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 24838  002106  1E4A               	comf	??_fat_read_from_file_fast+4,f,c
 24839  002108  1E4B               	comf	??_fat_read_from_file_fast+5,f,c
 24840  00210A  1E4C               	comf	??_fat_read_from_file_fast+6,f,c
 24841  00210C  1E4D               	comf	??_fat_read_from_file_fast+7,f,c
 24842  00210E  2A4A               	incf	??_fat_read_from_file_fast+4,f,c
 24843  002110  0E00               	movlw	0
 24844  002112  224B               	addwfc	??_fat_read_from_file_fast+5,f,c
 24845  002114  224C               	addwfc	??_fat_read_from_file_fast+6,f,c
 24846  002116  224D               	addwfc	??_fat_read_from_file_fast+7,f,c
 24847  002118  503C               	movf	fat_read_from_file_fast@length,w,c
 24848  00211A  244A               	addwf	??_fat_read_from_file_fast+4,w,c
 24849  00211C  6E4E               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
 24850  00211E  503D               	movf	fat_read_from_file_fast@length+1,w,c
 24851  002120  204B               	addwfc	??_fat_read_from_file_fast+5,w,c
 24852  002122  6E4F               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
 24853  002124  503E               	movf	fat_read_from_file_fast@length+2,w,c
 24854  002126  204C               	addwfc	??_fat_read_from_file_fast+6,w,c
 24855  002128  6E50               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
 24856  00212A  503F               	movf	fat_read_from_file_fast@length+3,w,c
 24857  00212C  204D               	addwfc	??_fat_read_from_file_fast+7,w,c
 24858  00212E  6E51               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
 24859  002130  5046               	movf	??_fat_read_from_file_fast,w,c
 24860  002132  5C4E               	subwf	??_fat_read_from_file_fast+8,w,c
 24861  002134  5047               	movf	??_fat_read_from_file_fast+1,w,c
 24862  002136  584F               	subwfb	??_fat_read_from_file_fast+9,w,c
 24863  002138  5048               	movf	??_fat_read_from_file_fast+2,w,c
 24864  00213A  5850               	subwfb	??_fat_read_from_file_fast+10,w,c
 24865  00213C  5049               	movf	??_fat_read_from_file_fast+3,w,c
 24866  00213E  5851               	subwfb	??_fat_read_from_file_fast+11,w,c
 24867  002140  B0D8               	btfsc	status,0,c
 24868  002142  D00E               	goto	l2035
 24869                           
 24870                           ;fat16.c: 629: {;fat16.c: 631: read_length = length - position;
 24871  002144  C05A  F046         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 24872  002148  C05B  F047         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 24873  00214C  1E46               	comf	??_fat_read_from_file_fast,f,c
 24874  00214E  1E47               	comf	??_fat_read_from_file_fast+1,f,c
 24875  002150  4A46               	infsnz	??_fat_read_from_file_fast,f,c
 24876  002152  2A47               	incf	??_fat_read_from_file_fast+1,f,c
 24877  002154  503C               	movf	fat_read_from_file_fast@length,w,c
 24878  002156  2446               	addwf	??_fat_read_from_file_fast,w,c
 24879  002158  6E58               	movwf	fat_read_from_file_fast@read_length,c
 24880  00215A  503D               	movf	fat_read_from_file_fast@length+1,w,c
 24881  00215C  2047               	addwfc	??_fat_read_from_file_fast+1,w,c
 24882  00215E  6E59               	movwf	fat_read_from_file_fast@read_length+1,c
 24883  002160                     l2035:
 24884                           
 24885                           ;fat16.c: 632: };fat16.c: 635: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 24886  002160  C052  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 24887  002164  C053  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 24888  002168  C056  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 24889  00216C  C057  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 24890  002170  C058  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 24891  002174  C059  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 24892  002178  505A               	movf	fat_read_from_file_fast@position,w,c
 24893  00217A  2440               	addwf	fat_read_from_file_fast@data,w,c
 24894  00217C  6E2E               	movwf	flash_partial_read@data,c
 24895  00217E  505B               	movf	fat_read_from_file_fast@position+1,w,c
 24896  002180  2041               	addwfc	fat_read_from_file_fast@data+1,w,c
 24897  002182  6E2F               	movwf	flash_partial_read@data+1,c
 24898  002184  EC24  F03E         	call	_flash_partial_read	;wreg free
 24899                           
 24900                           ;fat16.c: 638: position += read_length;
 24901  002188  5058               	movf	fat_read_from_file_fast@read_length,w,c
 24902  00218A  265A               	addwf	fat_read_from_file_fast@position,f,c
 24903  00218C  5059               	movf	fat_read_from_file_fast@read_length+1,w,c
 24904  00218E  225B               	addwfc	fat_read_from_file_fast@position+1,f,c
 24905  002190  0E00               	movlw	0
 24906  002192  225C               	addwfc	fat_read_from_file_fast@position+2,f,c
 24907  002194  0E00               	movlw	0
 24908  002196  225D               	addwfc	fat_read_from_file_fast@position+3,f,c
 24909                           
 24910                           ;fat16.c: 639: offset += read_length;
 24911  002198  5058               	movf	fat_read_from_file_fast@read_length,w,c
 24912  00219A  2656               	addwf	fat_read_from_file_fast@offset,f,c
 24913  00219C  5059               	movf	fat_read_from_file_fast@read_length+1,w,c
 24914  00219E  2257               	addwfc	fat_read_from_file_fast@offset+1,f,c
 24915  0021A0                     l2032:
 24916  0021A0  503C               	movf	fat_read_from_file_fast@length,w,c
 24917  0021A2  5C5A               	subwf	fat_read_from_file_fast@position,w,c
 24918  0021A4  503D               	movf	fat_read_from_file_fast@length+1,w,c
 24919  0021A6  585B               	subwfb	fat_read_from_file_fast@position+1,w,c
 24920  0021A8  503E               	movf	fat_read_from_file_fast@length+2,w,c
 24921  0021AA  585C               	subwfb	fat_read_from_file_fast@position+2,w,c
 24922  0021AC  503F               	movf	fat_read_from_file_fast@length+3,w,c
 24923  0021AE  585D               	subwfb	fat_read_from_file_fast@position+3,w,c
 24924  0021B0  A0D8               	btfss	status,0,c
 24925  0021B2  D770               	goto	l2033
 24926                           
 24927                           ;fat16.c: 640: };fat16.c: 643: return 0x00;
 24928  0021B4  0E00               	movlw	0
 24929  0021B6  0012               	return	
 24930  0021B8                     __end_of_fat_read_from_file_fast:
 24931                           	opt stack 0
 24932                           tosu	equ	0xFFF
 24933                           tosh	equ	0xFFE
 24934                           tosl	equ	0xFFD
 24935                           pclath	equ	0xFFA
 24936                           tblptru	equ	0xFF8
 24937                           tblptrh	equ	0xFF7
 24938                           tblptrl	equ	0xFF6
 24939                           tablat	equ	0xFF5
 24940                           prodh	equ	0xFF4
 24941                           prodl	equ	0xFF3
 24942                           intcon	equ	0xFF2
 24943                           intcon2	equ	0xFF1
 24944                           intcon3	equ	0xFF0
 24945                           indf0	equ	0xFEF
 24946                           postinc0	equ	0xFEE
 24947                           fsr0h	equ	0xFEA
 24948                           fsr0l	equ	0xFE9
 24949                           wreg	equ	0xFE8
 24950                           indf1	equ	0xFE7
 24951                           postdec1	equ	0xFE5
 24952                           plusw1	equ	0xFE3
 24953                           fsr1h	equ	0xFE2
 24954                           fsr1l	equ	0xFE1
 24955                           indf2	equ	0xFDF
 24956                           postinc2	equ	0xFDE
 24957                           postdec2	equ	0xFDD
 24958                           plusw2	equ	0xFDB
 24959                           fsr2h	equ	0xFDA
 24960                           fsr2l	equ	0xFD9
 24961                           status	equ	0xFD8
 24962                           
 24963 ;; *************** function _fat_get_file_size *****************
 24964 ;; Defined at:
 24965 ;;		line 294 in file "fat16.c"
 24966 ;; Parameters:    Size  Location     Type
 24967 ;;  file_number     1    wreg     unsigned char 
 24968 ;; Auto vars:     Size  Location     Type
 24969 ;;  file_number     1   60[COMRAM] unsigned char 
 24970 ;;  file_size       4   54[COMRAM] unsigned long 
 24971 ;;  offset          2   58[COMRAM] unsigned int 
 24972 ;;  sector          2   52[COMRAM] unsigned int 
 24973 ;; Return value:  Size  Location     Type
 24974 ;;                  4   47[COMRAM] unsigned long 
 24975 ;; Registers used:
 24976 ;;		wreg, status,2, status,0, cstack
 24977 ;; Tracked objects:
 24978 ;;		On entry : 0/0
 24979 ;;		On exit  : 0/0
 24980 ;;		Unchanged: 0/0
 24981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24983 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24985 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24986 ;;Total ram usage:       14 bytes
 24987 ;; Hardware stack levels used:    1
 24988 ;; Hardware stack levels required when called:    5
 24989 ;; This function calls:
 24990 ;;		_flash_partial_read
 24991 ;; This function is called by:
 24992 ;;		__bootloader_find_file
 24993 ;;		__bootloader_verify_file
 24994 ;;		__fill_buffer_read_file
 24995 ;; This function uses a non-reentrant model
 24996 ;;
 24997                           
 24998                           	psect	text114
 24999  006A42                     __ptext114:
 25000                           	opt stack 0
 25001  006A42                     _fat_get_file_size:
 25002                           	opt stack 23
 25003                           
 25004                           ;incstack = 0
 25005                           ;fat_get_file_size@file_number stored from wreg
 25006  006A42  6E3D               	movwf	fat_get_file_size@file_number,c
 25007                           
 25008                           ;fat16.c: 296: uint16_t sector;;fat16.c: 297: uint16_t offset;;fat16.c: 298: uint32_t fi
      +                          le_size;;fat16.c: 299: sector = file_number >> 4;
 25009  006A44  C03D  F034         	movff	fat_get_file_size@file_number,??_fat_get_file_size
 25010  006A48  3A34               	swapf	??_fat_get_file_size,f,c
 25011  006A4A  0E0F               	movlw	15
 25012  006A4C  1634               	andwf	??_fat_get_file_size,f,c
 25013  006A4E  5034               	movf	??_fat_get_file_size,w,c
 25014  006A50  6E35               	movwf	fat_get_file_size@sector,c
 25015  006A52  6A36               	clrf	fat_get_file_size@sector+1,c
 25016                           
 25017                           ;fat16.c: 300: sector += 34;
 25018  006A54  0E22               	movlw	34
 25019  006A56  2635               	addwf	fat_get_file_size@sector,f,c
 25020  006A58  0E00               	movlw	0
 25021  006A5A  2236               	addwfc	fat_get_file_size@sector+1,f,c
 25022                           
 25023                           ;fat16.c: 301: offset = file_number;
 25024  006A5C  C03D  F03B         	movff	fat_get_file_size@file_number,fat_get_file_size@offset
 25025  006A60  6A3C               	clrf	fat_get_file_size@offset+1,c
 25026                           
 25027                           ;fat16.c: 302: offset <<= 5;
 25028  006A62  0E05               	movlw	5
 25029  006A64                     u9555:
 25030  006A64  90D8               	bcf	status,0,c
 25031  006A66  363B               	rlcf	fat_get_file_size@offset,f,c
 25032  006A68  363C               	rlcf	fat_get_file_size@offset+1,f,c
 25033  006A6A  2EE8               	decfsz	wreg,f,c
 25034  006A6C  D7FB               	goto	u9555
 25035                           
 25036                           ;fat16.c: 303: offset &= 0b111111111;
 25037  006A6E  0EFF               	movlw	255
 25038  006A70  163B               	andwf	fat_get_file_size@offset,f,c
 25039  006A72  0E01               	movlw	1
 25040  006A74  163C               	andwf	fat_get_file_size@offset+1,f,c
 25041                           
 25042                           ;fat16.c: 304: offset += 28;
 25043  006A76  0E1C               	movlw	28
 25044  006A78  263B               	addwf	fat_get_file_size@offset,f,c
 25045  006A7A  0E00               	movlw	0
 25046  006A7C  223C               	addwfc	fat_get_file_size@offset+1,f,c
 25047                           
 25048                           ;fat16.c: 305: flash_partial_read(sector, offset, 4, &file_size);
 25049  006A7E  C035  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 25050  006A82  C036  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 25051  006A86  C03B  F02A         	movff	fat_get_file_size@offset,flash_partial_read@start
 25052  006A8A  C03C  F02B         	movff	fat_get_file_size@offset+1,flash_partial_read@start+1
 25053  006A8E  0E00               	movlw	0
 25054  006A90  6E2D               	movwf	flash_partial_read@length+1,c
 25055  006A92  0E04               	movlw	4
 25056  006A94  6E2C               	movwf	flash_partial_read@length,c
 25057  006A96  0E37               	movlw	low fat_get_file_size@file_size
 25058  006A98  6E2E               	movwf	flash_partial_read@data,c
 25059  006A9A  0E00               	movlw	high fat_get_file_size@file_size
 25060  006A9C  6E2F               	movwf	flash_partial_read@data+1,c
 25061  006A9E  EC24  F03E         	call	_flash_partial_read	;wreg free
 25062                           
 25063                           ;fat16.c: 306: return file_size;
 25064  006AA2  C037  F030         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 25065  006AA6  C038  F031         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 25066  006AAA  C039  F032         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 25067  006AAE  C03A  F033         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 25068  006AB2  0012               	return	
 25069  006AB4                     __end_of_fat_get_file_size:
 25070                           	opt stack 0
 25071                           tosu	equ	0xFFF
 25072                           tosh	equ	0xFFE
 25073                           tosl	equ	0xFFD
 25074                           pclath	equ	0xFFA
 25075                           tblptru	equ	0xFF8
 25076                           tblptrh	equ	0xFF7
 25077                           tblptrl	equ	0xFF6
 25078                           tablat	equ	0xFF5
 25079                           prodh	equ	0xFF4
 25080                           prodl	equ	0xFF3
 25081                           intcon	equ	0xFF2
 25082                           intcon2	equ	0xFF1
 25083                           intcon3	equ	0xFF0
 25084                           indf0	equ	0xFEF
 25085                           postinc0	equ	0xFEE
 25086                           fsr0h	equ	0xFEA
 25087                           fsr0l	equ	0xFE9
 25088                           wreg	equ	0xFE8
 25089                           indf1	equ	0xFE7
 25090                           postdec1	equ	0xFE5
 25091                           plusw1	equ	0xFE3
 25092                           fsr1h	equ	0xFE2
 25093                           fsr1l	equ	0xFE1
 25094                           indf2	equ	0xFDF
 25095                           postinc2	equ	0xFDE
 25096                           postdec2	equ	0xFDD
 25097                           plusw2	equ	0xFDB
 25098                           fsr2h	equ	0xFDA
 25099                           fsr2l	equ	0xFD9
 25100                           status	equ	0xFD8
 25101                           
 25102 ;; *************** function __fill_buffer_get_status *****************
 25103 ;; Defined at:
 25104 ;;		line 176 in file "api.c"
 25105 ;; Parameters:    Size  Location     Type
 25106 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 25107 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25108 ;; Auto vars:     Size  Location     Type
 25109 ;;		None
 25110 ;; Return value:  Size  Location     Type
 25111 ;;                  1    wreg      void 
 25112 ;; Registers used:
 25113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25114 ;; Tracked objects:
 25115 ;;		On entry : 0/0
 25116 ;;		On exit  : 0/0
 25117 ;;		Unchanged: 0/0
 25118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25123 ;;Total ram usage:        2 bytes
 25124 ;; Hardware stack levels used:    1
 25125 ;; Hardware stack levels required when called:    4
 25126 ;; This function calls:
 25127 ;;		_flash_is_busy
 25128 ;;		_ui_get_status
 25129 ;; This function is called by:
 25130 ;;		_api_prepare
 25131 ;; This function uses a non-reentrant model
 25132 ;;
 25133                           
 25134                           	psect	text115
 25135  004CA4                     __ptext115:
 25136                           	opt stack 0
 25137  004CA4                     __fill_buffer_get_status:
 25138                           	opt stack 25
 25139                           
 25140                           ;api.c: 179: outBuffer[0] = DATAREQUEST_GET_STATUS;
 25141                           
 25142                           ;incstack = 0
 25143  004CA4  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 25144  004CA8  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 25145  004CAC  0E10               	movlw	16
 25146  004CAE  6EDF               	movwf	indf2,c
 25147                           
 25148                           ;api.c: 182: outBuffer[1] = 0xC125 >> 8;
 25149  004CB0  EE20 F001          	lfsr	2,1
 25150  004CB4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25151  004CB6  26D9               	addwf	fsr2l,f,c
 25152  004CB8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25153  004CBA  22DA               	addwfc	fsr2h,f,c
 25154  004CBC  0EC1               	movlw	193
 25155  004CBE  6EDF               	movwf	indf2,c
 25156                           
 25157                           ;api.c: 183: outBuffer[2] = (uint8_t) 0xC125;
 25158  004CC0  EE20 F002          	lfsr	2,2
 25159  004CC4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25160  004CC6  26D9               	addwf	fsr2l,f,c
 25161  004CC8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25162  004CCA  22DA               	addwfc	fsr2h,f,c
 25163  004CCC  0E25               	movlw	37
 25164  004CCE  6EDF               	movwf	indf2,c
 25165                           
 25166                           ;api.c: 187: outBuffer[3] = (uint8_t) flash_is_busy();
 25167  004CD0  EE20 F003          	lfsr	2,3
 25168  004CD4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25169  004CD6  26D9               	addwf	fsr2l,f,c
 25170  004CD8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25171  004CDA  22DA               	addwfc	fsr2h,f,c
 25172  004CDC  EC37  F040         	call	_flash_is_busy	;wreg free
 25173  004CE0  6EDF               	movwf	indf2,c
 25174                           
 25175                           ;api.c: 190: outBuffer[4] = 0x00;
 25176  004CE2  EE20 F004          	lfsr	2,4
 25177  004CE6  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25178  004CE8  26D9               	addwf	fsr2l,f,c
 25179  004CEA  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25180  004CEC  22DA               	addwfc	fsr2h,f,c
 25181  004CEE  0E00               	movlw	0
 25182  004CF0  6EDF               	movwf	indf2,c
 25183                           
 25184                           ;api.c: 191: outBuffer[5] = 0x01;
 25185  004CF2  EE20 F005          	lfsr	2,5
 25186  004CF6  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25187  004CF8  26D9               	addwf	fsr2l,f,c
 25188  004CFA  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25189  004CFC  22DA               	addwfc	fsr2h,f,c
 25190  004CFE  0E01               	movlw	1
 25191  004D00  6EDF               	movwf	indf2,c
 25192                           
 25193                           ;api.c: 192: outBuffer[6] = 0x00;
 25194  004D02  EE20 F006          	lfsr	2,6
 25195  004D06  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25196  004D08  26D9               	addwf	fsr2l,f,c
 25197  004D0A  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25198  004D0C  22DA               	addwfc	fsr2h,f,c
 25199  004D0E  0E00               	movlw	0
 25200  004D10  6EDF               	movwf	indf2,c
 25201                           
 25202                           ;api.c: 195: outBuffer[7] = ui_get_status();
 25203  004D12  EE20 F007          	lfsr	2,7
 25204  004D16  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25205  004D18  26D9               	addwf	fsr2l,f,c
 25206  004D1A  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25207  004D1C  22DA               	addwfc	fsr2h,f,c
 25208  004D1E  EC01  F041         	call	_ui_get_status	;wreg free
 25209  004D22  6EDF               	movwf	indf2,c
 25210                           
 25211                           ;api.c: 198: outBuffer[8] = os.encoderCount;
 25212  004D24  EE20 F008          	lfsr	2,8
 25213  004D28  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25214  004D2A  26D9               	addwf	fsr2l,f,c
 25215  004D2C  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25216  004D2E  22DA               	addwfc	fsr2h,f,c
 25217  004D30  C0B9  FFDF         	movff	_os,indf2	;volatile
 25218                           
 25219                           ;api.c: 199: outBuffer[9] = os.buttonCount;
 25220  004D34  EE20 F009          	lfsr	2,9
 25221  004D38  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25222  004D3A  26D9               	addwf	fsr2l,f,c
 25223  004D3C  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25224  004D3E  22DA               	addwfc	fsr2h,f,c
 25225  004D40  C0BA  FFDF         	movff	_os+1,indf2	;volatile
 25226                           
 25227                           ;api.c: 200: outBuffer[10] = os.timeSlot;
 25228  004D44  EE20 F00A          	lfsr	2,10
 25229  004D48  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25230  004D4A  26D9               	addwf	fsr2l,f,c
 25231  004D4C  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25232  004D4E  22DA               	addwfc	fsr2h,f,c
 25233  004D50  C0BB  FFDF         	movff	_os+2,indf2	;volatile
 25234                           
 25235                           ;api.c: 201: outBuffer[11] = os.done;
 25236  004D54  EE20 F00B          	lfsr	2,11
 25237  004D58  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25238  004D5A  26D9               	addwf	fsr2l,f,c
 25239  004D5C  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25240  004D5E  22DA               	addwfc	fsr2h,f,c
 25241  004D60  C0BC  FFDF         	movff	_os+3,indf2	;volatile
 25242                           
 25243                           ;api.c: 202: outBuffer[12] = os.bootloader_mode;
 25244  004D64  EE20 F00C          	lfsr	2,12
 25245  004D68  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25246  004D6A  26D9               	addwf	fsr2l,f,c
 25247  004D6C  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25248  004D6E  22DA               	addwfc	fsr2h,f,c
 25249  004D70  C0BD  FFDF         	movff	_os+4,indf2	;volatile
 25250                           
 25251                           ;api.c: 203: outBuffer[13] = os.display_mode;
 25252  004D74  EE20 F00D          	lfsr	2,13
 25253  004D78  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25254  004D7A  26D9               	addwf	fsr2l,f,c
 25255  004D7C  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25256  004D7E  22DA               	addwfc	fsr2h,f,c
 25257  004D80  C0BE  FFDF         	movff	_os+5,indf2	;volatile
 25258  004D84  0012               	return		;funcret
 25259  004D86                     __end_of__fill_buffer_get_status:
 25260                           	opt stack 0
 25261                           tosu	equ	0xFFF
 25262                           tosh	equ	0xFFE
 25263                           tosl	equ	0xFFD
 25264                           pclath	equ	0xFFA
 25265                           tblptru	equ	0xFF8
 25266                           tblptrh	equ	0xFF7
 25267                           tblptrl	equ	0xFF6
 25268                           tablat	equ	0xFF5
 25269                           prodh	equ	0xFF4
 25270                           prodl	equ	0xFF3
 25271                           intcon	equ	0xFF2
 25272                           intcon2	equ	0xFF1
 25273                           intcon3	equ	0xFF0
 25274                           indf0	equ	0xFEF
 25275                           postinc0	equ	0xFEE
 25276                           fsr0h	equ	0xFEA
 25277                           fsr0l	equ	0xFE9
 25278                           wreg	equ	0xFE8
 25279                           indf1	equ	0xFE7
 25280                           postdec1	equ	0xFE5
 25281                           plusw1	equ	0xFE3
 25282                           fsr1h	equ	0xFE2
 25283                           fsr1l	equ	0xFE1
 25284                           indf2	equ	0xFDF
 25285                           postinc2	equ	0xFDE
 25286                           postdec2	equ	0xFDD
 25287                           plusw2	equ	0xFDB
 25288                           fsr2h	equ	0xFDA
 25289                           fsr2l	equ	0xFD9
 25290                           status	equ	0xFD8
 25291                           
 25292 ;; *************** function __fill_buffer_get_file_details *****************
 25293 ;; Defined at:
 25294 ;;		line 329 in file "api.c"
 25295 ;; Parameters:    Size  Location     Type
 25296 ;;  inBuffer        2   62[COMRAM] PTR unsigned char 
 25297 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 25298 ;;  outBuffer       2   64[COMRAM] PTR unsigned char 
 25299 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25300 ;; Auto vars:     Size  Location     Type
 25301 ;;  file_number     1   66[COMRAM] unsigned char 
 25302 ;; Return value:  Size  Location     Type
 25303 ;;                  1    wreg      void 
 25304 ;; Registers used:
 25305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25306 ;; Tracked objects:
 25307 ;;		On entry : 0/0
 25308 ;;		On exit  : 0/0
 25309 ;;		Unchanged: 0/0
 25310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25314 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25315 ;;Total ram usage:        5 bytes
 25316 ;; Hardware stack levels used:    1
 25317 ;; Hardware stack levels required when called:    7
 25318 ;; This function calls:
 25319 ;;		_fat_get_file_information
 25320 ;; This function is called by:
 25321 ;;		_api_prepare
 25322 ;; This function uses a non-reentrant model
 25323 ;;
 25324                           
 25325                           	psect	text116
 25326  006B94                     __ptext116:
 25327                           	opt stack 0
 25328  006B94                     __fill_buffer_get_file_details:
 25329                           	opt stack 22
 25330                           
 25331                           ;api.c: 331: uint8_t file_number = inBuffer[1];
 25332                           
 25333                           ;incstack = 0
 25334  006B94  EE20 F001          	lfsr	2,1
 25335  006B98  503F               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 25336  006B9A  26D9               	addwf	fsr2l,f,c
 25337  006B9C  5040               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 25338  006B9E  22DA               	addwfc	fsr2h,f,c
 25339  006BA0  50DF               	movf	indf2,w,c
 25340  006BA2  6E43               	movwf	__fill_buffer_get_file_details@file_number,c
 25341                           
 25342                           ;api.c: 334: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 25343  006BA4  C041  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 25344  006BA8  C042  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 25345  006BAC  0E80               	movlw	128
 25346  006BAE  6EDF               	movwf	indf2,c
 25347                           
 25348                           ;api.c: 337: outBuffer[1] = 0xC125 >> 8;
 25349  006BB0  EE20 F001          	lfsr	2,1
 25350  006BB4  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 25351  006BB6  26D9               	addwf	fsr2l,f,c
 25352  006BB8  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 25353  006BBA  22DA               	addwfc	fsr2h,f,c
 25354  006BBC  0EC1               	movlw	193
 25355  006BBE  6EDF               	movwf	indf2,c
 25356                           
 25357                           ;api.c: 338: outBuffer[2] = (uint8_t) 0xC125;
 25358  006BC0  EE20 F002          	lfsr	2,2
 25359  006BC4  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 25360  006BC6  26D9               	addwf	fsr2l,f,c
 25361  006BC8  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 25362  006BCA  22DA               	addwfc	fsr2h,f,c
 25363  006BCC  0E25               	movlw	37
 25364  006BCE  6EDF               	movwf	indf2,c
 25365                           
 25366                           ;api.c: 341: outBuffer[3] = file_number;
 25367  006BD0  EE20 F003          	lfsr	2,3
 25368  006BD4  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 25369  006BD6  26D9               	addwf	fsr2l,f,c
 25370  006BD8  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 25371  006BDA  22DA               	addwfc	fsr2h,f,c
 25372  006BDC  C043  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 25373                           
 25374                           ;api.c: 344: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 25375  006BE0  EE20 F004          	lfsr	2,4
 25376  006BE4  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 25377  006BE6  26D9               	addwf	fsr2l,f,c
 25378  006BE8  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 25379  006BEA  22DA               	addwfc	fsr2h,f,c
 25380  006BEC  0E05               	movlw	5
 25381  006BEE  2441               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 25382  006BF0  6E37               	movwf	fat_get_file_information@data,c
 25383  006BF2  0E00               	movlw	0
 25384  006BF4  2042               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 25385  006BF6  6E38               	movwf	fat_get_file_information@data+1,c
 25386  006BF8  5043               	movf	__fill_buffer_get_file_details@file_number,w,c
 25387  006BFA  ECAD  F034         	call	_fat_get_file_information
 25388  006BFE  6EDF               	movwf	indf2,c
 25389  006C00  0012               	return		;funcret
 25390  006C02                     __end_of__fill_buffer_get_file_details:
 25391                           	opt stack 0
 25392                           tosu	equ	0xFFF
 25393                           tosh	equ	0xFFE
 25394                           tosl	equ	0xFFD
 25395                           pclath	equ	0xFFA
 25396                           tblptru	equ	0xFF8
 25397                           tblptrh	equ	0xFF7
 25398                           tblptrl	equ	0xFF6
 25399                           tablat	equ	0xFF5
 25400                           prodh	equ	0xFF4
 25401                           prodl	equ	0xFF3
 25402                           intcon	equ	0xFF2
 25403                           intcon2	equ	0xFF1
 25404                           intcon3	equ	0xFF0
 25405                           indf0	equ	0xFEF
 25406                           postinc0	equ	0xFEE
 25407                           fsr0h	equ	0xFEA
 25408                           fsr0l	equ	0xFE9
 25409                           wreg	equ	0xFE8
 25410                           indf1	equ	0xFE7
 25411                           postdec1	equ	0xFE5
 25412                           plusw1	equ	0xFE3
 25413                           fsr1h	equ	0xFE2
 25414                           fsr1l	equ	0xFE1
 25415                           indf2	equ	0xFDF
 25416                           postinc2	equ	0xFDE
 25417                           postdec2	equ	0xFDD
 25418                           plusw2	equ	0xFDB
 25419                           fsr2h	equ	0xFDA
 25420                           fsr2l	equ	0xFD9
 25421                           status	equ	0xFD8
 25422                           
 25423 ;; *************** function __fill_buffer_get_display *****************
 25424 ;; Defined at:
 25425 ;;		line 207 in file "api.c"
 25426 ;; Parameters:    Size  Location     Type
 25427 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 25428 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25429 ;;  secondHalf      1    6[COMRAM] unsigned char 
 25430 ;; Auto vars:     Size  Location     Type
 25431 ;;  position        1   15[COMRAM] unsigned char 
 25432 ;;  start_line      1   14[COMRAM] unsigned char 
 25433 ;;  line            1   13[COMRAM] unsigned char 
 25434 ;;  cntr            1   12[COMRAM] unsigned char 
 25435 ;; Return value:  Size  Location     Type
 25436 ;;                  1    wreg      void 
 25437 ;; Registers used:
 25438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25439 ;; Tracked objects:
 25440 ;;		On entry : 0/0
 25441 ;;		On exit  : 0/0
 25442 ;;		Unchanged: 0/0
 25443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25444 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25445 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25446 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25447 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25448 ;;Total ram usage:       12 bytes
 25449 ;; Hardware stack levels used:    1
 25450 ;; Hardware stack levels required when called:    1
 25451 ;; This function calls:
 25452 ;;		_display_get_character
 25453 ;; This function is called by:
 25454 ;;		_api_prepare
 25455 ;; This function uses a non-reentrant model
 25456 ;;
 25457                           
 25458                           	psect	text117
 25459  0057FA                     __ptext117:
 25460                           	opt stack 0
 25461  0057FA                     __fill_buffer_get_display:
 25462                           	opt stack 28
 25463                           
 25464                           ;api.c: 209: uint8_t cntr;;api.c: 210: uint8_t line;;api.c: 211: uint8_t start_line;;api
      +                          .c: 212: uint8_t position;;api.c: 215: if(secondHalf)
 25465                           
 25466                           ;incstack = 0
 25467  0057FA  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 25468  0057FC  B4D8               	btfsc	status,2,c
 25469  0057FE  D006               	goto	l2614
 25470                           
 25471                           ;api.c: 216: {;api.c: 217: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 25472  005800  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 25473  005804  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 25474  005808  0E12               	movlw	18
 25475  00580A  D005               	goto	L31
 25476  00580C                     l2614:
 25477                           
 25478                           ;api.c: 219: else;api.c: 220: {;api.c: 221: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 25479  00580C  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 25480  005810  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 25481  005814  0E11               	movlw	17
 25482  005816                     L31:
 25483  005816  6EDF               	movwf	indf2,c
 25484                           
 25485                           ;api.c: 222: };api.c: 225: outBuffer[1] = 0xC125 >> 8;
 25486  005818  EE20 F001          	lfsr	2,1
 25487  00581C  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 25488  00581E  26D9               	addwf	fsr2l,f,c
 25489  005820  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 25490  005822  22DA               	addwfc	fsr2h,f,c
 25491  005824  0EC1               	movlw	193
 25492  005826  6EDF               	movwf	indf2,c
 25493                           
 25494                           ;api.c: 226: outBuffer[2] = (uint8_t) 0xC125;
 25495  005828  EE20 F002          	lfsr	2,2
 25496  00582C  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 25497  00582E  26D9               	addwf	fsr2l,f,c
 25498  005830  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 25499  005832  22DA               	addwfc	fsr2h,f,c
 25500  005834  0E25               	movlw	37
 25501  005836  6EDF               	movwf	indf2,c
 25502                           
 25503                           ;api.c: 229: cntr = 3;
 25504  005838  0E03               	movlw	3
 25505  00583A  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 25506                           
 25507                           ;api.c: 230: if(secondHalf)
 25508  00583C  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 25509  00583E  B4D8               	btfsc	status,2,c
 25510  005840  D002               	goto	l2616
 25511                           
 25512                           ;api.c: 231: {;api.c: 232: start_line = 2;
 25513  005842  0E02               	movlw	2
 25514  005844  D001               	goto	L32
 25515  005846                     l2616:
 25516                           
 25517                           ;api.c: 234: else;api.c: 235: {;api.c: 236: start_line = 0;
 25518  005846  0E00               	movlw	0
 25519  005848                     L32:
 25520  005848  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 25521                           
 25522                           ;api.c: 237: };api.c: 238: for(line=start_line; line<start_line+2; ++line)
 25523  00584A  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 25524  00584E  D01A               	goto	l2618
 25525  005850                     
 25526                           ;api.c: 239: {;api.c: 240: for(position=0; position<20; ++position)
 25527  005850  0E00               	movlw	0
 25528  005852  6E10               	movwf	__fill_buffer_get_display@position,c
 25529  005854                     l13621:
 25530  005854  0E13               	movlw	19
 25531  005856  6410               	cpfsgt	__fill_buffer_get_display@position,c
 25532  005858  D001               	goto	l2620
 25533  00585A  D013               	goto	u10550
 25534  00585C                     l2620:
 25535                           
 25536                           ;api.c: 241: {;api.c: 242: outBuffer[cntr] = display_get_character(line, position);
 25537  00585C  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 25538  005860  500E               	movf	__fill_buffer_get_display@line,w,c
 25539  005862  ECDD  F03E         	call	_display_get_character
 25540  005866  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 25541  005868  500D               	movf	__fill_buffer_get_display@cntr,w,c
 25542  00586A  0D01               	mullw	1
 25543  00586C  50F3               	movf	prodl,w,c
 25544  00586E  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 25545  005870  6ED9               	movwf	fsr2l,c
 25546  005872  50F4               	movf	prodh,w,c
 25547  005874  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 25548  005876  6EDA               	movwf	fsr2h,c
 25549  005878  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 25550                           
 25551                           ;api.c: 243: ++cntr;
 25552  00587C  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 25553  00587E  2A10               	incf	__fill_buffer_get_display@position,f,c
 25554  005880  D7E9               	goto	l13621
 25555  005882                     u10550:
 25556  005882  2A0E               	incf	__fill_buffer_get_display@line,f,c
 25557  005884                     l2618:
 25558  005884  500F               	movf	__fill_buffer_get_display@start_line,w,c
 25559  005886  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 25560  005888  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 25561  00588A  0E02               	movlw	2
 25562  00588C  2608               	addwf	??__fill_buffer_get_display,f,c
 25563  00588E  0E00               	movlw	0
 25564  005890  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 25565  005892  500E               	movf	__fill_buffer_get_display@line,w,c
 25566  005894  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 25567  005896  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 25568  005898  5008               	movf	??__fill_buffer_get_display,w,c
 25569  00589A  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 25570  00589C  500B               	movf	??__fill_buffer_get_display+3,w,c
 25571  00589E  0A80               	xorlw	128
 25572  0058A0  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 25573  0058A2  5009               	movf	??__fill_buffer_get_display+1,w,c
 25574  0058A4  0A80               	xorlw	128
 25575  0058A6  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 25576  0058A8  B0D8               	btfsc	status,0,c
 25577  0058AA  0012               	return	
 25578  0058AC  D7D1               	goto	l2619
 25579  0058AE                     __end_of__fill_buffer_get_display:
 25580                           	opt stack 0
 25581                           tosu	equ	0xFFF
 25582                           tosh	equ	0xFFE
 25583                           tosl	equ	0xFFD
 25584                           pclath	equ	0xFFA
 25585                           tblptru	equ	0xFF8
 25586                           tblptrh	equ	0xFF7
 25587                           tblptrl	equ	0xFF6
 25588                           tablat	equ	0xFF5
 25589                           prodh	equ	0xFF4
 25590                           prodl	equ	0xFF3
 25591                           intcon	equ	0xFF2
 25592                           intcon2	equ	0xFF1
 25593                           intcon3	equ	0xFF0
 25594                           indf0	equ	0xFEF
 25595                           postinc0	equ	0xFEE
 25596                           fsr0h	equ	0xFEA
 25597                           fsr0l	equ	0xFE9
 25598                           wreg	equ	0xFE8
 25599                           indf1	equ	0xFE7
 25600                           postdec1	equ	0xFE5
 25601                           plusw1	equ	0xFE3
 25602                           fsr1h	equ	0xFE2
 25603                           fsr1l	equ	0xFE1
 25604                           indf2	equ	0xFDF
 25605                           postinc2	equ	0xFDE
 25606                           postdec2	equ	0xFDD
 25607                           plusw2	equ	0xFDB
 25608                           fsr2h	equ	0xFDA
 25609                           fsr2l	equ	0xFD9
 25610                           status	equ	0xFD8
 25611                           
 25612 ;; *************** function _display_get_character *****************
 25613 ;; Defined at:
 25614 ;;		line 70 in file "display.c"
 25615 ;; Parameters:    Size  Location     Type
 25616 ;;  line            1    wreg     unsigned char 
 25617 ;;  position        1    0[COMRAM] unsigned char 
 25618 ;; Auto vars:     Size  Location     Type
 25619 ;;  line            1    3[COMRAM] unsigned char 
 25620 ;; Return value:  Size  Location     Type
 25621 ;;                  1    wreg      unsigned char 
 25622 ;; Registers used:
 25623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25624 ;; Tracked objects:
 25625 ;;		On entry : 0/0
 25626 ;;		On exit  : 0/0
 25627 ;;		Unchanged: 0/0
 25628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25629 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25631 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25632 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25633 ;;Total ram usage:        4 bytes
 25634 ;; Hardware stack levels used:    1
 25635 ;; This function calls:
 25636 ;;		Nothing
 25637 ;; This function is called by:
 25638 ;;		__fill_buffer_get_display
 25639 ;; This function uses a non-reentrant model
 25640 ;;
 25641                           
 25642                           	psect	text118
 25643  007DBA                     __ptext118:
 25644                           	opt stack 0
 25645  007DBA                     _display_get_character:
 25646                           	opt stack 28
 25647                           
 25648                           ;incstack = 0
 25649                           ;display_get_character@line stored from wreg
 25650  007DBA  6E04               	movwf	display_get_character@line,c
 25651                           
 25652                           ;display.c: 72: return display_content[line][position];
 25653  007DBC  5004               	movf	display_get_character@line,w,c
 25654  007DBE  0D14               	mullw	20
 25655  007DC0  0E00               	movlw	low _display_content
 25656  007DC2  6E02               	movwf	??_display_get_character& (0+255),c
 25657  007DC4  0E02               	movlw	high _display_content
 25658  007DC6  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 25659  007DC8  50F3               	movf	prodl,w,c
 25660  007DCA  2602               	addwf	??_display_get_character,f,c
 25661  007DCC  50F4               	movf	prodh,w,c
 25662  007DCE  2203               	addwfc	??_display_get_character+1,f,c
 25663  007DD0  5001               	movf	display_get_character@position,w,c
 25664  007DD2  0D01               	mullw	1
 25665  007DD4  50F3               	movf	prodl,w,c
 25666  007DD6  2402               	addwf	??_display_get_character,w,c
 25667  007DD8  6ED9               	movwf	fsr2l,c
 25668  007DDA  50F4               	movf	prodh,w,c
 25669  007DDC  2003               	addwfc	??_display_get_character+1,w,c
 25670  007DDE  6EDA               	movwf	fsr2h,c
 25671  007DE0  50DF               	movf	indf2,w,c
 25672  007DE2  0012               	return	
 25673  007DE4                     __end_of_display_get_character:
 25674                           	opt stack 0
 25675                           tosu	equ	0xFFF
 25676                           tosh	equ	0xFFE
 25677                           tosl	equ	0xFFD
 25678                           pclath	equ	0xFFA
 25679                           tblptru	equ	0xFF8
 25680                           tblptrh	equ	0xFF7
 25681                           tblptrl	equ	0xFF6
 25682                           tablat	equ	0xFF5
 25683                           prodh	equ	0xFF4
 25684                           prodl	equ	0xFF3
 25685                           intcon	equ	0xFF2
 25686                           intcon2	equ	0xFF1
 25687                           intcon3	equ	0xFF0
 25688                           indf0	equ	0xFEF
 25689                           postinc0	equ	0xFEE
 25690                           fsr0h	equ	0xFEA
 25691                           fsr0l	equ	0xFE9
 25692                           wreg	equ	0xFE8
 25693                           indf1	equ	0xFE7
 25694                           postdec1	equ	0xFE5
 25695                           plusw1	equ	0xFE3
 25696                           fsr1h	equ	0xFE2
 25697                           fsr1l	equ	0xFE1
 25698                           indf2	equ	0xFDF
 25699                           postinc2	equ	0xFDE
 25700                           postdec2	equ	0xFDD
 25701                           plusw2	equ	0xFDB
 25702                           fsr2h	equ	0xFDA
 25703                           fsr2l	equ	0xFD9
 25704                           status	equ	0xFD8
 25705                           
 25706 ;; *************** function __fill_buffer_get_configuration *****************
 25707 ;; Defined at:
 25708 ;;		line 308 in file "api.c"
 25709 ;; Parameters:    Size  Location     Type
 25710 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 25711 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25712 ;; Auto vars:     Size  Location     Type
 25713 ;;		None
 25714 ;; Return value:  Size  Location     Type
 25715 ;;                  1    wreg      void 
 25716 ;; Registers used:
 25717 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25718 ;; Tracked objects:
 25719 ;;		On entry : 0/0
 25720 ;;		On exit  : 0/0
 25721 ;;		Unchanged: 0/0
 25722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25727 ;;Total ram usage:        2 bytes
 25728 ;; Hardware stack levels used:    1
 25729 ;; This function calls:
 25730 ;;		Nothing
 25731 ;; This function is called by:
 25732 ;;		_api_prepare
 25733 ;; This function uses a non-reentrant model
 25734 ;;
 25735                           
 25736                           	psect	text119
 25737  005E8E                     __ptext119:
 25738                           	opt stack 0
 25739  005E8E                     __fill_buffer_get_configuration:
 25740                           	opt stack 29
 25741                           
 25742                           ;api.c: 311: outBuffer[0] = DATAREQUEST_GET_STATUS;
 25743                           
 25744                           ;incstack = 0
 25745  005E8E  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 25746  005E92  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 25747  005E96  0E10               	movlw	16
 25748  005E98  6EDF               	movwf	indf2,c
 25749                           
 25750                           ;api.c: 314: outBuffer[1] = 0xC125 >> 8;
 25751  005E9A  EE20 F001          	lfsr	2,1
 25752  005E9E  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25753  005EA0  26D9               	addwf	fsr2l,f,c
 25754  005EA2  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25755  005EA4  22DA               	addwfc	fsr2h,f,c
 25756  005EA6  0EC1               	movlw	193
 25757  005EA8  6EDF               	movwf	indf2,c
 25758                           
 25759                           ;api.c: 315: outBuffer[2] = (uint8_t) 0xC125;
 25760  005EAA  EE20 F002          	lfsr	2,2
 25761  005EAE  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25762  005EB0  26D9               	addwf	fsr2l,f,c
 25763  005EB2  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25764  005EB4  22DA               	addwfc	fsr2h,f,c
 25765  005EB6  0E25               	movlw	37
 25766  005EB8  6EDF               	movwf	indf2,c
 25767                           
 25768                           ;api.c: 318: outBuffer[3] = communicationSettings.spiMode;
 25769  005EBA  EE20 F003          	lfsr	2,3
 25770  005EBE  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25771  005EC0  26D9               	addwf	fsr2l,f,c
 25772  005EC2  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25773  005EC4  22DA               	addwfc	fsr2h,f,c
 25774  005EC6  C139  FFDF         	movff	_communicationSettings,indf2
 25775                           
 25776                           ;api.c: 319: outBuffer[4] = communicationSettings.spiFrequency;
 25777  005ECA  EE20 F004          	lfsr	2,4
 25778  005ECE  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25779  005ED0  26D9               	addwf	fsr2l,f,c
 25780  005ED2  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25781  005ED4  22DA               	addwfc	fsr2h,f,c
 25782  005ED6  C13A  FFDF         	movff	_communicationSettings+1,indf2
 25783                           
 25784                           ;api.c: 320: outBuffer[5] = communicationSettings.spiPolarity;
 25785  005EDA  EE20 F005          	lfsr	2,5
 25786  005EDE  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25787  005EE0  26D9               	addwf	fsr2l,f,c
 25788  005EE2  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25789  005EE4  22DA               	addwfc	fsr2h,f,c
 25790  005EE6  C13B  FFDF         	movff	_communicationSettings+2,indf2
 25791                           
 25792                           ;api.c: 323: outBuffer[6] = communicationSettings.i2cMode;
 25793  005EEA  EE20 F006          	lfsr	2,6
 25794  005EEE  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25795  005EF0  26D9               	addwf	fsr2l,f,c
 25796  005EF2  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25797  005EF4  22DA               	addwfc	fsr2h,f,c
 25798  005EF6  C13C  FFDF         	movff	_communicationSettings+3,indf2
 25799                           
 25800                           ;api.c: 324: outBuffer[7] = communicationSettings.i2cFrequency;
 25801  005EFA  EE20 F007          	lfsr	2,7
 25802  005EFE  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25803  005F00  26D9               	addwf	fsr2l,f,c
 25804  005F02  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25805  005F04  22DA               	addwfc	fsr2h,f,c
 25806  005F06  C13D  FFDF         	movff	_communicationSettings+4,indf2
 25807                           
 25808                           ;api.c: 325: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 25809  005F0A  EE20 F008          	lfsr	2,8
 25810  005F0E  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25811  005F10  26D9               	addwf	fsr2l,f,c
 25812  005F12  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25813  005F14  22DA               	addwfc	fsr2h,f,c
 25814  005F16  C13E  FFDF         	movff	_communicationSettings+5,indf2
 25815                           
 25816                           ;api.c: 326: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 25817  005F1A  EE20 F009          	lfsr	2,9
 25818  005F1E  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25819  005F20  26D9               	addwf	fsr2l,f,c
 25820  005F22  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25821  005F24  22DA               	addwfc	fsr2h,f,c
 25822  005F26  C13F  FFDF         	movff	_communicationSettings+6,indf2
 25823  005F2A  0012               	return		;funcret
 25824  005F2C                     __end_of__fill_buffer_get_configuration:
 25825                           	opt stack 0
 25826                           tosu	equ	0xFFF
 25827                           tosh	equ	0xFFE
 25828                           tosl	equ	0xFFD
 25829                           pclath	equ	0xFFA
 25830                           tblptru	equ	0xFF8
 25831                           tblptrh	equ	0xFF7
 25832                           tblptrl	equ	0xFF6
 25833                           tablat	equ	0xFF5
 25834                           prodh	equ	0xFF4
 25835                           prodl	equ	0xFF3
 25836                           intcon	equ	0xFF2
 25837                           intcon2	equ	0xFF1
 25838                           intcon3	equ	0xFF0
 25839                           indf0	equ	0xFEF
 25840                           postinc0	equ	0xFEE
 25841                           fsr0h	equ	0xFEA
 25842                           fsr0l	equ	0xFE9
 25843                           wreg	equ	0xFE8
 25844                           indf1	equ	0xFE7
 25845                           postdec1	equ	0xFE5
 25846                           plusw1	equ	0xFE3
 25847                           fsr1h	equ	0xFE2
 25848                           fsr1l	equ	0xFE1
 25849                           indf2	equ	0xFDF
 25850                           postinc2	equ	0xFDE
 25851                           postdec2	equ	0xFDD
 25852                           plusw2	equ	0xFDB
 25853                           fsr2h	equ	0xFDA
 25854                           fsr2l	equ	0xFD9
 25855                           status	equ	0xFD8
 25856                           
 25857 ;; *************** function __fill_buffer_get_bootloader_details *****************
 25858 ;; Defined at:
 25859 ;;		line 248 in file "api.c"
 25860 ;; Parameters:    Size  Location     Type
 25861 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 25862 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25863 ;; Auto vars:     Size  Location     Type
 25864 ;;  buffer_large    4   11[COMRAM] unsigned long 
 25865 ;;  buffer_small    2   15[COMRAM] unsigned int 
 25866 ;;  cntr            1   10[COMRAM] unsigned char 
 25867 ;;  data_length     1    9[COMRAM] unsigned char 
 25868 ;; Return value:  Size  Location     Type
 25869 ;;                  1    wreg      void 
 25870 ;; Registers used:
 25871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25872 ;; Tracked objects:
 25873 ;;		On entry : 0/0
 25874 ;;		On exit  : 0/0
 25875 ;;		Unchanged: 0/0
 25876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25877 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25878 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25879 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25880 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25881 ;;Total ram usage:       13 bytes
 25882 ;; Hardware stack levels used:    1
 25883 ;; Hardware stack levels required when called:    1
 25884 ;; This function calls:
 25885 ;;		_bootloader_get_entries
 25886 ;;		_bootloader_get_error
 25887 ;;		_bootloader_get_file_size
 25888 ;;		_bootloader_get_flashPagesWritten
 25889 ;;		_bootloader_get_rec_address
 25890 ;;		_bootloader_get_rec_checksum
 25891 ;;		_bootloader_get_rec_checksumCheck
 25892 ;;		_bootloader_get_rec_data
 25893 ;;		_bootloader_get_rec_dataLength
 25894 ;;		_bootloader_get_rec_recordType
 25895 ;;		_bootloader_get_total_entries
 25896 ;; This function is called by:
 25897 ;;		_api_prepare
 25898 ;; This function uses a non-reentrant model
 25899 ;;
 25900                           
 25901                           	psect	text120
 25902  0029E2                     __ptext120:
 25903                           	opt stack 0
 25904  0029E2                     __fill_buffer_get_bootloader_details:
 25905                           	opt stack 28
 25906                           
 25907                           ;api.c: 250: uint8_t cntr;;api.c: 251: uint8_t data_length;;api.c: 252: uint16_t buffer_
      +                          small;;api.c: 253: uint32_t buffer_large;;api.c: 256: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 25908                           
 25909                           ;incstack = 0
 25910  0029E2  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 25911  0029E6  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 25912  0029EA  0E13               	movlw	19
 25913  0029EC  6EDF               	movwf	indf2,c
 25914                           
 25915                           ;api.c: 259: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 25916  0029EE  EE20 F001          	lfsr	2,1
 25917  0029F2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25918  0029F4  26D9               	addwf	fsr2l,f,c
 25919  0029F6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25920  0029F8  22DA               	addwfc	fsr2h,f,c
 25921  0029FA  0EC1               	movlw	193
 25922  0029FC  6EDF               	movwf	indf2,c
 25923                           
 25924                           ;api.c: 260: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 25925  0029FE  EE20 F002          	lfsr	2,2
 25926  002A02  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25927  002A04  26D9               	addwf	fsr2l,f,c
 25928  002A06  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25929  002A08  22DA               	addwfc	fsr2h,f,c
 25930  002A0A  0E25               	movlw	37
 25931  002A0C  6EDF               	movwf	indf2,c
 25932                           
 25933                           ;api.c: 263: buffer_large = bootloader_get_file_size();
 25934  002A0E  EC5E  F040         	call	_bootloader_get_file_size	;wreg free
 25935  002A12  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 25936  002A16  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 25937  002A1A  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 25938  002A1E  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 25939                           
 25940                           ;api.c: 264: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 25941  002A22  EE20 F003          	lfsr	2,3
 25942  002A26  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25943  002A28  26D9               	addwf	fsr2l,f,c
 25944  002A2A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25945  002A2C  22DA               	addwfc	fsr2h,f,c
 25946  002A2E  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 25947  002A30  6EDF               	movwf	indf2,c
 25948                           
 25949                           ;api.c: 265: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 25950  002A32  EE20 F004          	lfsr	2,4
 25951  002A36  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25952  002A38  26D9               	addwf	fsr2l,f,c
 25953  002A3A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25954  002A3C  22DA               	addwfc	fsr2h,f,c
 25955  002A3E  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 25956                           
 25957                           ;api.c: 266: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 25958  002A42  EE20 F005          	lfsr	2,5
 25959  002A46  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25960  002A48  26D9               	addwf	fsr2l,f,c
 25961  002A4A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25962  002A4C  22DA               	addwfc	fsr2h,f,c
 25963  002A4E  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 25964  002A50  6EDF               	movwf	indf2,c
 25965                           
 25966                           ;api.c: 267: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 25967  002A52  EE20 F006          	lfsr	2,6
 25968  002A56  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25969  002A58  26D9               	addwf	fsr2l,f,c
 25970  002A5A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25971  002A5C  22DA               	addwfc	fsr2h,f,c
 25972  002A5E  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 25973                           
 25974                           ;api.c: 269: buffer_small = bootloader_get_entries();
 25975  002A62  ECD0  F040         	call	_bootloader_get_entries	;wreg free
 25976  002A66  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 25977  002A6A  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 25978                           
 25979                           ;api.c: 270: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25980  002A6E  EE20 F007          	lfsr	2,7
 25981  002A72  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25982  002A74  26D9               	addwf	fsr2l,f,c
 25983  002A76  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25984  002A78  22DA               	addwfc	fsr2h,f,c
 25985  002A7A  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25986  002A7C  6EDF               	movwf	indf2,c
 25987                           
 25988                           ;api.c: 271: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 25989  002A7E  EE20 F008          	lfsr	2,8
 25990  002A82  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25991  002A84  26D9               	addwf	fsr2l,f,c
 25992  002A86  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25993  002A88  22DA               	addwfc	fsr2h,f,c
 25994  002A8A  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25995                           
 25996                           ;api.c: 273: buffer_small = bootloader_get_total_entries();
 25997  002A8E  ECDA  F040         	call	_bootloader_get_total_entries	;wreg free
 25998  002A92  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 25999  002A96  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 26000                           
 26001                           ;api.c: 274: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 26002  002A9A  EE20 F009          	lfsr	2,9
 26003  002A9E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26004  002AA0  26D9               	addwf	fsr2l,f,c
 26005  002AA2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26006  002AA4  22DA               	addwfc	fsr2h,f,c
 26007  002AA6  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 26008  002AA8  6EDF               	movwf	indf2,c
 26009                           
 26010                           ;api.c: 275: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 26011  002AAA  EE20 F00A          	lfsr	2,10
 26012  002AAE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26013  002AB0  26D9               	addwf	fsr2l,f,c
 26014  002AB2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26015  002AB4  22DA               	addwfc	fsr2h,f,c
 26016  002AB6  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 26017                           
 26018                           ;api.c: 277: outBuffer[11] = (uint8_t) bootloader_get_error();
 26019  002ABA  EE20 F00B          	lfsr	2,11
 26020  002ABE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26021  002AC0  26D9               	addwf	fsr2l,f,c
 26022  002AC2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26023  002AC4  22DA               	addwfc	fsr2h,f,c
 26024  002AC6  EC04  F041         	call	_bootloader_get_error	;wreg free
 26025  002ACA  6EDF               	movwf	indf2,c
 26026                           
 26027                           ;api.c: 279: buffer_small = bootloader_get_flashPagesWritten();
 26028  002ACC  ECD5  F040         	call	_bootloader_get_flashPagesWritten	;wreg free
 26029  002AD0  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 26030  002AD4  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 26031                           
 26032                           ;api.c: 280: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 26033  002AD8  EE20 F00C          	lfsr	2,12
 26034  002ADC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26035  002ADE  26D9               	addwf	fsr2l,f,c
 26036  002AE0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26037  002AE2  22DA               	addwfc	fsr2h,f,c
 26038  002AE4  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 26039  002AE6  6EDF               	movwf	indf2,c
 26040                           
 26041                           ;api.c: 281: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 26042  002AE8  EE20 F00D          	lfsr	2,13
 26043  002AEC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26044  002AEE  26D9               	addwf	fsr2l,f,c
 26045  002AF0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26046  002AF2  22DA               	addwfc	fsr2h,f,c
 26047  002AF4  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 26048                           
 26049                           ;api.c: 284: buffer_small = bootloader_get_rec_dataLength();
 26050  002AF8  ECC6  F040         	call	_bootloader_get_rec_dataLength	;wreg free
 26051  002AFC  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 26052  002B00  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 26053                           
 26054                           ;api.c: 285: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 26055  002B04  EE20 F00E          	lfsr	2,14
 26056  002B08  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26057  002B0A  26D9               	addwf	fsr2l,f,c
 26058  002B0C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26059  002B0E  22DA               	addwfc	fsr2h,f,c
 26060  002B10  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 26061  002B12  6EDF               	movwf	indf2,c
 26062                           
 26063                           ;api.c: 286: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 26064  002B14  EE20 F00F          	lfsr	2,15
 26065  002B18  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26066  002B1A  26D9               	addwf	fsr2l,f,c
 26067  002B1C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26068  002B1E  22DA               	addwfc	fsr2h,f,c
 26069  002B20  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 26070                           
 26071                           ;api.c: 288: buffer_small = bootloader_get_rec_address();
 26072  002B24  ECCB  F040         	call	_bootloader_get_rec_address	;wreg free
 26073  002B28  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 26074  002B2C  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 26075                           
 26076                           ;api.c: 289: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 26077  002B30  EE20 F010          	lfsr	2,16
 26078  002B34  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26079  002B36  26D9               	addwf	fsr2l,f,c
 26080  002B38  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26081  002B3A  22DA               	addwfc	fsr2h,f,c
 26082  002B3C  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 26083  002B3E  6EDF               	movwf	indf2,c
 26084                           
 26085                           ;api.c: 290: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 26086  002B40  EE20 F011          	lfsr	2,17
 26087  002B44  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26088  002B46  26D9               	addwf	fsr2l,f,c
 26089  002B48  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26090  002B4A  22DA               	addwfc	fsr2h,f,c
 26091  002B4C  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 26092                           
 26093                           ;api.c: 292: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 26094  002B50  EE20 F012          	lfsr	2,18
 26095  002B54  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26096  002B56  26D9               	addwf	fsr2l,f,c
 26097  002B58  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26098  002B5A  22DA               	addwfc	fsr2h,f,c
 26099  002B5C  ECF8  F040         	call	_bootloader_get_rec_recordType	;wreg free
 26100  002B60  6EDF               	movwf	indf2,c
 26101                           
 26102                           ;api.c: 293: outBuffer[19] = bootloader_get_rec_checksum();
 26103  002B62  EE20 F013          	lfsr	2,19
 26104  002B66  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26105  002B68  26D9               	addwf	fsr2l,f,c
 26106  002B6A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26107  002B6C  22DA               	addwfc	fsr2h,f,c
 26108  002B6E  ECFE  F040         	call	_bootloader_get_rec_checksum	;wreg free
 26109  002B72  6EDF               	movwf	indf2,c
 26110                           
 26111                           ;api.c: 294: outBuffer[20] = bootloader_get_rec_checksumCheck();
 26112  002B74  EE20 F014          	lfsr	2,20
 26113  002B78  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26114  002B7A  26D9               	addwf	fsr2l,f,c
 26115  002B7C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26116  002B7E  22DA               	addwfc	fsr2h,f,c
 26117  002B80  ECFB  F040         	call	_bootloader_get_rec_checksumCheck	;wreg free
 26118  002B84  6EDF               	movwf	indf2,c
 26119                           
 26120                           ;api.c: 296: data_length = (uint8_t) bootloader_get_rec_dataLength();
 26121  002B86  ECC6  F040         	call	_bootloader_get_rec_dataLength	;wreg free
 26122  002B8A  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 26123  002B8C  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 26124                           
 26125                           ;api.c: 297: if(data_length>43)
 26126  002B8E  0E2B               	movlw	43
 26127  002B90  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 26128  002B92  D002               	goto	l2626
 26129                           
 26130                           ;api.c: 298: {;api.c: 300: data_length = 43;
 26131  002B94  0E2B               	movlw	43
 26132  002B96  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 26133  002B98                     l2626:
 26134                           
 26135                           ;api.c: 301: };api.c: 302: for(cntr=0; cntr<data_length; ++cntr)
 26136  002B98  0E00               	movlw	0
 26137  002B9A  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 26138  002B9C  D014               	goto	l2627
 26139  002B9E                     
 26140                           ;api.c: 303: {;api.c: 304: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 26141  002B9E  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 26142  002BA0  EC2C  F040         	call	_bootloader_get_rec_data
 26143  002BA4  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 26144  002BA6  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 26145  002BA8  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 26146  002BAA  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 26147  002BAC  0E15               	movlw	21
 26148  002BAE  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 26149  002BB0  0E00               	movlw	0
 26150  002BB2  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 26151  002BB4  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 26152  002BB6  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 26153  002BB8  6ED9               	movwf	fsr2l,c
 26154  002BBA  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 26155  002BBC  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 26156  002BBE  6EDA               	movwf	fsr2h,c
 26157  002BC0  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 26158  002BC4  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 26159  002BC6                     l2627:
 26160  002BC6  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 26161  002BC8  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 26162  002BCA  B0D8               	btfsc	status,0,c
 26163  002BCC  0012               	return	
 26164  002BCE  D7E7               	goto	l2628
 26165  002BD0                     __end_of__fill_buffer_get_bootloader_details:
 26166                           	opt stack 0
 26167                           tosu	equ	0xFFF
 26168                           tosh	equ	0xFFE
 26169                           tosl	equ	0xFFD
 26170                           pclath	equ	0xFFA
 26171                           tblptru	equ	0xFF8
 26172                           tblptrh	equ	0xFF7
 26173                           tblptrl	equ	0xFF6
 26174                           tablat	equ	0xFF5
 26175                           prodh	equ	0xFF4
 26176                           prodl	equ	0xFF3
 26177                           intcon	equ	0xFF2
 26178                           intcon2	equ	0xFF1
 26179                           intcon3	equ	0xFF0
 26180                           indf0	equ	0xFEF
 26181                           postinc0	equ	0xFEE
 26182                           fsr0h	equ	0xFEA
 26183                           fsr0l	equ	0xFE9
 26184                           wreg	equ	0xFE8
 26185                           indf1	equ	0xFE7
 26186                           postdec1	equ	0xFE5
 26187                           plusw1	equ	0xFE3
 26188                           fsr1h	equ	0xFE2
 26189                           fsr1l	equ	0xFE1
 26190                           indf2	equ	0xFDF
 26191                           postinc2	equ	0xFDE
 26192                           postdec2	equ	0xFDD
 26193                           plusw2	equ	0xFDB
 26194                           fsr2h	equ	0xFDA
 26195                           fsr2l	equ	0xFD9
 26196                           status	equ	0xFD8
 26197                           
 26198 ;; *************** function _bootloader_get_rec_recordType *****************
 26199 ;; Defined at:
 26200 ;;		line 488 in file "bootloader.c"
 26201 ;; Parameters:    Size  Location     Type
 26202 ;;		None
 26203 ;; Auto vars:     Size  Location     Type
 26204 ;;		None
 26205 ;; Return value:  Size  Location     Type
 26206 ;;                  1    wreg      enum E6772
 26207 ;; Registers used:
 26208 ;;		wreg, status,2
 26209 ;; Tracked objects:
 26210 ;;		On entry : 0/0
 26211 ;;		On exit  : 0/0
 26212 ;;		Unchanged: 0/0
 26213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26218 ;;Total ram usage:        0 bytes
 26219 ;; Hardware stack levels used:    1
 26220 ;; This function calls:
 26221 ;;		Nothing
 26222 ;; This function is called by:
 26223 ;;		__fill_buffer_get_bootloader_details
 26224 ;; This function uses a non-reentrant model
 26225 ;;
 26226                           
 26227                           	psect	text121
 26228  0081F0                     __ptext121:
 26229                           	opt stack 0
 26230  0081F0                     _bootloader_get_rec_recordType:
 26231                           	opt stack 28
 26232                           
 26233                           ;bootloader.c: 490: return hex_file_entry.recordType;
 26234                           
 26235                           ;incstack = 0
 26236  0081F0  0101               	movlb	1	; () banked
 26237  0081F2  51BE               	movf	(_hex_file_entry+4)& (0+255),w,b
 26238  0081F4  0012               	return	
 26239  0081F6                     __end_of_bootloader_get_rec_recordType:
 26240                           	opt stack 0
 26241                           tosu	equ	0xFFF
 26242                           tosh	equ	0xFFE
 26243                           tosl	equ	0xFFD
 26244                           pclath	equ	0xFFA
 26245                           tblptru	equ	0xFF8
 26246                           tblptrh	equ	0xFF7
 26247                           tblptrl	equ	0xFF6
 26248                           tablat	equ	0xFF5
 26249                           prodh	equ	0xFF4
 26250                           prodl	equ	0xFF3
 26251                           intcon	equ	0xFF2
 26252                           intcon2	equ	0xFF1
 26253                           intcon3	equ	0xFF0
 26254                           indf0	equ	0xFEF
 26255                           postinc0	equ	0xFEE
 26256                           fsr0h	equ	0xFEA
 26257                           fsr0l	equ	0xFE9
 26258                           wreg	equ	0xFE8
 26259                           indf1	equ	0xFE7
 26260                           postdec1	equ	0xFE5
 26261                           plusw1	equ	0xFE3
 26262                           fsr1h	equ	0xFE2
 26263                           fsr1l	equ	0xFE1
 26264                           indf2	equ	0xFDF
 26265                           postinc2	equ	0xFDE
 26266                           postdec2	equ	0xFDD
 26267                           plusw2	equ	0xFDB
 26268                           fsr2h	equ	0xFDA
 26269                           fsr2l	equ	0xFD9
 26270                           status	equ	0xFD8
 26271                           
 26272 ;; *************** function _bootloader_get_rec_dataLength *****************
 26273 ;; Defined at:
 26274 ;;		line 477 in file "bootloader.c"
 26275 ;; Parameters:    Size  Location     Type
 26276 ;;		None
 26277 ;; Auto vars:     Size  Location     Type
 26278 ;;		None
 26279 ;; Return value:  Size  Location     Type
 26280 ;;                  2    0[COMRAM] unsigned int 
 26281 ;; Registers used:
 26282 ;;		None
 26283 ;; Tracked objects:
 26284 ;;		On entry : 0/0
 26285 ;;		On exit  : 0/0
 26286 ;;		Unchanged: 0/0
 26287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26292 ;;Total ram usage:        2 bytes
 26293 ;; Hardware stack levels used:    1
 26294 ;; This function calls:
 26295 ;;		Nothing
 26296 ;; This function is called by:
 26297 ;;		__fill_buffer_get_bootloader_details
 26298 ;; This function uses a non-reentrant model
 26299 ;;
 26300                           
 26301                           	psect	text122
 26302  00818C                     __ptext122:
 26303                           	opt stack 0
 26304  00818C                     _bootloader_get_rec_dataLength:
 26305                           	opt stack 28
 26306                           
 26307                           ;bootloader.c: 479: return hex_file_entry.dataLength;
 26308                           
 26309                           ; BSR set to: 1
 26310                           ;incstack = 0
 26311  00818C  C1BA  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 26312  008190  C1BB  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 26313  008194  0012               	return		;funcret
 26314  008196                     __end_of_bootloader_get_rec_dataLength:
 26315                           	opt stack 0
 26316                           tosu	equ	0xFFF
 26317                           tosh	equ	0xFFE
 26318                           tosl	equ	0xFFD
 26319                           pclath	equ	0xFFA
 26320                           tblptru	equ	0xFF8
 26321                           tblptrh	equ	0xFF7
 26322                           tblptrl	equ	0xFF6
 26323                           tablat	equ	0xFF5
 26324                           prodh	equ	0xFF4
 26325                           prodl	equ	0xFF3
 26326                           intcon	equ	0xFF2
 26327                           intcon2	equ	0xFF1
 26328                           intcon3	equ	0xFF0
 26329                           indf0	equ	0xFEF
 26330                           postinc0	equ	0xFEE
 26331                           fsr0h	equ	0xFEA
 26332                           fsr0l	equ	0xFE9
 26333                           wreg	equ	0xFE8
 26334                           indf1	equ	0xFE7
 26335                           postdec1	equ	0xFE5
 26336                           plusw1	equ	0xFE3
 26337                           fsr1h	equ	0xFE2
 26338                           fsr1l	equ	0xFE1
 26339                           indf2	equ	0xFDF
 26340                           postinc2	equ	0xFDE
 26341                           postdec2	equ	0xFDD
 26342                           plusw2	equ	0xFDB
 26343                           fsr2h	equ	0xFDA
 26344                           fsr2l	equ	0xFD9
 26345                           status	equ	0xFD8
 26346                           
 26347 ;; *************** function _bootloader_get_rec_data *****************
 26348 ;; Defined at:
 26349 ;;		line 493 in file "bootloader.c"
 26350 ;; Parameters:    Size  Location     Type
 26351 ;;  index           1    wreg     unsigned char 
 26352 ;; Auto vars:     Size  Location     Type
 26353 ;;  index           1    0[COMRAM] unsigned char 
 26354 ;; Return value:  Size  Location     Type
 26355 ;;                  1    wreg      unsigned char 
 26356 ;; Registers used:
 26357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26358 ;; Tracked objects:
 26359 ;;		On entry : 0/0
 26360 ;;		On exit  : 0/0
 26361 ;;		Unchanged: 0/0
 26362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26367 ;;Total ram usage:        1 bytes
 26368 ;; Hardware stack levels used:    1
 26369 ;; This function calls:
 26370 ;;		Nothing
 26371 ;; This function is called by:
 26372 ;;		__fill_buffer_get_bootloader_details
 26373 ;; This function uses a non-reentrant model
 26374 ;;
 26375                           
 26376                           	psect	text123
 26377  008058                     __ptext123:
 26378                           	opt stack 0
 26379  008058                     _bootloader_get_rec_data:
 26380                           	opt stack 28
 26381                           
 26382                           ;incstack = 0
 26383                           ;bootloader_get_rec_data@index stored from wreg
 26384  008058  6E01               	movwf	bootloader_get_rec_data@index,c
 26385                           
 26386                           ;bootloader.c: 495: return hex_file_entry.data[index];
 26387  00805A  5001               	movf	bootloader_get_rec_data@index,w,c
 26388  00805C  0D01               	mullw	1
 26389  00805E  0EBF               	movlw	low (_hex_file_entry+5)
 26390  008060  24F3               	addwf	prodl,w,c
 26391  008062  6ED9               	movwf	fsr2l,c
 26392  008064  0E01               	movlw	high (_hex_file_entry+5)
 26393  008066  20F4               	addwfc	prodh,w,c
 26394  008068  6EDA               	movwf	fsr2h,c
 26395  00806A  50DF               	movf	indf2,w,c
 26396  00806C  0012               	return	
 26397  00806E                     __end_of_bootloader_get_rec_data:
 26398                           	opt stack 0
 26399                           tosu	equ	0xFFF
 26400                           tosh	equ	0xFFE
 26401                           tosl	equ	0xFFD
 26402                           pclath	equ	0xFFA
 26403                           tblptru	equ	0xFF8
 26404                           tblptrh	equ	0xFF7
 26405                           tblptrl	equ	0xFF6
 26406                           tablat	equ	0xFF5
 26407                           prodh	equ	0xFF4
 26408                           prodl	equ	0xFF3
 26409                           intcon	equ	0xFF2
 26410                           intcon2	equ	0xFF1
 26411                           intcon3	equ	0xFF0
 26412                           indf0	equ	0xFEF
 26413                           postinc0	equ	0xFEE
 26414                           fsr0h	equ	0xFEA
 26415                           fsr0l	equ	0xFE9
 26416                           wreg	equ	0xFE8
 26417                           indf1	equ	0xFE7
 26418                           postdec1	equ	0xFE5
 26419                           plusw1	equ	0xFE3
 26420                           fsr1h	equ	0xFE2
 26421                           fsr1l	equ	0xFE1
 26422                           indf2	equ	0xFDF
 26423                           postinc2	equ	0xFDE
 26424                           postdec2	equ	0xFDD
 26425                           plusw2	equ	0xFDB
 26426                           fsr2h	equ	0xFDA
 26427                           fsr2l	equ	0xFD9
 26428                           status	equ	0xFD8
 26429                           
 26430 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 26431 ;; Defined at:
 26432 ;;		line 503 in file "bootloader.c"
 26433 ;; Parameters:    Size  Location     Type
 26434 ;;		None
 26435 ;; Auto vars:     Size  Location     Type
 26436 ;;		None
 26437 ;; Return value:  Size  Location     Type
 26438 ;;                  1    wreg      unsigned char 
 26439 ;; Registers used:
 26440 ;;		wreg, status,2
 26441 ;; Tracked objects:
 26442 ;;		On entry : 0/0
 26443 ;;		On exit  : 0/0
 26444 ;;		Unchanged: 0/0
 26445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26450 ;;Total ram usage:        0 bytes
 26451 ;; Hardware stack levels used:    1
 26452 ;; This function calls:
 26453 ;;		Nothing
 26454 ;; This function is called by:
 26455 ;;		__fill_buffer_get_bootloader_details
 26456 ;; This function uses a non-reentrant model
 26457 ;;
 26458                           
 26459                           	psect	text124
 26460  0081F6                     __ptext124:
 26461                           	opt stack 0
 26462  0081F6                     _bootloader_get_rec_checksumCheck:
 26463                           	opt stack 28
 26464                           
 26465                           ;bootloader.c: 505: return hex_file_entry.checksumCheck;
 26466                           
 26467                           ;incstack = 0
 26468  0081F6  0101               	movlb	1	; () banked
 26469  0081F8  51D0               	movf	(_hex_file_entry+22)& (0+255),w,b
 26470  0081FA  0012               	return	
 26471  0081FC                     __end_of_bootloader_get_rec_checksumCheck:
 26472                           	opt stack 0
 26473                           tosu	equ	0xFFF
 26474                           tosh	equ	0xFFE
 26475                           tosl	equ	0xFFD
 26476                           pclath	equ	0xFFA
 26477                           tblptru	equ	0xFF8
 26478                           tblptrh	equ	0xFF7
 26479                           tblptrl	equ	0xFF6
 26480                           tablat	equ	0xFF5
 26481                           prodh	equ	0xFF4
 26482                           prodl	equ	0xFF3
 26483                           intcon	equ	0xFF2
 26484                           intcon2	equ	0xFF1
 26485                           intcon3	equ	0xFF0
 26486                           indf0	equ	0xFEF
 26487                           postinc0	equ	0xFEE
 26488                           fsr0h	equ	0xFEA
 26489                           fsr0l	equ	0xFE9
 26490                           wreg	equ	0xFE8
 26491                           indf1	equ	0xFE7
 26492                           postdec1	equ	0xFE5
 26493                           plusw1	equ	0xFE3
 26494                           fsr1h	equ	0xFE2
 26495                           fsr1l	equ	0xFE1
 26496                           indf2	equ	0xFDF
 26497                           postinc2	equ	0xFDE
 26498                           postdec2	equ	0xFDD
 26499                           plusw2	equ	0xFDB
 26500                           fsr2h	equ	0xFDA
 26501                           fsr2l	equ	0xFD9
 26502                           status	equ	0xFD8
 26503                           
 26504 ;; *************** function _bootloader_get_rec_checksum *****************
 26505 ;; Defined at:
 26506 ;;		line 498 in file "bootloader.c"
 26507 ;; Parameters:    Size  Location     Type
 26508 ;;		None
 26509 ;; Auto vars:     Size  Location     Type
 26510 ;;		None
 26511 ;; Return value:  Size  Location     Type
 26512 ;;                  1    wreg      unsigned char 
 26513 ;; Registers used:
 26514 ;;		wreg, status,2
 26515 ;; Tracked objects:
 26516 ;;		On entry : 0/0
 26517 ;;		On exit  : 0/0
 26518 ;;		Unchanged: 0/0
 26519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26524 ;;Total ram usage:        0 bytes
 26525 ;; Hardware stack levels used:    1
 26526 ;; This function calls:
 26527 ;;		Nothing
 26528 ;; This function is called by:
 26529 ;;		__fill_buffer_get_bootloader_details
 26530 ;; This function uses a non-reentrant model
 26531 ;;
 26532                           
 26533                           	psect	text125
 26534  0081FC                     __ptext125:
 26535                           	opt stack 0
 26536  0081FC                     _bootloader_get_rec_checksum:
 26537                           	opt stack 28
 26538                           
 26539                           ;bootloader.c: 500: return hex_file_entry.checksum;
 26540                           
 26541                           ; BSR set to: 1
 26542                           ;incstack = 0
 26543  0081FC  0101               	movlb	1	; () banked
 26544  0081FE  51CF               	movf	(_hex_file_entry+21)& (0+255),w,b
 26545  008200  0012               	return	
 26546  008202                     __end_of_bootloader_get_rec_checksum:
 26547                           	opt stack 0
 26548                           tosu	equ	0xFFF
 26549                           tosh	equ	0xFFE
 26550                           tosl	equ	0xFFD
 26551                           pclath	equ	0xFFA
 26552                           tblptru	equ	0xFF8
 26553                           tblptrh	equ	0xFF7
 26554                           tblptrl	equ	0xFF6
 26555                           tablat	equ	0xFF5
 26556                           prodh	equ	0xFF4
 26557                           prodl	equ	0xFF3
 26558                           intcon	equ	0xFF2
 26559                           intcon2	equ	0xFF1
 26560                           intcon3	equ	0xFF0
 26561                           indf0	equ	0xFEF
 26562                           postinc0	equ	0xFEE
 26563                           fsr0h	equ	0xFEA
 26564                           fsr0l	equ	0xFE9
 26565                           wreg	equ	0xFE8
 26566                           indf1	equ	0xFE7
 26567                           postdec1	equ	0xFE5
 26568                           plusw1	equ	0xFE3
 26569                           fsr1h	equ	0xFE2
 26570                           fsr1l	equ	0xFE1
 26571                           indf2	equ	0xFDF
 26572                           postinc2	equ	0xFDE
 26573                           postdec2	equ	0xFDD
 26574                           plusw2	equ	0xFDB
 26575                           fsr2h	equ	0xFDA
 26576                           fsr2l	equ	0xFD9
 26577                           status	equ	0xFD8
 26578                           
 26579 ;; *************** function __fill_buffer_find_file *****************
 26580 ;; Defined at:
 26581 ;;		line 347 in file "api.c"
 26582 ;; Parameters:    Size  Location     Type
 26583 ;;  inBuffer        2   67[COMRAM] PTR unsigned char 
 26584 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 26585 ;;  outBuffer       2   69[COMRAM] PTR unsigned char 
 26586 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 26587 ;; Auto vars:     Size  Location     Type
 26588 ;;  cntr            1   75[COMRAM] unsigned char 
 26589 ;; Return value:  Size  Location     Type
 26590 ;;                  1    wreg      void 
 26591 ;; Registers used:
 26592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26593 ;; Tracked objects:
 26594 ;;		On entry : 0/0
 26595 ;;		On exit  : 0/0
 26596 ;;		Unchanged: 0/0
 26597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26600 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26601 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26602 ;;Total ram usage:        9 bytes
 26603 ;; Hardware stack levels used:    1
 26604 ;; Hardware stack levels required when called:    6
 26605 ;; This function calls:
 26606 ;;		_fat_find_file
 26607 ;; This function is called by:
 26608 ;;		_api_prepare
 26609 ;; This function uses a non-reentrant model
 26610 ;;
 26611                           
 26612                           	psect	text126
 26613  005D4E                     __ptext126:
 26614                           	opt stack 0
 26615  005D4E                     __fill_buffer_find_file:
 26616                           	opt stack 23
 26617                           
 26618                           ;api.c: 349: uint8_t cntr;;api.c: 352: outBuffer[0] = DATAREQUEST_FIND_FILE;
 26619                           
 26620                           ; BSR set to: 1
 26621                           ;incstack = 0
 26622  005D4E  C046  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 26623  005D52  C047  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 26624  005D56  0E81               	movlw	129
 26625  005D58  6EDF               	movwf	indf2,c
 26626                           
 26627                           ;api.c: 355: outBuffer[1] = 0xC125 >> 8;
 26628  005D5A  EE20 F001          	lfsr	2,1
 26629  005D5E  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 26630  005D60  26D9               	addwf	fsr2l,f,c
 26631  005D62  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 26632  005D64  22DA               	addwfc	fsr2h,f,c
 26633  005D66  0EC1               	movlw	193
 26634  005D68  6EDF               	movwf	indf2,c
 26635                           
 26636                           ;api.c: 356: outBuffer[2] = (uint8_t) 0xC125;
 26637  005D6A  EE20 F002          	lfsr	2,2
 26638  005D6E  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 26639  005D70  26D9               	addwf	fsr2l,f,c
 26640  005D72  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 26641  005D74  22DA               	addwfc	fsr2h,f,c
 26642  005D76  0E25               	movlw	37
 26643  005D78  6EDF               	movwf	indf2,c
 26644                           
 26645                           ;api.c: 359: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 26646  005D7A  0E01               	movlw	1
 26647  005D7C  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26648  005D7E  6E30               	movwf	fat_find_file@name,c
 26649  005D80  0E00               	movlw	0
 26650  005D82  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26651  005D84  6E31               	movwf	fat_find_file@name+1,c
 26652  005D86  0E09               	movlw	9
 26653  005D88  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26654  005D8A  6E32               	movwf	fat_find_file@extension,c
 26655  005D8C  0E00               	movlw	0
 26656  005D8E  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26657  005D90  6E33               	movwf	fat_find_file@extension+1,c
 26658  005D92  EC9D  F02B         	call	_fat_find_file	;wreg free
 26659  005D96  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 26660  005D98  EE20 F003          	lfsr	2,3
 26661  005D9C  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 26662  005D9E  26D9               	addwf	fsr2l,f,c
 26663  005DA0  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 26664  005DA2  22DA               	addwfc	fsr2h,f,c
 26665  005DA4  C048  FFDF         	movff	??__fill_buffer_find_file,indf2
 26666                           
 26667                           ;api.c: 362: for(cntr=0; cntr<11; ++cntr)
 26668  005DA8  0E00               	movlw	0
 26669  005DAA  6E4C               	movwf	__fill_buffer_find_file@cntr,c
 26670  005DAC                     l13547:
 26671  005DAC  0E0A               	movlw	10
 26672  005DAE  644C               	cpfsgt	__fill_buffer_find_file@cntr,c
 26673  005DB0  D001               	goto	l2639
 26674  005DB2  0012               	return	
 26675  005DB4                     l2639:
 26676                           
 26677                           ;api.c: 363: {;api.c: 364: outBuffer[cntr+12] = inBuffer[cntr+1];
 26678  005DB4  504C               	movf	__fill_buffer_find_file@cntr,w,c
 26679  005DB6  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 26680  005DB8  6A49               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 26681  005DBA  0E01               	movlw	1
 26682  005DBC  2648               	addwf	??__fill_buffer_find_file,f,c
 26683  005DBE  0E00               	movlw	0
 26684  005DC0  2249               	addwfc	??__fill_buffer_find_file+1,f,c
 26685  005DC2  5048               	movf	??__fill_buffer_find_file,w,c
 26686  005DC4  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26687  005DC6  6ED9               	movwf	fsr2l,c
 26688  005DC8  5049               	movf	??__fill_buffer_find_file+1,w,c
 26689  005DCA  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26690  005DCC  6EDA               	movwf	fsr2h,c
 26691  005DCE  504C               	movf	__fill_buffer_find_file@cntr,w,c
 26692  005DD0  6E4A               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 26693  005DD2  6A4B               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 26694  005DD4  0E0C               	movlw	12
 26695  005DD6  264A               	addwf	??__fill_buffer_find_file+2,f,c
 26696  005DD8  0E00               	movlw	0
 26697  005DDA  224B               	addwfc	??__fill_buffer_find_file+3,f,c
 26698  005DDC  504A               	movf	??__fill_buffer_find_file+2,w,c
 26699  005DDE  2446               	addwf	__fill_buffer_find_file@outBuffer,w,c
 26700  005DE0  6EE1               	movwf	fsr1l,c
 26701  005DE2  504B               	movf	??__fill_buffer_find_file+3,w,c
 26702  005DE4  2047               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 26703  005DE6  6EE2               	movwf	fsr1h,c
 26704  005DE8  CFDF FFE7          	movff	indf2,indf1
 26705  005DEC  2A4C               	incf	__fill_buffer_find_file@cntr,f,c
 26706  005DEE  D7DE               	goto	l13547
 26707  005DF0                     __end_of__fill_buffer_find_file:
 26708                           	opt stack 0
 26709                           tosu	equ	0xFFF
 26710                           tosh	equ	0xFFE
 26711                           tosl	equ	0xFFD
 26712                           pclath	equ	0xFFA
 26713                           tblptru	equ	0xFF8
 26714                           tblptrh	equ	0xFF7
 26715                           tblptrl	equ	0xFF6
 26716                           tablat	equ	0xFF5
 26717                           prodh	equ	0xFF4
 26718                           prodl	equ	0xFF3
 26719                           intcon	equ	0xFF2
 26720                           intcon2	equ	0xFF1
 26721                           intcon3	equ	0xFF0
 26722                           indf0	equ	0xFEF
 26723                           postinc0	equ	0xFEE
 26724                           fsr0h	equ	0xFEA
 26725                           fsr0l	equ	0xFE9
 26726                           wreg	equ	0xFE8
 26727                           indf1	equ	0xFE7
 26728                           postdec1	equ	0xFE5
 26729                           plusw1	equ	0xFE3
 26730                           fsr1h	equ	0xFE2
 26731                           fsr1l	equ	0xFE1
 26732                           indf2	equ	0xFDF
 26733                           postinc2	equ	0xFDE
 26734                           postdec2	equ	0xFDD
 26735                           plusw2	equ	0xFDB
 26736                           fsr2h	equ	0xFDA
 26737                           fsr2l	equ	0xFD9
 26738                           status	equ	0xFD8
 26739                           
 26740 ;; *************** function _api_parse *****************
 26741 ;; Defined at:
 26742 ;;		line 124 in file "api.c"
 26743 ;; Parameters:    Size  Location     Type
 26744 ;;  inBuffer        2   51[BANK0 ] PTR unsigned char 
 26745 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 26746 ;;  receivedData    1   53[BANK0 ] unsigned char 
 26747 ;; Auto vars:     Size  Location     Type
 26748 ;;  idx             1   87[COMRAM] unsigned char 
 26749 ;; Return value:  Size  Location     Type
 26750 ;;                  1    wreg      void 
 26751 ;; Registers used:
 26752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26753 ;; Tracked objects:
 26754 ;;		On entry : 0/0
 26755 ;;		On exit  : 0/0
 26756 ;;		Unchanged: 0/0
 26757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26758 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26761 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26762 ;;Total ram usage:        6 bytes
 26763 ;; Hardware stack levels used:    1
 26764 ;; Hardware stack levels required when called:   10
 26765 ;; This function calls:
 26766 ;;		__parse_command_long
 26767 ;;		__parse_command_short
 26768 ;; This function is called by:
 26769 ;;		_main
 26770 ;;		_APP_DeviceCustomHIDTasks
 26771 ;; This function uses a non-reentrant model
 26772 ;;
 26773                           
 26774                           	psect	text127
 26775  0050F4                     __ptext127:
 26776                           	opt stack 0
 26777  0050F4                     _api_parse:
 26778                           	opt stack 20
 26779                           
 26780                           ;api.c: 128: uint8_t idx;;api.c: 130: if(inBuffer[0]>0x7F)
 26781                           
 26782                           ;incstack = 0
 26783  0050F4  C093  FFD9         	movff	api_parse@inBuffer,fsr2l
 26784  0050F8  C094  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26785  0050FC  0E7F               	movlw	127
 26786  0050FE  64DF               	cpfsgt	indf2,c
 26787  005100  D001               	goto	l2597
 26788  005102  0012               	return	
 26789  005104                     l2597:
 26790                           
 26791                           ;api.c: 135: };api.c: 137: idx = 1;
 26792  005104  0E01               	movlw	1
 26793  005106  6E58               	movwf	api_parse@idx,c
 26794                           
 26795                           ;api.c: 138: while(idx<receivedDataLength)
 26796  005108  D058               	goto	l2604
 26797  00510A                     
 26798                           ;api.c: 139: {;api.c: 141: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 26799  00510A  5058               	movf	api_parse@idx,w,c
 26800  00510C  0D01               	mullw	1
 26801  00510E  50F3               	movf	prodl,w,c
 26802  005110  0100               	movlb	0	; () banked
 26803  005112  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 26804  005114  6ED9               	movwf	fsr2l,c
 26805  005116  50F4               	movf	prodh,w,c
 26806  005118  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26807  00511A  6EDA               	movwf	fsr2h,c
 26808  00511C  0E99               	movlw	153
 26809  00511E  18DE               	xorwf	postinc2,w,c
 26810  005120  B4D8               	btfsc	status,2,c
 26811  005122  0012               	return	
 26812  005124  D02E               	goto	l2602
 26813  005126                     
 26814                           ; BSR set to: 0
 26815                           ;api.c: 149: _parse_command_short(inBuffer[idx]);
 26816                           
 26817                           ; BSR set to: 0
 26818  005126  5058               	movf	api_parse@idx,w,c
 26819  005128  0D01               	mullw	1
 26820  00512A  50F3               	movf	prodl,w,c
 26821  00512C  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 26822  00512E  6ED9               	movwf	fsr2l,c
 26823  005130  50F4               	movf	prodh,w,c
 26824  005132  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26825  005134  6EDA               	movwf	fsr2h,c
 26826  005136  50DF               	movf	indf2,w,c
 26827  005138  EC57  F02C         	call	__parse_command_short
 26828  00513C  D00C               	goto	l14079
 26829  00513E                     
 26830                           ;api.c: 154: _parse_command_short(inBuffer[idx]);
 26831  00513E  5058               	movf	api_parse@idx,w,c
 26832  005140  0D01               	mullw	1
 26833  005142  50F3               	movf	prodl,w,c
 26834  005144  0100               	movlb	0	; () banked
 26835  005146  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 26836  005148  6ED9               	movwf	fsr2l,c
 26837  00514A  50F4               	movf	prodh,w,c
 26838  00514C  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26839  00514E  6EDA               	movwf	fsr2h,c
 26840  005150  50DF               	movf	indf2,w,c
 26841  005152  EC57  F02C         	call	__parse_command_short
 26842  005156                     l14079:
 26843                           
 26844                           ;api.c: 155: ++idx;
 26845  005156  2A58               	incf	api_parse@idx,f,c
 26846                           
 26847                           ;api.c: 156: break;
 26848  005158  D030               	goto	l2604
 26849  00515A                     
 26850                           ;api.c: 159: idx += _parse_command_long(inBuffer[idx]);
 26851  00515A  5058               	movf	api_parse@idx,w,c
 26852  00515C  0D01               	mullw	1
 26853  00515E  50F3               	movf	prodl,w,c
 26854  005160  0100               	movlb	0	; () banked
 26855  005162  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 26856  005164  6ED9               	movwf	fsr2l,c
 26857  005166  50F4               	movf	prodh,w,c
 26858  005168  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26859  00516A  6EDA               	movwf	fsr2h,c
 26860  00516C  50DF               	movf	indf2,w,c
 26861  00516E  6E56               	movwf	??_api_parse& (0+255),c
 26862  005170  6A57               	clrf	(??_api_parse+1)& (0+255),c
 26863  005172  C056  F053         	movff	??_api_parse,__parse_command_long@data
 26864  005176  C057  F054         	movff	??_api_parse+1,__parse_command_long@data+1
 26865  00517A  EC9F  F031         	call	__parse_command_long	;wreg free
 26866  00517E  2658               	addwf	api_parse@idx,f,c
 26867                           
 26868                           ;api.c: 160: break;
 26869  005180  D01C               	goto	l2604
 26870  005182                     l2602:
 26871  005182  5058               	movf	api_parse@idx,w,c
 26872  005184  0D01               	mullw	1
 26873  005186  50F3               	movf	prodl,w,c
 26874  005188  0100               	movlb	0	; () banked
 26875  00518A  2593               	addwf	api_parse@inBuffer& (0+255),w,b
 26876  00518C  6ED9               	movwf	fsr2l,c
 26877  00518E  50F4               	movf	prodh,w,c
 26878  005190  2194               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26879  005192  6EDA               	movwf	fsr2h,c
 26880  005194  50DF               	movf	indf2,w,c
 26881  005196  0BF0               	andlw	240
 26882  005198  6E56               	movwf	??_api_parse& (0+255),c
 26883  00519A  6A57               	clrf	(??_api_parse+1)& (0+255),c
 26884                           
 26885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26886                           ; Switch size 1, requested type "space"
 26887                           ; Number of cases is 1, Range of values is 0 to 0
 26888                           ; switch strategies available:
 26889                           ; Name         Instructions Cycles
 26890                           ; simple_byte            4     3 (average)
 26891                           ;	Chosen strategy is simple_byte
 26892  00519C  5057               	movf	??_api_parse+1,w,c
 26893  00519E  0A00               	xorlw	0	; case 0
 26894  0051A0  A4D8               	btfss	status,2,c
 26895  0051A2  0012               	return	
 26896                           
 26897                           ; BSR set to: 0
 26898                           ; Switch size 1, requested type "space"
 26899                           ; Number of cases is 3, Range of values is 32 to 80
 26900                           ; switch strategies available:
 26901                           ; Name         Instructions Cycles
 26902                           ; simple_byte           10     6 (average)
 26903                           ;	Chosen strategy is simple_byte
 26904  0051A4  5056               	movf	??_api_parse,w,c
 26905  0051A6  0A20               	xorlw	32	; case 32
 26906  0051A8  B4D8               	btfsc	status,2,c
 26907  0051AA  D7BD               	goto	l2603
 26908  0051AC  0A10               	xorlw	16	; case 48
 26909  0051AE  B4D8               	btfsc	status,2,c
 26910  0051B0  D7C6               	goto	l2605
 26911  0051B2  0A60               	xorlw	96	; case 80
 26912  0051B4  A4D8               	btfss	status,2,c
 26913  0051B6  0012               	return	
 26914  0051B8  D7D0               	goto	l2606
 26915  0051BA                     l2604:
 26916                           
 26917                           ; BSR set to: 0
 26918                           
 26919                           ; BSR set to: 0
 26920  0051BA  0100               	movlb	0	; () banked
 26921  0051BC  5195               	movf	api_parse@receivedDataLength& (0+255),w,b
 26922  0051BE  5C58               	subwf	api_parse@idx,w,c
 26923  0051C0  B0D8               	btfsc	status,0,c
 26924  0051C2  0012               	return	
 26925  0051C4  D7A2               	goto	l2600
 26926  0051C6                     __end_of_api_parse:
 26927                           	opt stack 0
 26928                           tosu	equ	0xFFF
 26929                           tosh	equ	0xFFE
 26930                           tosl	equ	0xFFD
 26931                           pclath	equ	0xFFA
 26932                           tblptru	equ	0xFF8
 26933                           tblptrh	equ	0xFF7
 26934                           tblptrl	equ	0xFF6
 26935                           tablat	equ	0xFF5
 26936                           prodh	equ	0xFF4
 26937                           prodl	equ	0xFF3
 26938                           intcon	equ	0xFF2
 26939                           intcon2	equ	0xFF1
 26940                           intcon3	equ	0xFF0
 26941                           indf0	equ	0xFEF
 26942                           postinc0	equ	0xFEE
 26943                           fsr0h	equ	0xFEA
 26944                           fsr0l	equ	0xFE9
 26945                           wreg	equ	0xFE8
 26946                           indf1	equ	0xFE7
 26947                           postdec1	equ	0xFE5
 26948                           plusw1	equ	0xFE3
 26949                           fsr1h	equ	0xFE2
 26950                           fsr1l	equ	0xFE1
 26951                           indf2	equ	0xFDF
 26952                           postinc2	equ	0xFDE
 26953                           postdec2	equ	0xFDD
 26954                           plusw2	equ	0xFDB
 26955                           fsr2h	equ	0xFDA
 26956                           fsr2l	equ	0xFD9
 26957                           status	equ	0xFD8
 26958                           
 26959 ;; *************** function __parse_command_short *****************
 26960 ;; Defined at:
 26961 ;;		line 416 in file "api.c"
 26962 ;; Parameters:    Size  Location     Type
 26963 ;;  cmd             1    wreg     unsigned char 
 26964 ;; Auto vars:     Size  Location     Type
 26965 ;;  cmd             1   43[COMRAM] unsigned char 
 26966 ;; Return value:  Size  Location     Type
 26967 ;;                  1    wreg      void 
 26968 ;; Registers used:
 26969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26970 ;; Tracked objects:
 26971 ;;		On entry : 0/0
 26972 ;;		On exit  : 0/0
 26973 ;;		Unchanged: 0/0
 26974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26978 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26979 ;;Total ram usage:        1 bytes
 26980 ;; Hardware stack levels used:    1
 26981 ;; Hardware stack levels required when called:    8
 26982 ;; This function calls:
 26983 ;;		_i2c_eeprom_writeByte
 26984 ;;		_reboot
 26985 ;;		_system_delay_ms
 26986 ;; This function is called by:
 26987 ;;		_api_parse
 26988 ;; This function uses a non-reentrant model
 26989 ;;
 26990                           
 26991                           	psect	text128
 26992  0058AE                     __ptext128:
 26993                           	opt stack 0
 26994  0058AE                     __parse_command_short:
 26995                           	opt stack 21
 26996                           
 26997                           ;incstack = 0
 26998                           ;__parse_command_short@cmd stored from wreg
 26999  0058AE  6E2C               	movwf	__parse_command_short@cmd,c
 27000                           
 27001                           ;api.c: 418: switch(cmd)
 27002  0058B0  D041               	goto	l2648
 27003  0058B2                     
 27004                           ;api.c: 421: i2c_eeprom_writeByte(0x100, 0x00);
 27005  0058B2  0E01               	movlw	1
 27006  0058B4  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 27007  0058B6  0E00               	movlw	0
 27008  0058B8  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 27009  0058BA  0E00               	movlw	0
 27010  0058BC  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 27011  0058BE  EC86  F03C         	call	_i2c_eeprom_writeByte	;wreg free
 27012                           
 27013                           ;api.c: 422: system_delay_ms(10);
 27014  0058C2  0E0A               	movlw	10
 27015  0058C4  EC53  F03F         	call	_system_delay_ms
 27016                           
 27017                           ;api.c: 423: reboot();
 27018  0058C8  EC13  F040         	call	_reboot	;wreg free
 27019                           
 27020                           ;api.c: 424: break;
 27021  0058CC  0012               	return	
 27022  0058CE                     
 27023                           ;api.c: 427: i2c_eeprom_writeByte(0x100, 0x94);
 27024  0058CE  0E01               	movlw	1
 27025  0058D0  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 27026  0058D2  0E00               	movlw	0
 27027  0058D4  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 27028  0058D6  0E94               	movlw	148
 27029  0058D8  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 27030  0058DA  EC86  F03C         	call	_i2c_eeprom_writeByte	;wreg free
 27031                           
 27032                           ;api.c: 428: system_delay_ms(10);
 27033  0058DE  0E0A               	movlw	10
 27034  0058E0  EC53  F03F         	call	_system_delay_ms
 27035                           
 27036                           ;api.c: 429: reboot();
 27037  0058E4  EC13  F040         	call	_reboot	;wreg free
 27038                           
 27039                           ;api.c: 430: break;
 27040  0058E8  0012               	return	
 27041  0058EA                     
 27042                           ;api.c: 433: i2c_eeprom_writeByte(0x100, 0x78);
 27043  0058EA  0E01               	movlw	1
 27044  0058EC  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 27045  0058EE  0E00               	movlw	0
 27046  0058F0  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 27047  0058F2  0E78               	movlw	120
 27048  0058F4  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 27049  0058F6  EC86  F03C         	call	_i2c_eeprom_writeByte	;wreg free
 27050                           
 27051                           ;api.c: 434: system_delay_ms(10);
 27052  0058FA  0E0A               	movlw	10
 27053  0058FC  EC53  F03F         	call	_system_delay_ms
 27054                           
 27055                           ;api.c: 435: reboot();
 27056  005900  EC13  F040         	call	_reboot	;wreg free
 27057                           
 27058                           ;api.c: 436: break;
 27059  005904  0012               	return	
 27060  005906                     
 27061                           ;api.c: 440: i2c_eeprom_writeByte(0x100, 0x78);
 27062  005906  0E01               	movlw	1
 27063  005908  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 27064  00590A  0E00               	movlw	0
 27065  00590C  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 27066  00590E  0E78               	movlw	120
 27067  005910  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 27068  005912  EC86  F03C         	call	_i2c_eeprom_writeByte	;wreg free
 27069                           
 27070                           ;api.c: 441: system_delay_ms(10);
 27071  005916  0E0A               	movlw	10
 27072  005918  EC53  F03F         	call	_system_delay_ms
 27073                           
 27074                           ;api.c: 442: reboot();
 27075  00591C  EC13  F040         	call	_reboot	;wreg free
 27076                           
 27077                           ;api.c: 443: break;
 27078  005920  0012               	return	
 27079  005922                     
 27080                           ;api.c: 446: --os.encoderCount;
 27081  005922  0100               	movlb	0	; () banked
 27082  005924  07B9               	decf	_os& (0+255),f,b	;volatile
 27083                           
 27084                           ;api.c: 447: break;
 27085  005926  0012               	return	
 27086  005928                     
 27087                           ;api.c: 450: ++os.encoderCount;
 27088                           
 27089                           ; BSR set to: 0
 27090  005928  0100               	movlb	0	; () banked
 27091  00592A  2BB9               	incf	_os& (0+255),f,b	;volatile
 27092                           
 27093                           ;api.c: 451: break;
 27094  00592C  0012               	return	
 27095  00592E                     
 27096                           ;api.c: 454: ++os.buttonCount;
 27097                           
 27098                           ; BSR set to: 0
 27099  00592E  0100               	movlb	0	; () banked
 27100  005930  2BBA               	incf	(_os+1)& (0+255),f,b	;volatile
 27101                           
 27102                           ; BSR set to: 0
 27103                           ;api.c: 456: }
 27104                           
 27105                           ;api.c: 455: break;
 27106  005932  0012               	return	
 27107  005934                     l2648:
 27108                           
 27109                           ; BSR set to: 0
 27110  005934  502C               	movf	__parse_command_short@cmd,w,c
 27111                           
 27112                           ; Switch size 1, requested type "space"
 27113                           ; Number of cases is 7, Range of values is 32 to 62
 27114                           ; switch strategies available:
 27115                           ; Name         Instructions Cycles
 27116                           ; simple_byte           22    12 (average)
 27117                           ;	Chosen strategy is simple_byte
 27118  005936  0A20               	xorlw	32	; case 32
 27119  005938  B4D8               	btfsc	status,2,c
 27120  00593A  D7BB               	goto	l2649
 27121  00593C  0A01               	xorlw	1	; case 33
 27122  00593E  B4D8               	btfsc	status,2,c
 27123  005940  D7C6               	goto	l2651
 27124  005942  0A03               	xorlw	3	; case 34
 27125  005944  B4D8               	btfsc	status,2,c
 27126  005946  D7D1               	goto	l2652
 27127  005948  0A01               	xorlw	1	; case 35
 27128  00594A  B4D8               	btfsc	status,2,c
 27129  00594C  D7DC               	goto	l2653
 27130  00594E  0A1F               	xorlw	31	; case 60
 27131  005950  B4D8               	btfsc	status,2,c
 27132  005952  D7E7               	goto	l2654
 27133  005954  0A01               	xorlw	1	; case 61
 27134  005956  B4D8               	btfsc	status,2,c
 27135  005958  D7E7               	goto	l2655
 27136  00595A  0A03               	xorlw	3	; case 62
 27137  00595C  A4D8               	btfss	status,2,c
 27138  00595E  0012               	return	
 27139  005960  D7E6               	goto	l2656
 27140  005962                     __end_of__parse_command_short:
 27141                           	opt stack 0
 27142                           tosu	equ	0xFFF
 27143                           tosh	equ	0xFFE
 27144                           tosl	equ	0xFFD
 27145                           pclath	equ	0xFFA
 27146                           tblptru	equ	0xFF8
 27147                           tblptrh	equ	0xFF7
 27148                           tblptrl	equ	0xFF6
 27149                           tablat	equ	0xFF5
 27150                           prodh	equ	0xFF4
 27151                           prodl	equ	0xFF3
 27152                           intcon	equ	0xFF2
 27153                           intcon2	equ	0xFF1
 27154                           intcon3	equ	0xFF0
 27155                           indf0	equ	0xFEF
 27156                           postinc0	equ	0xFEE
 27157                           fsr0h	equ	0xFEA
 27158                           fsr0l	equ	0xFE9
 27159                           wreg	equ	0xFE8
 27160                           indf1	equ	0xFE7
 27161                           postdec1	equ	0xFE5
 27162                           plusw1	equ	0xFE3
 27163                           fsr1h	equ	0xFE2
 27164                           fsr1l	equ	0xFE1
 27165                           indf2	equ	0xFDF
 27166                           postinc2	equ	0xFDE
 27167                           postdec2	equ	0xFDD
 27168                           plusw2	equ	0xFDB
 27169                           fsr2h	equ	0xFDA
 27170                           fsr2l	equ	0xFD9
 27171                           status	equ	0xFD8
 27172                           
 27173 ;; *************** function _system_delay_ms *****************
 27174 ;; Defined at:
 27175 ;;		line 63 in file "os.c"
 27176 ;; Parameters:    Size  Location     Type
 27177 ;;  ms              1    wreg     unsigned char 
 27178 ;; Auto vars:     Size  Location     Type
 27179 ;;  ms              1    1[COMRAM] unsigned char 
 27180 ;;  cntr            1    2[COMRAM] unsigned char 
 27181 ;; Return value:  Size  Location     Type
 27182 ;;                  1    wreg      void 
 27183 ;; Registers used:
 27184 ;;		wreg, status,2, status,0, cstack
 27185 ;; Tracked objects:
 27186 ;;		On entry : 0/0
 27187 ;;		On exit  : 0/0
 27188 ;;		Unchanged: 0/0
 27189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27193 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27194 ;;Total ram usage:        3 bytes
 27195 ;; Hardware stack levels used:    1
 27196 ;; This function calls:
 27197 ;;		Nothing
 27198 ;; This function is called by:
 27199 ;;		__ui_encoder
 27200 ;;		__parse_command_short
 27201 ;; This function uses a non-reentrant model
 27202 ;;
 27203                           
 27204                           	psect	text129
 27205  007EA6                     __ptext129:
 27206                           	opt stack 0
 27207  007EA6                     _system_delay_ms:
 27208                           	opt stack 28
 27209                           
 27210                           ;incstack = 0
 27211                           ;system_delay_ms@ms stored from wreg
 27212  007EA6  6E02               	movwf	system_delay_ms@ms,c
 27213                           
 27214                           ;os.c: 65: uint8_t cntr;;os.c: 66: for(cntr=0; cntr<ms; ++cntr)
 27215  007EA8  0E00               	movlw	0
 27216  007EAA  6E03               	movwf	system_delay_ms@cntr,c
 27217  007EAC  D009               	goto	l1090
 27218  007EAE                     
 27219                           ;os.c: 67: {;os.c: 68: _delay((unsigned long)((6)*(8000000/4000.0)));
 27220  007EAE  0E10               	movlw	16
 27221  007EB0  6E01               	movwf	??_system_delay_ms& (0+255),c
 27222  007EB2  0E94               	movlw	148
 27223  007EB4                     u12177:
 27224  007EB4  2EE8               	decfsz	wreg,f,c
 27225  007EB6  D7FE               	bra	u12177
 27226  007EB8  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 27227  007EBA  D7FC               	bra	u12177
 27228  007EBC  D000               	nop2	
 27229  007EBE  2A03               	incf	system_delay_ms@cntr,f,c
 27230  007EC0                     l1090:
 27231  007EC0  5002               	movf	system_delay_ms@ms,w,c
 27232  007EC2  5C03               	subwf	system_delay_ms@cntr,w,c
 27233  007EC4  B0D8               	btfsc	status,0,c
 27234  007EC6  0012               	return	
 27235  007EC8  D7F2               	goto	l1091
 27236  007ECA                     __end_of_system_delay_ms:
 27237                           	opt stack 0
 27238                           tosu	equ	0xFFF
 27239                           tosh	equ	0xFFE
 27240                           tosl	equ	0xFFD
 27241                           pclath	equ	0xFFA
 27242                           tblptru	equ	0xFF8
 27243                           tblptrh	equ	0xFF7
 27244                           tblptrl	equ	0xFF6
 27245                           tablat	equ	0xFF5
 27246                           prodh	equ	0xFF4
 27247                           prodl	equ	0xFF3
 27248                           intcon	equ	0xFF2
 27249                           intcon2	equ	0xFF1
 27250                           intcon3	equ	0xFF0
 27251                           indf0	equ	0xFEF
 27252                           postinc0	equ	0xFEE
 27253                           fsr0h	equ	0xFEA
 27254                           fsr0l	equ	0xFE9
 27255                           wreg	equ	0xFE8
 27256                           indf1	equ	0xFE7
 27257                           postdec1	equ	0xFE5
 27258                           plusw1	equ	0xFE3
 27259                           fsr1h	equ	0xFE2
 27260                           fsr1l	equ	0xFE1
 27261                           indf2	equ	0xFDF
 27262                           postinc2	equ	0xFDE
 27263                           postdec2	equ	0xFDD
 27264                           plusw2	equ	0xFDB
 27265                           fsr2h	equ	0xFDA
 27266                           fsr2l	equ	0xFD9
 27267                           status	equ	0xFD8
 27268                           
 27269 ;; *************** function _reboot *****************
 27270 ;; Defined at:
 27271 ;;		line 256 in file "os.c"
 27272 ;; Parameters:    Size  Location     Type
 27273 ;;		None
 27274 ;; Auto vars:     Size  Location     Type
 27275 ;;		None
 27276 ;; Return value:  Size  Location     Type
 27277 ;;                  1    wreg      void 
 27278 ;; Registers used:
 27279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27280 ;; Tracked objects:
 27281 ;;		On entry : 0/0
 27282 ;;		On exit  : 0/0
 27283 ;;		Unchanged: 0/0
 27284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27289 ;;Total ram usage:        0 bytes
 27290 ;; Hardware stack levels used:    1
 27291 ;; Hardware stack levels required when called:    7
 27292 ;; This function calls:
 27293 ;;		_display_prepare
 27294 ;;		_display_update
 27295 ;;		_ui_get_status
 27296 ;; This function is called by:
 27297 ;;		__ui_encoder
 27298 ;;		__parse_command_short
 27299 ;; This function uses a non-reentrant model
 27300 ;;
 27301                           
 27302                           	psect	text130
 27303  008026                     __ptext130:
 27304                           	opt stack 0
 27305  008026                     _reboot:
 27306                           	opt stack 21
 27307                           
 27308                           ;os.c: 259: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 27309                           
 27310                           ;incstack = 0
 27311  008026  0E80               	movlw	128
 27312  008028  0100               	movlb	0	; () banked
 27313  00802A  6FBE               	movwf	(_os+5)& (0+255),b	;volatile
 27314                           
 27315                           ; BSR set to: 0
 27316                           ;os.c: 260: display_prepare(os.display_mode);
 27317  00802C  51BE               	movf	(_os+5)& (0+255),w,b	;volatile
 27318  00802E  ECE3  F028         	call	_display_prepare
 27319                           
 27320                           ;os.c: 261: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 27321  008032  EC01  F041         	call	_ui_get_status	;wreg free
 27322  008036  0A05               	xorlw	5
 27323  008038  B4D8               	btfsc	status,2,c
 27324                           
 27325                           ;os.c: 262: {;os.c: 263: display_update();
 27326  00803A  EC37  F036         	call	_display_update	;wreg free
 27327  00803E                     
 27328                           ;os.c: 264: };os.c: 267: while(1);
 27329  00803E  D7FF               	goto	l1117
 27330  008040                     __end_of_reboot:
 27331                           	opt stack 0
 27332                           tosu	equ	0xFFF
 27333                           tosh	equ	0xFFE
 27334                           tosl	equ	0xFFD
 27335                           pclath	equ	0xFFA
 27336                           tblptru	equ	0xFF8
 27337                           tblptrh	equ	0xFF7
 27338                           tblptrl	equ	0xFF6
 27339                           tablat	equ	0xFF5
 27340                           prodh	equ	0xFF4
 27341                           prodl	equ	0xFF3
 27342                           intcon	equ	0xFF2
 27343                           intcon2	equ	0xFF1
 27344                           intcon3	equ	0xFF0
 27345                           indf0	equ	0xFEF
 27346                           postinc0	equ	0xFEE
 27347                           fsr0h	equ	0xFEA
 27348                           fsr0l	equ	0xFE9
 27349                           wreg	equ	0xFE8
 27350                           indf1	equ	0xFE7
 27351                           postdec1	equ	0xFE5
 27352                           plusw1	equ	0xFE3
 27353                           fsr1h	equ	0xFE2
 27354                           fsr1l	equ	0xFE1
 27355                           indf2	equ	0xFDF
 27356                           postinc2	equ	0xFDE
 27357                           postdec2	equ	0xFDD
 27358                           plusw2	equ	0xFDB
 27359                           fsr2h	equ	0xFDA
 27360                           fsr2l	equ	0xFD9
 27361                           status	equ	0xFD8
 27362                           
 27363 ;; *************** function _ui_get_status *****************
 27364 ;; Defined at:
 27365 ;;		line 95 in file "ui.c"
 27366 ;; Parameters:    Size  Location     Type
 27367 ;;		None
 27368 ;; Auto vars:     Size  Location     Type
 27369 ;;		None
 27370 ;; Return value:  Size  Location     Type
 27371 ;;                  1    wreg      enum E7928
 27372 ;; Registers used:
 27373 ;;		wreg, status,2
 27374 ;; Tracked objects:
 27375 ;;		On entry : 0/0
 27376 ;;		On exit  : 0/0
 27377 ;;		Unchanged: 0/0
 27378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27383 ;;Total ram usage:        0 bytes
 27384 ;; Hardware stack levels used:    1
 27385 ;; This function calls:
 27386 ;;		Nothing
 27387 ;; This function is called by:
 27388 ;;		_main
 27389 ;;		_reboot
 27390 ;;		__fill_buffer_get_status
 27391 ;; This function uses a non-reentrant model
 27392 ;;
 27393                           
 27394                           	psect	text131
 27395  008202                     __ptext131:
 27396                           	opt stack 0
 27397  008202                     _ui_get_status:
 27398                           	opt stack 27
 27399                           
 27400                           ;ui.c: 97: return userInterfaceStatus;
 27401                           
 27402                           ;incstack = 0
 27403  008202  0100               	movlb	0	; () banked
 27404  008204  51E0               	movf	_userInterfaceStatus& (0+255),w,b
 27405  008206  0012               	return	
 27406  008208                     __end_of_ui_get_status:
 27407                           	opt stack 0
 27408                           tosu	equ	0xFFF
 27409                           tosh	equ	0xFFE
 27410                           tosl	equ	0xFFD
 27411                           pclath	equ	0xFFA
 27412                           tblptru	equ	0xFF8
 27413                           tblptrh	equ	0xFF7
 27414                           tblptrl	equ	0xFF6
 27415                           tablat	equ	0xFF5
 27416                           prodh	equ	0xFF4
 27417                           prodl	equ	0xFF3
 27418                           intcon	equ	0xFF2
 27419                           intcon2	equ	0xFF1
 27420                           intcon3	equ	0xFF0
 27421                           indf0	equ	0xFEF
 27422                           postinc0	equ	0xFEE
 27423                           fsr0h	equ	0xFEA
 27424                           fsr0l	equ	0xFE9
 27425                           wreg	equ	0xFE8
 27426                           indf1	equ	0xFE7
 27427                           postdec1	equ	0xFE5
 27428                           plusw1	equ	0xFE3
 27429                           fsr1h	equ	0xFE2
 27430                           fsr1l	equ	0xFE1
 27431                           indf2	equ	0xFDF
 27432                           postinc2	equ	0xFDE
 27433                           postdec2	equ	0xFDD
 27434                           plusw2	equ	0xFDB
 27435                           fsr2h	equ	0xFDA
 27436                           fsr2l	equ	0xFD9
 27437                           status	equ	0xFD8
 27438                           
 27439 ;; *************** function _display_update *****************
 27440 ;; Defined at:
 27441 ;;		line 555 in file "display.c"
 27442 ;; Parameters:    Size  Location     Type
 27443 ;;		None
 27444 ;; Auto vars:     Size  Location     Type
 27445 ;;		None
 27446 ;; Return value:  Size  Location     Type
 27447 ;;                  1    wreg      void 
 27448 ;; Registers used:
 27449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27450 ;; Tracked objects:
 27451 ;;		On entry : 0/0
 27452 ;;		On exit  : 0/0
 27453 ;;		Unchanged: 0/0
 27454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27459 ;;Total ram usage:        0 bytes
 27460 ;; Hardware stack levels used:    1
 27461 ;; Hardware stack levels required when called:    4
 27462 ;; This function calls:
 27463 ;;		_i2c_display_cursor
 27464 ;;		_i2c_display_write_fixed
 27465 ;; This function is called by:
 27466 ;;		_main
 27467 ;;		_reboot
 27468 ;; This function uses a non-reentrant model
 27469 ;;
 27470                           
 27471                           	psect	text132
 27472  006C6E                     __ptext132:
 27473                           	opt stack 0
 27474  006C6E                     _display_update:
 27475                           	opt stack 23
 27476                           
 27477                           ;display.c: 557: i2c_display_cursor(0, 0);
 27478                           
 27479                           ; BSR set to: 0
 27480                           ;incstack = 0
 27481  006C6E  0E00               	movlw	0
 27482  006C70  6E0E               	movwf	i2c_display_cursor@position,c
 27483  006C72  0E00               	movlw	0
 27484  006C74  EC65  F03F         	call	_i2c_display_cursor
 27485                           
 27486                           ;display.c: 558: i2c_display_write_fixed(&display_content[0][0], 20);
 27487  006C78  0E00               	movlw	low _display_content
 27488  006C7A  6E06               	movwf	i2c_display_write_fixed@data,c
 27489  006C7C  0E02               	movlw	high _display_content
 27490  006C7E  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27491  006C80  0E14               	movlw	20
 27492  006C82  6E08               	movwf	i2c_display_write_fixed@length,c
 27493  006C84  EC48  F03A         	call	_i2c_display_write_fixed	;wreg free
 27494                           
 27495                           ;display.c: 559: i2c_display_cursor(1, 0);
 27496  006C88  0E00               	movlw	0
 27497  006C8A  6E0E               	movwf	i2c_display_cursor@position,c
 27498  006C8C  0E01               	movlw	1
 27499  006C8E  EC65  F03F         	call	_i2c_display_cursor
 27500                           
 27501                           ;display.c: 560: i2c_display_write_fixed(&display_content[1][0], 20);
 27502  006C92  0E14               	movlw	low (_display_content+20)
 27503  006C94  6E06               	movwf	i2c_display_write_fixed@data,c
 27504  006C96  0E02               	movlw	high (_display_content+20)
 27505  006C98  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27506  006C9A  0E14               	movlw	20
 27507  006C9C  6E08               	movwf	i2c_display_write_fixed@length,c
 27508  006C9E  EC48  F03A         	call	_i2c_display_write_fixed	;wreg free
 27509                           
 27510                           ;display.c: 561: i2c_display_cursor(2, 0);
 27511  006CA2  0E00               	movlw	0
 27512  006CA4  6E0E               	movwf	i2c_display_cursor@position,c
 27513  006CA6  0E02               	movlw	2
 27514  006CA8  EC65  F03F         	call	_i2c_display_cursor
 27515                           
 27516                           ;display.c: 562: i2c_display_write_fixed(&display_content[2][0], 20);
 27517  006CAC  0E28               	movlw	low (_display_content+40)
 27518  006CAE  6E06               	movwf	i2c_display_write_fixed@data,c
 27519  006CB0  0E02               	movlw	high (_display_content+40)
 27520  006CB2  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27521  006CB4  0E14               	movlw	20
 27522  006CB6  6E08               	movwf	i2c_display_write_fixed@length,c
 27523  006CB8  EC48  F03A         	call	_i2c_display_write_fixed	;wreg free
 27524                           
 27525                           ;display.c: 563: i2c_display_cursor(3, 0);
 27526  006CBC  0E00               	movlw	0
 27527  006CBE  6E0E               	movwf	i2c_display_cursor@position,c
 27528  006CC0  0E03               	movlw	3
 27529  006CC2  EC65  F03F         	call	_i2c_display_cursor
 27530                           
 27531                           ;display.c: 564: i2c_display_write_fixed(&display_content[3][0], 20);
 27532  006CC6  0E3C               	movlw	low (_display_content+60)
 27533  006CC8  6E06               	movwf	i2c_display_write_fixed@data,c
 27534  006CCA  0E02               	movlw	high (_display_content+60)
 27535  006CCC  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27536  006CCE  0E14               	movlw	20
 27537  006CD0  6E08               	movwf	i2c_display_write_fixed@length,c
 27538  006CD2  EC48  F03A         	call	_i2c_display_write_fixed	;wreg free
 27539  006CD6  0012               	return		;funcret
 27540  006CD8                     __end_of_display_update:
 27541                           	opt stack 0
 27542                           tosu	equ	0xFFF
 27543                           tosh	equ	0xFFE
 27544                           tosl	equ	0xFFD
 27545                           pclath	equ	0xFFA
 27546                           tblptru	equ	0xFF8
 27547                           tblptrh	equ	0xFF7
 27548                           tblptrl	equ	0xFF6
 27549                           tablat	equ	0xFF5
 27550                           prodh	equ	0xFF4
 27551                           prodl	equ	0xFF3
 27552                           intcon	equ	0xFF2
 27553                           intcon2	equ	0xFF1
 27554                           intcon3	equ	0xFF0
 27555                           indf0	equ	0xFEF
 27556                           postinc0	equ	0xFEE
 27557                           fsr0h	equ	0xFEA
 27558                           fsr0l	equ	0xFE9
 27559                           wreg	equ	0xFE8
 27560                           indf1	equ	0xFE7
 27561                           postdec1	equ	0xFE5
 27562                           plusw1	equ	0xFE3
 27563                           fsr1h	equ	0xFE2
 27564                           fsr1l	equ	0xFE1
 27565                           indf2	equ	0xFDF
 27566                           postinc2	equ	0xFDE
 27567                           postdec2	equ	0xFDD
 27568                           plusw2	equ	0xFDB
 27569                           fsr2h	equ	0xFDA
 27570                           fsr2l	equ	0xFD9
 27571                           status	equ	0xFD8
 27572                           
 27573 ;; *************** function _i2c_display_write_fixed *****************
 27574 ;; Defined at:
 27575 ;;		line 270 in file "i2c.c"
 27576 ;; Parameters:    Size  Location     Type
 27577 ;;  data            2    5[COMRAM] PTR unsigned char 
 27578 ;;		 -> display_content(80), 
 27579 ;;  length          1    7[COMRAM] unsigned char 
 27580 ;; Auto vars:     Size  Location     Type
 27581 ;;  pos             1    8[COMRAM] unsigned char 
 27582 ;; Return value:  Size  Location     Type
 27583 ;;                  1    wreg      void 
 27584 ;; Registers used:
 27585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27586 ;; Tracked objects:
 27587 ;;		On entry : 0/0
 27588 ;;		On exit  : 0/0
 27589 ;;		Unchanged: 0/0
 27590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27591 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27595 ;;Total ram usage:        4 bytes
 27596 ;; Hardware stack levels used:    1
 27597 ;; Hardware stack levels required when called:    1
 27598 ;; This function calls:
 27599 ;;		__i2c_send
 27600 ;;		__i2c_start
 27601 ;;		__i2c_stop
 27602 ;;		__i2c_wait_idle
 27603 ;;		_i2c_set_frequency
 27604 ;; This function is called by:
 27605 ;;		_display_update
 27606 ;; This function uses a non-reentrant model
 27607 ;;
 27608                           
 27609                           	psect	text133
 27610  007490                     __ptext133:
 27611                           	opt stack 0
 27612  007490                     _i2c_display_write_fixed:
 27613                           	opt stack 25
 27614                           
 27615                           ;i2c.c: 272: uint8_t pos;;i2c.c: 275: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27616                           
 27617                           ;incstack = 0
 27618  007490  0E02               	movlw	2
 27619  007492  ECC7  F03E         	call	_i2c_set_frequency
 27620                           
 27621                           ;i2c.c: 277: _i2c_wait_idle();
 27622  007496  ECEB  F038         	call	__i2c_wait_idle	;wreg free
 27623                           
 27624                           ;i2c.c: 278: _i2c_start();
 27625  00749A  ECED  F040         	call	__i2c_start	;wreg free
 27626                           
 27627                           ;i2c.c: 279: _i2c_wait_idle();
 27628  00749E  ECEB  F038         	call	__i2c_wait_idle	;wreg free
 27629                           
 27630                           ;i2c.c: 280: _i2c_send(0b01111000);
 27631  0074A2  0E78               	movlw	120
 27632  0074A4  ECF1  F040         	call	__i2c_send
 27633                           
 27634                           ;i2c.c: 281: _i2c_wait_idle();
 27635  0074A8  ECEB  F038         	call	__i2c_wait_idle	;wreg free
 27636                           
 27637                           ;i2c.c: 282: _i2c_send(0b01000000);
 27638  0074AC  0E40               	movlw	64
 27639  0074AE  ECF1  F040         	call	__i2c_send
 27640                           
 27641                           ;i2c.c: 283: _i2c_wait_idle();
 27642  0074B2  ECEB  F038         	call	__i2c_wait_idle	;wreg free
 27643                           
 27644                           ;i2c.c: 286: for(pos=0; pos<length; ++pos)
 27645  0074B6  0E00               	movlw	0
 27646  0074B8  6E09               	movwf	i2c_display_write_fixed@pos,c
 27647  0074BA  D00E               	goto	l1232
 27648  0074BC                     
 27649                           ;i2c.c: 287: {;i2c.c: 288: _i2c_send(data[pos]);
 27650  0074BC  5009               	movf	i2c_display_write_fixed@pos,w,c
 27651  0074BE  0D01               	mullw	1
 27652  0074C0  50F3               	movf	prodl,w,c
 27653  0074C2  2406               	addwf	i2c_display_write_fixed@data,w,c
 27654  0074C4  6ED9               	movwf	fsr2l,c
 27655  0074C6  50F4               	movf	prodh,w,c
 27656  0074C8  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 27657  0074CA  6EDA               	movwf	fsr2h,c
 27658  0074CC  50DF               	movf	indf2,w,c
 27659  0074CE  ECF1  F040         	call	__i2c_send
 27660                           
 27661                           ;i2c.c: 289: _i2c_wait_idle();
 27662  0074D2  ECEB  F038         	call	__i2c_wait_idle	;wreg free
 27663  0074D6  2A09               	incf	i2c_display_write_fixed@pos,f,c
 27664  0074D8                     l1232:
 27665  0074D8  5008               	movf	i2c_display_write_fixed@length,w,c
 27666  0074DA  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 27667  0074DC  A0D8               	btfss	status,0,c
 27668  0074DE  D7EE               	goto	l1233
 27669                           
 27670                           ;i2c.c: 290: };i2c.c: 292: _i2c_stop();
 27671  0074E0  ECE9  F040         	call	__i2c_stop	;wreg free
 27672  0074E4  0012               	return		;funcret
 27673  0074E6                     __end_of_i2c_display_write_fixed:
 27674                           	opt stack 0
 27675                           tosu	equ	0xFFF
 27676                           tosh	equ	0xFFE
 27677                           tosl	equ	0xFFD
 27678                           pclath	equ	0xFFA
 27679                           tblptru	equ	0xFF8
 27680                           tblptrh	equ	0xFF7
 27681                           tblptrl	equ	0xFF6
 27682                           tablat	equ	0xFF5
 27683                           prodh	equ	0xFF4
 27684                           prodl	equ	0xFF3
 27685                           intcon	equ	0xFF2
 27686                           intcon2	equ	0xFF1
 27687                           intcon3	equ	0xFF0
 27688                           indf0	equ	0xFEF
 27689                           postinc0	equ	0xFEE
 27690                           fsr0h	equ	0xFEA
 27691                           fsr0l	equ	0xFE9
 27692                           wreg	equ	0xFE8
 27693                           indf1	equ	0xFE7
 27694                           postdec1	equ	0xFE5
 27695                           plusw1	equ	0xFE3
 27696                           fsr1h	equ	0xFE2
 27697                           fsr1l	equ	0xFE1
 27698                           indf2	equ	0xFDF
 27699                           postinc2	equ	0xFDE
 27700                           postdec2	equ	0xFDD
 27701                           plusw2	equ	0xFDB
 27702                           fsr2h	equ	0xFDA
 27703                           fsr2l	equ	0xFD9
 27704                           status	equ	0xFD8
 27705                           
 27706 ;; *************** function _i2c_display_cursor *****************
 27707 ;; Defined at:
 27708 ;;		line 230 in file "i2c.c"
 27709 ;; Parameters:    Size  Location     Type
 27710 ;;  line            1    wreg     unsigned char 
 27711 ;;  position        1   13[COMRAM] unsigned char 
 27712 ;; Auto vars:     Size  Location     Type
 27713 ;;  line            1   14[COMRAM] unsigned char 
 27714 ;;  address         1   15[COMRAM] unsigned char 
 27715 ;; Return value:  Size  Location     Type
 27716 ;;                  1    wreg      void 
 27717 ;; Registers used:
 27718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27719 ;; Tracked objects:
 27720 ;;		On entry : 0/0
 27721 ;;		On exit  : 0/0
 27722 ;;		Unchanged: 0/0
 27723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27724 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27725 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27727 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27728 ;;Total ram usage:        3 bytes
 27729 ;; Hardware stack levels used:    1
 27730 ;; Hardware stack levels required when called:    3
 27731 ;; This function calls:
 27732 ;;		__ic2_display_set_address
 27733 ;;		_i2c_set_frequency
 27734 ;; This function is called by:
 27735 ;;		_display_update
 27736 ;; This function uses a non-reentrant model
 27737 ;;
 27738                           
 27739                           	psect	text134
 27740  007ECA                     __ptext134:
 27741                           	opt stack 0
 27742  007ECA                     _i2c_display_cursor:
 27743                           	opt stack 23
 27744                           
 27745                           ;incstack = 0
 27746                           ;i2c_display_cursor@line stored from wreg
 27747  007ECA  6E0F               	movwf	i2c_display_cursor@line,c
 27748                           
 27749                           ;i2c.c: 232: uint8_t address;;i2c.c: 235: line &= 0b11;
 27750  007ECC  0E03               	movlw	3
 27751  007ECE  160F               	andwf	i2c_display_cursor@line,f,c
 27752                           
 27753                           ;i2c.c: 236: address = line<<5;
 27754  007ED0  380F               	swapf	i2c_display_cursor@line,w,c
 27755  007ED2  46E8               	rlncf	wreg,f,c
 27756  007ED4  0BE0               	andlw	224
 27757  007ED6  6E10               	movwf	i2c_display_cursor@address,c
 27758                           
 27759                           ;i2c.c: 237: position &= 0b11111;
 27760  007ED8  0E1F               	movlw	31
 27761  007EDA  160E               	andwf	i2c_display_cursor@position,f,c
 27762                           
 27763                           ;i2c.c: 238: address |= position;
 27764  007EDC  500E               	movf	i2c_display_cursor@position,w,c
 27765  007EDE  1210               	iorwf	i2c_display_cursor@address,f,c
 27766                           
 27767                           ;i2c.c: 241: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27768  007EE0  0E02               	movlw	2
 27769  007EE2  ECC7  F03E         	call	_i2c_set_frequency
 27770                           
 27771                           ;i2c.c: 244: _ic2_display_set_address(address);
 27772  007EE6  5010               	movf	i2c_display_cursor@address,w,c
 27773  007EE8  EC2D  F03F         	call	__ic2_display_set_address
 27774  007EEC  0012               	return		;funcret
 27775  007EEE                     __end_of_i2c_display_cursor:
 27776                           	opt stack 0
 27777                           tosu	equ	0xFFF
 27778                           tosh	equ	0xFFE
 27779                           tosl	equ	0xFFD
 27780                           pclath	equ	0xFFA
 27781                           tblptru	equ	0xFF8
 27782                           tblptrh	equ	0xFF7
 27783                           tblptrl	equ	0xFF6
 27784                           tablat	equ	0xFF5
 27785                           prodh	equ	0xFF4
 27786                           prodl	equ	0xFF3
 27787                           intcon	equ	0xFF2
 27788                           intcon2	equ	0xFF1
 27789                           intcon3	equ	0xFF0
 27790                           indf0	equ	0xFEF
 27791                           postinc0	equ	0xFEE
 27792                           fsr0h	equ	0xFEA
 27793                           fsr0l	equ	0xFE9
 27794                           wreg	equ	0xFE8
 27795                           indf1	equ	0xFE7
 27796                           postdec1	equ	0xFE5
 27797                           plusw1	equ	0xFE3
 27798                           fsr1h	equ	0xFE2
 27799                           fsr1l	equ	0xFE1
 27800                           indf2	equ	0xFDF
 27801                           postinc2	equ	0xFDE
 27802                           postdec2	equ	0xFDD
 27803                           plusw2	equ	0xFDB
 27804                           fsr2h	equ	0xFDA
 27805                           fsr2l	equ	0xFD9
 27806                           status	equ	0xFD8
 27807                           
 27808 ;; *************** function __ic2_display_set_address *****************
 27809 ;; Defined at:
 27810 ;;		line 194 in file "i2c.c"
 27811 ;; Parameters:    Size  Location     Type
 27812 ;;  address         1    wreg     unsigned char 
 27813 ;; Auto vars:     Size  Location     Type
 27814 ;;  address         1   10[COMRAM] unsigned char 
 27815 ;;  data_array      2   11[COMRAM] unsigned char [2]
 27816 ;; Return value:  Size  Location     Type
 27817 ;;                  1    wreg      void 
 27818 ;; Registers used:
 27819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27820 ;; Tracked objects:
 27821 ;;		On entry : 0/0
 27822 ;;		On exit  : 0/0
 27823 ;;		Unchanged: 0/0
 27824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27826 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27828 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27829 ;;Total ram usage:        3 bytes
 27830 ;; Hardware stack levels used:    1
 27831 ;; Hardware stack levels required when called:    2
 27832 ;; This function calls:
 27833 ;;		__i2c_write
 27834 ;;		_i2c_set_frequency
 27835 ;; This function is called by:
 27836 ;;		_i2c_display_cursor
 27837 ;; This function uses a non-reentrant model
 27838 ;;
 27839                           
 27840                           	psect	text135
 27841  007E5A                     __ptext135:
 27842                           	opt stack 0
 27843  007E5A                     __ic2_display_set_address:
 27844                           	opt stack 23
 27845                           
 27846                           ;incstack = 0
 27847                           ;__ic2_display_set_address@address stored from wreg
 27848  007E5A  6E0B               	movwf	__ic2_display_set_address@address,c
 27849                           
 27850                           ;i2c.c: 196: uint8_t data_array[2];;i2c.c: 197: data_array[0] = 0b00000000;
 27851  007E5C  0E00               	movlw	0
 27852  007E5E  6E0C               	movwf	__ic2_display_set_address@data_array,c
 27853                           
 27854                           ;i2c.c: 198: data_array[1] = 0b10000000 | address;
 27855  007E60  500B               	movf	__ic2_display_set_address@address,w,c
 27856  007E62  0980               	iorlw	128
 27857  007E64  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
 27858                           
 27859                           ;i2c.c: 201: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27860  007E66  0E02               	movlw	2
 27861  007E68  ECC7  F03E         	call	_i2c_set_frequency
 27862                           
 27863                           ;i2c.c: 204: _i2c_write(0b01111000, &data_array[0], 2);
 27864  007E6C  0E0C               	movlw	low __ic2_display_set_address@data_array
 27865  007E6E  6E06               	movwf	__i2c_write@data,c
 27866  007E70  0E00               	movlw	high __ic2_display_set_address@data_array
 27867  007E72  6E07               	movwf	__i2c_write@data+1,c
 27868  007E74  0E02               	movlw	2
 27869  007E76  6E08               	movwf	__i2c_write@length,c
 27870  007E78  0E78               	movlw	120
 27871  007E7A  ECB9  F03B         	call	__i2c_write
 27872  007E7E  0012               	return		;funcret
 27873  007E80                     __end_of__ic2_display_set_address:
 27874                           	opt stack 0
 27875                           tosu	equ	0xFFF
 27876                           tosh	equ	0xFFE
 27877                           tosl	equ	0xFFD
 27878                           pclath	equ	0xFFA
 27879                           tblptru	equ	0xFF8
 27880                           tblptrh	equ	0xFF7
 27881                           tblptrl	equ	0xFF6
 27882                           tablat	equ	0xFF5
 27883                           prodh	equ	0xFF4
 27884                           prodl	equ	0xFF3
 27885                           intcon	equ	0xFF2
 27886                           intcon2	equ	0xFF1
 27887                           intcon3	equ	0xFF0
 27888                           indf0	equ	0xFEF
 27889                           postinc0	equ	0xFEE
 27890                           fsr0h	equ	0xFEA
 27891                           fsr0l	equ	0xFE9
 27892                           wreg	equ	0xFE8
 27893                           indf1	equ	0xFE7
 27894                           postdec1	equ	0xFE5
 27895                           plusw1	equ	0xFE3
 27896                           fsr1h	equ	0xFE2
 27897                           fsr1l	equ	0xFE1
 27898                           indf2	equ	0xFDF
 27899                           postinc2	equ	0xFDE
 27900                           postdec2	equ	0xFDD
 27901                           plusw2	equ	0xFDB
 27902                           fsr2h	equ	0xFDA
 27903                           fsr2l	equ	0xFD9
 27904                           status	equ	0xFD8
 27905                           
 27906 ;; *************** function _display_prepare *****************
 27907 ;; Defined at:
 27908 ;;		line 286 in file "display.c"
 27909 ;; Parameters:    Size  Location     Type
 27910 ;;  mode            1    wreg     unsigned char 
 27911 ;; Auto vars:     Size  Location     Type
 27912 ;;  mode            1   42[COMRAM] unsigned char 
 27913 ;; Return value:  Size  Location     Type
 27914 ;;                  1    wreg      void 
 27915 ;; Registers used:
 27916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27917 ;; Tracked objects:
 27918 ;;		On entry : 0/0
 27919 ;;		On exit  : 0/0
 27920 ;;		Unchanged: 0/0
 27921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27925 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27926 ;;Total ram usage:        3 bytes
 27927 ;; Hardware stack levels used:    1
 27928 ;; Hardware stack levels required when called:    6
 27929 ;; This function calls:
 27930 ;;		__display_checked
 27931 ;;		__display_clear
 27932 ;;		__display_done
 27933 ;;		__display_failed
 27934 ;;		__display_found
 27935 ;;		__display_programming
 27936 ;;		__display_rebooting
 27937 ;;		__display_search
 27938 ;;		__display_start
 27939 ;;		__display_verify
 27940 ;; This function is called by:
 27941 ;;		_main
 27942 ;;		_reboot
 27943 ;; This function uses a non-reentrant model
 27944 ;;
 27945                           
 27946                           	psect	text136
 27947  0051C6                     __ptext136:
 27948                           	opt stack 0
 27949  0051C6                     _display_prepare:
 27950                           	opt stack 21
 27951                           
 27952                           ;incstack = 0
 27953                           ;display_prepare@mode stored from wreg
 27954  0051C6  6E2B               	movwf	display_prepare@mode,c
 27955                           
 27956                           ;display.c: 288: _display_clear();
 27957  0051C8  EC95  F03B         	call	__display_clear	;wreg free
 27958                           
 27959                           ;display.c: 290: switch(mode&0xF0)
 27960  0051CC  D01B               	goto	l1542
 27961  0051CE                     
 27962                           ;display.c: 293: _display_start();
 27963  0051CE  ECF9  F013         	call	__display_start	;wreg free
 27964                           
 27965                           ;display.c: 294: break;
 27966  0051D2  D047               	goto	l1553
 27967  0051D4                     
 27968                           ;display.c: 297: _display_search();
 27969  0051D4  EC44  F01D         	call	__display_search	;wreg free
 27970                           
 27971                           ;display.c: 298: break;
 27972  0051D8  D044               	goto	l1553
 27973  0051DA                     
 27974                           ;display.c: 301: _display_found();
 27975  0051DA  ECE8  F015         	call	__display_found	;wreg free
 27976                           
 27977                           ;display.c: 302: break;
 27978  0051DE  D041               	goto	l1553
 27979  0051E0                     
 27980                           ;display.c: 305: _display_verify();
 27981  0051E0  EC31  F01F         	call	__display_verify	;wreg free
 27982                           
 27983                           ;display.c: 306: break;
 27984  0051E4  D03E               	goto	l1553
 27985  0051E6                     
 27986                           ;display.c: 309: _display_checked();
 27987  0051E6  EC58  F01A         	call	__display_checked	;wreg free
 27988                           
 27989                           ;display.c: 310: break;
 27990  0051EA  D03B               	goto	l1553
 27991  0051EC                     
 27992                           ;display.c: 313: _display_failed();
 27993  0051EC  EC4D  F009         	call	__display_failed	;wreg free
 27994                           
 27995                           ;display.c: 314: break;
 27996  0051F0  D038               	goto	l1553
 27997  0051F2                     
 27998                           ;display.c: 317: _display_programming();
 27999  0051F2  ECC4  F017         	call	__display_programming	;wreg free
 28000                           
 28001                           ;display.c: 318: break;
 28002  0051F6  D035               	goto	l1553
 28003  0051F8                     
 28004                           ;display.c: 321: _display_done();
 28005  0051F8  ECD1  F01B         	call	__display_done	;wreg free
 28006                           
 28007                           ;display.c: 322: break;
 28008  0051FC  D032               	goto	l1553
 28009  0051FE                     
 28010                           ;display.c: 325: _display_rebooting();
 28011  0051FE  EC73  F03A         	call	__display_rebooting	;wreg free
 28012                           
 28013                           ;display.c: 327: }
 28014                           
 28015                           ;display.c: 326: break;
 28016  005202  D02F               	goto	l1553
 28017  005204                     l1542:
 28018  005204  502B               	movf	display_prepare@mode,w,c
 28019  005206  0BF0               	andlw	240
 28020  005208  6E29               	movwf	??_display_prepare& (0+255),c
 28021  00520A  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 28022                           
 28023                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28024                           ; Switch size 1, requested type "space"
 28025                           ; Number of cases is 1, Range of values is 0 to 0
 28026                           ; switch strategies available:
 28027                           ; Name         Instructions Cycles
 28028                           ; simple_byte            4     3 (average)
 28029                           ;	Chosen strategy is simple_byte
 28030  00520C  502A               	movf	??_display_prepare+1,w,c
 28031  00520E  0A00               	xorlw	0	; case 0
 28032  005210  A4D8               	btfss	status,2,c
 28033  005212  D027               	goto	l1553
 28034                           
 28035                           ; Switch size 1, requested type "space"
 28036                           ; Number of cases is 9, Range of values is 0 to 128
 28037                           ; switch strategies available:
 28038                           ; Name         Instructions Cycles
 28039                           ; simple_byte           28    15 (average)
 28040                           ;	Chosen strategy is simple_byte
 28041  005214  5029               	movf	??_display_prepare,w,c
 28042  005216  0A00               	xorlw	0	; case 0
 28043  005218  B4D8               	btfsc	status,2,c
 28044  00521A  D7D9               	goto	l1543
 28045  00521C  0A10               	xorlw	16	; case 16
 28046  00521E  B4D8               	btfsc	status,2,c
 28047  005220  D7D9               	goto	l1545
 28048  005222  0A30               	xorlw	48	; case 32
 28049  005224  B4D8               	btfsc	status,2,c
 28050  005226  D7D9               	goto	l1546
 28051  005228  0A10               	xorlw	16	; case 48
 28052  00522A  B4D8               	btfsc	status,2,c
 28053  00522C  D7D9               	goto	l1547
 28054  00522E  0A70               	xorlw	112	; case 64
 28055  005230  B4D8               	btfsc	status,2,c
 28056  005232  D7D9               	goto	l1548
 28057  005234  0A10               	xorlw	16	; case 80
 28058  005236  B4D8               	btfsc	status,2,c
 28059  005238  D7D9               	goto	l1549
 28060  00523A  0A30               	xorlw	48	; case 96
 28061  00523C  B4D8               	btfsc	status,2,c
 28062  00523E  D7D9               	goto	l1550
 28063  005240  0A10               	xorlw	16	; case 112
 28064  005242  B4D8               	btfsc	status,2,c
 28065  005244  D7D9               	goto	l1551
 28066  005246  0AF0               	xorlw	240	; case 128
 28067  005248  B4D8               	btfsc	status,2,c
 28068  00524A  D7D9               	goto	l1552
 28069                           
 28070                           ;display.c: 330: switch((os.timeSlot>>5)&0b11)
 28071  00524C  D00A               	goto	l1553
 28072  00524E                     
 28073                           ;display.c: 333: display_content[0][17] = '.';
 28074  00524E  0E2E               	movlw	46
 28075  005250  0102               	movlb	2	; () banked
 28076  005252  6F11               	movwf	(_display_content+17)& (0+255),b
 28077  005254                     l1555:
 28078                           
 28079                           ;display.c: 336: display_content[0][16] = '.';
 28080  005254  0E2E               	movlw	46
 28081  005256  0102               	movlb	2	; () banked
 28082  005258  6F10               	movwf	(_display_content+16)& (0+255),b
 28083  00525A                     l1556:
 28084                           
 28085                           ;display.c: 339: display_content[0][15] = '.';
 28086  00525A  0E2E               	movlw	46
 28087  00525C  0102               	movlb	2	; () banked
 28088  00525E  6F0F               	movwf	(_display_content+15)& (0+255),b
 28089                           
 28090                           ;display.c: 341: }
 28091  005260  D015               	goto	l1557
 28092  005262                     l1553:
 28093                           
 28094                           ; BSR set to: 2
 28095  005262  0100               	movlb	0	; () banked
 28096  005264  39BB               	swapf	(_os+2)& (0+255),w,b	;volatile
 28097  005266  42E8               	rrncf	wreg,f,c
 28098  005268  0B07               	andlw	7
 28099  00526A  0B03               	andlw	3
 28100  00526C  6E29               	movwf	??_display_prepare& (0+255),c
 28101  00526E  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 28102                           
 28103                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28104                           ; Switch size 1, requested type "space"
 28105                           ; Number of cases is 1, Range of values is 0 to 0
 28106                           ; switch strategies available:
 28107                           ; Name         Instructions Cycles
 28108                           ; simple_byte            4     3 (average)
 28109                           ;	Chosen strategy is simple_byte
 28110  005270  502A               	movf	??_display_prepare+1,w,c
 28111  005272  0A00               	xorlw	0	; case 0
 28112  005274  A4D8               	btfss	status,2,c
 28113  005276  D00A               	goto	l1557
 28114                           
 28115                           ; BSR set to: 0
 28116                           ; Switch size 1, requested type "space"
 28117                           ; Number of cases is 3, Range of values is 1 to 3
 28118                           ; switch strategies available:
 28119                           ; Name         Instructions Cycles
 28120                           ; simple_byte           10     6 (average)
 28121                           ;	Chosen strategy is simple_byte
 28122  005278  5029               	movf	??_display_prepare,w,c
 28123  00527A  0A01               	xorlw	1	; case 1
 28124  00527C  B4D8               	btfsc	status,2,c
 28125  00527E  D7ED               	goto	l1556
 28126  005280  0A03               	xorlw	3	; case 2
 28127  005282  B4D8               	btfsc	status,2,c
 28128  005284  D7E7               	goto	l1555
 28129  005286  0A01               	xorlw	1	; case 3
 28130  005288  B4D8               	btfsc	status,2,c
 28131  00528A  D7E1               	goto	l1554
 28132  00528C                     l1557:
 28133                           
 28134                           ;display.c: 345: if(INTCONbits.GIE)
 28135  00528C  AEF2               	btfss	intcon,7,c	;volatile
 28136  00528E  0012               	return	
 28137                           
 28138                           ;display.c: 346: {;display.c: 347: display_content[0][18] = 'I';
 28139  005290  0E49               	movlw	73
 28140  005292  0102               	movlb	2	; () banked
 28141  005294  6F12               	movwf	(_display_content+18)& (0+255),b
 28142  005296  0012               	return	
 28143  005298                     __end_of_display_prepare:
 28144                           	opt stack 0
 28145                           tosu	equ	0xFFF
 28146                           tosh	equ	0xFFE
 28147                           tosl	equ	0xFFD
 28148                           pclath	equ	0xFFA
 28149                           tblptru	equ	0xFF8
 28150                           tblptrh	equ	0xFF7
 28151                           tblptrl	equ	0xFF6
 28152                           tablat	equ	0xFF5
 28153                           prodh	equ	0xFF4
 28154                           prodl	equ	0xFF3
 28155                           intcon	equ	0xFF2
 28156                           intcon2	equ	0xFF1
 28157                           intcon3	equ	0xFF0
 28158                           indf0	equ	0xFEF
 28159                           postinc0	equ	0xFEE
 28160                           fsr0h	equ	0xFEA
 28161                           fsr0l	equ	0xFE9
 28162                           wreg	equ	0xFE8
 28163                           indf1	equ	0xFE7
 28164                           postdec1	equ	0xFE5
 28165                           plusw1	equ	0xFE3
 28166                           fsr1h	equ	0xFE2
 28167                           fsr1l	equ	0xFE1
 28168                           indf2	equ	0xFDF
 28169                           postinc2	equ	0xFDE
 28170                           postdec2	equ	0xFDD
 28171                           plusw2	equ	0xFDB
 28172                           fsr2h	equ	0xFDA
 28173                           fsr2l	equ	0xFD9
 28174                           status	equ	0xFD8
 28175                           
 28176 ;; *************** function __display_verify *****************
 28177 ;; Defined at:
 28178 ;;		line 417 in file "display.c"
 28179 ;; Parameters:    Size  Location     Type
 28180 ;;		None
 28181 ;; Auto vars:     Size  Location     Type
 28182 ;;  cntr            1   32[COMRAM] unsigned char 
 28183 ;;  start           1    0        unsigned char 
 28184 ;; Return value:  Size  Location     Type
 28185 ;;                  1    wreg      void 
 28186 ;; Registers used:
 28187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28188 ;; Tracked objects:
 28189 ;;		On entry : 0/0
 28190 ;;		On exit  : 0/0
 28191 ;;		Unchanged: 0/0
 28192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28196 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28197 ;;Total ram usage:        3 bytes
 28198 ;; Hardware stack levels used:    1
 28199 ;; Hardware stack levels required when called:    4
 28200 ;; This function calls:
 28201 ;;		__display_itoa_u16
 28202 ;;		_bootloader_get_entries
 28203 ;; This function is called by:
 28204 ;;		_display_prepare
 28205 ;; This function uses a non-reentrant model
 28206 ;;
 28207                           
 28208                           	psect	text137
 28209  003E62                     __ptext137:
 28210                           	opt stack 0
 28211  003E62                     __display_verify:
 28212                           	opt stack 22
 28213                           
 28214                           ;display.c: 419: uint8_t cntr;;display.c: 420: uint8_t start;;display.c: 421: cntr = 0;
 28215                           
 28216                           ;incstack = 0
 28217  003E62  0E00               	movlw	0
 28218  003E64  6E21               	movwf	__display_verify@cntr,c
 28219                           
 28220                           ;display.c: 422: while(verify_line1[cntr])
 28221  003E66  D017               	goto	l1610
 28222  003E68                     
 28223                           ;display.c: 423: display_content[0][cntr] = verify_line1[cntr++];
 28224  003E68  5021               	movf	__display_verify@cntr,w,c
 28225  003E6A  0D01               	mullw	1
 28226  003E6C  0EC4               	movlw	low _verify_line1
 28227  003E6E  24F3               	addwf	prodl,w,c
 28228  003E70  6EF6               	movwf	tblptrl,c
 28229  003E72  0E8D               	movlw	high _verify_line1
 28230  003E74  20F4               	addwfc	prodh,w,c
 28231  003E76  6EF7               	movwf	tblptrh,c
 28232  003E78                     	if	1	;There are 3 active tblptr bytes
 28233  003E78  6AF8               	clrf	tblptru,c
 28234  003E7A  0E00               	movlw	low (__mediumconst shr (0+16))
 28235  003E7C  22F8               	addwfc	tblptru,f,c
 28236  003E7E                     	endif
 28237  003E7E  5021               	movf	__display_verify@cntr,w,c
 28238  003E80  0D01               	mullw	1
 28239  003E82  0E00               	movlw	low _display_content
 28240  003E84  24F3               	addwf	prodl,w,c
 28241  003E86  6ED9               	movwf	fsr2l,c
 28242  003E88  0E02               	movlw	high _display_content
 28243  003E8A  20F4               	addwfc	prodh,w,c
 28244  003E8C  6EDA               	movwf	fsr2h,c
 28245  003E8E  0008               	tblrd		*
 28246  003E90  CFF5 FFDF          	movff	tablat,indf2
 28247  003E94  2A21               	incf	__display_verify@cntr,f,c
 28248  003E96                     l1610:
 28249  003E96  5021               	movf	__display_verify@cntr,w,c
 28250  003E98  0D01               	mullw	1
 28251  003E9A  0EC4               	movlw	low _verify_line1
 28252  003E9C  24F3               	addwf	prodl,w,c
 28253  003E9E  6EF6               	movwf	tblptrl,c
 28254  003EA0  0E8D               	movlw	high _verify_line1
 28255  003EA2  20F4               	addwfc	prodh,w,c
 28256  003EA4  6EF7               	movwf	tblptrh,c
 28257  003EA6                     	if	1	;There are 3 active tblptr bytes
 28258  003EA6  6AF8               	clrf	tblptru,c
 28259  003EA8  0E00               	movlw	low (__mediumconst shr (0+16))
 28260  003EAA  22F8               	addwfc	tblptru,f,c
 28261  003EAC                     	endif
 28262  003EAC  0008               	tblrd		*
 28263  003EAE  50F5               	movf	tablat,w,c
 28264  003EB0  0900               	iorlw	0
 28265  003EB2  A4D8               	btfss	status,2,c
 28266  003EB4  D7D9               	goto	l1611
 28267                           
 28268                           ;display.c: 424: cntr = 0;
 28269  003EB6  0E00               	movlw	0
 28270  003EB8  6E21               	movwf	__display_verify@cntr,c
 28271                           
 28272                           ;display.c: 425: while(verify_line2[cntr])
 28273  003EBA  D017               	goto	l1613
 28274  003EBC                     
 28275                           ;display.c: 426: display_content[1][cntr] = verify_line2[cntr++];
 28276  003EBC  5021               	movf	__display_verify@cntr,w,c
 28277  003EBE  0D01               	mullw	1
 28278  003EC0  0E4C               	movlw	low _verify_line2
 28279  003EC2  24F3               	addwf	prodl,w,c
 28280  003EC4  6EF6               	movwf	tblptrl,c
 28281  003EC6  0E8E               	movlw	high _verify_line2
 28282  003EC8  20F4               	addwfc	prodh,w,c
 28283  003ECA  6EF7               	movwf	tblptrh,c
 28284  003ECC                     	if	1	;There are 3 active tblptr bytes
 28285  003ECC  6AF8               	clrf	tblptru,c
 28286  003ECE  0E00               	movlw	low (__mediumconst shr (0+16))
 28287  003ED0  22F8               	addwfc	tblptru,f,c
 28288  003ED2                     	endif
 28289  003ED2  5021               	movf	__display_verify@cntr,w,c
 28290  003ED4  0D01               	mullw	1
 28291  003ED6  0E14               	movlw	low (_display_content+20)
 28292  003ED8  24F3               	addwf	prodl,w,c
 28293  003EDA  6ED9               	movwf	fsr2l,c
 28294  003EDC  0E02               	movlw	high (_display_content+20)
 28295  003EDE  20F4               	addwfc	prodh,w,c
 28296  003EE0  6EDA               	movwf	fsr2h,c
 28297  003EE2  0008               	tblrd		*
 28298  003EE4  CFF5 FFDF          	movff	tablat,indf2
 28299  003EE8  2A21               	incf	__display_verify@cntr,f,c
 28300  003EEA                     l1613:
 28301  003EEA  5021               	movf	__display_verify@cntr,w,c
 28302  003EEC  0D01               	mullw	1
 28303  003EEE  0E4C               	movlw	low _verify_line2
 28304  003EF0  24F3               	addwf	prodl,w,c
 28305  003EF2  6EF6               	movwf	tblptrl,c
 28306  003EF4  0E8E               	movlw	high _verify_line2
 28307  003EF6  20F4               	addwfc	prodh,w,c
 28308  003EF8  6EF7               	movwf	tblptrh,c
 28309  003EFA                     	if	1	;There are 3 active tblptr bytes
 28310  003EFA  6AF8               	clrf	tblptru,c
 28311  003EFC  0E00               	movlw	low (__mediumconst shr (0+16))
 28312  003EFE  22F8               	addwfc	tblptru,f,c
 28313  003F00                     	endif
 28314  003F00  0008               	tblrd		*
 28315  003F02  50F5               	movf	tablat,w,c
 28316  003F04  0900               	iorlw	0
 28317  003F06  A4D8               	btfss	status,2,c
 28318  003F08  D7D9               	goto	l1614
 28319                           
 28320                           ;display.c: 427: cntr = 0;
 28321  003F0A  0E00               	movlw	0
 28322  003F0C  6E21               	movwf	__display_verify@cntr,c
 28323                           
 28324                           ;display.c: 428: while(verify_line3[cntr])
 28325  003F0E  D017               	goto	l1616
 28326  003F10                     
 28327                           ;display.c: 429: display_content[2][cntr] = verify_line3[cntr++];
 28328  003F10  5021               	movf	__display_verify@cntr,w,c
 28329  003F12  0D01               	mullw	1
 28330  003F14  0E8A               	movlw	low _verify_line3
 28331  003F16  24F3               	addwf	prodl,w,c
 28332  003F18  6EF6               	movwf	tblptrl,c
 28333  003F1A  0E8E               	movlw	high _verify_line3
 28334  003F1C  20F4               	addwfc	prodh,w,c
 28335  003F1E  6EF7               	movwf	tblptrh,c
 28336  003F20                     	if	1	;There are 3 active tblptr bytes
 28337  003F20  6AF8               	clrf	tblptru,c
 28338  003F22  0E00               	movlw	low (__mediumconst shr (0+16))
 28339  003F24  22F8               	addwfc	tblptru,f,c
 28340  003F26                     	endif
 28341  003F26  5021               	movf	__display_verify@cntr,w,c
 28342  003F28  0D01               	mullw	1
 28343  003F2A  0E28               	movlw	low (_display_content+40)
 28344  003F2C  24F3               	addwf	prodl,w,c
 28345  003F2E  6ED9               	movwf	fsr2l,c
 28346  003F30  0E02               	movlw	high (_display_content+40)
 28347  003F32  20F4               	addwfc	prodh,w,c
 28348  003F34  6EDA               	movwf	fsr2h,c
 28349  003F36  0008               	tblrd		*
 28350  003F38  CFF5 FFDF          	movff	tablat,indf2
 28351  003F3C  2A21               	incf	__display_verify@cntr,f,c
 28352  003F3E                     l1616:
 28353  003F3E  5021               	movf	__display_verify@cntr,w,c
 28354  003F40  0D01               	mullw	1
 28355  003F42  0E8A               	movlw	low _verify_line3
 28356  003F44  24F3               	addwf	prodl,w,c
 28357  003F46  6EF6               	movwf	tblptrl,c
 28358  003F48  0E8E               	movlw	high _verify_line3
 28359  003F4A  20F4               	addwfc	prodh,w,c
 28360  003F4C  6EF7               	movwf	tblptrh,c
 28361  003F4E                     	if	1	;There are 3 active tblptr bytes
 28362  003F4E  6AF8               	clrf	tblptru,c
 28363  003F50  0E00               	movlw	low (__mediumconst shr (0+16))
 28364  003F52  22F8               	addwfc	tblptru,f,c
 28365  003F54                     	endif
 28366  003F54  0008               	tblrd		*
 28367  003F56  50F5               	movf	tablat,w,c
 28368  003F58  0900               	iorlw	0
 28369  003F5A  A4D8               	btfss	status,2,c
 28370  003F5C  D7D9               	goto	l1617
 28371                           
 28372                           ;display.c: 430: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 28373  003F5E  ECD0  F040         	call	_bootloader_get_entries	;wreg free
 28374  003F62  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 28375  003F66  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 28376  003F6A  6A1B               	clrf	__display_itoa_u16@value+2,c
 28377  003F6C  6A1C               	clrf	__display_itoa_u16@value+3,c
 28378  003F6E  5021               	movf	__display_verify@cntr,w,c
 28379  003F70  6E1F               	movwf	??__display_verify& (0+255),c
 28380  003F72  6A20               	clrf	(??__display_verify+1)& (0+255),c
 28381  003F74  0E01               	movlw	1
 28382  003F76  261F               	addwf	??__display_verify,f,c
 28383  003F78  0E00               	movlw	0
 28384  003F7A  2220               	addwfc	??__display_verify+1,f,c
 28385  003F7C  0E28               	movlw	low (_display_content+40)
 28386  003F7E  241F               	addwf	??__display_verify,w,c
 28387  003F80  6E1D               	movwf	__display_itoa_u16@text,c
 28388  003F82  0E02               	movlw	high (_display_content+40)
 28389  003F84  2020               	addwfc	??__display_verify+1,w,c
 28390  003F86  6E1E               	movwf	__display_itoa_u16@text+1,c
 28391  003F88  EC79  F02A         	call	__display_itoa_u16	;wreg free
 28392  003F8C  0012               	return		;funcret
 28393  003F8E                     __end_of__display_verify:
 28394                           	opt stack 0
 28395                           tosu	equ	0xFFF
 28396                           tosh	equ	0xFFE
 28397                           tosl	equ	0xFFD
 28398                           pclath	equ	0xFFA
 28399                           tblptru	equ	0xFF8
 28400                           tblptrh	equ	0xFF7
 28401                           tblptrl	equ	0xFF6
 28402                           tablat	equ	0xFF5
 28403                           prodh	equ	0xFF4
 28404                           prodl	equ	0xFF3
 28405                           intcon	equ	0xFF2
 28406                           intcon2	equ	0xFF1
 28407                           intcon3	equ	0xFF0
 28408                           indf0	equ	0xFEF
 28409                           postinc0	equ	0xFEE
 28410                           fsr0h	equ	0xFEA
 28411                           fsr0l	equ	0xFE9
 28412                           wreg	equ	0xFE8
 28413                           indf1	equ	0xFE7
 28414                           postdec1	equ	0xFE5
 28415                           plusw1	equ	0xFE3
 28416                           fsr1h	equ	0xFE2
 28417                           fsr1l	equ	0xFE1
 28418                           indf2	equ	0xFDF
 28419                           postinc2	equ	0xFDE
 28420                           postdec2	equ	0xFDD
 28421                           plusw2	equ	0xFDB
 28422                           fsr2h	equ	0xFDA
 28423                           fsr2l	equ	0xFD9
 28424                           status	equ	0xFD8
 28425                           
 28426 ;; *************** function __display_start *****************
 28427 ;; Defined at:
 28428 ;;		line 351 in file "display.c"
 28429 ;; Parameters:    Size  Location     Type
 28430 ;;		None
 28431 ;; Auto vars:     Size  Location     Type
 28432 ;;  cntr            1   36[COMRAM] unsigned char 
 28433 ;; Return value:  Size  Location     Type
 28434 ;;                  1    wreg      void 
 28435 ;; Registers used:
 28436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28437 ;; Tracked objects:
 28438 ;;		On entry : 0/0
 28439 ;;		On exit  : 0/0
 28440 ;;		Unchanged: 0/0
 28441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28446 ;;Total ram usage:        1 bytes
 28447 ;; Hardware stack levels used:    1
 28448 ;; Hardware stack levels required when called:    5
 28449 ;; This function calls:
 28450 ;;		__display_itoa_u32
 28451 ;; This function is called by:
 28452 ;;		_display_prepare
 28453 ;; This function uses a non-reentrant model
 28454 ;;
 28455                           
 28456                           	psect	text138
 28457  0027F2                     __ptext138:
 28458                           	opt stack 0
 28459  0027F2                     __display_start:
 28460                           	opt stack 21
 28461                           
 28462                           ;display.c: 353: uint8_t cntr;;display.c: 354: cntr = 0;
 28463                           
 28464                           ;incstack = 0
 28465  0027F2  0E00               	movlw	0
 28466  0027F4  6E25               	movwf	__display_start@cntr,c
 28467                           
 28468                           ;display.c: 355: while(start_line1[cntr])
 28469  0027F6  D017               	goto	l1562
 28470  0027F8                     
 28471                           ;display.c: 356: display_content[0][cntr] = start_line1[cntr++];
 28472  0027F8  5025               	movf	__display_start@cntr,w,c
 28473  0027FA  0D01               	mullw	1
 28474  0027FC  0EF4               	movlw	low _start_line1
 28475  0027FE  24F3               	addwf	prodl,w,c
 28476  002800  6EF6               	movwf	tblptrl,c
 28477  002802  0E8D               	movlw	high _start_line1
 28478  002804  20F4               	addwfc	prodh,w,c
 28479  002806  6EF7               	movwf	tblptrh,c
 28480  002808                     	if	1	;There are 3 active tblptr bytes
 28481  002808  6AF8               	clrf	tblptru,c
 28482  00280A  0E00               	movlw	low (__mediumconst shr (0+16))
 28483  00280C  22F8               	addwfc	tblptru,f,c
 28484  00280E                     	endif
 28485  00280E  5025               	movf	__display_start@cntr,w,c
 28486  002810  0D01               	mullw	1
 28487  002812  0E00               	movlw	low _display_content
 28488  002814  24F3               	addwf	prodl,w,c
 28489  002816  6ED9               	movwf	fsr2l,c
 28490  002818  0E02               	movlw	high _display_content
 28491  00281A  20F4               	addwfc	prodh,w,c
 28492  00281C  6EDA               	movwf	fsr2h,c
 28493  00281E  0008               	tblrd		*
 28494  002820  CFF5 FFDF          	movff	tablat,indf2
 28495  002824  2A25               	incf	__display_start@cntr,f,c
 28496  002826                     l1562:
 28497  002826  5025               	movf	__display_start@cntr,w,c
 28498  002828  0D01               	mullw	1
 28499  00282A  0EF4               	movlw	low _start_line1
 28500  00282C  24F3               	addwf	prodl,w,c
 28501  00282E  6EF6               	movwf	tblptrl,c
 28502  002830  0E8D               	movlw	high _start_line1
 28503  002832  20F4               	addwfc	prodh,w,c
 28504  002834  6EF7               	movwf	tblptrh,c
 28505  002836                     	if	1	;There are 3 active tblptr bytes
 28506  002836  6AF8               	clrf	tblptru,c
 28507  002838  0E00               	movlw	low (__mediumconst shr (0+16))
 28508  00283A  22F8               	addwfc	tblptru,f,c
 28509  00283C                     	endif
 28510  00283C  0008               	tblrd		*
 28511  00283E  50F5               	movf	tablat,w,c
 28512  002840  0900               	iorlw	0
 28513  002842  A4D8               	btfss	status,2,c
 28514  002844  D7D9               	goto	l1563
 28515                           
 28516                           ;display.c: 357: cntr = 0;
 28517  002846  0E00               	movlw	0
 28518  002848  6E25               	movwf	__display_start@cntr,c
 28519                           
 28520                           ;display.c: 358: while(start_line2[cntr])
 28521  00284A  D017               	goto	l1565
 28522  00284C                     
 28523                           ;display.c: 359: display_content[1][cntr] = start_line2[cntr++];
 28524  00284C  5025               	movf	__display_start@cntr,w,c
 28525  00284E  0D01               	mullw	1
 28526  002850  0E62               	movlw	low _start_line2
 28527  002852  24F3               	addwf	prodl,w,c
 28528  002854  6EF6               	movwf	tblptrl,c
 28529  002856  0E8E               	movlw	high _start_line2
 28530  002858  20F4               	addwfc	prodh,w,c
 28531  00285A  6EF7               	movwf	tblptrh,c
 28532  00285C                     	if	1	;There are 3 active tblptr bytes
 28533  00285C  6AF8               	clrf	tblptru,c
 28534  00285E  0E00               	movlw	low (__mediumconst shr (0+16))
 28535  002860  22F8               	addwfc	tblptru,f,c
 28536  002862                     	endif
 28537  002862  5025               	movf	__display_start@cntr,w,c
 28538  002864  0D01               	mullw	1
 28539  002866  0E14               	movlw	low (_display_content+20)
 28540  002868  24F3               	addwf	prodl,w,c
 28541  00286A  6ED9               	movwf	fsr2l,c
 28542  00286C  0E02               	movlw	high (_display_content+20)
 28543  00286E  20F4               	addwfc	prodh,w,c
 28544  002870  6EDA               	movwf	fsr2h,c
 28545  002872  0008               	tblrd		*
 28546  002874  CFF5 FFDF          	movff	tablat,indf2
 28547  002878  2A25               	incf	__display_start@cntr,f,c
 28548  00287A                     l1565:
 28549  00287A  5025               	movf	__display_start@cntr,w,c
 28550  00287C  0D01               	mullw	1
 28551  00287E  0E62               	movlw	low _start_line2
 28552  002880  24F3               	addwf	prodl,w,c
 28553  002882  6EF6               	movwf	tblptrl,c
 28554  002884  0E8E               	movlw	high _start_line2
 28555  002886  20F4               	addwfc	prodh,w,c
 28556  002888  6EF7               	movwf	tblptrh,c
 28557  00288A                     	if	1	;There are 3 active tblptr bytes
 28558  00288A  6AF8               	clrf	tblptru,c
 28559  00288C  0E00               	movlw	low (__mediumconst shr (0+16))
 28560  00288E  22F8               	addwfc	tblptru,f,c
 28561  002890                     	endif
 28562  002890  0008               	tblrd		*
 28563  002892  50F5               	movf	tablat,w,c
 28564  002894  0900               	iorlw	0
 28565  002896  A4D8               	btfss	status,2,c
 28566  002898  D7D9               	goto	l1566
 28567                           
 28568                           ;display.c: 360: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 28569  00289A  0E00               	movlw	0
 28570  00289C  6E1F               	movwf	__display_itoa_u32@value,c
 28571  00289E  0E00               	movlw	0
 28572  0028A0  6E20               	movwf	__display_itoa_u32@value+1,c
 28573  0028A2  0E00               	movlw	0
 28574  0028A4  6E21               	movwf	__display_itoa_u32@value+2,c
 28575  0028A6  0E00               	movlw	0
 28576  0028A8  6E22               	movwf	__display_itoa_u32@value+3,c
 28577  0028AA  5025               	movf	__display_start@cntr,w,c
 28578  0028AC  0D01               	mullw	1
 28579  0028AE  0E14               	movlw	low (_display_content+20)
 28580  0028B0  24F3               	addwf	prodl,w,c
 28581  0028B2  6E23               	movwf	__display_itoa_u32@text,c
 28582  0028B4  0E02               	movlw	high (_display_content+20)
 28583  0028B6  20F4               	addwfc	prodh,w,c
 28584  0028B8  6E24               	movwf	__display_itoa_u32@text+1,c
 28585  0028BA  EC07  F006         	call	__display_itoa_u32	;wreg free
 28586  0028BE  2625               	addwf	__display_start@cntr,f,c
 28587                           
 28588                           ;display.c: 361: display_content[1][cntr++] = '.';
 28589  0028C0  5025               	movf	__display_start@cntr,w,c
 28590  0028C2  0D01               	mullw	1
 28591  0028C4  0E14               	movlw	low (_display_content+20)
 28592  0028C6  24F3               	addwf	prodl,w,c
 28593  0028C8  6ED9               	movwf	fsr2l,c
 28594  0028CA  0E02               	movlw	high (_display_content+20)
 28595  0028CC  20F4               	addwfc	prodh,w,c
 28596  0028CE  6EDA               	movwf	fsr2h,c
 28597  0028D0  0E2E               	movlw	46
 28598  0028D2  6EDF               	movwf	indf2,c
 28599  0028D4  2A25               	incf	__display_start@cntr,f,c
 28600                           
 28601                           ;display.c: 362: cntr += _display_itoa_u32(0x01, &display_content[1][cntr]);
 28602  0028D6  0E01               	movlw	1
 28603  0028D8  6E1F               	movwf	__display_itoa_u32@value,c
 28604  0028DA  0E00               	movlw	0
 28605  0028DC  6E20               	movwf	__display_itoa_u32@value+1,c
 28606  0028DE  0E00               	movlw	0
 28607  0028E0  6E21               	movwf	__display_itoa_u32@value+2,c
 28608  0028E2  0E00               	movlw	0
 28609  0028E4  6E22               	movwf	__display_itoa_u32@value+3,c
 28610  0028E6  5025               	movf	__display_start@cntr,w,c
 28611  0028E8  0D01               	mullw	1
 28612  0028EA  0E14               	movlw	low (_display_content+20)
 28613  0028EC  24F3               	addwf	prodl,w,c
 28614  0028EE  6E23               	movwf	__display_itoa_u32@text,c
 28615  0028F0  0E02               	movlw	high (_display_content+20)
 28616  0028F2  20F4               	addwfc	prodh,w,c
 28617  0028F4  6E24               	movwf	__display_itoa_u32@text+1,c
 28618  0028F6  EC07  F006         	call	__display_itoa_u32	;wreg free
 28619  0028FA  2625               	addwf	__display_start@cntr,f,c
 28620                           
 28621                           ;display.c: 363: display_content[1][cntr++] = '.';
 28622  0028FC  5025               	movf	__display_start@cntr,w,c
 28623  0028FE  0D01               	mullw	1
 28624  002900  0E14               	movlw	low (_display_content+20)
 28625  002902  24F3               	addwf	prodl,w,c
 28626  002904  6ED9               	movwf	fsr2l,c
 28627  002906  0E02               	movlw	high (_display_content+20)
 28628  002908  20F4               	addwfc	prodh,w,c
 28629  00290A  6EDA               	movwf	fsr2h,c
 28630  00290C  0E2E               	movlw	46
 28631  00290E  6EDF               	movwf	indf2,c
 28632  002910  2A25               	incf	__display_start@cntr,f,c
 28633                           
 28634                           ;display.c: 364: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 28635  002912  0E00               	movlw	0
 28636  002914  6E1F               	movwf	__display_itoa_u32@value,c
 28637  002916  0E00               	movlw	0
 28638  002918  6E20               	movwf	__display_itoa_u32@value+1,c
 28639  00291A  0E00               	movlw	0
 28640  00291C  6E21               	movwf	__display_itoa_u32@value+2,c
 28641  00291E  0E00               	movlw	0
 28642  002920  6E22               	movwf	__display_itoa_u32@value+3,c
 28643  002922  5025               	movf	__display_start@cntr,w,c
 28644  002924  0D01               	mullw	1
 28645  002926  0E14               	movlw	low (_display_content+20)
 28646  002928  24F3               	addwf	prodl,w,c
 28647  00292A  6E23               	movwf	__display_itoa_u32@text,c
 28648  00292C  0E02               	movlw	high (_display_content+20)
 28649  00292E  20F4               	addwfc	prodh,w,c
 28650  002930  6E24               	movwf	__display_itoa_u32@text+1,c
 28651  002932  EC07  F006         	call	__display_itoa_u32	;wreg free
 28652  002936  2625               	addwf	__display_start@cntr,f,c
 28653                           
 28654                           ;display.c: 365: cntr = 0;
 28655  002938  0E00               	movlw	0
 28656  00293A  6E25               	movwf	__display_start@cntr,c
 28657                           
 28658                           ;display.c: 366: while(start_line3[cntr])
 28659  00293C  D017               	goto	l1568
 28660  00293E                     
 28661                           ;display.c: 367: display_content[2][cntr] = start_line3[cntr++];
 28662  00293E  5025               	movf	__display_start@cntr,w,c
 28663  002940  0D01               	mullw	1
 28664  002942  0EA7               	movlw	low _start_line3
 28665  002944  24F3               	addwf	prodl,w,c
 28666  002946  6EF6               	movwf	tblptrl,c
 28667  002948  0E8E               	movlw	high _start_line3
 28668  00294A  20F4               	addwfc	prodh,w,c
 28669  00294C  6EF7               	movwf	tblptrh,c
 28670  00294E                     	if	1	;There are 3 active tblptr bytes
 28671  00294E  6AF8               	clrf	tblptru,c
 28672  002950  0E00               	movlw	low (__mediumconst shr (0+16))
 28673  002952  22F8               	addwfc	tblptru,f,c
 28674  002954                     	endif
 28675  002954  5025               	movf	__display_start@cntr,w,c
 28676  002956  0D01               	mullw	1
 28677  002958  0E28               	movlw	low (_display_content+40)
 28678  00295A  24F3               	addwf	prodl,w,c
 28679  00295C  6ED9               	movwf	fsr2l,c
 28680  00295E  0E02               	movlw	high (_display_content+40)
 28681  002960  20F4               	addwfc	prodh,w,c
 28682  002962  6EDA               	movwf	fsr2h,c
 28683  002964  0008               	tblrd		*
 28684  002966  CFF5 FFDF          	movff	tablat,indf2
 28685  00296A  2A25               	incf	__display_start@cntr,f,c
 28686  00296C                     l1568:
 28687  00296C  5025               	movf	__display_start@cntr,w,c
 28688  00296E  0D01               	mullw	1
 28689  002970  0EA7               	movlw	low _start_line3
 28690  002972  24F3               	addwf	prodl,w,c
 28691  002974  6EF6               	movwf	tblptrl,c
 28692  002976  0E8E               	movlw	high _start_line3
 28693  002978  20F4               	addwfc	prodh,w,c
 28694  00297A  6EF7               	movwf	tblptrh,c
 28695  00297C                     	if	1	;There are 3 active tblptr bytes
 28696  00297C  6AF8               	clrf	tblptru,c
 28697  00297E  0E00               	movlw	low (__mediumconst shr (0+16))
 28698  002980  22F8               	addwfc	tblptru,f,c
 28699  002982                     	endif
 28700  002982  0008               	tblrd		*
 28701  002984  50F5               	movf	tablat,w,c
 28702  002986  0900               	iorlw	0
 28703  002988  A4D8               	btfss	status,2,c
 28704  00298A  D7D9               	goto	l1569
 28705                           
 28706                           ;display.c: 368: cntr = 0;
 28707  00298C  0E00               	movlw	0
 28708  00298E  6E25               	movwf	__display_start@cntr,c
 28709                           
 28710                           ;display.c: 369: while(start_line4[cntr])
 28711  002990  D017               	goto	l1571
 28712  002992                     
 28713                           ;display.c: 370: display_content[3][cntr] = start_line4[cntr++];
 28714  002992  5025               	movf	__display_start@cntr,w,c
 28715  002994  0D01               	mullw	1
 28716  002996  0E22               	movlw	low _start_line4
 28717  002998  24F3               	addwf	prodl,w,c
 28718  00299A  6EF6               	movwf	tblptrl,c
 28719  00299C  0E8E               	movlw	high _start_line4
 28720  00299E  20F4               	addwfc	prodh,w,c
 28721  0029A0  6EF7               	movwf	tblptrh,c
 28722  0029A2                     	if	1	;There are 3 active tblptr bytes
 28723  0029A2  6AF8               	clrf	tblptru,c
 28724  0029A4  0E00               	movlw	low (__mediumconst shr (0+16))
 28725  0029A6  22F8               	addwfc	tblptru,f,c
 28726  0029A8                     	endif
 28727  0029A8  5025               	movf	__display_start@cntr,w,c
 28728  0029AA  0D01               	mullw	1
 28729  0029AC  0E3C               	movlw	low (_display_content+60)
 28730  0029AE  24F3               	addwf	prodl,w,c
 28731  0029B0  6ED9               	movwf	fsr2l,c
 28732  0029B2  0E02               	movlw	high (_display_content+60)
 28733  0029B4  20F4               	addwfc	prodh,w,c
 28734  0029B6  6EDA               	movwf	fsr2h,c
 28735  0029B8  0008               	tblrd		*
 28736  0029BA  CFF5 FFDF          	movff	tablat,indf2
 28737  0029BE  2A25               	incf	__display_start@cntr,f,c
 28738  0029C0                     l1571:
 28739  0029C0  5025               	movf	__display_start@cntr,w,c
 28740  0029C2  0D01               	mullw	1
 28741  0029C4  0E22               	movlw	low _start_line4
 28742  0029C6  24F3               	addwf	prodl,w,c
 28743  0029C8  6EF6               	movwf	tblptrl,c
 28744  0029CA  0E8E               	movlw	high _start_line4
 28745  0029CC  20F4               	addwfc	prodh,w,c
 28746  0029CE  6EF7               	movwf	tblptrh,c
 28747  0029D0                     	if	1	;There are 3 active tblptr bytes
 28748  0029D0  6AF8               	clrf	tblptru,c
 28749  0029D2  0E00               	movlw	low (__mediumconst shr (0+16))
 28750  0029D4  22F8               	addwfc	tblptru,f,c
 28751  0029D6                     	endif
 28752  0029D6  0008               	tblrd		*
 28753  0029D8  50F5               	movf	tablat,w,c
 28754  0029DA  0900               	iorlw	0
 28755  0029DC  B4D8               	btfsc	status,2,c
 28756  0029DE  0012               	return	
 28757  0029E0  D7D8               	goto	l1572
 28758  0029E2                     __end_of__display_start:
 28759                           	opt stack 0
 28760                           tosu	equ	0xFFF
 28761                           tosh	equ	0xFFE
 28762                           tosl	equ	0xFFD
 28763                           pclath	equ	0xFFA
 28764                           tblptru	equ	0xFF8
 28765                           tblptrh	equ	0xFF7
 28766                           tblptrl	equ	0xFF6
 28767                           tablat	equ	0xFF5
 28768                           prodh	equ	0xFF4
 28769                           prodl	equ	0xFF3
 28770                           intcon	equ	0xFF2
 28771                           intcon2	equ	0xFF1
 28772                           intcon3	equ	0xFF0
 28773                           indf0	equ	0xFEF
 28774                           postinc0	equ	0xFEE
 28775                           fsr0h	equ	0xFEA
 28776                           fsr0l	equ	0xFE9
 28777                           wreg	equ	0xFE8
 28778                           indf1	equ	0xFE7
 28779                           postdec1	equ	0xFE5
 28780                           plusw1	equ	0xFE3
 28781                           fsr1h	equ	0xFE2
 28782                           fsr1l	equ	0xFE1
 28783                           indf2	equ	0xFDF
 28784                           postinc2	equ	0xFDE
 28785                           postdec2	equ	0xFDD
 28786                           plusw2	equ	0xFDB
 28787                           fsr2h	equ	0xFDA
 28788                           fsr2l	equ	0xFD9
 28789                           status	equ	0xFD8
 28790                           
 28791 ;; *************** function __display_search *****************
 28792 ;; Defined at:
 28793 ;;		line 373 in file "display.c"
 28794 ;; Parameters:    Size  Location     Type
 28795 ;;		None
 28796 ;; Auto vars:     Size  Location     Type
 28797 ;;  cntr            1    0[COMRAM] unsigned char 
 28798 ;; Return value:  Size  Location     Type
 28799 ;;                  1    wreg      void 
 28800 ;; Registers used:
 28801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28802 ;; Tracked objects:
 28803 ;;		On entry : 0/0
 28804 ;;		On exit  : 0/0
 28805 ;;		Unchanged: 0/0
 28806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28811 ;;Total ram usage:        1 bytes
 28812 ;; Hardware stack levels used:    1
 28813 ;; This function calls:
 28814 ;;		Nothing
 28815 ;; This function is called by:
 28816 ;;		_display_prepare
 28817 ;; This function uses a non-reentrant model
 28818 ;;
 28819                           
 28820                           	psect	text139
 28821  003A88                     __ptext139:
 28822                           	opt stack 0
 28823  003A88                     __display_search:
 28824                           	opt stack 26
 28825                           
 28826                           ;display.c: 375: uint8_t cntr;;display.c: 376: cntr = 0;
 28827                           
 28828                           ;incstack = 0
 28829  003A88  0E00               	movlw	0
 28830  003A8A  6E01               	movwf	__display_search@cntr,c
 28831                           
 28832                           ;display.c: 377: while(search_line1[cntr])
 28833  003A8C  D017               	goto	l1577
 28834  003A8E                     
 28835                           ;display.c: 378: display_content[0][cntr] = search_line1[cntr++];
 28836  003A8E  5001               	movf	__display_search@cntr,w,c
 28837  003A90  0D01               	mullw	1
 28838  003A92  0EE4               	movlw	low _search_line1
 28839  003A94  24F3               	addwf	prodl,w,c
 28840  003A96  6EF6               	movwf	tblptrl,c
 28841  003A98  0E8D               	movlw	high _search_line1
 28842  003A9A  20F4               	addwfc	prodh,w,c
 28843  003A9C  6EF7               	movwf	tblptrh,c
 28844  003A9E                     	if	1	;There are 3 active tblptr bytes
 28845  003A9E  6AF8               	clrf	tblptru,c
 28846  003AA0  0E00               	movlw	low (__mediumconst shr (0+16))
 28847  003AA2  22F8               	addwfc	tblptru,f,c
 28848  003AA4                     	endif
 28849  003AA4  5001               	movf	__display_search@cntr,w,c
 28850  003AA6  0D01               	mullw	1
 28851  003AA8  0E00               	movlw	low _display_content
 28852  003AAA  24F3               	addwf	prodl,w,c
 28853  003AAC  6ED9               	movwf	fsr2l,c
 28854  003AAE  0E02               	movlw	high _display_content
 28855  003AB0  20F4               	addwfc	prodh,w,c
 28856  003AB2  6EDA               	movwf	fsr2h,c
 28857  003AB4  0008               	tblrd		*
 28858  003AB6  CFF5 FFDF          	movff	tablat,indf2
 28859  003ABA  2A01               	incf	__display_search@cntr,f,c
 28860  003ABC                     l1577:
 28861  003ABC  5001               	movf	__display_search@cntr,w,c
 28862  003ABE  0D01               	mullw	1
 28863  003AC0  0EE4               	movlw	low _search_line1
 28864  003AC2  24F3               	addwf	prodl,w,c
 28865  003AC4  6EF6               	movwf	tblptrl,c
 28866  003AC6  0E8D               	movlw	high _search_line1
 28867  003AC8  20F4               	addwfc	prodh,w,c
 28868  003ACA  6EF7               	movwf	tblptrh,c
 28869  003ACC                     	if	1	;There are 3 active tblptr bytes
 28870  003ACC  6AF8               	clrf	tblptru,c
 28871  003ACE  0E00               	movlw	low (__mediumconst shr (0+16))
 28872  003AD0  22F8               	addwfc	tblptru,f,c
 28873  003AD2                     	endif
 28874  003AD2  0008               	tblrd		*
 28875  003AD4  50F5               	movf	tablat,w,c
 28876  003AD6  0900               	iorlw	0
 28877  003AD8  A4D8               	btfss	status,2,c
 28878  003ADA  D7D9               	goto	l1578
 28879                           
 28880                           ;display.c: 379: cntr = 0;
 28881  003ADC  0E00               	movlw	0
 28882  003ADE  6E01               	movwf	__display_search@cntr,c
 28883                           
 28884                           ;display.c: 380: while(search_line2[cntr])
 28885  003AE0  D017               	goto	l1580
 28886  003AE2                     
 28887                           ;display.c: 381: display_content[1][cntr] = search_line2[cntr++];
 28888  003AE2  5001               	movf	__display_search@cntr,w,c
 28889  003AE4  0D01               	mullw	1
 28890  003AE6  0E43               	movlw	low _search_line2
 28891  003AE8  24F3               	addwf	prodl,w,c
 28892  003AEA  6EF6               	movwf	tblptrl,c
 28893  003AEC  0E8D               	movlw	high _search_line2
 28894  003AEE  20F4               	addwfc	prodh,w,c
 28895  003AF0  6EF7               	movwf	tblptrh,c
 28896  003AF2                     	if	1	;There are 3 active tblptr bytes
 28897  003AF2  6AF8               	clrf	tblptru,c
 28898  003AF4  0E00               	movlw	low (__mediumconst shr (0+16))
 28899  003AF6  22F8               	addwfc	tblptru,f,c
 28900  003AF8                     	endif
 28901  003AF8  5001               	movf	__display_search@cntr,w,c
 28902  003AFA  0D01               	mullw	1
 28903  003AFC  0E14               	movlw	low (_display_content+20)
 28904  003AFE  24F3               	addwf	prodl,w,c
 28905  003B00  6ED9               	movwf	fsr2l,c
 28906  003B02  0E02               	movlw	high (_display_content+20)
 28907  003B04  20F4               	addwfc	prodh,w,c
 28908  003B06  6EDA               	movwf	fsr2h,c
 28909  003B08  0008               	tblrd		*
 28910  003B0A  CFF5 FFDF          	movff	tablat,indf2
 28911  003B0E  2A01               	incf	__display_search@cntr,f,c
 28912  003B10                     l1580:
 28913  003B10  5001               	movf	__display_search@cntr,w,c
 28914  003B12  0D01               	mullw	1
 28915  003B14  0E43               	movlw	low _search_line2
 28916  003B16  24F3               	addwf	prodl,w,c
 28917  003B18  6EF6               	movwf	tblptrl,c
 28918  003B1A  0E8D               	movlw	high _search_line2
 28919  003B1C  20F4               	addwfc	prodh,w,c
 28920  003B1E  6EF7               	movwf	tblptrh,c
 28921  003B20                     	if	1	;There are 3 active tblptr bytes
 28922  003B20  6AF8               	clrf	tblptru,c
 28923  003B22  0E00               	movlw	low (__mediumconst shr (0+16))
 28924  003B24  22F8               	addwfc	tblptru,f,c
 28925  003B26                     	endif
 28926  003B26  0008               	tblrd		*
 28927  003B28  50F5               	movf	tablat,w,c
 28928  003B2A  0900               	iorlw	0
 28929  003B2C  A4D8               	btfss	status,2,c
 28930  003B2E  D7D9               	goto	l1581
 28931                           
 28932                           ;display.c: 382: cntr = 0;
 28933  003B30  0E00               	movlw	0
 28934  003B32  6E01               	movwf	__display_search@cntr,c
 28935                           
 28936                           ;display.c: 383: while(search_line3[cntr])
 28937  003B34  D017               	goto	l1583
 28938  003B36                     
 28939                           ;display.c: 384: display_content[2][cntr] = search_line3[cntr++];
 28940  003B36  5001               	movf	__display_search@cntr,w,c
 28941  003B38  0D01               	mullw	1
 28942  003B3A  0EC2               	movlw	low _search_line3
 28943  003B3C  24F3               	addwf	prodl,w,c
 28944  003B3E  6EF6               	movwf	tblptrl,c
 28945  003B40  0E8C               	movlw	high _search_line3
 28946  003B42  20F4               	addwfc	prodh,w,c
 28947  003B44  6EF7               	movwf	tblptrh,c
 28948  003B46                     	if	1	;There are 3 active tblptr bytes
 28949  003B46  6AF8               	clrf	tblptru,c
 28950  003B48  0E00               	movlw	low (__mediumconst shr (0+16))
 28951  003B4A  22F8               	addwfc	tblptru,f,c
 28952  003B4C                     	endif
 28953  003B4C  5001               	movf	__display_search@cntr,w,c
 28954  003B4E  0D01               	mullw	1
 28955  003B50  0E28               	movlw	low (_display_content+40)
 28956  003B52  24F3               	addwf	prodl,w,c
 28957  003B54  6ED9               	movwf	fsr2l,c
 28958  003B56  0E02               	movlw	high (_display_content+40)
 28959  003B58  20F4               	addwfc	prodh,w,c
 28960  003B5A  6EDA               	movwf	fsr2h,c
 28961  003B5C  0008               	tblrd		*
 28962  003B5E  CFF5 FFDF          	movff	tablat,indf2
 28963  003B62  2A01               	incf	__display_search@cntr,f,c
 28964  003B64                     l1583:
 28965  003B64  5001               	movf	__display_search@cntr,w,c
 28966  003B66  0D01               	mullw	1
 28967  003B68  0EC2               	movlw	low _search_line3
 28968  003B6A  24F3               	addwf	prodl,w,c
 28969  003B6C  6EF6               	movwf	tblptrl,c
 28970  003B6E  0E8C               	movlw	high _search_line3
 28971  003B70  20F4               	addwfc	prodh,w,c
 28972  003B72  6EF7               	movwf	tblptrh,c
 28973  003B74                     	if	1	;There are 3 active tblptr bytes
 28974  003B74  6AF8               	clrf	tblptru,c
 28975  003B76  0E00               	movlw	low (__mediumconst shr (0+16))
 28976  003B78  22F8               	addwfc	tblptru,f,c
 28977  003B7A                     	endif
 28978  003B7A  0008               	tblrd		*
 28979  003B7C  50F5               	movf	tablat,w,c
 28980  003B7E  0900               	iorlw	0
 28981  003B80  A4D8               	btfss	status,2,c
 28982  003B82  D7D9               	goto	l1584
 28983                           
 28984                           ;display.c: 385: cntr = 0;
 28985  003B84  0E00               	movlw	0
 28986  003B86  6E01               	movwf	__display_search@cntr,c
 28987                           
 28988                           ;display.c: 386: while(search_line4[cntr])
 28989  003B88  D017               	goto	l1586
 28990  003B8A                     
 28991                           ;display.c: 387: display_content[3][cntr] = search_line4[cntr++];
 28992  003B8A  5001               	movf	__display_search@cntr,w,c
 28993  003B8C  0D01               	mullw	1
 28994  003B8E  0E59               	movlw	low _search_line4
 28995  003B90  24F3               	addwf	prodl,w,c
 28996  003B92  6EF6               	movwf	tblptrl,c
 28997  003B94  0E8E               	movlw	high _search_line4
 28998  003B96  20F4               	addwfc	prodh,w,c
 28999  003B98  6EF7               	movwf	tblptrh,c
 29000  003B9A                     	if	1	;There are 3 active tblptr bytes
 29001  003B9A  6AF8               	clrf	tblptru,c
 29002  003B9C  0E00               	movlw	low (__mediumconst shr (0+16))
 29003  003B9E  22F8               	addwfc	tblptru,f,c
 29004  003BA0                     	endif
 29005  003BA0  5001               	movf	__display_search@cntr,w,c
 29006  003BA2  0D01               	mullw	1
 29007  003BA4  0E3C               	movlw	low (_display_content+60)
 29008  003BA6  24F3               	addwf	prodl,w,c
 29009  003BA8  6ED9               	movwf	fsr2l,c
 29010  003BAA  0E02               	movlw	high (_display_content+60)
 29011  003BAC  20F4               	addwfc	prodh,w,c
 29012  003BAE  6EDA               	movwf	fsr2h,c
 29013  003BB0  0008               	tblrd		*
 29014  003BB2  CFF5 FFDF          	movff	tablat,indf2
 29015  003BB6  2A01               	incf	__display_search@cntr,f,c
 29016  003BB8                     l1586:
 29017  003BB8  5001               	movf	__display_search@cntr,w,c
 29018  003BBA  0D01               	mullw	1
 29019  003BBC  0E59               	movlw	low _search_line4
 29020  003BBE  24F3               	addwf	prodl,w,c
 29021  003BC0  6EF6               	movwf	tblptrl,c
 29022  003BC2  0E8E               	movlw	high _search_line4
 29023  003BC4  20F4               	addwfc	prodh,w,c
 29024  003BC6  6EF7               	movwf	tblptrh,c
 29025  003BC8                     	if	1	;There are 3 active tblptr bytes
 29026  003BC8  6AF8               	clrf	tblptru,c
 29027  003BCA  0E00               	movlw	low (__mediumconst shr (0+16))
 29028  003BCC  22F8               	addwfc	tblptru,f,c
 29029  003BCE                     	endif
 29030  003BCE  0008               	tblrd		*
 29031  003BD0  50F5               	movf	tablat,w,c
 29032  003BD2  0900               	iorlw	0
 29033  003BD4  B4D8               	btfsc	status,2,c
 29034  003BD6  0012               	return	
 29035  003BD8  D7D8               	goto	l1587
 29036  003BDA                     __end_of__display_search:
 29037                           	opt stack 0
 29038                           tosu	equ	0xFFF
 29039                           tosh	equ	0xFFE
 29040                           tosl	equ	0xFFD
 29041                           pclath	equ	0xFFA
 29042                           tblptru	equ	0xFF8
 29043                           tblptrh	equ	0xFF7
 29044                           tblptrl	equ	0xFF6
 29045                           tablat	equ	0xFF5
 29046                           prodh	equ	0xFF4
 29047                           prodl	equ	0xFF3
 29048                           intcon	equ	0xFF2
 29049                           intcon2	equ	0xFF1
 29050                           intcon3	equ	0xFF0
 29051                           indf0	equ	0xFEF
 29052                           postinc0	equ	0xFEE
 29053                           fsr0h	equ	0xFEA
 29054                           fsr0l	equ	0xFE9
 29055                           wreg	equ	0xFE8
 29056                           indf1	equ	0xFE7
 29057                           postdec1	equ	0xFE5
 29058                           plusw1	equ	0xFE3
 29059                           fsr1h	equ	0xFE2
 29060                           fsr1l	equ	0xFE1
 29061                           indf2	equ	0xFDF
 29062                           postinc2	equ	0xFDE
 29063                           postdec2	equ	0xFDD
 29064                           plusw2	equ	0xFDB
 29065                           fsr2h	equ	0xFDA
 29066                           fsr2l	equ	0xFD9
 29067                           status	equ	0xFD8
 29068                           
 29069 ;; *************** function __display_rebooting *****************
 29070 ;; Defined at:
 29071 ;;		line 547 in file "display.c"
 29072 ;; Parameters:    Size  Location     Type
 29073 ;;		None
 29074 ;; Auto vars:     Size  Location     Type
 29075 ;;  cntr            1    0[COMRAM] unsigned char 
 29076 ;; Return value:  Size  Location     Type
 29077 ;;                  1    wreg      void 
 29078 ;; Registers used:
 29079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 29080 ;; Tracked objects:
 29081 ;;		On entry : 0/0
 29082 ;;		On exit  : 0/0
 29083 ;;		Unchanged: 0/0
 29084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29089 ;;Total ram usage:        1 bytes
 29090 ;; Hardware stack levels used:    1
 29091 ;; This function calls:
 29092 ;;		Nothing
 29093 ;; This function is called by:
 29094 ;;		_display_prepare
 29095 ;; This function uses a non-reentrant model
 29096 ;;
 29097                           
 29098                           	psect	text140
 29099  0074E6                     __ptext140:
 29100                           	opt stack 0
 29101  0074E6                     __display_rebooting:
 29102                           	opt stack 26
 29103                           
 29104                           ;display.c: 549: uint8_t cntr;;display.c: 550: cntr = 0;
 29105                           
 29106                           ;incstack = 0
 29107  0074E6  0E00               	movlw	0
 29108  0074E8  6E01               	movwf	__display_rebooting@cntr,c
 29109                           
 29110                           ;display.c: 551: while(reboot_line1[cntr])
 29111  0074EA  D017               	goto	l1701
 29112  0074EC                     
 29113                           ;display.c: 552: display_content[0][cntr] = reboot_line1[cntr++];
 29114  0074EC  5001               	movf	__display_rebooting@cntr,w,c
 29115  0074EE  0D01               	mullw	1
 29116  0074F0  0E3F               	movlw	low _reboot_line1
 29117  0074F2  24F3               	addwf	prodl,w,c
 29118  0074F4  6EF6               	movwf	tblptrl,c
 29119  0074F6  0E8E               	movlw	high _reboot_line1
 29120  0074F8  20F4               	addwfc	prodh,w,c
 29121  0074FA  6EF7               	movwf	tblptrh,c
 29122  0074FC                     	if	1	;There are 3 active tblptr bytes
 29123  0074FC  6AF8               	clrf	tblptru,c
 29124  0074FE  0E00               	movlw	low (__mediumconst shr (0+16))
 29125  007500  22F8               	addwfc	tblptru,f,c
 29126  007502                     	endif
 29127  007502  5001               	movf	__display_rebooting@cntr,w,c
 29128  007504  0D01               	mullw	1
 29129  007506  0E00               	movlw	low _display_content
 29130  007508  24F3               	addwf	prodl,w,c
 29131  00750A  6ED9               	movwf	fsr2l,c
 29132  00750C  0E02               	movlw	high _display_content
 29133  00750E  20F4               	addwfc	prodh,w,c
 29134  007510  6EDA               	movwf	fsr2h,c
 29135  007512  0008               	tblrd		*
 29136  007514  CFF5 FFDF          	movff	tablat,indf2
 29137  007518  2A01               	incf	__display_rebooting@cntr,f,c
 29138  00751A                     l1701:
 29139  00751A  5001               	movf	__display_rebooting@cntr,w,c
 29140  00751C  0D01               	mullw	1
 29141  00751E  0E3F               	movlw	low _reboot_line1
 29142  007520  24F3               	addwf	prodl,w,c
 29143  007522  6EF6               	movwf	tblptrl,c
 29144  007524  0E8E               	movlw	high _reboot_line1
 29145  007526  20F4               	addwfc	prodh,w,c
 29146  007528  6EF7               	movwf	tblptrh,c
 29147  00752A                     	if	1	;There are 3 active tblptr bytes
 29148  00752A  6AF8               	clrf	tblptru,c
 29149  00752C  0E00               	movlw	low (__mediumconst shr (0+16))
 29150  00752E  22F8               	addwfc	tblptru,f,c
 29151  007530                     	endif
 29152  007530  0008               	tblrd		*
 29153  007532  50F5               	movf	tablat,w,c
 29154  007534  0900               	iorlw	0
 29155  007536  B4D8               	btfsc	status,2,c
 29156  007538  0012               	return	
 29157  00753A  D7D8               	goto	l1702
 29158  00753C                     __end_of__display_rebooting:
 29159                           	opt stack 0
 29160                           tosu	equ	0xFFF
 29161                           tosh	equ	0xFFE
 29162                           tosl	equ	0xFFD
 29163                           pclath	equ	0xFFA
 29164                           tblptru	equ	0xFF8
 29165                           tblptrh	equ	0xFF7
 29166                           tblptrl	equ	0xFF6
 29167                           tablat	equ	0xFF5
 29168                           prodh	equ	0xFF4
 29169                           prodl	equ	0xFF3
 29170                           intcon	equ	0xFF2
 29171                           intcon2	equ	0xFF1
 29172                           intcon3	equ	0xFF0
 29173                           indf0	equ	0xFEF
 29174                           postinc0	equ	0xFEE
 29175                           fsr0h	equ	0xFEA
 29176                           fsr0l	equ	0xFE9
 29177                           wreg	equ	0xFE8
 29178                           indf1	equ	0xFE7
 29179                           postdec1	equ	0xFE5
 29180                           plusw1	equ	0xFE3
 29181                           fsr1h	equ	0xFE2
 29182                           fsr1l	equ	0xFE1
 29183                           indf2	equ	0xFDF
 29184                           postinc2	equ	0xFDE
 29185                           postdec2	equ	0xFDD
 29186                           plusw2	equ	0xFDB
 29187                           fsr2h	equ	0xFDA
 29188                           fsr2l	equ	0xFD9
 29189                           status	equ	0xFD8
 29190                           
 29191 ;; *************** function __display_programming *****************
 29192 ;; Defined at:
 29193 ;;		line 505 in file "display.c"
 29194 ;; Parameters:    Size  Location     Type
 29195 ;;		None
 29196 ;; Auto vars:     Size  Location     Type
 29197 ;;  cntr            1   30[COMRAM] unsigned char 
 29198 ;; Return value:  Size  Location     Type
 29199 ;;                  1    wreg      void 
 29200 ;; Registers used:
 29201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29202 ;; Tracked objects:
 29203 ;;		On entry : 0/0
 29204 ;;		On exit  : 0/0
 29205 ;;		Unchanged: 0/0
 29206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29208 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29210 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29211 ;;Total ram usage:        1 bytes
 29212 ;; Hardware stack levels used:    1
 29213 ;; Hardware stack levels required when called:    4
 29214 ;; This function calls:
 29215 ;;		__display_itoa_u16
 29216 ;;		_bootloader_get_entries
 29217 ;;		_bootloader_get_flashPagesWritten
 29218 ;;		_bootloader_get_total_entries
 29219 ;; This function is called by:
 29220 ;;		_display_prepare
 29221 ;; This function uses a non-reentrant model
 29222 ;;
 29223                           
 29224                           	psect	text141
 29225  002F88                     __ptext141:
 29226                           	opt stack 0
 29227  002F88                     __display_programming:
 29228                           	opt stack 22
 29229                           
 29230                           ;display.c: 507: uint8_t cntr;;display.c: 508: cntr = 0;
 29231                           
 29232                           ;incstack = 0
 29233  002F88  0E00               	movlw	0
 29234  002F8A  6E1F               	movwf	__display_programming@cntr,c
 29235                           
 29236                           ;display.c: 509: while(programming_line1[cntr])
 29237  002F8C  D017               	goto	l1671
 29238  002F8E                     
 29239                           ;display.c: 510: display_content[0][cntr] = programming_line1[cntr++];
 29240  002F8E  501F               	movf	__display_programming@cntr,w,c
 29241  002F90  0D01               	mullw	1
 29242  002F92  0E94               	movlw	low _programming_line1
 29243  002F94  24F3               	addwf	prodl,w,c
 29244  002F96  6EF6               	movwf	tblptrl,c
 29245  002F98  0E8D               	movlw	high _programming_line1
 29246  002F9A  20F4               	addwfc	prodh,w,c
 29247  002F9C  6EF7               	movwf	tblptrh,c
 29248  002F9E                     	if	1	;There are 3 active tblptr bytes
 29249  002F9E  6AF8               	clrf	tblptru,c
 29250  002FA0  0E00               	movlw	low (__mediumconst shr (0+16))
 29251  002FA2  22F8               	addwfc	tblptru,f,c
 29252  002FA4                     	endif
 29253  002FA4  501F               	movf	__display_programming@cntr,w,c
 29254  002FA6  0D01               	mullw	1
 29255  002FA8  0E00               	movlw	low _display_content
 29256  002FAA  24F3               	addwf	prodl,w,c
 29257  002FAC  6ED9               	movwf	fsr2l,c
 29258  002FAE  0E02               	movlw	high _display_content
 29259  002FB0  20F4               	addwfc	prodh,w,c
 29260  002FB2  6EDA               	movwf	fsr2h,c
 29261  002FB4  0008               	tblrd		*
 29262  002FB6  CFF5 FFDF          	movff	tablat,indf2
 29263  002FBA  2A1F               	incf	__display_programming@cntr,f,c
 29264  002FBC                     l1671:
 29265  002FBC  501F               	movf	__display_programming@cntr,w,c
 29266  002FBE  0D01               	mullw	1
 29267  002FC0  0E94               	movlw	low _programming_line1
 29268  002FC2  24F3               	addwf	prodl,w,c
 29269  002FC4  6EF6               	movwf	tblptrl,c
 29270  002FC6  0E8D               	movlw	high _programming_line1
 29271  002FC8  20F4               	addwfc	prodh,w,c
 29272  002FCA  6EF7               	movwf	tblptrh,c
 29273  002FCC                     	if	1	;There are 3 active tblptr bytes
 29274  002FCC  6AF8               	clrf	tblptru,c
 29275  002FCE  0E00               	movlw	low (__mediumconst shr (0+16))
 29276  002FD0  22F8               	addwfc	tblptru,f,c
 29277  002FD2                     	endif
 29278  002FD2  0008               	tblrd		*
 29279  002FD4  50F5               	movf	tablat,w,c
 29280  002FD6  0900               	iorlw	0
 29281  002FD8  A4D8               	btfss	status,2,c
 29282  002FDA  D7D9               	goto	l1672
 29283                           
 29284                           ;display.c: 512: cntr = 0;
 29285  002FDC  0E00               	movlw	0
 29286  002FDE  6E1F               	movwf	__display_programming@cntr,c
 29287                           
 29288                           ;display.c: 513: while(programming_line2[cntr])
 29289  002FE0  D017               	goto	l1674
 29290  002FE2                     
 29291                           ;display.c: 514: display_content[1][cntr] = programming_line2[cntr++];
 29292  002FE2  501F               	movf	__display_programming@cntr,w,c
 29293  002FE4  0D01               	mullw	1
 29294  002FE6  0EFC               	movlw	low _programming_line2
 29295  002FE8  24F3               	addwf	prodl,w,c
 29296  002FEA  6EF6               	movwf	tblptrl,c
 29297  002FEC  0E8C               	movlw	high _programming_line2
 29298  002FEE  20F4               	addwfc	prodh,w,c
 29299  002FF0  6EF7               	movwf	tblptrh,c
 29300  002FF2                     	if	1	;There are 3 active tblptr bytes
 29301  002FF2  6AF8               	clrf	tblptru,c
 29302  002FF4  0E00               	movlw	low (__mediumconst shr (0+16))
 29303  002FF6  22F8               	addwfc	tblptru,f,c
 29304  002FF8                     	endif
 29305  002FF8  501F               	movf	__display_programming@cntr,w,c
 29306  002FFA  0D01               	mullw	1
 29307  002FFC  0E14               	movlw	low (_display_content+20)
 29308  002FFE  24F3               	addwf	prodl,w,c
 29309  003000  6ED9               	movwf	fsr2l,c
 29310  003002  0E02               	movlw	high (_display_content+20)
 29311  003004  20F4               	addwfc	prodh,w,c
 29312  003006  6EDA               	movwf	fsr2h,c
 29313  003008  0008               	tblrd		*
 29314  00300A  CFF5 FFDF          	movff	tablat,indf2
 29315  00300E  2A1F               	incf	__display_programming@cntr,f,c
 29316  003010                     l1674:
 29317  003010  501F               	movf	__display_programming@cntr,w,c
 29318  003012  0D01               	mullw	1
 29319  003014  0EFC               	movlw	low _programming_line2
 29320  003016  24F3               	addwf	prodl,w,c
 29321  003018  6EF6               	movwf	tblptrl,c
 29322  00301A  0E8C               	movlw	high _programming_line2
 29323  00301C  20F4               	addwfc	prodh,w,c
 29324  00301E  6EF7               	movwf	tblptrh,c
 29325  003020                     	if	1	;There are 3 active tblptr bytes
 29326  003020  6AF8               	clrf	tblptru,c
 29327  003022  0E00               	movlw	low (__mediumconst shr (0+16))
 29328  003024  22F8               	addwfc	tblptru,f,c
 29329  003026                     	endif
 29330  003026  0008               	tblrd		*
 29331  003028  50F5               	movf	tablat,w,c
 29332  00302A  0900               	iorlw	0
 29333  00302C  A4D8               	btfss	status,2,c
 29334  00302E  D7D9               	goto	l1675
 29335                           
 29336                           ;display.c: 516: cntr = 0;
 29337  003030  0E00               	movlw	0
 29338  003032  6E1F               	movwf	__display_programming@cntr,c
 29339                           
 29340                           ;display.c: 517: while(programming_line3[cntr])
 29341  003034  D017               	goto	l1677
 29342  003036                     
 29343                           ;display.c: 518: display_content[2][cntr] = programming_line3[cntr++];
 29344  003036  501F               	movf	__display_programming@cntr,w,c
 29345  003038  0D01               	mullw	1
 29346  00303A  0E83               	movlw	low _programming_line3
 29347  00303C  24F3               	addwf	prodl,w,c
 29348  00303E  6EF6               	movwf	tblptrl,c
 29349  003040  0E8E               	movlw	high _programming_line3
 29350  003042  20F4               	addwfc	prodh,w,c
 29351  003044  6EF7               	movwf	tblptrh,c
 29352  003046                     	if	1	;There are 3 active tblptr bytes
 29353  003046  6AF8               	clrf	tblptru,c
 29354  003048  0E00               	movlw	low (__mediumconst shr (0+16))
 29355  00304A  22F8               	addwfc	tblptru,f,c
 29356  00304C                     	endif
 29357  00304C  501F               	movf	__display_programming@cntr,w,c
 29358  00304E  0D01               	mullw	1
 29359  003050  0E28               	movlw	low (_display_content+40)
 29360  003052  24F3               	addwf	prodl,w,c
 29361  003054  6ED9               	movwf	fsr2l,c
 29362  003056  0E02               	movlw	high (_display_content+40)
 29363  003058  20F4               	addwfc	prodh,w,c
 29364  00305A  6EDA               	movwf	fsr2h,c
 29365  00305C  0008               	tblrd		*
 29366  00305E  CFF5 FFDF          	movff	tablat,indf2
 29367  003062  2A1F               	incf	__display_programming@cntr,f,c
 29368  003064                     l1677:
 29369  003064  501F               	movf	__display_programming@cntr,w,c
 29370  003066  0D01               	mullw	1
 29371  003068  0E83               	movlw	low _programming_line3
 29372  00306A  24F3               	addwf	prodl,w,c
 29373  00306C  6EF6               	movwf	tblptrl,c
 29374  00306E  0E8E               	movlw	high _programming_line3
 29375  003070  20F4               	addwfc	prodh,w,c
 29376  003072  6EF7               	movwf	tblptrh,c
 29377  003074                     	if	1	;There are 3 active tblptr bytes
 29378  003074  6AF8               	clrf	tblptru,c
 29379  003076  0E00               	movlw	low (__mediumconst shr (0+16))
 29380  003078  22F8               	addwfc	tblptru,f,c
 29381  00307A                     	endif
 29382  00307A  0008               	tblrd		*
 29383  00307C  50F5               	movf	tablat,w,c
 29384  00307E  0900               	iorlw	0
 29385  003080  A4D8               	btfss	status,2,c
 29386  003082  D7D9               	goto	l1678
 29387                           
 29388                           ;display.c: 519: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 29389  003084  ECD0  F040         	call	_bootloader_get_entries	;wreg free
 29390  003088  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 29391  00308C  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 29392  003090  6A1B               	clrf	__display_itoa_u16@value+2,c
 29393  003092  6A1C               	clrf	__display_itoa_u16@value+3,c
 29394  003094  501F               	movf	__display_programming@cntr,w,c
 29395  003096  0D01               	mullw	1
 29396  003098  0E28               	movlw	low (_display_content+40)
 29397  00309A  24F3               	addwf	prodl,w,c
 29398  00309C  6E1D               	movwf	__display_itoa_u16@text,c
 29399  00309E  0E02               	movlw	high (_display_content+40)
 29400  0030A0  20F4               	addwfc	prodh,w,c
 29401  0030A2  6E1E               	movwf	__display_itoa_u16@text+1,c
 29402  0030A4  EC79  F02A         	call	__display_itoa_u16	;wreg free
 29403  0030A8  261F               	addwf	__display_programming@cntr,f,c
 29404                           
 29405                           ;display.c: 520: display_content[2][cntr++] = '/';
 29406  0030AA  501F               	movf	__display_programming@cntr,w,c
 29407  0030AC  0D01               	mullw	1
 29408  0030AE  0E28               	movlw	low (_display_content+40)
 29409  0030B0  24F3               	addwf	prodl,w,c
 29410  0030B2  6ED9               	movwf	fsr2l,c
 29411  0030B4  0E02               	movlw	high (_display_content+40)
 29412  0030B6  20F4               	addwfc	prodh,w,c
 29413  0030B8  6EDA               	movwf	fsr2h,c
 29414  0030BA  0E2F               	movlw	47
 29415  0030BC  6EDF               	movwf	indf2,c
 29416  0030BE  2A1F               	incf	__display_programming@cntr,f,c
 29417                           
 29418                           ;display.c: 521: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 29419  0030C0  ECDA  F040         	call	_bootloader_get_total_entries	;wreg free
 29420  0030C4  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 29421  0030C8  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 29422  0030CC  6A1B               	clrf	__display_itoa_u16@value+2,c
 29423  0030CE  6A1C               	clrf	__display_itoa_u16@value+3,c
 29424  0030D0  501F               	movf	__display_programming@cntr,w,c
 29425  0030D2  0D01               	mullw	1
 29426  0030D4  0E28               	movlw	low (_display_content+40)
 29427  0030D6  24F3               	addwf	prodl,w,c
 29428  0030D8  6E1D               	movwf	__display_itoa_u16@text,c
 29429  0030DA  0E02               	movlw	high (_display_content+40)
 29430  0030DC  20F4               	addwfc	prodh,w,c
 29431  0030DE  6E1E               	movwf	__display_itoa_u16@text+1,c
 29432  0030E0  EC79  F02A         	call	__display_itoa_u16	;wreg free
 29433                           
 29434                           ;display.c: 523: cntr = 0;
 29435  0030E4  0E00               	movlw	0
 29436  0030E6  6E1F               	movwf	__display_programming@cntr,c
 29437                           
 29438                           ;display.c: 524: while(programming_line4[cntr])
 29439  0030E8  D017               	goto	l1680
 29440  0030EA                     
 29441                           ;display.c: 525: display_content[3][cntr] = programming_line4[cntr++];
 29442  0030EA  501F               	movf	__display_programming@cntr,w,c
 29443  0030EC  0D01               	mullw	1
 29444  0030EE  0E84               	movlw	low _programming_line4
 29445  0030F0  24F3               	addwf	prodl,w,c
 29446  0030F2  6EF6               	movwf	tblptrl,c
 29447  0030F4  0E8D               	movlw	high _programming_line4
 29448  0030F6  20F4               	addwfc	prodh,w,c
 29449  0030F8  6EF7               	movwf	tblptrh,c
 29450  0030FA                     	if	1	;There are 3 active tblptr bytes
 29451  0030FA  6AF8               	clrf	tblptru,c
 29452  0030FC  0E00               	movlw	low (__mediumconst shr (0+16))
 29453  0030FE  22F8               	addwfc	tblptru,f,c
 29454  003100                     	endif
 29455  003100  501F               	movf	__display_programming@cntr,w,c
 29456  003102  0D01               	mullw	1
 29457  003104  0E3C               	movlw	low (_display_content+60)
 29458  003106  24F3               	addwf	prodl,w,c
 29459  003108  6ED9               	movwf	fsr2l,c
 29460  00310A  0E02               	movlw	high (_display_content+60)
 29461  00310C  20F4               	addwfc	prodh,w,c
 29462  00310E  6EDA               	movwf	fsr2h,c
 29463  003110  0008               	tblrd		*
 29464  003112  CFF5 FFDF          	movff	tablat,indf2
 29465  003116  2A1F               	incf	__display_programming@cntr,f,c
 29466  003118                     l1680:
 29467  003118  501F               	movf	__display_programming@cntr,w,c
 29468  00311A  0D01               	mullw	1
 29469  00311C  0E84               	movlw	low _programming_line4
 29470  00311E  24F3               	addwf	prodl,w,c
 29471  003120  6EF6               	movwf	tblptrl,c
 29472  003122  0E8D               	movlw	high _programming_line4
 29473  003124  20F4               	addwfc	prodh,w,c
 29474  003126  6EF7               	movwf	tblptrh,c
 29475  003128                     	if	1	;There are 3 active tblptr bytes
 29476  003128  6AF8               	clrf	tblptru,c
 29477  00312A  0E00               	movlw	low (__mediumconst shr (0+16))
 29478  00312C  22F8               	addwfc	tblptru,f,c
 29479  00312E                     	endif
 29480  00312E  0008               	tblrd		*
 29481  003130  50F5               	movf	tablat,w,c
 29482  003132  0900               	iorlw	0
 29483  003134  A4D8               	btfss	status,2,c
 29484  003136  D7D9               	goto	l1681
 29485                           
 29486                           ;display.c: 526: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 29487  003138  ECD5  F040         	call	_bootloader_get_flashPagesWritten	;wreg free
 29488  00313C  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 29489  003140  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 29490  003144  6A1B               	clrf	__display_itoa_u16@value+2,c
 29491  003146  6A1C               	clrf	__display_itoa_u16@value+3,c
 29492  003148  501F               	movf	__display_programming@cntr,w,c
 29493  00314A  0D01               	mullw	1
 29494  00314C  0E3C               	movlw	low (_display_content+60)
 29495  00314E  24F3               	addwf	prodl,w,c
 29496  003150  6E1D               	movwf	__display_itoa_u16@text,c
 29497  003152  0E02               	movlw	high (_display_content+60)
 29498  003154  20F4               	addwfc	prodh,w,c
 29499  003156  6E1E               	movwf	__display_itoa_u16@text+1,c
 29500  003158  EC79  F02A         	call	__display_itoa_u16	;wreg free
 29501  00315C  0012               	return		;funcret
 29502  00315E                     __end_of__display_programming:
 29503                           	opt stack 0
 29504                           tosu	equ	0xFFF
 29505                           tosh	equ	0xFFE
 29506                           tosl	equ	0xFFD
 29507                           pclath	equ	0xFFA
 29508                           tblptru	equ	0xFF8
 29509                           tblptrh	equ	0xFF7
 29510                           tblptrl	equ	0xFF6
 29511                           tablat	equ	0xFF5
 29512                           prodh	equ	0xFF4
 29513                           prodl	equ	0xFF3
 29514                           intcon	equ	0xFF2
 29515                           intcon2	equ	0xFF1
 29516                           intcon3	equ	0xFF0
 29517                           indf0	equ	0xFEF
 29518                           postinc0	equ	0xFEE
 29519                           fsr0h	equ	0xFEA
 29520                           fsr0l	equ	0xFE9
 29521                           wreg	equ	0xFE8
 29522                           indf1	equ	0xFE7
 29523                           postdec1	equ	0xFE5
 29524                           plusw1	equ	0xFE3
 29525                           fsr1h	equ	0xFE2
 29526                           fsr1l	equ	0xFE1
 29527                           indf2	equ	0xFDF
 29528                           postinc2	equ	0xFDE
 29529                           postdec2	equ	0xFDD
 29530                           plusw2	equ	0xFDB
 29531                           fsr2h	equ	0xFDA
 29532                           fsr2l	equ	0xFD9
 29533                           status	equ	0xFD8
 29534                           
 29535 ;; *************** function __display_found *****************
 29536 ;; Defined at:
 29537 ;;		line 390 in file "display.c"
 29538 ;; Parameters:    Size  Location     Type
 29539 ;;		None
 29540 ;; Auto vars:     Size  Location     Type
 29541 ;;  cntr            1   39[COMRAM] unsigned char 
 29542 ;;  start           1   38[COMRAM] unsigned char 
 29543 ;; Return value:  Size  Location     Type
 29544 ;;                  1    wreg      void 
 29545 ;; Registers used:
 29546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29547 ;; Tracked objects:
 29548 ;;		On entry : 0/0
 29549 ;;		On exit  : 0/0
 29550 ;;		Unchanged: 0/0
 29551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29553 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29556 ;;Total ram usage:        4 bytes
 29557 ;; Hardware stack levels used:    1
 29558 ;; Hardware stack levels required when called:    5
 29559 ;; This function calls:
 29560 ;;		__display_itoa_u32
 29561 ;;		_bootloader_get_file_size
 29562 ;; This function is called by:
 29563 ;;		_display_prepare
 29564 ;; This function uses a non-reentrant model
 29565 ;;
 29566                           
 29567                           	psect	text142
 29568  002BD0                     __ptext142:
 29569                           	opt stack 0
 29570  002BD0                     __display_found:
 29571                           	opt stack 21
 29572                           
 29573                           ;display.c: 392: uint8_t cntr;;display.c: 393: uint8_t start;;display.c: 395: cntr = 0;
 29574                           
 29575                           ;incstack = 0
 29576  002BD0  0E00               	movlw	0
 29577  002BD2  6E28               	movwf	__display_found@cntr,c
 29578                           
 29579                           ;display.c: 396: while(found_line1[cntr])
 29580  002BD4  D017               	goto	l1592
 29581  002BD6                     
 29582                           ;display.c: 397: display_content[0][cntr] = found_line1[cntr++];
 29583  002BD6  5028               	movf	__display_found@cntr,w,c
 29584  002BD8  0D01               	mullw	1
 29585  002BDA  0ED4               	movlw	low _found_line1
 29586  002BDC  24F3               	addwf	prodl,w,c
 29587  002BDE  6EF6               	movwf	tblptrl,c
 29588  002BE0  0E8D               	movlw	high _found_line1
 29589  002BE2  20F4               	addwfc	prodh,w,c
 29590  002BE4  6EF7               	movwf	tblptrh,c
 29591  002BE6                     	if	1	;There are 3 active tblptr bytes
 29592  002BE6  6AF8               	clrf	tblptru,c
 29593  002BE8  0E00               	movlw	low (__mediumconst shr (0+16))
 29594  002BEA  22F8               	addwfc	tblptru,f,c
 29595  002BEC                     	endif
 29596  002BEC  5028               	movf	__display_found@cntr,w,c
 29597  002BEE  0D01               	mullw	1
 29598  002BF0  0E00               	movlw	low _display_content
 29599  002BF2  24F3               	addwf	prodl,w,c
 29600  002BF4  6ED9               	movwf	fsr2l,c
 29601  002BF6  0E02               	movlw	high _display_content
 29602  002BF8  20F4               	addwfc	prodh,w,c
 29603  002BFA  6EDA               	movwf	fsr2h,c
 29604  002BFC  0008               	tblrd		*
 29605  002BFE  CFF5 FFDF          	movff	tablat,indf2
 29606  002C02  2A28               	incf	__display_found@cntr,f,c
 29607  002C04                     l1592:
 29608  002C04  5028               	movf	__display_found@cntr,w,c
 29609  002C06  0D01               	mullw	1
 29610  002C08  0ED4               	movlw	low _found_line1
 29611  002C0A  24F3               	addwf	prodl,w,c
 29612  002C0C  6EF6               	movwf	tblptrl,c
 29613  002C0E  0E8D               	movlw	high _found_line1
 29614  002C10  20F4               	addwfc	prodh,w,c
 29615  002C12  6EF7               	movwf	tblptrh,c
 29616  002C14                     	if	1	;There are 3 active tblptr bytes
 29617  002C14  6AF8               	clrf	tblptru,c
 29618  002C16  0E00               	movlw	low (__mediumconst shr (0+16))
 29619  002C18  22F8               	addwfc	tblptru,f,c
 29620  002C1A                     	endif
 29621  002C1A  0008               	tblrd		*
 29622  002C1C  50F5               	movf	tablat,w,c
 29623  002C1E  0900               	iorlw	0
 29624  002C20  A4D8               	btfss	status,2,c
 29625  002C22  D7D9               	goto	l1593
 29626                           
 29627                           ;display.c: 399: cntr = 0;
 29628  002C24  0E00               	movlw	0
 29629  002C26  6E28               	movwf	__display_found@cntr,c
 29630                           
 29631                           ;display.c: 400: while(found_line2[cntr])
 29632  002C28  D017               	goto	l1595
 29633  002C2A                     
 29634                           ;display.c: 401: display_content[1][cntr] = found_line2[cntr++];
 29635  002C2A  5028               	movf	__display_found@cntr,w,c
 29636  002C2C  0D01               	mullw	1
 29637  002C2E  0EE9               	movlw	low _found_line2
 29638  002C30  24F3               	addwf	prodl,w,c
 29639  002C32  6EF6               	movwf	tblptrl,c
 29640  002C34  0E8C               	movlw	high _found_line2
 29641  002C36  20F4               	addwfc	prodh,w,c
 29642  002C38  6EF7               	movwf	tblptrh,c
 29643  002C3A                     	if	1	;There are 3 active tblptr bytes
 29644  002C3A  6AF8               	clrf	tblptru,c
 29645  002C3C  0E00               	movlw	low (__mediumconst shr (0+16))
 29646  002C3E  22F8               	addwfc	tblptru,f,c
 29647  002C40                     	endif
 29648  002C40  5028               	movf	__display_found@cntr,w,c
 29649  002C42  0D01               	mullw	1
 29650  002C44  0E14               	movlw	low (_display_content+20)
 29651  002C46  24F3               	addwf	prodl,w,c
 29652  002C48  6ED9               	movwf	fsr2l,c
 29653  002C4A  0E02               	movlw	high (_display_content+20)
 29654  002C4C  20F4               	addwfc	prodh,w,c
 29655  002C4E  6EDA               	movwf	fsr2h,c
 29656  002C50  0008               	tblrd		*
 29657  002C52  CFF5 FFDF          	movff	tablat,indf2
 29658  002C56  2A28               	incf	__display_found@cntr,f,c
 29659  002C58                     l1595:
 29660  002C58  5028               	movf	__display_found@cntr,w,c
 29661  002C5A  0D01               	mullw	1
 29662  002C5C  0EE9               	movlw	low _found_line2
 29663  002C5E  24F3               	addwf	prodl,w,c
 29664  002C60  6EF6               	movwf	tblptrl,c
 29665  002C62  0E8C               	movlw	high _found_line2
 29666  002C64  20F4               	addwfc	prodh,w,c
 29667  002C66  6EF7               	movwf	tblptrh,c
 29668  002C68                     	if	1	;There are 3 active tblptr bytes
 29669  002C68  6AF8               	clrf	tblptru,c
 29670  002C6A  0E00               	movlw	low (__mediumconst shr (0+16))
 29671  002C6C  22F8               	addwfc	tblptru,f,c
 29672  002C6E                     	endif
 29673  002C6E  0008               	tblrd		*
 29674  002C70  50F5               	movf	tablat,w,c
 29675  002C72  0900               	iorlw	0
 29676  002C74  A4D8               	btfss	status,2,c
 29677  002C76  D7D9               	goto	l1596
 29678                           
 29679                           ;display.c: 403: cntr = 0;
 29680  002C78  0E00               	movlw	0
 29681  002C7A  6E28               	movwf	__display_found@cntr,c
 29682                           
 29683                           ;display.c: 404: while(found_line3[cntr])
 29684  002C7C  D017               	goto	l1598
 29685  002C7E                     
 29686                           ;display.c: 405: display_content[2][cntr] = found_line3[cntr++];
 29687  002C7E  5028               	movf	__display_found@cntr,w,c
 29688  002C80  0D01               	mullw	1
 29689  002C82  0E98               	movlw	low _found_line3
 29690  002C84  24F3               	addwf	prodl,w,c
 29691  002C86  6EF6               	movwf	tblptrl,c
 29692  002C88  0E8E               	movlw	high _found_line3
 29693  002C8A  20F4               	addwfc	prodh,w,c
 29694  002C8C  6EF7               	movwf	tblptrh,c
 29695  002C8E                     	if	1	;There are 3 active tblptr bytes
 29696  002C8E  6AF8               	clrf	tblptru,c
 29697  002C90  0E00               	movlw	low (__mediumconst shr (0+16))
 29698  002C92  22F8               	addwfc	tblptru,f,c
 29699  002C94                     	endif
 29700  002C94  5028               	movf	__display_found@cntr,w,c
 29701  002C96  0D01               	mullw	1
 29702  002C98  0E28               	movlw	low (_display_content+40)
 29703  002C9A  24F3               	addwf	prodl,w,c
 29704  002C9C  6ED9               	movwf	fsr2l,c
 29705  002C9E  0E02               	movlw	high (_display_content+40)
 29706  002CA0  20F4               	addwfc	prodh,w,c
 29707  002CA2  6EDA               	movwf	fsr2h,c
 29708  002CA4  0008               	tblrd		*
 29709  002CA6  CFF5 FFDF          	movff	tablat,indf2
 29710  002CAA  2A28               	incf	__display_found@cntr,f,c
 29711  002CAC                     l1598:
 29712  002CAC  5028               	movf	__display_found@cntr,w,c
 29713  002CAE  0D01               	mullw	1
 29714  002CB0  0E98               	movlw	low _found_line3
 29715  002CB2  24F3               	addwf	prodl,w,c
 29716  002CB4  6EF6               	movwf	tblptrl,c
 29717  002CB6  0E8E               	movlw	high _found_line3
 29718  002CB8  20F4               	addwfc	prodh,w,c
 29719  002CBA  6EF7               	movwf	tblptrh,c
 29720  002CBC                     	if	1	;There are 3 active tblptr bytes
 29721  002CBC  6AF8               	clrf	tblptru,c
 29722  002CBE  0E00               	movlw	low (__mediumconst shr (0+16))
 29723  002CC0  22F8               	addwfc	tblptru,f,c
 29724  002CC2                     	endif
 29725  002CC2  0008               	tblrd		*
 29726  002CC4  50F5               	movf	tablat,w,c
 29727  002CC6  0900               	iorlw	0
 29728  002CC8  A4D8               	btfss	status,2,c
 29729  002CCA  D7D9               	goto	l1599
 29730                           
 29731                           ;display.c: 406: start = cntr;
 29732  002CCC  C028  F027         	movff	__display_found@cntr,__display_found@start
 29733                           
 29734                           ;display.c: 407: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 29735  002CD0  EC5E  F040         	call	_bootloader_get_file_size	;wreg free
 29736  002CD4  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 29737  002CD8  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 29738  002CDC  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 29739  002CE0  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 29740  002CE4  5028               	movf	__display_found@cntr,w,c
 29741  002CE6  0D01               	mullw	1
 29742  002CE8  0E28               	movlw	low (_display_content+40)
 29743  002CEA  24F3               	addwf	prodl,w,c
 29744  002CEC  6E23               	movwf	__display_itoa_u32@text,c
 29745  002CEE  0E02               	movlw	high (_display_content+40)
 29746  002CF0  20F4               	addwfc	prodh,w,c
 29747  002CF2  6E24               	movwf	__display_itoa_u32@text+1,c
 29748  002CF4  EC07  F006         	call	__display_itoa_u32	;wreg free
 29749  002CF8  2627               	addwf	__display_found@start,f,c
 29750                           
 29751                           ;display.c: 408: cntr = 0;
 29752  002CFA  0E00               	movlw	0
 29753  002CFC  6E28               	movwf	__display_found@cntr,c
 29754                           
 29755                           ;display.c: 409: while(found_line3b[cntr])
 29756  002CFE  D01C               	goto	l1601
 29757  002D00                     
 29758                           ;display.c: 410: display_content[2][start+cntr] = found_line3b[cntr++];
 29759  002D00  5028               	movf	__display_found@cntr,w,c
 29760  002D02  0D01               	mullw	1
 29761  002D04  0E91               	movlw	low _found_line3b
 29762  002D06  24F3               	addwf	prodl,w,c
 29763  002D08  6EF6               	movwf	tblptrl,c
 29764  002D0A  0E8E               	movlw	high _found_line3b
 29765  002D0C  20F4               	addwfc	prodh,w,c
 29766  002D0E  6EF7               	movwf	tblptrh,c
 29767  002D10                     	if	1	;There are 3 active tblptr bytes
 29768  002D10  6AF8               	clrf	tblptru,c
 29769  002D12  0E00               	movlw	low (__mediumconst shr (0+16))
 29770  002D14  22F8               	addwfc	tblptru,f,c
 29771  002D16                     	endif
 29772  002D16  5028               	movf	__display_found@cntr,w,c
 29773  002D18  C027  F025         	movff	__display_found@start,??__display_found
 29774  002D1C  6A26               	clrf	(??__display_found+1)& (0+255),c
 29775  002D1E  2625               	addwf	??__display_found,f,c
 29776  002D20  0E00               	movlw	0
 29777  002D22  2226               	addwfc	??__display_found+1,f,c
 29778  002D24  0E28               	movlw	low (_display_content+40)
 29779  002D26  2425               	addwf	??__display_found,w,c
 29780  002D28  6ED9               	movwf	fsr2l,c
 29781  002D2A  0E02               	movlw	high (_display_content+40)
 29782  002D2C  2026               	addwfc	??__display_found+1,w,c
 29783  002D2E  6EDA               	movwf	fsr2h,c
 29784  002D30  0008               	tblrd		*
 29785  002D32  CFF5 FFDF          	movff	tablat,indf2
 29786  002D36  2A28               	incf	__display_found@cntr,f,c
 29787  002D38                     l1601:
 29788  002D38  5028               	movf	__display_found@cntr,w,c
 29789  002D3A  0D01               	mullw	1
 29790  002D3C  0E91               	movlw	low _found_line3b
 29791  002D3E  24F3               	addwf	prodl,w,c
 29792  002D40  6EF6               	movwf	tblptrl,c
 29793  002D42  0E8E               	movlw	high _found_line3b
 29794  002D44  20F4               	addwfc	prodh,w,c
 29795  002D46  6EF7               	movwf	tblptrh,c
 29796  002D48                     	if	1	;There are 3 active tblptr bytes
 29797  002D48  6AF8               	clrf	tblptru,c
 29798  002D4A  0E00               	movlw	low (__mediumconst shr (0+16))
 29799  002D4C  22F8               	addwfc	tblptru,f,c
 29800  002D4E                     	endif
 29801  002D4E  0008               	tblrd		*
 29802  002D50  50F5               	movf	tablat,w,c
 29803  002D52  0900               	iorlw	0
 29804  002D54  A4D8               	btfss	status,2,c
 29805  002D56  D7D4               	goto	l1602
 29806                           
 29807                           ;display.c: 412: cntr = 0;
 29808  002D58  0E00               	movlw	0
 29809  002D5A  6E28               	movwf	__display_found@cntr,c
 29810                           
 29811                           ;display.c: 413: while(found_line4[cntr])
 29812  002D5C  D017               	goto	l1604
 29813  002D5E                     
 29814                           ;display.c: 414: display_content[3][cntr] = found_line4[cntr++];
 29815  002D5E  5028               	movf	__display_found@cntr,w,c
 29816  002D60  0D01               	mullw	1
 29817  002D62  0E20               	movlw	low _found_line4
 29818  002D64  24F3               	addwf	prodl,w,c
 29819  002D66  6EF6               	movwf	tblptrl,c
 29820  002D68  0E8D               	movlw	high _found_line4
 29821  002D6A  20F4               	addwfc	prodh,w,c
 29822  002D6C  6EF7               	movwf	tblptrh,c
 29823  002D6E                     	if	1	;There are 3 active tblptr bytes
 29824  002D6E  6AF8               	clrf	tblptru,c
 29825  002D70  0E00               	movlw	low (__mediumconst shr (0+16))
 29826  002D72  22F8               	addwfc	tblptru,f,c
 29827  002D74                     	endif
 29828  002D74  5028               	movf	__display_found@cntr,w,c
 29829  002D76  0D01               	mullw	1
 29830  002D78  0E3C               	movlw	low (_display_content+60)
 29831  002D7A  24F3               	addwf	prodl,w,c
 29832  002D7C  6ED9               	movwf	fsr2l,c
 29833  002D7E  0E02               	movlw	high (_display_content+60)
 29834  002D80  20F4               	addwfc	prodh,w,c
 29835  002D82  6EDA               	movwf	fsr2h,c
 29836  002D84  0008               	tblrd		*
 29837  002D86  CFF5 FFDF          	movff	tablat,indf2
 29838  002D8A  2A28               	incf	__display_found@cntr,f,c
 29839  002D8C                     l1604:
 29840  002D8C  5028               	movf	__display_found@cntr,w,c
 29841  002D8E  0D01               	mullw	1
 29842  002D90  0E20               	movlw	low _found_line4
 29843  002D92  24F3               	addwf	prodl,w,c
 29844  002D94  6EF6               	movwf	tblptrl,c
 29845  002D96  0E8D               	movlw	high _found_line4
 29846  002D98  20F4               	addwfc	prodh,w,c
 29847  002D9A  6EF7               	movwf	tblptrh,c
 29848  002D9C                     	if	1	;There are 3 active tblptr bytes
 29849  002D9C  6AF8               	clrf	tblptru,c
 29850  002D9E  0E00               	movlw	low (__mediumconst shr (0+16))
 29851  002DA0  22F8               	addwfc	tblptru,f,c
 29852  002DA2                     	endif
 29853  002DA2  0008               	tblrd		*
 29854  002DA4  50F5               	movf	tablat,w,c
 29855  002DA6  0900               	iorlw	0
 29856  002DA8  B4D8               	btfsc	status,2,c
 29857  002DAA  0012               	return	
 29858  002DAC  D7D8               	goto	l1605
 29859  002DAE                     __end_of__display_found:
 29860                           	opt stack 0
 29861                           tosu	equ	0xFFF
 29862                           tosh	equ	0xFFE
 29863                           tosl	equ	0xFFD
 29864                           pclath	equ	0xFFA
 29865                           tblptru	equ	0xFF8
 29866                           tblptrh	equ	0xFF7
 29867                           tblptrl	equ	0xFF6
 29868                           tablat	equ	0xFF5
 29869                           prodh	equ	0xFF4
 29870                           prodl	equ	0xFF3
 29871                           intcon	equ	0xFF2
 29872                           intcon2	equ	0xFF1
 29873                           intcon3	equ	0xFF0
 29874                           indf0	equ	0xFEF
 29875                           postinc0	equ	0xFEE
 29876                           fsr0h	equ	0xFEA
 29877                           fsr0l	equ	0xFE9
 29878                           wreg	equ	0xFE8
 29879                           indf1	equ	0xFE7
 29880                           postdec1	equ	0xFE5
 29881                           plusw1	equ	0xFE3
 29882                           fsr1h	equ	0xFE2
 29883                           fsr1l	equ	0xFE1
 29884                           indf2	equ	0xFDF
 29885                           postinc2	equ	0xFDE
 29886                           postdec2	equ	0xFDD
 29887                           plusw2	equ	0xFDB
 29888                           fsr2h	equ	0xFDA
 29889                           fsr2l	equ	0xFD9
 29890                           status	equ	0xFD8
 29891                           
 29892 ;; *************** function _bootloader_get_file_size *****************
 29893 ;; Defined at:
 29894 ;;		line 457 in file "bootloader.c"
 29895 ;; Parameters:    Size  Location     Type
 29896 ;;		None
 29897 ;; Auto vars:     Size  Location     Type
 29898 ;;		None
 29899 ;; Return value:  Size  Location     Type
 29900 ;;                  4    0[COMRAM] unsigned long 
 29901 ;; Registers used:
 29902 ;;		None
 29903 ;; Tracked objects:
 29904 ;;		On entry : 0/0
 29905 ;;		On exit  : 0/0
 29906 ;;		Unchanged: 0/0
 29907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29908 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29911 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29912 ;;Total ram usage:        4 bytes
 29913 ;; Hardware stack levels used:    1
 29914 ;; This function calls:
 29915 ;;		Nothing
 29916 ;; This function is called by:
 29917 ;;		__display_found
 29918 ;;		__fill_buffer_get_bootloader_details
 29919 ;; This function uses a non-reentrant model
 29920 ;;
 29921                           
 29922                           	psect	text143
 29923  0080BC                     __ptext143:
 29924                           	opt stack 0
 29925  0080BC                     _bootloader_get_file_size:
 29926                           	opt stack 25
 29927                           
 29928                           ;bootloader.c: 459: return hex_file_size;
 29929                           
 29930                           ;incstack = 0
 29931  0080BC  C0CB  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 29932  0080C0  C0CC  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 29933  0080C4  C0CD  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 29934  0080C8  C0CE  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 29935  0080CC  0012               	return		;funcret
 29936  0080CE                     __end_of_bootloader_get_file_size:
 29937                           	opt stack 0
 29938                           tosu	equ	0xFFF
 29939                           tosh	equ	0xFFE
 29940                           tosl	equ	0xFFD
 29941                           pclath	equ	0xFFA
 29942                           tblptru	equ	0xFF8
 29943                           tblptrh	equ	0xFF7
 29944                           tblptrl	equ	0xFF6
 29945                           tablat	equ	0xFF5
 29946                           prodh	equ	0xFF4
 29947                           prodl	equ	0xFF3
 29948                           intcon	equ	0xFF2
 29949                           intcon2	equ	0xFF1
 29950                           intcon3	equ	0xFF0
 29951                           indf0	equ	0xFEF
 29952                           postinc0	equ	0xFEE
 29953                           fsr0h	equ	0xFEA
 29954                           fsr0l	equ	0xFE9
 29955                           wreg	equ	0xFE8
 29956                           indf1	equ	0xFE7
 29957                           postdec1	equ	0xFE5
 29958                           plusw1	equ	0xFE3
 29959                           fsr1h	equ	0xFE2
 29960                           fsr1l	equ	0xFE1
 29961                           indf2	equ	0xFDF
 29962                           postinc2	equ	0xFDE
 29963                           postdec2	equ	0xFDD
 29964                           plusw2	equ	0xFDB
 29965                           fsr2h	equ	0xFDA
 29966                           fsr2l	equ	0xFD9
 29967                           status	equ	0xFD8
 29968                           
 29969 ;; *************** function __display_failed *****************
 29970 ;; Defined at:
 29971 ;;		line 455 in file "display.c"
 29972 ;; Parameters:    Size  Location     Type
 29973 ;;		None
 29974 ;; Auto vars:     Size  Location     Type
 29975 ;;  cntr            1   36[COMRAM] unsigned char 
 29976 ;;  start           1    0        unsigned char 
 29977 ;; Return value:  Size  Location     Type
 29978 ;;                  1    wreg      void 
 29979 ;; Registers used:
 29980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29981 ;; Tracked objects:
 29982 ;;		On entry : 0/0
 29983 ;;		On exit  : 0/0
 29984 ;;		Unchanged: 0/0
 29985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29987 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29989 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29990 ;;Total ram usage:        1 bytes
 29991 ;; Hardware stack levels used:    1
 29992 ;; Hardware stack levels required when called:    5
 29993 ;; This function calls:
 29994 ;;		__display_itoa_u16
 29995 ;;		__display_itoa_u32
 29996 ;;		_bootloader_get_entries
 29997 ;;		_bootloader_get_error
 29998 ;;		_bootloader_get_rec_address
 29999 ;; This function is called by:
 30000 ;;		_display_prepare
 30001 ;; This function uses a non-reentrant model
 30002 ;;
 30003                           
 30004                           	psect	text144
 30005  00129A                     __ptext144:
 30006                           	opt stack 0
 30007  00129A                     __display_failed:
 30008                           	opt stack 21
 30009                           
 30010                           ;display.c: 457: uint8_t cntr;;display.c: 458: uint8_t start;;display.c: 459: cntr = 0;
 30011                           
 30012                           ;incstack = 0
 30013  00129A  0E00               	movlw	0
 30014  00129C  6E25               	movwf	__display_failed@cntr,c
 30015                           
 30016                           ;display.c: 460: while(failed_line1[cntr])
 30017  00129E  D017               	goto	l1637
 30018  0012A0                     
 30019                           ;display.c: 461: display_content[0][cntr] = failed_line1[cntr++];
 30020  0012A0  5025               	movf	__display_failed@cntr,w,c
 30021  0012A2  0D01               	mullw	1
 30022  0012A4  0EA4               	movlw	low _failed_line1
 30023  0012A6  24F3               	addwf	prodl,w,c
 30024  0012A8  6EF6               	movwf	tblptrl,c
 30025  0012AA  0E8D               	movlw	high _failed_line1
 30026  0012AC  20F4               	addwfc	prodh,w,c
 30027  0012AE  6EF7               	movwf	tblptrh,c
 30028  0012B0                     	if	1	;There are 3 active tblptr bytes
 30029  0012B0  6AF8               	clrf	tblptru,c
 30030  0012B2  0E00               	movlw	low (__mediumconst shr (0+16))
 30031  0012B4  22F8               	addwfc	tblptru,f,c
 30032  0012B6                     	endif
 30033  0012B6  5025               	movf	__display_failed@cntr,w,c
 30034  0012B8  0D01               	mullw	1
 30035  0012BA  0E00               	movlw	low _display_content
 30036  0012BC  24F3               	addwf	prodl,w,c
 30037  0012BE  6ED9               	movwf	fsr2l,c
 30038  0012C0  0E02               	movlw	high _display_content
 30039  0012C2  20F4               	addwfc	prodh,w,c
 30040  0012C4  6EDA               	movwf	fsr2h,c
 30041  0012C6  0008               	tblrd		*
 30042  0012C8  CFF5 FFDF          	movff	tablat,indf2
 30043  0012CC  2A25               	incf	__display_failed@cntr,f,c
 30044  0012CE                     l1637:
 30045  0012CE  5025               	movf	__display_failed@cntr,w,c
 30046  0012D0  0D01               	mullw	1
 30047  0012D2  0EA4               	movlw	low _failed_line1
 30048  0012D4  24F3               	addwf	prodl,w,c
 30049  0012D6  6EF6               	movwf	tblptrl,c
 30050  0012D8  0E8D               	movlw	high _failed_line1
 30051  0012DA  20F4               	addwfc	prodh,w,c
 30052  0012DC  6EF7               	movwf	tblptrh,c
 30053  0012DE                     	if	1	;There are 3 active tblptr bytes
 30054  0012DE  6AF8               	clrf	tblptru,c
 30055  0012E0  0E00               	movlw	low (__mediumconst shr (0+16))
 30056  0012E2  22F8               	addwfc	tblptru,f,c
 30057  0012E4                     	endif
 30058  0012E4  0008               	tblrd		*
 30059  0012E6  50F5               	movf	tablat,w,c
 30060  0012E8  0900               	iorlw	0
 30061  0012EA  A4D8               	btfss	status,2,c
 30062  0012EC  D7D9               	goto	l1638
 30063                           
 30064                           ;display.c: 462: cntr = 0;
 30065  0012EE  0E00               	movlw	0
 30066  0012F0  6E25               	movwf	__display_failed@cntr,c
 30067                           
 30068                           ;display.c: 463: while(failed_line2[cntr])
 30069  0012F2  D017               	goto	l1640
 30070  0012F4                     
 30071                           ;display.c: 464: display_content[1][cntr] = failed_line2[cntr++];
 30072  0012F4  5025               	movf	__display_failed@cntr,w,c
 30073  0012F6  0D01               	mullw	1
 30074  0012F8  0E0E               	movlw	low _failed_line2
 30075  0012FA  24F3               	addwf	prodl,w,c
 30076  0012FC  6EF6               	movwf	tblptrl,c
 30077  0012FE  0E8D               	movlw	high _failed_line2
 30078  001300  20F4               	addwfc	prodh,w,c
 30079  001302  6EF7               	movwf	tblptrh,c
 30080  001304                     	if	1	;There are 3 active tblptr bytes
 30081  001304  6AF8               	clrf	tblptru,c
 30082  001306  0E00               	movlw	low (__mediumconst shr (0+16))
 30083  001308  22F8               	addwfc	tblptru,f,c
 30084  00130A                     	endif
 30085  00130A  5025               	movf	__display_failed@cntr,w,c
 30086  00130C  0D01               	mullw	1
 30087  00130E  0E14               	movlw	low (_display_content+20)
 30088  001310  24F3               	addwf	prodl,w,c
 30089  001312  6ED9               	movwf	fsr2l,c
 30090  001314  0E02               	movlw	high (_display_content+20)
 30091  001316  20F4               	addwfc	prodh,w,c
 30092  001318  6EDA               	movwf	fsr2h,c
 30093  00131A  0008               	tblrd		*
 30094  00131C  CFF5 FFDF          	movff	tablat,indf2
 30095  001320  2A25               	incf	__display_failed@cntr,f,c
 30096  001322                     l1640:
 30097  001322  5025               	movf	__display_failed@cntr,w,c
 30098  001324  0D01               	mullw	1
 30099  001326  0E0E               	movlw	low _failed_line2
 30100  001328  24F3               	addwf	prodl,w,c
 30101  00132A  6EF6               	movwf	tblptrl,c
 30102  00132C  0E8D               	movlw	high _failed_line2
 30103  00132E  20F4               	addwfc	prodh,w,c
 30104  001330  6EF7               	movwf	tblptrh,c
 30105  001332                     	if	1	;There are 3 active tblptr bytes
 30106  001332  6AF8               	clrf	tblptru,c
 30107  001334  0E00               	movlw	low (__mediumconst shr (0+16))
 30108  001336  22F8               	addwfc	tblptru,f,c
 30109  001338                     	endif
 30110  001338  0008               	tblrd		*
 30111  00133A  50F5               	movf	tablat,w,c
 30112  00133C  0900               	iorlw	0
 30113  00133E  A4D8               	btfss	status,2,c
 30114  001340  D7D9               	goto	l1641
 30115                           
 30116                           ;display.c: 466: cntr = 0;
 30117  001342  0E00               	movlw	0
 30118  001344  6E25               	movwf	__display_failed@cntr,c
 30119                           
 30120                           ;display.c: 467: switch(bootloader_get_error())
 30121  001346  D0D6               	goto	l1643
 30122  001348                     
 30123                           ;display.c: 471: display_content[2][cntr] = failed_line3_startCode[cntr++];
 30124  001348  5025               	movf	__display_failed@cntr,w,c
 30125  00134A  0D01               	mullw	1
 30126  00134C  0ED6               	movlw	low _failed_line3_startCode
 30127  00134E  24F3               	addwf	prodl,w,c
 30128  001350  6EF6               	movwf	tblptrl,c
 30129  001352  0E8C               	movlw	high _failed_line3_startCode
 30130  001354  20F4               	addwfc	prodh,w,c
 30131  001356  6EF7               	movwf	tblptrh,c
 30132  001358                     	if	1	;There are 3 active tblptr bytes
 30133  001358  6AF8               	clrf	tblptru,c
 30134  00135A  0E00               	movlw	low (__mediumconst shr (0+16))
 30135  00135C  22F8               	addwfc	tblptru,f,c
 30136  00135E                     	endif
 30137  00135E  5025               	movf	__display_failed@cntr,w,c
 30138  001360  0D01               	mullw	1
 30139  001362  0E28               	movlw	low (_display_content+40)
 30140  001364  24F3               	addwf	prodl,w,c
 30141  001366  6ED9               	movwf	fsr2l,c
 30142  001368  0E02               	movlw	high (_display_content+40)
 30143  00136A  20F4               	addwfc	prodh,w,c
 30144  00136C  6EDA               	movwf	fsr2h,c
 30145  00136E  0008               	tblrd		*
 30146  001370  CFF5 FFDF          	movff	tablat,indf2
 30147  001374  2A25               	incf	__display_failed@cntr,f,c
 30148  001376  5025               	movf	__display_failed@cntr,w,c
 30149  001378  0D01               	mullw	1
 30150  00137A  0ED6               	movlw	low _failed_line3_startCode
 30151  00137C  24F3               	addwf	prodl,w,c
 30152  00137E  6EF6               	movwf	tblptrl,c
 30153  001380  0E8C               	movlw	high _failed_line3_startCode
 30154  001382  20F4               	addwfc	prodh,w,c
 30155  001384  6EF7               	movwf	tblptrh,c
 30156  001386                     	if	1	;There are 3 active tblptr bytes
 30157  001386  6AF8               	clrf	tblptru,c
 30158  001388  0E00               	movlw	low (__mediumconst shr (0+16))
 30159  00138A  22F8               	addwfc	tblptru,f,c
 30160  00138C                     	endif
 30161  00138C  0008               	tblrd		*
 30162  00138E  50F5               	movf	tablat,w,c
 30163  001390  0900               	iorlw	0
 30164  001392  B4D8               	btfsc	status,2,c
 30165  001394  D0C0               	goto	l1648
 30166  001396  D7D8               	goto	l1646
 30167  001398                     
 30168                           ;display.c: 476: display_content[2][cntr] = failed_line3_checksum[cntr++];
 30169  001398  5025               	movf	__display_failed@cntr,w,c
 30170  00139A  0D01               	mullw	1
 30171  00139C  0E04               	movlw	low _failed_line3_checksum
 30172  00139E  24F3               	addwf	prodl,w,c
 30173  0013A0  6EF6               	movwf	tblptrl,c
 30174  0013A2  0E8E               	movlw	high _failed_line3_checksum
 30175  0013A4  20F4               	addwfc	prodh,w,c
 30176  0013A6  6EF7               	movwf	tblptrh,c
 30177  0013A8                     	if	1	;There are 3 active tblptr bytes
 30178  0013A8  6AF8               	clrf	tblptru,c
 30179  0013AA  0E00               	movlw	low (__mediumconst shr (0+16))
 30180  0013AC  22F8               	addwfc	tblptru,f,c
 30181  0013AE                     	endif
 30182  0013AE  5025               	movf	__display_failed@cntr,w,c
 30183  0013B0  0D01               	mullw	1
 30184  0013B2  0E28               	movlw	low (_display_content+40)
 30185  0013B4  24F3               	addwf	prodl,w,c
 30186  0013B6  6ED9               	movwf	fsr2l,c
 30187  0013B8  0E02               	movlw	high (_display_content+40)
 30188  0013BA  20F4               	addwfc	prodh,w,c
 30189  0013BC  6EDA               	movwf	fsr2h,c
 30190  0013BE  0008               	tblrd		*
 30191  0013C0  CFF5 FFDF          	movff	tablat,indf2
 30192  0013C4  2A25               	incf	__display_failed@cntr,f,c
 30193  0013C6  5025               	movf	__display_failed@cntr,w,c
 30194  0013C8  0D01               	mullw	1
 30195  0013CA  0E04               	movlw	low _failed_line3_checksum
 30196  0013CC  24F3               	addwf	prodl,w,c
 30197  0013CE  6EF6               	movwf	tblptrl,c
 30198  0013D0  0E8E               	movlw	high _failed_line3_checksum
 30199  0013D2  20F4               	addwfc	prodh,w,c
 30200  0013D4  6EF7               	movwf	tblptrh,c
 30201  0013D6                     	if	1	;There are 3 active tblptr bytes
 30202  0013D6  6AF8               	clrf	tblptru,c
 30203  0013D8  0E00               	movlw	low (__mediumconst shr (0+16))
 30204  0013DA  22F8               	addwfc	tblptru,f,c
 30205  0013DC                     	endif
 30206  0013DC  0008               	tblrd		*
 30207  0013DE  50F5               	movf	tablat,w,c
 30208  0013E0  0900               	iorlw	0
 30209  0013E2  B4D8               	btfsc	status,2,c
 30210  0013E4  D098               	goto	l1648
 30211  0013E6  D7D8               	goto	l1651
 30212  0013E8                     
 30213                           ;display.c: 483: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 30214  0013E8  5025               	movf	__display_failed@cntr,w,c
 30215  0013EA  0D01               	mullw	1
 30216  0013EC  0E13               	movlw	low _failed_line3_noNextRecord
 30217  0013EE  24F3               	addwf	prodl,w,c
 30218  0013F0  6EF6               	movwf	tblptrl,c
 30219  0013F2  0E8E               	movlw	high _failed_line3_noNextRecord
 30220  0013F4  20F4               	addwfc	prodh,w,c
 30221  0013F6  6EF7               	movwf	tblptrh,c
 30222  0013F8                     	if	1	;There are 3 active tblptr bytes
 30223  0013F8  6AF8               	clrf	tblptru,c
 30224  0013FA  0E00               	movlw	low (__mediumconst shr (0+16))
 30225  0013FC  22F8               	addwfc	tblptru,f,c
 30226  0013FE                     	endif
 30227  0013FE  5025               	movf	__display_failed@cntr,w,c
 30228  001400  0D01               	mullw	1
 30229  001402  0E28               	movlw	low (_display_content+40)
 30230  001404  24F3               	addwf	prodl,w,c
 30231  001406  6ED9               	movwf	fsr2l,c
 30232  001408  0E02               	movlw	high (_display_content+40)
 30233  00140A  20F4               	addwfc	prodh,w,c
 30234  00140C  6EDA               	movwf	fsr2h,c
 30235  00140E  0008               	tblrd		*
 30236  001410  CFF5 FFDF          	movff	tablat,indf2
 30237  001414  2A25               	incf	__display_failed@cntr,f,c
 30238  001416  5025               	movf	__display_failed@cntr,w,c
 30239  001418  0D01               	mullw	1
 30240  00141A  0E13               	movlw	low _failed_line3_noNextRecord
 30241  00141C  24F3               	addwf	prodl,w,c
 30242  00141E  6EF6               	movwf	tblptrl,c
 30243  001420  0E8E               	movlw	high _failed_line3_noNextRecord
 30244  001422  20F4               	addwfc	prodh,w,c
 30245  001424  6EF7               	movwf	tblptrh,c
 30246  001426                     	if	1	;There are 3 active tblptr bytes
 30247  001426  6AF8               	clrf	tblptru,c
 30248  001428  0E00               	movlw	low (__mediumconst shr (0+16))
 30249  00142A  22F8               	addwfc	tblptru,f,c
 30250  00142C                     	endif
 30251  00142C  0008               	tblrd		*
 30252  00142E  50F5               	movf	tablat,w,c
 30253  001430  0900               	iorlw	0
 30254  001432  B4D8               	btfsc	status,2,c
 30255  001434  D070               	goto	l1648
 30256  001436  D7D8               	goto	l1655
 30257  001438                     
 30258                           ;display.c: 488: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 30259  001438  5025               	movf	__display_failed@cntr,w,c
 30260  00143A  0D01               	mullw	1
 30261  00143C  0E31               	movlw	low _failed_line3_dataTooLong
 30262  00143E  24F3               	addwf	prodl,w,c
 30263  001440  6EF6               	movwf	tblptrl,c
 30264  001442  0E8E               	movlw	high _failed_line3_dataTooLong
 30265  001444  20F4               	addwfc	prodh,w,c
 30266  001446  6EF7               	movwf	tblptrh,c
 30267  001448                     	if	1	;There are 3 active tblptr bytes
 30268  001448  6AF8               	clrf	tblptru,c
 30269  00144A  0E00               	movlw	low (__mediumconst shr (0+16))
 30270  00144C  22F8               	addwfc	tblptru,f,c
 30271  00144E                     	endif
 30272  00144E  5025               	movf	__display_failed@cntr,w,c
 30273  001450  0D01               	mullw	1
 30274  001452  0E28               	movlw	low (_display_content+40)
 30275  001454  24F3               	addwf	prodl,w,c
 30276  001456  6ED9               	movwf	fsr2l,c
 30277  001458  0E02               	movlw	high (_display_content+40)
 30278  00145A  20F4               	addwfc	prodh,w,c
 30279  00145C  6EDA               	movwf	fsr2h,c
 30280  00145E  0008               	tblrd		*
 30281  001460  CFF5 FFDF          	movff	tablat,indf2
 30282  001464  2A25               	incf	__display_failed@cntr,f,c
 30283  001466  5025               	movf	__display_failed@cntr,w,c
 30284  001468  0D01               	mullw	1
 30285  00146A  0E31               	movlw	low _failed_line3_dataTooLong
 30286  00146C  24F3               	addwf	prodl,w,c
 30287  00146E  6EF6               	movwf	tblptrl,c
 30288  001470  0E8E               	movlw	high _failed_line3_dataTooLong
 30289  001472  20F4               	addwfc	prodh,w,c
 30290  001474  6EF7               	movwf	tblptrh,c
 30291  001476                     	if	1	;There are 3 active tblptr bytes
 30292  001476  6AF8               	clrf	tblptru,c
 30293  001478  0E00               	movlw	low (__mediumconst shr (0+16))
 30294  00147A  22F8               	addwfc	tblptru,f,c
 30295  00147C                     	endif
 30296  00147C  0008               	tblrd		*
 30297  00147E  50F5               	movf	tablat,w,c
 30298  001480  0900               	iorlw	0
 30299  001482  B4D8               	btfsc	status,2,c
 30300  001484  D048               	goto	l1648
 30301  001486  D7D8               	goto	l1659
 30302  001488                     
 30303                           ;display.c: 493: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 30304  001488  5025               	movf	__display_failed@cntr,w,c
 30305  00148A  0D01               	mullw	1
 30306  00148C  0EAE               	movlw	low _failed_line3_addressRange
 30307  00148E  24F3               	addwf	prodl,w,c
 30308  001490  6EF6               	movwf	tblptrl,c
 30309  001492  0E8C               	movlw	high _failed_line3_addressRange
 30310  001494  20F4               	addwfc	prodh,w,c
 30311  001496  6EF7               	movwf	tblptrh,c
 30312  001498                     	if	1	;There are 3 active tblptr bytes
 30313  001498  6AF8               	clrf	tblptru,c
 30314  00149A  0E00               	movlw	low (__mediumconst shr (0+16))
 30315  00149C  22F8               	addwfc	tblptru,f,c
 30316  00149E                     	endif
 30317  00149E  5025               	movf	__display_failed@cntr,w,c
 30318  0014A0  0D01               	mullw	1
 30319  0014A2  0E28               	movlw	low (_display_content+40)
 30320  0014A4  24F3               	addwf	prodl,w,c
 30321  0014A6  6ED9               	movwf	fsr2l,c
 30322  0014A8  0E02               	movlw	high (_display_content+40)
 30323  0014AA  20F4               	addwfc	prodh,w,c
 30324  0014AC  6EDA               	movwf	fsr2h,c
 30325  0014AE  0008               	tblrd		*
 30326  0014B0  CFF5 FFDF          	movff	tablat,indf2
 30327  0014B4  2A25               	incf	__display_failed@cntr,f,c
 30328  0014B6  5025               	movf	__display_failed@cntr,w,c
 30329  0014B8  0D01               	mullw	1
 30330  0014BA  0EAE               	movlw	low _failed_line3_addressRange
 30331  0014BC  24F3               	addwf	prodl,w,c
 30332  0014BE  6EF6               	movwf	tblptrl,c
 30333  0014C0  0E8C               	movlw	high _failed_line3_addressRange
 30334  0014C2  20F4               	addwfc	prodh,w,c
 30335  0014C4  6EF7               	movwf	tblptrh,c
 30336  0014C6                     	if	1	;There are 3 active tblptr bytes
 30337  0014C6  6AF8               	clrf	tblptru,c
 30338  0014C8  0E00               	movlw	low (__mediumconst shr (0+16))
 30339  0014CA  22F8               	addwfc	tblptru,f,c
 30340  0014CC                     	endif
 30341  0014CC  0008               	tblrd		*
 30342  0014CE  50F5               	movf	tablat,w,c
 30343  0014D0  0900               	iorlw	0
 30344  0014D2  A4D8               	btfss	status,2,c
 30345  0014D4  D7D9               	goto	l1663
 30346                           
 30347                           ;display.c: 494: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 30348  0014D6  ECCB  F040         	call	_bootloader_get_rec_address	;wreg free
 30349  0014DA  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 30350  0014DE  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 30351  0014E2  6A21               	clrf	__display_itoa_u32@value+2,c
 30352  0014E4  6A22               	clrf	__display_itoa_u32@value+3,c
 30353  0014E6  0E4A               	movlw	low (_display_content+74)
 30354  0014E8  6E23               	movwf	__display_itoa_u32@text,c
 30355  0014EA  0E02               	movlw	high (_display_content+74)
 30356  0014EC  6E24               	movwf	__display_itoa_u32@text+1,c
 30357  0014EE  EC07  F006         	call	__display_itoa_u32	;wreg free
 30358                           
 30359                           ;display.c: 497: }
 30360                           
 30361                           ;display.c: 495: break;
 30362  0014F2  D011               	goto	l1648
 30363  0014F4                     l1643:
 30364  0014F4  EC04  F041         	call	_bootloader_get_error	;wreg free
 30365                           
 30366                           ; Switch size 1, requested type "space"
 30367                           ; Number of cases is 5, Range of values is 11 to 15
 30368                           ; switch strategies available:
 30369                           ; Name         Instructions Cycles
 30370                           ; simple_byte           16     9 (average)
 30371                           ;	Chosen strategy is simple_byte
 30372  0014F8  0A0B               	xorlw	11	; case 11
 30373  0014FA  B4D8               	btfsc	status,2,c
 30374  0014FC  D7DC               	goto	l1662
 30375  0014FE  0A07               	xorlw	7	; case 12
 30376  001500  B4D8               	btfsc	status,2,c
 30377  001502  D7B1               	goto	l1658
 30378  001504  0A01               	xorlw	1	; case 13
 30379  001506  B4D8               	btfsc	status,2,c
 30380  001508  D786               	goto	l1654
 30381  00150A  0A03               	xorlw	3	; case 14
 30382  00150C  B4D8               	btfsc	status,2,c
 30383  00150E  D75B               	goto	l1650
 30384  001510  0A01               	xorlw	1	; case 15
 30385  001512  B4D8               	btfsc	status,2,c
 30386  001514  D730               	goto	l1645
 30387  001516                     l1648:
 30388                           
 30389                           ;display.c: 499: cntr = 0;
 30390  001516  0E00               	movlw	0
 30391  001518  6E25               	movwf	__display_failed@cntr,c
 30392                           
 30393                           ;display.c: 500: while(failed_line4[cntr])
 30394  00151A  D017               	goto	l1665
 30395  00151C                     
 30396                           ;display.c: 501: display_content[3][cntr] = failed_line4[cntr++];
 30397  00151C  5025               	movf	__display_failed@cntr,w,c
 30398  00151E  0D01               	mullw	1
 30399  001520  0E6B               	movlw	low _failed_line4
 30400  001522  24F3               	addwf	prodl,w,c
 30401  001524  6EF6               	movwf	tblptrl,c
 30402  001526  0E8E               	movlw	high _failed_line4
 30403  001528  20F4               	addwfc	prodh,w,c
 30404  00152A  6EF7               	movwf	tblptrh,c
 30405  00152C                     	if	1	;There are 3 active tblptr bytes
 30406  00152C  6AF8               	clrf	tblptru,c
 30407  00152E  0E00               	movlw	low (__mediumconst shr (0+16))
 30408  001530  22F8               	addwfc	tblptru,f,c
 30409  001532                     	endif
 30410  001532  5025               	movf	__display_failed@cntr,w,c
 30411  001534  0D01               	mullw	1
 30412  001536  0E3C               	movlw	low (_display_content+60)
 30413  001538  24F3               	addwf	prodl,w,c
 30414  00153A  6ED9               	movwf	fsr2l,c
 30415  00153C  0E02               	movlw	high (_display_content+60)
 30416  00153E  20F4               	addwfc	prodh,w,c
 30417  001540  6EDA               	movwf	fsr2h,c
 30418  001542  0008               	tblrd		*
 30419  001544  CFF5 FFDF          	movff	tablat,indf2
 30420  001548  2A25               	incf	__display_failed@cntr,f,c
 30421  00154A                     l1665:
 30422  00154A  5025               	movf	__display_failed@cntr,w,c
 30423  00154C  0D01               	mullw	1
 30424  00154E  0E6B               	movlw	low _failed_line4
 30425  001550  24F3               	addwf	prodl,w,c
 30426  001552  6EF6               	movwf	tblptrl,c
 30427  001554  0E8E               	movlw	high _failed_line4
 30428  001556  20F4               	addwfc	prodh,w,c
 30429  001558  6EF7               	movwf	tblptrh,c
 30430  00155A                     	if	1	;There are 3 active tblptr bytes
 30431  00155A  6AF8               	clrf	tblptru,c
 30432  00155C  0E00               	movlw	low (__mediumconst shr (0+16))
 30433  00155E  22F8               	addwfc	tblptru,f,c
 30434  001560                     	endif
 30435  001560  0008               	tblrd		*
 30436  001562  50F5               	movf	tablat,w,c
 30437  001564  0900               	iorlw	0
 30438  001566  A4D8               	btfss	status,2,c
 30439  001568  D7D9               	goto	l1666
 30440                           
 30441                           ;display.c: 502: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 30442  00156A  ECD0  F040         	call	_bootloader_get_entries	;wreg free
 30443  00156E  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 30444  001572  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 30445  001576  6A1B               	clrf	__display_itoa_u16@value+2,c
 30446  001578  6A1C               	clrf	__display_itoa_u16@value+3,c
 30447  00157A  5025               	movf	__display_failed@cntr,w,c
 30448  00157C  0D01               	mullw	1
 30449  00157E  0E3C               	movlw	low (_display_content+60)
 30450  001580  24F3               	addwf	prodl,w,c
 30451  001582  6E1D               	movwf	__display_itoa_u16@text,c
 30452  001584  0E02               	movlw	high (_display_content+60)
 30453  001586  20F4               	addwfc	prodh,w,c
 30454  001588  6E1E               	movwf	__display_itoa_u16@text+1,c
 30455  00158A  EC79  F02A         	call	__display_itoa_u16	;wreg free
 30456  00158E  0012               	return		;funcret
 30457  001590                     __end_of__display_failed:
 30458                           	opt stack 0
 30459                           tosu	equ	0xFFF
 30460                           tosh	equ	0xFFE
 30461                           tosl	equ	0xFFD
 30462                           pclath	equ	0xFFA
 30463                           tblptru	equ	0xFF8
 30464                           tblptrh	equ	0xFF7
 30465                           tblptrl	equ	0xFF6
 30466                           tablat	equ	0xFF5
 30467                           prodh	equ	0xFF4
 30468                           prodl	equ	0xFF3
 30469                           intcon	equ	0xFF2
 30470                           intcon2	equ	0xFF1
 30471                           intcon3	equ	0xFF0
 30472                           indf0	equ	0xFEF
 30473                           postinc0	equ	0xFEE
 30474                           fsr0h	equ	0xFEA
 30475                           fsr0l	equ	0xFE9
 30476                           wreg	equ	0xFE8
 30477                           indf1	equ	0xFE7
 30478                           postdec1	equ	0xFE5
 30479                           plusw1	equ	0xFE3
 30480                           fsr1h	equ	0xFE2
 30481                           fsr1l	equ	0xFE1
 30482                           indf2	equ	0xFDF
 30483                           postinc2	equ	0xFDE
 30484                           postdec2	equ	0xFDD
 30485                           plusw2	equ	0xFDB
 30486                           fsr2h	equ	0xFDA
 30487                           fsr2l	equ	0xFD9
 30488                           status	equ	0xFD8
 30489                           
 30490 ;; *************** function _bootloader_get_rec_address *****************
 30491 ;; Defined at:
 30492 ;;		line 482 in file "bootloader.c"
 30493 ;; Parameters:    Size  Location     Type
 30494 ;;		None
 30495 ;; Auto vars:     Size  Location     Type
 30496 ;;		None
 30497 ;; Return value:  Size  Location     Type
 30498 ;;                  2    0[COMRAM] unsigned int 
 30499 ;; Registers used:
 30500 ;;		None
 30501 ;; Tracked objects:
 30502 ;;		On entry : 0/0
 30503 ;;		On exit  : 0/0
 30504 ;;		Unchanged: 0/0
 30505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30510 ;;Total ram usage:        2 bytes
 30511 ;; Hardware stack levels used:    1
 30512 ;; This function calls:
 30513 ;;		Nothing
 30514 ;; This function is called by:
 30515 ;;		__display_failed
 30516 ;;		__fill_buffer_get_bootloader_details
 30517 ;; This function uses a non-reentrant model
 30518 ;;
 30519                           
 30520                           	psect	text145
 30521  008196                     __ptext145:
 30522                           	opt stack 0
 30523  008196                     _bootloader_get_rec_address:
 30524                           	opt stack 25
 30525                           
 30526                           ;bootloader.c: 485: return hex_file_entry.address;
 30527                           
 30528                           ;incstack = 0
 30529  008196  C1BC  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 30530  00819A  C1BD  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 30531  00819E  0012               	return		;funcret
 30532  0081A0                     __end_of_bootloader_get_rec_address:
 30533                           	opt stack 0
 30534                           tosu	equ	0xFFF
 30535                           tosh	equ	0xFFE
 30536                           tosl	equ	0xFFD
 30537                           pclath	equ	0xFFA
 30538                           tblptru	equ	0xFF8
 30539                           tblptrh	equ	0xFF7
 30540                           tblptrl	equ	0xFF6
 30541                           tablat	equ	0xFF5
 30542                           prodh	equ	0xFF4
 30543                           prodl	equ	0xFF3
 30544                           intcon	equ	0xFF2
 30545                           intcon2	equ	0xFF1
 30546                           intcon3	equ	0xFF0
 30547                           indf0	equ	0xFEF
 30548                           postinc0	equ	0xFEE
 30549                           fsr0h	equ	0xFEA
 30550                           fsr0l	equ	0xFE9
 30551                           wreg	equ	0xFE8
 30552                           indf1	equ	0xFE7
 30553                           postdec1	equ	0xFE5
 30554                           plusw1	equ	0xFE3
 30555                           fsr1h	equ	0xFE2
 30556                           fsr1l	equ	0xFE1
 30557                           indf2	equ	0xFDF
 30558                           postinc2	equ	0xFDE
 30559                           postdec2	equ	0xFDD
 30560                           plusw2	equ	0xFDB
 30561                           fsr2h	equ	0xFDA
 30562                           fsr2l	equ	0xFD9
 30563                           status	equ	0xFD8
 30564                           
 30565 ;; *************** function _bootloader_get_error *****************
 30566 ;; Defined at:
 30567 ;;		line 472 in file "bootloader.c"
 30568 ;; Parameters:    Size  Location     Type
 30569 ;;		None
 30570 ;; Auto vars:     Size  Location     Type
 30571 ;;		None
 30572 ;; Return value:  Size  Location     Type
 30573 ;;                  1    wreg      enum E7014
 30574 ;; Registers used:
 30575 ;;		wreg, status,2
 30576 ;; Tracked objects:
 30577 ;;		On entry : 0/0
 30578 ;;		On exit  : 0/0
 30579 ;;		Unchanged: 0/0
 30580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30585 ;;Total ram usage:        0 bytes
 30586 ;; Hardware stack levels used:    1
 30587 ;; This function calls:
 30588 ;;		Nothing
 30589 ;; This function is called by:
 30590 ;;		__display_failed
 30591 ;;		__fill_buffer_get_bootloader_details
 30592 ;; This function uses a non-reentrant model
 30593 ;;
 30594                           
 30595                           	psect	text146
 30596  008208                     __ptext146:
 30597                           	opt stack 0
 30598  008208                     _bootloader_get_error:
 30599                           	opt stack 25
 30600                           
 30601                           ;bootloader.c: 474: return last_error;
 30602                           
 30603                           ;incstack = 0
 30604  008208  0100               	movlb	0	; () banked
 30605  00820A  51DE               	movf	_last_error& (0+255),w,b
 30606  00820C  0012               	return	
 30607  00820E                     __end_of_bootloader_get_error:
 30608                           	opt stack 0
 30609                           tosu	equ	0xFFF
 30610                           tosh	equ	0xFFE
 30611                           tosl	equ	0xFFD
 30612                           pclath	equ	0xFFA
 30613                           tblptru	equ	0xFF8
 30614                           tblptrh	equ	0xFF7
 30615                           tblptrl	equ	0xFF6
 30616                           tablat	equ	0xFF5
 30617                           prodh	equ	0xFF4
 30618                           prodl	equ	0xFF3
 30619                           intcon	equ	0xFF2
 30620                           intcon2	equ	0xFF1
 30621                           intcon3	equ	0xFF0
 30622                           indf0	equ	0xFEF
 30623                           postinc0	equ	0xFEE
 30624                           fsr0h	equ	0xFEA
 30625                           fsr0l	equ	0xFE9
 30626                           wreg	equ	0xFE8
 30627                           indf1	equ	0xFE7
 30628                           postdec1	equ	0xFE5
 30629                           plusw1	equ	0xFE3
 30630                           fsr1h	equ	0xFE2
 30631                           fsr1l	equ	0xFE1
 30632                           indf2	equ	0xFDF
 30633                           postinc2	equ	0xFDE
 30634                           postdec2	equ	0xFDD
 30635                           plusw2	equ	0xFDB
 30636                           fsr2h	equ	0xFDA
 30637                           fsr2l	equ	0xFD9
 30638                           status	equ	0xFD8
 30639                           
 30640 ;; *************** function _bootloader_get_entries *****************
 30641 ;; Defined at:
 30642 ;;		line 462 in file "bootloader.c"
 30643 ;; Parameters:    Size  Location     Type
 30644 ;;		None
 30645 ;; Auto vars:     Size  Location     Type
 30646 ;;		None
 30647 ;; Return value:  Size  Location     Type
 30648 ;;                  2    0[COMRAM] unsigned int 
 30649 ;; Registers used:
 30650 ;;		None
 30651 ;; Tracked objects:
 30652 ;;		On entry : 0/0
 30653 ;;		On exit  : 0/0
 30654 ;;		Unchanged: 0/0
 30655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30660 ;;Total ram usage:        2 bytes
 30661 ;; Hardware stack levels used:    1
 30662 ;; This function calls:
 30663 ;;		Nothing
 30664 ;; This function is called by:
 30665 ;;		__display_verify
 30666 ;;		__display_failed
 30667 ;;		__display_programming
 30668 ;;		__fill_buffer_get_bootloader_details
 30669 ;; This function uses a non-reentrant model
 30670 ;;
 30671                           
 30672                           	psect	text147
 30673  0081A0                     __ptext147:
 30674                           	opt stack 0
 30675  0081A0                     _bootloader_get_entries:
 30676                           	opt stack 25
 30677                           
 30678                           ;bootloader.c: 464: return hex_file_entries;
 30679                           
 30680                           ; BSR set to: 0
 30681                           ;incstack = 0
 30682  0081A0  C174  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 30683  0081A4  C175  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 30684  0081A8  0012               	return		;funcret
 30685  0081AA                     __end_of_bootloader_get_entries:
 30686                           	opt stack 0
 30687                           tosu	equ	0xFFF
 30688                           tosh	equ	0xFFE
 30689                           tosl	equ	0xFFD
 30690                           pclath	equ	0xFFA
 30691                           tblptru	equ	0xFF8
 30692                           tblptrh	equ	0xFF7
 30693                           tblptrl	equ	0xFF6
 30694                           tablat	equ	0xFF5
 30695                           prodh	equ	0xFF4
 30696                           prodl	equ	0xFF3
 30697                           intcon	equ	0xFF2
 30698                           intcon2	equ	0xFF1
 30699                           intcon3	equ	0xFF0
 30700                           indf0	equ	0xFEF
 30701                           postinc0	equ	0xFEE
 30702                           fsr0h	equ	0xFEA
 30703                           fsr0l	equ	0xFE9
 30704                           wreg	equ	0xFE8
 30705                           indf1	equ	0xFE7
 30706                           postdec1	equ	0xFE5
 30707                           plusw1	equ	0xFE3
 30708                           fsr1h	equ	0xFE2
 30709                           fsr1l	equ	0xFE1
 30710                           indf2	equ	0xFDF
 30711                           postinc2	equ	0xFDE
 30712                           postdec2	equ	0xFDD
 30713                           plusw2	equ	0xFDB
 30714                           fsr2h	equ	0xFDA
 30715                           fsr2l	equ	0xFD9
 30716                           status	equ	0xFD8
 30717                           
 30718 ;; *************** function __display_itoa_u32 *****************
 30719 ;; Defined at:
 30720 ;;		line 172 in file "display.c"
 30721 ;; Parameters:    Size  Location     Type
 30722 ;;  value           4   30[COMRAM] unsigned long 
 30723 ;;  text            2   34[COMRAM] PTR unsigned char 
 30724 ;;		 -> display_content(80), 
 30725 ;; Auto vars:     Size  Location     Type
 30726 ;;		None
 30727 ;; Return value:  Size  Location     Type
 30728 ;;                  1    wreg      unsigned char 
 30729 ;; Registers used:
 30730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30731 ;; Tracked objects:
 30732 ;;		On entry : 0/0
 30733 ;;		On exit  : 0/0
 30734 ;;		Unchanged: 0/0
 30735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30736 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30739 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30740 ;;Total ram usage:        6 bytes
 30741 ;; Hardware stack levels used:    1
 30742 ;; Hardware stack levels required when called:    4
 30743 ;; This function calls:
 30744 ;;		___lldiv
 30745 ;;		___llmod
 30746 ;;		__display_itoa_u16
 30747 ;;		_itoa
 30748 ;; This function is called by:
 30749 ;;		__display_start
 30750 ;;		__display_found
 30751 ;;		__display_failed
 30752 ;; This function uses a non-reentrant model
 30753 ;;
 30754                           
 30755                           	psect	text148
 30756  000C0E                     __ptext148:
 30757                           	opt stack 0
 30758  000C0E                     __display_itoa_u32:
 30759                           	opt stack 21
 30760                           
 30761                           ;display.c: 175: if(value<=0x7FFF)
 30762                           
 30763                           ;incstack = 0
 30764  000C0E  5022               	movf	__display_itoa_u32@value+3,w,c
 30765  000C10  1021               	iorwf	__display_itoa_u32@value+2,w,c
 30766  000C12  E111               	bnz	l10471
 30767  000C14  0E80               	movlw	128
 30768  000C16  5C20               	subwf	__display_itoa_u32@value+1,w,c
 30769  000C18  B0D8               	btfsc	status,0,c
 30770  000C1A  D00D               	goto	l1508
 30771                           
 30772                           ;display.c: 176: {;display.c: 177: return _display_itoa_u16((uint16_t) value, text);
 30773  000C1C  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 30774  000C20  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 30775  000C24  6A1B               	clrf	__display_itoa_u16@value+2,c
 30776  000C26  6A1C               	clrf	__display_itoa_u16@value+3,c
 30777  000C28  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 30778  000C2C  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 30779  000C30  EC79  F02A         	call	__display_itoa_u16	;wreg free
 30780  000C34  0012               	return	
 30781  000C36                     l1508:
 30782  000C36                     l10471:
 30783                           
 30784                           ;display.c: 178: };display.c: 181: if(value>100000000)
 30785  000C36  041F               	decf	__display_itoa_u32@value,w,c
 30786  000C38  0EE1               	movlw	225
 30787  000C3A  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30788  000C3C  0EF5               	movlw	245
 30789  000C3E  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30790  000C40  0E05               	movlw	5
 30791  000C42  5822               	subwfb	__display_itoa_u32@value+3,w,c
 30792  000C44  A0D8               	btfss	status,0,c
 30793  000C46  D04C               	goto	l1510
 30794                           
 30795                           ;display.c: 182: {;display.c: 183: itoa(text, (uint16_t)(value/10000), 10);
 30796  000C48  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30797  000C4C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30798  000C50  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30799  000C54  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30800  000C58  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30801  000C5C  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30802  000C60  0E10               	movlw	16
 30803  000C62  6E05               	movwf	___lldiv@divisor,c
 30804  000C64  0E27               	movlw	39
 30805  000C66  6E06               	movwf	___lldiv@divisor+1,c
 30806  000C68  0E00               	movlw	0
 30807  000C6A  6E07               	movwf	___lldiv@divisor+2,c
 30808  000C6C  0E00               	movlw	0
 30809  000C6E  6E08               	movwf	___lldiv@divisor+3,c
 30810  000C70  ECFC  F032         	call	___lldiv	;wreg free
 30811  000C74  C001  F013         	movff	?___lldiv,itoa@val
 30812  000C78  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30813  000C7C  0E00               	movlw	0
 30814  000C7E  6E16               	movwf	itoa@base+1,c
 30815  000C80  0E0A               	movlw	10
 30816  000C82  6E15               	movwf	itoa@base,c
 30817  000C84  EC44  F03C         	call	_itoa	;wreg free
 30818                           
 30819                           ;display.c: 184: itoa(text+5, (uint16_t)(value%10000), 10);
 30820  000C88  0E05               	movlw	5
 30821  000C8A  2423               	addwf	__display_itoa_u32@text,w,c
 30822  000C8C  6E11               	movwf	itoa@buf,c
 30823  000C8E  0E00               	movlw	0
 30824  000C90  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30825  000C92  6E12               	movwf	itoa@buf+1,c
 30826  000C94  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30827  000C98  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30828  000C9C  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30829  000CA0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30830  000CA4  0E10               	movlw	16
 30831  000CA6  6E05               	movwf	___llmod@divisor,c
 30832  000CA8  0E27               	movlw	39
 30833  000CAA  6E06               	movwf	___llmod@divisor+1,c
 30834  000CAC  0E00               	movlw	0
 30835  000CAE  6E07               	movwf	___llmod@divisor+2,c
 30836  000CB0  0E00               	movlw	0
 30837  000CB2  6E08               	movwf	___llmod@divisor+3,c
 30838  000CB4  EC0B  F037         	call	___llmod	;wreg free
 30839  000CB8  C001  F013         	movff	?___llmod,itoa@val
 30840  000CBC  C002  F014         	movff	?___llmod+1,itoa@val+1
 30841  000CC0  0E00               	movlw	0
 30842  000CC2  6E16               	movwf	itoa@base+1,c
 30843  000CC4  0E0A               	movlw	10
 30844  000CC6  6E15               	movwf	itoa@base,c
 30845  000CC8  EC44  F03C         	call	_itoa	;wreg free
 30846                           
 30847                           ;display.c: 185: *(text+9) = ' ';
 30848  000CCC  EE20 F009          	lfsr	2,9
 30849  000CD0  5023               	movf	__display_itoa_u32@text,w,c
 30850  000CD2  26D9               	addwf	fsr2l,f,c
 30851  000CD4  5024               	movf	__display_itoa_u32@text+1,w,c
 30852  000CD6  22DA               	addwfc	fsr2h,f,c
 30853  000CD8  0E20               	movlw	32
 30854  000CDA  6EDF               	movwf	indf2,c
 30855                           
 30856                           ;display.c: 186: return 9;
 30857  000CDC  0E09               	movlw	9
 30858                           
 30859                           ;display.c: 187: }
 30860  000CDE  0012               	return	
 30861  000CE0                     l1510:
 30862                           
 30863                           ;display.c: 188: else if(value>10000000)
 30864  000CE0  5022               	movf	__display_itoa_u32@value+3,w,c
 30865  000CE2  E108               	bnz	u7240
 30866  000CE4  0E81               	movlw	129
 30867  000CE6  5C1F               	subwf	__display_itoa_u32@value,w,c
 30868  000CE8  0E96               	movlw	150
 30869  000CEA  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30870  000CEC  0E98               	movlw	152
 30871  000CEE  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30872  000CF0  A0D8               	btfss	status,0,c
 30873  000CF2  D04C               	goto	l1512
 30874  000CF4                     u7240:
 30875                           
 30876                           ;display.c: 189: {;display.c: 190: itoa(text, (uint16_t)(value/10000), 10);
 30877  000CF4  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30878  000CF8  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30879  000CFC  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30880  000D00  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30881  000D04  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30882  000D08  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30883  000D0C  0E10               	movlw	16
 30884  000D0E  6E05               	movwf	___lldiv@divisor,c
 30885  000D10  0E27               	movlw	39
 30886  000D12  6E06               	movwf	___lldiv@divisor+1,c
 30887  000D14  0E00               	movlw	0
 30888  000D16  6E07               	movwf	___lldiv@divisor+2,c
 30889  000D18  0E00               	movlw	0
 30890  000D1A  6E08               	movwf	___lldiv@divisor+3,c
 30891  000D1C  ECFC  F032         	call	___lldiv	;wreg free
 30892  000D20  C001  F013         	movff	?___lldiv,itoa@val
 30893  000D24  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30894  000D28  0E00               	movlw	0
 30895  000D2A  6E16               	movwf	itoa@base+1,c
 30896  000D2C  0E0A               	movlw	10
 30897  000D2E  6E15               	movwf	itoa@base,c
 30898  000D30  EC44  F03C         	call	_itoa	;wreg free
 30899                           
 30900                           ;display.c: 191: itoa(text+4, (uint16_t)(value%10000), 10);
 30901  000D34  0E04               	movlw	4
 30902  000D36  2423               	addwf	__display_itoa_u32@text,w,c
 30903  000D38  6E11               	movwf	itoa@buf,c
 30904  000D3A  0E00               	movlw	0
 30905  000D3C  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30906  000D3E  6E12               	movwf	itoa@buf+1,c
 30907  000D40  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30908  000D44  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30909  000D48  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30910  000D4C  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30911  000D50  0E10               	movlw	16
 30912  000D52  6E05               	movwf	___llmod@divisor,c
 30913  000D54  0E27               	movlw	39
 30914  000D56  6E06               	movwf	___llmod@divisor+1,c
 30915  000D58  0E00               	movlw	0
 30916  000D5A  6E07               	movwf	___llmod@divisor+2,c
 30917  000D5C  0E00               	movlw	0
 30918  000D5E  6E08               	movwf	___llmod@divisor+3,c
 30919  000D60  EC0B  F037         	call	___llmod	;wreg free
 30920  000D64  C001  F013         	movff	?___llmod,itoa@val
 30921  000D68  C002  F014         	movff	?___llmod+1,itoa@val+1
 30922  000D6C  0E00               	movlw	0
 30923  000D6E  6E16               	movwf	itoa@base+1,c
 30924  000D70  0E0A               	movlw	10
 30925  000D72  6E15               	movwf	itoa@base,c
 30926  000D74  EC44  F03C         	call	_itoa	;wreg free
 30927                           
 30928                           ;display.c: 192: *(text+8) = ' ';
 30929  000D78  EE20 F008          	lfsr	2,8
 30930  000D7C  5023               	movf	__display_itoa_u32@text,w,c
 30931  000D7E  26D9               	addwf	fsr2l,f,c
 30932  000D80  5024               	movf	__display_itoa_u32@text+1,w,c
 30933  000D82  22DA               	addwfc	fsr2h,f,c
 30934  000D84  0E20               	movlw	32
 30935  000D86  6EDF               	movwf	indf2,c
 30936                           
 30937                           ;display.c: 193: return 8;
 30938  000D88  0E08               	movlw	8
 30939                           
 30940                           ;display.c: 194: }
 30941  000D8A  0012               	return	
 30942  000D8C                     l1512:
 30943                           
 30944                           ;display.c: 195: else if(value>1000000)
 30945  000D8C  5022               	movf	__display_itoa_u32@value+3,w,c
 30946  000D8E  E108               	bnz	u7250
 30947  000D90  0E41               	movlw	65
 30948  000D92  5C1F               	subwf	__display_itoa_u32@value,w,c
 30949  000D94  0E42               	movlw	66
 30950  000D96  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30951  000D98  0E0F               	movlw	15
 30952  000D9A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30953  000D9C  A0D8               	btfss	status,0,c
 30954  000D9E  D04C               	goto	l1514
 30955  000DA0                     u7250:
 30956                           
 30957                           ;display.c: 196: {;display.c: 197: itoa(text, (uint16_t)(value/10000), 10);
 30958  000DA0  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30959  000DA4  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30960  000DA8  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30961  000DAC  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30962  000DB0  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30963  000DB4  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30964  000DB8  0E10               	movlw	16
 30965  000DBA  6E05               	movwf	___lldiv@divisor,c
 30966  000DBC  0E27               	movlw	39
 30967  000DBE  6E06               	movwf	___lldiv@divisor+1,c
 30968  000DC0  0E00               	movlw	0
 30969  000DC2  6E07               	movwf	___lldiv@divisor+2,c
 30970  000DC4  0E00               	movlw	0
 30971  000DC6  6E08               	movwf	___lldiv@divisor+3,c
 30972  000DC8  ECFC  F032         	call	___lldiv	;wreg free
 30973  000DCC  C001  F013         	movff	?___lldiv,itoa@val
 30974  000DD0  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30975  000DD4  0E00               	movlw	0
 30976  000DD6  6E16               	movwf	itoa@base+1,c
 30977  000DD8  0E0A               	movlw	10
 30978  000DDA  6E15               	movwf	itoa@base,c
 30979  000DDC  EC44  F03C         	call	_itoa	;wreg free
 30980                           
 30981                           ;display.c: 198: itoa(text+3, (uint16_t)(value%10000), 10);
 30982  000DE0  0E03               	movlw	3
 30983  000DE2  2423               	addwf	__display_itoa_u32@text,w,c
 30984  000DE4  6E11               	movwf	itoa@buf,c
 30985  000DE6  0E00               	movlw	0
 30986  000DE8  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30987  000DEA  6E12               	movwf	itoa@buf+1,c
 30988  000DEC  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30989  000DF0  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30990  000DF4  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30991  000DF8  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30992  000DFC  0E10               	movlw	16
 30993  000DFE  6E05               	movwf	___llmod@divisor,c
 30994  000E00  0E27               	movlw	39
 30995  000E02  6E06               	movwf	___llmod@divisor+1,c
 30996  000E04  0E00               	movlw	0
 30997  000E06  6E07               	movwf	___llmod@divisor+2,c
 30998  000E08  0E00               	movlw	0
 30999  000E0A  6E08               	movwf	___llmod@divisor+3,c
 31000  000E0C  EC0B  F037         	call	___llmod	;wreg free
 31001  000E10  C001  F013         	movff	?___llmod,itoa@val
 31002  000E14  C002  F014         	movff	?___llmod+1,itoa@val+1
 31003  000E18  0E00               	movlw	0
 31004  000E1A  6E16               	movwf	itoa@base+1,c
 31005  000E1C  0E0A               	movlw	10
 31006  000E1E  6E15               	movwf	itoa@base,c
 31007  000E20  EC44  F03C         	call	_itoa	;wreg free
 31008                           
 31009                           ;display.c: 199: *(text+7) = ' ';
 31010  000E24  EE20 F007          	lfsr	2,7
 31011  000E28  5023               	movf	__display_itoa_u32@text,w,c
 31012  000E2A  26D9               	addwf	fsr2l,f,c
 31013  000E2C  5024               	movf	__display_itoa_u32@text+1,w,c
 31014  000E2E  22DA               	addwfc	fsr2h,f,c
 31015  000E30  0E20               	movlw	32
 31016  000E32  6EDF               	movwf	indf2,c
 31017                           
 31018                           ;display.c: 200: return 7;
 31019  000E34  0E07               	movlw	7
 31020                           
 31021                           ;display.c: 201: }
 31022  000E36  0012               	return	
 31023  000E38                     l1514:
 31024                           
 31025                           ;display.c: 202: else if(value>100000)
 31026  000E38  5022               	movf	__display_itoa_u32@value+3,w,c
 31027  000E3A  E108               	bnz	u7260
 31028  000E3C  0EA1               	movlw	161
 31029  000E3E  5C1F               	subwf	__display_itoa_u32@value,w,c
 31030  000E40  0E86               	movlw	134
 31031  000E42  5820               	subwfb	__display_itoa_u32@value+1,w,c
 31032  000E44  0E01               	movlw	1
 31033  000E46  5821               	subwfb	__display_itoa_u32@value+2,w,c
 31034  000E48  A0D8               	btfss	status,0,c
 31035  000E4A  D04C               	goto	l1516
 31036  000E4C                     u7260:
 31037                           
 31038                           ;display.c: 203: {;display.c: 204: itoa(text, (uint16_t)(value/10000), 10);
 31039  000E4C  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 31040  000E50  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 31041  000E54  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 31042  000E58  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 31043  000E5C  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 31044  000E60  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 31045  000E64  0E10               	movlw	16
 31046  000E66  6E05               	movwf	___lldiv@divisor,c
 31047  000E68  0E27               	movlw	39
 31048  000E6A  6E06               	movwf	___lldiv@divisor+1,c
 31049  000E6C  0E00               	movlw	0
 31050  000E6E  6E07               	movwf	___lldiv@divisor+2,c
 31051  000E70  0E00               	movlw	0
 31052  000E72  6E08               	movwf	___lldiv@divisor+3,c
 31053  000E74  ECFC  F032         	call	___lldiv	;wreg free
 31054  000E78  C001  F013         	movff	?___lldiv,itoa@val
 31055  000E7C  C002  F014         	movff	?___lldiv+1,itoa@val+1
 31056  000E80  0E00               	movlw	0
 31057  000E82  6E16               	movwf	itoa@base+1,c
 31058  000E84  0E0A               	movlw	10
 31059  000E86  6E15               	movwf	itoa@base,c
 31060  000E88  EC44  F03C         	call	_itoa	;wreg free
 31061                           
 31062                           ;display.c: 205: itoa(text+2, (uint16_t)(value%10000), 10);
 31063  000E8C  0E02               	movlw	2
 31064  000E8E  2423               	addwf	__display_itoa_u32@text,w,c
 31065  000E90  6E11               	movwf	itoa@buf,c
 31066  000E92  0E00               	movlw	0
 31067  000E94  2024               	addwfc	__display_itoa_u32@text+1,w,c
 31068  000E96  6E12               	movwf	itoa@buf+1,c
 31069  000E98  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 31070  000E9C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 31071  000EA0  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 31072  000EA4  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 31073  000EA8  0E10               	movlw	16
 31074  000EAA  6E05               	movwf	___llmod@divisor,c
 31075  000EAC  0E27               	movlw	39
 31076  000EAE  6E06               	movwf	___llmod@divisor+1,c
 31077  000EB0  0E00               	movlw	0
 31078  000EB2  6E07               	movwf	___llmod@divisor+2,c
 31079  000EB4  0E00               	movlw	0
 31080  000EB6  6E08               	movwf	___llmod@divisor+3,c
 31081  000EB8  EC0B  F037         	call	___llmod	;wreg free
 31082  000EBC  C001  F013         	movff	?___llmod,itoa@val
 31083  000EC0  C002  F014         	movff	?___llmod+1,itoa@val+1
 31084  000EC4  0E00               	movlw	0
 31085  000EC6  6E16               	movwf	itoa@base+1,c
 31086  000EC8  0E0A               	movlw	10
 31087  000ECA  6E15               	movwf	itoa@base,c
 31088  000ECC  EC44  F03C         	call	_itoa	;wreg free
 31089                           
 31090                           ;display.c: 206: *(text+6) = ' ';
 31091  000ED0  EE20 F006          	lfsr	2,6
 31092  000ED4  5023               	movf	__display_itoa_u32@text,w,c
 31093  000ED6  26D9               	addwf	fsr2l,f,c
 31094  000ED8  5024               	movf	__display_itoa_u32@text+1,w,c
 31095  000EDA  22DA               	addwfc	fsr2h,f,c
 31096  000EDC  0E20               	movlw	32
 31097  000EDE  6EDF               	movwf	indf2,c
 31098                           
 31099                           ;display.c: 207: return 6;
 31100  000EE0  0E06               	movlw	6
 31101                           
 31102                           ;display.c: 208: }
 31103  000EE2  0012               	return	
 31104  000EE4                     l1516:
 31105                           
 31106                           ;display.c: 209: else;display.c: 210: {;display.c: 211: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 31107  000EE4  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 31108  000EE8  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 31109  000EEC  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 31110  000EF0  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 31111  000EF4  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 31112  000EF8  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 31113  000EFC  0E10               	movlw	16
 31114  000EFE  6E05               	movwf	___lldiv@divisor,c
 31115  000F00  0E27               	movlw	39
 31116  000F02  6E06               	movwf	___lldiv@divisor+1,c
 31117  000F04  0E00               	movlw	0
 31118  000F06  6E07               	movwf	___lldiv@divisor+2,c
 31119  000F08  0E00               	movlw	0
 31120  000F0A  6E08               	movwf	___lldiv@divisor+3,c
 31121  000F0C  ECFC  F032         	call	___lldiv	;wreg free
 31122  000F10  C001  F013         	movff	?___lldiv,itoa@val
 31123  000F14  C002  F014         	movff	?___lldiv+1,itoa@val+1
 31124  000F18  0E00               	movlw	0
 31125  000F1A  6E16               	movwf	itoa@base+1,c
 31126  000F1C  0E0A               	movlw	10
 31127  000F1E  6E15               	movwf	itoa@base,c
 31128  000F20  EC44  F03C         	call	_itoa	;wreg free
 31129                           
 31130                           ;display.c: 212: itoa(text+1, (uint16_t)(value%10000), 10);
 31131  000F24  0E01               	movlw	1
 31132  000F26  2423               	addwf	__display_itoa_u32@text,w,c
 31133  000F28  6E11               	movwf	itoa@buf,c
 31134  000F2A  0E00               	movlw	0
 31135  000F2C  2024               	addwfc	__display_itoa_u32@text+1,w,c
 31136  000F2E  6E12               	movwf	itoa@buf+1,c
 31137  000F30  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 31138  000F34  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 31139  000F38  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 31140  000F3C  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 31141  000F40  0E10               	movlw	16
 31142  000F42  6E05               	movwf	___llmod@divisor,c
 31143  000F44  0E27               	movlw	39
 31144  000F46  6E06               	movwf	___llmod@divisor+1,c
 31145  000F48  0E00               	movlw	0
 31146  000F4A  6E07               	movwf	___llmod@divisor+2,c
 31147  000F4C  0E00               	movlw	0
 31148  000F4E  6E08               	movwf	___llmod@divisor+3,c
 31149  000F50  EC0B  F037         	call	___llmod	;wreg free
 31150  000F54  C001  F013         	movff	?___llmod,itoa@val
 31151  000F58  C002  F014         	movff	?___llmod+1,itoa@val+1
 31152  000F5C  0E00               	movlw	0
 31153  000F5E  6E16               	movwf	itoa@base+1,c
 31154  000F60  0E0A               	movlw	10
 31155  000F62  6E15               	movwf	itoa@base,c
 31156  000F64  EC44  F03C         	call	_itoa	;wreg free
 31157                           
 31158                           ;display.c: 213: *(text+5) = ' ';
 31159  000F68  EE20 F005          	lfsr	2,5
 31160  000F6C  5023               	movf	__display_itoa_u32@text,w,c
 31161  000F6E  26D9               	addwf	fsr2l,f,c
 31162  000F70  5024               	movf	__display_itoa_u32@text+1,w,c
 31163  000F72  22DA               	addwfc	fsr2h,f,c
 31164  000F74  0E20               	movlw	32
 31165  000F76  6EDF               	movwf	indf2,c
 31166                           
 31167                           ;display.c: 214: return 5;
 31168  000F78  0E05               	movlw	5
 31169  000F7A  0012               	return	
 31170  000F7C                     __end_of__display_itoa_u32:
 31171                           	opt stack 0
 31172                           tosu	equ	0xFFF
 31173                           tosh	equ	0xFFE
 31174                           tosl	equ	0xFFD
 31175                           pclath	equ	0xFFA
 31176                           tblptru	equ	0xFF8
 31177                           tblptrh	equ	0xFF7
 31178                           tblptrl	equ	0xFF6
 31179                           tablat	equ	0xFF5
 31180                           prodh	equ	0xFF4
 31181                           prodl	equ	0xFF3
 31182                           intcon	equ	0xFF2
 31183                           intcon2	equ	0xFF1
 31184                           intcon3	equ	0xFF0
 31185                           indf0	equ	0xFEF
 31186                           postinc0	equ	0xFEE
 31187                           fsr0h	equ	0xFEA
 31188                           fsr0l	equ	0xFE9
 31189                           wreg	equ	0xFE8
 31190                           indf1	equ	0xFE7
 31191                           postdec1	equ	0xFE5
 31192                           plusw1	equ	0xFE3
 31193                           fsr1h	equ	0xFE2
 31194                           fsr1l	equ	0xFE1
 31195                           indf2	equ	0xFDF
 31196                           postinc2	equ	0xFDE
 31197                           postdec2	equ	0xFDD
 31198                           plusw2	equ	0xFDB
 31199                           fsr2h	equ	0xFDA
 31200                           fsr2l	equ	0xFD9
 31201                           status	equ	0xFD8
 31202                           
 31203 ;; *************** function ___llmod *****************
 31204 ;; Defined at:
 31205 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 31206 ;; Parameters:    Size  Location     Type
 31207 ;;  dividend        4    0[COMRAM] unsigned long 
 31208 ;;  divisor         4    4[COMRAM] unsigned long 
 31209 ;; Auto vars:     Size  Location     Type
 31210 ;;  counter         1    8[COMRAM] unsigned char 
 31211 ;; Return value:  Size  Location     Type
 31212 ;;                  4    0[COMRAM] unsigned long 
 31213 ;; Registers used:
 31214 ;;		wreg, status,2, status,0
 31215 ;; Tracked objects:
 31216 ;;		On entry : 0/0
 31217 ;;		On exit  : 0/0
 31218 ;;		Unchanged: 0/0
 31219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31220 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31223 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31224 ;;Total ram usage:        9 bytes
 31225 ;; Hardware stack levels used:    1
 31226 ;; This function calls:
 31227 ;;		Nothing
 31228 ;; This function is called by:
 31229 ;;		__display_itoa_u32
 31230 ;; This function uses a non-reentrant model
 31231 ;;
 31232                           
 31233                           	psect	text149
 31234  006E16                     __ptext149:
 31235                           	opt stack 0
 31236  006E16                     ___llmod:
 31237                           	opt stack 24
 31238                           
 31239                           ;incstack = 0
 31240  006E16  5005               	movf	___llmod@divisor,w,c
 31241  006E18  1006               	iorwf	___llmod@divisor+1,w,c
 31242  006E1A  1007               	iorwf	___llmod@divisor+2,w,c
 31243  006E1C  1008               	iorwf	___llmod@divisor+3,w,c
 31244  006E1E  B4D8               	btfsc	status,2,c
 31245  006E20  D024               	goto	l3265
 31246  006E22  0E01               	movlw	1
 31247  006E24  6E09               	movwf	___llmod@counter,c
 31248  006E26  D006               	goto	l3260
 31249  006E28  90D8               	bcf	status,0,c
 31250  006E2A  3605               	rlcf	___llmod@divisor,f,c
 31251  006E2C  3606               	rlcf	___llmod@divisor+1,f,c
 31252  006E2E  3607               	rlcf	___llmod@divisor+2,f,c
 31253  006E30  3608               	rlcf	___llmod@divisor+3,f,c
 31254  006E32  2A09               	incf	___llmod@counter,f,c
 31255  006E34                     l3260:
 31256  006E34  AE08               	btfss	___llmod@divisor+3,7,c
 31257  006E36  D7F8               	goto	l3261
 31258  006E38                     u6850:
 31259  006E38  5005               	movf	___llmod@divisor,w,c
 31260  006E3A  5C01               	subwf	___llmod@dividend,w,c
 31261  006E3C  5006               	movf	___llmod@divisor+1,w,c
 31262  006E3E  5802               	subwfb	___llmod@dividend+1,w,c
 31263  006E40  5007               	movf	___llmod@divisor+2,w,c
 31264  006E42  5803               	subwfb	___llmod@dividend+2,w,c
 31265  006E44  5008               	movf	___llmod@divisor+3,w,c
 31266  006E46  5804               	subwfb	___llmod@dividend+3,w,c
 31267  006E48  A0D8               	btfss	status,0,c
 31268  006E4A  D008               	goto	l3264
 31269  006E4C  5005               	movf	___llmod@divisor,w,c
 31270  006E4E  5E01               	subwf	___llmod@dividend,f,c
 31271  006E50  5006               	movf	___llmod@divisor+1,w,c
 31272  006E52  5A02               	subwfb	___llmod@dividend+1,f,c
 31273  006E54  5007               	movf	___llmod@divisor+2,w,c
 31274  006E56  5A03               	subwfb	___llmod@dividend+2,f,c
 31275  006E58  5008               	movf	___llmod@divisor+3,w,c
 31276  006E5A  5A04               	subwfb	___llmod@dividend+3,f,c
 31277  006E5C                     l3264:
 31278  006E5C  90D8               	bcf	status,0,c
 31279  006E5E  3208               	rrcf	___llmod@divisor+3,f,c
 31280  006E60  3207               	rrcf	___llmod@divisor+2,f,c
 31281  006E62  3206               	rrcf	___llmod@divisor+1,f,c
 31282  006E64  3205               	rrcf	___llmod@divisor,f,c
 31283  006E66  2E09               	decfsz	___llmod@counter,f,c
 31284  006E68  D7E7               	goto	u6850
 31285  006E6A                     l3265:
 31286  006E6A  C001  F001         	movff	___llmod@dividend,?___llmod
 31287  006E6E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 31288  006E72  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 31289  006E76  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 31290  006E7A  0012               	return		;funcret
 31291  006E7C                     __end_of___llmod:
 31292                           	opt stack 0
 31293                           tosu	equ	0xFFF
 31294                           tosh	equ	0xFFE
 31295                           tosl	equ	0xFFD
 31296                           pclath	equ	0xFFA
 31297                           tblptru	equ	0xFF8
 31298                           tblptrh	equ	0xFF7
 31299                           tblptrl	equ	0xFF6
 31300                           tablat	equ	0xFF5
 31301                           prodh	equ	0xFF4
 31302                           prodl	equ	0xFF3
 31303                           intcon	equ	0xFF2
 31304                           intcon2	equ	0xFF1
 31305                           intcon3	equ	0xFF0
 31306                           indf0	equ	0xFEF
 31307                           postinc0	equ	0xFEE
 31308                           fsr0h	equ	0xFEA
 31309                           fsr0l	equ	0xFE9
 31310                           wreg	equ	0xFE8
 31311                           indf1	equ	0xFE7
 31312                           postdec1	equ	0xFE5
 31313                           plusw1	equ	0xFE3
 31314                           fsr1h	equ	0xFE2
 31315                           fsr1l	equ	0xFE1
 31316                           indf2	equ	0xFDF
 31317                           postinc2	equ	0xFDE
 31318                           postdec2	equ	0xFDD
 31319                           plusw2	equ	0xFDB
 31320                           fsr2h	equ	0xFDA
 31321                           fsr2l	equ	0xFD9
 31322                           status	equ	0xFD8
 31323                           
 31324 ;; *************** function ___lldiv *****************
 31325 ;; Defined at:
 31326 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 31327 ;; Parameters:    Size  Location     Type
 31328 ;;  dividend        4    0[COMRAM] unsigned long 
 31329 ;;  divisor         4    4[COMRAM] unsigned long 
 31330 ;; Auto vars:     Size  Location     Type
 31331 ;;  quotient        4    8[COMRAM] unsigned long 
 31332 ;;  counter         1   12[COMRAM] unsigned char 
 31333 ;; Return value:  Size  Location     Type
 31334 ;;                  4    0[COMRAM] unsigned long 
 31335 ;; Registers used:
 31336 ;;		wreg, status,2, status,0
 31337 ;; Tracked objects:
 31338 ;;		On entry : 0/0
 31339 ;;		On exit  : 0/0
 31340 ;;		Unchanged: 0/0
 31341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31342 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31343 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31345 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31346 ;;Total ram usage:       13 bytes
 31347 ;; Hardware stack levels used:    1
 31348 ;; This function calls:
 31349 ;;		Nothing
 31350 ;; This function is called by:
 31351 ;;		__display_itoa_u32
 31352 ;; This function uses a non-reentrant model
 31353 ;;
 31354                           
 31355                           	psect	text150
 31356  0065F8                     __ptext150:
 31357                           	opt stack 0
 31358  0065F8                     ___lldiv:
 31359                           	opt stack 24
 31360                           
 31361                           ;incstack = 0
 31362  0065F8  0E00               	movlw	0
 31363  0065FA  6E09               	movwf	___lldiv@quotient,c
 31364  0065FC  0E00               	movlw	0
 31365  0065FE  6E0A               	movwf	___lldiv@quotient+1,c
 31366  006600  0E00               	movlw	0
 31367  006602  6E0B               	movwf	___lldiv@quotient+2,c
 31368  006604  0E00               	movlw	0
 31369  006606  6E0C               	movwf	___lldiv@quotient+3,c
 31370  006608  5005               	movf	___lldiv@divisor,w,c
 31371  00660A  1006               	iorwf	___lldiv@divisor+1,w,c
 31372  00660C  1007               	iorwf	___lldiv@divisor+2,w,c
 31373  00660E  1008               	iorwf	___lldiv@divisor+3,w,c
 31374  006610  B4D8               	btfsc	status,2,c
 31375  006612  D02A               	goto	l2884
 31376  006614  0E01               	movlw	1
 31377  006616  6E0D               	movwf	___lldiv@counter,c
 31378  006618  D006               	goto	l2879
 31379  00661A  90D8               	bcf	status,0,c
 31380  00661C  3605               	rlcf	___lldiv@divisor,f,c
 31381  00661E  3606               	rlcf	___lldiv@divisor+1,f,c
 31382  006620  3607               	rlcf	___lldiv@divisor+2,f,c
 31383  006622  3608               	rlcf	___lldiv@divisor+3,f,c
 31384  006624  2A0D               	incf	___lldiv@counter,f,c
 31385  006626                     l2879:
 31386  006626  AE08               	btfss	___lldiv@divisor+3,7,c
 31387  006628  D7F8               	goto	l2880
 31388  00662A                     u6820:
 31389  00662A  90D8               	bcf	status,0,c
 31390  00662C  3609               	rlcf	___lldiv@quotient,f,c
 31391  00662E  360A               	rlcf	___lldiv@quotient+1,f,c
 31392  006630  360B               	rlcf	___lldiv@quotient+2,f,c
 31393  006632  360C               	rlcf	___lldiv@quotient+3,f,c
 31394  006634  5005               	movf	___lldiv@divisor,w,c
 31395  006636  5C01               	subwf	___lldiv@dividend,w,c
 31396  006638  5006               	movf	___lldiv@divisor+1,w,c
 31397  00663A  5802               	subwfb	___lldiv@dividend+1,w,c
 31398  00663C  5007               	movf	___lldiv@divisor+2,w,c
 31399  00663E  5803               	subwfb	___lldiv@dividend+2,w,c
 31400  006640  5008               	movf	___lldiv@divisor+3,w,c
 31401  006642  5804               	subwfb	___lldiv@dividend+3,w,c
 31402  006644  A0D8               	btfss	status,0,c
 31403  006646  D009               	goto	l2883
 31404  006648  5005               	movf	___lldiv@divisor,w,c
 31405  00664A  5E01               	subwf	___lldiv@dividend,f,c
 31406  00664C  5006               	movf	___lldiv@divisor+1,w,c
 31407  00664E  5A02               	subwfb	___lldiv@dividend+1,f,c
 31408  006650  5007               	movf	___lldiv@divisor+2,w,c
 31409  006652  5A03               	subwfb	___lldiv@dividend+2,f,c
 31410  006654  5008               	movf	___lldiv@divisor+3,w,c
 31411  006656  5A04               	subwfb	___lldiv@dividend+3,f,c
 31412  006658  8009               	bsf	___lldiv@quotient,0,c
 31413  00665A                     l2883:
 31414  00665A  90D8               	bcf	status,0,c
 31415  00665C  3208               	rrcf	___lldiv@divisor+3,f,c
 31416  00665E  3207               	rrcf	___lldiv@divisor+2,f,c
 31417  006660  3206               	rrcf	___lldiv@divisor+1,f,c
 31418  006662  3205               	rrcf	___lldiv@divisor,f,c
 31419  006664  2E0D               	decfsz	___lldiv@counter,f,c
 31420  006666  D7E1               	goto	u6820
 31421  006668                     l2884:
 31422  006668  C009  F001         	movff	___lldiv@quotient,?___lldiv
 31423  00666C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 31424  006670  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 31425  006674  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 31426  006678  0012               	return		;funcret
 31427  00667A                     __end_of___lldiv:
 31428                           	opt stack 0
 31429                           tosu	equ	0xFFF
 31430                           tosh	equ	0xFFE
 31431                           tosl	equ	0xFFD
 31432                           pclath	equ	0xFFA
 31433                           tblptru	equ	0xFF8
 31434                           tblptrh	equ	0xFF7
 31435                           tblptrl	equ	0xFF6
 31436                           tablat	equ	0xFF5
 31437                           prodh	equ	0xFF4
 31438                           prodl	equ	0xFF3
 31439                           intcon	equ	0xFF2
 31440                           intcon2	equ	0xFF1
 31441                           intcon3	equ	0xFF0
 31442                           indf0	equ	0xFEF
 31443                           postinc0	equ	0xFEE
 31444                           fsr0h	equ	0xFEA
 31445                           fsr0l	equ	0xFE9
 31446                           wreg	equ	0xFE8
 31447                           indf1	equ	0xFE7
 31448                           postdec1	equ	0xFE5
 31449                           plusw1	equ	0xFE3
 31450                           fsr1h	equ	0xFE2
 31451                           fsr1l	equ	0xFE1
 31452                           indf2	equ	0xFDF
 31453                           postinc2	equ	0xFDE
 31454                           postdec2	equ	0xFDD
 31455                           plusw2	equ	0xFDB
 31456                           fsr2h	equ	0xFDA
 31457                           fsr2l	equ	0xFD9
 31458                           status	equ	0xFD8
 31459                           
 31460 ;; *************** function __display_done *****************
 31461 ;; Defined at:
 31462 ;;		line 529 in file "display.c"
 31463 ;; Parameters:    Size  Location     Type
 31464 ;;		None
 31465 ;; Auto vars:     Size  Location     Type
 31466 ;;  cntr            1   30[COMRAM] unsigned char 
 31467 ;; Return value:  Size  Location     Type
 31468 ;;                  1    wreg      void 
 31469 ;; Registers used:
 31470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31471 ;; Tracked objects:
 31472 ;;		On entry : 0/0
 31473 ;;		On exit  : 0/0
 31474 ;;		Unchanged: 0/0
 31475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31480 ;;Total ram usage:        1 bytes
 31481 ;; Hardware stack levels used:    1
 31482 ;; Hardware stack levels required when called:    4
 31483 ;; This function calls:
 31484 ;;		__display_itoa_u16
 31485 ;;		_bootloader_get_flashPagesWritten
 31486 ;; This function is called by:
 31487 ;;		_display_prepare
 31488 ;; This function uses a non-reentrant model
 31489 ;;
 31490                           
 31491                           	psect	text151
 31492  0037A2                     __ptext151:
 31493                           	opt stack 0
 31494  0037A2                     __display_done:
 31495                           	opt stack 22
 31496                           
 31497                           ;display.c: 531: uint8_t cntr;;display.c: 532: cntr = 0;
 31498                           
 31499                           ;incstack = 0
 31500  0037A2  0E00               	movlw	0
 31501  0037A4  6E1F               	movwf	__display_done@cntr,c
 31502                           
 31503                           ;display.c: 533: while(done_line1[cntr])
 31504  0037A6  D017               	goto	l1686
 31505  0037A8                     
 31506                           ;display.c: 534: display_content[0][cntr] = done_line1[cntr++];
 31507  0037A8  501F               	movf	__display_done@cntr,w,c
 31508  0037AA  0D01               	mullw	1
 31509  0037AC  0E74               	movlw	low _done_line1
 31510  0037AE  24F3               	addwf	prodl,w,c
 31511  0037B0  6EF6               	movwf	tblptrl,c
 31512  0037B2  0E8D               	movlw	high _done_line1
 31513  0037B4  20F4               	addwfc	prodh,w,c
 31514  0037B6  6EF7               	movwf	tblptrh,c
 31515  0037B8                     	if	1	;There are 3 active tblptr bytes
 31516  0037B8  6AF8               	clrf	tblptru,c
 31517  0037BA  0E00               	movlw	low (__mediumconst shr (0+16))
 31518  0037BC  22F8               	addwfc	tblptru,f,c
 31519  0037BE                     	endif
 31520  0037BE  501F               	movf	__display_done@cntr,w,c
 31521  0037C0  0D01               	mullw	1
 31522  0037C2  0E00               	movlw	low _display_content
 31523  0037C4  24F3               	addwf	prodl,w,c
 31524  0037C6  6ED9               	movwf	fsr2l,c
 31525  0037C8  0E02               	movlw	high _display_content
 31526  0037CA  20F4               	addwfc	prodh,w,c
 31527  0037CC  6EDA               	movwf	fsr2h,c
 31528  0037CE  0008               	tblrd		*
 31529  0037D0  CFF5 FFDF          	movff	tablat,indf2
 31530  0037D4  2A1F               	incf	__display_done@cntr,f,c
 31531  0037D6                     l1686:
 31532  0037D6  501F               	movf	__display_done@cntr,w,c
 31533  0037D8  0D01               	mullw	1
 31534  0037DA  0E74               	movlw	low _done_line1
 31535  0037DC  24F3               	addwf	prodl,w,c
 31536  0037DE  6EF6               	movwf	tblptrl,c
 31537  0037E0  0E8D               	movlw	high _done_line1
 31538  0037E2  20F4               	addwfc	prodh,w,c
 31539  0037E4  6EF7               	movwf	tblptrh,c
 31540  0037E6                     	if	1	;There are 3 active tblptr bytes
 31541  0037E6  6AF8               	clrf	tblptru,c
 31542  0037E8  0E00               	movlw	low (__mediumconst shr (0+16))
 31543  0037EA  22F8               	addwfc	tblptru,f,c
 31544  0037EC                     	endif
 31545  0037EC  0008               	tblrd		*
 31546  0037EE  50F5               	movf	tablat,w,c
 31547  0037F0  0900               	iorlw	0
 31548  0037F2  A4D8               	btfss	status,2,c
 31549  0037F4  D7D9               	goto	l1687
 31550                           
 31551                           ;display.c: 535: cntr = 0;
 31552  0037F6  0E00               	movlw	0
 31553  0037F8  6E1F               	movwf	__display_done@cntr,c
 31554                           
 31555                           ;display.c: 536: while(done_line2[cntr])
 31556  0037FA  D017               	goto	l1689
 31557  0037FC                     
 31558                           ;display.c: 537: display_content[1][cntr] = done_line2[cntr++];
 31559  0037FC  501F               	movf	__display_done@cntr,w,c
 31560  0037FE  0D01               	mullw	1
 31561  003800  0E9F               	movlw	low _done_line2
 31562  003802  24F3               	addwf	prodl,w,c
 31563  003804  6EF6               	movwf	tblptrl,c
 31564  003806  0E8E               	movlw	high _done_line2
 31565  003808  20F4               	addwfc	prodh,w,c
 31566  00380A  6EF7               	movwf	tblptrh,c
 31567  00380C                     	if	1	;There are 3 active tblptr bytes
 31568  00380C  6AF8               	clrf	tblptru,c
 31569  00380E  0E00               	movlw	low (__mediumconst shr (0+16))
 31570  003810  22F8               	addwfc	tblptru,f,c
 31571  003812                     	endif
 31572  003812  501F               	movf	__display_done@cntr,w,c
 31573  003814  0D01               	mullw	1
 31574  003816  0E14               	movlw	low (_display_content+20)
 31575  003818  24F3               	addwf	prodl,w,c
 31576  00381A  6ED9               	movwf	fsr2l,c
 31577  00381C  0E02               	movlw	high (_display_content+20)
 31578  00381E  20F4               	addwfc	prodh,w,c
 31579  003820  6EDA               	movwf	fsr2h,c
 31580  003822  0008               	tblrd		*
 31581  003824  CFF5 FFDF          	movff	tablat,indf2
 31582  003828  2A1F               	incf	__display_done@cntr,f,c
 31583  00382A                     l1689:
 31584  00382A  501F               	movf	__display_done@cntr,w,c
 31585  00382C  0D01               	mullw	1
 31586  00382E  0E9F               	movlw	low _done_line2
 31587  003830  24F3               	addwf	prodl,w,c
 31588  003832  6EF6               	movwf	tblptrl,c
 31589  003834  0E8E               	movlw	high _done_line2
 31590  003836  20F4               	addwfc	prodh,w,c
 31591  003838  6EF7               	movwf	tblptrh,c
 31592  00383A                     	if	1	;There are 3 active tblptr bytes
 31593  00383A  6AF8               	clrf	tblptru,c
 31594  00383C  0E00               	movlw	low (__mediumconst shr (0+16))
 31595  00383E  22F8               	addwfc	tblptru,f,c
 31596  003840                     	endif
 31597  003840  0008               	tblrd		*
 31598  003842  50F5               	movf	tablat,w,c
 31599  003844  0900               	iorlw	0
 31600  003846  A4D8               	btfss	status,2,c
 31601  003848  D7D9               	goto	l1690
 31602                           
 31603                           ;display.c: 538: cntr = 0;
 31604  00384A  0E00               	movlw	0
 31605  00384C  6E1F               	movwf	__display_done@cntr,c
 31606                           
 31607                           ;display.c: 539: while(done_line3[cntr])
 31608  00384E  D017               	goto	l1692
 31609  003850                     
 31610                           ;display.c: 540: display_content[2][cntr] = done_line3[cntr++];
 31611  003850  501F               	movf	__display_done@cntr,w,c
 31612  003852  0D01               	mullw	1
 31613  003854  0E64               	movlw	low _done_line3
 31614  003856  24F3               	addwf	prodl,w,c
 31615  003858  6EF6               	movwf	tblptrl,c
 31616  00385A  0E8D               	movlw	high _done_line3
 31617  00385C  20F4               	addwfc	prodh,w,c
 31618  00385E  6EF7               	movwf	tblptrh,c
 31619  003860                     	if	1	;There are 3 active tblptr bytes
 31620  003860  6AF8               	clrf	tblptru,c
 31621  003862  0E00               	movlw	low (__mediumconst shr (0+16))
 31622  003864  22F8               	addwfc	tblptru,f,c
 31623  003866                     	endif
 31624  003866  501F               	movf	__display_done@cntr,w,c
 31625  003868  0D01               	mullw	1
 31626  00386A  0E28               	movlw	low (_display_content+40)
 31627  00386C  24F3               	addwf	prodl,w,c
 31628  00386E  6ED9               	movwf	fsr2l,c
 31629  003870  0E02               	movlw	high (_display_content+40)
 31630  003872  20F4               	addwfc	prodh,w,c
 31631  003874  6EDA               	movwf	fsr2h,c
 31632  003876  0008               	tblrd		*
 31633  003878  CFF5 FFDF          	movff	tablat,indf2
 31634  00387C  2A1F               	incf	__display_done@cntr,f,c
 31635  00387E                     l1692:
 31636  00387E  501F               	movf	__display_done@cntr,w,c
 31637  003880  0D01               	mullw	1
 31638  003882  0E64               	movlw	low _done_line3
 31639  003884  24F3               	addwf	prodl,w,c
 31640  003886  6EF6               	movwf	tblptrl,c
 31641  003888  0E8D               	movlw	high _done_line3
 31642  00388A  20F4               	addwfc	prodh,w,c
 31643  00388C  6EF7               	movwf	tblptrh,c
 31644  00388E                     	if	1	;There are 3 active tblptr bytes
 31645  00388E  6AF8               	clrf	tblptru,c
 31646  003890  0E00               	movlw	low (__mediumconst shr (0+16))
 31647  003892  22F8               	addwfc	tblptru,f,c
 31648  003894                     	endif
 31649  003894  0008               	tblrd		*
 31650  003896  50F5               	movf	tablat,w,c
 31651  003898  0900               	iorlw	0
 31652  00389A  A4D8               	btfss	status,2,c
 31653  00389C  D7D9               	goto	l1693
 31654                           
 31655                           ;display.c: 541: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 31656  00389E  ECD5  F040         	call	_bootloader_get_flashPagesWritten	;wreg free
 31657  0038A2  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 31658  0038A6  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 31659  0038AA  6A1B               	clrf	__display_itoa_u16@value+2,c
 31660  0038AC  6A1C               	clrf	__display_itoa_u16@value+3,c
 31661  0038AE  501F               	movf	__display_done@cntr,w,c
 31662  0038B0  0D01               	mullw	1
 31663  0038B2  0E28               	movlw	low (_display_content+40)
 31664  0038B4  24F3               	addwf	prodl,w,c
 31665  0038B6  6E1D               	movwf	__display_itoa_u16@text,c
 31666  0038B8  0E02               	movlw	high (_display_content+40)
 31667  0038BA  20F4               	addwfc	prodh,w,c
 31668  0038BC  6E1E               	movwf	__display_itoa_u16@text+1,c
 31669  0038BE  EC79  F02A         	call	__display_itoa_u16	;wreg free
 31670                           
 31671                           ;display.c: 542: cntr = 0;
 31672  0038C2  0E00               	movlw	0
 31673  0038C4  6E1F               	movwf	__display_done@cntr,c
 31674                           
 31675                           ;display.c: 543: while(done_line4[cntr])
 31676  0038C6  D017               	goto	l1695
 31677  0038C8                     
 31678                           ;display.c: 544: display_content[3][cntr] = done_line4[cntr++];
 31679  0038C8  501F               	movf	__display_done@cntr,w,c
 31680  0038CA  0D01               	mullw	1
 31681  0038CC  0E54               	movlw	low _done_line4
 31682  0038CE  24F3               	addwf	prodl,w,c
 31683  0038D0  6EF6               	movwf	tblptrl,c
 31684  0038D2  0E8D               	movlw	high _done_line4
 31685  0038D4  20F4               	addwfc	prodh,w,c
 31686  0038D6  6EF7               	movwf	tblptrh,c
 31687  0038D8                     	if	1	;There are 3 active tblptr bytes
 31688  0038D8  6AF8               	clrf	tblptru,c
 31689  0038DA  0E00               	movlw	low (__mediumconst shr (0+16))
 31690  0038DC  22F8               	addwfc	tblptru,f,c
 31691  0038DE                     	endif
 31692  0038DE  501F               	movf	__display_done@cntr,w,c
 31693  0038E0  0D01               	mullw	1
 31694  0038E2  0E3C               	movlw	low (_display_content+60)
 31695  0038E4  24F3               	addwf	prodl,w,c
 31696  0038E6  6ED9               	movwf	fsr2l,c
 31697  0038E8  0E02               	movlw	high (_display_content+60)
 31698  0038EA  20F4               	addwfc	prodh,w,c
 31699  0038EC  6EDA               	movwf	fsr2h,c
 31700  0038EE  0008               	tblrd		*
 31701  0038F0  CFF5 FFDF          	movff	tablat,indf2
 31702  0038F4  2A1F               	incf	__display_done@cntr,f,c
 31703  0038F6                     l1695:
 31704  0038F6  501F               	movf	__display_done@cntr,w,c
 31705  0038F8  0D01               	mullw	1
 31706  0038FA  0E54               	movlw	low _done_line4
 31707  0038FC  24F3               	addwf	prodl,w,c
 31708  0038FE  6EF6               	movwf	tblptrl,c
 31709  003900  0E8D               	movlw	high _done_line4
 31710  003902  20F4               	addwfc	prodh,w,c
 31711  003904  6EF7               	movwf	tblptrh,c
 31712  003906                     	if	1	;There are 3 active tblptr bytes
 31713  003906  6AF8               	clrf	tblptru,c
 31714  003908  0E00               	movlw	low (__mediumconst shr (0+16))
 31715  00390A  22F8               	addwfc	tblptru,f,c
 31716  00390C                     	endif
 31717  00390C  0008               	tblrd		*
 31718  00390E  50F5               	movf	tablat,w,c
 31719  003910  0900               	iorlw	0
 31720  003912  B4D8               	btfsc	status,2,c
 31721  003914  0012               	return	
 31722  003916  D7D8               	goto	l1696
 31723  003918                     __end_of__display_done:
 31724                           	opt stack 0
 31725                           tosu	equ	0xFFF
 31726                           tosh	equ	0xFFE
 31727                           tosl	equ	0xFFD
 31728                           pclath	equ	0xFFA
 31729                           tblptru	equ	0xFF8
 31730                           tblptrh	equ	0xFF7
 31731                           tblptrl	equ	0xFF6
 31732                           tablat	equ	0xFF5
 31733                           prodh	equ	0xFF4
 31734                           prodl	equ	0xFF3
 31735                           intcon	equ	0xFF2
 31736                           intcon2	equ	0xFF1
 31737                           intcon3	equ	0xFF0
 31738                           indf0	equ	0xFEF
 31739                           postinc0	equ	0xFEE
 31740                           fsr0h	equ	0xFEA
 31741                           fsr0l	equ	0xFE9
 31742                           wreg	equ	0xFE8
 31743                           indf1	equ	0xFE7
 31744                           postdec1	equ	0xFE5
 31745                           plusw1	equ	0xFE3
 31746                           fsr1h	equ	0xFE2
 31747                           fsr1l	equ	0xFE1
 31748                           indf2	equ	0xFDF
 31749                           postinc2	equ	0xFDE
 31750                           postdec2	equ	0xFDD
 31751                           plusw2	equ	0xFDB
 31752                           fsr2h	equ	0xFDA
 31753                           fsr2l	equ	0xFD9
 31754                           status	equ	0xFD8
 31755                           
 31756 ;; *************** function _bootloader_get_flashPagesWritten *****************
 31757 ;; Defined at:
 31758 ;;		line 508 in file "bootloader.c"
 31759 ;; Parameters:    Size  Location     Type
 31760 ;;		None
 31761 ;; Auto vars:     Size  Location     Type
 31762 ;;		None
 31763 ;; Return value:  Size  Location     Type
 31764 ;;                  2    0[COMRAM] unsigned int 
 31765 ;; Registers used:
 31766 ;;		None
 31767 ;; Tracked objects:
 31768 ;;		On entry : 0/0
 31769 ;;		On exit  : 0/0
 31770 ;;		Unchanged: 0/0
 31771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31775 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31776 ;;Total ram usage:        2 bytes
 31777 ;; Hardware stack levels used:    1
 31778 ;; This function calls:
 31779 ;;		Nothing
 31780 ;; This function is called by:
 31781 ;;		__display_programming
 31782 ;;		__display_done
 31783 ;;		__fill_buffer_get_bootloader_details
 31784 ;; This function uses a non-reentrant model
 31785 ;;
 31786                           
 31787                           	psect	text152
 31788  0081AA                     __ptext152:
 31789                           	opt stack 0
 31790  0081AA                     _bootloader_get_flashPagesWritten:
 31791                           	opt stack 25
 31792                           
 31793                           ;bootloader.c: 510: return flash_pages_written;
 31794                           
 31795                           ;incstack = 0
 31796  0081AA  C170  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 31797  0081AE  C171  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 31798  0081B2  0012               	return		;funcret
 31799  0081B4                     __end_of_bootloader_get_flashPagesWritten:
 31800                           	opt stack 0
 31801                           tosu	equ	0xFFF
 31802                           tosh	equ	0xFFE
 31803                           tosl	equ	0xFFD
 31804                           pclath	equ	0xFFA
 31805                           tblptru	equ	0xFF8
 31806                           tblptrh	equ	0xFF7
 31807                           tblptrl	equ	0xFF6
 31808                           tablat	equ	0xFF5
 31809                           prodh	equ	0xFF4
 31810                           prodl	equ	0xFF3
 31811                           intcon	equ	0xFF2
 31812                           intcon2	equ	0xFF1
 31813                           intcon3	equ	0xFF0
 31814                           indf0	equ	0xFEF
 31815                           postinc0	equ	0xFEE
 31816                           fsr0h	equ	0xFEA
 31817                           fsr0l	equ	0xFE9
 31818                           wreg	equ	0xFE8
 31819                           indf1	equ	0xFE7
 31820                           postdec1	equ	0xFE5
 31821                           plusw1	equ	0xFE3
 31822                           fsr1h	equ	0xFE2
 31823                           fsr1l	equ	0xFE1
 31824                           indf2	equ	0xFDF
 31825                           postinc2	equ	0xFDE
 31826                           postdec2	equ	0xFDD
 31827                           plusw2	equ	0xFDB
 31828                           fsr2h	equ	0xFDA
 31829                           fsr2l	equ	0xFD9
 31830                           status	equ	0xFD8
 31831                           
 31832 ;; *************** function __display_clear *****************
 31833 ;; Defined at:
 31834 ;;		line 75 in file "display.c"
 31835 ;; Parameters:    Size  Location     Type
 31836 ;;		None
 31837 ;; Auto vars:     Size  Location     Type
 31838 ;;  col             1    3[COMRAM] unsigned char 
 31839 ;;  row             1    2[COMRAM] unsigned char 
 31840 ;; Return value:  Size  Location     Type
 31841 ;;                  1    wreg      void 
 31842 ;; Registers used:
 31843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31844 ;; Tracked objects:
 31845 ;;		On entry : 0/0
 31846 ;;		On exit  : 0/0
 31847 ;;		Unchanged: 0/0
 31848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31851 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31852 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31853 ;;Total ram usage:        4 bytes
 31854 ;; Hardware stack levels used:    1
 31855 ;; This function calls:
 31856 ;;		Nothing
 31857 ;; This function is called by:
 31858 ;;		_display_prepare
 31859 ;; This function uses a non-reentrant model
 31860 ;;
 31861                           
 31862                           	psect	text153
 31863  00772A                     __ptext153:
 31864                           	opt stack 0
 31865  00772A                     __display_clear:
 31866                           	opt stack 26
 31867                           
 31868                           ;display.c: 77: uint8_t row;;display.c: 78: uint8_t col;;display.c: 79: for(row=0;row<4;
      +                          ++row)
 31869                           
 31870                           ;incstack = 0
 31871  00772A  0E00               	movlw	0
 31872  00772C  6E03               	movwf	__display_clear@row,c
 31873  00772E                     l10933:
 31874  00772E  0E03               	movlw	3
 31875  007730  6403               	cpfsgt	__display_clear@row,c
 31876  007732  D001               	goto	l1464
 31877  007734  0012               	return	
 31878  007736                     l1464:
 31879                           
 31880                           ;display.c: 80: {;display.c: 81: for(col=0;col<20;++col)
 31881  007736  0E00               	movlw	0
 31882  007738  6E04               	movwf	__display_clear@col,c
 31883  00773A                     l10939:
 31884  00773A  0E13               	movlw	19
 31885  00773C  6404               	cpfsgt	__display_clear@col,c
 31886  00773E  D001               	goto	l1466
 31887  007740  D016               	goto	u7850
 31888  007742                     l1466:
 31889                           
 31890                           ;display.c: 82: {;display.c: 83: display_content[row][col] = ' ';
 31891  007742  5003               	movf	__display_clear@row,w,c
 31892  007744  0D14               	mullw	20
 31893  007746  0E00               	movlw	low _display_content
 31894  007748  6E01               	movwf	??__display_clear& (0+255),c
 31895  00774A  0E02               	movlw	high _display_content
 31896  00774C  6E02               	movwf	(??__display_clear+1)& (0+255),c
 31897  00774E  50F3               	movf	prodl,w,c
 31898  007750  2601               	addwf	??__display_clear,f,c
 31899  007752  50F4               	movf	prodh,w,c
 31900  007754  2202               	addwfc	??__display_clear+1,f,c
 31901  007756  5004               	movf	__display_clear@col,w,c
 31902  007758  0D01               	mullw	1
 31903  00775A  50F3               	movf	prodl,w,c
 31904  00775C  2401               	addwf	??__display_clear,w,c
 31905  00775E  6ED9               	movwf	fsr2l,c
 31906  007760  50F4               	movf	prodh,w,c
 31907  007762  2002               	addwfc	??__display_clear+1,w,c
 31908  007764  6EDA               	movwf	fsr2h,c
 31909  007766  0E20               	movlw	32
 31910  007768  6EDF               	movwf	indf2,c
 31911  00776A  2A04               	incf	__display_clear@col,f,c
 31912  00776C  D7E6               	goto	l10939
 31913  00776E                     u7850:
 31914  00776E  2A03               	incf	__display_clear@row,f,c
 31915  007770  D7DE               	goto	l10933
 31916  007772                     __end_of__display_clear:
 31917                           	opt stack 0
 31918                           tosu	equ	0xFFF
 31919                           tosh	equ	0xFFE
 31920                           tosl	equ	0xFFD
 31921                           pclath	equ	0xFFA
 31922                           tblptru	equ	0xFF8
 31923                           tblptrh	equ	0xFF7
 31924                           tblptrl	equ	0xFF6
 31925                           tablat	equ	0xFF5
 31926                           prodh	equ	0xFF4
 31927                           prodl	equ	0xFF3
 31928                           intcon	equ	0xFF2
 31929                           intcon2	equ	0xFF1
 31930                           intcon3	equ	0xFF0
 31931                           indf0	equ	0xFEF
 31932                           postinc0	equ	0xFEE
 31933                           fsr0h	equ	0xFEA
 31934                           fsr0l	equ	0xFE9
 31935                           wreg	equ	0xFE8
 31936                           indf1	equ	0xFE7
 31937                           postdec1	equ	0xFE5
 31938                           plusw1	equ	0xFE3
 31939                           fsr1h	equ	0xFE2
 31940                           fsr1l	equ	0xFE1
 31941                           indf2	equ	0xFDF
 31942                           postinc2	equ	0xFDE
 31943                           postdec2	equ	0xFDD
 31944                           plusw2	equ	0xFDB
 31945                           fsr2h	equ	0xFDA
 31946                           fsr2l	equ	0xFD9
 31947                           status	equ	0xFD8
 31948                           
 31949 ;; *************** function __display_checked *****************
 31950 ;; Defined at:
 31951 ;;		line 433 in file "display.c"
 31952 ;; Parameters:    Size  Location     Type
 31953 ;;		None
 31954 ;; Auto vars:     Size  Location     Type
 31955 ;;  cntr            1   33[COMRAM] unsigned char 
 31956 ;;  start           1   32[COMRAM] unsigned char 
 31957 ;; Return value:  Size  Location     Type
 31958 ;;                  1    wreg      void 
 31959 ;; Registers used:
 31960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31961 ;; Tracked objects:
 31962 ;;		On entry : 0/0
 31963 ;;		On exit  : 0/0
 31964 ;;		Unchanged: 0/0
 31965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31968 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31969 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31970 ;;Total ram usage:        4 bytes
 31971 ;; Hardware stack levels used:    1
 31972 ;; Hardware stack levels required when called:    4
 31973 ;; This function calls:
 31974 ;;		__display_itoa_u16
 31975 ;;		_bootloader_get_total_entries
 31976 ;; This function is called by:
 31977 ;;		_display_prepare
 31978 ;; This function uses a non-reentrant model
 31979 ;;
 31980                           
 31981                           	psect	text154
 31982  0034B0                     __ptext154:
 31983                           	opt stack 0
 31984  0034B0                     __display_checked:
 31985                           	opt stack 22
 31986                           
 31987                           ;display.c: 435: uint8_t cntr;;display.c: 436: uint8_t start;;display.c: 437: cntr = 0;
 31988                           
 31989                           ;incstack = 0
 31990  0034B0  0E00               	movlw	0
 31991  0034B2  6E22               	movwf	__display_checked@cntr,c
 31992                           
 31993                           ;display.c: 438: while(checked_line1[cntr])
 31994  0034B4  D017               	goto	l1622
 31995  0034B6                     
 31996                           ;display.c: 439: display_content[0][cntr] = checked_line1[cntr++];
 31997  0034B6  5022               	movf	__display_checked@cntr,w,c
 31998  0034B8  0D01               	mullw	1
 31999  0034BA  0EB4               	movlw	low _checked_line1
 32000  0034BC  24F3               	addwf	prodl,w,c
 32001  0034BE  6EF6               	movwf	tblptrl,c
 32002  0034C0  0E8D               	movlw	high _checked_line1
 32003  0034C2  20F4               	addwfc	prodh,w,c
 32004  0034C4  6EF7               	movwf	tblptrh,c
 32005  0034C6                     	if	1	;There are 3 active tblptr bytes
 32006  0034C6  6AF8               	clrf	tblptru,c
 32007  0034C8  0E00               	movlw	low (__mediumconst shr (0+16))
 32008  0034CA  22F8               	addwfc	tblptru,f,c
 32009  0034CC                     	endif
 32010  0034CC  5022               	movf	__display_checked@cntr,w,c
 32011  0034CE  0D01               	mullw	1
 32012  0034D0  0E00               	movlw	low _display_content
 32013  0034D2  24F3               	addwf	prodl,w,c
 32014  0034D4  6ED9               	movwf	fsr2l,c
 32015  0034D6  0E02               	movlw	high _display_content
 32016  0034D8  20F4               	addwfc	prodh,w,c
 32017  0034DA  6EDA               	movwf	fsr2h,c
 32018  0034DC  0008               	tblrd		*
 32019  0034DE  CFF5 FFDF          	movff	tablat,indf2
 32020  0034E2  2A22               	incf	__display_checked@cntr,f,c
 32021  0034E4                     l1622:
 32022  0034E4  5022               	movf	__display_checked@cntr,w,c
 32023  0034E6  0D01               	mullw	1
 32024  0034E8  0EB4               	movlw	low _checked_line1
 32025  0034EA  24F3               	addwf	prodl,w,c
 32026  0034EC  6EF6               	movwf	tblptrl,c
 32027  0034EE  0E8D               	movlw	high _checked_line1
 32028  0034F0  20F4               	addwfc	prodh,w,c
 32029  0034F2  6EF7               	movwf	tblptrh,c
 32030  0034F4                     	if	1	;There are 3 active tblptr bytes
 32031  0034F4  6AF8               	clrf	tblptru,c
 32032  0034F6  0E00               	movlw	low (__mediumconst shr (0+16))
 32033  0034F8  22F8               	addwfc	tblptru,f,c
 32034  0034FA                     	endif
 32035  0034FA  0008               	tblrd		*
 32036  0034FC  50F5               	movf	tablat,w,c
 32037  0034FE  0900               	iorlw	0
 32038  003500  A4D8               	btfss	status,2,c
 32039  003502  D7D9               	goto	l1623
 32040                           
 32041                           ;display.c: 440: cntr = 0;
 32042  003504  0E00               	movlw	0
 32043  003506  6E22               	movwf	__display_checked@cntr,c
 32044                           
 32045                           ;display.c: 441: while(checked_line2[cntr])
 32046  003508  D017               	goto	l1625
 32047  00350A                     
 32048                           ;display.c: 442: display_content[1][cntr] = checked_line2[cntr++];
 32049  00350A  5022               	movf	__display_checked@cntr,w,c
 32050  00350C  0D01               	mullw	1
 32051  00350E  0E99               	movlw	low _checked_line2
 32052  003510  24F3               	addwf	prodl,w,c
 32053  003512  6EF6               	movwf	tblptrl,c
 32054  003514  0E8C               	movlw	high _checked_line2
 32055  003516  20F4               	addwfc	prodh,w,c
 32056  003518  6EF7               	movwf	tblptrh,c
 32057  00351A                     	if	1	;There are 3 active tblptr bytes
 32058  00351A  6AF8               	clrf	tblptru,c
 32059  00351C  0E00               	movlw	low (__mediumconst shr (0+16))
 32060  00351E  22F8               	addwfc	tblptru,f,c
 32061  003520                     	endif
 32062  003520  5022               	movf	__display_checked@cntr,w,c
 32063  003522  0D01               	mullw	1
 32064  003524  0E14               	movlw	low (_display_content+20)
 32065  003526  24F3               	addwf	prodl,w,c
 32066  003528  6ED9               	movwf	fsr2l,c
 32067  00352A  0E02               	movlw	high (_display_content+20)
 32068  00352C  20F4               	addwfc	prodh,w,c
 32069  00352E  6EDA               	movwf	fsr2h,c
 32070  003530  0008               	tblrd		*
 32071  003532  CFF5 FFDF          	movff	tablat,indf2
 32072  003536  2A22               	incf	__display_checked@cntr,f,c
 32073  003538                     l1625:
 32074  003538  5022               	movf	__display_checked@cntr,w,c
 32075  00353A  0D01               	mullw	1
 32076  00353C  0E99               	movlw	low _checked_line2
 32077  00353E  24F3               	addwf	prodl,w,c
 32078  003540  6EF6               	movwf	tblptrl,c
 32079  003542  0E8C               	movlw	high _checked_line2
 32080  003544  20F4               	addwfc	prodh,w,c
 32081  003546  6EF7               	movwf	tblptrh,c
 32082  003548                     	if	1	;There are 3 active tblptr bytes
 32083  003548  6AF8               	clrf	tblptru,c
 32084  00354A  0E00               	movlw	low (__mediumconst shr (0+16))
 32085  00354C  22F8               	addwfc	tblptru,f,c
 32086  00354E                     	endif
 32087  00354E  0008               	tblrd		*
 32088  003550  50F5               	movf	tablat,w,c
 32089  003552  0900               	iorlw	0
 32090  003554  A4D8               	btfss	status,2,c
 32091  003556  D7D9               	goto	l1626
 32092                           
 32093                           ;display.c: 444: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 32094  003558  ECDA  F040         	call	_bootloader_get_total_entries	;wreg free
 32095  00355C  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 32096  003560  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 32097  003564  6A1B               	clrf	__display_itoa_u16@value+2,c
 32098  003566  6A1C               	clrf	__display_itoa_u16@value+3,c
 32099  003568  0E28               	movlw	low (_display_content+40)
 32100  00356A  6E1D               	movwf	__display_itoa_u16@text,c
 32101  00356C  0E02               	movlw	high (_display_content+40)
 32102  00356E  6E1E               	movwf	__display_itoa_u16@text+1,c
 32103  003570  EC79  F02A         	call	__display_itoa_u16	;wreg free
 32104  003574  6E21               	movwf	__display_checked@start,c
 32105                           
 32106                           ;display.c: 445: start++;
 32107  003576  2A21               	incf	__display_checked@start,f,c
 32108                           
 32109                           ;display.c: 446: cntr = 0;
 32110  003578  0E00               	movlw	0
 32111  00357A  6E22               	movwf	__display_checked@cntr,c
 32112                           
 32113                           ;display.c: 447: while(checked_line3[cntr])
 32114  00357C  D01C               	goto	l1628
 32115  00357E                     
 32116                           ;display.c: 448: display_content[2][start+cntr] = checked_line3[cntr++];
 32117  00357E  5022               	movf	__display_checked@cntr,w,c
 32118  003580  0D01               	mullw	1
 32119  003582  0E73               	movlw	low _checked_line3
 32120  003584  24F3               	addwf	prodl,w,c
 32121  003586  6EF6               	movwf	tblptrl,c
 32122  003588  0E8E               	movlw	high _checked_line3
 32123  00358A  20F4               	addwfc	prodh,w,c
 32124  00358C  6EF7               	movwf	tblptrh,c
 32125  00358E                     	if	1	;There are 3 active tblptr bytes
 32126  00358E  6AF8               	clrf	tblptru,c
 32127  003590  0E00               	movlw	low (__mediumconst shr (0+16))
 32128  003592  22F8               	addwfc	tblptru,f,c
 32129  003594                     	endif
 32130  003594  5022               	movf	__display_checked@cntr,w,c
 32131  003596  C021  F01F         	movff	__display_checked@start,??__display_checked
 32132  00359A  6A20               	clrf	(??__display_checked+1)& (0+255),c
 32133  00359C  261F               	addwf	??__display_checked,f,c
 32134  00359E  0E00               	movlw	0
 32135  0035A0  2220               	addwfc	??__display_checked+1,f,c
 32136  0035A2  0E28               	movlw	low (_display_content+40)
 32137  0035A4  241F               	addwf	??__display_checked,w,c
 32138  0035A6  6ED9               	movwf	fsr2l,c
 32139  0035A8  0E02               	movlw	high (_display_content+40)
 32140  0035AA  2020               	addwfc	??__display_checked+1,w,c
 32141  0035AC  6EDA               	movwf	fsr2h,c
 32142  0035AE  0008               	tblrd		*
 32143  0035B0  CFF5 FFDF          	movff	tablat,indf2
 32144  0035B4  2A22               	incf	__display_checked@cntr,f,c
 32145  0035B6                     l1628:
 32146  0035B6  5022               	movf	__display_checked@cntr,w,c
 32147  0035B8  0D01               	mullw	1
 32148  0035BA  0E73               	movlw	low _checked_line3
 32149  0035BC  24F3               	addwf	prodl,w,c
 32150  0035BE  6EF6               	movwf	tblptrl,c
 32151  0035C0  0E8E               	movlw	high _checked_line3
 32152  0035C2  20F4               	addwfc	prodh,w,c
 32153  0035C4  6EF7               	movwf	tblptrh,c
 32154  0035C6                     	if	1	;There are 3 active tblptr bytes
 32155  0035C6  6AF8               	clrf	tblptru,c
 32156  0035C8  0E00               	movlw	low (__mediumconst shr (0+16))
 32157  0035CA  22F8               	addwfc	tblptru,f,c
 32158  0035CC                     	endif
 32159  0035CC  0008               	tblrd		*
 32160  0035CE  50F5               	movf	tablat,w,c
 32161  0035D0  0900               	iorlw	0
 32162  0035D2  A4D8               	btfss	status,2,c
 32163  0035D4  D7D4               	goto	l1629
 32164                           
 32165                           ;display.c: 450: cntr = 0;
 32166  0035D6  0E00               	movlw	0
 32167  0035D8  6E22               	movwf	__display_checked@cntr,c
 32168                           
 32169                           ;display.c: 451: while(checked_line4[cntr])
 32170  0035DA  D017               	goto	l1631
 32171  0035DC                     
 32172                           ;display.c: 452: display_content[3][cntr] = checked_line4[cntr++];
 32173  0035DC  5022               	movf	__display_checked@cntr,w,c
 32174  0035DE  0D01               	mullw	1
 32175  0035E0  0E32               	movlw	low _checked_line4
 32176  0035E2  24F3               	addwf	prodl,w,c
 32177  0035E4  6EF6               	movwf	tblptrl,c
 32178  0035E6  0E8D               	movlw	high _checked_line4
 32179  0035E8  20F4               	addwfc	prodh,w,c
 32180  0035EA  6EF7               	movwf	tblptrh,c
 32181  0035EC                     	if	1	;There are 3 active tblptr bytes
 32182  0035EC  6AF8               	clrf	tblptru,c
 32183  0035EE  0E00               	movlw	low (__mediumconst shr (0+16))
 32184  0035F0  22F8               	addwfc	tblptru,f,c
 32185  0035F2                     	endif
 32186  0035F2  5022               	movf	__display_checked@cntr,w,c
 32187  0035F4  0D01               	mullw	1
 32188  0035F6  0E3C               	movlw	low (_display_content+60)
 32189  0035F8  24F3               	addwf	prodl,w,c
 32190  0035FA  6ED9               	movwf	fsr2l,c
 32191  0035FC  0E02               	movlw	high (_display_content+60)
 32192  0035FE  20F4               	addwfc	prodh,w,c
 32193  003600  6EDA               	movwf	fsr2h,c
 32194  003602  0008               	tblrd		*
 32195  003604  CFF5 FFDF          	movff	tablat,indf2
 32196  003608  2A22               	incf	__display_checked@cntr,f,c
 32197  00360A                     l1631:
 32198  00360A  5022               	movf	__display_checked@cntr,w,c
 32199  00360C  0D01               	mullw	1
 32200  00360E  0E32               	movlw	low _checked_line4
 32201  003610  24F3               	addwf	prodl,w,c
 32202  003612  6EF6               	movwf	tblptrl,c
 32203  003614  0E8D               	movlw	high _checked_line4
 32204  003616  20F4               	addwfc	prodh,w,c
 32205  003618  6EF7               	movwf	tblptrh,c
 32206  00361A                     	if	1	;There are 3 active tblptr bytes
 32207  00361A  6AF8               	clrf	tblptru,c
 32208  00361C  0E00               	movlw	low (__mediumconst shr (0+16))
 32209  00361E  22F8               	addwfc	tblptru,f,c
 32210  003620                     	endif
 32211  003620  0008               	tblrd		*
 32212  003622  50F5               	movf	tablat,w,c
 32213  003624  0900               	iorlw	0
 32214  003626  B4D8               	btfsc	status,2,c
 32215  003628  0012               	return	
 32216  00362A  D7D8               	goto	l1632
 32217  00362C                     __end_of__display_checked:
 32218                           	opt stack 0
 32219                           tosu	equ	0xFFF
 32220                           tosh	equ	0xFFE
 32221                           tosl	equ	0xFFD
 32222                           pclath	equ	0xFFA
 32223                           tblptru	equ	0xFF8
 32224                           tblptrh	equ	0xFF7
 32225                           tblptrl	equ	0xFF6
 32226                           tablat	equ	0xFF5
 32227                           prodh	equ	0xFF4
 32228                           prodl	equ	0xFF3
 32229                           intcon	equ	0xFF2
 32230                           intcon2	equ	0xFF1
 32231                           intcon3	equ	0xFF0
 32232                           indf0	equ	0xFEF
 32233                           postinc0	equ	0xFEE
 32234                           fsr0h	equ	0xFEA
 32235                           fsr0l	equ	0xFE9
 32236                           wreg	equ	0xFE8
 32237                           indf1	equ	0xFE7
 32238                           postdec1	equ	0xFE5
 32239                           plusw1	equ	0xFE3
 32240                           fsr1h	equ	0xFE2
 32241                           fsr1l	equ	0xFE1
 32242                           indf2	equ	0xFDF
 32243                           postinc2	equ	0xFDE
 32244                           postdec2	equ	0xFDD
 32245                           plusw2	equ	0xFDB
 32246                           fsr2h	equ	0xFDA
 32247                           fsr2l	equ	0xFD9
 32248                           status	equ	0xFD8
 32249                           
 32250 ;; *************** function _bootloader_get_total_entries *****************
 32251 ;; Defined at:
 32252 ;;		line 467 in file "bootloader.c"
 32253 ;; Parameters:    Size  Location     Type
 32254 ;;		None
 32255 ;; Auto vars:     Size  Location     Type
 32256 ;;		None
 32257 ;; Return value:  Size  Location     Type
 32258 ;;                  2    0[COMRAM] unsigned int 
 32259 ;; Registers used:
 32260 ;;		None
 32261 ;; Tracked objects:
 32262 ;;		On entry : 0/0
 32263 ;;		On exit  : 0/0
 32264 ;;		Unchanged: 0/0
 32265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32270 ;;Total ram usage:        2 bytes
 32271 ;; Hardware stack levels used:    1
 32272 ;; This function calls:
 32273 ;;		Nothing
 32274 ;; This function is called by:
 32275 ;;		__display_checked
 32276 ;;		__display_programming
 32277 ;;		__fill_buffer_get_bootloader_details
 32278 ;; This function uses a non-reentrant model
 32279 ;;
 32280                           
 32281                           	psect	text155
 32282  0081B4                     __ptext155:
 32283                           	opt stack 0
 32284  0081B4                     _bootloader_get_total_entries:
 32285                           	opt stack 25
 32286                           
 32287                           ;bootloader.c: 469: return total_hex_file_entries;
 32288                           
 32289                           ;incstack = 0
 32290  0081B4  C172  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 32291  0081B8  C173  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 32292  0081BC  0012               	return		;funcret
 32293  0081BE                     __end_of_bootloader_get_total_entries:
 32294                           	opt stack 0
 32295                           tosu	equ	0xFFF
 32296                           tosh	equ	0xFFE
 32297                           tosl	equ	0xFFD
 32298                           pclath	equ	0xFFA
 32299                           tblptru	equ	0xFF8
 32300                           tblptrh	equ	0xFF7
 32301                           tblptrl	equ	0xFF6
 32302                           tablat	equ	0xFF5
 32303                           prodh	equ	0xFF4
 32304                           prodl	equ	0xFF3
 32305                           intcon	equ	0xFF2
 32306                           intcon2	equ	0xFF1
 32307                           intcon3	equ	0xFF0
 32308                           indf0	equ	0xFEF
 32309                           postinc0	equ	0xFEE
 32310                           fsr0h	equ	0xFEA
 32311                           fsr0l	equ	0xFE9
 32312                           wreg	equ	0xFE8
 32313                           indf1	equ	0xFE7
 32314                           postdec1	equ	0xFE5
 32315                           plusw1	equ	0xFE3
 32316                           fsr1h	equ	0xFE2
 32317                           fsr1l	equ	0xFE1
 32318                           indf2	equ	0xFDF
 32319                           postinc2	equ	0xFDE
 32320                           postdec2	equ	0xFDD
 32321                           plusw2	equ	0xFDB
 32322                           fsr2h	equ	0xFDA
 32323                           fsr2l	equ	0xFD9
 32324                           status	equ	0xFD8
 32325                           
 32326 ;; *************** function __display_itoa_u16 *****************
 32327 ;; Defined at:
 32328 ;;		line 88 in file "display.c"
 32329 ;; Parameters:    Size  Location     Type
 32330 ;;  value           4   24[COMRAM] unsigned long 
 32331 ;;  text            2   28[COMRAM] PTR unsigned char 
 32332 ;;		 -> display_content(80), 
 32333 ;; Auto vars:     Size  Location     Type
 32334 ;;		None
 32335 ;; Return value:  Size  Location     Type
 32336 ;;                  1    wreg      unsigned char 
 32337 ;; Registers used:
 32338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32339 ;; Tracked objects:
 32340 ;;		On entry : 0/0
 32341 ;;		On exit  : 0/0
 32342 ;;		Unchanged: 0/0
 32343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32344 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32347 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32348 ;;Total ram usage:        6 bytes
 32349 ;; Hardware stack levels used:    1
 32350 ;; Hardware stack levels required when called:    3
 32351 ;; This function calls:
 32352 ;;		_itoa
 32353 ;; This function is called by:
 32354 ;;		__display_itoa_u32
 32355 ;;		__display_verify
 32356 ;;		__display_checked
 32357 ;;		__display_failed
 32358 ;;		__display_programming
 32359 ;;		__display_done
 32360 ;; This function uses a non-reentrant model
 32361 ;;
 32362                           
 32363                           	psect	text156
 32364  0054F2                     __ptext156:
 32365                           	opt stack 0
 32366  0054F2                     __display_itoa_u16:
 32367                           	opt stack 22
 32368                           
 32369                           ;display.c: 90: itoa(text, value, 10);
 32370                           
 32371                           ;incstack = 0
 32372  0054F2  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 32373  0054F6  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 32374  0054FA  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 32375  0054FE  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 32376  005502  0E00               	movlw	0
 32377  005504  6E16               	movwf	itoa@base+1,c
 32378  005506  0E0A               	movlw	10
 32379  005508  6E15               	movwf	itoa@base,c
 32380  00550A  EC44  F03C         	call	_itoa	;wreg free
 32381                           
 32382                           ;display.c: 91: if(value>9999)
 32383  00550E  501C               	movf	__display_itoa_u16@value+3,w,c
 32384  005510  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32385  005512  E106               	bnz	u6720
 32386  005514  0E10               	movlw	16
 32387  005516  5C19               	subwf	__display_itoa_u16@value,w,c
 32388  005518  0E27               	movlw	39
 32389  00551A  581A               	subwfb	__display_itoa_u16@value+1,w,c
 32390  00551C  A0D8               	btfss	status,0,c
 32391  00551E  D00A               	goto	l1471
 32392  005520                     u6720:
 32393                           
 32394                           ;display.c: 92: {;display.c: 93: *(text+5) = ' ';
 32395  005520  EE20 F005          	lfsr	2,5
 32396  005524  501D               	movf	__display_itoa_u16@text,w,c
 32397  005526  26D9               	addwf	fsr2l,f,c
 32398  005528  501E               	movf	__display_itoa_u16@text+1,w,c
 32399  00552A  22DA               	addwfc	fsr2h,f,c
 32400  00552C  0E20               	movlw	32
 32401  00552E  6EDF               	movwf	indf2,c
 32402                           
 32403                           ;display.c: 94: return 5;
 32404  005530  0E05               	movlw	5
 32405                           
 32406                           ;display.c: 95: }
 32407  005532  0012               	return	
 32408  005534                     l1471:
 32409                           
 32410                           ;display.c: 96: else if (value>999)
 32411  005534  501C               	movf	__display_itoa_u16@value+3,w,c
 32412  005536  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32413  005538  E106               	bnz	u6730
 32414  00553A  0EE8               	movlw	232
 32415  00553C  5C19               	subwf	__display_itoa_u16@value,w,c
 32416  00553E  0E03               	movlw	3
 32417  005540  581A               	subwfb	__display_itoa_u16@value+1,w,c
 32418  005542  A0D8               	btfss	status,0,c
 32419  005544  D00A               	goto	l1474
 32420  005546                     u6730:
 32421                           
 32422                           ;display.c: 97: {;display.c: 98: *(text+4) = ' ';
 32423  005546  EE20 F004          	lfsr	2,4
 32424  00554A  501D               	movf	__display_itoa_u16@text,w,c
 32425  00554C  26D9               	addwf	fsr2l,f,c
 32426  00554E  501E               	movf	__display_itoa_u16@text+1,w,c
 32427  005550  22DA               	addwfc	fsr2h,f,c
 32428  005552  0E20               	movlw	32
 32429  005554  6EDF               	movwf	indf2,c
 32430                           
 32431                           ;display.c: 99: return 4;
 32432  005556  0E04               	movlw	4
 32433                           
 32434                           ;display.c: 100: }
 32435  005558  0012               	return	
 32436  00555A                     l1474:
 32437                           
 32438                           ;display.c: 101: else if (value>99)
 32439  00555A  501C               	movf	__display_itoa_u16@value+3,w,c
 32440  00555C  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32441  00555E  101A               	iorwf	__display_itoa_u16@value+1,w,c
 32442  005560  E104               	bnz	u6740
 32443  005562  0E64               	movlw	100
 32444  005564  5C19               	subwf	__display_itoa_u16@value,w,c
 32445  005566  A0D8               	btfss	status,0,c
 32446  005568  D00A               	goto	l1476
 32447  00556A                     u6740:
 32448                           
 32449                           ;display.c: 102: {;display.c: 103: *(text+3) = ' ';
 32450  00556A  EE20 F003          	lfsr	2,3
 32451  00556E  501D               	movf	__display_itoa_u16@text,w,c
 32452  005570  26D9               	addwf	fsr2l,f,c
 32453  005572  501E               	movf	__display_itoa_u16@text+1,w,c
 32454  005574  22DA               	addwfc	fsr2h,f,c
 32455  005576  0E20               	movlw	32
 32456  005578  6EDF               	movwf	indf2,c
 32457                           
 32458                           ;display.c: 104: return 3;
 32459  00557A  0E03               	movlw	3
 32460                           
 32461                           ;display.c: 105: }
 32462  00557C  0012               	return	
 32463  00557E                     l1476:
 32464                           
 32465                           ;display.c: 106: else if (value>9)
 32466  00557E  501C               	movf	__display_itoa_u16@value+3,w,c
 32467  005580  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32468  005582  101A               	iorwf	__display_itoa_u16@value+1,w,c
 32469  005584  E104               	bnz	u6750
 32470  005586  0E0A               	movlw	10
 32471  005588  5C19               	subwf	__display_itoa_u16@value,w,c
 32472  00558A  A0D8               	btfss	status,0,c
 32473  00558C  D00A               	goto	l1478
 32474  00558E                     u6750:
 32475                           
 32476                           ;display.c: 107: {;display.c: 108: *(text+2) = ' ';
 32477  00558E  EE20 F002          	lfsr	2,2
 32478  005592  501D               	movf	__display_itoa_u16@text,w,c
 32479  005594  26D9               	addwf	fsr2l,f,c
 32480  005596  501E               	movf	__display_itoa_u16@text+1,w,c
 32481  005598  22DA               	addwfc	fsr2h,f,c
 32482  00559A  0E20               	movlw	32
 32483  00559C  6EDF               	movwf	indf2,c
 32484                           
 32485                           ;display.c: 109: return 2;
 32486  00559E  0E02               	movlw	2
 32487                           
 32488                           ;display.c: 110: }
 32489  0055A0  0012               	return	
 32490  0055A2                     l1478:
 32491                           
 32492                           ;display.c: 111: else;display.c: 112: {;display.c: 113: *(text+1) = ' ';
 32493  0055A2  EE20 F001          	lfsr	2,1
 32494  0055A6  501D               	movf	__display_itoa_u16@text,w,c
 32495  0055A8  26D9               	addwf	fsr2l,f,c
 32496  0055AA  501E               	movf	__display_itoa_u16@text+1,w,c
 32497  0055AC  22DA               	addwfc	fsr2h,f,c
 32498  0055AE  0E20               	movlw	32
 32499  0055B0  6EDF               	movwf	indf2,c
 32500                           
 32501                           ;display.c: 114: return 1;
 32502  0055B2  0E01               	movlw	1
 32503  0055B4  0012               	return	
 32504  0055B6                     __end_of__display_itoa_u16:
 32505                           	opt stack 0
 32506                           tosu	equ	0xFFF
 32507                           tosh	equ	0xFFE
 32508                           tosl	equ	0xFFD
 32509                           pclath	equ	0xFFA
 32510                           tblptru	equ	0xFF8
 32511                           tblptrh	equ	0xFF7
 32512                           tblptrl	equ	0xFF6
 32513                           tablat	equ	0xFF5
 32514                           prodh	equ	0xFF4
 32515                           prodl	equ	0xFF3
 32516                           intcon	equ	0xFF2
 32517                           intcon2	equ	0xFF1
 32518                           intcon3	equ	0xFF0
 32519                           indf0	equ	0xFEF
 32520                           postinc0	equ	0xFEE
 32521                           fsr0h	equ	0xFEA
 32522                           fsr0l	equ	0xFE9
 32523                           wreg	equ	0xFE8
 32524                           indf1	equ	0xFE7
 32525                           postdec1	equ	0xFE5
 32526                           plusw1	equ	0xFE3
 32527                           fsr1h	equ	0xFE2
 32528                           fsr1l	equ	0xFE1
 32529                           indf2	equ	0xFDF
 32530                           postinc2	equ	0xFDE
 32531                           postdec2	equ	0xFDD
 32532                           plusw2	equ	0xFDB
 32533                           fsr2h	equ	0xFDA
 32534                           fsr2l	equ	0xFD9
 32535                           status	equ	0xFD8
 32536                           
 32537 ;; *************** function _itoa *****************
 32538 ;; Defined at:
 32539 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 32540 ;; Parameters:    Size  Location     Type
 32541 ;;  buf             2   16[COMRAM] PTR unsigned char 
 32542 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32543 ;;  val             2   18[COMRAM] int 
 32544 ;;  base            2   20[COMRAM] int 
 32545 ;; Auto vars:     Size  Location     Type
 32546 ;;  cp              2   22[COMRAM] PTR unsigned char 
 32547 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32548 ;; Return value:  Size  Location     Type
 32549 ;;                  2   16[COMRAM] PTR unsigned char 
 32550 ;; Registers used:
 32551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32552 ;; Tracked objects:
 32553 ;;		On entry : 0/0
 32554 ;;		On exit  : 0/0
 32555 ;;		Unchanged: 0/0
 32556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32557 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32558 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32560 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32561 ;;Total ram usage:        8 bytes
 32562 ;; Hardware stack levels used:    1
 32563 ;; Hardware stack levels required when called:    2
 32564 ;; This function calls:
 32565 ;;		_utoa
 32566 ;; This function is called by:
 32567 ;;		__display_itoa_u16
 32568 ;;		__display_itoa_u32
 32569 ;;		__display_itoa
 32570 ;; This function uses a non-reentrant model
 32571 ;;
 32572                           
 32573                           	psect	text157
 32574  007888                     __ptext157:
 32575                           	opt stack 0
 32576  007888                     _itoa:
 32577                           	opt stack 22
 32578                           
 32579                           ;incstack = 0
 32580  007888  C011  F017         	movff	itoa@buf,itoa@cp
 32581  00788C  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 32582  007890  AE14               	btfss	itoa@val+1,7,c
 32583  007892  D00C               	goto	l3515
 32584  007894  C011  FFD9         	movff	itoa@buf,fsr2l
 32585  007898  C012  FFDA         	movff	itoa@buf+1,fsr2h
 32586  00789C  0E2D               	movlw	45
 32587  00789E  6EDF               	movwf	indf2,c
 32588  0078A0  4A11               	infsnz	itoa@buf,f,c
 32589  0078A2  2A12               	incf	itoa@buf+1,f,c
 32590  0078A4  6C13               	negf	itoa@val,c
 32591  0078A6  1E14               	comf	itoa@val+1,f,c
 32592  0078A8  B0D8               	btfsc	status,0,c
 32593  0078AA  2A14               	incf	itoa@val+1,f,c
 32594  0078AC                     l3515:
 32595  0078AC  C011  F008         	movff	itoa@buf,utoa@buf
 32596  0078B0  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 32597  0078B4  C013  F00A         	movff	itoa@val,utoa@val
 32598  0078B8  C014  F00B         	movff	itoa@val+1,utoa@val+1
 32599  0078BC  C015  F00C         	movff	itoa@base,utoa@base
 32600  0078C0  C016  F00D         	movff	itoa@base+1,utoa@base+1
 32601  0078C4  EC55  F02E         	call	_utoa	;wreg free
 32602  0078C8  0012               	return	
 32603  0078CA                     __end_of_itoa:
 32604                           	opt stack 0
 32605                           tosu	equ	0xFFF
 32606                           tosh	equ	0xFFE
 32607                           tosl	equ	0xFFD
 32608                           pclath	equ	0xFFA
 32609                           tblptru	equ	0xFF8
 32610                           tblptrh	equ	0xFF7
 32611                           tblptrl	equ	0xFF6
 32612                           tablat	equ	0xFF5
 32613                           prodh	equ	0xFF4
 32614                           prodl	equ	0xFF3
 32615                           intcon	equ	0xFF2
 32616                           intcon2	equ	0xFF1
 32617                           intcon3	equ	0xFF0
 32618                           indf0	equ	0xFEF
 32619                           postinc0	equ	0xFEE
 32620                           fsr0h	equ	0xFEA
 32621                           fsr0l	equ	0xFE9
 32622                           wreg	equ	0xFE8
 32623                           indf1	equ	0xFE7
 32624                           postdec1	equ	0xFE5
 32625                           plusw1	equ	0xFE3
 32626                           fsr1h	equ	0xFE2
 32627                           fsr1l	equ	0xFE1
 32628                           indf2	equ	0xFDF
 32629                           postinc2	equ	0xFDE
 32630                           postdec2	equ	0xFDD
 32631                           plusw2	equ	0xFDB
 32632                           fsr2h	equ	0xFDA
 32633                           fsr2l	equ	0xFD9
 32634                           status	equ	0xFD8
 32635                           
 32636 ;; *************** function _utoa *****************
 32637 ;; Defined at:
 32638 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 32639 ;; Parameters:    Size  Location     Type
 32640 ;;  buf             2    7[COMRAM] PTR unsigned char 
 32641 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32642 ;;  val             2    9[COMRAM] unsigned int 
 32643 ;;  base            2   11[COMRAM] int 
 32644 ;; Auto vars:     Size  Location     Type
 32645 ;;  v               2   13[COMRAM] unsigned int 
 32646 ;;  c               1   15[COMRAM] unsigned char 
 32647 ;; Return value:  Size  Location     Type
 32648 ;;                  2    7[COMRAM] PTR unsigned char 
 32649 ;; Registers used:
 32650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32651 ;; Tracked objects:
 32652 ;;		On entry : 0/0
 32653 ;;		On exit  : 0/0
 32654 ;;		Unchanged: 0/0
 32655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32656 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32657 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32659 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32660 ;;Total ram usage:        9 bytes
 32661 ;; Hardware stack levels used:    1
 32662 ;; Hardware stack levels required when called:    1
 32663 ;; This function calls:
 32664 ;;		___lwdiv
 32665 ;;		___lwmod
 32666 ;; This function is called by:
 32667 ;;		_itoa
 32668 ;; This function uses a non-reentrant model
 32669 ;;
 32670                           
 32671                           	psect	text158
 32672  005CAA                     __ptext158:
 32673                           	opt stack 0
 32674  005CAA                     _utoa:
 32675                           	opt stack 22
 32676                           
 32677                           ;incstack = 0
 32678  005CAA  C00A  F00E         	movff	utoa@val,utoa@v
 32679  005CAE  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 32680  005CB2  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 32681  005CB6  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 32682  005CBA  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 32683  005CBE  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 32684  005CC2  ECF3  F03A         	call	___lwdiv	;wreg free
 32685  005CC6  C001  F00E         	movff	?___lwdiv,utoa@v
 32686  005CCA  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 32687  005CCE  4A08               	infsnz	utoa@buf,f,c
 32688  005CD0  2A09               	incf	utoa@buf+1,f,c
 32689  005CD2  500E               	movf	utoa@v,w,c
 32690  005CD4  100F               	iorwf	utoa@v+1,w,c
 32691  005CD6  A4D8               	btfss	status,2,c
 32692  005CD8  D7EC               	goto	l3519
 32693  005CDA  C008  FFD9         	movff	utoa@buf,fsr2l
 32694  005CDE  C009  FFDA         	movff	utoa@buf+1,fsr2h
 32695  005CE2  0E00               	movlw	0
 32696  005CE4  6EDF               	movwf	indf2,c
 32697  005CE6  0608               	decf	utoa@buf,f,c
 32698  005CE8  A0D8               	btfss	status,0,c
 32699  005CEA  0609               	decf	utoa@buf+1,f,c
 32700  005CEC  C00A  F001         	movff	utoa@val,___lwmod@dividend
 32701  005CF0  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 32702  005CF4  C00C  F003         	movff	utoa@base,___lwmod@divisor
 32703  005CF8  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 32704  005CFC  EC65  F03C         	call	___lwmod	;wreg free
 32705  005D00  5001               	movf	?___lwmod,w,c
 32706  005D02  6E10               	movwf	utoa@c,c
 32707  005D04  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 32708  005D08  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 32709  005D0C  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 32710  005D10  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 32711  005D14  ECF3  F03A         	call	___lwdiv	;wreg free
 32712  005D18  C001  F00A         	movff	?___lwdiv,utoa@val
 32713  005D1C  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 32714  005D20  0E09               	movlw	9
 32715  005D22  6410               	cpfsgt	utoa@c,c
 32716  005D24  D002               	goto	l3522
 32717  005D26  0E07               	movlw	7
 32718  005D28  2610               	addwf	utoa@c,f,c
 32719  005D2A                     l3522:
 32720  005D2A  0E30               	movlw	48
 32721  005D2C  2610               	addwf	utoa@c,f,c
 32722  005D2E  C008  FFD9         	movff	utoa@buf,fsr2l
 32723  005D32  C009  FFDA         	movff	utoa@buf+1,fsr2h
 32724  005D36  C010  FFDF         	movff	utoa@c,indf2
 32725  005D3A  0608               	decf	utoa@buf,f,c
 32726  005D3C  A0D8               	btfss	status,0,c
 32727  005D3E  0609               	decf	utoa@buf+1,f,c
 32728  005D40  500A               	movf	utoa@val,w,c
 32729  005D42  100B               	iorwf	utoa@val+1,w,c
 32730  005D44  A4D8               	btfss	status,2,c
 32731  005D46  D7D2               	goto	l3521
 32732                           
 32733                           ;	Return value of _utoa is never used
 32734  005D48  4A08               	infsnz	utoa@buf,f,c
 32735  005D4A  2A09               	incf	utoa@buf+1,f,c
 32736  005D4C  0012               	return	
 32737  005D4E                     __end_of_utoa:
 32738                           	opt stack 0
 32739                           tosu	equ	0xFFF
 32740                           tosh	equ	0xFFE
 32741                           tosl	equ	0xFFD
 32742                           pclath	equ	0xFFA
 32743                           tblptru	equ	0xFF8
 32744                           tblptrh	equ	0xFF7
 32745                           tblptrl	equ	0xFF6
 32746                           tablat	equ	0xFF5
 32747                           prodh	equ	0xFF4
 32748                           prodl	equ	0xFF3
 32749                           intcon	equ	0xFF2
 32750                           intcon2	equ	0xFF1
 32751                           intcon3	equ	0xFF0
 32752                           indf0	equ	0xFEF
 32753                           postinc0	equ	0xFEE
 32754                           fsr0h	equ	0xFEA
 32755                           fsr0l	equ	0xFE9
 32756                           wreg	equ	0xFE8
 32757                           indf1	equ	0xFE7
 32758                           postdec1	equ	0xFE5
 32759                           plusw1	equ	0xFE3
 32760                           fsr1h	equ	0xFE2
 32761                           fsr1l	equ	0xFE1
 32762                           indf2	equ	0xFDF
 32763                           postinc2	equ	0xFDE
 32764                           postdec2	equ	0xFDD
 32765                           plusw2	equ	0xFDB
 32766                           fsr2h	equ	0xFDA
 32767                           fsr2l	equ	0xFD9
 32768                           status	equ	0xFD8
 32769                           
 32770 ;; *************** function ___lwmod *****************
 32771 ;; Defined at:
 32772 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 32773 ;; Parameters:    Size  Location     Type
 32774 ;;  dividend        2    0[COMRAM] unsigned int 
 32775 ;;  divisor         2    2[COMRAM] unsigned int 
 32776 ;; Auto vars:     Size  Location     Type
 32777 ;;  counter         1    4[COMRAM] unsigned char 
 32778 ;; Return value:  Size  Location     Type
 32779 ;;                  2    0[COMRAM] unsigned int 
 32780 ;; Registers used:
 32781 ;;		wreg, status,2, status,0
 32782 ;; Tracked objects:
 32783 ;;		On entry : 0/0
 32784 ;;		On exit  : 0/0
 32785 ;;		Unchanged: 0/0
 32786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32790 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32791 ;;Total ram usage:        5 bytes
 32792 ;; Hardware stack levels used:    1
 32793 ;; This function calls:
 32794 ;;		Nothing
 32795 ;; This function is called by:
 32796 ;;		_utoa
 32797 ;; This function uses a non-reentrant model
 32798 ;;
 32799                           
 32800                           	psect	text159
 32801  0078CA                     __ptext159:
 32802                           	opt stack 0
 32803  0078CA                     ___lwmod:
 32804                           	opt stack 22
 32805                           
 32806                           ;incstack = 0
 32807  0078CA  5003               	movf	___lwmod@divisor,w,c
 32808  0078CC  1004               	iorwf	___lwmod@divisor+1,w,c
 32809  0078CE  B4D8               	btfsc	status,2,c
 32810  0078D0  D018               	goto	l3346
 32811  0078D2  0E01               	movlw	1
 32812  0078D4  6E05               	movwf	___lwmod@counter,c
 32813  0078D6  D004               	goto	l3341
 32814  0078D8  90D8               	bcf	status,0,c
 32815  0078DA  3603               	rlcf	___lwmod@divisor,f,c
 32816  0078DC  3604               	rlcf	___lwmod@divisor+1,f,c
 32817  0078DE  2A05               	incf	___lwmod@counter,f,c
 32818  0078E0                     l3341:
 32819  0078E0  AE04               	btfss	___lwmod@divisor+1,7,c
 32820  0078E2  D7FA               	goto	l3342
 32821  0078E4                     u6170:
 32822  0078E4  5003               	movf	___lwmod@divisor,w,c
 32823  0078E6  5C01               	subwf	___lwmod@dividend,w,c
 32824  0078E8  5004               	movf	___lwmod@divisor+1,w,c
 32825  0078EA  5802               	subwfb	___lwmod@dividend+1,w,c
 32826  0078EC  A0D8               	btfss	status,0,c
 32827  0078EE  D004               	goto	l3345
 32828  0078F0  5003               	movf	___lwmod@divisor,w,c
 32829  0078F2  5E01               	subwf	___lwmod@dividend,f,c
 32830  0078F4  5004               	movf	___lwmod@divisor+1,w,c
 32831  0078F6  5A02               	subwfb	___lwmod@dividend+1,f,c
 32832  0078F8                     l3345:
 32833  0078F8  90D8               	bcf	status,0,c
 32834  0078FA  3204               	rrcf	___lwmod@divisor+1,f,c
 32835  0078FC  3203               	rrcf	___lwmod@divisor,f,c
 32836  0078FE  2E05               	decfsz	___lwmod@counter,f,c
 32837  007900  D7F1               	goto	u6170
 32838  007902                     l3346:
 32839  007902  C001  F001         	movff	___lwmod@dividend,?___lwmod
 32840  007906  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 32841  00790A  0012               	return		;funcret
 32842  00790C                     __end_of___lwmod:
 32843                           	opt stack 0
 32844                           tosu	equ	0xFFF
 32845                           tosh	equ	0xFFE
 32846                           tosl	equ	0xFFD
 32847                           pclath	equ	0xFFA
 32848                           tblptru	equ	0xFF8
 32849                           tblptrh	equ	0xFF7
 32850                           tblptrl	equ	0xFF6
 32851                           tablat	equ	0xFF5
 32852                           prodh	equ	0xFF4
 32853                           prodl	equ	0xFF3
 32854                           intcon	equ	0xFF2
 32855                           intcon2	equ	0xFF1
 32856                           intcon3	equ	0xFF0
 32857                           indf0	equ	0xFEF
 32858                           postinc0	equ	0xFEE
 32859                           fsr0h	equ	0xFEA
 32860                           fsr0l	equ	0xFE9
 32861                           wreg	equ	0xFE8
 32862                           indf1	equ	0xFE7
 32863                           postdec1	equ	0xFE5
 32864                           plusw1	equ	0xFE3
 32865                           fsr1h	equ	0xFE2
 32866                           fsr1l	equ	0xFE1
 32867                           indf2	equ	0xFDF
 32868                           postinc2	equ	0xFDE
 32869                           postdec2	equ	0xFDD
 32870                           plusw2	equ	0xFDB
 32871                           fsr2h	equ	0xFDA
 32872                           fsr2l	equ	0xFD9
 32873                           status	equ	0xFD8
 32874                           
 32875 ;; *************** function ___lwdiv *****************
 32876 ;; Defined at:
 32877 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 32878 ;; Parameters:    Size  Location     Type
 32879 ;;  dividend        2    0[COMRAM] unsigned int 
 32880 ;;  divisor         2    2[COMRAM] unsigned int 
 32881 ;; Auto vars:     Size  Location     Type
 32882 ;;  quotient        2    4[COMRAM] unsigned int 
 32883 ;;  counter         1    6[COMRAM] unsigned char 
 32884 ;; Return value:  Size  Location     Type
 32885 ;;                  2    0[COMRAM] unsigned int 
 32886 ;; Registers used:
 32887 ;;		wreg, status,2, status,0
 32888 ;; Tracked objects:
 32889 ;;		On entry : 0/0
 32890 ;;		On exit  : 0/0
 32891 ;;		Unchanged: 0/0
 32892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32894 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32896 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32897 ;;Total ram usage:        7 bytes
 32898 ;; Hardware stack levels used:    1
 32899 ;; This function calls:
 32900 ;;		Nothing
 32901 ;; This function is called by:
 32902 ;;		_utoa
 32903 ;; This function uses a non-reentrant model
 32904 ;;
 32905                           
 32906                           	psect	text160
 32907  0075E6                     __ptext160:
 32908                           	opt stack 0
 32909  0075E6                     ___lwdiv:
 32910                           	opt stack 22
 32911                           
 32912                           ;incstack = 0
 32913  0075E6  0E00               	movlw	0
 32914  0075E8  6E06               	movwf	___lwdiv@quotient+1,c
 32915  0075EA  0E00               	movlw	0
 32916  0075EC  6E05               	movwf	___lwdiv@quotient,c
 32917  0075EE  5003               	movf	___lwdiv@divisor,w,c
 32918  0075F0  1004               	iorwf	___lwdiv@divisor+1,w,c
 32919  0075F2  B4D8               	btfsc	status,2,c
 32920  0075F4  D01C               	goto	l3336
 32921  0075F6  0E01               	movlw	1
 32922  0075F8  6E07               	movwf	___lwdiv@counter,c
 32923  0075FA  D004               	goto	l3331
 32924  0075FC  90D8               	bcf	status,0,c
 32925  0075FE  3603               	rlcf	___lwdiv@divisor,f,c
 32926  007600  3604               	rlcf	___lwdiv@divisor+1,f,c
 32927  007602  2A07               	incf	___lwdiv@counter,f,c
 32928  007604                     l3331:
 32929  007604  AE04               	btfss	___lwdiv@divisor+1,7,c
 32930  007606  D7FA               	goto	l3332
 32931  007608                     u6140:
 32932  007608  90D8               	bcf	status,0,c
 32933  00760A  3605               	rlcf	___lwdiv@quotient,f,c
 32934  00760C  3606               	rlcf	___lwdiv@quotient+1,f,c
 32935  00760E  5003               	movf	___lwdiv@divisor,w,c
 32936  007610  5C01               	subwf	___lwdiv@dividend,w,c
 32937  007612  5004               	movf	___lwdiv@divisor+1,w,c
 32938  007614  5802               	subwfb	___lwdiv@dividend+1,w,c
 32939  007616  A0D8               	btfss	status,0,c
 32940  007618  D005               	goto	l3335
 32941  00761A  5003               	movf	___lwdiv@divisor,w,c
 32942  00761C  5E01               	subwf	___lwdiv@dividend,f,c
 32943  00761E  5004               	movf	___lwdiv@divisor+1,w,c
 32944  007620  5A02               	subwfb	___lwdiv@dividend+1,f,c
 32945  007622  8005               	bsf	___lwdiv@quotient,0,c
 32946  007624                     l3335:
 32947  007624  90D8               	bcf	status,0,c
 32948  007626  3204               	rrcf	___lwdiv@divisor+1,f,c
 32949  007628  3203               	rrcf	___lwdiv@divisor,f,c
 32950  00762A  2E07               	decfsz	___lwdiv@counter,f,c
 32951  00762C  D7ED               	goto	u6140
 32952  00762E                     l3336:
 32953  00762E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 32954  007632  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 32955  007636  0012               	return		;funcret
 32956  007638                     __end_of___lwdiv:
 32957                           	opt stack 0
 32958                           tosu	equ	0xFFF
 32959                           tosh	equ	0xFFE
 32960                           tosl	equ	0xFFD
 32961                           pclath	equ	0xFFA
 32962                           tblptru	equ	0xFF8
 32963                           tblptrh	equ	0xFF7
 32964                           tblptrl	equ	0xFF6
 32965                           tablat	equ	0xFF5
 32966                           prodh	equ	0xFF4
 32967                           prodl	equ	0xFF3
 32968                           intcon	equ	0xFF2
 32969                           intcon2	equ	0xFF1
 32970                           intcon3	equ	0xFF0
 32971                           indf0	equ	0xFEF
 32972                           postinc0	equ	0xFEE
 32973                           fsr0h	equ	0xFEA
 32974                           fsr0l	equ	0xFE9
 32975                           wreg	equ	0xFE8
 32976                           indf1	equ	0xFE7
 32977                           postdec1	equ	0xFE5
 32978                           plusw1	equ	0xFE3
 32979                           fsr1h	equ	0xFE2
 32980                           fsr1l	equ	0xFE1
 32981                           indf2	equ	0xFDF
 32982                           postinc2	equ	0xFDE
 32983                           postdec2	equ	0xFDD
 32984                           plusw2	equ	0xFDB
 32985                           fsr2h	equ	0xFDA
 32986                           fsr2l	equ	0xFD9
 32987                           status	equ	0xFD8
 32988                           
 32989 ;; *************** function _i2c_eeprom_writeByte *****************
 32990 ;; Defined at:
 32991 ;;		line 352 in file "i2c.c"
 32992 ;; Parameters:    Size  Location     Type
 32993 ;;  address         2   10[COMRAM] unsigned int 
 32994 ;;  data            1   12[COMRAM] unsigned char 
 32995 ;; Auto vars:     Size  Location     Type
 32996 ;;  dat             2   16[COMRAM] unsigned char [2]
 32997 ;;  slave_addres    1   18[COMRAM] unsigned char 
 32998 ;; Return value:  Size  Location     Type
 32999 ;;                  1    wreg      void 
 33000 ;; Registers used:
 33001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33002 ;; Tracked objects:
 33003 ;;		On entry : 0/0
 33004 ;;		On exit  : 0/0
 33005 ;;		Unchanged: 0/0
 33006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33007 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33008 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33009 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33010 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33011 ;;Total ram usage:        9 bytes
 33012 ;; Hardware stack levels used:    1
 33013 ;; Hardware stack levels required when called:    2
 33014 ;; This function calls:
 33015 ;;		__i2c_write
 33016 ;;		_i2c_set_frequency
 33017 ;; This function is called by:
 33018 ;;		__normal_mode
 33019 ;;		__ui_encoder
 33020 ;;		__parse_command_short
 33021 ;; This function uses a non-reentrant model
 33022 ;;
 33023                           
 33024                           	psect	text161
 33025  00790C                     __ptext161:
 33026                           	opt stack 0
 33027  00790C                     _i2c_eeprom_writeByte:
 33028                           	opt stack 26
 33029                           
 33030                           ;i2c.c: 354: uint8_t slave_address;;i2c.c: 355: uint8_t dat[2];;i2c.c: 357: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 33031                           
 33032                           ;incstack = 0
 33033  00790C  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 33034  007910  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 33035  007914  0E07               	movlw	7
 33036  007916  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 33037  007918                     u9495:
 33038  007918  90D8               	bcf	status,0,c
 33039  00791A  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 33040  00791C  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 33041  00791E  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 33042  007920  D7FB               	goto	u9495
 33043  007922  500E               	movf	??_i2c_eeprom_writeByte,w,c
 33044  007924  0B0E               	andlw	14
 33045  007926  09A0               	iorlw	160
 33046  007928  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 33047                           
 33048                           ;i2c.c: 358: dat[0] = address & 0xFF;
 33049  00792A  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 33050                           
 33051                           ;i2c.c: 359: dat[1] = data;
 33052  00792E  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 33053                           
 33054                           ;i2c.c: 362: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 33055  007932  0E02               	movlw	2
 33056  007934  ECC7  F03E         	call	_i2c_set_frequency
 33057                           
 33058                           ;i2c.c: 364: _i2c_write(slave_address, &dat[0], 2);
 33059  007938  0E11               	movlw	low i2c_eeprom_writeByte@dat
 33060  00793A  6E06               	movwf	__i2c_write@data,c
 33061  00793C  0E00               	movlw	high i2c_eeprom_writeByte@dat
 33062  00793E  6E07               	movwf	__i2c_write@data+1,c
 33063  007940  0E02               	movlw	2
 33064  007942  6E08               	movwf	__i2c_write@length,c
 33065  007944  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 33066  007946  ECB9  F03B         	call	__i2c_write
 33067  00794A  0012               	return		;funcret
 33068  00794C                     __end_of_i2c_eeprom_writeByte:
 33069                           	opt stack 0
 33070                           tosu	equ	0xFFF
 33071                           tosh	equ	0xFFE
 33072                           tosl	equ	0xFFD
 33073                           pclath	equ	0xFFA
 33074                           tblptru	equ	0xFF8
 33075                           tblptrh	equ	0xFF7
 33076                           tblptrl	equ	0xFF6
 33077                           tablat	equ	0xFF5
 33078                           prodh	equ	0xFF4
 33079                           prodl	equ	0xFF3
 33080                           intcon	equ	0xFF2
 33081                           intcon2	equ	0xFF1
 33082                           intcon3	equ	0xFF0
 33083                           indf0	equ	0xFEF
 33084                           postinc0	equ	0xFEE
 33085                           fsr0h	equ	0xFEA
 33086                           fsr0l	equ	0xFE9
 33087                           wreg	equ	0xFE8
 33088                           indf1	equ	0xFE7
 33089                           postdec1	equ	0xFE5
 33090                           plusw1	equ	0xFE3
 33091                           fsr1h	equ	0xFE2
 33092                           fsr1l	equ	0xFE1
 33093                           indf2	equ	0xFDF
 33094                           postinc2	equ	0xFDE
 33095                           postdec2	equ	0xFDD
 33096                           plusw2	equ	0xFDB
 33097                           fsr2h	equ	0xFDA
 33098                           fsr2l	equ	0xFD9
 33099                           status	equ	0xFD8
 33100                           
 33101 ;; *************** function _i2c_set_frequency *****************
 33102 ;; Defined at:
 33103 ;;		line 123 in file "i2c.c"
 33104 ;; Parameters:    Size  Location     Type
 33105 ;;  frequency       1    wreg     enum E6622
 33106 ;; Auto vars:     Size  Location     Type
 33107 ;;  frequency       1    0[COMRAM] enum E6622
 33108 ;; Return value:  Size  Location     Type
 33109 ;;                  1    wreg      void 
 33110 ;; Registers used:
 33111 ;;		wreg, status,2, status,0
 33112 ;; Tracked objects:
 33113 ;;		On entry : 0/0
 33114 ;;		On exit  : 0/0
 33115 ;;		Unchanged: 0/0
 33116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33120 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33121 ;;Total ram usage:        1 bytes
 33122 ;; Hardware stack levels used:    1
 33123 ;; This function calls:
 33124 ;;		Nothing
 33125 ;; This function is called by:
 33126 ;;		_i2c_init
 33127 ;;		__ic2_display_set_address
 33128 ;;		_i2c_display_send_init_sequence
 33129 ;;		_i2c_display_cursor
 33130 ;;		_i2c_display_write_fixed
 33131 ;;		_i2c_digipot_reset_on
 33132 ;;		_i2c_digipot_reset_off
 33133 ;;		_i2c_digipot_backlight
 33134 ;;		_i2c_eeprom_writeByte
 33135 ;;		_i2c_eeprom_readByte
 33136 ;;		_i2c_display_write
 33137 ;;		_i2c_eeprom_write
 33138 ;;		_i2c_eeprom_read
 33139 ;; This function uses a non-reentrant model
 33140 ;;
 33141                           
 33142                           	psect	text162
 33143  007D8E                     __ptext162:
 33144                           	opt stack 0
 33145  007D8E                     _i2c_set_frequency:
 33146                           	opt stack 28
 33147                           
 33148                           ;incstack = 0
 33149                           ;i2c_set_frequency@frequency stored from wreg
 33150  007D8E  6E01               	movwf	i2c_set_frequency@frequency,c
 33151                           
 33152                           ;i2c.c: 125: switch(frequency)
 33153  007D90  D007               	goto	l1195
 33154  007D92                     
 33155                           ;i2c.c: 128: SSP1ADD = 119;
 33156  007D92  0E77               	movlw	119
 33157  007D94  D003               	goto	L34
 33158  007D96                     
 33159                           ;i2c.c: 131: SSP1ADD = 59;
 33160  007D96  0E3B               	movlw	59
 33161  007D98  D001               	goto	L34
 33162  007D9A                     
 33163                           ;i2c.c: 134: SSP1ADD = 29;
 33164  007D9A  0E1D               	movlw	29
 33165  007D9C                     L34:
 33166  007D9C  6EC8               	movwf	4040,c	;volatile
 33167                           
 33168                           ;i2c.c: 136: }
 33169                           
 33170                           ;i2c.c: 135: break;
 33171  007D9E  D00A               	goto	l1197
 33172  007DA0                     l1195:
 33173  007DA0  5001               	movf	i2c_set_frequency@frequency,w,c
 33174                           
 33175                           ; Switch size 1, requested type "space"
 33176                           ; Number of cases is 3, Range of values is 0 to 2
 33177                           ; switch strategies available:
 33178                           ; Name         Instructions Cycles
 33179                           ; simple_byte           10     6 (average)
 33180                           ;	Chosen strategy is simple_byte
 33181  007DA2  0A00               	xorlw	0	; case 0
 33182  007DA4  B4D8               	btfsc	status,2,c
 33183  007DA6  D7F5               	goto	l1196
 33184  007DA8  0A01               	xorlw	1	; case 1
 33185  007DAA  B4D8               	btfsc	status,2,c
 33186  007DAC  D7F4               	goto	l1198
 33187  007DAE  0A03               	xorlw	3	; case 2
 33188  007DB0  B4D8               	btfsc	status,2,c
 33189  007DB2  D7F3               	goto	l1199
 33190  007DB4                     l1197:
 33191                           
 33192                           ;i2c.c: 138: i2c_frequency = frequency;
 33193  007DB4  C001  F187         	movff	i2c_set_frequency@frequency,_i2c_frequency
 33194  007DB8  0012               	return		;funcret
 33195  007DBA                     __end_of_i2c_set_frequency:
 33196                           	opt stack 0
 33197                           tosu	equ	0xFFF
 33198                           tosh	equ	0xFFE
 33199                           tosl	equ	0xFFD
 33200                           pclath	equ	0xFFA
 33201                           tblptru	equ	0xFF8
 33202                           tblptrh	equ	0xFF7
 33203                           tblptrl	equ	0xFF6
 33204                           tablat	equ	0xFF5
 33205                           prodh	equ	0xFF4
 33206                           prodl	equ	0xFF3
 33207                           intcon	equ	0xFF2
 33208                           intcon2	equ	0xFF1
 33209                           intcon3	equ	0xFF0
 33210                           indf0	equ	0xFEF
 33211                           postinc0	equ	0xFEE
 33212                           fsr0h	equ	0xFEA
 33213                           fsr0l	equ	0xFE9
 33214                           wreg	equ	0xFE8
 33215                           indf1	equ	0xFE7
 33216                           postdec1	equ	0xFE5
 33217                           plusw1	equ	0xFE3
 33218                           fsr1h	equ	0xFE2
 33219                           fsr1l	equ	0xFE1
 33220                           indf2	equ	0xFDF
 33221                           postinc2	equ	0xFDE
 33222                           postdec2	equ	0xFDD
 33223                           plusw2	equ	0xFDB
 33224                           fsr2h	equ	0xFDA
 33225                           fsr2l	equ	0xFD9
 33226                           status	equ	0xFD8
 33227                           
 33228 ;; *************** function __i2c_write *****************
 33229 ;; Defined at:
 33230 ;;		line 142 in file "i2c.c"
 33231 ;; Parameters:    Size  Location     Type
 33232 ;;  slave_addres    1    wreg     unsigned char 
 33233 ;;  data            2    5[COMRAM] PTR unsigned char 
 33234 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 33235 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 33236 ;;		 -> _ic2_display_set_address@data_array(2), 
 33237 ;;  length          1    7[COMRAM] unsigned char 
 33238 ;; Auto vars:     Size  Location     Type
 33239 ;;  slave_addres    1    8[COMRAM] unsigned char 
 33240 ;;  cntr            1    9[COMRAM] unsigned char 
 33241 ;; Return value:  Size  Location     Type
 33242 ;;                  1    wreg      void 
 33243 ;; Registers used:
 33244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33245 ;; Tracked objects:
 33246 ;;		On entry : 0/0
 33247 ;;		On exit  : 0/0
 33248 ;;		Unchanged: 0/0
 33249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33250 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33251 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33253 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33254 ;;Total ram usage:        5 bytes
 33255 ;; Hardware stack levels used:    1
 33256 ;; Hardware stack levels required when called:    1
 33257 ;; This function calls:
 33258 ;;		__i2c_send
 33259 ;;		__i2c_start
 33260 ;;		__i2c_stop
 33261 ;;		__i2c_wait_idle
 33262 ;; This function is called by:
 33263 ;;		__ic2_display_set_address
 33264 ;;		_i2c_display_send_init_sequence
 33265 ;;		_i2c_digipot_reset_on
 33266 ;;		_i2c_digipot_reset_off
 33267 ;;		_i2c_digipot_backlight
 33268 ;;		_i2c_eeprom_writeByte
 33269 ;;		_i2c_eeprom_readByte
 33270 ;;		_i2c_eeprom_write
 33271 ;;		_i2c_eeprom_read
 33272 ;; This function uses a non-reentrant model
 33273 ;;
 33274                           
 33275                           	psect	text163
 33276  007772                     __ptext163:
 33277                           	opt stack 0
 33278  007772                     __i2c_write:
 33279                           	opt stack 27
 33280                           
 33281                           ;incstack = 0
 33282                           ;__i2c_write@slave_address stored from wreg
 33283  007772  6E09               	movwf	__i2c_write@slave_address,c
 33284                           
 33285                           ;i2c.c: 144: uint8_t cntr;;i2c.c: 146: _i2c_wait_idle();
 33286  007774  ECEB  F038         	call	__i2c_wait_idle	;wreg free
 33287                           
 33288                           ;i2c.c: 147: _i2c_start();
 33289  007778  ECED  F040         	call	__i2c_start	;wreg free
 33290                           
 33291                           ;i2c.c: 148: _i2c_wait_idle();
 33292  00777C  ECEB  F038         	call	__i2c_wait_idle	;wreg free
 33293                           
 33294                           ;i2c.c: 149: _i2c_send(slave_address);
 33295  007780  5009               	movf	__i2c_write@slave_address,w,c
 33296  007782  ECF1  F040         	call	__i2c_send
 33297                           
 33298                           ;i2c.c: 150: _i2c_wait_idle();
 33299  007786  ECEB  F038         	call	__i2c_wait_idle	;wreg free
 33300                           
 33301                           ;i2c.c: 152: for(cntr=0; cntr<length; ++cntr)
 33302  00778A  0E00               	movlw	0
 33303  00778C  6E0A               	movwf	__i2c_write@cntr,c
 33304  00778E  D00E               	goto	l1203
 33305  007790                     
 33306                           ;i2c.c: 153: {;i2c.c: 154: _i2c_send(data[cntr]);
 33307  007790  500A               	movf	__i2c_write@cntr,w,c
 33308  007792  0D01               	mullw	1
 33309  007794  50F3               	movf	prodl,w,c
 33310  007796  2406               	addwf	__i2c_write@data,w,c
 33311  007798  6ED9               	movwf	fsr2l,c
 33312  00779A  50F4               	movf	prodh,w,c
 33313  00779C  2007               	addwfc	__i2c_write@data+1,w,c
 33314  00779E  6EDA               	movwf	fsr2h,c
 33315  0077A0  50DF               	movf	indf2,w,c
 33316  0077A2  ECF1  F040         	call	__i2c_send
 33317                           
 33318                           ;i2c.c: 155: _i2c_wait_idle();
 33319  0077A6  ECEB  F038         	call	__i2c_wait_idle	;wreg free
 33320  0077AA  2A0A               	incf	__i2c_write@cntr,f,c
 33321  0077AC                     l1203:
 33322  0077AC  5008               	movf	__i2c_write@length,w,c
 33323  0077AE  5C0A               	subwf	__i2c_write@cntr,w,c
 33324  0077B0  A0D8               	btfss	status,0,c
 33325  0077B2  D7EE               	goto	l1204
 33326                           
 33327                           ;i2c.c: 156: };i2c.c: 158: _i2c_stop();
 33328  0077B4  ECE9  F040         	call	__i2c_stop	;wreg free
 33329  0077B8  0012               	return		;funcret
 33330  0077BA                     __end_of__i2c_write:
 33331                           	opt stack 0
 33332                           tosu	equ	0xFFF
 33333                           tosh	equ	0xFFE
 33334                           tosl	equ	0xFFD
 33335                           pclath	equ	0xFFA
 33336                           tblptru	equ	0xFF8
 33337                           tblptrh	equ	0xFF7
 33338                           tblptrl	equ	0xFF6
 33339                           tablat	equ	0xFF5
 33340                           prodh	equ	0xFF4
 33341                           prodl	equ	0xFF3
 33342                           intcon	equ	0xFF2
 33343                           intcon2	equ	0xFF1
 33344                           intcon3	equ	0xFF0
 33345                           indf0	equ	0xFEF
 33346                           postinc0	equ	0xFEE
 33347                           fsr0h	equ	0xFEA
 33348                           fsr0l	equ	0xFE9
 33349                           wreg	equ	0xFE8
 33350                           indf1	equ	0xFE7
 33351                           postdec1	equ	0xFE5
 33352                           plusw1	equ	0xFE3
 33353                           fsr1h	equ	0xFE2
 33354                           fsr1l	equ	0xFE1
 33355                           indf2	equ	0xFDF
 33356                           postinc2	equ	0xFDE
 33357                           postdec2	equ	0xFDD
 33358                           plusw2	equ	0xFDB
 33359                           fsr2h	equ	0xFDA
 33360                           fsr2l	equ	0xFD9
 33361                           status	equ	0xFD8
 33362                           
 33363 ;; *************** function __i2c_wait_idle *****************
 33364 ;; Defined at:
 33365 ;;		line 48 in file "i2c.c"
 33366 ;; Parameters:    Size  Location     Type
 33367 ;;		None
 33368 ;; Auto vars:     Size  Location     Type
 33369 ;;		None
 33370 ;; Return value:  Size  Location     Type
 33371 ;;                  1    wreg      void 
 33372 ;; Registers used:
 33373 ;;		wreg, status,2, status,0
 33374 ;; Tracked objects:
 33375 ;;		On entry : 0/0
 33376 ;;		On exit  : 0/0
 33377 ;;		Unchanged: 0/0
 33378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33381 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33382 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33383 ;;Total ram usage:        5 bytes
 33384 ;; Hardware stack levels used:    1
 33385 ;; This function calls:
 33386 ;;		Nothing
 33387 ;; This function is called by:
 33388 ;;		__i2c_write
 33389 ;;		__i2c_read
 33390 ;;		_i2c_display_write_fixed
 33391 ;;		_i2c_display_write
 33392 ;; This function uses a non-reentrant model
 33393 ;;
 33394                           
 33395                           	psect	text164
 33396  0071D6                     __ptext164:
 33397                           	opt stack 0
 33398  0071D6                     __i2c_wait_idle:
 33399                           	opt stack 27
 33400                           
 33401                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 33402                           
 33403                           ;incstack = 0
 33404  0071D6  A4C7               	btfss	4039,2,c	;volatile
 33405  0071D8  D003               	goto	u6310
 33406  0071DA  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 33407  0071DC  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 33408  0071DE  D001               	goto	u6318
 33409  0071E0                     u6310:
 33410  0071E0  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 33411  0071E2                     u6318:
 33412  0071E2  A0C5               	btfss	4037,0,c	;volatile
 33413  0071E4  D003               	goto	u6320
 33414  0071E6  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 33415  0071E8  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 33416  0071EA  D001               	goto	u6328
 33417  0071EC                     u6320:
 33418  0071EC  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 33419  0071EE                     u6328:
 33420  0071EE  A2C5               	btfss	4037,1,c	;volatile
 33421  0071F0  D003               	goto	u6330
 33422  0071F2  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 33423  0071F4  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 33424  0071F6  D001               	goto	u6338
 33425  0071F8                     u6330:
 33426  0071F8  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 33427  0071FA                     u6338:
 33428  0071FA  A4C5               	btfss	4037,2,c	;volatile
 33429  0071FC  D003               	goto	u6340
 33430  0071FE  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 33431  007200  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 33432  007202  D001               	goto	u6348
 33433  007204                     u6340:
 33434  007204  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 33435  007206                     u6348:
 33436  007206  A6C5               	btfss	4037,3,c	;volatile
 33437  007208  D003               	goto	u6350
 33438  00720A  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 33439  00720C  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 33440  00720E  D001               	goto	u6358
 33441  007210                     u6350:
 33442  007210  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 33443  007212                     u6358:
 33444  007212  A8C5               	btfss	4037,4,c	;volatile
 33445  007214  D002               	goto	u6360
 33446  007216  0E01               	movlw	1
 33447  007218  D001               	goto	u6366
 33448  00721A                     u6360:
 33449  00721A  0E00               	movlw	0
 33450  00721C                     u6366:
 33451  00721C  1005               	iorwf	??__i2c_wait_idle+4,w,c
 33452  00721E  1004               	iorwf	??__i2c_wait_idle+3,w,c
 33453  007220  1003               	iorwf	??__i2c_wait_idle+2,w,c
 33454  007222  1002               	iorwf	??__i2c_wait_idle+1,w,c
 33455  007224  1001               	iorwf	??__i2c_wait_idle,w,c
 33456  007226  0900               	iorlw	0
 33457  007228  B4D8               	btfsc	status,2,c
 33458  00722A  0012               	return	
 33459  00722C  D7D4               	goto	__i2c_wait_idle
 33460  00722E                     __end_of__i2c_wait_idle:
 33461                           	opt stack 0
 33462                           tosu	equ	0xFFF
 33463                           tosh	equ	0xFFE
 33464                           tosl	equ	0xFFD
 33465                           pclath	equ	0xFFA
 33466                           tblptru	equ	0xFF8
 33467                           tblptrh	equ	0xFF7
 33468                           tblptrl	equ	0xFF6
 33469                           tablat	equ	0xFF5
 33470                           prodh	equ	0xFF4
 33471                           prodl	equ	0xFF3
 33472                           intcon	equ	0xFF2
 33473                           intcon2	equ	0xFF1
 33474                           intcon3	equ	0xFF0
 33475                           indf0	equ	0xFEF
 33476                           postinc0	equ	0xFEE
 33477                           fsr0h	equ	0xFEA
 33478                           fsr0l	equ	0xFE9
 33479                           wreg	equ	0xFE8
 33480                           indf1	equ	0xFE7
 33481                           postdec1	equ	0xFE5
 33482                           plusw1	equ	0xFE3
 33483                           fsr1h	equ	0xFE2
 33484                           fsr1l	equ	0xFE1
 33485                           indf2	equ	0xFDF
 33486                           postinc2	equ	0xFDE
 33487                           postdec2	equ	0xFDD
 33488                           plusw2	equ	0xFDB
 33489                           fsr2h	equ	0xFDA
 33490                           fsr2l	equ	0xFD9
 33491                           status	equ	0xFD8
 33492                           
 33493 ;; *************** function __i2c_stop *****************
 33494 ;; Defined at:
 33495 ;;		line 75 in file "i2c.c"
 33496 ;; Parameters:    Size  Location     Type
 33497 ;;		None
 33498 ;; Auto vars:     Size  Location     Type
 33499 ;;		None
 33500 ;; Return value:  Size  Location     Type
 33501 ;;                  1    wreg      void 
 33502 ;; Registers used:
 33503 ;;		None
 33504 ;; Tracked objects:
 33505 ;;		On entry : 0/0
 33506 ;;		On exit  : 0/0
 33507 ;;		Unchanged: 0/0
 33508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33513 ;;Total ram usage:        0 bytes
 33514 ;; Hardware stack levels used:    1
 33515 ;; This function calls:
 33516 ;;		Nothing
 33517 ;; This function is called by:
 33518 ;;		__i2c_write
 33519 ;;		__i2c_read
 33520 ;;		_i2c_display_write_fixed
 33521 ;;		_i2c_display_write
 33522 ;; This function uses a non-reentrant model
 33523 ;;
 33524                           
 33525                           	psect	text165
 33526  0081D2                     __ptext165:
 33527                           	opt stack 0
 33528  0081D2                     __i2c_stop:
 33529                           	opt stack 27
 33530                           
 33531                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 33532                           
 33533                           ;incstack = 0
 33534  0081D2  84C5               	bsf	4037,2,c	;volatile
 33535  0081D4  A4C5               	btfss	4037,2,c	;volatile
 33536  0081D6  0012               	return	
 33537  0081D8  D7FD               	goto	l1169
 33538  0081DA                     __end_of__i2c_stop:
 33539                           	opt stack 0
 33540                           tosu	equ	0xFFF
 33541                           tosh	equ	0xFFE
 33542                           tosl	equ	0xFFD
 33543                           pclath	equ	0xFFA
 33544                           tblptru	equ	0xFF8
 33545                           tblptrh	equ	0xFF7
 33546                           tblptrl	equ	0xFF6
 33547                           tablat	equ	0xFF5
 33548                           prodh	equ	0xFF4
 33549                           prodl	equ	0xFF3
 33550                           intcon	equ	0xFF2
 33551                           intcon2	equ	0xFF1
 33552                           intcon3	equ	0xFF0
 33553                           indf0	equ	0xFEF
 33554                           postinc0	equ	0xFEE
 33555                           fsr0h	equ	0xFEA
 33556                           fsr0l	equ	0xFE9
 33557                           wreg	equ	0xFE8
 33558                           indf1	equ	0xFE7
 33559                           postdec1	equ	0xFE5
 33560                           plusw1	equ	0xFE3
 33561                           fsr1h	equ	0xFE2
 33562                           fsr1l	equ	0xFE1
 33563                           indf2	equ	0xFDF
 33564                           postinc2	equ	0xFDE
 33565                           postdec2	equ	0xFDD
 33566                           plusw2	equ	0xFDB
 33567                           fsr2h	equ	0xFDA
 33568                           fsr2l	equ	0xFD9
 33569                           status	equ	0xFD8
 33570                           
 33571 ;; *************** function __i2c_start *****************
 33572 ;; Defined at:
 33573 ;;		line 54 in file "i2c.c"
 33574 ;; Parameters:    Size  Location     Type
 33575 ;;		None
 33576 ;; Auto vars:     Size  Location     Type
 33577 ;;		None
 33578 ;; Return value:  Size  Location     Type
 33579 ;;                  1    wreg      void 
 33580 ;; Registers used:
 33581 ;;		None
 33582 ;; Tracked objects:
 33583 ;;		On entry : 0/0
 33584 ;;		On exit  : 0/0
 33585 ;;		Unchanged: 0/0
 33586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33591 ;;Total ram usage:        0 bytes
 33592 ;; Hardware stack levels used:    1
 33593 ;; This function calls:
 33594 ;;		Nothing
 33595 ;; This function is called by:
 33596 ;;		__i2c_write
 33597 ;;		__i2c_read
 33598 ;;		_i2c_display_write_fixed
 33599 ;;		_i2c_display_write
 33600 ;; This function uses a non-reentrant model
 33601 ;;
 33602                           
 33603                           	psect	text166
 33604  0081DA                     __ptext166:
 33605                           	opt stack 0
 33606  0081DA                     __i2c_start:
 33607                           	opt stack 27
 33608                           
 33609                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 33610                           
 33611                           ;incstack = 0
 33612  0081DA  80C5               	bsf	4037,0,c	;volatile
 33613  0081DC  A0C5               	btfss	4037,0,c	;volatile
 33614  0081DE  0012               	return	
 33615  0081E0  D7FD               	goto	l1154
 33616  0081E2                     __end_of__i2c_start:
 33617                           	opt stack 0
 33618                           tosu	equ	0xFFF
 33619                           tosh	equ	0xFFE
 33620                           tosl	equ	0xFFD
 33621                           pclath	equ	0xFFA
 33622                           tblptru	equ	0xFF8
 33623                           tblptrh	equ	0xFF7
 33624                           tblptrl	equ	0xFF6
 33625                           tablat	equ	0xFF5
 33626                           prodh	equ	0xFF4
 33627                           prodl	equ	0xFF3
 33628                           intcon	equ	0xFF2
 33629                           intcon2	equ	0xFF1
 33630                           intcon3	equ	0xFF0
 33631                           indf0	equ	0xFEF
 33632                           postinc0	equ	0xFEE
 33633                           fsr0h	equ	0xFEA
 33634                           fsr0l	equ	0xFE9
 33635                           wreg	equ	0xFE8
 33636                           indf1	equ	0xFE7
 33637                           postdec1	equ	0xFE5
 33638                           plusw1	equ	0xFE3
 33639                           fsr1h	equ	0xFE2
 33640                           fsr1l	equ	0xFE1
 33641                           indf2	equ	0xFDF
 33642                           postinc2	equ	0xFDE
 33643                           postdec2	equ	0xFDD
 33644                           plusw2	equ	0xFDB
 33645                           fsr2h	equ	0xFDA
 33646                           fsr2l	equ	0xFD9
 33647                           status	equ	0xFD8
 33648                           
 33649 ;; *************** function __i2c_send *****************
 33650 ;; Defined at:
 33651 ;;		line 61 in file "i2c.c"
 33652 ;; Parameters:    Size  Location     Type
 33653 ;;  dat             1    wreg     unsigned char 
 33654 ;; Auto vars:     Size  Location     Type
 33655 ;;  dat             1    0[COMRAM] unsigned char 
 33656 ;; Return value:  Size  Location     Type
 33657 ;;                  1    wreg      void 
 33658 ;; Registers used:
 33659 ;;		wreg
 33660 ;; Tracked objects:
 33661 ;;		On entry : 0/0
 33662 ;;		On exit  : 0/0
 33663 ;;		Unchanged: 0/0
 33664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33668 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33669 ;;Total ram usage:        1 bytes
 33670 ;; Hardware stack levels used:    1
 33671 ;; This function calls:
 33672 ;;		Nothing
 33673 ;; This function is called by:
 33674 ;;		__i2c_write
 33675 ;;		__i2c_read
 33676 ;;		_i2c_display_write_fixed
 33677 ;;		_i2c_display_write
 33678 ;; This function uses a non-reentrant model
 33679 ;;
 33680                           
 33681                           	psect	text167
 33682  0081E2                     __ptext167:
 33683                           	opt stack 0
 33684  0081E2                     __i2c_send:
 33685                           	opt stack 27
 33686                           
 33687                           ;incstack = 0
 33688                           ;__i2c_send@dat stored from wreg
 33689  0081E2  6E01               	movwf	__i2c_send@dat,c
 33690                           
 33691                           ;i2c.c: 63: SSP1BUF = dat;
 33692  0081E4  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 33693  0081E8  0012               	return		;funcret
 33694  0081EA                     __end_of__i2c_send:
 33695                           	opt stack 0
 33696                           tosu	equ	0xFFF
 33697                           tosh	equ	0xFFE
 33698                           tosl	equ	0xFFD
 33699                           pclath	equ	0xFFA
 33700                           tblptru	equ	0xFF8
 33701                           tblptrh	equ	0xFF7
 33702                           tblptrl	equ	0xFF6
 33703                           tablat	equ	0xFF5
 33704                           prodh	equ	0xFF4
 33705                           prodl	equ	0xFF3
 33706                           intcon	equ	0xFF2
 33707                           intcon2	equ	0xFF1
 33708                           intcon3	equ	0xFF0
 33709                           indf0	equ	0xFEF
 33710                           postinc0	equ	0xFEE
 33711                           fsr0h	equ	0xFEA
 33712                           fsr0l	equ	0xFE9
 33713                           wreg	equ	0xFE8
 33714                           indf1	equ	0xFE7
 33715                           postdec1	equ	0xFE5
 33716                           plusw1	equ	0xFE3
 33717                           fsr1h	equ	0xFE2
 33718                           fsr1l	equ	0xFE1
 33719                           indf2	equ	0xFDF
 33720                           postinc2	equ	0xFDE
 33721                           postdec2	equ	0xFDD
 33722                           plusw2	equ	0xFDB
 33723                           fsr2h	equ	0xFDA
 33724                           fsr2l	equ	0xFD9
 33725                           status	equ	0xFD8
 33726                           
 33727 ;; *************** function __parse_command_long *****************
 33728 ;; Defined at:
 33729 ;;		line 459 in file "api.c"
 33730 ;; Parameters:    Size  Location     Type
 33731 ;;  data            2   82[COMRAM] PTR unsigned char 
 33732 ;;		 -> RAM(3759), 
 33733 ;; Auto vars:     Size  Location     Type
 33734 ;;  length          1   84[COMRAM] unsigned char 
 33735 ;; Return value:  Size  Location     Type
 33736 ;;                  1    wreg      unsigned char 
 33737 ;; Registers used:
 33738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33739 ;; Tracked objects:
 33740 ;;		On entry : 0/0
 33741 ;;		On exit  : 0/0
 33742 ;;		Unchanged: 0/0
 33743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33744 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33747 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33748 ;;Total ram usage:        3 bytes
 33749 ;; Hardware stack levels used:    1
 33750 ;; Hardware stack levels required when called:    9
 33751 ;; This function calls:
 33752 ;;		__parse_file_append
 33753 ;;		__parse_file_create
 33754 ;;		__parse_file_delete
 33755 ;;		__parse_file_modify
 33756 ;;		__parse_file_rename
 33757 ;;		__parse_file_truncate
 33758 ;; This function is called by:
 33759 ;;		_api_parse
 33760 ;; This function uses a non-reentrant model
 33761 ;;
 33762                           
 33763                           	psect	text168
 33764  00633E                     __ptext168:
 33765                           	opt stack 0
 33766  00633E                     __parse_command_long:
 33767                           	opt stack 20
 33768                           
 33769                           ;api.c: 461: uint8_t length = 65;
 33770                           
 33771                           ;incstack = 0
 33772  00633E  0E41               	movlw	65
 33773  006340  6E55               	movwf	__parse_command_long@length,c
 33774                           
 33775                           ;api.c: 463: switch(data[0])
 33776  006342  D02B               	goto	l2660
 33777  006344                     
 33778                           ;api.c: 466: length = _parse_file_truncate(data);
 33779  006344  C053  F001         	movff	__parse_command_long@data,__parse_file_truncate@data
 33780  006348  C054  F002         	movff	__parse_command_long@data+1,__parse_file_truncate@data+1
 33781  00634C  EC0B  F041         	call	__parse_file_truncate	;wreg free
 33782  006350  D022               	goto	L39
 33783  006352                     
 33784                           ;api.c: 470: length = _parse_file_delete(data);
 33785  006352  C053  F03F         	movff	__parse_command_long@data,__parse_file_delete@data
 33786  006356  C054  F040         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 33787  00635A  EC1C  F03B         	call	__parse_file_delete	;wreg free
 33788  00635E  D01B               	goto	L39
 33789  006360                     
 33790                           ;api.c: 474: length = _parse_file_create(data);
 33791  006360  C053  F050         	movff	__parse_command_long@data,__parse_file_create@data
 33792  006364  C054  F051         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 33793  006368  EC01  F036         	call	__parse_file_create	;wreg free
 33794  00636C  D014               	goto	L39
 33795  00636E                     
 33796                           ;api.c: 478: length = _parse_file_rename(data);
 33797  00636E  C053  F043         	movff	__parse_command_long@data,__parse_file_rename@data
 33798  006372  C054  F044         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 33799  006376  EC6C  F036         	call	__parse_file_rename	;wreg free
 33800  00637A  D00D               	goto	L39
 33801  00637C                     
 33802                           ;api.c: 482: length = _parse_file_append(data);
 33803  00637C  C053  F04B         	movff	__parse_command_long@data,__parse_file_append@data
 33804  006380  C054  F04C         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 33805  006384  EC3D  F033         	call	__parse_file_append	;wreg free
 33806  006388  D006               	goto	L39
 33807  00638A                     
 33808                           ;api.c: 486: length = _parse_file_modify(data);
 33809  00638A  C053  F001         	movff	__parse_command_long@data,__parse_file_modify@data
 33810  00638E  C054  F002         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 33811  006392  EC0D  F041         	call	__parse_file_modify	;wreg free
 33812  006396                     L39:
 33813  006396  6E55               	movwf	__parse_command_long@length,c
 33814                           
 33815                           ;api.c: 488: }
 33816                           
 33817                           ;api.c: 487: break;
 33818  006398  D017               	goto	l2662
 33819  00639A                     l2660:
 33820  00639A  C053  FFD9         	movff	__parse_command_long@data,fsr2l
 33821  00639E  C054  FFDA         	movff	__parse_command_long@data+1,fsr2h
 33822  0063A2  50DF               	movf	indf2,w,c
 33823                           
 33824                           ; Switch size 1, requested type "space"
 33825                           ; Number of cases is 6, Range of values is 80 to 85
 33826                           ; switch strategies available:
 33827                           ; Name         Instructions Cycles
 33828                           ; simple_byte           19    10 (average)
 33829                           ;	Chosen strategy is simple_byte
 33830  0063A4  0A50               	xorlw	80	; case 80
 33831  0063A6  B4D8               	btfsc	status,2,c
 33832  0063A8  D7CD               	goto	l2661
 33833  0063AA  0A01               	xorlw	1	; case 81
 33834  0063AC  B4D8               	btfsc	status,2,c
 33835  0063AE  D7D1               	goto	l2663
 33836  0063B0  0A03               	xorlw	3	; case 82
 33837  0063B2  B4D8               	btfsc	status,2,c
 33838  0063B4  D7D5               	goto	l2664
 33839  0063B6  0A01               	xorlw	1	; case 83
 33840  0063B8  B4D8               	btfsc	status,2,c
 33841  0063BA  D7D9               	goto	l2665
 33842  0063BC  0A07               	xorlw	7	; case 84
 33843  0063BE  B4D8               	btfsc	status,2,c
 33844  0063C0  D7DD               	goto	l2666
 33845  0063C2  0A01               	xorlw	1	; case 85
 33846  0063C4  B4D8               	btfsc	status,2,c
 33847  0063C6  D7E1               	goto	l2667
 33848  0063C8                     l2662:
 33849                           
 33850                           ;api.c: 490: return length;
 33851  0063C8  5055               	movf	__parse_command_long@length,w,c
 33852  0063CA  0012               	return	
 33853  0063CC                     __end_of__parse_command_long:
 33854                           	opt stack 0
 33855                           tosu	equ	0xFFF
 33856                           tosh	equ	0xFFE
 33857                           tosl	equ	0xFFD
 33858                           pclath	equ	0xFFA
 33859                           tblptru	equ	0xFF8
 33860                           tblptrh	equ	0xFF7
 33861                           tblptrl	equ	0xFF6
 33862                           tablat	equ	0xFF5
 33863                           prodh	equ	0xFF4
 33864                           prodl	equ	0xFF3
 33865                           intcon	equ	0xFF2
 33866                           intcon2	equ	0xFF1
 33867                           intcon3	equ	0xFF0
 33868                           indf0	equ	0xFEF
 33869                           postinc0	equ	0xFEE
 33870                           fsr0h	equ	0xFEA
 33871                           fsr0l	equ	0xFE9
 33872                           wreg	equ	0xFE8
 33873                           indf1	equ	0xFE7
 33874                           postdec1	equ	0xFE5
 33875                           plusw1	equ	0xFE3
 33876                           fsr1h	equ	0xFE2
 33877                           fsr1l	equ	0xFE1
 33878                           indf2	equ	0xFDF
 33879                           postinc2	equ	0xFDE
 33880                           postdec2	equ	0xFDD
 33881                           plusw2	equ	0xFDB
 33882                           fsr2h	equ	0xFDA
 33883                           fsr2l	equ	0xFD9
 33884                           status	equ	0xFD8
 33885                           
 33886 ;; *************** function __parse_file_truncate *****************
 33887 ;; Defined at:
 33888 ;;		line 493 in file "api.c"
 33889 ;; Parameters:    Size  Location     Type
 33890 ;;  data            2    0[COMRAM] PTR unsigned char 
 33891 ;;		 -> RAM(3759), 
 33892 ;; Auto vars:     Size  Location     Type
 33893 ;;		None
 33894 ;; Return value:  Size  Location     Type
 33895 ;;                  1    wreg      unsigned char 
 33896 ;; Registers used:
 33897 ;;		wreg
 33898 ;; Tracked objects:
 33899 ;;		On entry : 0/0
 33900 ;;		On exit  : 0/0
 33901 ;;		Unchanged: 0/0
 33902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33907 ;;Total ram usage:        2 bytes
 33908 ;; Hardware stack levels used:    1
 33909 ;; This function calls:
 33910 ;;		Nothing
 33911 ;; This function is called by:
 33912 ;;		__parse_command_long
 33913 ;; This function uses a non-reentrant model
 33914 ;;
 33915                           
 33916                           	psect	text169
 33917  008216                     __ptext169:
 33918                           	opt stack 0
 33919  008216                     __parse_file_truncate:
 33920                           	opt stack 28
 33921                           
 33922                           ;api.c: 497: return 65;
 33923                           
 33924                           ;incstack = 0
 33925  008216  0E41               	movlw	65
 33926  008218  0012               	return	
 33927  00821A                     __end_of__parse_file_truncate:
 33928                           	opt stack 0
 33929                           tosu	equ	0xFFF
 33930                           tosh	equ	0xFFE
 33931                           tosl	equ	0xFFD
 33932                           pclath	equ	0xFFA
 33933                           tblptru	equ	0xFF8
 33934                           tblptrh	equ	0xFF7
 33935                           tblptrl	equ	0xFF6
 33936                           tablat	equ	0xFF5
 33937                           prodh	equ	0xFF4
 33938                           prodl	equ	0xFF3
 33939                           intcon	equ	0xFF2
 33940                           intcon2	equ	0xFF1
 33941                           intcon3	equ	0xFF0
 33942                           indf0	equ	0xFEF
 33943                           postinc0	equ	0xFEE
 33944                           fsr0h	equ	0xFEA
 33945                           fsr0l	equ	0xFE9
 33946                           wreg	equ	0xFE8
 33947                           indf1	equ	0xFE7
 33948                           postdec1	equ	0xFE5
 33949                           plusw1	equ	0xFE3
 33950                           fsr1h	equ	0xFE2
 33951                           fsr1l	equ	0xFE1
 33952                           indf2	equ	0xFDF
 33953                           postinc2	equ	0xFDE
 33954                           postdec2	equ	0xFDD
 33955                           plusw2	equ	0xFDB
 33956                           fsr2h	equ	0xFDA
 33957                           fsr2l	equ	0xFD9
 33958                           status	equ	0xFD8
 33959                           
 33960 ;; *************** function __parse_file_rename *****************
 33961 ;; Defined at:
 33962 ;;		line 526 in file "api.c"
 33963 ;; Parameters:    Size  Location     Type
 33964 ;;  data            2   66[COMRAM] PTR unsigned char 
 33965 ;;		 -> RAM(3759), 
 33966 ;; Auto vars:     Size  Location     Type
 33967 ;;		None
 33968 ;; Return value:  Size  Location     Type
 33969 ;;                  1    wreg      unsigned char 
 33970 ;; Registers used:
 33971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33972 ;; Tracked objects:
 33973 ;;		On entry : 0/0
 33974 ;;		On exit  : 0/0
 33975 ;;		Unchanged: 0/0
 33976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33980 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33981 ;;Total ram usage:        3 bytes
 33982 ;; Hardware stack levels used:    1
 33983 ;; Hardware stack levels required when called:    8
 33984 ;; This function calls:
 33985 ;;		_fat_rename_file
 33986 ;; This function is called by:
 33987 ;;		__parse_command_long
 33988 ;; This function uses a non-reentrant model
 33989 ;;
 33990                           
 33991                           	psect	text170
 33992  006CD8                     __ptext170:
 33993                           	opt stack 0
 33994  006CD8                     __parse_file_rename:
 33995                           	opt stack 20
 33996                           
 33997                           ;api.c: 529: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 33998                           
 33999                           ;incstack = 0
 34000  006CD8  C043  FFD9         	movff	__parse_file_rename@data,fsr2l
 34001  006CDC  C044  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 34002  006CE0  0E53               	movlw	83
 34003  006CE2  18DE               	xorwf	postinc2,w,c
 34004  006CE4  A4D8               	btfss	status,2,c
 34005  006CE6  D014               	goto	u9770
 34006  006CE8  EE20 F00D          	lfsr	2,13
 34007  006CEC  5043               	movf	__parse_file_rename@data,w,c
 34008  006CEE  26D9               	addwf	fsr2l,f,c
 34009  006CF0  5044               	movf	__parse_file_rename@data+1,w,c
 34010  006CF2  22DA               	addwfc	fsr2h,f,c
 34011  006CF4  0E7E               	movlw	126
 34012  006CF6  18DE               	xorwf	postinc2,w,c
 34013  006CF8  A4D8               	btfss	status,2,c
 34014  006CFA  D00A               	goto	u9770
 34015  006CFC  EE20 F00E          	lfsr	2,14
 34016  006D00  5043               	movf	__parse_file_rename@data,w,c
 34017  006D02  26D9               	addwf	fsr2l,f,c
 34018  006D04  5044               	movf	__parse_file_rename@data+1,w,c
 34019  006D06  22DA               	addwfc	fsr2h,f,c
 34020  006D08  0E18               	movlw	24
 34021  006D0A  18DE               	xorwf	postinc2,w,c
 34022  006D0C  B4D8               	btfsc	status,2,c
 34023  006D0E  D002               	goto	l2686
 34024  006D10                     u9770:
 34025                           
 34026                           ;api.c: 530: {;api.c: 531: return 15;
 34027  006D10  0E0F               	movlw	15
 34028  006D12  0012               	return	
 34029  006D14                     l2686:
 34030                           
 34031                           ;api.c: 532: };api.c: 535: fat_rename_file(data[1], &data[2], &data[10]);
 34032  006D14  0E02               	movlw	2
 34033  006D16  2443               	addwf	__parse_file_rename@data,w,c
 34034  006D18  6E3F               	movwf	fat_rename_file@name,c
 34035  006D1A  0E00               	movlw	0
 34036  006D1C  2044               	addwfc	__parse_file_rename@data+1,w,c
 34037  006D1E  6E40               	movwf	fat_rename_file@name+1,c
 34038  006D20  0E0A               	movlw	10
 34039  006D22  2443               	addwf	__parse_file_rename@data,w,c
 34040  006D24  6E41               	movwf	fat_rename_file@extension,c
 34041  006D26  0E00               	movlw	0
 34042  006D28  2044               	addwfc	__parse_file_rename@data+1,w,c
 34043  006D2A  6E42               	movwf	fat_rename_file@extension+1,c
 34044  006D2C  EE20 F001          	lfsr	2,1
 34045  006D30  5043               	movf	__parse_file_rename@data,w,c
 34046  006D32  26D9               	addwf	fsr2l,f,c
 34047  006D34  5044               	movf	__parse_file_rename@data+1,w,c
 34048  006D36  22DA               	addwfc	fsr2h,f,c
 34049  006D38  50DF               	movf	indf2,w,c
 34050  006D3A  ECE4  F02F         	call	_fat_rename_file
 34051                           
 34052                           ;api.c: 536: return 15;
 34053  006D3E  0E0F               	movlw	15
 34054  006D40  0012               	return	
 34055  006D42                     __end_of__parse_file_rename:
 34056                           	opt stack 0
 34057                           tosu	equ	0xFFF
 34058                           tosh	equ	0xFFE
 34059                           tosl	equ	0xFFD
 34060                           pclath	equ	0xFFA
 34061                           tblptru	equ	0xFF8
 34062                           tblptrh	equ	0xFF7
 34063                           tblptrl	equ	0xFF6
 34064                           tablat	equ	0xFF5
 34065                           prodh	equ	0xFF4
 34066                           prodl	equ	0xFF3
 34067                           intcon	equ	0xFF2
 34068                           intcon2	equ	0xFF1
 34069                           intcon3	equ	0xFF0
 34070                           indf0	equ	0xFEF
 34071                           postinc0	equ	0xFEE
 34072                           fsr0h	equ	0xFEA
 34073                           fsr0l	equ	0xFE9
 34074                           wreg	equ	0xFE8
 34075                           indf1	equ	0xFE7
 34076                           postdec1	equ	0xFE5
 34077                           plusw1	equ	0xFE3
 34078                           fsr1h	equ	0xFE2
 34079                           fsr1l	equ	0xFE1
 34080                           indf2	equ	0xFDF
 34081                           postinc2	equ	0xFDE
 34082                           postdec2	equ	0xFDD
 34083                           plusw2	equ	0xFDB
 34084                           fsr2h	equ	0xFDA
 34085                           fsr2l	equ	0xFD9
 34086                           status	equ	0xFD8
 34087                           
 34088 ;; *************** function _fat_rename_file *****************
 34089 ;; Defined at:
 34090 ;;		line 536 in file "fat16.c"
 34091 ;; Parameters:    Size  Location     Type
 34092 ;;  file_number     1    wreg     unsigned char 
 34093 ;;  name            2   62[COMRAM] PTR unsigned char 
 34094 ;;		 -> RAM(3759), 
 34095 ;;  extension       2   64[COMRAM] PTR unsigned char 
 34096 ;;		 -> RAM(3759), 
 34097 ;; Auto vars:     Size  Location     Type
 34098 ;;  file_number     1    0[BANK0 ] unsigned char 
 34099 ;;  root           32    1[BANK0 ] struct .
 34100 ;;  cntr            1   33[BANK0 ] unsigned char 
 34101 ;; Return value:  Size  Location     Type
 34102 ;;                  1    wreg      void 
 34103 ;; Registers used:
 34104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34105 ;; Tracked objects:
 34106 ;;		On entry : 0/0
 34107 ;;		On exit  : 0/0
 34108 ;;		Unchanged: 0/0
 34109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34111 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34113 ;;      Totals:         4      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34114 ;;Total ram usage:       38 bytes
 34115 ;; Hardware stack levels used:    1
 34116 ;; Hardware stack levels required when called:    7
 34117 ;; This function calls:
 34118 ;;		__write_root
 34119 ;;		_fat_get_file_information
 34120 ;; This function is called by:
 34121 ;;		__parse_file_rename
 34122 ;; This function uses a non-reentrant model
 34123 ;;
 34124                           
 34125                           	psect	text171
 34126  005FC8                     __ptext171:
 34127                           	opt stack 0
 34128  005FC8                     _fat_rename_file:
 34129                           	opt stack 20
 34130                           
 34131                           ;incstack = 0
 34132                           ;fat_rename_file@file_number stored from wreg
 34133  005FC8  0100               	movlb	0	; () banked
 34134  005FCA  6F60               	movwf	fat_rename_file@file_number& (0+255),b
 34135                           
 34136                           ;fat16.c: 538: rootEntry_t root;;fat16.c: 539: uint8_t cntr;;fat16.c: 542: fat_get_file_
      +                          information(file_number, &root);
 34137  005FCC  0E61               	movlw	low fat_rename_file@root
 34138  005FCE  6E37               	movwf	fat_get_file_information@data,c
 34139  005FD0  0E00               	movlw	high fat_rename_file@root
 34140  005FD2  6E38               	movwf	fat_get_file_information@data+1,c
 34141  005FD4  0100               	movlb	0	; () banked
 34142  005FD6  5160               	movf	fat_rename_file@file_number& (0+255),w,b
 34143  005FD8  ECAD  F034         	call	_fat_get_file_information
 34144                           
 34145                           ;fat16.c: 545: for(cntr=0; cntr<8; ++cntr)
 34146  005FDC  0E00               	movlw	0
 34147  005FDE  0100               	movlb	0	; () banked
 34148  005FE0  6F81               	movwf	fat_rename_file@cntr& (0+255),b
 34149  005FE2                     l12051:
 34150                           
 34151                           ; BSR set to: 0
 34152  005FE2  0E07               	movlw	7
 34153  005FE4  6581               	cpfsgt	fat_rename_file@cntr& (0+255),b
 34154  005FE6  D001               	goto	l2016
 34155  005FE8  D014               	goto	u9240
 34156  005FEA                     l2016:
 34157                           
 34158                           ; BSR set to: 0
 34159                           ;fat16.c: 546: {;fat16.c: 547: root.fileName[cntr] = name[cntr];
 34160                           
 34161                           ; BSR set to: 0
 34162  005FEA  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 34163  005FEC  0D01               	mullw	1
 34164  005FEE  50F3               	movf	prodl,w,c
 34165  005FF0  243F               	addwf	fat_rename_file@name,w,c
 34166  005FF2  6ED9               	movwf	fsr2l,c
 34167  005FF4  50F4               	movf	prodh,w,c
 34168  005FF6  2040               	addwfc	fat_rename_file@name+1,w,c
 34169  005FF8  6EDA               	movwf	fsr2h,c
 34170  005FFA  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 34171  005FFC  0D01               	mullw	1
 34172  005FFE  0E61               	movlw	low fat_rename_file@root
 34173  006000  24F3               	addwf	prodl,w,c
 34174  006002  6EE1               	movwf	fsr1l,c
 34175  006004  0E00               	movlw	high fat_rename_file@root
 34176  006006  20F4               	addwfc	prodh,w,c
 34177  006008  6EE2               	movwf	fsr1h,c
 34178  00600A  CFDF FFE7          	movff	indf2,indf1
 34179                           
 34180                           ; BSR set to: 0
 34181  00600E  2B81               	incf	fat_rename_file@cntr& (0+255),f,b
 34182  006010  D7E8               	goto	l12051
 34183  006012                     u9240:
 34184                           
 34185                           ; BSR set to: 0
 34186                           ;fat16.c: 548: };fat16.c: 551: for(cntr=0; cntr<3; ++cntr)
 34187                           
 34188                           ; BSR set to: 0
 34189  006012  0E00               	movlw	0
 34190  006014  6F81               	movwf	fat_rename_file@cntr& (0+255),b
 34191  006016                     l12063:
 34192                           
 34193                           ; BSR set to: 0
 34194  006016  0E02               	movlw	2
 34195  006018  6581               	cpfsgt	fat_rename_file@cntr& (0+255),b
 34196  00601A  D001               	goto	l2018
 34197  00601C  D018               	goto	u9260
 34198  00601E                     l2018:
 34199                           
 34200                           ; BSR set to: 0
 34201                           ;fat16.c: 552: {;fat16.c: 553: root.fileExtension[cntr] = extension[cntr];
 34202                           
 34203                           ; BSR set to: 0
 34204  00601E  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 34205  006020  0D01               	mullw	1
 34206  006022  50F3               	movf	prodl,w,c
 34207  006024  2441               	addwf	fat_rename_file@extension,w,c
 34208  006026  6ED9               	movwf	fsr2l,c
 34209  006028  50F4               	movf	prodh,w,c
 34210  00602A  2042               	addwfc	fat_rename_file@extension+1,w,c
 34211  00602C  6EDA               	movwf	fsr2h,c
 34212  00602E  5181               	movf	fat_rename_file@cntr& (0+255),w,b
 34213  006030  0D01               	mullw	1
 34214  006032  0E08               	movlw	8
 34215  006034  26F3               	addwf	prodl,f,c
 34216  006036  0E00               	movlw	0
 34217  006038  22F4               	addwfc	prodh,f,c
 34218  00603A  0E61               	movlw	low fat_rename_file@root
 34219  00603C  24F3               	addwf	prodl,w,c
 34220  00603E  6EE1               	movwf	fsr1l,c
 34221  006040  0E00               	movlw	high fat_rename_file@root
 34222  006042  20F4               	addwfc	prodh,w,c
 34223  006044  6EE2               	movwf	fsr1h,c
 34224  006046  CFDF FFE7          	movff	indf2,indf1
 34225                           
 34226                           ; BSR set to: 0
 34227  00604A  2B81               	incf	fat_rename_file@cntr& (0+255),f,b
 34228  00604C  D7E4               	goto	l12063
 34229  00604E                     u9260:
 34230                           
 34231                           ; BSR set to: 0
 34232                           ;fat16.c: 554: };fat16.c: 556: _write_root(file_number, &root);
 34233                           
 34234                           ; BSR set to: 0
 34235  00604E  0E61               	movlw	low fat_rename_file@root
 34236  006050  6E29               	movwf	__write_root@data,c
 34237  006052  0E00               	movlw	high fat_rename_file@root
 34238  006054  6E2A               	movwf	__write_root@data+1,c
 34239  006056  5160               	movf	fat_rename_file@file_number& (0+255),w,b
 34240  006058  EC17  F039         	call	__write_root
 34241  00605C  0012               	return		;funcret
 34242  00605E                     __end_of_fat_rename_file:
 34243                           	opt stack 0
 34244                           tosu	equ	0xFFF
 34245                           tosh	equ	0xFFE
 34246                           tosl	equ	0xFFD
 34247                           pclath	equ	0xFFA
 34248                           tblptru	equ	0xFF8
 34249                           tblptrh	equ	0xFF7
 34250                           tblptrl	equ	0xFF6
 34251                           tablat	equ	0xFF5
 34252                           prodh	equ	0xFF4
 34253                           prodl	equ	0xFF3
 34254                           intcon	equ	0xFF2
 34255                           intcon2	equ	0xFF1
 34256                           intcon3	equ	0xFF0
 34257                           indf0	equ	0xFEF
 34258                           postinc0	equ	0xFEE
 34259                           fsr0h	equ	0xFEA
 34260                           fsr0l	equ	0xFE9
 34261                           wreg	equ	0xFE8
 34262                           indf1	equ	0xFE7
 34263                           postdec1	equ	0xFE5
 34264                           plusw1	equ	0xFE3
 34265                           fsr1h	equ	0xFE2
 34266                           fsr1l	equ	0xFE1
 34267                           indf2	equ	0xFDF
 34268                           postinc2	equ	0xFDE
 34269                           postdec2	equ	0xFDD
 34270                           plusw2	equ	0xFDB
 34271                           fsr2h	equ	0xFDA
 34272                           fsr2l	equ	0xFD9
 34273                           status	equ	0xFD8
 34274                           
 34275 ;; *************** function __parse_file_modify *****************
 34276 ;; Defined at:
 34277 ;;		line 552 in file "api.c"
 34278 ;; Parameters:    Size  Location     Type
 34279 ;;  data            2    0[COMRAM] PTR unsigned char 
 34280 ;;		 -> RAM(3759), 
 34281 ;; Auto vars:     Size  Location     Type
 34282 ;;		None
 34283 ;; Return value:  Size  Location     Type
 34284 ;;                  1    wreg      unsigned char 
 34285 ;; Registers used:
 34286 ;;		wreg
 34287 ;; Tracked objects:
 34288 ;;		On entry : 0/0
 34289 ;;		On exit  : 0/0
 34290 ;;		Unchanged: 0/0
 34291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34295 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34296 ;;Total ram usage:        2 bytes
 34297 ;; Hardware stack levels used:    1
 34298 ;; This function calls:
 34299 ;;		Nothing
 34300 ;; This function is called by:
 34301 ;;		__parse_command_long
 34302 ;; This function uses a non-reentrant model
 34303 ;;
 34304                           
 34305                           	psect	text172
 34306  00821A                     __ptext172:
 34307                           	opt stack 0
 34308  00821A                     __parse_file_modify:
 34309                           	opt stack 28
 34310                           
 34311                           ;api.c: 556: return 65;
 34312                           
 34313                           ;incstack = 0
 34314  00821A  0E41               	movlw	65
 34315  00821C  0012               	return	
 34316  00821E                     __end_of__parse_file_modify:
 34317                           	opt stack 0
 34318                           tosu	equ	0xFFF
 34319                           tosh	equ	0xFFE
 34320                           tosl	equ	0xFFD
 34321                           pclath	equ	0xFFA
 34322                           tblptru	equ	0xFF8
 34323                           tblptrh	equ	0xFF7
 34324                           tblptrl	equ	0xFF6
 34325                           tablat	equ	0xFF5
 34326                           prodh	equ	0xFF4
 34327                           prodl	equ	0xFF3
 34328                           intcon	equ	0xFF2
 34329                           intcon2	equ	0xFF1
 34330                           intcon3	equ	0xFF0
 34331                           indf0	equ	0xFEF
 34332                           postinc0	equ	0xFEE
 34333                           fsr0h	equ	0xFEA
 34334                           fsr0l	equ	0xFE9
 34335                           wreg	equ	0xFE8
 34336                           indf1	equ	0xFE7
 34337                           postdec1	equ	0xFE5
 34338                           plusw1	equ	0xFE3
 34339                           fsr1h	equ	0xFE2
 34340                           fsr1l	equ	0xFE1
 34341                           indf2	equ	0xFDF
 34342                           postinc2	equ	0xFDE
 34343                           postdec2	equ	0xFDD
 34344                           plusw2	equ	0xFDB
 34345                           fsr2h	equ	0xFDA
 34346                           fsr2l	equ	0xFD9
 34347                           status	equ	0xFD8
 34348                           
 34349 ;; *************** function __parse_file_delete *****************
 34350 ;; Defined at:
 34351 ;;		line 500 in file "api.c"
 34352 ;; Parameters:    Size  Location     Type
 34353 ;;  data            2   62[COMRAM] PTR unsigned char 
 34354 ;;		 -> RAM(3759), 
 34355 ;; Auto vars:     Size  Location     Type
 34356 ;;		None
 34357 ;; Return value:  Size  Location     Type
 34358 ;;                  1    wreg      unsigned char 
 34359 ;; Registers used:
 34360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34361 ;; Tracked objects:
 34362 ;;		On entry : 0/0
 34363 ;;		On exit  : 0/0
 34364 ;;		Unchanged: 0/0
 34365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34369 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34370 ;;Total ram usage:        3 bytes
 34371 ;; Hardware stack levels used:    1
 34372 ;; Hardware stack levels required when called:    7
 34373 ;; This function calls:
 34374 ;;		_fat_delete_file
 34375 ;; This function is called by:
 34376 ;;		__parse_command_long
 34377 ;; This function uses a non-reentrant model
 34378 ;;
 34379                           
 34380                           	psect	text173
 34381  007638                     __ptext173:
 34382                           	opt stack 0
 34383  007638                     __parse_file_delete:
 34384                           	opt stack 21
 34385                           
 34386                           ;api.c: 503: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 34387                           
 34388                           ;incstack = 0
 34389  007638  C03F  FFD9         	movff	__parse_file_delete@data,fsr2l
 34390  00763C  C040  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 34391  007640  0E51               	movlw	81
 34392  007642  18DE               	xorwf	postinc2,w,c
 34393  007644  A4D8               	btfss	status,2,c
 34394  007646  D014               	goto	u9710
 34395  007648  EE20 F002          	lfsr	2,2
 34396  00764C  503F               	movf	__parse_file_delete@data,w,c
 34397  00764E  26D9               	addwf	fsr2l,f,c
 34398  007650  5040               	movf	__parse_file_delete@data+1,w,c
 34399  007652  22DA               	addwfc	fsr2h,f,c
 34400  007654  0E66               	movlw	102
 34401  007656  18DE               	xorwf	postinc2,w,c
 34402  007658  A4D8               	btfss	status,2,c
 34403  00765A  D00A               	goto	u9710
 34404  00765C  EE20 F003          	lfsr	2,3
 34405  007660  503F               	movf	__parse_file_delete@data,w,c
 34406  007662  26D9               	addwf	fsr2l,f,c
 34407  007664  5040               	movf	__parse_file_delete@data+1,w,c
 34408  007666  22DA               	addwfc	fsr2h,f,c
 34409  007668  0EA0               	movlw	160
 34410  00766A  18DE               	xorwf	postinc2,w,c
 34411  00766C  B4D8               	btfsc	status,2,c
 34412  00766E  D002               	goto	l2674
 34413  007670                     u9710:
 34414                           
 34415                           ;api.c: 504: {;api.c: 505: return 4;
 34416  007670  0E04               	movlw	4
 34417  007672  0012               	return	
 34418  007674                     l2674:
 34419                           
 34420                           ;api.c: 506: };api.c: 509: fat_delete_file(data[1]);
 34421  007674  EE20 F001          	lfsr	2,1
 34422  007678  503F               	movf	__parse_file_delete@data,w,c
 34423  00767A  26D9               	addwf	fsr2l,f,c
 34424  00767C  5040               	movf	__parse_file_delete@data+1,w,c
 34425  00767E  22DA               	addwfc	fsr2h,f,c
 34426  007680  50DF               	movf	indf2,w,c
 34427  007682  ECA1  F036         	call	_fat_delete_file
 34428                           
 34429                           ;api.c: 510: return 4;
 34430  007686  0E04               	movlw	4
 34431  007688  0012               	return	
 34432  00768A                     __end_of__parse_file_delete:
 34433                           	opt stack 0
 34434                           tosu	equ	0xFFF
 34435                           tosh	equ	0xFFE
 34436                           tosl	equ	0xFFD
 34437                           pclath	equ	0xFFA
 34438                           tblptru	equ	0xFF8
 34439                           tblptrh	equ	0xFF7
 34440                           tblptrl	equ	0xFF6
 34441                           tablat	equ	0xFF5
 34442                           prodh	equ	0xFF4
 34443                           prodl	equ	0xFF3
 34444                           intcon	equ	0xFF2
 34445                           intcon2	equ	0xFF1
 34446                           intcon3	equ	0xFF0
 34447                           indf0	equ	0xFEF
 34448                           postinc0	equ	0xFEE
 34449                           fsr0h	equ	0xFEA
 34450                           fsr0l	equ	0xFE9
 34451                           wreg	equ	0xFE8
 34452                           indf1	equ	0xFE7
 34453                           postdec1	equ	0xFE5
 34454                           plusw1	equ	0xFE3
 34455                           fsr1h	equ	0xFE2
 34456                           fsr1l	equ	0xFE1
 34457                           indf2	equ	0xFDF
 34458                           postinc2	equ	0xFDE
 34459                           postdec2	equ	0xFDD
 34460                           plusw2	equ	0xFDB
 34461                           fsr2h	equ	0xFDA
 34462                           fsr2l	equ	0xFD9
 34463                           status	equ	0xFD8
 34464                           
 34465 ;; *************** function _fat_delete_file *****************
 34466 ;; Defined at:
 34467 ;;		line 391 in file "fat16.c"
 34468 ;; Parameters:    Size  Location     Type
 34469 ;;  file_number     1    wreg     unsigned char 
 34470 ;; Auto vars:     Size  Location     Type
 34471 ;;  file_number     1   61[COMRAM] unsigned char 
 34472 ;;  first_cluste    2   59[COMRAM] unsigned int 
 34473 ;;  next_cluster    2   57[COMRAM] unsigned int 
 34474 ;; Return value:  Size  Location     Type
 34475 ;;                  1    wreg      void 
 34476 ;; Registers used:
 34477 ;;		wreg, status,2, status,0, cstack
 34478 ;; Tracked objects:
 34479 ;;		On entry : 0/0
 34480 ;;		On exit  : 0/0
 34481 ;;		Unchanged: 0/0
 34482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34484 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34486 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34487 ;;Total ram usage:        5 bytes
 34488 ;; Hardware stack levels used:    1
 34489 ;; Hardware stack levels required when called:    6
 34490 ;; This function calls:
 34491 ;;		__delete_root
 34492 ;;		__get_first_cluster
 34493 ;;		__read_fat
 34494 ;;		__root_is_available
 34495 ;;		__write_fat
 34496 ;; This function is called by:
 34497 ;;		__parse_file_delete
 34498 ;; This function uses a non-reentrant model
 34499 ;;
 34500                           
 34501                           	psect	text174
 34502  006D42                     __ptext174:
 34503                           	opt stack 0
 34504  006D42                     _fat_delete_file:
 34505                           	opt stack 21
 34506                           
 34507                           ;incstack = 0
 34508                           ;fat_delete_file@file_number stored from wreg
 34509  006D42  6E3E               	movwf	fat_delete_file@file_number,c
 34510                           
 34511                           ;fat16.c: 393: uint16_t first_cluster;;fat16.c: 394: uint16_t next_cluster;;fat16.c: 397
      +                          : if(file_number>=64)
 34512  006D44  0E3F               	movlw	63
 34513  006D46  643E               	cpfsgt	fat_delete_file@file_number,c
 34514  006D48  D001               	goto	l1990
 34515  006D4A  0012               	return	
 34516  006D4C                     l1990:
 34517                           
 34518                           ;fat16.c: 401: };fat16.c: 404: if(_root_is_available(file_number))
 34519  006D4C  503E               	movf	fat_delete_file@file_number,w,c
 34520  006D4E  EC72  F034         	call	__root_is_available
 34521  006D52  0900               	iorlw	0
 34522  006D54  A4D8               	btfss	status,2,c
 34523  006D56  0012               	return	
 34524                           
 34525                           ;fat16.c: 408: };fat16.c: 411: first_cluster = _get_first_cluster(file_number);
 34526                           
 34527                           ;fat16.c: 405: {;fat16.c: 407: return;
 34528  006D58  503E               	movf	fat_delete_file@file_number,w,c
 34529  006D5A  ECD6  F036         	call	__get_first_cluster
 34530  006D5E  C030  F03C         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 34531  006D62  C031  F03D         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 34532  006D66                     l1993:
 34533                           
 34534                           ;fat16.c: 415: {;fat16.c: 418: next_cluster = _read_fat(first_cluster);
 34535  006D66  C03C  F030         	movff	fat_delete_file@first_cluster,__read_fat@cluster
 34536  006D6A  C03D  F031         	movff	fat_delete_file@first_cluster+1,__read_fat@cluster+1
 34537  006D6E  ECDD  F03B         	call	__read_fat	;wreg free
 34538  006D72  C030  F03A         	movff	?__read_fat,fat_delete_file@next_cluster
 34539  006D76  C031  F03B         	movff	?__read_fat+1,fat_delete_file@next_cluster+1
 34540                           
 34541                           ;fat16.c: 425: _write_fat(first_cluster, 0x0000);
 34542  006D7A  C03C  F029         	movff	fat_delete_file@first_cluster,__write_fat@cluster
 34543  006D7E  C03D  F02A         	movff	fat_delete_file@first_cluster+1,__write_fat@cluster+1
 34544  006D82  0E00               	movlw	0
 34545  006D84  6E2C               	movwf	__write_fat@value+1,c
 34546  006D86  0E00               	movlw	0
 34547  006D88  6E2B               	movwf	__write_fat@value,c
 34548  006D8A  ECA6  F03C         	call	__write_fat	;wreg free
 34549                           
 34550                           ;fat16.c: 427: if(next_cluster>0xFFF0)
 34551  006D8E  0EF1               	movlw	241
 34552  006D90  5C3A               	subwf	fat_delete_file@next_cluster,w,c
 34553  006D92  0EFF               	movlw	255
 34554  006D94  583B               	subwfb	fat_delete_file@next_cluster+1,w,c
 34555  006D96  B0D8               	btfsc	status,0,c
 34556  006D98  D005               	goto	l1995
 34557                           
 34558                           ;fat16.c: 432: else;fat16.c: 433: {;fat16.c: 434: first_cluster = next_cluster;
 34559                           
 34560                           ;fat16.c: 430: }
 34561                           
 34562                           ;fat16.c: 428: {;fat16.c: 429: break;
 34563  006D9A  C03A  F03C         	movff	fat_delete_file@next_cluster,fat_delete_file@first_cluster
 34564  006D9E  C03B  F03D         	movff	fat_delete_file@next_cluster+1,fat_delete_file@first_cluster+1
 34565  006DA2  D7E1               	goto	l1993
 34566  006DA4                     l1995:
 34567                           
 34568                           ;fat16.c: 435: };fat16.c: 436: };fat16.c: 440: _delete_root(file_number);
 34569  006DA4  503E               	movf	fat_delete_file@file_number,w,c
 34570  006DA6  EC90  F038         	call	__delete_root
 34571  006DAA  0012               	return		;funcret
 34572  006DAC                     __end_of_fat_delete_file:
 34573                           	opt stack 0
 34574                           tosu	equ	0xFFF
 34575                           tosh	equ	0xFFE
 34576                           tosl	equ	0xFFD
 34577                           pclath	equ	0xFFA
 34578                           tblptru	equ	0xFF8
 34579                           tblptrh	equ	0xFF7
 34580                           tblptrl	equ	0xFF6
 34581                           tablat	equ	0xFF5
 34582                           prodh	equ	0xFF4
 34583                           prodl	equ	0xFF3
 34584                           intcon	equ	0xFF2
 34585                           intcon2	equ	0xFF1
 34586                           intcon3	equ	0xFF0
 34587                           indf0	equ	0xFEF
 34588                           postinc0	equ	0xFEE
 34589                           fsr0h	equ	0xFEA
 34590                           fsr0l	equ	0xFE9
 34591                           wreg	equ	0xFE8
 34592                           indf1	equ	0xFE7
 34593                           postdec1	equ	0xFE5
 34594                           plusw1	equ	0xFE3
 34595                           fsr1h	equ	0xFE2
 34596                           fsr1l	equ	0xFE1
 34597                           indf2	equ	0xFDF
 34598                           postinc2	equ	0xFDE
 34599                           postdec2	equ	0xFDD
 34600                           plusw2	equ	0xFDB
 34601                           fsr2h	equ	0xFDA
 34602                           fsr2l	equ	0xFD9
 34603                           status	equ	0xFD8
 34604                           
 34605 ;; *************** function __get_first_cluster *****************
 34606 ;; Defined at:
 34607 ;;		line 205 in file "fat16.c"
 34608 ;; Parameters:    Size  Location     Type
 34609 ;;  slot            1    wreg     unsigned char 
 34610 ;; Auto vars:     Size  Location     Type
 34611 ;;  slot            1   56[COMRAM] unsigned char 
 34612 ;;  first_cluste    2   54[COMRAM] unsigned int 
 34613 ;;  offset          2   52[COMRAM] unsigned int 
 34614 ;;  sector          2   50[COMRAM] unsigned int 
 34615 ;; Return value:  Size  Location     Type
 34616 ;;                  2   47[COMRAM] unsigned int 
 34617 ;; Registers used:
 34618 ;;		wreg, status,2, status,0, cstack
 34619 ;; Tracked objects:
 34620 ;;		On entry : 0/0
 34621 ;;		On exit  : 0/0
 34622 ;;		Unchanged: 0/0
 34623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34625 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34626 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34627 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34628 ;;Total ram usage:       10 bytes
 34629 ;; Hardware stack levels used:    1
 34630 ;; Hardware stack levels required when called:    5
 34631 ;; This function calls:
 34632 ;;		_flash_partial_read
 34633 ;; This function is called by:
 34634 ;;		_fat_delete_file
 34635 ;; This function uses a non-reentrant model
 34636 ;;
 34637                           
 34638                           	psect	text175
 34639  006DAC                     __ptext175:
 34640                           	opt stack 0
 34641  006DAC                     __get_first_cluster:
 34642                           	opt stack 21
 34643                           
 34644                           ;incstack = 0
 34645                           ;__get_first_cluster@slot stored from wreg
 34646  006DAC  6E39               	movwf	__get_first_cluster@slot,c
 34647                           
 34648                           ;fat16.c: 207: uint16_t sector;;fat16.c: 208: uint16_t offset;;fat16.c: 209: uint16_t fi
      +                          rst_cluster;;fat16.c: 210: sector = slot >> 4;
 34649  006DAE  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 34650  006DB2  3A32               	swapf	??__get_first_cluster,f,c
 34651  006DB4  0E0F               	movlw	15
 34652  006DB6  1632               	andwf	??__get_first_cluster,f,c
 34653  006DB8  5032               	movf	??__get_first_cluster,w,c
 34654  006DBA  6E33               	movwf	__get_first_cluster@sector,c
 34655  006DBC  6A34               	clrf	__get_first_cluster@sector+1,c
 34656                           
 34657                           ;fat16.c: 211: sector += 34;
 34658  006DBE  0E22               	movlw	34
 34659  006DC0  2633               	addwf	__get_first_cluster@sector,f,c
 34660  006DC2  0E00               	movlw	0
 34661  006DC4  2234               	addwfc	__get_first_cluster@sector+1,f,c
 34662                           
 34663                           ;fat16.c: 212: offset = slot & 0b1111;
 34664  006DC6  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 34665  006DCA  0E0F               	movlw	15
 34666  006DCC  1632               	andwf	??__get_first_cluster,f,c
 34667  006DCE  5032               	movf	??__get_first_cluster,w,c
 34668  006DD0  6E35               	movwf	__get_first_cluster@offset,c
 34669  006DD2  6A36               	clrf	__get_first_cluster@offset+1,c
 34670                           
 34671                           ;fat16.c: 213: offset <<= 5;
 34672  006DD4  0E05               	movlw	5
 34673  006DD6                     u8365:
 34674  006DD6  90D8               	bcf	status,0,c
 34675  006DD8  3635               	rlcf	__get_first_cluster@offset,f,c
 34676  006DDA  3636               	rlcf	__get_first_cluster@offset+1,f,c
 34677  006DDC  2EE8               	decfsz	wreg,f,c
 34678  006DDE  D7FB               	goto	u8365
 34679                           
 34680                           ;fat16.c: 214: offset += 26;
 34681  006DE0  0E1A               	movlw	26
 34682  006DE2  2635               	addwf	__get_first_cluster@offset,f,c
 34683  006DE4  0E00               	movlw	0
 34684  006DE6  2236               	addwfc	__get_first_cluster@offset+1,f,c
 34685                           
 34686                           ;fat16.c: 215: flash_partial_read(sector, offset, 2, &first_cluster);
 34687  006DE8  C033  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 34688  006DEC  C034  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 34689  006DF0  C035  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 34690  006DF4  C036  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 34691  006DF8  0E00               	movlw	0
 34692  006DFA  6E2D               	movwf	flash_partial_read@length+1,c
 34693  006DFC  0E02               	movlw	2
 34694  006DFE  6E2C               	movwf	flash_partial_read@length,c
 34695  006E00  0E37               	movlw	low __get_first_cluster@first_cluster
 34696  006E02  6E2E               	movwf	flash_partial_read@data,c
 34697  006E04  0E00               	movlw	high __get_first_cluster@first_cluster
 34698  006E06  6E2F               	movwf	flash_partial_read@data+1,c
 34699  006E08  EC24  F03E         	call	_flash_partial_read	;wreg free
 34700                           
 34701                           ;fat16.c: 216: return first_cluster;
 34702  006E0C  C037  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 34703  006E10  C038  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 34704  006E14  0012               	return	
 34705  006E16                     __end_of__get_first_cluster:
 34706                           	opt stack 0
 34707                           tosu	equ	0xFFF
 34708                           tosh	equ	0xFFE
 34709                           tosl	equ	0xFFD
 34710                           pclath	equ	0xFFA
 34711                           tblptru	equ	0xFF8
 34712                           tblptrh	equ	0xFF7
 34713                           tblptrl	equ	0xFF6
 34714                           tablat	equ	0xFF5
 34715                           prodh	equ	0xFF4
 34716                           prodl	equ	0xFF3
 34717                           intcon	equ	0xFF2
 34718                           intcon2	equ	0xFF1
 34719                           intcon3	equ	0xFF0
 34720                           indf0	equ	0xFEF
 34721                           postinc0	equ	0xFEE
 34722                           fsr0h	equ	0xFEA
 34723                           fsr0l	equ	0xFE9
 34724                           wreg	equ	0xFE8
 34725                           indf1	equ	0xFE7
 34726                           postdec1	equ	0xFE5
 34727                           plusw1	equ	0xFE3
 34728                           fsr1h	equ	0xFE2
 34729                           fsr1l	equ	0xFE1
 34730                           indf2	equ	0xFDF
 34731                           postinc2	equ	0xFDE
 34732                           postdec2	equ	0xFDD
 34733                           plusw2	equ	0xFDB
 34734                           fsr2h	equ	0xFDA
 34735                           fsr2l	equ	0xFD9
 34736                           status	equ	0xFD8
 34737                           
 34738 ;; *************** function __delete_root *****************
 34739 ;; Defined at:
 34740 ;;		line 192 in file "fat16.c"
 34741 ;; Parameters:    Size  Location     Type
 34742 ;;  slot            1    wreg     unsigned char 
 34743 ;; Auto vars:     Size  Location     Type
 34744 ;;  slot            1   46[COMRAM] unsigned char 
 34745 ;;  offset          2   43[COMRAM] unsigned int 
 34746 ;;  root_sector     2   41[COMRAM] unsigned int 
 34747 ;;  deleted_valu    1   45[COMRAM] unsigned char 
 34748 ;; Return value:  Size  Location     Type
 34749 ;;                  1    wreg      void 
 34750 ;; Registers used:
 34751 ;;		wreg, status,2, status,0, cstack
 34752 ;; Tracked objects:
 34753 ;;		On entry : 0/0
 34754 ;;		On exit  : 0/0
 34755 ;;		Unchanged: 0/0
 34756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34758 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34760 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34761 ;;Total ram usage:        7 bytes
 34762 ;; Hardware stack levels used:    1
 34763 ;; Hardware stack levels required when called:    5
 34764 ;; This function calls:
 34765 ;;		_flash_partial_write
 34766 ;; This function is called by:
 34767 ;;		_fat_delete_file
 34768 ;; This function uses a non-reentrant model
 34769 ;;
 34770                           
 34771                           	psect	text176
 34772  007120                     __ptext176:
 34773                           	opt stack 0
 34774  007120                     __delete_root:
 34775                           	opt stack 21
 34776                           
 34777                           ;incstack = 0
 34778                           ;__delete_root@slot stored from wreg
 34779  007120  6E2F               	movwf	__delete_root@slot,c
 34780                           
 34781                           ;fat16.c: 194: uint16_t root_sector;;fat16.c: 195: uint16_t offset;;fat16.c: 196: uint8_
      +                          t deleted_value;;fat16.c: 198: root_sector = (slot >> 4) + 34;
 34782  007122  C02F  F029         	movff	__delete_root@slot,??__delete_root
 34783  007126  3A29               	swapf	??__delete_root,f,c
 34784  007128  0E0F               	movlw	15
 34785  00712A  1629               	andwf	??__delete_root,f,c
 34786  00712C  0E22               	movlw	34
 34787  00712E  2429               	addwf	??__delete_root,w,c
 34788  007130  6E2A               	movwf	__delete_root@root_sector,c
 34789  007132  6A2B               	clrf	__delete_root@root_sector+1,c
 34790  007134  0E00               	movlw	0
 34791  007136  222B               	addwfc	__delete_root@root_sector+1,f,c
 34792                           
 34793                           ;fat16.c: 199: offset = (slot & 0b1111);
 34794  007138  C02F  F029         	movff	__delete_root@slot,??__delete_root
 34795  00713C  0E0F               	movlw	15
 34796  00713E  1629               	andwf	??__delete_root,f,c
 34797  007140  5029               	movf	??__delete_root,w,c
 34798  007142  6E2C               	movwf	__delete_root@offset,c
 34799  007144  6A2D               	clrf	__delete_root@offset+1,c
 34800                           
 34801                           ;fat16.c: 200: offset <<= 5;
 34802  007146  0E05               	movlw	5
 34803  007148                     u8355:
 34804  007148  90D8               	bcf	status,0,c
 34805  00714A  362C               	rlcf	__delete_root@offset,f,c
 34806  00714C  362D               	rlcf	__delete_root@offset+1,f,c
 34807  00714E  2EE8               	decfsz	wreg,f,c
 34808  007150  D7FB               	goto	u8355
 34809                           
 34810                           ;fat16.c: 201: deleted_value = 0xE5;
 34811  007152  0EE5               	movlw	229
 34812  007154  6E2E               	movwf	__delete_root@deleted_value,c
 34813                           
 34814                           ;fat16.c: 202: flash_partial_write(root_sector, offset, 1, &deleted_value);
 34815  007156  C02A  F020         	movff	__delete_root@root_sector,flash_partial_write@page
 34816  00715A  C02B  F021         	movff	__delete_root@root_sector+1,flash_partial_write@page+1
 34817  00715E  C02C  F022         	movff	__delete_root@offset,flash_partial_write@start
 34818  007162  C02D  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 34819  007166  0E00               	movlw	0
 34820  007168  6E25               	movwf	flash_partial_write@length+1,c
 34821  00716A  0E01               	movlw	1
 34822  00716C  6E24               	movwf	flash_partial_write@length,c
 34823  00716E  0E2E               	movlw	low __delete_root@deleted_value
 34824  007170  6E26               	movwf	flash_partial_write@data,c
 34825  007172  0E00               	movlw	high __delete_root@deleted_value
 34826  007174  6E27               	movwf	flash_partial_write@data+1,c
 34827  007176  EC92  F035         	call	_flash_partial_write	;wreg free
 34828  00717A  0012               	return		;funcret
 34829  00717C                     __end_of__delete_root:
 34830                           	opt stack 0
 34831                           tosu	equ	0xFFF
 34832                           tosh	equ	0xFFE
 34833                           tosl	equ	0xFFD
 34834                           pclath	equ	0xFFA
 34835                           tblptru	equ	0xFF8
 34836                           tblptrh	equ	0xFF7
 34837                           tblptrl	equ	0xFF6
 34838                           tablat	equ	0xFF5
 34839                           prodh	equ	0xFF4
 34840                           prodl	equ	0xFF3
 34841                           intcon	equ	0xFF2
 34842                           intcon2	equ	0xFF1
 34843                           intcon3	equ	0xFF0
 34844                           indf0	equ	0xFEF
 34845                           postinc0	equ	0xFEE
 34846                           fsr0h	equ	0xFEA
 34847                           fsr0l	equ	0xFE9
 34848                           wreg	equ	0xFE8
 34849                           indf1	equ	0xFE7
 34850                           postdec1	equ	0xFE5
 34851                           plusw1	equ	0xFE3
 34852                           fsr1h	equ	0xFE2
 34853                           fsr1l	equ	0xFE1
 34854                           indf2	equ	0xFDF
 34855                           postinc2	equ	0xFDE
 34856                           postdec2	equ	0xFDD
 34857                           plusw2	equ	0xFDB
 34858                           fsr2h	equ	0xFDA
 34859                           fsr2l	equ	0xFD9
 34860                           status	equ	0xFD8
 34861                           
 34862 ;; *************** function __parse_file_create *****************
 34863 ;; Defined at:
 34864 ;;		line 513 in file "api.c"
 34865 ;; Parameters:    Size  Location     Type
 34866 ;;  data            2   79[COMRAM] PTR unsigned char 
 34867 ;;		 -> RAM(3759), 
 34868 ;; Auto vars:     Size  Location     Type
 34869 ;;		None
 34870 ;; Return value:  Size  Location     Type
 34871 ;;                  1    wreg      unsigned char 
 34872 ;; Registers used:
 34873 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34874 ;; Tracked objects:
 34875 ;;		On entry : 0/0
 34876 ;;		On exit  : 0/0
 34877 ;;		Unchanged: 0/0
 34878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34882 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34883 ;;Total ram usage:        3 bytes
 34884 ;; Hardware stack levels used:    1
 34885 ;; Hardware stack levels required when called:    8
 34886 ;; This function calls:
 34887 ;;		_fat_create_file
 34888 ;; This function is called by:
 34889 ;;		__parse_command_long
 34890 ;; This function uses a non-reentrant model
 34891 ;;
 34892                           
 34893                           	psect	text177
 34894  006C02                     __ptext177:
 34895                           	opt stack 0
 34896  006C02                     __parse_file_create:
 34897                           	opt stack 20
 34898                           
 34899                           ;api.c: 516: if((data[0]!=COMMAND_FILE_CREATE) || (data[12]!=0xBD) || (data[13]!=0x4F))
 34900                           
 34901                           ;incstack = 0
 34902  006C02  C050  FFD9         	movff	__parse_file_create@data,fsr2l
 34903  006C06  C051  FFDA         	movff	__parse_file_create@data+1,fsr2h
 34904  006C0A  0E52               	movlw	82
 34905  006C0C  18DE               	xorwf	postinc2,w,c
 34906  006C0E  A4D8               	btfss	status,2,c
 34907  006C10  D014               	goto	u9740
 34908  006C12  EE20 F00C          	lfsr	2,12
 34909  006C16  5050               	movf	__parse_file_create@data,w,c
 34910  006C18  26D9               	addwf	fsr2l,f,c
 34911  006C1A  5051               	movf	__parse_file_create@data+1,w,c
 34912  006C1C  22DA               	addwfc	fsr2h,f,c
 34913  006C1E  0EBD               	movlw	189
 34914  006C20  18DE               	xorwf	postinc2,w,c
 34915  006C22  A4D8               	btfss	status,2,c
 34916  006C24  D00A               	goto	u9740
 34917  006C26  EE20 F00D          	lfsr	2,13
 34918  006C2A  5050               	movf	__parse_file_create@data,w,c
 34919  006C2C  26D9               	addwf	fsr2l,f,c
 34920  006C2E  5051               	movf	__parse_file_create@data+1,w,c
 34921  006C30  22DA               	addwfc	fsr2h,f,c
 34922  006C32  0E4F               	movlw	79
 34923  006C34  18DE               	xorwf	postinc2,w,c
 34924  006C36  B4D8               	btfsc	status,2,c
 34925  006C38  D002               	goto	l2680
 34926  006C3A                     u9740:
 34927                           
 34928                           ;api.c: 517: {;api.c: 518: return 14;
 34929  006C3A  0E0E               	movlw	14
 34930  006C3C  0012               	return	
 34931  006C3E                     l2680:
 34932                           
 34933                           ;api.c: 519: };api.c: 522: fat_create_file(&data[1], &data[9], 0);
 34934  006C3E  0E01               	movlw	1
 34935  006C40  2450               	addwf	__parse_file_create@data,w,c
 34936  006C42  6E44               	movwf	fat_create_file@name,c
 34937  006C44  0E00               	movlw	0
 34938  006C46  2051               	addwfc	__parse_file_create@data+1,w,c
 34939  006C48  6E45               	movwf	fat_create_file@name+1,c
 34940  006C4A  0E09               	movlw	9
 34941  006C4C  2450               	addwf	__parse_file_create@data,w,c
 34942  006C4E  6E46               	movwf	fat_create_file@extension,c
 34943  006C50  0E00               	movlw	0
 34944  006C52  2051               	addwfc	__parse_file_create@data+1,w,c
 34945  006C54  6E47               	movwf	fat_create_file@extension+1,c
 34946  006C56  0E00               	movlw	0
 34947  006C58  6E48               	movwf	fat_create_file@size,c
 34948  006C5A  0E00               	movlw	0
 34949  006C5C  6E49               	movwf	fat_create_file@size+1,c
 34950  006C5E  0E00               	movlw	0
 34951  006C60  6E4A               	movwf	fat_create_file@size+2,c
 34952  006C62  0E00               	movlw	0
 34953  006C64  6E4B               	movwf	fat_create_file@size+3,c
 34954  006C66  ECAF  F018         	call	_fat_create_file	;wreg free
 34955                           
 34956                           ;api.c: 523: return 14;
 34957  006C6A  0E0E               	movlw	14
 34958  006C6C  0012               	return	
 34959  006C6E                     __end_of__parse_file_create:
 34960                           	opt stack 0
 34961                           tosu	equ	0xFFF
 34962                           tosh	equ	0xFFE
 34963                           tosl	equ	0xFFD
 34964                           pclath	equ	0xFFA
 34965                           tblptru	equ	0xFF8
 34966                           tblptrh	equ	0xFF7
 34967                           tblptrl	equ	0xFF6
 34968                           tablat	equ	0xFF5
 34969                           prodh	equ	0xFF4
 34970                           prodl	equ	0xFF3
 34971                           intcon	equ	0xFF2
 34972                           intcon2	equ	0xFF1
 34973                           intcon3	equ	0xFF0
 34974                           indf0	equ	0xFEF
 34975                           postinc0	equ	0xFEE
 34976                           fsr0h	equ	0xFEA
 34977                           fsr0l	equ	0xFE9
 34978                           wreg	equ	0xFE8
 34979                           indf1	equ	0xFE7
 34980                           postdec1	equ	0xFE5
 34981                           plusw1	equ	0xFE3
 34982                           fsr1h	equ	0xFE2
 34983                           fsr1l	equ	0xFE1
 34984                           indf2	equ	0xFDF
 34985                           postinc2	equ	0xFDE
 34986                           postdec2	equ	0xFDD
 34987                           plusw2	equ	0xFDB
 34988                           fsr2h	equ	0xFDA
 34989                           fsr2l	equ	0xFD9
 34990                           status	equ	0xFD8
 34991                           
 34992 ;; *************** function _fat_create_file *****************
 34993 ;; Defined at:
 34994 ;;		line 309 in file "fat16.c"
 34995 ;; Parameters:    Size  Location     Type
 34996 ;;  name            2   67[COMRAM] PTR unsigned char 
 34997 ;;		 -> RAM(3759), 
 34998 ;;  extension       2   69[COMRAM] PTR unsigned char 
 34999 ;;		 -> RAM(3759), 
 35000 ;;  size            4   71[COMRAM] unsigned long 
 35001 ;; Auto vars:     Size  Location     Type
 35002 ;;  root_entry     32    9[BANK0 ] struct .
 35003 ;;  cluster         2    7[BANK0 ] unsigned int 
 35004 ;;  number_of_cl    2    5[BANK0 ] unsigned int 
 35005 ;;  cluster_coun    2    2[BANK0 ] unsigned int 
 35006 ;;  next_cluster    2    0[BANK0 ] unsigned int 
 35007 ;;  root_slot       1    4[BANK0 ] unsigned char 
 35008 ;; Return value:  Size  Location     Type
 35009 ;;                  1    wreg      unsigned char 
 35010 ;; Registers used:
 35011 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35012 ;; Tracked objects:
 35013 ;;		On entry : 0/0
 35014 ;;		On exit  : 0/0
 35015 ;;		Unchanged: 0/0
 35016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35017 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35018 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35019 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35020 ;;      Totals:        12      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35021 ;;Total ram usage:       53 bytes
 35022 ;; Hardware stack levels used:    1
 35023 ;; Hardware stack levels required when called:    7
 35024 ;; This function calls:
 35025 ;;		__get_available_root_entry
 35026 ;;		__get_date
 35027 ;;		__get_empty_cluster
 35028 ;;		__get_time
 35029 ;;		__write_fat
 35030 ;;		__write_root
 35031 ;;		_fat_find_file
 35032 ;;		_fat_get_empty_clusters
 35033 ;;		_memcpy
 35034 ;; This function is called by:
 35035 ;;		__parse_file_create
 35036 ;; This function uses a non-reentrant model
 35037 ;;
 35038                           
 35039                           	psect	text178
 35040  00315E                     __ptext178:
 35041                           	opt stack 0
 35042  00315E                     _fat_create_file:
 35043                           	opt stack 20
 35044                           
 35045                           ;fat16.c: 311: uint8_t root_slot;;fat16.c: 312: rootEntry_t root_entry;;fat16.c: 313: ui
      +                          nt16_t cluster;;fat16.c: 314: uint16_t next_cluster;;fat16.c: 315: uint16_t number_of_cl
      +                          usters;;fat16.c: 316: uint16_t cluster_count;;fat16.c: 320: if(fat_find_file(name, exten
      +                          sion) != 0xFF)
 35046                           
 35047                           ;incstack = 0
 35048  00315E  C044  F030         	movff	fat_create_file@name,fat_find_file@name
 35049  003162  C045  F031         	movff	fat_create_file@name+1,fat_find_file@name+1
 35050  003166  C046  F032         	movff	fat_create_file@extension,fat_find_file@extension
 35051  00316A  C047  F033         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 35052  00316E  EC9D  F02B         	call	_fat_find_file	;wreg free
 35053  003172  0AFF               	xorlw	255
 35054  003174  A4D8               	btfss	status,2,c
 35055  003176  0012               	return	
 35056                           
 35057                           ;fat16.c: 325: };fat16.c: 329: root_slot = _get_available_root_entry();
 35058                           
 35059                           ;fat16.c: 321: {;fat16.c: 324: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 35060  003178  EC77  F03F         	call	__get_available_root_entry	;wreg free
 35061  00317C  0100               	movlb	0	; () banked
 35062  00317E  6F64               	movwf	fat_create_file@root_slot& (0+255),b
 35063                           
 35064                           ; BSR set to: 0
 35065                           ;fat16.c: 330: if(root_slot == 0xFF)
 35066  003180  2964               	incf	fat_create_file@root_slot& (0+255),w,b
 35067  003182  B4D8               	btfsc	status,2,c
 35068  003184  0012               	return	
 35069                           
 35070                           ; BSR set to: 0
 35071                           ;fat16.c: 335: };fat16.c: 338: number_of_clusters = (size>>9) + 1;
 35072                           
 35073                           ; BSR set to: 0
 35074                           
 35075                           ; BSR set to: 0
 35076                           ;fat16.c: 331: {;fat16.c: 334: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 35077  003186  C048  F04C         	movff	fat_create_file@size,??_fat_create_file
 35078  00318A  C049  F04D         	movff	fat_create_file@size+1,??_fat_create_file+1
 35079  00318E  C04A  F04E         	movff	fat_create_file@size+2,??_fat_create_file+2
 35080  003192  C04B  F04F         	movff	fat_create_file@size+3,??_fat_create_file+3
 35081  003196  0E0A               	movlw	10
 35082  003198  D005               	goto	u9100
 35083  00319A                     u9105:
 35084  00319A  90D8               	bcf	status,0,c
 35085  00319C  324F               	rrcf	??_fat_create_file+3,f,c
 35086  00319E  324E               	rrcf	??_fat_create_file+2,f,c
 35087  0031A0  324D               	rrcf	??_fat_create_file+1,f,c
 35088  0031A2  324C               	rrcf	??_fat_create_file,f,c
 35089  0031A4                     u9100:
 35090  0031A4  2EE8               	decfsz	wreg,f,c
 35091  0031A6  D7F9               	goto	u9105
 35092  0031A8  0E01               	movlw	1
 35093  0031AA  244C               	addwf	??_fat_create_file,w,c
 35094  0031AC  6F65               	movwf	fat_create_file@number_of_clusters& (0+255),b
 35095  0031AE  0E00               	movlw	0
 35096  0031B0  204D               	addwfc	??_fat_create_file+1,w,c
 35097  0031B2  6F66               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 35098                           
 35099                           ; BSR set to: 0
 35100                           ;fat16.c: 339: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 35101  0031B4  C065  F030         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 35102  0031B8  C066  F031         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 35103  0031BC  ECE6  F031         	call	_fat_get_empty_clusters	;wreg free
 35104  0031C0  0100               	movlb	0	; () banked
 35105  0031C2  5165               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 35106  0031C4  1830               	xorwf	?_fat_get_empty_clusters,w,c
 35107  0031C6  E105               	bnz	u9110
 35108  0031C8  5166               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 35109  0031CA  1831               	xorwf	?_fat_get_empty_clusters+1,w,c
 35110  0031CC  A4D8               	btfss	status,2,c
 35111  0031CE  0012               	return	
 35112  0031D0  D001               	goto	l1982
 35113  0031D2                     u9110:
 35114                           
 35115                           ; BSR set to: 0
 35116                           ;fat16.c: 340: {;fat16.c: 343: return 0xFD;;	Return value of _fat_create_file is never u
      +                          sed
 35117  0031D2  0012               	return	
 35118  0031D4                     l1982:
 35119                           
 35120                           ; BSR set to: 0
 35121                           ;fat16.c: 344: };fat16.c: 347: cluster = _get_empty_cluster(2);
 35122                           
 35123                           ; BSR set to: 0
 35124  0031D4  0E00               	movlw	0
 35125  0031D6  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 35126  0031D8  0E02               	movlw	2
 35127  0031DA  6E30               	movwf	__get_empty_cluster@first_cluster,c
 35128  0031DC  ECE7  F034         	call	__get_empty_cluster	;wreg free
 35129  0031E0  C030  F067         	movff	?__get_empty_cluster,fat_create_file@cluster
 35130  0031E4  C031  F068         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 35131                           
 35132                           ;fat16.c: 350: memcpy(root_entry.fileName, name, 8);
 35133  0031E8  0E69               	movlw	low fat_create_file@root_entry
 35134  0031EA  6E01               	movwf	memcpy@d1,c
 35135  0031EC  0E00               	movlw	high fat_create_file@root_entry
 35136  0031EE  6E02               	movwf	memcpy@d1+1,c
 35137  0031F0  C044  F003         	movff	fat_create_file@name,memcpy@s1
 35138  0031F4  C045  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 35139  0031F8  5003               	movf	memcpy@s1,w,c
 35140  0031FA  1004               	iorwf	memcpy@s1+1,w,c
 35141  0031FC  A4D8               	btfss	status,2,c
 35142  0031FE  0E20               	movlw	32
 35143  003200  6E05               	movwf	memcpy@s1+2,c
 35144  003202  0E00               	movlw	0
 35145  003204  6E07               	movwf	memcpy@n+1,c
 35146  003206  0E08               	movlw	8
 35147  003208  6E06               	movwf	memcpy@n,c
 35148  00320A  EC3E  F037         	call	_memcpy	;wreg free
 35149                           
 35150                           ;fat16.c: 351: memcpy(root_entry.fileExtension, extension, 3);
 35151  00320E  0E71               	movlw	low (fat_create_file@root_entry+8)
 35152  003210  6E01               	movwf	memcpy@d1,c
 35153  003212  0E00               	movlw	high (fat_create_file@root_entry+8)
 35154  003214  6E02               	movwf	memcpy@d1+1,c
 35155  003216  C046  F003         	movff	fat_create_file@extension,memcpy@s1
 35156  00321A  C047  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 35157  00321E  5003               	movf	memcpy@s1,w,c
 35158  003220  1004               	iorwf	memcpy@s1+1,w,c
 35159  003222  A4D8               	btfss	status,2,c
 35160  003224  0E20               	movlw	32
 35161  003226  6E05               	movwf	memcpy@s1+2,c
 35162  003228  0E00               	movlw	0
 35163  00322A  6E07               	movwf	memcpy@n+1,c
 35164  00322C  0E03               	movlw	3
 35165  00322E  6E06               	movwf	memcpy@n,c
 35166  003230  EC3E  F037         	call	_memcpy	;wreg free
 35167                           
 35168                           ;fat16.c: 352: root_entry.attributes = 0x00;
 35169  003234  0E00               	movlw	0
 35170  003236  0100               	movlb	0	; () banked
 35171  003238  6F74               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 35172                           
 35173                           ; BSR set to: 0
 35174                           ;fat16.c: 353: root_entry.reserved1 = 0x00;
 35175  00323A  0E00               	movlw	0
 35176  00323C  6F75               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 35177                           
 35178                           ; BSR set to: 0
 35179                           ;fat16.c: 354: root_entry.secondFractions = 0x00;
 35180  00323E  0E00               	movlw	0
 35181  003240  6F76               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 35182                           
 35183                           ; BSR set to: 0
 35184                           ;fat16.c: 355: root_entry.createdTime = _get_time();
 35185  003242  ECDF  F040         	call	__get_time	;wreg free
 35186  003246  C001  F077         	movff	?__get_time,fat_create_file@root_entry+14
 35187  00324A  C002  F078         	movff	?__get_time+1,fat_create_file@root_entry+15
 35188                           
 35189                           ;fat16.c: 356: root_entry.createdDate = _get_date();
 35190  00324E  ECE4  F040         	call	__get_date	;wreg free
 35191  003252  C001  F079         	movff	?__get_date,fat_create_file@root_entry+16
 35192  003256  C002  F07A         	movff	?__get_date+1,fat_create_file@root_entry+17
 35193                           
 35194                           ;fat16.c: 357: root_entry.lastAccessDate = root_entry.createdDate;
 35195  00325A  C079  F07B         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 35196  00325E  C07A  F07C         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 35197                           
 35198                           ;fat16.c: 358: root_entry.reserved2 = 0x00;
 35199  003262  0E00               	movlw	0
 35200  003264  0100               	movlb	0	; () banked
 35201  003266  6F7E               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 35202  003268  0E00               	movlw	0
 35203  00326A  6F7D               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 35204                           
 35205                           ; BSR set to: 0
 35206                           ;fat16.c: 359: root_entry.modifiedTime = root_entry.createdTime;
 35207  00326C  C077  F07F         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 35208  003270  C078  F080         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 35209                           
 35210                           ; BSR set to: 0
 35211                           ;fat16.c: 360: root_entry.modifiedDate = root_entry.createdDate;
 35212  003274  C079  F081         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 35213  003278  C07A  F082         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 35214                           
 35215                           ; BSR set to: 0
 35216                           ;fat16.c: 361: root_entry.firstCluster = cluster;
 35217  00327C  C067  F083         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 35218  003280  C068  F084         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 35219                           
 35220                           ; BSR set to: 0
 35221                           ;fat16.c: 362: root_entry.fileSize = size;
 35222  003284  C048  F085         	movff	fat_create_file@size,fat_create_file@root_entry+28
 35223  003288  C049  F086         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 35224  00328C  C04A  F087         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 35225  003290  C04B  F088         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 35226                           
 35227                           ;fat16.c: 365: _write_root(root_slot, &root_entry);
 35228  003294  0E69               	movlw	low fat_create_file@root_entry
 35229  003296  6E29               	movwf	__write_root@data,c
 35230  003298  0E00               	movlw	high fat_create_file@root_entry
 35231  00329A  6E2A               	movwf	__write_root@data+1,c
 35232  00329C  5164               	movf	fat_create_file@root_slot& (0+255),w,b
 35233  00329E  EC17  F039         	call	__write_root
 35234                           
 35235                           ;fat16.c: 370: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 35236  0032A2  0E00               	movlw	0
 35237  0032A4  0100               	movlb	0	; () banked
 35238  0032A6  6F63               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 35239  0032A8  0E01               	movlw	1
 35240  0032AA  6F62               	movwf	fat_create_file@cluster_count& (0+255),b
 35241  0032AC  D02F               	goto	l1983
 35242  0032AE                     
 35243                           ; BSR set to: 0
 35244                           ;fat16.c: 371: {;fat16.c: 373: if(cluster_count==number_of_clusters)
 35245                           
 35246                           ; BSR set to: 0
 35247  0032AE  5165               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 35248  0032B0  1962               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 35249  0032B2  E10E               	bnz	l11963
 35250  0032B4  5166               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 35251  0032B6  1963               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 35252  0032B8  A4D8               	btfss	status,2,c
 35253  0032BA  D00A               	goto	l1985
 35254                           
 35255                           ; BSR set to: 0
 35256                           ;fat16.c: 374: {;fat16.c: 376: _write_fat(cluster, 0xFFFF);
 35257  0032BC  C067  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 35258  0032C0  C068  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 35259  0032C4  0EFF               	movlw	255
 35260  0032C6  6E2C               	movwf	__write_fat@value+1,c
 35261  0032C8  682B               	setf	__write_fat@value,c
 35262  0032CA  ECA6  F03C         	call	__write_fat	;wreg free
 35263                           
 35264                           ;fat16.c: 377: }
 35265  0032CE  D01B               	goto	l1986
 35266  0032D0                     l1985:
 35267  0032D0                     l11963:
 35268                           
 35269                           ;fat16.c: 378: else;fat16.c: 379: {;fat16.c: 381: next_cluster = _get_empty_cluster(clus
      +                          ter+1);
 35270  0032D0  0E01               	movlw	1
 35271  0032D2  0100               	movlb	0	; () banked
 35272  0032D4  2567               	addwf	fat_create_file@cluster& (0+255),w,b
 35273  0032D6  6E30               	movwf	__get_empty_cluster@first_cluster,c
 35274  0032D8  0E00               	movlw	0
 35275  0032DA  2168               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 35276  0032DC  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 35277  0032DE  ECE7  F034         	call	__get_empty_cluster	;wreg free
 35278  0032E2  C030  F060         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 35279  0032E6  C031  F061         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 35280                           
 35281                           ;fat16.c: 383: _write_fat(cluster, next_cluster);
 35282  0032EA  C067  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 35283  0032EE  C068  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 35284  0032F2  C060  F02B         	movff	fat_create_file@next_cluster,__write_fat@value
 35285  0032F6  C061  F02C         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 35286  0032FA  ECA6  F03C         	call	__write_fat	;wreg free
 35287                           
 35288                           ;fat16.c: 385: cluster = next_cluster;
 35289  0032FE  C060  F067         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 35290  003302  C061  F068         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 35291  003306                     l1986:
 35292  003306  0100               	movlb	0	; () banked
 35293  003308  4B62               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 35294  00330A  2B63               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 35295  00330C                     l1983:
 35296                           
 35297                           ; BSR set to: 0
 35298                           
 35299                           ; BSR set to: 0
 35300  00330C  5162               	movf	fat_create_file@cluster_count& (0+255),w,b
 35301  00330E  5D65               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 35302  003310  5163               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 35303  003312  5966               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 35304  003314  A0D8               	btfss	status,0,c
 35305  003316  0012               	return	
 35306  003318  D7CA               	goto	l1984
 35307  00331A                     __end_of_fat_create_file:
 35308                           	opt stack 0
 35309                           tosu	equ	0xFFF
 35310                           tosh	equ	0xFFE
 35311                           tosl	equ	0xFFD
 35312                           pclath	equ	0xFFA
 35313                           tblptru	equ	0xFF8
 35314                           tblptrh	equ	0xFF7
 35315                           tblptrl	equ	0xFF6
 35316                           tablat	equ	0xFF5
 35317                           prodh	equ	0xFF4
 35318                           prodl	equ	0xFF3
 35319                           intcon	equ	0xFF2
 35320                           intcon2	equ	0xFF1
 35321                           intcon3	equ	0xFF0
 35322                           indf0	equ	0xFEF
 35323                           postinc0	equ	0xFEE
 35324                           fsr0h	equ	0xFEA
 35325                           fsr0l	equ	0xFE9
 35326                           wreg	equ	0xFE8
 35327                           indf1	equ	0xFE7
 35328                           postdec1	equ	0xFE5
 35329                           plusw1	equ	0xFE3
 35330                           fsr1h	equ	0xFE2
 35331                           fsr1l	equ	0xFE1
 35332                           indf2	equ	0xFDF
 35333                           postinc2	equ	0xFDE
 35334                           postdec2	equ	0xFDD
 35335                           plusw2	equ	0xFDB
 35336                           fsr2h	equ	0xFDA
 35337                           fsr2l	equ	0xFD9
 35338                           status	equ	0xFD8
 35339                           
 35340 ;; *************** function _memcpy *****************
 35341 ;; Defined at:
 35342 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 35343 ;; Parameters:    Size  Location     Type
 35344 ;;  d1              2    0[COMRAM] PTR void 
 35345 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 35346 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 35347 ;;  s1              3    2[COMRAM] PTR const void 
 35348 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 35349 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 35350 ;;  n               2    5[COMRAM] unsigned int 
 35351 ;; Auto vars:     Size  Location     Type
 35352 ;;  s               3    7[COMRAM] PTR const unsigned char 
 35353 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 35354 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 35355 ;;  d               2   10[COMRAM] PTR unsigned char 
 35356 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 35357 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 35358 ;;  tmp             1   12[COMRAM] unsigned char 
 35359 ;; Return value:  Size  Location     Type
 35360 ;;                  2    0[COMRAM] PTR void 
 35361 ;; Registers used:
 35362 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 35363 ;; Tracked objects:
 35364 ;;		On entry : 0/0
 35365 ;;		On exit  : 0/0
 35366 ;;		Unchanged: 0/0
 35367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35368 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35369 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35371 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35372 ;;Total ram usage:       13 bytes
 35373 ;; Hardware stack levels used:    1
 35374 ;; This function calls:
 35375 ;;		Nothing
 35376 ;; This function is called by:
 35377 ;;		_USBCtrlEPService
 35378 ;;		_MSDProcessCommandMediaPresent
 35379 ;;		__flash_set_page_size
 35380 ;;		_fat_create_file
 35381 ;;		_internalFlash_read
 35382 ;;		_api_prepare
 35383 ;; This function uses a non-reentrant model
 35384 ;;
 35385                           
 35386                           	psect	text179
 35387  006E7C                     __ptext179:
 35388                           	opt stack 0
 35389  006E7C                     _memcpy:
 35390                           	opt stack 27
 35391                           
 35392                           ;incstack = 0
 35393  006E7C  C003  F008         	movff	memcpy@s1,memcpy@s
 35394  006E80  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 35395  006E84  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 35396  006E88  C001  F00B         	movff	memcpy@d1,memcpy@d
 35397  006E8C  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 35398  006E90  D01F               	goto	l3527
 35399  006E92                     l10711:
 35400  006E92  C008  FFF6         	movff	memcpy@s,tblptrl
 35401  006E96  C009  FFF7         	movff	memcpy@s+1,tblptrh
 35402  006E9A  C00A  FFF8         	movff	memcpy@s+2,tblptru
 35403  006E9E  BAF8               	btfsc	tblptru,5,c
 35404  006EA0  D003               	bra	u7497
 35405  006EA2  0008               	tblrd		*
 35406  006EA4  50F5               	movf	tablat,w,c
 35407  006EA6  D005               	bra	u7490
 35408  006EA8                     u7497:
 35409  006EA8  CFF6 FFE9          	movff	tblptrl,fsr0l
 35410  006EAC  CFF7 FFEA          	movff	tblptrh,fsr0h
 35411  006EB0  50EF               	movf	indf0,w,c
 35412  006EB2                     u7490:
 35413  006EB2  6E0D               	movwf	memcpy@tmp,c
 35414  006EB4  0E01               	movlw	1
 35415  006EB6  2608               	addwf	memcpy@s,f,c
 35416  006EB8  0E00               	movlw	0
 35417  006EBA  2209               	addwfc	memcpy@s+1,f,c
 35418  006EBC  0E00               	movlw	0
 35419  006EBE  220A               	addwfc	memcpy@s+2,f,c
 35420  006EC0  C00B  FFD9         	movff	memcpy@d,fsr2l
 35421  006EC4  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 35422  006EC8  C00D  FFDF         	movff	memcpy@tmp,indf2
 35423  006ECC  4A0B               	infsnz	memcpy@d,f,c
 35424  006ECE  2A0C               	incf	memcpy@d+1,f,c
 35425  006ED0                     l3527:
 35426  006ED0  0606               	decf	memcpy@n,f,c
 35427  006ED2  A0D8               	btfss	status,0,c
 35428  006ED4  0607               	decf	memcpy@n+1,f,c
 35429  006ED6  2806               	incf	memcpy@n,w,c
 35430  006ED8  E1DC               	bnz	l10711
 35431  006EDA  2807               	incf	memcpy@n+1,w,c
 35432  006EDC  B4D8               	btfsc	status,2,c
 35433  006EDE  0012               	return	
 35434  006EE0  D7D8               	goto	l3528
 35435  006EE2                     __end_of_memcpy:
 35436                           	opt stack 0
 35437                           tosu	equ	0xFFF
 35438                           tosh	equ	0xFFE
 35439                           tosl	equ	0xFFD
 35440                           pclath	equ	0xFFA
 35441                           tblptru	equ	0xFF8
 35442                           tblptrh	equ	0xFF7
 35443                           tblptrl	equ	0xFF6
 35444                           tablat	equ	0xFF5
 35445                           prodh	equ	0xFF4
 35446                           prodl	equ	0xFF3
 35447                           intcon	equ	0xFF2
 35448                           intcon2	equ	0xFF1
 35449                           intcon3	equ	0xFF0
 35450                           indf0	equ	0xFEF
 35451                           postinc0	equ	0xFEE
 35452                           fsr0h	equ	0xFEA
 35453                           fsr0l	equ	0xFE9
 35454                           wreg	equ	0xFE8
 35455                           indf1	equ	0xFE7
 35456                           postdec1	equ	0xFE5
 35457                           plusw1	equ	0xFE3
 35458                           fsr1h	equ	0xFE2
 35459                           fsr1l	equ	0xFE1
 35460                           indf2	equ	0xFDF
 35461                           postinc2	equ	0xFDE
 35462                           postdec2	equ	0xFDD
 35463                           plusw2	equ	0xFDB
 35464                           fsr2h	equ	0xFDA
 35465                           fsr2l	equ	0xFD9
 35466                           status	equ	0xFD8
 35467                           
 35468 ;; *************** function _fat_get_empty_clusters *****************
 35469 ;; Defined at:
 35470 ;;		line 130 in file "fat16.c"
 35471 ;; Parameters:    Size  Location     Type
 35472 ;;  maximum         2   47[COMRAM] unsigned int 
 35473 ;; Auto vars:     Size  Location     Type
 35474 ;;  cluster         2   57[COMRAM] unsigned int 
 35475 ;;  empty_cluste    2   55[COMRAM] unsigned int 
 35476 ;;  value           2   53[COMRAM] unsigned int 
 35477 ;;  offset          2   51[COMRAM] unsigned int 
 35478 ;;  fat_sector      2   49[COMRAM] unsigned int 
 35479 ;; Return value:  Size  Location     Type
 35480 ;;                  2   47[COMRAM] unsigned int 
 35481 ;; Registers used:
 35482 ;;		wreg, status,2, status,0, cstack
 35483 ;; Tracked objects:
 35484 ;;		On entry : 0/0
 35485 ;;		On exit  : 0/0
 35486 ;;		Unchanged: 0/0
 35487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35489 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35491 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35492 ;;Total ram usage:       12 bytes
 35493 ;; Hardware stack levels used:    1
 35494 ;; Hardware stack levels required when called:    5
 35495 ;; This function calls:
 35496 ;;		_flash_partial_read
 35497 ;; This function is called by:
 35498 ;;		_fat_create_file
 35499 ;; This function uses a non-reentrant model
 35500 ;;
 35501                           
 35502                           	psect	text180
 35503  0063CC                     __ptext180:
 35504                           	opt stack 0
 35505  0063CC                     _fat_get_empty_clusters:
 35506                           	opt stack 21
 35507                           
 35508                           ;fat16.c: 132: uint16_t empty_clusters = 0;
 35509                           
 35510                           ;incstack = 0
 35511  0063CC  0E00               	movlw	0
 35512  0063CE  6E39               	movwf	fat_get_empty_clusters@empty_clusters+1,c
 35513  0063D0  0E00               	movlw	0
 35514  0063D2  6E38               	movwf	fat_get_empty_clusters@empty_clusters,c
 35515                           
 35516                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t fat_sector;;fat16.c: 135: uint16
      +                          _t offset;;fat16.c: 136: uint16_t value;;fat16.c: 139: for(cluster=2; cluster<(8154+2); 
      +                          ++cluster)
 35517  0063D4  0E00               	movlw	0
 35518  0063D6  6E3B               	movwf	fat_get_empty_clusters@cluster+1,c
 35519  0063D8  0E02               	movlw	2
 35520  0063DA  6E3A               	movwf	fat_get_empty_clusters@cluster,c
 35521  0063DC  D033               	goto	l11365
 35522  0063DE                     
 35523                           ;fat16.c: 140: {;fat16.c: 141: fat_sector = cluster>>8;
 35524  0063DE  503B               	movf	fat_get_empty_clusters@cluster+1,w,c
 35525  0063E0  6E32               	movwf	fat_get_empty_clusters@fat_sector,c
 35526  0063E2  6A33               	clrf	fat_get_empty_clusters@fat_sector+1,c
 35527                           
 35528                           ;fat16.c: 142: fat_sector += 2;
 35529  0063E4  0E02               	movlw	2
 35530  0063E6  2632               	addwf	fat_get_empty_clusters@fat_sector,f,c
 35531  0063E8  0E00               	movlw	0
 35532  0063EA  2233               	addwfc	fat_get_empty_clusters@fat_sector+1,f,c
 35533                           
 35534                           ;fat16.c: 143: offset = cluster & 0xFF;
 35535  0063EC  503A               	movf	fat_get_empty_clusters@cluster,w,c
 35536  0063EE  6E34               	movwf	fat_get_empty_clusters@offset,c
 35537  0063F0  6A35               	clrf	fat_get_empty_clusters@offset+1,c
 35538                           
 35539                           ;fat16.c: 144: offset <<= 1;
 35540  0063F2  90D8               	bcf	status,0,c
 35541  0063F4  3634               	rlcf	fat_get_empty_clusters@offset,f,c
 35542  0063F6  3635               	rlcf	fat_get_empty_clusters@offset+1,f,c
 35543                           
 35544                           ;fat16.c: 145: flash_partial_read(fat_sector, offset, 2, &value);
 35545  0063F8  C032  F028         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 35546  0063FC  C033  F029         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 35547  006400  C034  F02A         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 35548  006404  C035  F02B         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 35549  006408  0E00               	movlw	0
 35550  00640A  6E2D               	movwf	flash_partial_read@length+1,c
 35551  00640C  0E02               	movlw	2
 35552  00640E  6E2C               	movwf	flash_partial_read@length,c
 35553  006410  0E36               	movlw	low fat_get_empty_clusters@value
 35554  006412  6E2E               	movwf	flash_partial_read@data,c
 35555  006414  0E00               	movlw	high fat_get_empty_clusters@value
 35556  006416  6E2F               	movwf	flash_partial_read@data+1,c
 35557  006418  EC24  F03E         	call	_flash_partial_read	;wreg free
 35558                           
 35559                           ;fat16.c: 146: if(value==0x0000)
 35560  00641C  5036               	movf	fat_get_empty_clusters@value,w,c
 35561  00641E  1037               	iorwf	fat_get_empty_clusters@value+1,w,c
 35562  006420  A4D8               	btfss	status,2,c
 35563  006422  D00E               	goto	l1938
 35564                           
 35565                           ;fat16.c: 147: {;fat16.c: 148: ++empty_clusters;
 35566  006424  4A38               	infsnz	fat_get_empty_clusters@empty_clusters,f,c
 35567  006426  2A39               	incf	fat_get_empty_clusters@empty_clusters+1,f,c
 35568                           
 35569                           ;fat16.c: 149: if(empty_clusters==maximum)
 35570  006428  5030               	movf	fat_get_empty_clusters@maximum,w,c
 35571  00642A  1838               	xorwf	fat_get_empty_clusters@empty_clusters,w,c
 35572  00642C  E109               	bnz	l11363
 35573  00642E  5031               	movf	fat_get_empty_clusters@maximum+1,w,c
 35574  006430  1839               	xorwf	fat_get_empty_clusters@empty_clusters+1,w,c
 35575  006432  A4D8               	btfss	status,2,c
 35576  006434  D005               	goto	l1938
 35577                           
 35578                           ;fat16.c: 150: {;fat16.c: 151: return empty_clusters;
 35579  006436  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 35580  00643A  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 35581  00643E  0012               	return	
 35582  006440                     l1938:
 35583  006440                     l11363:
 35584  006440  4A3A               	infsnz	fat_get_empty_clusters@cluster,f,c
 35585  006442  2A3B               	incf	fat_get_empty_clusters@cluster+1,f,c
 35586  006444                     l11365:
 35587  006444  0EDC               	movlw	220
 35588  006446  5C3A               	subwf	fat_get_empty_clusters@cluster,w,c
 35589  006448  0E1F               	movlw	31
 35590  00644A  583B               	subwfb	fat_get_empty_clusters@cluster+1,w,c
 35591  00644C  A0D8               	btfss	status,0,c
 35592  00644E  D7C7               	goto	l1935
 35593                           
 35594                           ;fat16.c: 152: };fat16.c: 153: };fat16.c: 154: };fat16.c: 155: return empty_clusters;
 35595  006450  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 35596  006454  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 35597  006458  0012               	return		;funcret
 35598  00645A                     __end_of_fat_get_empty_clusters:
 35599                           	opt stack 0
 35600                           tosu	equ	0xFFF
 35601                           tosh	equ	0xFFE
 35602                           tosl	equ	0xFFD
 35603                           pclath	equ	0xFFA
 35604                           tblptru	equ	0xFF8
 35605                           tblptrh	equ	0xFF7
 35606                           tblptrl	equ	0xFF6
 35607                           tablat	equ	0xFF5
 35608                           prodh	equ	0xFF4
 35609                           prodl	equ	0xFF3
 35610                           intcon	equ	0xFF2
 35611                           intcon2	equ	0xFF1
 35612                           intcon3	equ	0xFF0
 35613                           indf0	equ	0xFEF
 35614                           postinc0	equ	0xFEE
 35615                           fsr0h	equ	0xFEA
 35616                           fsr0l	equ	0xFE9
 35617                           wreg	equ	0xFE8
 35618                           indf1	equ	0xFE7
 35619                           postdec1	equ	0xFE5
 35620                           plusw1	equ	0xFE3
 35621                           fsr1h	equ	0xFE2
 35622                           fsr1l	equ	0xFE1
 35623                           indf2	equ	0xFDF
 35624                           postinc2	equ	0xFDE
 35625                           postdec2	equ	0xFDD
 35626                           plusw2	equ	0xFDB
 35627                           fsr2h	equ	0xFDA
 35628                           fsr2l	equ	0xFD9
 35629                           status	equ	0xFD8
 35630                           
 35631 ;; *************** function _fat_find_file *****************
 35632 ;; Defined at:
 35633 ;;		line 250 in file "fat16.c"
 35634 ;; Parameters:    Size  Location     Type
 35635 ;;  name            2   47[COMRAM] PTR unsigned char 
 35636 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), RAM(3759), 
 35637 ;;  extension       2   49[COMRAM] PTR unsigned char 
 35638 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), RAM(3759), 
 35639 ;; Auto vars:     Size  Location     Type
 35640 ;;  buffer         11   51[COMRAM] unsigned char [11]
 35641 ;;  offset          2   65[COMRAM] unsigned int 
 35642 ;;  sector          2   63[COMRAM] unsigned int 
 35643 ;;  slot            1   62[COMRAM] unsigned char 
 35644 ;; Return value:  Size  Location     Type
 35645 ;;                  1    wreg      unsigned char 
 35646 ;; Registers used:
 35647 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35648 ;; Tracked objects:
 35649 ;;		On entry : 0/0
 35650 ;;		On exit  : 0/0
 35651 ;;		Unchanged: 0/0
 35652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35654 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35656 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35657 ;;Total ram usage:       20 bytes
 35658 ;; Hardware stack levels used:    1
 35659 ;; Hardware stack levels required when called:    5
 35660 ;; This function calls:
 35661 ;;		_flash_partial_read
 35662 ;;		_strncmp
 35663 ;; This function is called by:
 35664 ;;		_fat_create_file
 35665 ;;		__bootloader_find_file
 35666 ;;		__fill_buffer_find_file
 35667 ;; This function uses a non-reentrant model
 35668 ;;
 35669                           
 35670                           	psect	text181
 35671  00573A                     __ptext181:
 35672                           	opt stack 0
 35673  00573A                     _fat_find_file:
 35674                           	opt stack 23
 35675                           
 35676                           ;fat16.c: 252: uint8_t slot;;fat16.c: 253: uint16_t sector;;fat16.c: 254: uint16_t offse
      +                          t;;fat16.c: 255: uint8_t buffer[11];;fat16.c: 256: slot = 0;
 35677                           
 35678                           ;incstack = 0
 35679  00573A  0E00               	movlw	0
 35680  00573C  6E3F               	movwf	fat_find_file@slot,c
 35681                           
 35682                           ;fat16.c: 257: for(sector = 34; sector <= 37; ++sector)
 35683  00573E  0E00               	movlw	0
 35684  005740  6E41               	movwf	fat_find_file@sector+1,c
 35685  005742  0E22               	movlw	34
 35686  005744  6E40               	movwf	fat_find_file@sector,c
 35687  005746                     l11411:
 35688  005746  5041               	movf	fat_find_file@sector+1,w,c
 35689  005748  E156               	bnz	l11453
 35690  00574A  0E26               	movlw	38
 35691  00574C  5C40               	subwf	fat_find_file@sector,w,c
 35692  00574E  B0D8               	btfsc	status,0,c
 35693  005750  D052               	goto	u8440
 35694                           
 35695                           ;fat16.c: 258: {;fat16.c: 259: for(offset = 0; offset<512; offset += 32)
 35696  005752  0E00               	movlw	0
 35697  005754  6E43               	movwf	fat_find_file@offset+1,c
 35698  005756  0E00               	movlw	0
 35699  005758  6E42               	movwf	fat_find_file@offset,c
 35700  00575A                     l11417:
 35701  00575A  0E02               	movlw	2
 35702  00575C  5C43               	subwf	fat_find_file@offset+1,w,c
 35703  00575E  B0D8               	btfsc	status,0,c
 35704  005760  D047               	goto	u8430
 35705                           
 35706                           ;fat16.c: 260: {;fat16.c: 261: flash_partial_read(sector, offset, 11, &buffer);
 35707  005762  C040  F028         	movff	fat_find_file@sector,flash_partial_read@page
 35708  005766  C041  F029         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 35709  00576A  C042  F02A         	movff	fat_find_file@offset,flash_partial_read@start
 35710  00576E  C043  F02B         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 35711  005772  0E00               	movlw	0
 35712  005774  6E2D               	movwf	flash_partial_read@length+1,c
 35713  005776  0E0B               	movlw	11
 35714  005778  6E2C               	movwf	flash_partial_read@length,c
 35715  00577A  0E34               	movlw	low fat_find_file@buffer
 35716  00577C  6E2E               	movwf	flash_partial_read@data,c
 35717  00577E  0E00               	movlw	high fat_find_file@buffer
 35718  005780  6E2F               	movwf	flash_partial_read@data+1,c
 35719  005782  EC24  F03E         	call	_flash_partial_read	;wreg free
 35720                           
 35721                           ;fat16.c: 262: if(buffer[0]==0x00)
 35722  005786  5034               	movf	fat_find_file@buffer,w,c
 35723  005788  A4D8               	btfss	status,2,c
 35724  00578A  D002               	goto	l1967
 35725                           
 35726                           ;fat16.c: 263: {;fat16.c: 266: return 0xFF;
 35727  00578C  0EFF               	movlw	255
 35728  00578E  0012               	return	
 35729  005790                     l1967:
 35730                           
 35731                           ;fat16.c: 268: else if(buffer[0]==0xE5)
 35732  005790  0EE5               	movlw	229
 35733  005792  1834               	xorwf	fat_find_file@buffer,w,c
 35734  005794  B4D8               	btfsc	status,2,c
 35735  005796  D026               	goto	l1973
 35736                           
 35737                           ;fat16.c: 274: else;fat16.c: 275: {;fat16.c: 277: if(strncmp(name, &buffer[0], 8) == 0)
 35738                           
 35739                           ;fat16.c: 269: {;fat16.c: 273: }
 35740  005798  C030  F001         	movff	fat_find_file@name,strncmp@s1
 35741  00579C  C031  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 35742  0057A0  0E34               	movlw	low fat_find_file@buffer
 35743  0057A2  6E03               	movwf	strncmp@s2,c
 35744  0057A4  0E00               	movlw	high fat_find_file@buffer
 35745  0057A6  6E04               	movwf	strncmp@s2+1,c
 35746  0057A8  0E00               	movlw	0
 35747  0057AA  6E06               	movwf	strncmp@len+1,c
 35748  0057AC  0E08               	movlw	8
 35749  0057AE  6E05               	movwf	strncmp@len,c
 35750  0057B0  EC3C  F02B         	call	_strncmp	;wreg free
 35751  0057B4  5001               	movf	?_strncmp,w,c
 35752  0057B6  1002               	iorwf	?_strncmp+1,w,c
 35753  0057B8  A4D8               	btfss	status,2,c
 35754  0057BA  D014               	goto	l1973
 35755                           
 35756                           ;fat16.c: 278: {;fat16.c: 280: if(strncmp(extension, &buffer[8], 3) == 0)
 35757  0057BC  C032  F001         	movff	fat_find_file@extension,strncmp@s1
 35758  0057C0  C033  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 35759  0057C4  0E3C               	movlw	low (fat_find_file@buffer+8)
 35760  0057C6  6E03               	movwf	strncmp@s2,c
 35761  0057C8  0E00               	movlw	high (fat_find_file@buffer+8)
 35762  0057CA  6E04               	movwf	strncmp@s2+1,c
 35763  0057CC  0E00               	movlw	0
 35764  0057CE  6E06               	movwf	strncmp@len+1,c
 35765  0057D0  0E03               	movlw	3
 35766  0057D2  6E05               	movwf	strncmp@len,c
 35767  0057D4  EC3C  F02B         	call	_strncmp	;wreg free
 35768  0057D8  5001               	movf	?_strncmp,w,c
 35769  0057DA  1002               	iorwf	?_strncmp+1,w,c
 35770  0057DC  A4D8               	btfss	status,2,c
 35771  0057DE  D002               	goto	l1973
 35772                           
 35773                           ;fat16.c: 281: {;fat16.c: 284: return slot;
 35774  0057E0  503F               	movf	fat_find_file@slot,w,c
 35775  0057E2  0012               	return	
 35776  0057E4                     l1973:
 35777                           
 35778                           ;fat16.c: 285: };fat16.c: 286: };fat16.c: 287: };fat16.c: 288: ++slot;
 35779  0057E4  2A3F               	incf	fat_find_file@slot,f,c
 35780  0057E6  0E20               	movlw	32
 35781  0057E8  2642               	addwf	fat_find_file@offset,f,c
 35782  0057EA  0E00               	movlw	0
 35783  0057EC  2243               	addwfc	fat_find_file@offset+1,f,c
 35784  0057EE  D7B5               	goto	l11417
 35785  0057F0                     u8430:
 35786  0057F0  4A40               	infsnz	fat_find_file@sector,f,c
 35787  0057F2  2A41               	incf	fat_find_file@sector+1,f,c
 35788  0057F4  D7A8               	goto	l11411
 35789  0057F6                     u8440:
 35790  0057F6                     l11453:
 35791                           
 35792                           ;fat16.c: 289: };fat16.c: 290: };fat16.c: 291: return 0xFF;
 35793  0057F6  0EFF               	movlw	255
 35794  0057F8  0012               	return	
 35795  0057FA                     __end_of_fat_find_file:
 35796                           	opt stack 0
 35797                           tosu	equ	0xFFF
 35798                           tosh	equ	0xFFE
 35799                           tosl	equ	0xFFD
 35800                           pclath	equ	0xFFA
 35801                           tblptru	equ	0xFF8
 35802                           tblptrh	equ	0xFF7
 35803                           tblptrl	equ	0xFF6
 35804                           tablat	equ	0xFF5
 35805                           prodh	equ	0xFF4
 35806                           prodl	equ	0xFF3
 35807                           intcon	equ	0xFF2
 35808                           intcon2	equ	0xFF1
 35809                           intcon3	equ	0xFF0
 35810                           indf0	equ	0xFEF
 35811                           postinc0	equ	0xFEE
 35812                           fsr0h	equ	0xFEA
 35813                           fsr0l	equ	0xFE9
 35814                           wreg	equ	0xFE8
 35815                           indf1	equ	0xFE7
 35816                           postdec1	equ	0xFE5
 35817                           plusw1	equ	0xFE3
 35818                           fsr1h	equ	0xFE2
 35819                           fsr1l	equ	0xFE1
 35820                           indf2	equ	0xFDF
 35821                           postinc2	equ	0xFDE
 35822                           postdec2	equ	0xFDD
 35823                           plusw2	equ	0xFDB
 35824                           fsr2h	equ	0xFDA
 35825                           fsr2l	equ	0xFD9
 35826                           status	equ	0xFD8
 35827                           
 35828 ;; *************** function _strncmp *****************
 35829 ;; Defined at:
 35830 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 35831 ;; Parameters:    Size  Location     Type
 35832 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 35833 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), RAM(3759), 
 35834 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 35835 ;;		 -> fat_find_file@buffer(11), 
 35836 ;;  len             2    4[COMRAM] unsigned int 
 35837 ;; Auto vars:     Size  Location     Type
 35838 ;;		None
 35839 ;; Return value:  Size  Location     Type
 35840 ;;                  2    0[COMRAM] int 
 35841 ;; Registers used:
 35842 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 35843 ;; Tracked objects:
 35844 ;;		On entry : 0/0
 35845 ;;		On exit  : 0/0
 35846 ;;		Unchanged: 0/0
 35847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35848 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35850 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35851 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35852 ;;Total ram usage:        9 bytes
 35853 ;; Hardware stack levels used:    1
 35854 ;; This function calls:
 35855 ;;		Nothing
 35856 ;; This function is called by:
 35857 ;;		_fat_find_file
 35858 ;; This function uses a non-reentrant model
 35859 ;;
 35860                           
 35861                           	psect	text182
 35862  005678                     __ptext182:
 35863                           	opt stack 0
 35864  005678                     _strncmp:
 35865                           	opt stack 27
 35866                           
 35867                           ;incstack = 0
 35868  005678  D053               	goto	l3545
 35869  00567A                     l10613:
 35870  00567A  C001  FFF6         	movff	strncmp@s1,tblptrl
 35871  00567E  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 35872  005682  6AF8               	clrf	tblptru,c
 35873  005684  0E0E               	movlw	(high __ramtop+-1)
 35874  005686  64F7               	cpfsgt	tblptrh,c
 35875  005688  D003               	bra	u7357
 35876  00568A  0008               	tblrd		*
 35877  00568C  50F5               	movf	tablat,w,c
 35878  00568E  D005               	bra	u7350
 35879  005690                     u7357:
 35880  005690  CFF6 FFE9          	movff	tblptrl,fsr0l
 35881  005694  CFF7 FFEA          	movff	tblptrh,fsr0h
 35882  005698  50EF               	movf	indf0,w,c
 35883  00569A                     u7350:
 35884  00569A  0900               	iorlw	0
 35885  00569C  B4D8               	btfsc	status,2,c
 35886  00569E  D019               	goto	u7370
 35887  0056A0  C003  FFD9         	movff	strncmp@s2,fsr2l
 35888  0056A4  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 35889  0056A8  50DF               	movf	indf2,w,c
 35890  0056AA  6E07               	movwf	??_strncmp& (0+255),c
 35891  0056AC  C001  FFF6         	movff	strncmp@s1,tblptrl
 35892  0056B0  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 35893  0056B4  6AF8               	clrf	tblptru,c
 35894  0056B6  0E0E               	movlw	(high __ramtop+-1)
 35895  0056B8  64F7               	cpfsgt	tblptrh,c
 35896  0056BA  D003               	bra	u7377
 35897  0056BC  0008               	tblrd		*
 35898  0056BE  50F5               	movf	tablat,w,c
 35899  0056C0  D005               	bra	u7375
 35900  0056C2                     u7377:
 35901  0056C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 35902  0056C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 35903  0056CA  50EF               	movf	indf0,w,c
 35904  0056CC                     u7375:
 35905  0056CC  1807               	xorwf	??_strncmp,w,c
 35906  0056CE  B4D8               	btfsc	status,2,c
 35907  0056D0  D023               	goto	l3547
 35908  0056D2                     u7370:
 35909  0056D2  C003  FFD9         	movff	strncmp@s2,fsr2l
 35910  0056D6  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 35911  0056DA  50DF               	movf	indf2,w,c
 35912  0056DC  6E07               	movwf	??_strncmp& (0+255),c
 35913  0056DE  6A08               	clrf	(??_strncmp+1)& (0+255),c
 35914  0056E0  1E07               	comf	??_strncmp,f,c
 35915  0056E2  1E08               	comf	??_strncmp+1,f,c
 35916  0056E4  4A07               	infsnz	??_strncmp,f,c
 35917  0056E6  2A08               	incf	??_strncmp+1,f,c
 35918  0056E8  C001  FFF6         	movff	strncmp@s1,tblptrl
 35919  0056EC  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 35920  0056F0  6AF8               	clrf	tblptru,c
 35921  0056F2  0E0E               	movlw	(high __ramtop+-1)
 35922  0056F4  64F7               	cpfsgt	tblptrh,c
 35923  0056F6  D003               	bra	u7387
 35924  0056F8  0008               	tblrd		*
 35925  0056FA  50F5               	movf	tablat,w,c
 35926  0056FC  D005               	bra	u7380
 35927  0056FE                     u7387:
 35928  0056FE  CFF6 FFE9          	movff	tblptrl,fsr0l
 35929  005702  CFF7 FFEA          	movff	tblptrh,fsr0h
 35930  005706  50EF               	movf	indf0,w,c
 35931  005708                     u7380:
 35932  005708  6E09               	movwf	(??_strncmp+2)& (0+255),c
 35933  00570A  5009               	movf	??_strncmp+2,w,c
 35934  00570C  2407               	addwf	??_strncmp,w,c
 35935  00570E  6E01               	movwf	?_strncmp,c
 35936  005710  0E00               	movlw	0
 35937  005712  2008               	addwfc	??_strncmp+1,w,c
 35938  005714  6E02               	movwf	?_strncmp+1,c
 35939  005716  0012               	return	
 35940  005718                     l3547:
 35941  005718  4A01               	infsnz	strncmp@s1,f,c
 35942  00571A  2A02               	incf	strncmp@s1+1,f,c
 35943  00571C  4A03               	infsnz	strncmp@s2,f,c
 35944  00571E  2A04               	incf	strncmp@s2+1,f,c
 35945  005720                     l3545:
 35946  005720  0605               	decf	strncmp@len,f,c
 35947  005722  A0D8               	btfss	status,0,c
 35948  005724  0606               	decf	strncmp@len+1,f,c
 35949  005726  2805               	incf	strncmp@len,w,c
 35950  005728  E1A8               	bnz	l10613
 35951  00572A  2806               	incf	strncmp@len+1,w,c
 35952  00572C  A4D8               	btfss	status,2,c
 35953  00572E  D7A5               	goto	l3546
 35954  005730  0E00               	movlw	0
 35955  005732  6E02               	movwf	?_strncmp+1,c
 35956  005734  0E00               	movlw	0
 35957  005736  6E01               	movwf	?_strncmp,c
 35958  005738  0012               	return	
 35959  00573A                     __end_of_strncmp:
 35960                           	opt stack 0
 35961                           tosu	equ	0xFFF
 35962                           tosh	equ	0xFFE
 35963                           tosl	equ	0xFFD
 35964                           pclath	equ	0xFFA
 35965                           tblptru	equ	0xFF8
 35966                           tblptrh	equ	0xFF7
 35967                           tblptrl	equ	0xFF6
 35968                           tablat	equ	0xFF5
 35969                           prodh	equ	0xFF4
 35970                           prodl	equ	0xFF3
 35971                           intcon	equ	0xFF2
 35972                           intcon2	equ	0xFF1
 35973                           intcon3	equ	0xFF0
 35974                           indf0	equ	0xFEF
 35975                           postinc0	equ	0xFEE
 35976                           fsr0h	equ	0xFEA
 35977                           fsr0l	equ	0xFE9
 35978                           wreg	equ	0xFE8
 35979                           indf1	equ	0xFE7
 35980                           postdec1	equ	0xFE5
 35981                           plusw1	equ	0xFE3
 35982                           fsr1h	equ	0xFE2
 35983                           fsr1l	equ	0xFE1
 35984                           indf2	equ	0xFDF
 35985                           postinc2	equ	0xFDE
 35986                           postdec2	equ	0xFDD
 35987                           plusw2	equ	0xFDB
 35988                           fsr2h	equ	0xFDA
 35989                           fsr2l	equ	0xFD9
 35990                           status	equ	0xFD8
 35991                           
 35992 ;; *************** function __get_available_root_entry *****************
 35993 ;; Defined at:
 35994 ;;		line 94 in file "fat16.c"
 35995 ;; Parameters:    Size  Location     Type
 35996 ;;		None
 35997 ;; Auto vars:     Size  Location     Type
 35998 ;;  file_number     1   54[COMRAM] unsigned char 
 35999 ;; Return value:  Size  Location     Type
 36000 ;;                  1    wreg      unsigned char 
 36001 ;; Registers used:
 36002 ;;		wreg, status,2, status,0, cstack
 36003 ;; Tracked objects:
 36004 ;;		On entry : 0/0
 36005 ;;		On exit  : 0/0
 36006 ;;		Unchanged: 0/0
 36007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36011 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36012 ;;Total ram usage:        1 bytes
 36013 ;; Hardware stack levels used:    1
 36014 ;; Hardware stack levels required when called:    6
 36015 ;; This function calls:
 36016 ;;		__root_is_available
 36017 ;; This function is called by:
 36018 ;;		_fat_create_file
 36019 ;; This function uses a non-reentrant model
 36020 ;;
 36021                           
 36022                           	psect	text183
 36023  007EEE                     __ptext183:
 36024                           	opt stack 0
 36025  007EEE                     __get_available_root_entry:
 36026                           	opt stack 20
 36027                           
 36028                           ;fat16.c: 96: uint8_t file_number;;fat16.c: 97: for(file_number=0; file_number<64; ++fil
      +                          e_number)
 36029                           
 36030                           ;incstack = 0
 36031  007EEE  0E00               	movlw	0
 36032  007EF0  6E37               	movwf	__get_available_root_entry@file_number,c
 36033  007EF2                     l11293:
 36034  007EF2  0E3F               	movlw	63
 36035  007EF4  6437               	cpfsgt	__get_available_root_entry@file_number,c
 36036  007EF6  D001               	goto	l1923
 36037  007EF8  D00A               	goto	u8260
 36038  007EFA                     l1923:
 36039                           
 36040                           ;fat16.c: 98: {;fat16.c: 99: if(_root_is_available(file_number))
 36041  007EFA  5037               	movf	__get_available_root_entry@file_number,w,c
 36042  007EFC  EC72  F034         	call	__root_is_available
 36043  007F00  0900               	iorlw	0
 36044  007F02  B4D8               	btfsc	status,2,c
 36045  007F04  D002               	goto	l1925
 36046                           
 36047                           ;fat16.c: 100: {;fat16.c: 101: return file_number;
 36048  007F06  5037               	movf	__get_available_root_entry@file_number,w,c
 36049  007F08  0012               	return	
 36050  007F0A                     l1925:
 36051  007F0A  2A37               	incf	__get_available_root_entry@file_number,f,c
 36052  007F0C  D7F2               	goto	l11293
 36053  007F0E                     u8260:
 36054                           
 36055                           ;fat16.c: 102: };fat16.c: 103: };fat16.c: 104: return 0xFF;
 36056  007F0E  0EFF               	movlw	255
 36057  007F10  0012               	return	
 36058  007F12                     __end_of__get_available_root_entry:
 36059                           	opt stack 0
 36060                           tosu	equ	0xFFF
 36061                           tosh	equ	0xFFE
 36062                           tosl	equ	0xFFD
 36063                           pclath	equ	0xFFA
 36064                           tblptru	equ	0xFF8
 36065                           tblptrh	equ	0xFF7
 36066                           tblptrl	equ	0xFF6
 36067                           tablat	equ	0xFF5
 36068                           prodh	equ	0xFF4
 36069                           prodl	equ	0xFF3
 36070                           intcon	equ	0xFF2
 36071                           intcon2	equ	0xFF1
 36072                           intcon3	equ	0xFF0
 36073                           indf0	equ	0xFEF
 36074                           postinc0	equ	0xFEE
 36075                           fsr0h	equ	0xFEA
 36076                           fsr0l	equ	0xFE9
 36077                           wreg	equ	0xFE8
 36078                           indf1	equ	0xFE7
 36079                           postdec1	equ	0xFE5
 36080                           plusw1	equ	0xFE3
 36081                           fsr1h	equ	0xFE2
 36082                           fsr1l	equ	0xFE1
 36083                           indf2	equ	0xFDF
 36084                           postinc2	equ	0xFDE
 36085                           postdec2	equ	0xFDD
 36086                           plusw2	equ	0xFDB
 36087                           fsr2h	equ	0xFDA
 36088                           fsr2l	equ	0xFD9
 36089                           status	equ	0xFD8
 36090                           
 36091 ;; *************** function __parse_file_append *****************
 36092 ;; Defined at:
 36093 ;;		line 539 in file "api.c"
 36094 ;; Parameters:    Size  Location     Type
 36095 ;;  data            2   74[COMRAM] PTR unsigned char 
 36096 ;;		 -> RAM(3759), 
 36097 ;; Auto vars:     Size  Location     Type
 36098 ;;		None
 36099 ;; Return value:  Size  Location     Type
 36100 ;;                  1    wreg      unsigned char 
 36101 ;; Registers used:
 36102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36103 ;; Tracked objects:
 36104 ;;		On entry : 0/0
 36105 ;;		On exit  : 0/0
 36106 ;;		Unchanged: 0/0
 36107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36110 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36111 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36112 ;;Total ram usage:        3 bytes
 36113 ;; Hardware stack levels used:    1
 36114 ;; Hardware stack levels required when called:    8
 36115 ;; This function calls:
 36116 ;;		_fat_append_to_file
 36117 ;; This function is called by:
 36118 ;;		__parse_command_long
 36119 ;; This function uses a non-reentrant model
 36120 ;;
 36121                           
 36122                           	psect	text184
 36123  00667A                     __ptext184:
 36124                           	opt stack 0
 36125  00667A                     __parse_file_append:
 36126                           	opt stack 20
 36127                           
 36128                           ;api.c: 542: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 36129                           
 36130                           ;incstack = 0
 36131  00667A  C04B  FFD9         	movff	__parse_file_append@data,fsr2l
 36132  00667E  C04C  FFDA         	movff	__parse_file_append@data+1,fsr2h
 36133  006682  0E54               	movlw	84
 36134  006684  18DE               	xorwf	postinc2,w,c
 36135  006686  A4D8               	btfss	status,2,c
 36136  006688  D014               	goto	u9800
 36137  00668A  EE20 F003          	lfsr	2,3
 36138  00668E  504B               	movf	__parse_file_append@data,w,c
 36139  006690  26D9               	addwf	fsr2l,f,c
 36140  006692  504C               	movf	__parse_file_append@data+1,w,c
 36141  006694  22DA               	addwfc	fsr2h,f,c
 36142  006696  0EFE               	movlw	254
 36143  006698  18DE               	xorwf	postinc2,w,c
 36144  00669A  A4D8               	btfss	status,2,c
 36145  00669C  D00A               	goto	u9800
 36146  00669E  EE20 F004          	lfsr	2,4
 36147  0066A2  504B               	movf	__parse_file_append@data,w,c
 36148  0066A4  26D9               	addwf	fsr2l,f,c
 36149  0066A6  504C               	movf	__parse_file_append@data+1,w,c
 36150  0066A8  22DA               	addwfc	fsr2h,f,c
 36151  0066AA  0E4B               	movlw	75
 36152  0066AC  18DE               	xorwf	postinc2,w,c
 36153  0066AE  B4D8               	btfsc	status,2,c
 36154  0066B0  D002               	goto	l2692
 36155  0066B2                     u9800:
 36156                           
 36157                           ;api.c: 543: {;api.c: 544: return 15;
 36158  0066B2  0E0F               	movlw	15
 36159  0066B4  0012               	return	
 36160  0066B6                     l2692:
 36161                           
 36162                           ;api.c: 545: };api.c: 548: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 36163  0066B6  EE20 F002          	lfsr	2,2
 36164  0066BA  504B               	movf	__parse_file_append@data,w,c
 36165  0066BC  26D9               	addwf	fsr2l,f,c
 36166  0066BE  504C               	movf	__parse_file_append@data+1,w,c
 36167  0066C0  22DA               	addwfc	fsr2h,f,c
 36168  0066C2  50DF               	movf	indf2,w,c
 36169  0066C4  6E4D               	movwf	??__parse_file_append& (0+255),c
 36170  0066C6  504D               	movf	??__parse_file_append,w,c
 36171  0066C8  6E3F               	movwf	fat_append_to_file@number_of_bytes,c
 36172  0066CA  6A40               	clrf	fat_append_to_file@number_of_bytes+1,c
 36173  0066CC  0E05               	movlw	5
 36174  0066CE  244B               	addwf	__parse_file_append@data,w,c
 36175  0066D0  6E41               	movwf	fat_append_to_file@data,c
 36176  0066D2  0E00               	movlw	0
 36177  0066D4  204C               	addwfc	__parse_file_append@data+1,w,c
 36178  0066D6  6E42               	movwf	fat_append_to_file@data+1,c
 36179  0066D8  EE20 F001          	lfsr	2,1
 36180  0066DC  504B               	movf	__parse_file_append@data,w,c
 36181  0066DE  26D9               	addwf	fsr2l,f,c
 36182  0066E0  504C               	movf	__parse_file_append@data+1,w,c
 36183  0066E2  22DA               	addwfc	fsr2h,f,c
 36184  0066E4  50DF               	movf	indf2,w,c
 36185  0066E6  ECDC  F010         	call	_fat_append_to_file
 36186                           
 36187                           ;api.c: 549: return data[2] + 5;
 36188  0066EA  EE20 F002          	lfsr	2,2
 36189  0066EE  504B               	movf	__parse_file_append@data,w,c
 36190  0066F0  26D9               	addwf	fsr2l,f,c
 36191  0066F2  504C               	movf	__parse_file_append@data+1,w,c
 36192  0066F4  22DA               	addwfc	fsr2h,f,c
 36193  0066F6  50DF               	movf	indf2,w,c
 36194  0066F8  0F05               	addlw	5
 36195  0066FA  0012               	return	
 36196  0066FC                     __end_of__parse_file_append:
 36197                           	opt stack 0
 36198                           tosu	equ	0xFFF
 36199                           tosh	equ	0xFFE
 36200                           tosl	equ	0xFFD
 36201                           pclath	equ	0xFFA
 36202                           tblptru	equ	0xFF8
 36203                           tblptrh	equ	0xFF7
 36204                           tblptrl	equ	0xFF6
 36205                           tablat	equ	0xFF5
 36206                           prodh	equ	0xFF4
 36207                           prodl	equ	0xFF3
 36208                           intcon	equ	0xFF2
 36209                           intcon2	equ	0xFF1
 36210                           intcon3	equ	0xFF0
 36211                           indf0	equ	0xFEF
 36212                           postinc0	equ	0xFEE
 36213                           fsr0h	equ	0xFEA
 36214                           fsr0l	equ	0xFE9
 36215                           wreg	equ	0xFE8
 36216                           indf1	equ	0xFE7
 36217                           postdec1	equ	0xFE5
 36218                           plusw1	equ	0xFE3
 36219                           fsr1h	equ	0xFE2
 36220                           fsr1l	equ	0xFE1
 36221                           indf2	equ	0xFDF
 36222                           postinc2	equ	0xFDE
 36223                           postdec2	equ	0xFDD
 36224                           plusw2	equ	0xFDB
 36225                           fsr2h	equ	0xFDA
 36226                           fsr2l	equ	0xFD9
 36227                           status	equ	0xFD8
 36228                           
 36229 ;; *************** function _fat_append_to_file *****************
 36230 ;; Defined at:
 36231 ;;		line 448 in file "fat16.c"
 36232 ;; Parameters:    Size  Location     Type
 36233 ;;  file_number     1    wreg     unsigned char 
 36234 ;;  number_of_by    2   62[COMRAM] unsigned int 
 36235 ;;  data            2   64[COMRAM] PTR unsigned char 
 36236 ;;		 -> RAM(3759), 
 36237 ;; Auto vars:     Size  Location     Type
 36238 ;;  file_number     1   12[BANK0 ] unsigned char 
 36239 ;;  root           32   19[BANK0 ] struct .
 36240 ;;  position        4   15[BANK0 ] unsigned long 
 36241 ;;  file_size       4    2[BANK0 ] unsigned long 
 36242 ;;  length          2   13[BANK0 ] unsigned int 
 36243 ;;  offset          2   10[BANK0 ] unsigned int 
 36244 ;;  fat_cluster     2    8[BANK0 ] unsigned int 
 36245 ;;  new_cluster     2    6[BANK0 ] unsigned int 
 36246 ;;  sector          2    0[BANK0 ] unsigned int 
 36247 ;; Return value:  Size  Location     Type
 36248 ;;                  1    wreg      unsigned char 
 36249 ;; Registers used:
 36250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36251 ;; Tracked objects:
 36252 ;;		On entry : 0/0
 36253 ;;		On exit  : 0/0
 36254 ;;		Unchanged: 0/0
 36255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36257 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36258 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36259 ;;      Totals:        12      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36260 ;;Total ram usage:       63 bytes
 36261 ;; Hardware stack levels used:    1
 36262 ;; Hardware stack levels required when called:    7
 36263 ;; This function calls:
 36264 ;;		__get_empty_cluster
 36265 ;;		__read_fat
 36266 ;;		__root_is_available
 36267 ;;		__sector_from_cluster
 36268 ;;		__update_modified_time
 36269 ;;		__write_fat
 36270 ;;		__write_root
 36271 ;;		_fat_get_file_information
 36272 ;;		_flash_partial_write
 36273 ;; This function is called by:
 36274 ;;		__parse_file_append
 36275 ;; This function uses a non-reentrant model
 36276 ;;
 36277                           
 36278                           	psect	text185
 36279  0021B8                     __ptext185:
 36280                           	opt stack 0
 36281  0021B8                     _fat_append_to_file:
 36282                           	opt stack 20
 36283                           
 36284                           ;incstack = 0
 36285                           ;fat_append_to_file@file_number stored from wreg
 36286  0021B8  0100               	movlb	0	; () banked
 36287  0021BA  6F6C               	movwf	fat_append_to_file@file_number& (0+255),b
 36288                           
 36289                           ;fat16.c: 450: rootEntry_t root;;fat16.c: 451: uint32_t file_size;;fat16.c: 452: uint16_
      +                          t fat_cluster;;fat16.c: 453: uint16_t new_cluster;;fat16.c: 454: uint32_t position;;fat1
      +                          6.c: 455: uint16_t offset;;fat16.c: 456: uint16_t sector;;fat16.c: 457: uint16_t length;
      +                          ;fat16.c: 460: if(file_number>=64)
 36290  0021BC  0E3F               	movlw	63
 36291  0021BE  0100               	movlb	0	; () banked
 36292  0021C0  656C               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 36293  0021C2  D001               	goto	l2003
 36294  0021C4  0012               	return	
 36295  0021C6                     l2003:
 36296                           
 36297                           ; BSR set to: 0
 36298                           ;fat16.c: 464: };fat16.c: 467: if(_root_is_available(file_number))
 36299                           
 36300                           ; BSR set to: 0
 36301  0021C6  516C               	movf	fat_append_to_file@file_number& (0+255),w,b
 36302  0021C8  EC72  F034         	call	__root_is_available
 36303  0021CC  0900               	iorlw	0
 36304  0021CE  A4D8               	btfss	status,2,c
 36305  0021D0  0012               	return	
 36306                           
 36307                           ;fat16.c: 471: };fat16.c: 474: fat_get_file_information(file_number, &root);
 36308                           
 36309                           ;fat16.c: 468: {;fat16.c: 470: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 36310  0021D2  0E73               	movlw	low fat_append_to_file@root
 36311  0021D4  6E37               	movwf	fat_get_file_information@data,c
 36312  0021D6  0E00               	movlw	high fat_append_to_file@root
 36313  0021D8  6E38               	movwf	fat_get_file_information@data+1,c
 36314  0021DA  0100               	movlb	0	; () banked
 36315  0021DC  516C               	movf	fat_append_to_file@file_number& (0+255),w,b
 36316  0021DE  ECAD  F034         	call	_fat_get_file_information
 36317                           
 36318                           ;fat16.c: 475: file_size = root.fileSize;
 36319  0021E2  C08F  F062         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 36320  0021E6  C090  F063         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 36321  0021EA  C091  F064         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 36322  0021EE  C092  F065         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 36323                           
 36324                           ;fat16.c: 476: fat_cluster = root.firstCluster;
 36325  0021F2  C08D  F068         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 36326  0021F6  C08E  F069         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 36327                           
 36328                           ;fat16.c: 479: position = 0;
 36329  0021FA  0E00               	movlw	0
 36330  0021FC  0100               	movlb	0	; () banked
 36331  0021FE  6F6F               	movwf	fat_append_to_file@position& (0+255),b
 36332  002200  0E00               	movlw	0
 36333  002202  6F70               	movwf	(fat_append_to_file@position+1)& (0+255),b
 36334  002204  0E00               	movlw	0
 36335  002206  6F71               	movwf	(fat_append_to_file@position+2)& (0+255),b
 36336  002208  0E00               	movlw	0
 36337  00220A  6F72               	movwf	(fat_append_to_file@position+3)& (0+255),b
 36338                           
 36339                           ;fat16.c: 480: while((file_size-position)>512)
 36340  00220C  D013               	goto	l2006
 36341  00220E                     l12005:
 36342                           
 36343                           ; BSR set to: 0
 36344                           ;fat16.c: 481: {;fat16.c: 482: fat_cluster = _read_fat(fat_cluster);
 36345  00220E  C068  F030         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 36346  002212  C069  F031         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 36347  002216  ECDD  F03B         	call	__read_fat	;wreg free
 36348  00221A  C030  F068         	movff	?__read_fat,fat_append_to_file@fat_cluster
 36349  00221E  C031  F069         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 36350                           
 36351                           ;fat16.c: 483: position += 512;
 36352  002222  0E00               	movlw	0
 36353  002224  0100               	movlb	0	; () banked
 36354  002226  276F               	addwf	fat_append_to_file@position& (0+255),f,b
 36355  002228  0E02               	movlw	2
 36356  00222A  2370               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 36357  00222C  0E00               	movlw	0
 36358  00222E  2371               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 36359  002230  0E00               	movlw	0
 36360  002232  2372               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 36361  002234                     l2006:
 36362                           
 36363                           ; BSR set to: 0
 36364                           
 36365                           ; BSR set to: 0
 36366  002234  C06F  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 36367  002238  C070  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 36368  00223C  C071  F045         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 36369  002240  C072  F046         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 36370  002244  1E43               	comf	??_fat_append_to_file,f,c
 36371  002246  1E44               	comf	??_fat_append_to_file+1,f,c
 36372  002248  1E45               	comf	??_fat_append_to_file+2,f,c
 36373  00224A  1E46               	comf	??_fat_append_to_file+3,f,c
 36374  00224C  2A43               	incf	??_fat_append_to_file,f,c
 36375  00224E  0E00               	movlw	0
 36376  002250  2244               	addwfc	??_fat_append_to_file+1,f,c
 36377  002252  2245               	addwfc	??_fat_append_to_file+2,f,c
 36378  002254  2246               	addwfc	??_fat_append_to_file+3,f,c
 36379  002256  5162               	movf	fat_append_to_file@file_size& (0+255),w,b
 36380  002258  2443               	addwf	??_fat_append_to_file,w,c
 36381  00225A  6E47               	movwf	(??_fat_append_to_file+4)& (0+255),c
 36382  00225C  5163               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 36383  00225E  2044               	addwfc	??_fat_append_to_file+1,w,c
 36384  002260  6E48               	movwf	(??_fat_append_to_file+5)& (0+255),c
 36385  002262  5164               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 36386  002264  2045               	addwfc	??_fat_append_to_file+2,w,c
 36387  002266  6E49               	movwf	(??_fat_append_to_file+6)& (0+255),c
 36388  002268  5165               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 36389  00226A  2046               	addwfc	??_fat_append_to_file+3,w,c
 36390  00226C  6E4A               	movwf	(??_fat_append_to_file+7)& (0+255),c
 36391  00226E  504A               	movf	??_fat_append_to_file+7,w,c
 36392  002270  1049               	iorwf	??_fat_append_to_file+6,w,c
 36393  002272  E1CD               	bnz	l12005
 36394  002274  0447               	decf	??_fat_append_to_file+4,w,c
 36395  002276  0E02               	movlw	2
 36396  002278  5848               	subwfb	??_fat_append_to_file+5,w,c
 36397  00227A  B0D8               	btfsc	status,0,c
 36398  00227C  D7C8               	goto	l2007
 36399                           
 36400                           ; BSR set to: 0
 36401                           ;fat16.c: 484: };fat16.c: 487: offset = file_size - position;
 36402                           
 36403                           ; BSR set to: 0
 36404  00227E  C06F  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 36405  002282  C070  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 36406  002286  1E43               	comf	??_fat_append_to_file,f,c
 36407  002288  1E44               	comf	??_fat_append_to_file+1,f,c
 36408  00228A  4A43               	infsnz	??_fat_append_to_file,f,c
 36409  00228C  2A44               	incf	??_fat_append_to_file+1,f,c
 36410  00228E  5162               	movf	fat_append_to_file@file_size& (0+255),w,b
 36411  002290  2443               	addwf	??_fat_append_to_file,w,c
 36412  002292  6F6A               	movwf	fat_append_to_file@offset& (0+255),b
 36413  002294  5163               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 36414  002296  2044               	addwfc	??_fat_append_to_file+1,w,c
 36415  002298  6F6B               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 36416                           
 36417                           ; BSR set to: 0
 36418                           ;fat16.c: 490: position = 0;
 36419  00229A  0E00               	movlw	0
 36420  00229C  6F6F               	movwf	fat_append_to_file@position& (0+255),b
 36421  00229E  0E00               	movlw	0
 36422  0022A0  6F70               	movwf	(fat_append_to_file@position+1)& (0+255),b
 36423  0022A2  0E00               	movlw	0
 36424  0022A4  6F71               	movwf	(fat_append_to_file@position+2)& (0+255),b
 36425  0022A6  0E00               	movlw	0
 36426  0022A8  6F72               	movwf	(fat_append_to_file@position+3)& (0+255),b
 36427                           
 36428                           ;fat16.c: 491: while(position < number_of_bytes)
 36429  0022AA  D06F               	goto	l2009
 36430  0022AC                     
 36431                           ; BSR set to: 0
 36432                           ;fat16.c: 492: {;fat16.c: 494: if(offset==512)
 36433                           
 36434                           ; BSR set to: 0
 36435  0022AC  0E02               	movlw	2
 36436  0022AE  196B               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 36437  0022B0  116A               	iorwf	fat_append_to_file@offset& (0+255),w,b
 36438  0022B2  A4D8               	btfss	status,2,c
 36439  0022B4  D026               	goto	l2011
 36440                           
 36441                           ; BSR set to: 0
 36442                           ;fat16.c: 495: {;fat16.c: 498: new_cluster = _get_empty_cluster(0x0000);
 36443  0022B6  0E00               	movlw	0
 36444  0022B8  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 36445  0022BA  0E00               	movlw	0
 36446  0022BC  6E30               	movwf	__get_empty_cluster@first_cluster,c
 36447  0022BE  ECE7  F034         	call	__get_empty_cluster	;wreg free
 36448  0022C2  C030  F066         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 36449  0022C6  C031  F067         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 36450                           
 36451                           ;fat16.c: 500: _write_fat(fat_cluster, new_cluster);
 36452  0022CA  C068  F029         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 36453  0022CE  C069  F02A         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 36454  0022D2  C066  F02B         	movff	fat_append_to_file@new_cluster,__write_fat@value
 36455  0022D6  C067  F02C         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 36456  0022DA  ECA6  F03C         	call	__write_fat	;wreg free
 36457                           
 36458                           ;fat16.c: 502: _write_fat(new_cluster, 0xFFFF);
 36459  0022DE  C066  F029         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 36460  0022E2  C067  F02A         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 36461  0022E6  0EFF               	movlw	255
 36462  0022E8  6E2C               	movwf	__write_fat@value+1,c
 36463  0022EA  682B               	setf	__write_fat@value,c
 36464  0022EC  ECA6  F03C         	call	__write_fat	;wreg free
 36465                           
 36466                           ;fat16.c: 504: fat_cluster = new_cluster;
 36467  0022F0  C066  F068         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 36468  0022F4  C067  F069         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 36469                           
 36470                           ;fat16.c: 505: offset = 0;
 36471  0022F8  0E00               	movlw	0
 36472  0022FA  0100               	movlb	0	; () banked
 36473  0022FC  6F6B               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 36474  0022FE  0E00               	movlw	0
 36475  002300  6F6A               	movwf	fat_append_to_file@offset& (0+255),b
 36476  002302                     l2011:
 36477                           
 36478                           ; BSR set to: 0
 36479                           ;fat16.c: 506: };fat16.c: 509: sector = _sector_from_cluster(fat_cluster);
 36480                           
 36481                           ; BSR set to: 0
 36482  002302  C068  F001         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 36483  002306  C069  F002         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 36484  00230A  EC96  F040         	call	__sector_from_cluster	;wreg free
 36485  00230E  C001  F060         	movff	?__sector_from_cluster,fat_append_to_file@sector
 36486  002312  C002  F061         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 36487                           
 36488                           ;fat16.c: 512: length = 512 - offset;
 36489  002316  C06A  F043         	movff	fat_append_to_file@offset,??_fat_append_to_file
 36490  00231A  C06B  F044         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 36491  00231E  1E43               	comf	??_fat_append_to_file,f,c
 36492  002320  1E44               	comf	??_fat_append_to_file+1,f,c
 36493  002322  4A43               	infsnz	??_fat_append_to_file,f,c
 36494  002324  2A44               	incf	??_fat_append_to_file+1,f,c
 36495  002326  0E00               	movlw	0
 36496  002328  2443               	addwf	??_fat_append_to_file,w,c
 36497  00232A  0100               	movlb	0	; () banked
 36498  00232C  6F6D               	movwf	fat_append_to_file@length& (0+255),b
 36499  00232E  0E02               	movlw	2
 36500  002330  2044               	addwfc	??_fat_append_to_file+1,w,c
 36501  002332  6F6E               	movwf	(fat_append_to_file@length+1)& (0+255),b
 36502                           
 36503                           ; BSR set to: 0
 36504                           ;fat16.c: 513: if(length>number_of_bytes)
 36505  002334  516D               	movf	fat_append_to_file@length& (0+255),w,b
 36506  002336  5C3F               	subwf	fat_append_to_file@number_of_bytes,w,c
 36507  002338  516E               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 36508  00233A  5840               	subwfb	fat_append_to_file@number_of_bytes+1,w,c
 36509  00233C  B0D8               	btfsc	status,0,c
 36510  00233E  D004               	goto	l2012
 36511                           
 36512                           ; BSR set to: 0
 36513                           ;fat16.c: 514: {;fat16.c: 515: length = number_of_bytes;
 36514  002340  C03F  F06D         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 36515  002344  C040  F06E         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 36516  002348                     l2012:
 36517                           
 36518                           ; BSR set to: 0
 36519                           ;fat16.c: 516: };fat16.c: 519: flash_partial_write(sector, offset, length, &data[positio
      +                          n]);
 36520                           
 36521                           ; BSR set to: 0
 36522  002348  C060  F020         	movff	fat_append_to_file@sector,flash_partial_write@page
 36523  00234C  C061  F021         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 36524  002350  C06A  F022         	movff	fat_append_to_file@offset,flash_partial_write@start
 36525  002354  C06B  F023         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 36526  002358  C06D  F024         	movff	fat_append_to_file@length,flash_partial_write@length
 36527  00235C  C06E  F025         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 36528  002360  516F               	movf	fat_append_to_file@position& (0+255),w,b
 36529  002362  2441               	addwf	fat_append_to_file@data,w,c
 36530  002364  6E26               	movwf	flash_partial_write@data,c
 36531  002366  5170               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 36532  002368  2042               	addwfc	fat_append_to_file@data+1,w,c
 36533  00236A  6E27               	movwf	flash_partial_write@data+1,c
 36534  00236C  EC92  F035         	call	_flash_partial_write	;wreg free
 36535                           
 36536                           ;fat16.c: 522: position += length;
 36537  002370  0100               	movlb	0	; () banked
 36538  002372  516D               	movf	fat_append_to_file@length& (0+255),w,b
 36539  002374  276F               	addwf	fat_append_to_file@position& (0+255),f,b
 36540  002376  516E               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 36541  002378  2370               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 36542  00237A  0E00               	movlw	0
 36543  00237C  2371               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 36544  00237E  0E00               	movlw	0
 36545  002380  2372               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 36546                           
 36547                           ; BSR set to: 0
 36548                           ;fat16.c: 523: offset += length;
 36549  002382  516D               	movf	fat_append_to_file@length& (0+255),w,b
 36550  002384  276A               	addwf	fat_append_to_file@offset& (0+255),f,b
 36551  002386  516E               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 36552  002388  236B               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 36553  00238A                     l2009:
 36554                           
 36555                           ; BSR set to: 0
 36556                           
 36557                           ; BSR set to: 0
 36558  00238A  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 36559  00238C  6E43               	movwf	??_fat_append_to_file& (0+255),c
 36560  00238E  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 36561  002390  6E44               	movwf	(??_fat_append_to_file+1)& (0+255),c
 36562  002392  6A45               	clrf	(??_fat_append_to_file+2)& (0+255),c
 36563  002394  6A46               	clrf	(??_fat_append_to_file+3)& (0+255),c
 36564  002396  5043               	movf	??_fat_append_to_file,w,c
 36565  002398  5D6F               	subwf	fat_append_to_file@position& (0+255),w,b
 36566  00239A  5044               	movf	??_fat_append_to_file+1,w,c
 36567  00239C  5970               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 36568  00239E  5045               	movf	??_fat_append_to_file+2,w,c
 36569  0023A0  5971               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 36570  0023A2  5046               	movf	??_fat_append_to_file+3,w,c
 36571  0023A4  5972               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 36572  0023A6  A0D8               	btfss	status,0,c
 36573  0023A8  D781               	goto	l2010
 36574                           
 36575                           ; BSR set to: 0
 36576                           ;fat16.c: 524: };fat16.c: 528: root.fileSize += number_of_bytes;
 36577                           
 36578                           ; BSR set to: 0
 36579  0023AA  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 36580  0023AC  278F               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 36581  0023AE  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 36582  0023B0  2390               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 36583  0023B2  0E00               	movlw	0
 36584  0023B4  2391               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 36585  0023B6  0E00               	movlw	0
 36586  0023B8  2392               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 36587                           
 36588                           ; BSR set to: 0
 36589                           ;fat16.c: 529: _update_modified_time(&root);
 36590  0023BA  0E73               	movlw	low fat_append_to_file@root
 36591  0023BC  6E05               	movwf	__update_modified_time@root,c
 36592  0023BE  0E00               	movlw	high fat_append_to_file@root
 36593  0023C0  6E06               	movwf	__update_modified_time@root+1,c
 36594  0023C2  EC0B  F03E         	call	__update_modified_time	;wreg free
 36595                           
 36596                           ;fat16.c: 530: _write_root(file_number, &root);
 36597  0023C6  0E73               	movlw	low fat_append_to_file@root
 36598  0023C8  6E29               	movwf	__write_root@data,c
 36599  0023CA  0E00               	movlw	high fat_append_to_file@root
 36600  0023CC  6E2A               	movwf	__write_root@data+1,c
 36601  0023CE  0100               	movlb	0	; () banked
 36602  0023D0  516C               	movf	fat_append_to_file@file_number& (0+255),w,b
 36603  0023D2  EC17  F039         	call	__write_root
 36604  0023D6  0012               	return	
 36605  0023D8                     __end_of_fat_append_to_file:
 36606                           	opt stack 0
 36607                           tosu	equ	0xFFF
 36608                           tosh	equ	0xFFE
 36609                           tosl	equ	0xFFD
 36610                           pclath	equ	0xFFA
 36611                           tblptru	equ	0xFF8
 36612                           tblptrh	equ	0xFF7
 36613                           tblptrl	equ	0xFF6
 36614                           tablat	equ	0xFF5
 36615                           prodh	equ	0xFF4
 36616                           prodl	equ	0xFF3
 36617                           intcon	equ	0xFF2
 36618                           intcon2	equ	0xFF1
 36619                           intcon3	equ	0xFF0
 36620                           indf0	equ	0xFEF
 36621                           postinc0	equ	0xFEE
 36622                           fsr0h	equ	0xFEA
 36623                           fsr0l	equ	0xFE9
 36624                           wreg	equ	0xFE8
 36625                           indf1	equ	0xFE7
 36626                           postdec1	equ	0xFE5
 36627                           plusw1	equ	0xFE3
 36628                           fsr1h	equ	0xFE2
 36629                           fsr1l	equ	0xFE1
 36630                           indf2	equ	0xFDF
 36631                           postinc2	equ	0xFDE
 36632                           postdec2	equ	0xFDD
 36633                           plusw2	equ	0xFDB
 36634                           fsr2h	equ	0xFDA
 36635                           fsr2l	equ	0xFD9
 36636                           status	equ	0xFD8
 36637                           
 36638 ;; *************** function _fat_get_file_information *****************
 36639 ;; Defined at:
 36640 ;;		line 1002 in file "fat16.c"
 36641 ;; Parameters:    Size  Location     Type
 36642 ;;  file_number     1    wreg     unsigned char 
 36643 ;;  data            2   54[COMRAM] PTR struct .
 36644 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_read_from_file@
      +root(32), 
 36645 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), RAM(3759), 
 36646 ;; Auto vars:     Size  Location     Type
 36647 ;;  file_number     1   61[COMRAM] unsigned char 
 36648 ;;  offset          2   59[COMRAM] unsigned int 
 36649 ;;  root_sector     2   57[COMRAM] unsigned int 
 36650 ;; Return value:  Size  Location     Type
 36651 ;;                  1    wreg      unsigned char 
 36652 ;; Registers used:
 36653 ;;		wreg, status,2, status,0, cstack
 36654 ;; Tracked objects:
 36655 ;;		On entry : 0/0
 36656 ;;		On exit  : 0/0
 36657 ;;		Unchanged: 0/0
 36658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36660 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36662 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36663 ;;Total ram usage:        8 bytes
 36664 ;; Hardware stack levels used:    1
 36665 ;; Hardware stack levels required when called:    6
 36666 ;; This function calls:
 36667 ;;		__root_is_available
 36668 ;;		_flash_partial_read
 36669 ;; This function is called by:
 36670 ;;		_fat_append_to_file
 36671 ;;		_fat_rename_file
 36672 ;;		_fat_read_from_file
 36673 ;;		__bootloader_verify_file
 36674 ;;		__bootloader_program
 36675 ;;		__fill_buffer_get_file_details
 36676 ;; This function uses a non-reentrant model
 36677 ;;
 36678                           
 36679                           	psect	text186
 36680  00695A                     __ptext186:
 36681                           	opt stack 0
 36682  00695A                     _fat_get_file_information:
 36683                           	opt stack 22
 36684                           
 36685                           ;incstack = 0
 36686                           ;fat_get_file_information@file_number stored from wreg
 36687  00695A  6E3E               	movwf	fat_get_file_information@file_number,c
 36688                           
 36689                           ;fat16.c: 1004: uint16_t root_sector;;fat16.c: 1005: uint16_t offset;;fat16.c: 1007: if(
      +                          file_number>=64)
 36690  00695C  0E3F               	movlw	63
 36691  00695E  643E               	cpfsgt	fat_get_file_information@file_number,c
 36692  006960  D002               	goto	l2199
 36693                           
 36694                           ;fat16.c: 1008: {;fat16.c: 1010: return 0x01;
 36695  006962  0E01               	movlw	1
 36696  006964  0012               	return	
 36697  006966                     l2199:
 36698                           
 36699                           ;fat16.c: 1011: };fat16.c: 1012: if(_root_is_available(file_number))
 36700  006966  503E               	movf	fat_get_file_information@file_number,w,c
 36701  006968  EC72  F034         	call	__root_is_available
 36702  00696C  0900               	iorlw	0
 36703  00696E  B4D8               	btfsc	status,2,c
 36704  006970  D002               	goto	l2201
 36705                           
 36706                           ;fat16.c: 1013: {;fat16.c: 1015: return 0x02;
 36707  006972  0E02               	movlw	2
 36708  006974  0012               	return	
 36709  006976                     l2201:
 36710                           
 36711                           ;fat16.c: 1016: };fat16.c: 1018: root_sector = (file_number >> 4) + 34;
 36712  006976  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 36713  00697A  3A39               	swapf	??_fat_get_file_information,f,c
 36714  00697C  0E0F               	movlw	15
 36715  00697E  1639               	andwf	??_fat_get_file_information,f,c
 36716  006980  0E22               	movlw	34
 36717  006982  2439               	addwf	??_fat_get_file_information,w,c
 36718  006984  6E3A               	movwf	fat_get_file_information@root_sector,c
 36719  006986  6A3B               	clrf	fat_get_file_information@root_sector+1,c
 36720  006988  0E00               	movlw	0
 36721  00698A  223B               	addwfc	fat_get_file_information@root_sector+1,f,c
 36722                           
 36723                           ;fat16.c: 1019: offset = (file_number & 0b1111);
 36724  00698C  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 36725  006990  0E0F               	movlw	15
 36726  006992  1639               	andwf	??_fat_get_file_information,f,c
 36727  006994  5039               	movf	??_fat_get_file_information,w,c
 36728  006996  6E3C               	movwf	fat_get_file_information@offset,c
 36729  006998  6A3D               	clrf	fat_get_file_information@offset+1,c
 36730                           
 36731                           ;fat16.c: 1020: offset <<= 5;
 36732  00699A  0E05               	movlw	5
 36733  00699C                     u8475:
 36734  00699C  90D8               	bcf	status,0,c
 36735  00699E  363C               	rlcf	fat_get_file_information@offset,f,c
 36736  0069A0  363D               	rlcf	fat_get_file_information@offset+1,f,c
 36737  0069A2  2EE8               	decfsz	wreg,f,c
 36738  0069A4  D7FB               	goto	u8475
 36739                           
 36740                           ;fat16.c: 1021: flash_partial_read(root_sector, offset, 32, data);
 36741  0069A6  C03A  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 36742  0069AA  C03B  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 36743  0069AE  C03C  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 36744  0069B2  C03D  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 36745  0069B6  0E00               	movlw	0
 36746  0069B8  6E2D               	movwf	flash_partial_read@length+1,c
 36747  0069BA  0E20               	movlw	32
 36748  0069BC  6E2C               	movwf	flash_partial_read@length,c
 36749  0069BE  C037  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 36750  0069C2  C038  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 36751  0069C6  EC24  F03E         	call	_flash_partial_read	;wreg free
 36752                           
 36753                           ;fat16.c: 1024: return 0x00;
 36754  0069CA  0E00               	movlw	0
 36755  0069CC  0012               	return	
 36756  0069CE                     __end_of_fat_get_file_information:
 36757                           	opt stack 0
 36758                           tosu	equ	0xFFF
 36759                           tosh	equ	0xFFE
 36760                           tosl	equ	0xFFD
 36761                           pclath	equ	0xFFA
 36762                           tblptru	equ	0xFF8
 36763                           tblptrh	equ	0xFF7
 36764                           tblptrl	equ	0xFF6
 36765                           tablat	equ	0xFF5
 36766                           prodh	equ	0xFF4
 36767                           prodl	equ	0xFF3
 36768                           intcon	equ	0xFF2
 36769                           intcon2	equ	0xFF1
 36770                           intcon3	equ	0xFF0
 36771                           indf0	equ	0xFEF
 36772                           postinc0	equ	0xFEE
 36773                           fsr0h	equ	0xFEA
 36774                           fsr0l	equ	0xFE9
 36775                           wreg	equ	0xFE8
 36776                           indf1	equ	0xFE7
 36777                           postdec1	equ	0xFE5
 36778                           plusw1	equ	0xFE3
 36779                           fsr1h	equ	0xFE2
 36780                           fsr1l	equ	0xFE1
 36781                           indf2	equ	0xFDF
 36782                           postinc2	equ	0xFDE
 36783                           postdec2	equ	0xFDD
 36784                           plusw2	equ	0xFDB
 36785                           fsr2h	equ	0xFDA
 36786                           fsr2l	equ	0xFD9
 36787                           status	equ	0xFD8
 36788                           
 36789 ;; *************** function __root_is_available *****************
 36790 ;; Defined at:
 36791 ;;		line 59 in file "fat16.c"
 36792 ;; Parameters:    Size  Location     Type
 36793 ;;  file_number     1    wreg     unsigned char 
 36794 ;; Auto vars:     Size  Location     Type
 36795 ;;  file_number     1   52[COMRAM] unsigned char 
 36796 ;;  offset          2   50[COMRAM] unsigned int 
 36797 ;;  root_sector     2   48[COMRAM] unsigned int 
 36798 ;;  first_byte      1   53[COMRAM] unsigned char 
 36799 ;; Return value:  Size  Location     Type
 36800 ;;                  1    wreg      unsigned char 
 36801 ;; Registers used:
 36802 ;;		wreg, status,2, status,0, cstack
 36803 ;; Tracked objects:
 36804 ;;		On entry : 0/0
 36805 ;;		On exit  : 0/0
 36806 ;;		Unchanged: 0/0
 36807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36809 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36811 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36812 ;;Total ram usage:        7 bytes
 36813 ;; Hardware stack levels used:    1
 36814 ;; Hardware stack levels required when called:    5
 36815 ;; This function calls:
 36816 ;;		_flash_partial_read
 36817 ;; This function is called by:
 36818 ;;		__get_available_root_entry
 36819 ;;		_fat_delete_file
 36820 ;;		_fat_append_to_file
 36821 ;;		_fat_get_file_information
 36822 ;; This function uses a non-reentrant model
 36823 ;;
 36824                           
 36825                           	psect	text187
 36826  0068E4                     __ptext187:
 36827                           	opt stack 0
 36828  0068E4                     __root_is_available:
 36829                           	opt stack 22
 36830                           
 36831                           ;incstack = 0
 36832                           ;__root_is_available@file_number stored from wreg
 36833  0068E4  6E35               	movwf	__root_is_available@file_number,c
 36834                           
 36835                           ;fat16.c: 61: uint16_t root_sector;;fat16.c: 62: uint16_t offset;;fat16.c: 63: uint8_t f
      +                          irst_byte;;fat16.c: 67: if(file_number>=64)
 36836  0068E6  0E3F               	movlw	63
 36837  0068E8  6435               	cpfsgt	__root_is_available@file_number,c
 36838  0068EA  D002               	goto	l1915
 36839                           
 36840                           ;fat16.c: 68: {;fat16.c: 70: return 0;
 36841  0068EC  0E00               	movlw	0
 36842  0068EE  0012               	return	
 36843  0068F0                     l1915:
 36844                           
 36845                           ;fat16.c: 71: };fat16.c: 74: root_sector = (file_number >> 4) + 34;
 36846  0068F0  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 36847  0068F4  3A30               	swapf	??__root_is_available,f,c
 36848  0068F6  0E0F               	movlw	15
 36849  0068F8  1630               	andwf	??__root_is_available,f,c
 36850  0068FA  0E22               	movlw	34
 36851  0068FC  2430               	addwf	??__root_is_available,w,c
 36852  0068FE  6E31               	movwf	__root_is_available@root_sector,c
 36853  006900  6A32               	clrf	__root_is_available@root_sector+1,c
 36854  006902  0E00               	movlw	0
 36855  006904  2232               	addwfc	__root_is_available@root_sector+1,f,c
 36856                           
 36857                           ;fat16.c: 75: offset = (file_number & 0b1111);
 36858  006906  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 36859  00690A  0E0F               	movlw	15
 36860  00690C  1630               	andwf	??__root_is_available,f,c
 36861  00690E  5030               	movf	??__root_is_available,w,c
 36862  006910  6E33               	movwf	__root_is_available@offset,c
 36863  006912  6A34               	clrf	__root_is_available@offset+1,c
 36864                           
 36865                           ;fat16.c: 76: offset <<= 5;
 36866  006914  0E05               	movlw	5
 36867  006916                     u7325:
 36868  006916  90D8               	bcf	status,0,c
 36869  006918  3633               	rlcf	__root_is_available@offset,f,c
 36870  00691A  3634               	rlcf	__root_is_available@offset+1,f,c
 36871  00691C  2EE8               	decfsz	wreg,f,c
 36872  00691E  D7FB               	goto	u7325
 36873                           
 36874                           ;fat16.c: 79: flash_partial_read(root_sector, offset, 1, &first_byte);
 36875  006920  C031  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 36876  006924  C032  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 36877  006928  C033  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 36878  00692C  C034  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 36879  006930  0E00               	movlw	0
 36880  006932  6E2D               	movwf	flash_partial_read@length+1,c
 36881  006934  0E01               	movlw	1
 36882  006936  6E2C               	movwf	flash_partial_read@length,c
 36883  006938  0E36               	movlw	low __root_is_available@first_byte
 36884  00693A  6E2E               	movwf	flash_partial_read@data,c
 36885  00693C  0E00               	movlw	high __root_is_available@first_byte
 36886  00693E  6E2F               	movwf	flash_partial_read@data+1,c
 36887  006940  EC24  F03E         	call	_flash_partial_read	;wreg free
 36888                           
 36889                           ;fat16.c: 82: if((first_byte==0x00) || (first_byte==0xE5))
 36890  006944  5036               	movf	__root_is_available@first_byte,w,c
 36891  006946  B4D8               	btfsc	status,2,c
 36892  006948  D004               	goto	u7340
 36893  00694A  0EE5               	movlw	229
 36894  00694C  1836               	xorwf	__root_is_available@first_byte,w,c
 36895  00694E  A4D8               	btfss	status,2,c
 36896  006950  D002               	goto	l1917
 36897  006952                     u7340:
 36898                           
 36899                           ;fat16.c: 83: {;fat16.c: 85: return 1;
 36900  006952  0E01               	movlw	1
 36901                           
 36902                           ;fat16.c: 86: }
 36903  006954  0012               	return	
 36904  006956                     l1917:
 36905                           
 36906                           ;fat16.c: 87: else;fat16.c: 88: {;fat16.c: 90: return 0;
 36907  006956  0E00               	movlw	0
 36908  006958  0012               	return	
 36909  00695A                     __end_of__root_is_available:
 36910                           	opt stack 0
 36911                           tosu	equ	0xFFF
 36912                           tosh	equ	0xFFE
 36913                           tosl	equ	0xFFD
 36914                           pclath	equ	0xFFA
 36915                           tblptru	equ	0xFF8
 36916                           tblptrh	equ	0xFF7
 36917                           tblptrl	equ	0xFF6
 36918                           tablat	equ	0xFF5
 36919                           prodh	equ	0xFF4
 36920                           prodl	equ	0xFF3
 36921                           intcon	equ	0xFF2
 36922                           intcon2	equ	0xFF1
 36923                           intcon3	equ	0xFF0
 36924                           indf0	equ	0xFEF
 36925                           postinc0	equ	0xFEE
 36926                           fsr0h	equ	0xFEA
 36927                           fsr0l	equ	0xFE9
 36928                           wreg	equ	0xFE8
 36929                           indf1	equ	0xFE7
 36930                           postdec1	equ	0xFE5
 36931                           plusw1	equ	0xFE3
 36932                           fsr1h	equ	0xFE2
 36933                           fsr1l	equ	0xFE1
 36934                           indf2	equ	0xFDF
 36935                           postinc2	equ	0xFDE
 36936                           postdec2	equ	0xFDD
 36937                           plusw2	equ	0xFDB
 36938                           fsr2h	equ	0xFDA
 36939                           fsr2l	equ	0xFD9
 36940                           status	equ	0xFD8
 36941                           
 36942 ;; *************** function __write_root *****************
 36943 ;; Defined at:
 36944 ;;		line 182 in file "fat16.c"
 36945 ;; Parameters:    Size  Location     Type
 36946 ;;  slot            1    wreg     unsigned char 
 36947 ;;  data            2   40[COMRAM] PTR struct .
 36948 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 36949 ;; Auto vars:     Size  Location     Type
 36950 ;;  slot            1   47[COMRAM] unsigned char 
 36951 ;;  offset          2   45[COMRAM] unsigned int 
 36952 ;;  root_sector     2   43[COMRAM] unsigned int 
 36953 ;; Return value:  Size  Location     Type
 36954 ;;                  1    wreg      void 
 36955 ;; Registers used:
 36956 ;;		wreg, status,2, status,0, cstack
 36957 ;; Tracked objects:
 36958 ;;		On entry : 0/0
 36959 ;;		On exit  : 0/0
 36960 ;;		Unchanged: 0/0
 36961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36963 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36965 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36966 ;;Total ram usage:        8 bytes
 36967 ;; Hardware stack levels used:    1
 36968 ;; Hardware stack levels required when called:    5
 36969 ;; This function calls:
 36970 ;;		_flash_partial_write
 36971 ;; This function is called by:
 36972 ;;		_fat_create_file
 36973 ;;		_fat_append_to_file
 36974 ;;		_fat_rename_file
 36975 ;; This function uses a non-reentrant model
 36976 ;;
 36977                           
 36978                           	psect	text188
 36979  00722E                     __ptext188:
 36980                           	opt stack 0
 36981  00722E                     __write_root:
 36982                           	opt stack 21
 36983                           
 36984                           ;incstack = 0
 36985                           ;__write_root@slot stored from wreg
 36986  00722E  6E30               	movwf	__write_root@slot,c
 36987                           
 36988                           ;fat16.c: 184: uint16_t root_sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: root_s
      +                          ector = (slot >> 4) + 34;
 36989  007230  C030  F02B         	movff	__write_root@slot,??__write_root
 36990  007234  3A2B               	swapf	??__write_root,f,c
 36991  007236  0E0F               	movlw	15
 36992  007238  162B               	andwf	??__write_root,f,c
 36993  00723A  0E22               	movlw	34
 36994  00723C  242B               	addwf	??__write_root,w,c
 36995  00723E  6E2C               	movwf	__write_root@root_sector,c
 36996  007240  6A2D               	clrf	__write_root@root_sector+1,c
 36997  007242  0E00               	movlw	0
 36998  007244  222D               	addwfc	__write_root@root_sector+1,f,c
 36999                           
 37000                           ;fat16.c: 187: offset = (slot & 0b1111);
 37001  007246  C030  F02B         	movff	__write_root@slot,??__write_root
 37002  00724A  0E0F               	movlw	15
 37003  00724C  162B               	andwf	??__write_root,f,c
 37004  00724E  502B               	movf	??__write_root,w,c
 37005  007250  6E2E               	movwf	__write_root@offset,c
 37006  007252  6A2F               	clrf	__write_root@offset+1,c
 37007                           
 37008                           ;fat16.c: 188: offset <<= 5;
 37009  007254  0E05               	movlw	5
 37010  007256                     u8345:
 37011  007256  90D8               	bcf	status,0,c
 37012  007258  362E               	rlcf	__write_root@offset,f,c
 37013  00725A  362F               	rlcf	__write_root@offset+1,f,c
 37014  00725C  2EE8               	decfsz	wreg,f,c
 37015  00725E  D7FB               	goto	u8345
 37016                           
 37017                           ;fat16.c: 189: flash_partial_write(root_sector, offset, 32, data);
 37018  007260  C02C  F020         	movff	__write_root@root_sector,flash_partial_write@page
 37019  007264  C02D  F021         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 37020  007268  C02E  F022         	movff	__write_root@offset,flash_partial_write@start
 37021  00726C  C02F  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 37022  007270  0E00               	movlw	0
 37023  007272  6E25               	movwf	flash_partial_write@length+1,c
 37024  007274  0E20               	movlw	32
 37025  007276  6E24               	movwf	flash_partial_write@length,c
 37026  007278  C029  F026         	movff	__write_root@data,flash_partial_write@data
 37027  00727C  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 37028  007280  EC92  F035         	call	_flash_partial_write	;wreg free
 37029  007284  0012               	return		;funcret
 37030  007286                     __end_of__write_root:
 37031                           	opt stack 0
 37032                           tosu	equ	0xFFF
 37033                           tosh	equ	0xFFE
 37034                           tosl	equ	0xFFD
 37035                           pclath	equ	0xFFA
 37036                           tblptru	equ	0xFF8
 37037                           tblptrh	equ	0xFF7
 37038                           tblptrl	equ	0xFF6
 37039                           tablat	equ	0xFF5
 37040                           prodh	equ	0xFF4
 37041                           prodl	equ	0xFF3
 37042                           intcon	equ	0xFF2
 37043                           intcon2	equ	0xFF1
 37044                           intcon3	equ	0xFF0
 37045                           indf0	equ	0xFEF
 37046                           postinc0	equ	0xFEE
 37047                           fsr0h	equ	0xFEA
 37048                           fsr0l	equ	0xFE9
 37049                           wreg	equ	0xFE8
 37050                           indf1	equ	0xFE7
 37051                           postdec1	equ	0xFE5
 37052                           plusw1	equ	0xFE3
 37053                           fsr1h	equ	0xFE2
 37054                           fsr1l	equ	0xFE1
 37055                           indf2	equ	0xFDF
 37056                           postinc2	equ	0xFDE
 37057                           postdec2	equ	0xFDD
 37058                           plusw2	equ	0xFDB
 37059                           fsr2h	equ	0xFDA
 37060                           fsr2l	equ	0xFD9
 37061                           status	equ	0xFD8
 37062                           
 37063 ;; *************** function __write_fat *****************
 37064 ;; Defined at:
 37065 ;;		line 158 in file "fat16.c"
 37066 ;; Parameters:    Size  Location     Type
 37067 ;;  cluster         2   40[COMRAM] unsigned int 
 37068 ;;  value           2   42[COMRAM] unsigned int 
 37069 ;; Auto vars:     Size  Location     Type
 37070 ;;  offset          2   46[COMRAM] unsigned int 
 37071 ;;  fat_sector      2   44[COMRAM] unsigned int 
 37072 ;; Return value:  Size  Location     Type
 37073 ;;                  1    wreg      void 
 37074 ;; Registers used:
 37075 ;;		wreg, status,2, status,0, cstack
 37076 ;; Tracked objects:
 37077 ;;		On entry : 0/0
 37078 ;;		On exit  : 0/0
 37079 ;;		Unchanged: 0/0
 37080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37082 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37084 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37085 ;;Total ram usage:        8 bytes
 37086 ;; Hardware stack levels used:    1
 37087 ;; Hardware stack levels required when called:    5
 37088 ;; This function calls:
 37089 ;;		_flash_partial_write
 37090 ;; This function is called by:
 37091 ;;		_fat_create_file
 37092 ;;		_fat_delete_file
 37093 ;;		_fat_append_to_file
 37094 ;; This function uses a non-reentrant model
 37095 ;;
 37096                           
 37097                           	psect	text189
 37098  00794C                     __ptext189:
 37099                           	opt stack 0
 37100  00794C                     __write_fat:
 37101                           	opt stack 21
 37102                           
 37103                           ;fat16.c: 160: uint16_t fat_sector;;fat16.c: 161: uint16_t offset;;fat16.c: 162: fat_sec
      +                          tor = cluster>>8;
 37104                           
 37105                           ;incstack = 0
 37106  00794C  502A               	movf	__write_fat@cluster+1,w,c
 37107  00794E  6E2D               	movwf	__write_fat@fat_sector,c
 37108  007950  6A2E               	clrf	__write_fat@fat_sector+1,c
 37109                           
 37110                           ;fat16.c: 163: fat_sector += 2;
 37111  007952  0E02               	movlw	2
 37112  007954  262D               	addwf	__write_fat@fat_sector,f,c
 37113  007956  0E00               	movlw	0
 37114  007958  222E               	addwfc	__write_fat@fat_sector+1,f,c
 37115                           
 37116                           ;fat16.c: 164: offset = cluster & 0xFF;
 37117  00795A  5029               	movf	__write_fat@cluster,w,c
 37118  00795C  6E2F               	movwf	__write_fat@offset,c
 37119  00795E  6A30               	clrf	__write_fat@offset+1,c
 37120                           
 37121                           ;fat16.c: 165: offset <<= 1;
 37122  007960  90D8               	bcf	status,0,c
 37123  007962  362F               	rlcf	__write_fat@offset,f,c
 37124  007964  3630               	rlcf	__write_fat@offset+1,f,c
 37125                           
 37126                           ;fat16.c: 166: flash_partial_write(fat_sector, offset, 2, &value);
 37127  007966  C02D  F020         	movff	__write_fat@fat_sector,flash_partial_write@page
 37128  00796A  C02E  F021         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 37129  00796E  C02F  F022         	movff	__write_fat@offset,flash_partial_write@start
 37130  007972  C030  F023         	movff	__write_fat@offset+1,flash_partial_write@start+1
 37131  007976  0E00               	movlw	0
 37132  007978  6E25               	movwf	flash_partial_write@length+1,c
 37133  00797A  0E02               	movlw	2
 37134  00797C  6E24               	movwf	flash_partial_write@length,c
 37135  00797E  0E2B               	movlw	low __write_fat@value
 37136  007980  6E26               	movwf	flash_partial_write@data,c
 37137  007982  0E00               	movlw	high __write_fat@value
 37138  007984  6E27               	movwf	flash_partial_write@data+1,c
 37139  007986  EC92  F035         	call	_flash_partial_write	;wreg free
 37140  00798A  0012               	return		;funcret
 37141  00798C                     __end_of__write_fat:
 37142                           	opt stack 0
 37143                           tosu	equ	0xFFF
 37144                           tosh	equ	0xFFE
 37145                           tosl	equ	0xFFD
 37146                           pclath	equ	0xFFA
 37147                           tblptru	equ	0xFF8
 37148                           tblptrh	equ	0xFF7
 37149                           tblptrl	equ	0xFF6
 37150                           tablat	equ	0xFF5
 37151                           prodh	equ	0xFF4
 37152                           prodl	equ	0xFF3
 37153                           intcon	equ	0xFF2
 37154                           intcon2	equ	0xFF1
 37155                           intcon3	equ	0xFF0
 37156                           indf0	equ	0xFEF
 37157                           postinc0	equ	0xFEE
 37158                           fsr0h	equ	0xFEA
 37159                           fsr0l	equ	0xFE9
 37160                           wreg	equ	0xFE8
 37161                           indf1	equ	0xFE7
 37162                           postdec1	equ	0xFE5
 37163                           plusw1	equ	0xFE3
 37164                           fsr1h	equ	0xFE2
 37165                           fsr1l	equ	0xFE1
 37166                           indf2	equ	0xFDF
 37167                           postinc2	equ	0xFDE
 37168                           postdec2	equ	0xFDD
 37169                           plusw2	equ	0xFDB
 37170                           fsr2h	equ	0xFDA
 37171                           fsr2l	equ	0xFD9
 37172                           status	equ	0xFD8
 37173                           
 37174 ;; *************** function _flash_partial_write *****************
 37175 ;; Defined at:
 37176 ;;		line 471 in file "flash.c"
 37177 ;; Parameters:    Size  Location     Type
 37178 ;;  page            2   31[COMRAM] unsigned int 
 37179 ;;  start           2   33[COMRAM] unsigned int 
 37180 ;;  length          2   35[COMRAM] unsigned int 
 37181 ;;  data            2   37[COMRAM] PTR unsigned char 
 37182 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), _write_file_size@new_file
      +_size(4), 
 37183 ;;		 -> _delete_root@deleted_value(1), _write_fat@value(2), RAM(3759), 
 37184 ;; Auto vars:     Size  Location     Type
 37185 ;;  match           1   39[COMRAM] enum E6894
 37186 ;; Return value:  Size  Location     Type
 37187 ;;                  1    wreg      void 
 37188 ;; Registers used:
 37189 ;;		wreg, status,2, status,0, cstack
 37190 ;; Tracked objects:
 37191 ;;		On entry : 0/0
 37192 ;;		On exit  : 0/0
 37193 ;;		Unchanged: 0/0
 37194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37195 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37198 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37199 ;;Total ram usage:        9 bytes
 37200 ;; Hardware stack levels used:    1
 37201 ;; Hardware stack levels required when called:    4
 37202 ;; This function calls:
 37203 ;;		__flash_compare_page_to_buffer
 37204 ;;		__flash_copy_page_to_buffer
 37205 ;;		__flash_write_page_from_buffer
 37206 ;;		__flash_write_to_buffer
 37207 ;;		_flash_is_busy
 37208 ;;		_spi_set_configuration
 37209 ;; This function is called by:
 37210 ;;		__write_fat
 37211 ;;		__write_root
 37212 ;;		__delete_root
 37213 ;;		_fat_append_to_file
 37214 ;;		__write_file_size
 37215 ;; This function uses a non-reentrant model
 37216 ;;
 37217                           
 37218                           	psect	text190
 37219  006B24                     __ptext190:
 37220                           	opt stack 0
 37221  006B24                     _flash_partial_write:
 37222                           	opt stack 21
 37223                           
 37224                           ;flash.c: 473: flashMatchResult_t match;;flash.c: 476: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 37225                           
 37226                           ;incstack = 0
 37227  006B24  0E00               	movlw	0
 37228  006B26  EC6C  F021         	call	_spi_set_configuration
 37229  006B2A  EC37  F040         	call	_flash_is_busy	;wreg free
 37230  006B2E  0900               	iorlw	0
 37231  006B30  A4D8               	btfss	status,2,c
 37232  006B32  D7FB               	goto	l1845
 37233                           
 37234                           ;flash.c: 482: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 37235  006B34  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 37236  006B38  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 37237  006B3C  0E00               	movlw	0
 37238  006B3E  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 37239  006B40  EC6F  F039         	call	__flash_copy_page_to_buffer	;wreg free
 37240                           
 37241                           ;flash.c: 485: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 37242  006B44  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 37243  006B48  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 37244  006B4C  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 37245  006B50  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 37246  006B54  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 37247  006B58  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 37248  006B5C  0E00               	movlw	0
 37249  006B5E  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 37250  006B60  EC6D  F03B         	call	__flash_write_to_buffer	;wreg free
 37251                           
 37252                           ;flash.c: 488: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 37253  006B64  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 37254  006B68  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 37255  006B6C  0E00               	movlw	0
 37256  006B6E  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 37257  006B70  ECFA  F033         	call	__flash_compare_page_to_buffer	;wreg free
 37258  006B74  6E28               	movwf	flash_partial_write@match,c
 37259                           
 37260                           ;flash.c: 491: if(match==DATA_DOES_NOT_MATCH)
 37261  006B76  0428               	decf	flash_partial_write@match,w,c
 37262  006B78  A4D8               	btfss	status,2,c
 37263  006B7A  D008               	goto	l1847
 37264                           
 37265                           ;flash.c: 492: {;flash.c: 493: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 37266  006B7C  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 37267  006B80  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 37268  006B84  0E00               	movlw	0
 37269  006B86  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 37270  006B88  EC43  F039         	call	__flash_write_page_from_buffer	;wreg free
 37271  006B8C                     l1847:
 37272                           
 37273                           ;flash.c: 494: };flash.c: 497: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 37274  006B8C  0E01               	movlw	1
 37275  006B8E  EC6C  F021         	call	_spi_set_configuration
 37276  006B92  0012               	return		;funcret
 37277  006B94                     __end_of_flash_partial_write:
 37278                           	opt stack 0
 37279                           tosu	equ	0xFFF
 37280                           tosh	equ	0xFFE
 37281                           tosl	equ	0xFFD
 37282                           pclath	equ	0xFFA
 37283                           tblptru	equ	0xFF8
 37284                           tblptrh	equ	0xFF7
 37285                           tblptrl	equ	0xFF6
 37286                           tablat	equ	0xFF5
 37287                           prodh	equ	0xFF4
 37288                           prodl	equ	0xFF3
 37289                           intcon	equ	0xFF2
 37290                           intcon2	equ	0xFF1
 37291                           intcon3	equ	0xFF0
 37292                           indf0	equ	0xFEF
 37293                           postinc0	equ	0xFEE
 37294                           fsr0h	equ	0xFEA
 37295                           fsr0l	equ	0xFE9
 37296                           wreg	equ	0xFE8
 37297                           indf1	equ	0xFE7
 37298                           postdec1	equ	0xFE5
 37299                           plusw1	equ	0xFE3
 37300                           fsr1h	equ	0xFE2
 37301                           fsr1l	equ	0xFE1
 37302                           indf2	equ	0xFDF
 37303                           postinc2	equ	0xFDE
 37304                           postdec2	equ	0xFDD
 37305                           plusw2	equ	0xFDB
 37306                           fsr2h	equ	0xFDA
 37307                           fsr2l	equ	0xFD9
 37308                           status	equ	0xFD8
 37309                           
 37310 ;; *************** function _flash_is_busy *****************
 37311 ;; Defined at:
 37312 ;;		line 354 in file "flash.c"
 37313 ;; Parameters:    Size  Location     Type
 37314 ;;		None
 37315 ;; Auto vars:     Size  Location     Type
 37316 ;;  result          1   19[COMRAM] unsigned char 
 37317 ;; Return value:  Size  Location     Type
 37318 ;;                  1    wreg      unsigned char 
 37319 ;; Registers used:
 37320 ;;		wreg, status,2, status,0, cstack
 37321 ;; Tracked objects:
 37322 ;;		On entry : 0/0
 37323 ;;		On exit  : 0/0
 37324 ;;		Unchanged: 0/0
 37325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37330 ;;Total ram usage:        1 bytes
 37331 ;; Hardware stack levels used:    1
 37332 ;; Hardware stack levels required when called:    3
 37333 ;; This function calls:
 37334 ;;		__flash_is_busy
 37335 ;;		_spi_set_configuration
 37336 ;; This function is called by:
 37337 ;;		_flash_partial_write
 37338 ;;		_api_prepare
 37339 ;;		__fill_buffer_get_status
 37340 ;; This function uses a non-reentrant model
 37341 ;;
 37342                           
 37343                           	psect	text191
 37344  00806E                     __ptext191:
 37345                           	opt stack 0
 37346  00806E                     _flash_is_busy:
 37347                           	opt stack 26
 37348                           
 37349                           ;flash.c: 356: uint8_t result;;flash.c: 359: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 37350                           
 37351                           ;incstack = 0
 37352  00806E  0E00               	movlw	0
 37353  008070  EC6C  F021         	call	_spi_set_configuration
 37354                           
 37355                           ;flash.c: 362: result = _flash_is_busy();
 37356  008074  ECBC  F03F         	call	__flash_is_busy	;wreg free
 37357  008078  6E14               	movwf	flash_is_busy@result,c
 37358                           
 37359                           ;flash.c: 365: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 37360  00807A  0E01               	movlw	1
 37361  00807C  EC6C  F021         	call	_spi_set_configuration
 37362                           
 37363                           ;flash.c: 368: return result;
 37364  008080  5014               	movf	flash_is_busy@result,w,c
 37365  008082  0012               	return	
 37366  008084                     __end_of_flash_is_busy:
 37367                           	opt stack 0
 37368                           tosu	equ	0xFFF
 37369                           tosh	equ	0xFFE
 37370                           tosl	equ	0xFFD
 37371                           pclath	equ	0xFFA
 37372                           tblptru	equ	0xFF8
 37373                           tblptrh	equ	0xFF7
 37374                           tblptrl	equ	0xFF6
 37375                           tablat	equ	0xFF5
 37376                           prodh	equ	0xFF4
 37377                           prodl	equ	0xFF3
 37378                           intcon	equ	0xFF2
 37379                           intcon2	equ	0xFF1
 37380                           intcon3	equ	0xFF0
 37381                           indf0	equ	0xFEF
 37382                           postinc0	equ	0xFEE
 37383                           fsr0h	equ	0xFEA
 37384                           fsr0l	equ	0xFE9
 37385                           wreg	equ	0xFE8
 37386                           indf1	equ	0xFE7
 37387                           postdec1	equ	0xFE5
 37388                           plusw1	equ	0xFE3
 37389                           fsr1h	equ	0xFE2
 37390                           fsr1l	equ	0xFE1
 37391                           indf2	equ	0xFDF
 37392                           postinc2	equ	0xFDE
 37393                           postdec2	equ	0xFDD
 37394                           plusw2	equ	0xFDB
 37395                           fsr2h	equ	0xFDA
 37396                           fsr2l	equ	0xFD9
 37397                           status	equ	0xFD8
 37398                           
 37399 ;; *************** function __flash_write_to_buffer *****************
 37400 ;; Defined at:
 37401 ;;		line 232 in file "flash.c"
 37402 ;; Parameters:    Size  Location     Type
 37403 ;;  start           2   19[COMRAM] unsigned int 
 37404 ;;  data            2   21[COMRAM] PTR unsigned char 
 37405 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 37406 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 37407 ;;		 -> RAM(3759), 
 37408 ;;  data_length     2   23[COMRAM] unsigned int 
 37409 ;;  buffer          1   25[COMRAM] enum E6890
 37410 ;; Auto vars:     Size  Location     Type
 37411 ;;  command         4   26[COMRAM] unsigned char [4]
 37412 ;; Return value:  Size  Location     Type
 37413 ;;                  1    wreg      void 
 37414 ;; Registers used:
 37415 ;;		wreg, status,2, status,0, cstack
 37416 ;; Tracked objects:
 37417 ;;		On entry : 0/0
 37418 ;;		On exit  : 0/0
 37419 ;;		Unchanged: 0/0
 37420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37421 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37422 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37424 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37425 ;;Total ram usage:       11 bytes
 37426 ;; Hardware stack levels used:    1
 37427 ;; Hardware stack levels required when called:    3
 37428 ;; This function calls:
 37429 ;;		__flash_is_busy
 37430 ;;		_spi_tx_tx
 37431 ;; This function is called by:
 37432 ;;		_flash_page_write
 37433 ;;		_flash_partial_write
 37434 ;; This function uses a non-reentrant model
 37435 ;;
 37436                           
 37437                           	psect	text192
 37438  0076DA                     __ptext192:
 37439                           	opt stack 0
 37440  0076DA                     __flash_write_to_buffer:
 37441                           	opt stack 23
 37442                           
 37443                           ;flash.c: 234: uint8_t command[4];;flash.c: 237: while(_flash_is_busy());
 37444                           
 37445                           ;incstack = 0
 37446  0076DA  ECBC  F03F         	call	__flash_is_busy	;wreg free
 37447  0076DE  0900               	iorlw	0
 37448  0076E0  A4D8               	btfss	status,2,c
 37449  0076E2  D7FB               	goto	__flash_write_to_buffer
 37450                           
 37451                           ;flash.c: 240: if(buffer==FLASH_BUFFER_1)
 37452  0076E4  501A               	movf	__flash_write_to_buffer@buffer,w,c
 37453  0076E6  A4D8               	btfss	status,2,c
 37454  0076E8  D002               	goto	l1786
 37455                           
 37456                           ;flash.c: 241: command[0] = 0x84;
 37457  0076EA  0E84               	movlw	132
 37458  0076EC  6E1B               	movwf	__flash_write_to_buffer@command,c
 37459  0076EE                     l1786:
 37460                           
 37461                           ;flash.c: 242: if(buffer==FLASH_BUFFER_2)
 37462  0076EE  041A               	decf	__flash_write_to_buffer@buffer,w,c
 37463  0076F0  A4D8               	btfss	status,2,c
 37464  0076F2  D002               	goto	l1787
 37465                           
 37466                           ;flash.c: 243: command[0] = 0x87;
 37467  0076F4  0E87               	movlw	135
 37468  0076F6  6E1B               	movwf	__flash_write_to_buffer@command,c
 37469  0076F8                     l1787:
 37470                           
 37471                           ;flash.c: 245: command[1] = 0x00;
 37472  0076F8  0E00               	movlw	0
 37473  0076FA  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 37474                           
 37475                           ;flash.c: 246: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 37476  0076FC  5015               	movf	__flash_write_to_buffer@start+1,w,c
 37477  0076FE  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 37478                           
 37479                           ;flash.c: 247: command[3] = ((unsigned char)((start)&0xFF));
 37480  007700  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 37481                           
 37482                           ;flash.c: 250: spi_tx_tx(command, 4, data, data_length);
 37483  007704  0E1B               	movlw	low __flash_write_to_buffer@command
 37484  007706  6E01               	movwf	spi_tx_tx@command,c
 37485  007708  0E00               	movlw	high __flash_write_to_buffer@command
 37486  00770A  6E02               	movwf	spi_tx_tx@command+1,c
 37487  00770C  0E00               	movlw	0
 37488  00770E  6E04               	movwf	spi_tx_tx@command_length+1,c
 37489  007710  0E04               	movlw	4
 37490  007712  6E03               	movwf	spi_tx_tx@command_length,c
 37491  007714  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 37492  007718  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 37493  00771C  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 37494  007720  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 37495  007724  EC73  F032         	call	_spi_tx_tx	;wreg free
 37496  007728  0012               	return		;funcret
 37497  00772A                     __end_of__flash_write_to_buffer:
 37498                           	opt stack 0
 37499                           tosu	equ	0xFFF
 37500                           tosh	equ	0xFFE
 37501                           tosl	equ	0xFFD
 37502                           pclath	equ	0xFFA
 37503                           tblptru	equ	0xFF8
 37504                           tblptrh	equ	0xFF7
 37505                           tblptrl	equ	0xFF6
 37506                           tablat	equ	0xFF5
 37507                           prodh	equ	0xFF4
 37508                           prodl	equ	0xFF3
 37509                           intcon	equ	0xFF2
 37510                           intcon2	equ	0xFF1
 37511                           intcon3	equ	0xFF0
 37512                           indf0	equ	0xFEF
 37513                           postinc0	equ	0xFEE
 37514                           fsr0h	equ	0xFEA
 37515                           fsr0l	equ	0xFE9
 37516                           wreg	equ	0xFE8
 37517                           indf1	equ	0xFE7
 37518                           postdec1	equ	0xFE5
 37519                           plusw1	equ	0xFE3
 37520                           fsr1h	equ	0xFE2
 37521                           fsr1l	equ	0xFE1
 37522                           indf2	equ	0xFDF
 37523                           postinc2	equ	0xFDE
 37524                           postdec2	equ	0xFDD
 37525                           plusw2	equ	0xFDB
 37526                           fsr2h	equ	0xFDA
 37527                           fsr2l	equ	0xFD9
 37528                           status	equ	0xFD8
 37529                           
 37530 ;; *************** function _spi_tx_tx *****************
 37531 ;; Defined at:
 37532 ;;		line 386 in file "spi.c"
 37533 ;; Parameters:    Size  Location     Type
 37534 ;;  command         2    0[COMRAM] PTR unsigned char 
 37535 ;;		 -> _flash_write_to_buffer@command(4), 
 37536 ;;  command_leng    2    2[COMRAM] unsigned int 
 37537 ;;  data            2    4[COMRAM] PTR unsigned char 
 37538 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 37539 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 37540 ;;		 -> RAM(3759), 
 37541 ;;  data_length     2    6[COMRAM] unsigned int 
 37542 ;; Auto vars:     Size  Location     Type
 37543 ;;		None
 37544 ;; Return value:  Size  Location     Type
 37545 ;;                  1    wreg      void 
 37546 ;; Registers used:
 37547 ;;		wreg, status,2, status,0
 37548 ;; Tracked objects:
 37549 ;;		On entry : 0/0
 37550 ;;		On exit  : 0/0
 37551 ;;		Unchanged: 0/0
 37552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37553 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37555 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37556 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37557 ;;Total ram usage:       12 bytes
 37558 ;; Hardware stack levels used:    1
 37559 ;; This function calls:
 37560 ;;		Nothing
 37561 ;; This function is called by:
 37562 ;;		__flash_write_to_buffer
 37563 ;; This function uses a non-reentrant model
 37564 ;;
 37565                           
 37566                           	psect	text193
 37567  0064E6                     __ptext193:
 37568                           	opt stack 0
 37569  0064E6                     _spi_tx_tx:
 37570                           	opt stack 25
 37571                           
 37572                           ;spi.c: 389: DMACON1bits.SSCON1 = 0;
 37573                           
 37574                           ;incstack = 0
 37575  0064E6  9E88               	bcf	3976,7,c	;volatile
 37576                           
 37577                           ;spi.c: 390: DMACON1bits.SSCON0 = 0;
 37578  0064E8  9C88               	bcf	3976,6,c	;volatile
 37579                           
 37580                           ;spi.c: 392: DMACON1bits.TXINC = 1;
 37581  0064EA  8A88               	bsf	3976,5,c	;volatile
 37582                           
 37583                           ;spi.c: 394: DMACON1bits.RXINC = 0;
 37584  0064EC  9888               	bcf	3976,4,c	;volatile
 37585                           
 37586                           ;spi.c: 396: DMACON1bits.DUPLEX1 = 0;
 37587  0064EE  9688               	bcf	3976,3,c	;volatile
 37588                           
 37589                           ;spi.c: 397: DMACON1bits.DUPLEX0 = 1;
 37590  0064F0  8488               	bsf	3976,2,c	;volatile
 37591                           
 37592                           ;spi.c: 399: DMACON1bits.DLYINTEN = 0;
 37593  0064F2  9288               	bcf	3976,1,c	;volatile
 37594                           
 37595                           ;spi.c: 401: DMACON2bits.DLYCYC = 0b0000;
 37596  0064F4  9886               	bcf	3974,4,c	;volatile
 37597  0064F6  9A86               	bcf	3974,5,c	;volatile
 37598  0064F8  9C86               	bcf	3974,6,c	;volatile
 37599  0064FA  9E86               	bcf	3974,7,c	;volatile
 37600                           
 37601                           ;spi.c: 403: DMACON2bits.INTLVL = 0b0000;
 37602  0064FC  9086               	bcf	3974,0,c	;volatile
 37603  0064FE  9286               	bcf	3974,1,c	;volatile
 37604  006500  9486               	bcf	3974,2,c	;volatile
 37605  006502  9686               	bcf	3974,3,c	;volatile
 37606                           
 37607                           ;spi.c: 406: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37608  006504  5002               	movf	spi_tx_tx@command+1,w,c
 37609  006506  6E6A               	movwf	3946,c	;volatile
 37610                           
 37611                           ;spi.c: 407: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37612  006508  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 37613                           
 37614                           ;spi.c: 410: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37615  00650C  0EFF               	movlw	255
 37616  00650E  6E09               	movwf	??_spi_tx_tx& (0+255),c
 37617  006510  0EFF               	movlw	255
 37618  006512  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 37619  006514  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 37620  006518  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 37621  00651C  5009               	movf	??_spi_tx_tx,w,c
 37622  00651E  260B               	addwf	??_spi_tx_tx+2,f,c
 37623  006520  500A               	movf	??_spi_tx_tx+1,w,c
 37624  006522  220C               	addwfc	??_spi_tx_tx+3,f,c
 37625  006524  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37626  006528  6A0C               	clrf	??_spi_tx_tx+3,c
 37627  00652A  500B               	movf	??_spi_tx_tx+2,w,c
 37628  00652C  6E66               	movwf	3942,c	;volatile
 37629                           
 37630                           ;spi.c: 411: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37631  00652E  0403               	decf	spi_tx_tx@command_length,w,c
 37632  006530  6E67               	movwf	3943,c	;volatile
 37633                           
 37634                           ;spi.c: 414: LATDbits.LD7 = 0;
 37635  006532  9E8C               	bcf	3980,7,c	;volatile
 37636                           
 37637                           ;spi.c: 417: DMACON1bits.DMAEN = 1;
 37638  006534  8088               	bsf	3976,0,c	;volatile
 37639  006536  B088               	btfsc	3976,0,c	;volatile
 37640  006538  D7FE               	goto	l2834
 37641                           
 37642                           ;spi.c: 421: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37643  00653A  5006               	movf	spi_tx_tx@data+1,w,c
 37644  00653C  6E6A               	movwf	3946,c	;volatile
 37645                           
 37646                           ;spi.c: 422: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37647  00653E  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 37648                           
 37649                           ;spi.c: 425: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37650  006542  0EFF               	movlw	255
 37651  006544  6E09               	movwf	??_spi_tx_tx& (0+255),c
 37652  006546  0EFF               	movlw	255
 37653  006548  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 37654  00654A  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 37655  00654E  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 37656  006552  5009               	movf	??_spi_tx_tx,w,c
 37657  006554  260B               	addwf	??_spi_tx_tx+2,f,c
 37658  006556  500A               	movf	??_spi_tx_tx+1,w,c
 37659  006558  220C               	addwfc	??_spi_tx_tx+3,f,c
 37660  00655A  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37661  00655E  6A0C               	clrf	??_spi_tx_tx+3,c
 37662  006560  500B               	movf	??_spi_tx_tx+2,w,c
 37663  006562  6E66               	movwf	3942,c	;volatile
 37664                           
 37665                           ;spi.c: 426: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37666  006564  0407               	decf	spi_tx_tx@data_length,w,c
 37667  006566  6E67               	movwf	3943,c	;volatile
 37668                           
 37669                           ;spi.c: 429: DMACON1bits.DMAEN = 1;
 37670  006568  8088               	bsf	3976,0,c	;volatile
 37671  00656A  B088               	btfsc	3976,0,c	;volatile
 37672  00656C  D7FE               	goto	l2837
 37673                           
 37674                           ;spi.c: 433: LATDbits.LD7 = 1;
 37675  00656E  8E8C               	bsf	3980,7,c	;volatile
 37676  006570  0012               	return		;funcret
 37677  006572                     __end_of_spi_tx_tx:
 37678                           	opt stack 0
 37679                           tosu	equ	0xFFF
 37680                           tosh	equ	0xFFE
 37681                           tosl	equ	0xFFD
 37682                           pclath	equ	0xFFA
 37683                           tblptru	equ	0xFF8
 37684                           tblptrh	equ	0xFF7
 37685                           tblptrl	equ	0xFF6
 37686                           tablat	equ	0xFF5
 37687                           prodh	equ	0xFF4
 37688                           prodl	equ	0xFF3
 37689                           intcon	equ	0xFF2
 37690                           intcon2	equ	0xFF1
 37691                           intcon3	equ	0xFF0
 37692                           indf0	equ	0xFEF
 37693                           postinc0	equ	0xFEE
 37694                           fsr0h	equ	0xFEA
 37695                           fsr0l	equ	0xFE9
 37696                           wreg	equ	0xFE8
 37697                           indf1	equ	0xFE7
 37698                           postdec1	equ	0xFE5
 37699                           plusw1	equ	0xFE3
 37700                           fsr1h	equ	0xFE2
 37701                           fsr1l	equ	0xFE1
 37702                           indf2	equ	0xFDF
 37703                           postinc2	equ	0xFDE
 37704                           postdec2	equ	0xFDD
 37705                           plusw2	equ	0xFDB
 37706                           fsr2h	equ	0xFDA
 37707                           fsr2l	equ	0xFD9
 37708                           status	equ	0xFD8
 37709                           
 37710 ;; *************** function __flash_write_page_from_buffer *****************
 37711 ;; Defined at:
 37712 ;;		line 254 in file "flash.c"
 37713 ;; Parameters:    Size  Location     Type
 37714 ;;  page            2   19[COMRAM] unsigned int 
 37715 ;;  buffer          1   21[COMRAM] enum E6890
 37716 ;; Auto vars:     Size  Location     Type
 37717 ;;  command         4   25[COMRAM] unsigned char [4]
 37718 ;; Return value:  Size  Location     Type
 37719 ;;                  1    wreg      void 
 37720 ;; Registers used:
 37721 ;;		wreg, status,2, status,0, cstack
 37722 ;; Tracked objects:
 37723 ;;		On entry : 0/0
 37724 ;;		On exit  : 0/0
 37725 ;;		Unchanged: 0/0
 37726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37727 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37728 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37729 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37730 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37731 ;;Total ram usage:       10 bytes
 37732 ;; Hardware stack levels used:    1
 37733 ;; Hardware stack levels required when called:    3
 37734 ;; This function calls:
 37735 ;;		__flash_is_busy
 37736 ;;		_spi_tx
 37737 ;; This function is called by:
 37738 ;;		_flash_page_write
 37739 ;;		_flash_partial_write
 37740 ;; This function uses a non-reentrant model
 37741 ;;
 37742                           
 37743                           	psect	text194
 37744  007286                     __ptext194:
 37745                           	opt stack 0
 37746  007286                     __flash_write_page_from_buffer:
 37747                           	opt stack 23
 37748                           
 37749                           ;flash.c: 256: uint8_t command[4];;flash.c: 259: while(_flash_is_busy());
 37750                           
 37751                           ;incstack = 0
 37752  007286  ECBC  F03F         	call	__flash_is_busy	;wreg free
 37753  00728A  0900               	iorlw	0
 37754  00728C  A4D8               	btfss	status,2,c
 37755  00728E  D7FB               	goto	__flash_write_page_from_buffer
 37756                           
 37757                           ;flash.c: 262: if(buffer==FLASH_BUFFER_1)
 37758  007290  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 37759  007292  A4D8               	btfss	status,2,c
 37760  007294  D002               	goto	l1794
 37761                           
 37762                           ;flash.c: 263: command[0] = 0x83;
 37763  007296  0E83               	movlw	131
 37764  007298  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 37765  00729A                     l1794:
 37766                           
 37767                           ;flash.c: 264: if(buffer==FLASH_BUFFER_2)
 37768  00729A  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 37769  00729C  A4D8               	btfss	status,2,c
 37770  00729E  D002               	goto	l1795
 37771                           
 37772                           ;flash.c: 265: command[0] = 0x86;
 37773  0072A0  0E86               	movlw	134
 37774  0072A2  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 37775  0072A4                     l1795:
 37776                           
 37777                           ;flash.c: 267: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37778  0072A4  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 37779  0072A8  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 37780  0072AC  0E07               	movlw	7
 37781  0072AE  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 37782  0072B0                     u6535:
 37783  0072B0  90D8               	bcf	status,0,c
 37784  0072B2  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 37785  0072B4  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 37786  0072B6  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 37787  0072B8  D7FB               	goto	u6535
 37788  0072BA  5017               	movf	??__flash_write_page_from_buffer,w,c
 37789  0072BC  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 37790                           
 37791                           ;flash.c: 268: command[2] = ((unsigned char)((page<<1)&0xFF));
 37792  0072BE  5014               	movf	__flash_write_page_from_buffer@page,w,c
 37793  0072C0  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 37794  0072C2  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 37795                           
 37796                           ;flash.c: 269: command[3] = 0x00;
 37797  0072C4  0E00               	movlw	0
 37798  0072C6  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 37799                           
 37800                           ;flash.c: 272: spi_tx(command, 4);
 37801  0072C8  0E1A               	movlw	low __flash_write_page_from_buffer@command
 37802  0072CA  6E01               	movwf	spi_tx@data,c
 37803  0072CC  0E00               	movlw	high __flash_write_page_from_buffer@command
 37804  0072CE  6E02               	movwf	spi_tx@data+1,c
 37805  0072D0  0E00               	movlw	0
 37806  0072D2  6E04               	movwf	spi_tx@length+1,c
 37807  0072D4  0E04               	movlw	4
 37808  0072D6  6E03               	movwf	spi_tx@length,c
 37809  0072D8  EC9B  F039         	call	_spi_tx	;wreg free
 37810  0072DC  0012               	return		;funcret
 37811  0072DE                     __end_of__flash_write_page_from_buffer:
 37812                           	opt stack 0
 37813                           tosu	equ	0xFFF
 37814                           tosh	equ	0xFFE
 37815                           tosl	equ	0xFFD
 37816                           pclath	equ	0xFFA
 37817                           tblptru	equ	0xFF8
 37818                           tblptrh	equ	0xFF7
 37819                           tblptrl	equ	0xFF6
 37820                           tablat	equ	0xFF5
 37821                           prodh	equ	0xFF4
 37822                           prodl	equ	0xFF3
 37823                           intcon	equ	0xFF2
 37824                           intcon2	equ	0xFF1
 37825                           intcon3	equ	0xFF0
 37826                           indf0	equ	0xFEF
 37827                           postinc0	equ	0xFEE
 37828                           fsr0h	equ	0xFEA
 37829                           fsr0l	equ	0xFE9
 37830                           wreg	equ	0xFE8
 37831                           indf1	equ	0xFE7
 37832                           postdec1	equ	0xFE5
 37833                           plusw1	equ	0xFE3
 37834                           fsr1h	equ	0xFE2
 37835                           fsr1l	equ	0xFE1
 37836                           indf2	equ	0xFDF
 37837                           postinc2	equ	0xFDE
 37838                           postdec2	equ	0xFDD
 37839                           plusw2	equ	0xFDB
 37840                           fsr2h	equ	0xFDA
 37841                           fsr2l	equ	0xFD9
 37842                           status	equ	0xFD8
 37843                           
 37844 ;; *************** function __flash_copy_page_to_buffer *****************
 37845 ;; Defined at:
 37846 ;;		line 150 in file "flash.c"
 37847 ;; Parameters:    Size  Location     Type
 37848 ;;  page            2   19[COMRAM] unsigned int 
 37849 ;;  buffer          1   21[COMRAM] enum E6890
 37850 ;; Auto vars:     Size  Location     Type
 37851 ;;  command         4   25[COMRAM] unsigned char [4]
 37852 ;; Return value:  Size  Location     Type
 37853 ;;                  1    wreg      void 
 37854 ;; Registers used:
 37855 ;;		wreg, status,2, status,0, cstack
 37856 ;; Tracked objects:
 37857 ;;		On entry : 0/0
 37858 ;;		On exit  : 0/0
 37859 ;;		Unchanged: 0/0
 37860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37861 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37862 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37863 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37864 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37865 ;;Total ram usage:       10 bytes
 37866 ;; Hardware stack levels used:    1
 37867 ;; Hardware stack levels required when called:    3
 37868 ;; This function calls:
 37869 ;;		__flash_is_busy
 37870 ;;		_spi_tx
 37871 ;; This function is called by:
 37872 ;;		_flash_partial_write
 37873 ;; This function uses a non-reentrant model
 37874 ;;
 37875                           
 37876                           	psect	text195
 37877  0072DE                     __ptext195:
 37878                           	opt stack 0
 37879  0072DE                     __flash_copy_page_to_buffer:
 37880                           	opt stack 21
 37881                           
 37882                           ;flash.c: 152: uint8_t command[4];;flash.c: 155: while(_flash_is_busy());
 37883                           
 37884                           ;incstack = 0
 37885  0072DE  ECBC  F03F         	call	__flash_is_busy	;wreg free
 37886  0072E2  0900               	iorlw	0
 37887  0072E4  A4D8               	btfss	status,2,c
 37888  0072E6  D7FB               	goto	__flash_copy_page_to_buffer
 37889                           
 37890                           ;flash.c: 158: if(buffer==FLASH_BUFFER_1)
 37891  0072E8  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 37892  0072EA  A4D8               	btfss	status,2,c
 37893  0072EC  D002               	goto	l1759
 37894                           
 37895                           ;flash.c: 159: command[0] = 0x53;
 37896  0072EE  0E53               	movlw	83
 37897  0072F0  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 37898  0072F2                     l1759:
 37899                           
 37900                           ;flash.c: 160: if(buffer==FLASH_BUFFER_2)
 37901  0072F2  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 37902  0072F4  A4D8               	btfss	status,2,c
 37903  0072F6  D002               	goto	l1760
 37904                           
 37905                           ;flash.c: 161: command[0] = 0x55;
 37906  0072F8  0E55               	movlw	85
 37907  0072FA  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 37908  0072FC                     l1760:
 37909                           
 37910                           ;flash.c: 163: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37911  0072FC  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 37912  007300  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 37913  007304  0E07               	movlw	7
 37914  007306  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 37915  007308                     u6795:
 37916  007308  90D8               	bcf	status,0,c
 37917  00730A  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 37918  00730C  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 37919  00730E  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 37920  007310  D7FB               	goto	u6795
 37921  007312  5017               	movf	??__flash_copy_page_to_buffer,w,c
 37922  007314  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 37923                           
 37924                           ;flash.c: 164: command[2] = ((unsigned char)((page<<1)&0xFF));
 37925  007316  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 37926  007318  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 37927  00731A  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 37928                           
 37929                           ;flash.c: 165: command[3] = 0x00;
 37930  00731C  0E00               	movlw	0
 37931  00731E  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 37932                           
 37933                           ;flash.c: 168: spi_tx(command, 4);
 37934  007320  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 37935  007322  6E01               	movwf	spi_tx@data,c
 37936  007324  0E00               	movlw	high __flash_copy_page_to_buffer@command
 37937  007326  6E02               	movwf	spi_tx@data+1,c
 37938  007328  0E00               	movlw	0
 37939  00732A  6E04               	movwf	spi_tx@length+1,c
 37940  00732C  0E04               	movlw	4
 37941  00732E  6E03               	movwf	spi_tx@length,c
 37942  007330  EC9B  F039         	call	_spi_tx	;wreg free
 37943  007334  0012               	return		;funcret
 37944  007336                     __end_of__flash_copy_page_to_buffer:
 37945                           	opt stack 0
 37946                           tosu	equ	0xFFF
 37947                           tosh	equ	0xFFE
 37948                           tosl	equ	0xFFD
 37949                           pclath	equ	0xFFA
 37950                           tblptru	equ	0xFF8
 37951                           tblptrh	equ	0xFF7
 37952                           tblptrl	equ	0xFF6
 37953                           tablat	equ	0xFF5
 37954                           prodh	equ	0xFF4
 37955                           prodl	equ	0xFF3
 37956                           intcon	equ	0xFF2
 37957                           intcon2	equ	0xFF1
 37958                           intcon3	equ	0xFF0
 37959                           indf0	equ	0xFEF
 37960                           postinc0	equ	0xFEE
 37961                           fsr0h	equ	0xFEA
 37962                           fsr0l	equ	0xFE9
 37963                           wreg	equ	0xFE8
 37964                           indf1	equ	0xFE7
 37965                           postdec1	equ	0xFE5
 37966                           plusw1	equ	0xFE3
 37967                           fsr1h	equ	0xFE2
 37968                           fsr1l	equ	0xFE1
 37969                           indf2	equ	0xFDF
 37970                           postinc2	equ	0xFDE
 37971                           postdec2	equ	0xFDD
 37972                           plusw2	equ	0xFDB
 37973                           fsr2h	equ	0xFDA
 37974                           fsr2l	equ	0xFD9
 37975                           status	equ	0xFD8
 37976                           
 37977 ;; *************** function __flash_compare_page_to_buffer *****************
 37978 ;; Defined at:
 37979 ;;		line 172 in file "flash.c"
 37980 ;; Parameters:    Size  Location     Type
 37981 ;;  page            2   19[COMRAM] unsigned int 
 37982 ;;  buffer          1   21[COMRAM] enum E6890
 37983 ;; Auto vars:     Size  Location     Type
 37984 ;;  command         4   27[COMRAM] unsigned char [4]
 37985 ;;  status          2   25[COMRAM] unsigned int 
 37986 ;; Return value:  Size  Location     Type
 37987 ;;                  1    wreg      enum E6894
 37988 ;; Registers used:
 37989 ;;		wreg, status,2, status,0, cstack
 37990 ;; Tracked objects:
 37991 ;;		On entry : 0/0
 37992 ;;		On exit  : 0/0
 37993 ;;		Unchanged: 0/0
 37994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37995 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37996 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37997 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37998 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37999 ;;Total ram usage:       12 bytes
 38000 ;; Hardware stack levels used:    1
 38001 ;; Hardware stack levels required when called:    3
 38002 ;; This function calls:
 38003 ;;		__flash_get_status
 38004 ;;		__flash_is_busy
 38005 ;;		_spi_tx
 38006 ;; This function is called by:
 38007 ;;		_flash_page_write
 38008 ;;		_flash_partial_write
 38009 ;; This function uses a non-reentrant model
 38010 ;;
 38011                           
 38012                           	psect	text196
 38013  0067F4                     __ptext196:
 38014                           	opt stack 0
 38015  0067F4                     __flash_compare_page_to_buffer:
 38016                           	opt stack 23
 38017                           
 38018                           ;flash.c: 174: uint8_t command[4];;flash.c: 175: uint16_t status;;flash.c: 178: while(_f
      +                          lash_is_busy());
 38019                           
 38020                           ;incstack = 0
 38021  0067F4  ECBC  F03F         	call	__flash_is_busy	;wreg free
 38022  0067F8  0900               	iorlw	0
 38023  0067FA  A4D8               	btfss	status,2,c
 38024  0067FC  D7FB               	goto	__flash_compare_page_to_buffer
 38025                           
 38026                           ;flash.c: 181: if(buffer==FLASH_BUFFER_1)
 38027  0067FE  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 38028  006800  A4D8               	btfss	status,2,c
 38029  006802  D002               	goto	l1767
 38030                           
 38031                           ;flash.c: 182: command[0] = 0x60;
 38032  006804  0E60               	movlw	96
 38033  006806  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 38034  006808                     l1767:
 38035                           
 38036                           ;flash.c: 183: if(buffer==FLASH_BUFFER_2)
 38037  006808  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 38038  00680A  A4D8               	btfss	status,2,c
 38039  00680C  D002               	goto	l1768
 38040                           
 38041                           ;flash.c: 184: command[0] = 0x60;
 38042  00680E  0E60               	movlw	96
 38043  006810  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 38044  006812                     l1768:
 38045                           
 38046                           ;flash.c: 186: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 38047  006812  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 38048  006816  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 38049  00681A  0E07               	movlw	7
 38050  00681C  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 38051  00681E                     u6445:
 38052  00681E  90D8               	bcf	status,0,c
 38053  006820  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 38054  006822  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 38055  006824  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 38056  006826  D7FB               	goto	u6445
 38057  006828  5017               	movf	??__flash_compare_page_to_buffer,w,c
 38058  00682A  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 38059                           
 38060                           ;flash.c: 187: command[2] = ((unsigned char)((page<<1)&0xFF));
 38061  00682C  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 38062  00682E  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 38063  006830  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 38064                           
 38065                           ;flash.c: 188: command[3] = 0x00;
 38066  006832  0E00               	movlw	0
 38067  006834  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 38068                           
 38069                           ;flash.c: 191: spi_tx(command, 4);
 38070  006836  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 38071  006838  6E01               	movwf	spi_tx@data,c
 38072  00683A  0E00               	movlw	high __flash_compare_page_to_buffer@command
 38073  00683C  6E02               	movwf	spi_tx@data+1,c
 38074  00683E  0E00               	movlw	0
 38075  006840  6E04               	movwf	spi_tx@length+1,c
 38076  006842  0E04               	movlw	4
 38077  006844  6E03               	movwf	spi_tx@length,c
 38078  006846  EC9B  F039         	call	_spi_tx	;wreg free
 38079  00684A  ECBC  F03F         	call	__flash_is_busy	;wreg free
 38080  00684E  0900               	iorlw	0
 38081  006850  A4D8               	btfss	status,2,c
 38082  006852  D7FB               	goto	l1770
 38083                           
 38084                           ;flash.c: 197: status = _flash_get_status();
 38085  006854  EC3D  F03E         	call	__flash_get_status	;wreg free
 38086  006858  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 38087  00685C  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 38088                           
 38089                           ;flash.c: 200: if(status & 0b0000000001000000)
 38090  006860  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 38091  006862  D002               	goto	l1772
 38092                           
 38093                           ;flash.c: 201: {;flash.c: 203: return DATA_DOES_NOT_MATCH;
 38094  006864  0E01               	movlw	1
 38095                           
 38096                           ;flash.c: 204: }
 38097  006866  0012               	return	
 38098  006868                     l1772:
 38099                           
 38100                           ;flash.c: 205: else;flash.c: 206: {;flash.c: 208: return DATA_DOES_MATCH;
 38101  006868  0E00               	movlw	0
 38102  00686A  0012               	return	
 38103  00686C                     __end_of__flash_compare_page_to_buffer:
 38104                           	opt stack 0
 38105                           tosu	equ	0xFFF
 38106                           tosh	equ	0xFFE
 38107                           tosl	equ	0xFFD
 38108                           pclath	equ	0xFFA
 38109                           tblptru	equ	0xFF8
 38110                           tblptrh	equ	0xFF7
 38111                           tblptrl	equ	0xFF6
 38112                           tablat	equ	0xFF5
 38113                           prodh	equ	0xFF4
 38114                           prodl	equ	0xFF3
 38115                           intcon	equ	0xFF2
 38116                           intcon2	equ	0xFF1
 38117                           intcon3	equ	0xFF0
 38118                           indf0	equ	0xFEF
 38119                           postinc0	equ	0xFEE
 38120                           fsr0h	equ	0xFEA
 38121                           fsr0l	equ	0xFE9
 38122                           wreg	equ	0xFE8
 38123                           indf1	equ	0xFE7
 38124                           postdec1	equ	0xFE5
 38125                           plusw1	equ	0xFE3
 38126                           fsr1h	equ	0xFE2
 38127                           fsr1l	equ	0xFE1
 38128                           indf2	equ	0xFDF
 38129                           postinc2	equ	0xFDE
 38130                           postdec2	equ	0xFDD
 38131                           plusw2	equ	0xFDB
 38132                           fsr2h	equ	0xFDA
 38133                           fsr2l	equ	0xFD9
 38134                           status	equ	0xFD8
 38135                           
 38136 ;; *************** function __update_modified_time *****************
 38137 ;; Defined at:
 38138 ;;		line 53 in file "fat16.c"
 38139 ;; Parameters:    Size  Location     Type
 38140 ;;  root            2    4[COMRAM] PTR struct .
 38141 ;;		 -> fat_append_to_file@root(32), 
 38142 ;; Auto vars:     Size  Location     Type
 38143 ;;		None
 38144 ;; Return value:  Size  Location     Type
 38145 ;;                  1    wreg      void 
 38146 ;; Registers used:
 38147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38148 ;; Tracked objects:
 38149 ;;		On entry : 0/0
 38150 ;;		On exit  : 0/0
 38151 ;;		Unchanged: 0/0
 38152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38157 ;;Total ram usage:        2 bytes
 38158 ;; Hardware stack levels used:    1
 38159 ;; Hardware stack levels required when called:    1
 38160 ;; This function calls:
 38161 ;;		__get_date
 38162 ;;		__get_time
 38163 ;; This function is called by:
 38164 ;;		_fat_append_to_file
 38165 ;; This function uses a non-reentrant model
 38166 ;;
 38167                           
 38168                           	psect	text197
 38169  007C16                     __ptext197:
 38170                           	opt stack 0
 38171  007C16                     __update_modified_time:
 38172                           	opt stack 25
 38173                           
 38174                           ;fat16.c: 55: root->modifiedDate = _get_date();
 38175                           
 38176                           ;incstack = 0
 38177  007C16  ECE4  F040         	call	__get_date	;wreg free
 38178  007C1A  EE20 F018          	lfsr	2,24
 38179  007C1E  5005               	movf	__update_modified_time@root,w,c
 38180  007C20  26D9               	addwf	fsr2l,f,c
 38181  007C22  5006               	movf	__update_modified_time@root+1,w,c
 38182  007C24  22DA               	addwfc	fsr2h,f,c
 38183  007C26  C001  FFDE         	movff	?__get_date,postinc2
 38184  007C2A  C002  FFDD         	movff	?__get_date+1,postdec2
 38185                           
 38186                           ;fat16.c: 56: root->modifiedTime = _get_time();
 38187  007C2E  ECDF  F040         	call	__get_time	;wreg free
 38188  007C32  EE20 F016          	lfsr	2,22
 38189  007C36  5005               	movf	__update_modified_time@root,w,c
 38190  007C38  26D9               	addwf	fsr2l,f,c
 38191  007C3A  5006               	movf	__update_modified_time@root+1,w,c
 38192  007C3C  22DA               	addwfc	fsr2h,f,c
 38193  007C3E  C001  FFDE         	movff	?__get_time,postinc2
 38194  007C42  C002  FFDD         	movff	?__get_time+1,postdec2
 38195  007C46  0012               	return		;funcret
 38196  007C48                     __end_of__update_modified_time:
 38197                           	opt stack 0
 38198                           tosu	equ	0xFFF
 38199                           tosh	equ	0xFFE
 38200                           tosl	equ	0xFFD
 38201                           pclath	equ	0xFFA
 38202                           tblptru	equ	0xFF8
 38203                           tblptrh	equ	0xFF7
 38204                           tblptrl	equ	0xFF6
 38205                           tablat	equ	0xFF5
 38206                           prodh	equ	0xFF4
 38207                           prodl	equ	0xFF3
 38208                           intcon	equ	0xFF2
 38209                           intcon2	equ	0xFF1
 38210                           intcon3	equ	0xFF0
 38211                           indf0	equ	0xFEF
 38212                           postinc0	equ	0xFEE
 38213                           fsr0h	equ	0xFEA
 38214                           fsr0l	equ	0xFE9
 38215                           wreg	equ	0xFE8
 38216                           indf1	equ	0xFE7
 38217                           postdec1	equ	0xFE5
 38218                           plusw1	equ	0xFE3
 38219                           fsr1h	equ	0xFE2
 38220                           fsr1l	equ	0xFE1
 38221                           indf2	equ	0xFDF
 38222                           postinc2	equ	0xFDE
 38223                           postdec2	equ	0xFDD
 38224                           plusw2	equ	0xFDB
 38225                           fsr2h	equ	0xFDA
 38226                           fsr2l	equ	0xFD9
 38227                           status	equ	0xFD8
 38228                           
 38229 ;; *************** function __get_time *****************
 38230 ;; Defined at:
 38231 ;;		line 29 in file "fat16.c"
 38232 ;; Parameters:    Size  Location     Type
 38233 ;;		None
 38234 ;; Auto vars:     Size  Location     Type
 38235 ;;  time            2    2[COMRAM] unsigned int 
 38236 ;; Return value:  Size  Location     Type
 38237 ;;                  2    0[COMRAM] unsigned int 
 38238 ;; Registers used:
 38239 ;;		None
 38240 ;; Tracked objects:
 38241 ;;		On entry : 0/0
 38242 ;;		On exit  : 0/0
 38243 ;;		Unchanged: 0/0
 38244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38248 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38249 ;;Total ram usage:        4 bytes
 38250 ;; Hardware stack levels used:    1
 38251 ;; This function calls:
 38252 ;;		Nothing
 38253 ;; This function is called by:
 38254 ;;		__update_modified_time
 38255 ;;		_fat_create_file
 38256 ;; This function uses a non-reentrant model
 38257 ;;
 38258                           
 38259                           	psect	text198
 38260  0081BE                     __ptext198:
 38261                           	opt stack 0
 38262  0081BE                     __get_time:
 38263                           	opt stack 26
 38264                           
 38265                           ;fat16.c: 31: uint16_t time;;fat16.c: 38: return time;
 38266                           
 38267                           ;incstack = 0
 38268  0081BE  C003  F001         	movff	__get_time@time,?__get_time
 38269  0081C2  C004  F002         	movff	__get_time@time+1,?__get_time+1
 38270  0081C6  0012               	return		;funcret
 38271  0081C8                     __end_of__get_time:
 38272                           	opt stack 0
 38273                           tosu	equ	0xFFF
 38274                           tosh	equ	0xFFE
 38275                           tosl	equ	0xFFD
 38276                           pclath	equ	0xFFA
 38277                           tblptru	equ	0xFF8
 38278                           tblptrh	equ	0xFF7
 38279                           tblptrl	equ	0xFF6
 38280                           tablat	equ	0xFF5
 38281                           prodh	equ	0xFF4
 38282                           prodl	equ	0xFF3
 38283                           intcon	equ	0xFF2
 38284                           intcon2	equ	0xFF1
 38285                           intcon3	equ	0xFF0
 38286                           indf0	equ	0xFEF
 38287                           postinc0	equ	0xFEE
 38288                           fsr0h	equ	0xFEA
 38289                           fsr0l	equ	0xFE9
 38290                           wreg	equ	0xFE8
 38291                           indf1	equ	0xFE7
 38292                           postdec1	equ	0xFE5
 38293                           plusw1	equ	0xFE3
 38294                           fsr1h	equ	0xFE2
 38295                           fsr1l	equ	0xFE1
 38296                           indf2	equ	0xFDF
 38297                           postinc2	equ	0xFDE
 38298                           postdec2	equ	0xFDD
 38299                           plusw2	equ	0xFDB
 38300                           fsr2h	equ	0xFDA
 38301                           fsr2l	equ	0xFD9
 38302                           status	equ	0xFD8
 38303                           
 38304 ;; *************** function __get_date *****************
 38305 ;; Defined at:
 38306 ;;		line 41 in file "fat16.c"
 38307 ;; Parameters:    Size  Location     Type
 38308 ;;		None
 38309 ;; Auto vars:     Size  Location     Type
 38310 ;;  date            2    2[COMRAM] unsigned int 
 38311 ;; Return value:  Size  Location     Type
 38312 ;;                  2    0[COMRAM] unsigned int 
 38313 ;; Registers used:
 38314 ;;		None
 38315 ;; Tracked objects:
 38316 ;;		On entry : 0/0
 38317 ;;		On exit  : 0/0
 38318 ;;		Unchanged: 0/0
 38319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38321 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38323 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38324 ;;Total ram usage:        4 bytes
 38325 ;; Hardware stack levels used:    1
 38326 ;; This function calls:
 38327 ;;		Nothing
 38328 ;; This function is called by:
 38329 ;;		__update_modified_time
 38330 ;;		_fat_create_file
 38331 ;; This function uses a non-reentrant model
 38332 ;;
 38333                           
 38334                           	psect	text199
 38335  0081C8                     __ptext199:
 38336                           	opt stack 0
 38337  0081C8                     __get_date:
 38338                           	opt stack 26
 38339                           
 38340                           ;fat16.c: 43: uint16_t date;;fat16.c: 50: return date;
 38341                           
 38342                           ;incstack = 0
 38343  0081C8  C003  F001         	movff	__get_date@date,?__get_date
 38344  0081CC  C004  F002         	movff	__get_date@date+1,?__get_date+1
 38345  0081D0  0012               	return		;funcret
 38346  0081D2                     __end_of__get_date:
 38347                           	opt stack 0
 38348                           tosu	equ	0xFFF
 38349                           tosh	equ	0xFFE
 38350                           tosl	equ	0xFFD
 38351                           pclath	equ	0xFFA
 38352                           tblptru	equ	0xFF8
 38353                           tblptrh	equ	0xFF7
 38354                           tblptrl	equ	0xFF6
 38355                           tablat	equ	0xFF5
 38356                           prodh	equ	0xFF4
 38357                           prodl	equ	0xFF3
 38358                           intcon	equ	0xFF2
 38359                           intcon2	equ	0xFF1
 38360                           intcon3	equ	0xFF0
 38361                           indf0	equ	0xFEF
 38362                           postinc0	equ	0xFEE
 38363                           fsr0h	equ	0xFEA
 38364                           fsr0l	equ	0xFE9
 38365                           wreg	equ	0xFE8
 38366                           indf1	equ	0xFE7
 38367                           postdec1	equ	0xFE5
 38368                           plusw1	equ	0xFE3
 38369                           fsr1h	equ	0xFE2
 38370                           fsr1l	equ	0xFE1
 38371                           indf2	equ	0xFDF
 38372                           postinc2	equ	0xFDE
 38373                           postdec2	equ	0xFDD
 38374                           plusw2	equ	0xFDB
 38375                           fsr2h	equ	0xFDA
 38376                           fsr2l	equ	0xFD9
 38377                           status	equ	0xFD8
 38378                           
 38379 ;; *************** function __sector_from_cluster *****************
 38380 ;; Defined at:
 38381 ;;		line 443 in file "fat16.c"
 38382 ;; Parameters:    Size  Location     Type
 38383 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 38384 ;; Auto vars:     Size  Location     Type
 38385 ;;		None
 38386 ;; Return value:  Size  Location     Type
 38387 ;;                  2    0[COMRAM] unsigned int 
 38388 ;; Registers used:
 38389 ;;		wreg, status,2, status,0
 38390 ;; Tracked objects:
 38391 ;;		On entry : 0/0
 38392 ;;		On exit  : 0/0
 38393 ;;		Unchanged: 0/0
 38394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38399 ;;Total ram usage:        2 bytes
 38400 ;; Hardware stack levels used:    1
 38401 ;; This function calls:
 38402 ;;		Nothing
 38403 ;; This function is called by:
 38404 ;;		_fat_append_to_file
 38405 ;;		_fat_read_from_file_fast
 38406 ;; This function uses a non-reentrant model
 38407 ;;
 38408                           
 38409                           	psect	text200
 38410  00812C                     __ptext200:
 38411                           	opt stack 0
 38412  00812C                     __sector_from_cluster:
 38413                           	opt stack 27
 38414                           
 38415                           ;fat16.c: 445: return fat_cluster + 38 - 2;
 38416                           
 38417                           ;incstack = 0
 38418  00812C  0E24               	movlw	36
 38419  00812E  2401               	addwf	__sector_from_cluster@fat_cluster,w,c
 38420  008130  6E01               	movwf	?__sector_from_cluster,c
 38421  008132  0E00               	movlw	0
 38422  008134  2002               	addwfc	__sector_from_cluster@fat_cluster+1,w,c
 38423  008136  6E02               	movwf	?__sector_from_cluster+1,c
 38424  008138  0012               	return	
 38425  00813A                     __end_of__sector_from_cluster:
 38426                           	opt stack 0
 38427                           tosu	equ	0xFFF
 38428                           tosh	equ	0xFFE
 38429                           tosl	equ	0xFFD
 38430                           pclath	equ	0xFFA
 38431                           tblptru	equ	0xFF8
 38432                           tblptrh	equ	0xFF7
 38433                           tblptrl	equ	0xFF6
 38434                           tablat	equ	0xFF5
 38435                           prodh	equ	0xFF4
 38436                           prodl	equ	0xFF3
 38437                           intcon	equ	0xFF2
 38438                           intcon2	equ	0xFF1
 38439                           intcon3	equ	0xFF0
 38440                           indf0	equ	0xFEF
 38441                           postinc0	equ	0xFEE
 38442                           fsr0h	equ	0xFEA
 38443                           fsr0l	equ	0xFE9
 38444                           wreg	equ	0xFE8
 38445                           indf1	equ	0xFE7
 38446                           postdec1	equ	0xFE5
 38447                           plusw1	equ	0xFE3
 38448                           fsr1h	equ	0xFE2
 38449                           fsr1l	equ	0xFE1
 38450                           indf2	equ	0xFDF
 38451                           postinc2	equ	0xFDE
 38452                           postdec2	equ	0xFDD
 38453                           plusw2	equ	0xFDB
 38454                           fsr2h	equ	0xFDA
 38455                           fsr2l	equ	0xFD9
 38456                           status	equ	0xFD8
 38457                           
 38458 ;; *************** function __read_fat *****************
 38459 ;; Defined at:
 38460 ;;		line 169 in file "fat16.c"
 38461 ;; Parameters:    Size  Location     Type
 38462 ;;  cluster         2   47[COMRAM] unsigned int 
 38463 ;; Auto vars:     Size  Location     Type
 38464 ;;  value           2   53[COMRAM] unsigned int 
 38465 ;;  offset          2   51[COMRAM] unsigned int 
 38466 ;;  fat_sector      2   49[COMRAM] unsigned int 
 38467 ;; Return value:  Size  Location     Type
 38468 ;;                  2   47[COMRAM] unsigned int 
 38469 ;; Registers used:
 38470 ;;		wreg, status,2, status,0, cstack
 38471 ;; Tracked objects:
 38472 ;;		On entry : 0/0
 38473 ;;		On exit  : 0/0
 38474 ;;		Unchanged: 0/0
 38475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38477 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38479 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38480 ;;Total ram usage:        8 bytes
 38481 ;; Hardware stack levels used:    1
 38482 ;; Hardware stack levels required when called:    5
 38483 ;; This function calls:
 38484 ;;		_flash_partial_read
 38485 ;; This function is called by:
 38486 ;;		_fat_delete_file
 38487 ;;		_fat_append_to_file
 38488 ;;		_fat_read_from_file_fast
 38489 ;; This function uses a non-reentrant model
 38490 ;;
 38491                           
 38492                           	psect	text201
 38493  0077BA                     __ptext201:
 38494                           	opt stack 0
 38495  0077BA                     __read_fat:
 38496                           	opt stack 22
 38497                           
 38498                           ;fat16.c: 171: uint16_t fat_sector;;fat16.c: 172: uint16_t offset;;fat16.c: 173: uint16_
      +                          t value;;fat16.c: 174: fat_sector = cluster>>8;
 38499                           
 38500                           ;incstack = 0
 38501  0077BA  5031               	movf	__read_fat@cluster+1,w,c
 38502  0077BC  6E32               	movwf	__read_fat@fat_sector,c
 38503  0077BE  6A33               	clrf	__read_fat@fat_sector+1,c
 38504                           
 38505                           ;fat16.c: 175: fat_sector += 2;
 38506  0077C0  0E02               	movlw	2
 38507  0077C2  2632               	addwf	__read_fat@fat_sector,f,c
 38508  0077C4  0E00               	movlw	0
 38509  0077C6  2233               	addwfc	__read_fat@fat_sector+1,f,c
 38510                           
 38511                           ;fat16.c: 176: offset = cluster & 0xFF;
 38512  0077C8  5030               	movf	__read_fat@cluster,w,c
 38513  0077CA  6E34               	movwf	__read_fat@offset,c
 38514  0077CC  6A35               	clrf	__read_fat@offset+1,c
 38515                           
 38516                           ;fat16.c: 177: offset <<= 1;
 38517  0077CE  90D8               	bcf	status,0,c
 38518  0077D0  3634               	rlcf	__read_fat@offset,f,c
 38519  0077D2  3635               	rlcf	__read_fat@offset+1,f,c
 38520                           
 38521                           ;fat16.c: 178: flash_partial_read(fat_sector, offset, 2, &value);
 38522  0077D4  C032  F028         	movff	__read_fat@fat_sector,flash_partial_read@page
 38523  0077D8  C033  F029         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 38524  0077DC  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 38525  0077E0  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 38526  0077E4  0E00               	movlw	0
 38527  0077E6  6E2D               	movwf	flash_partial_read@length+1,c
 38528  0077E8  0E02               	movlw	2
 38529  0077EA  6E2C               	movwf	flash_partial_read@length,c
 38530  0077EC  0E36               	movlw	low __read_fat@value
 38531  0077EE  6E2E               	movwf	flash_partial_read@data,c
 38532  0077F0  0E00               	movlw	high __read_fat@value
 38533  0077F2  6E2F               	movwf	flash_partial_read@data+1,c
 38534  0077F4  EC24  F03E         	call	_flash_partial_read	;wreg free
 38535                           
 38536                           ;fat16.c: 179: return value;
 38537  0077F8  C036  F030         	movff	__read_fat@value,?__read_fat
 38538  0077FC  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 38539  007800  0012               	return	
 38540  007802                     __end_of__read_fat:
 38541                           	opt stack 0
 38542                           tosu	equ	0xFFF
 38543                           tosh	equ	0xFFE
 38544                           tosl	equ	0xFFD
 38545                           pclath	equ	0xFFA
 38546                           tblptru	equ	0xFF8
 38547                           tblptrh	equ	0xFF7
 38548                           tblptrl	equ	0xFF6
 38549                           tablat	equ	0xFF5
 38550                           prodh	equ	0xFF4
 38551                           prodl	equ	0xFF3
 38552                           intcon	equ	0xFF2
 38553                           intcon2	equ	0xFF1
 38554                           intcon3	equ	0xFF0
 38555                           indf0	equ	0xFEF
 38556                           postinc0	equ	0xFEE
 38557                           fsr0h	equ	0xFEA
 38558                           fsr0l	equ	0xFE9
 38559                           wreg	equ	0xFE8
 38560                           indf1	equ	0xFE7
 38561                           postdec1	equ	0xFE5
 38562                           plusw1	equ	0xFE3
 38563                           fsr1h	equ	0xFE2
 38564                           fsr1l	equ	0xFE1
 38565                           indf2	equ	0xFDF
 38566                           postinc2	equ	0xFDE
 38567                           postdec2	equ	0xFDD
 38568                           plusw2	equ	0xFDB
 38569                           fsr2h	equ	0xFDA
 38570                           fsr2l	equ	0xFD9
 38571                           status	equ	0xFD8
 38572                           
 38573 ;; *************** function __get_empty_cluster *****************
 38574 ;; Defined at:
 38575 ;;		line 107 in file "fat16.c"
 38576 ;; Parameters:    Size  Location     Type
 38577 ;;  first_cluste    2   47[COMRAM] unsigned int 
 38578 ;; Auto vars:     Size  Location     Type
 38579 ;;  cluster         2   55[COMRAM] unsigned int 
 38580 ;;  value           2   53[COMRAM] unsigned int 
 38581 ;;  offset          2   51[COMRAM] unsigned int 
 38582 ;;  fat_sector      2   49[COMRAM] unsigned int 
 38583 ;; Return value:  Size  Location     Type
 38584 ;;                  2   47[COMRAM] unsigned int 
 38585 ;; Registers used:
 38586 ;;		wreg, status,2, status,0, cstack
 38587 ;; Tracked objects:
 38588 ;;		On entry : 0/0
 38589 ;;		On exit  : 0/0
 38590 ;;		Unchanged: 0/0
 38591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38593 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38595 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38596 ;;Total ram usage:       10 bytes
 38597 ;; Hardware stack levels used:    1
 38598 ;; Hardware stack levels required when called:    5
 38599 ;; This function calls:
 38600 ;;		_flash_partial_read
 38601 ;; This function is called by:
 38602 ;;		_fat_create_file
 38603 ;;		_fat_append_to_file
 38604 ;; This function uses a non-reentrant model
 38605 ;;
 38606                           
 38607                           	psect	text202
 38608  0069CE                     __ptext202:
 38609                           	opt stack 0
 38610  0069CE                     __get_empty_cluster:
 38611                           	opt stack 21
 38612                           
 38613                           ;fat16.c: 109: uint16_t cluster;;fat16.c: 110: uint16_t fat_sector;;fat16.c: 111: uint16
      +                          _t offset;;fat16.c: 112: uint16_t value;;fat16.c: 115: for(cluster=first_cluster; cluste
      +                          r<(8154+2); ++cluster)
 38614                           
 38615                           ;incstack = 0
 38616  0069CE  C030  F038         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 38617  0069D2  C031  F039         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 38618  0069D6                     l11313:
 38619  0069D6  0EDC               	movlw	220
 38620  0069D8  5C38               	subwf	__get_empty_cluster@cluster,w,c
 38621  0069DA  0E1F               	movlw	31
 38622  0069DC  5839               	subwfb	__get_empty_cluster@cluster+1,w,c
 38623  0069DE  B0D8               	btfsc	status,0,c
 38624  0069E0  D02B               	goto	u8290
 38625                           
 38626                           ;fat16.c: 116: {;fat16.c: 117: fat_sector = cluster>>8;
 38627  0069E2  5039               	movf	__get_empty_cluster@cluster+1,w,c
 38628  0069E4  6E32               	movwf	__get_empty_cluster@fat_sector,c
 38629  0069E6  6A33               	clrf	__get_empty_cluster@fat_sector+1,c
 38630                           
 38631                           ;fat16.c: 118: fat_sector += 2;
 38632  0069E8  0E02               	movlw	2
 38633  0069EA  2632               	addwf	__get_empty_cluster@fat_sector,f,c
 38634  0069EC  0E00               	movlw	0
 38635  0069EE  2233               	addwfc	__get_empty_cluster@fat_sector+1,f,c
 38636                           
 38637                           ;fat16.c: 119: offset = cluster & 0xFF;
 38638  0069F0  5038               	movf	__get_empty_cluster@cluster,w,c
 38639  0069F2  6E34               	movwf	__get_empty_cluster@offset,c
 38640  0069F4  6A35               	clrf	__get_empty_cluster@offset+1,c
 38641                           
 38642                           ;fat16.c: 120: offset <<= 1;
 38643  0069F6  90D8               	bcf	status,0,c
 38644  0069F8  3634               	rlcf	__get_empty_cluster@offset,f,c
 38645  0069FA  3635               	rlcf	__get_empty_cluster@offset+1,f,c
 38646                           
 38647                           ;fat16.c: 121: flash_partial_read(fat_sector, offset, 2, &value);
 38648  0069FC  C032  F028         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 38649  006A00  C033  F029         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 38650  006A04  C034  F02A         	movff	__get_empty_cluster@offset,flash_partial_read@start
 38651  006A08  C035  F02B         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 38652  006A0C  0E00               	movlw	0
 38653  006A0E  6E2D               	movwf	flash_partial_read@length+1,c
 38654  006A10  0E02               	movlw	2
 38655  006A12  6E2C               	movwf	flash_partial_read@length,c
 38656  006A14  0E36               	movlw	low __get_empty_cluster@value
 38657  006A16  6E2E               	movwf	flash_partial_read@data,c
 38658  006A18  0E00               	movlw	high __get_empty_cluster@value
 38659  006A1A  6E2F               	movwf	flash_partial_read@data+1,c
 38660  006A1C  EC24  F03E         	call	_flash_partial_read	;wreg free
 38661                           
 38662                           ;fat16.c: 122: if(value==0x0000)
 38663  006A20  5036               	movf	__get_empty_cluster@value,w,c
 38664  006A22  1037               	iorwf	__get_empty_cluster@value+1,w,c
 38665  006A24  A4D8               	btfss	status,2,c
 38666  006A26  D005               	goto	l1931
 38667                           
 38668                           ;fat16.c: 123: {;fat16.c: 124: return cluster;
 38669  006A28  C038  F030         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 38670  006A2C  C039  F031         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 38671  006A30  0012               	return	
 38672  006A32                     l1931:
 38673  006A32  4A38               	infsnz	__get_empty_cluster@cluster,f,c
 38674  006A34  2A39               	incf	__get_empty_cluster@cluster+1,f,c
 38675  006A36  D7CF               	goto	l11313
 38676  006A38                     u8290:
 38677                           
 38678                           ;fat16.c: 125: };fat16.c: 126: };fat16.c: 127: return 0x0000;
 38679  006A38  0E00               	movlw	0
 38680  006A3A  6E31               	movwf	?__get_empty_cluster+1,c
 38681  006A3C  0E00               	movlw	0
 38682  006A3E  6E30               	movwf	?__get_empty_cluster,c
 38683  006A40  0012               	return	
 38684  006A42                     __end_of__get_empty_cluster:
 38685                           	opt stack 0
 38686                           tosu	equ	0xFFF
 38687                           tosh	equ	0xFFE
 38688                           tosl	equ	0xFFD
 38689                           pclath	equ	0xFFA
 38690                           tblptru	equ	0xFF8
 38691                           tblptrh	equ	0xFF7
 38692                           tblptrl	equ	0xFF6
 38693                           tablat	equ	0xFF5
 38694                           prodh	equ	0xFF4
 38695                           prodl	equ	0xFF3
 38696                           intcon	equ	0xFF2
 38697                           intcon2	equ	0xFF1
 38698                           intcon3	equ	0xFF0
 38699                           indf0	equ	0xFEF
 38700                           postinc0	equ	0xFEE
 38701                           fsr0h	equ	0xFEA
 38702                           fsr0l	equ	0xFE9
 38703                           wreg	equ	0xFE8
 38704                           indf1	equ	0xFE7
 38705                           postdec1	equ	0xFE5
 38706                           plusw1	equ	0xFE3
 38707                           fsr1h	equ	0xFE2
 38708                           fsr1l	equ	0xFE1
 38709                           indf2	equ	0xFDF
 38710                           postinc2	equ	0xFDE
 38711                           postdec2	equ	0xFDD
 38712                           plusw2	equ	0xFDB
 38713                           fsr2h	equ	0xFDA
 38714                           fsr2l	equ	0xFD9
 38715                           status	equ	0xFD8
 38716                           
 38717 ;; *************** function _flash_partial_read *****************
 38718 ;; Defined at:
 38719 ;;		line 457 in file "flash.c"
 38720 ;; Parameters:    Size  Location     Type
 38721 ;;  page            2   39[COMRAM] unsigned int 
 38722 ;;  start           2   41[COMRAM] unsigned int 
 38723 ;;  length          2   43[COMRAM] unsigned int 
 38724 ;;  data            2   45[COMRAM] PTR unsigned char 
 38725 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 38726 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(
      +4), 
 38727 ;;		 -> fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), 
 38728 ;;		 -> fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(1), RAM(3759), 
 38729 ;; Auto vars:     Size  Location     Type
 38730 ;;		None
 38731 ;; Return value:  Size  Location     Type
 38732 ;;                  1    wreg      void 
 38733 ;; Registers used:
 38734 ;;		wreg, status,2, status,0, cstack
 38735 ;; Tracked objects:
 38736 ;;		On entry : 0/0
 38737 ;;		On exit  : 0/0
 38738 ;;		Unchanged: 0/0
 38739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38740 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38743 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38744 ;;Total ram usage:        8 bytes
 38745 ;; Hardware stack levels used:    1
 38746 ;; Hardware stack levels required when called:    4
 38747 ;; This function calls:
 38748 ;;		__flash_partial_read
 38749 ;;		_spi_set_configuration
 38750 ;; This function is called by:
 38751 ;;		__root_is_available
 38752 ;;		__get_empty_cluster
 38753 ;;		_fat_get_empty_clusters
 38754 ;;		__read_fat
 38755 ;;		__get_first_cluster
 38756 ;;		_fat_find_file
 38757 ;;		_fat_get_file_size
 38758 ;;		_fat_read_from_file_fast
 38759 ;;		_fat_get_file_information
 38760 ;;		__get_file_size
 38761 ;; This function uses a non-reentrant model
 38762 ;;
 38763                           
 38764                           	psect	text203
 38765  007C48                     __ptext203:
 38766                           	opt stack 0
 38767  007C48                     _flash_partial_read:
 38768                           	opt stack 23
 38769                           
 38770                           ;flash.c: 460: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 38771                           
 38772                           ;incstack = 0
 38773  007C48  0E00               	movlw	0
 38774  007C4A  EC6C  F021         	call	_spi_set_configuration
 38775                           
 38776                           ;flash.c: 463: _flash_partial_read(page, start, length, data);
 38777  007C4E  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 38778  007C52  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 38779  007C56  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 38780  007C5A  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 38781  007C5E  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 38782  007C62  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 38783  007C66  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 38784  007C6A  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 38785  007C6E  EC36  F034         	call	__flash_partial_read	;wreg free
 38786                           
 38787                           ;flash.c: 466: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 38788  007C72  0E01               	movlw	1
 38789  007C74  EC6C  F021         	call	_spi_set_configuration
 38790  007C78  0012               	return		;funcret
 38791  007C7A                     __end_of_flash_partial_read:
 38792                           	opt stack 0
 38793                           tosu	equ	0xFFF
 38794                           tosh	equ	0xFFE
 38795                           tosl	equ	0xFFD
 38796                           pclath	equ	0xFFA
 38797                           tblptru	equ	0xFF8
 38798                           tblptrh	equ	0xFF7
 38799                           tblptrl	equ	0xFF6
 38800                           tablat	equ	0xFF5
 38801                           prodh	equ	0xFF4
 38802                           prodl	equ	0xFF3
 38803                           intcon	equ	0xFF2
 38804                           intcon2	equ	0xFF1
 38805                           intcon3	equ	0xFF0
 38806                           indf0	equ	0xFEF
 38807                           postinc0	equ	0xFEE
 38808                           fsr0h	equ	0xFEA
 38809                           fsr0l	equ	0xFE9
 38810                           wreg	equ	0xFE8
 38811                           indf1	equ	0xFE7
 38812                           postdec1	equ	0xFE5
 38813                           plusw1	equ	0xFE3
 38814                           fsr1h	equ	0xFE2
 38815                           fsr1l	equ	0xFE1
 38816                           indf2	equ	0xFDF
 38817                           postinc2	equ	0xFDE
 38818                           postdec2	equ	0xFDD
 38819                           plusw2	equ	0xFDB
 38820                           fsr2h	equ	0xFDA
 38821                           fsr2l	equ	0xFD9
 38822                           status	equ	0xFD8
 38823                           
 38824 ;; *************** function _spi_set_configuration *****************
 38825 ;; Defined at:
 38826 ;;		line 139 in file "spi.c"
 38827 ;; Parameters:    Size  Location     Type
 38828 ;;  configuratio    1    wreg     enum E6749
 38829 ;; Auto vars:     Size  Location     Type
 38830 ;;  configuratio    1    0[COMRAM] enum E6749
 38831 ;;  cntr            1    0        unsigned char 
 38832 ;; Return value:  Size  Location     Type
 38833 ;;                  1    wreg      void 
 38834 ;; Registers used:
 38835 ;;		wreg, status,2, status,0
 38836 ;; Tracked objects:
 38837 ;;		On entry : 0/0
 38838 ;;		On exit  : 0/0
 38839 ;;		Unchanged: 0/0
 38840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38845 ;;Total ram usage:        1 bytes
 38846 ;; Hardware stack levels used:    1
 38847 ;; This function calls:
 38848 ;;		Nothing
 38849 ;; This function is called by:
 38850 ;;		_flash_init
 38851 ;;		_flash_is_busy
 38852 ;;		_flash_page_read
 38853 ;;		_flash_page_write
 38854 ;;		_flash_partial_read
 38855 ;;		_flash_partial_write
 38856 ;;		_flash_set_power_state
 38857 ;; This function uses a non-reentrant model
 38858 ;;
 38859                           
 38860                           	psect	text204
 38861  0042D8                     __ptext204:
 38862                           	opt stack 0
 38863  0042D8                     _spi_set_configuration:
 38864                           	opt stack 28
 38865                           
 38866                           ;incstack = 0
 38867                           ;spi_set_configuration@configuration stored from wreg
 38868  0042D8  6E01               	movwf	spi_set_configuration@configuration,c
 38869                           
 38870                           ;spi.c: 141: uint8_t cntr;;spi.c: 144: switch(configuration)
 38871  0042DA  D07B               	goto	l2814
 38872  0042DC                     l2815:
 38873                           
 38874                           ;spi.c: 152: LATDbits.LD2 = 1;
 38875  0042DC  848C               	bsf	3980,2,c	;volatile
 38876                           
 38877                           ;spi.c: 153: TRISDbits.TRISD2 = 0;
 38878  0042DE  9495               	bcf	3989,2,c	;volatile
 38879                           
 38880                           ;spi.c: 154: TRISDbits.TRISD2 = 1;
 38881  0042E0  8495               	bsf	3989,2,c	;volatile
 38882  0042E2  A483               	btfss	3971,2,c	;volatile
 38883  0042E4  D7FE               	goto	l2817
 38884                           
 38885                           ;spi.c: 159: DMACON1bits.DMAEN = 0;
 38886  0042E6  9088               	bcf	3976,0,c	;volatile
 38887                           
 38888                           ;spi.c: 160: SSP2CON1bits.SSPEN = 0;
 38889  0042E8  9A72               	bcf	3954,5,c	;volatile
 38890                           
 38891                           ;spi.c: 163: TRISDbits.TRISD6 = 1;
 38892  0042EA  8C95               	bsf	3989,6,c	;volatile
 38893                           
 38894                           ;spi.c: 164: TRISDbits.TRISD4 = 0;
 38895  0042EC  9895               	bcf	3989,4,c	;volatile
 38896                           
 38897                           ;spi.c: 165: LATDbits.LD4 = 0;
 38898  0042EE  988C               	bcf	3980,4,c	;volatile
 38899                           
 38900                           ;spi.c: 166: TRISDbits.TRISD5 = 0;
 38901  0042F0  9A95               	bcf	3989,5,c	;volatile
 38902                           
 38903                           ;spi.c: 167: LATDbits.LD5 = 0;
 38904  0042F2  9A8C               	bcf	3980,5,c	;volatile
 38905                           
 38906                           ;spi.c: 168: TRISDbits.TRISD7 = 0;
 38907  0042F4  9E95               	bcf	3989,7,c	;volatile
 38908                           
 38909                           ;spi.c: 169: LATDbits.LD7 = 1;
 38910  0042F6  8E8C               	bsf	3980,7,c	;volatile
 38911                           
 38912                           ;spi.c: 172: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 38913  0042F8  0E55               	movlw	85
 38914  0042FA  6EA7               	movwf	4007,c	;volsfr
 38915  0042FC  0EAA               	movlw	170
 38916  0042FE  6EA7               	movwf	4007,c	;volsfr
 38917  004300  010E               	movlb	14	; () banked
 38918  004302  91BF               	bcf	191,0,b	;volatile
 38919                           
 38920                           ;spi.c: 174: RPOR23 = 0b00000;
 38921  004304  0E00               	movlw	0
 38922  004306  6FD7               	movwf	215,b	;volatile
 38923                           
 38924                           ;spi.c: 175: RPINR21 = 0b11111;
 38925  004308  0E1F               	movlw	31
 38926  00430A  6FFC               	movwf	252,b	;volatile
 38927                           
 38928                           ;spi.c: 176: RPINR23 = 0b11111;
 38929  00430C  0E1F               	movlw	31
 38930  00430E  6FFE               	movwf	254,b	;volatile
 38931                           
 38932                           ;spi.c: 178: RPINR21 = 23;
 38933  004310  0E17               	movlw	23
 38934  004312  6FFC               	movwf	252,b	;volatile
 38935                           
 38936                           ;spi.c: 179: RPOR21 = 10;
 38937  004314  0E0A               	movlw	10
 38938  004316  6FD5               	movwf	213,b	;volatile
 38939                           
 38940                           ;spi.c: 181: RPOR22 = 11;
 38941  004318  0E0B               	movlw	11
 38942  00431A  6FD6               	movwf	214,b	;volatile
 38943                           
 38944                           ;spi.c: 182: RPINR22 = 22;
 38945  00431C  0E16               	movlw	22
 38946  00431E  6FFD               	movwf	253,b	;volatile
 38947                           
 38948                           ;spi.c: 183: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 38949  004320  0E55               	movlw	85
 38950  004322  6EA7               	movwf	4007,c	;volsfr
 38951  004324  0EAA               	movlw	170
 38952  004326  6EA7               	movwf	4007,c	;volsfr
 38953                           
 38954                           ; BSR set to: 14
 38955  004328  81BF               	bsf	191,0,b	;volatile
 38956                           
 38957                           ; BSR set to: 14
 38958                           ;spi.c: 186: SSP2STATbits.SMP = 1;
 38959  00432A  8E73               	bsf	3955,7,c	;volatile
 38960                           
 38961                           ; BSR set to: 14
 38962                           ;spi.c: 187: SSP2STATbits.CKE = 1;
 38963  00432C  8C73               	bsf	3955,6,c	;volatile
 38964                           
 38965                           ; BSR set to: 14
 38966                           ;spi.c: 188: SSP2CON1bits.WCOL = 0;
 38967  00432E  9E72               	bcf	3954,7,c	;volatile
 38968                           
 38969                           ; BSR set to: 14
 38970                           ;spi.c: 189: SSP2CON1bits.SSPOV = 0;
 38971  004330  9C72               	bcf	3954,6,c	;volatile
 38972                           
 38973                           ; BSR set to: 14
 38974                           ;spi.c: 190: SSP2CON1bits.CKP = 0;
 38975  004332  9872               	bcf	3954,4,c	;volatile
 38976                           
 38977                           ; BSR set to: 14
 38978                           ;spi.c: 191: SSP2CON1bits.SSPM =0b0000;
 38979  004334  9072               	bcf	3954,0,c	;volatile
 38980  004336  9272               	bcf	3954,1,c	;volatile
 38981  004338  9472               	bcf	3954,2,c	;volatile
 38982  00433A  9672               	bcf	3954,3,c	;volatile
 38983                           
 38984                           ; BSR set to: 14
 38985                           ;spi.c: 192: SSP2CON1bits.SSPEN = 1;
 38986  00433C  8A72               	bsf	3954,5,c	;volatile
 38987                           
 38988                           ;spi.c: 195: active_configuration = SPI_CONFIGURATION_INTERNAL;
 38989  00433E  0E00               	movlw	0
 38990  004340  0101               	movlb	1	; () banked
 38991  004342  6F86               	movwf	_active_configuration& (0+255),b
 38992                           
 38993                           ;spi.c: 196: break;
 38994  004344  0012               	return	
 38995  004346                     l2820:
 38996                           
 38997                           ;spi.c: 200: DMACON1bits.DMAEN = 0;
 38998  004346  9088               	bcf	3976,0,c	;volatile
 38999                           
 39000                           ;spi.c: 201: SSP2CON1bits.SSPEN = 0;
 39001  004348  9A72               	bcf	3954,5,c	;volatile
 39002                           
 39003                           ;spi.c: 204: ODCON3bits.SPI2OD = 0;
 39004  00434A  010F               	movlb	15	; () banked
 39005  00434C  9340               	bcf	64,1,b	;volatile
 39006                           
 39007                           ; BSR set to: 15
 39008                           ;spi.c: 207: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 39009  00434E  0E55               	movlw	85
 39010  004350  6EA7               	movwf	4007,c	;volsfr
 39011  004352  0EAA               	movlw	170
 39012  004354  6EA7               	movwf	4007,c	;volsfr
 39013                           
 39014                           ; BSR set to: 15
 39015  004356  010E               	movlb	14	; () banked
 39016  004358  91BF               	bcf	191,0,b	;volatile
 39017                           
 39018                           ;spi.c: 208: RPOR23 = 10;
 39019  00435A  0E0A               	movlw	10
 39020  00435C  6FD7               	movwf	215,b	;volatile
 39021                           
 39022                           ;spi.c: 209: RPINR21 = 21;
 39023  00435E  0E15               	movlw	21
 39024  004360  6FFC               	movwf	252,b	;volatile
 39025                           
 39026                           ;spi.c: 210: RPINR22 = 22;
 39027  004362  0E16               	movlw	22
 39028  004364  6FFD               	movwf	253,b	;volatile
 39029                           
 39030                           ;spi.c: 211: RPINR23 = 19;
 39031  004366  0E13               	movlw	19
 39032  004368  6FFE               	movwf	254,b	;volatile
 39033                           
 39034                           ;spi.c: 212: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 39035  00436A  0E55               	movlw	85
 39036  00436C  6EA7               	movwf	4007,c	;volsfr
 39037  00436E  0EAA               	movlw	170
 39038  004370  6EA7               	movwf	4007,c	;volsfr
 39039                           
 39040                           ; BSR set to: 14
 39041  004372  81BF               	bsf	191,0,b	;volatile
 39042                           
 39043                           ; BSR set to: 14
 39044                           ;spi.c: 214: SSP2CON1bits.SSPEN = 0;
 39045  004374  9A72               	bcf	3954,5,c	;volatile
 39046                           
 39047                           ; BSR set to: 14
 39048                           ;spi.c: 222: TRISDbits.TRISD5 = 1;
 39049  004376  8A95               	bsf	3989,5,c	;volatile
 39050                           
 39051                           ; BSR set to: 14
 39052                           ;spi.c: 223: TRISDbits.TRISD4 = 1;
 39053  004378  8895               	bsf	3989,4,c	;volatile
 39054                           
 39055                           ; BSR set to: 14
 39056                           ;spi.c: 226: TRISDbits.TRISD6 = 0;
 39057  00437A  9C95               	bcf	3989,6,c	;volatile
 39058                           
 39059                           ; BSR set to: 14
 39060                           ;spi.c: 227: LATDbits.LD6 = 1;
 39061  00437C  8C8C               	bsf	3980,6,c	;volatile
 39062                           
 39063                           ; BSR set to: 14
 39064                           ;spi.c: 230: TRISDbits.TRISD2 = 1;
 39065  00437E  8495               	bsf	3989,2,c	;volatile
 39066                           
 39067                           ; BSR set to: 14
 39068                           ;spi.c: 236: SSP2STATbits.SMP = 0;
 39069  004380  9E73               	bcf	3955,7,c	;volatile
 39070                           
 39071                           ; BSR set to: 14
 39072                           ;spi.c: 237: SSP2STATbits.CKE = 1;
 39073  004382  8C73               	bsf	3955,6,c	;volatile
 39074                           
 39075                           ; BSR set to: 14
 39076                           ;spi.c: 238: SSP2CON1bits.WCOL = 0;
 39077  004384  9E72               	bcf	3954,7,c	;volatile
 39078                           
 39079                           ; BSR set to: 14
 39080                           ;spi.c: 239: SSP2CON1bits.SSPOV = 0;
 39081  004386  9C72               	bcf	3954,6,c	;volatile
 39082                           
 39083                           ; BSR set to: 14
 39084                           ;spi.c: 240: SSP2CON1bits.CKP = 0;
 39085  004388  9872               	bcf	3954,4,c	;volatile
 39086                           
 39087                           ; BSR set to: 14
 39088                           ;spi.c: 241: SSP2CON1bits.SSPM =0b0100;
 39089  00438A  5072               	movf	3954,w,c	;volatile
 39090  00438C  0BF0               	andlw	-16
 39091  00438E  0904               	iorlw	4
 39092  004390  6E72               	movwf	3954,c	;volatile
 39093                           
 39094                           ; BSR set to: 14
 39095                           ;spi.c: 242: PIR3bits.SSP2IF = 0;
 39096  004392  9EA4               	bcf	4004,7,c	;volatile
 39097                           
 39098                           ; BSR set to: 14
 39099                           ;spi.c: 243: SSP2CON1bits.SSPEN = 1;
 39100  004394  8A72               	bsf	3954,5,c	;volatile
 39101                           
 39102                           ; BSR set to: 14
 39103                           ;spi.c: 246: DMACON1bits.TXINC = 1;
 39104  004396  8A88               	bsf	3976,5,c	;volatile
 39105                           
 39106                           ; BSR set to: 14
 39107                           ;spi.c: 247: DMACON1bits.RXINC = 1;
 39108  004398  8888               	bsf	3976,4,c	;volatile
 39109                           
 39110                           ; BSR set to: 14
 39111                           ;spi.c: 248: DMACON1bits.DUPLEX1 = 1;
 39112  00439A  8688               	bsf	3976,3,c	;volatile
 39113                           
 39114                           ; BSR set to: 14
 39115                           ;spi.c: 249: DMACON1bits.DUPLEX0 = 0;
 39116  00439C  9488               	bcf	3976,2,c	;volatile
 39117                           
 39118                           ; BSR set to: 14
 39119                           ;spi.c: 250: DMACON1bits.DLYINTEN = 0;
 39120  00439E  9288               	bcf	3976,1,c	;volatile
 39121                           
 39122                           ; BSR set to: 14
 39123                           ;spi.c: 252: DMACON2bits.DLYCYC = 0b0000;
 39124  0043A0  9886               	bcf	3974,4,c	;volatile
 39125  0043A2  9A86               	bcf	3974,5,c	;volatile
 39126  0043A4  9C86               	bcf	3974,6,c	;volatile
 39127  0043A6  9E86               	bcf	3974,7,c	;volatile
 39128                           
 39129                           ; BSR set to: 14
 39130                           ;spi.c: 253: DMACON2bits.INTLVL = 0b0000;
 39131  0043A8  9086               	bcf	3974,0,c	;volatile
 39132  0043AA  9286               	bcf	3974,1,c	;volatile
 39133  0043AC  9486               	bcf	3974,2,c	;volatile
 39134  0043AE  9686               	bcf	3974,3,c	;volatile
 39135                           
 39136                           ; BSR set to: 14
 39137                           ;spi.c: 256: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 39138  0043B0  0E00               	movlw	0
 39139  0043B2  6E66               	movwf	3942,c	;volatile
 39140                           
 39141                           ; BSR set to: 14
 39142                           ;spi.c: 257: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 39143  0043B4  0E3F               	movlw	63
 39144  0043B6  6E67               	movwf	3943,c	;volatile
 39145                           
 39146                           ; BSR set to: 14
 39147                           ;spi.c: 260: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 39148  0043B8  0E02               	movlw	high __spi_external_tx_buffer
 39149  0043BA  6E6A               	movwf	3946,c	;volatile
 39150                           
 39151                           ; BSR set to: 14
 39152                           ;spi.c: 261: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 39153  0043BC  0E50               	movlw	low (low __spi_external_tx_buffer)
 39154  0043BE  6E6B               	movwf	3947,c	;volatile
 39155                           
 39156                           ; BSR set to: 14
 39157                           ;spi.c: 264: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 39158  0043C0  0E03               	movlw	high __spi_external_rx_buffer
 39159  0043C2  6E68               	movwf	3944,c	;volatile
 39160                           
 39161                           ; BSR set to: 14
 39162                           ;spi.c: 265: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 39163  0043C4  0E00               	movlw	low (low __spi_external_rx_buffer)
 39164  0043C6  6E69               	movwf	3945,c	;volatile
 39165                           
 39166                           ; BSR set to: 14
 39167                           ;spi.c: 267: DMACON1bits.DMAEN = 1;
 39168  0043C8  8088               	bsf	3976,0,c	;volatile
 39169                           
 39170                           ; BSR set to: 14
 39171                           ;spi.c: 335: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 39172  0043CA  0E01               	movlw	1
 39173  0043CC  0101               	movlb	1	; () banked
 39174  0043CE  6F86               	movwf	_active_configuration& (0+255),b
 39175                           
 39176                           ; BSR set to: 1
 39177                           ;spi.c: 337: }
 39178                           
 39179                           ;spi.c: 336: break;
 39180  0043D0  0012               	return	
 39181  0043D2                     l2814:
 39182                           
 39183                           ; BSR set to: 1
 39184  0043D2  5001               	movf	spi_set_configuration@configuration,w,c
 39185                           
 39186                           ; Switch size 1, requested type "space"
 39187                           ; Number of cases is 2, Range of values is 0 to 1
 39188                           ; switch strategies available:
 39189                           ; Name         Instructions Cycles
 39190                           ; simple_byte            7     4 (average)
 39191                           ;	Chosen strategy is simple_byte
 39192  0043D4  0A00               	xorlw	0	; case 0
 39193  0043D6  B4D8               	btfsc	status,2,c
 39194  0043D8  D781               	goto	l2815
 39195  0043DA  0A01               	xorlw	1	; case 1
 39196  0043DC  A4D8               	btfss	status,2,c
 39197  0043DE  0012               	return	
 39198  0043E0  D7B2               	goto	l2820
 39199  0043E2                     __end_of_spi_set_configuration:
 39200                           	opt stack 0
 39201                           tosu	equ	0xFFF
 39202                           tosh	equ	0xFFE
 39203                           tosl	equ	0xFFD
 39204                           pclath	equ	0xFFA
 39205                           tblptru	equ	0xFF8
 39206                           tblptrh	equ	0xFF7
 39207                           tblptrl	equ	0xFF6
 39208                           tablat	equ	0xFF5
 39209                           prodh	equ	0xFF4
 39210                           prodl	equ	0xFF3
 39211                           intcon	equ	0xFF2
 39212                           intcon2	equ	0xFF1
 39213                           intcon3	equ	0xFF0
 39214                           indf0	equ	0xFEF
 39215                           postinc0	equ	0xFEE
 39216                           fsr0h	equ	0xFEA
 39217                           fsr0l	equ	0xFE9
 39218                           wreg	equ	0xFE8
 39219                           indf1	equ	0xFE7
 39220                           postdec1	equ	0xFE5
 39221                           plusw1	equ	0xFE3
 39222                           fsr1h	equ	0xFE2
 39223                           fsr1l	equ	0xFE1
 39224                           indf2	equ	0xFDF
 39225                           postinc2	equ	0xFDE
 39226                           postdec2	equ	0xFDD
 39227                           plusw2	equ	0xFDB
 39228                           fsr2h	equ	0xFDA
 39229                           fsr2l	equ	0xFD9
 39230                           status	equ	0xFD8
 39231                           
 39232 ;; *************** function __flash_partial_read *****************
 39233 ;; Defined at:
 39234 ;;		line 305 in file "flash.c"
 39235 ;; Parameters:    Size  Location     Type
 39236 ;;  page            2   19[COMRAM] unsigned int 
 39237 ;;  start           2   21[COMRAM] unsigned int 
 39238 ;;  length          2   23[COMRAM] unsigned int 
 39239 ;;  data            2   25[COMRAM] PTR unsigned char 
 39240 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 39241 ;;		 -> buffer(512), fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 39242 ;;		 -> fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_
      +cluster(2), 
 39243 ;;		 -> _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(
      +1), 
 39244 ;;		 -> msd_buffer(512), RAM(3759), 
 39245 ;; Auto vars:     Size  Location     Type
 39246 ;;  command         4   31[COMRAM] unsigned char [4]
 39247 ;;  address         4   35[COMRAM] unsigned long 
 39248 ;; Return value:  Size  Location     Type
 39249 ;;                  1    wreg      void 
 39250 ;; Registers used:
 39251 ;;		wreg, status,2, status,0, cstack
 39252 ;; Tracked objects:
 39253 ;;		On entry : 0/0
 39254 ;;		On exit  : 0/0
 39255 ;;		Unchanged: 0/0
 39256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39257 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39258 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39259 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39260 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39261 ;;Total ram usage:       20 bytes
 39262 ;; Hardware stack levels used:    1
 39263 ;; Hardware stack levels required when called:    3
 39264 ;; This function calls:
 39265 ;;		__flash_is_busy
 39266 ;;		_spi_tx_rx
 39267 ;; This function is called by:
 39268 ;;		_flash_page_read
 39269 ;;		_flash_partial_read
 39270 ;; This function uses a non-reentrant model
 39271 ;;
 39272                           
 39273                           	psect	text205
 39274  00686C                     __ptext205:
 39275                           	opt stack 0
 39276  00686C                     __flash_partial_read:
 39277                           	opt stack 23
 39278                           
 39279                           ;flash.c: 307: uint32_t address;;flash.c: 308: uint8_t command[4];;flash.c: 311: while(_
      +                          flash_is_busy());
 39280                           
 39281                           ;incstack = 0
 39282  00686C  ECBC  F03F         	call	__flash_is_busy	;wreg free
 39283  006870  0900               	iorlw	0
 39284  006872  A4D8               	btfss	status,2,c
 39285  006874  D7FB               	goto	__flash_partial_read
 39286                           
 39287                           ;flash.c: 314: address = page;
 39288  006876  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 39289  00687A  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 39290  00687E  6A26               	clrf	__flash_partial_read@address+2,c
 39291  006880  6A27               	clrf	__flash_partial_read@address+3,c
 39292                           
 39293                           ;flash.c: 315: address <<= 9;
 39294  006882  0E09               	movlw	9
 39295  006884                     u6555:
 39296  006884  90D8               	bcf	status,0,c
 39297  006886  3624               	rlcf	__flash_partial_read@address,f,c
 39298  006888  3625               	rlcf	__flash_partial_read@address+1,f,c
 39299  00688A  3626               	rlcf	__flash_partial_read@address+2,f,c
 39300  00688C  3627               	rlcf	__flash_partial_read@address+3,f,c
 39301  00688E  2EE8               	decfsz	wreg,f,c
 39302  006890  D7F9               	goto	u6555
 39303                           
 39304                           ;flash.c: 316: address |= start;
 39305  006892  5016               	movf	__flash_partial_read@start,w,c
 39306  006894  6E1C               	movwf	??__flash_partial_read& (0+255),c
 39307  006896  5017               	movf	__flash_partial_read@start+1,w,c
 39308  006898  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 39309  00689A  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 39310  00689C  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 39311  00689E  501C               	movf	??__flash_partial_read,w,c
 39312  0068A0  1224               	iorwf	__flash_partial_read@address,f,c
 39313  0068A2  501D               	movf	??__flash_partial_read+1,w,c
 39314  0068A4  1225               	iorwf	__flash_partial_read@address+1,f,c
 39315  0068A6  501E               	movf	??__flash_partial_read+2,w,c
 39316  0068A8  1226               	iorwf	__flash_partial_read@address+2,f,c
 39317  0068AA  501F               	movf	??__flash_partial_read+3,w,c
 39318  0068AC  1227               	iorwf	__flash_partial_read@address+3,f,c
 39319                           
 39320                           ;flash.c: 319: command[0] = 0x03;
 39321  0068AE  0E03               	movlw	3
 39322  0068B0  6E20               	movwf	__flash_partial_read@command,c
 39323                           
 39324                           ;flash.c: 320: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 39325  0068B2  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 39326                           
 39327                           ;flash.c: 321: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 39328  0068B6  5025               	movf	__flash_partial_read@address+1,w,c
 39329  0068B8  6E22               	movwf	__flash_partial_read@command+2,c
 39330                           
 39331                           ;flash.c: 322: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 39332  0068BA  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 39333                           
 39334                           ;flash.c: 325: spi_tx_rx(command, 4, data, length);
 39335  0068BE  0E20               	movlw	low __flash_partial_read@command
 39336  0068C0  6E01               	movwf	spi_tx_rx@command,c
 39337  0068C2  0E00               	movlw	high __flash_partial_read@command
 39338  0068C4  6E02               	movwf	spi_tx_rx@command+1,c
 39339  0068C6  0E00               	movlw	0
 39340  0068C8  6E04               	movwf	spi_tx_rx@command_length+1,c
 39341  0068CA  0E04               	movlw	4
 39342  0068CC  6E03               	movwf	spi_tx_rx@command_length,c
 39343  0068CE  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 39344  0068D2  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 39345  0068D6  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 39346  0068DA  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 39347  0068DE  ECC3  F030         	call	_spi_tx_rx	;wreg free
 39348  0068E2  0012               	return		;funcret
 39349  0068E4                     __end_of__flash_partial_read:
 39350                           	opt stack 0
 39351                           tosu	equ	0xFFF
 39352                           tosh	equ	0xFFE
 39353                           tosl	equ	0xFFD
 39354                           pclath	equ	0xFFA
 39355                           tblptru	equ	0xFF8
 39356                           tblptrh	equ	0xFF7
 39357                           tblptrl	equ	0xFF6
 39358                           tablat	equ	0xFF5
 39359                           prodh	equ	0xFF4
 39360                           prodl	equ	0xFF3
 39361                           intcon	equ	0xFF2
 39362                           intcon2	equ	0xFF1
 39363                           intcon3	equ	0xFF0
 39364                           indf0	equ	0xFEF
 39365                           postinc0	equ	0xFEE
 39366                           fsr0h	equ	0xFEA
 39367                           fsr0l	equ	0xFE9
 39368                           wreg	equ	0xFE8
 39369                           indf1	equ	0xFE7
 39370                           postdec1	equ	0xFE5
 39371                           plusw1	equ	0xFE3
 39372                           fsr1h	equ	0xFE2
 39373                           fsr1l	equ	0xFE1
 39374                           indf2	equ	0xFDF
 39375                           postinc2	equ	0xFDE
 39376                           postdec2	equ	0xFDD
 39377                           plusw2	equ	0xFDB
 39378                           fsr2h	equ	0xFDA
 39379                           fsr2l	equ	0xFD9
 39380                           status	equ	0xFD8
 39381                           
 39382 ;; *************** function __flash_is_busy *****************
 39383 ;; Defined at:
 39384 ;;		line 277 in file "flash.c"
 39385 ;; Parameters:    Size  Location     Type
 39386 ;;		None
 39387 ;; Auto vars:     Size  Location     Type
 39388 ;;  status          2   17[COMRAM] unsigned int 
 39389 ;; Return value:  Size  Location     Type
 39390 ;;                  1    wreg      unsigned char 
 39391 ;; Registers used:
 39392 ;;		wreg, status,2, status,0, cstack
 39393 ;; Tracked objects:
 39394 ;;		On entry : 0/0
 39395 ;;		On exit  : 0/0
 39396 ;;		Unchanged: 0/0
 39397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39399 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39401 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39402 ;;Total ram usage:        2 bytes
 39403 ;; Hardware stack levels used:    1
 39404 ;; Hardware stack levels required when called:    2
 39405 ;; This function calls:
 39406 ;;		__flash_get_status
 39407 ;;		__flash_wakeup
 39408 ;; This function is called by:
 39409 ;;		__flash_set_page_size
 39410 ;;		__flash_copy_page_to_buffer
 39411 ;;		__flash_compare_page_to_buffer
 39412 ;;		__flash_write_to_buffer
 39413 ;;		__flash_write_page_from_buffer
 39414 ;;		__flash_partial_read
 39415 ;;		_flash_is_busy
 39416 ;;		__flash_erase_page
 39417 ;;		_flash_set_power_state
 39418 ;; This function uses a non-reentrant model
 39419 ;;
 39420                           
 39421                           	psect	text206
 39422  007F78                     __ptext206:
 39423                           	opt stack 0
 39424  007F78                     __flash_is_busy:
 39425                           	opt stack 25
 39426                           
 39427                           ;flash.c: 279: uint16_t status;;flash.c: 282: if(power_state!=FLASH_POWER_STATE_NORMAL)
 39428                           
 39429                           ;incstack = 0
 39430  007F78  0100               	movlb	0	; () banked
 39431  007F7A  51DF               	movf	_power_state& (0+255),w,b
 39432  007F7C  A4D8               	btfss	status,2,c
 39433                           
 39434                           ; BSR set to: 0
 39435                           ;flash.c: 283: {;flash.c: 284: _flash_wakeup();
 39436  007F7E  EC9E  F03A         	call	__flash_wakeup	;wreg free
 39437                           
 39438                           ;flash.c: 285: };flash.c: 288: status = _flash_get_status();
 39439  007F82  EC3D  F03E         	call	__flash_get_status	;wreg free
 39440  007F86  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 39441  007F8A  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 39442                           
 39443                           ;flash.c: 291: if(status & 0b0000000010000000)
 39444  007F8E  AE12               	btfss	__flash_is_busy@status,7,c
 39445  007F90  D002               	goto	l1800
 39446                           
 39447                           ;flash.c: 292: {;flash.c: 294: return 0;
 39448  007F92  0E00               	movlw	0
 39449                           
 39450                           ;flash.c: 295: }
 39451  007F94  0012               	return	
 39452  007F96                     l1800:
 39453                           
 39454                           ;flash.c: 296: else;flash.c: 297: {;flash.c: 299: return 1;
 39455  007F96  0E01               	movlw	1
 39456  007F98  0012               	return	
 39457  007F9A                     __end_of__flash_is_busy:
 39458                           	opt stack 0
 39459                           tosu	equ	0xFFF
 39460                           tosh	equ	0xFFE
 39461                           tosl	equ	0xFFD
 39462                           pclath	equ	0xFFA
 39463                           tblptru	equ	0xFF8
 39464                           tblptrh	equ	0xFF7
 39465                           tblptrl	equ	0xFF6
 39466                           tablat	equ	0xFF5
 39467                           prodh	equ	0xFF4
 39468                           prodl	equ	0xFF3
 39469                           intcon	equ	0xFF2
 39470                           intcon2	equ	0xFF1
 39471                           intcon3	equ	0xFF0
 39472                           indf0	equ	0xFEF
 39473                           postinc0	equ	0xFEE
 39474                           fsr0h	equ	0xFEA
 39475                           fsr0l	equ	0xFE9
 39476                           wreg	equ	0xFE8
 39477                           indf1	equ	0xFE7
 39478                           postdec1	equ	0xFE5
 39479                           plusw1	equ	0xFE3
 39480                           fsr1h	equ	0xFE2
 39481                           fsr1l	equ	0xFE1
 39482                           indf2	equ	0xFDF
 39483                           postinc2	equ	0xFDE
 39484                           postdec2	equ	0xFDD
 39485                           plusw2	equ	0xFDB
 39486                           fsr2h	equ	0xFDA
 39487                           fsr2l	equ	0xFD9
 39488                           status	equ	0xFD8
 39489                           
 39490 ;; *************** function __flash_wakeup *****************
 39491 ;; Defined at:
 39492 ;;		line 124 in file "flash.c"
 39493 ;; Parameters:    Size  Location     Type
 39494 ;;		None
 39495 ;; Auto vars:     Size  Location     Type
 39496 ;;  command         1    8[COMRAM] unsigned char 
 39497 ;; Return value:  Size  Location     Type
 39498 ;;                  1    wreg      void 
 39499 ;; Registers used:
 39500 ;;		wreg, status,2, status,0, cstack
 39501 ;; Tracked objects:
 39502 ;;		On entry : 0/0
 39503 ;;		On exit  : 0/0
 39504 ;;		Unchanged: 0/0
 39505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39509 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39510 ;;Total ram usage:        1 bytes
 39511 ;; Hardware stack levels used:    1
 39512 ;; Hardware stack levels required when called:    1
 39513 ;; This function calls:
 39514 ;;		_spi_tx
 39515 ;; This function is called by:
 39516 ;;		__flash_is_busy
 39517 ;;		_flash_set_power_state
 39518 ;; This function uses a non-reentrant model
 39519 ;;
 39520                           
 39521                           	psect	text207
 39522  00753C                     __ptext207:
 39523                           	opt stack 0
 39524  00753C                     __flash_wakeup:
 39525                           	opt stack 25
 39526                           
 39527                           ;flash.c: 126: uint8_t command;;flash.c: 128: switch(power_state)
 39528                           
 39529                           ;incstack = 0
 39530  00753C  D021               	goto	l1749
 39531  00753E                     
 39532                           ;flash.c: 131: command = 0xAB;
 39533  00753E  0EAB               	movlw	171
 39534  007540  6E09               	movwf	__flash_wakeup@command,c
 39535                           
 39536                           ;flash.c: 132: spi_tx(&command, 1);
 39537  007542  0E09               	movlw	low __flash_wakeup@command
 39538  007544  6E01               	movwf	spi_tx@data,c
 39539  007546  0E00               	movlw	high __flash_wakeup@command
 39540  007548  6E02               	movwf	spi_tx@data+1,c
 39541  00754A  0E00               	movlw	0
 39542  00754C  6E04               	movwf	spi_tx@length+1,c
 39543  00754E  0E01               	movlw	1
 39544  007550  6E03               	movwf	spi_tx@length,c
 39545  007552  EC9B  F039         	call	_spi_tx	;wreg free
 39546                           
 39547                           ;flash.c: 133: _delay((unsigned long)((35)*(8000000/4000000.0)));
 39548  007556  0E17               	movlw	23
 39549  007558                     u12187:
 39550  007558  2EE8               	decfsz	wreg,f,c
 39551  00755A  D7FE               	bra	u12187
 39552  00755C  F000               	nop	
 39553                           
 39554                           ;flash.c: 134: power_state = FLASH_POWER_STATE_NORMAL;
 39555  00755E  0E00               	movlw	0
 39556  007560  0100               	movlb	0	; () banked
 39557  007562  6FDF               	movwf	_power_state& (0+255),b
 39558                           
 39559                           ;flash.c: 135: break;
 39560  007564  0012               	return	
 39561  007566                     l1752:
 39562                           
 39563                           ; BSR set to: 0
 39564                           ;flash.c: 140: LATDbits.LD7 = 0;
 39565  007566  9E8C               	bcf	3980,7,c	;volatile
 39566                           
 39567                           ; BSR set to: 0
 39568                           ;flash.c: 141: _delay((unsigned long)((20)*(8000000/4000000.0)));
 39569  007568  0E0D               	movlw	13
 39570  00756A                     u12197:
 39571  00756A  2EE8               	decfsz	wreg,f,c
 39572  00756C  D7FE               	bra	u12197
 39573  00756E  F000               	nop	
 39574                           
 39575                           ;flash.c: 142: LATDbits.LD7 = 1;
 39576  007570  8E8C               	bsf	3980,7,c	;volatile
 39577                           
 39578                           ;flash.c: 143: _delay((unsigned long)((120)*(8000000/4000000.0)));
 39579  007572  0E50               	movlw	80
 39580  007574                     u12207:
 39581  007574  2EE8               	decfsz	wreg,f,c
 39582  007576  D7FE               	bra	u12207
 39583                           
 39584                           ;flash.c: 144: power_state = FLASH_POWER_STATE_NORMAL;
 39585  007578  0E00               	movlw	0
 39586  00757A  0100               	movlb	0	; () banked
 39587  00757C  6FDF               	movwf	_power_state& (0+255),b
 39588                           
 39589                           ; BSR set to: 0
 39590                           ;flash.c: 146: }
 39591                           
 39592                           ;flash.c: 145: break;
 39593  00757E  0012               	return	
 39594  007580                     l1749:
 39595                           
 39596                           ; BSR set to: 0
 39597  007580  0100               	movlb	0	; () banked
 39598  007582  51DF               	movf	_power_state& (0+255),w,b
 39599                           
 39600                           ; Switch size 1, requested type "space"
 39601                           ; Number of cases is 2, Range of values is 1 to 2
 39602                           ; switch strategies available:
 39603                           ; Name         Instructions Cycles
 39604                           ; simple_byte            7     4 (average)
 39605                           ;	Chosen strategy is simple_byte
 39606  007584  0A01               	xorlw	1	; case 1
 39607  007586  B4D8               	btfsc	status,2,c
 39608  007588  D7DA               	goto	l1750
 39609  00758A  0A03               	xorlw	3	; case 2
 39610  00758C  A4D8               	btfss	status,2,c
 39611  00758E  0012               	return	
 39612  007590  D7EA               	goto	l1752
 39613  007592                     __end_of__flash_wakeup:
 39614                           	opt stack 0
 39615                           tosu	equ	0xFFF
 39616                           tosh	equ	0xFFE
 39617                           tosl	equ	0xFFD
 39618                           pclath	equ	0xFFA
 39619                           tblptru	equ	0xFF8
 39620                           tblptrh	equ	0xFF7
 39621                           tblptrl	equ	0xFF6
 39622                           tablat	equ	0xFF5
 39623                           prodh	equ	0xFF4
 39624                           prodl	equ	0xFF3
 39625                           intcon	equ	0xFF2
 39626                           intcon2	equ	0xFF1
 39627                           intcon3	equ	0xFF0
 39628                           indf0	equ	0xFEF
 39629                           postinc0	equ	0xFEE
 39630                           fsr0h	equ	0xFEA
 39631                           fsr0l	equ	0xFE9
 39632                           wreg	equ	0xFE8
 39633                           indf1	equ	0xFE7
 39634                           postdec1	equ	0xFE5
 39635                           plusw1	equ	0xFE3
 39636                           fsr1h	equ	0xFE2
 39637                           fsr1l	equ	0xFE1
 39638                           indf2	equ	0xFDF
 39639                           postinc2	equ	0xFDE
 39640                           postdec2	equ	0xFDD
 39641                           plusw2	equ	0xFDB
 39642                           fsr2h	equ	0xFDA
 39643                           fsr2l	equ	0xFD9
 39644                           status	equ	0xFD8
 39645                           
 39646 ;; *************** function _spi_tx *****************
 39647 ;; Defined at:
 39648 ;;		line 348 in file "spi.c"
 39649 ;; Parameters:    Size  Location     Type
 39650 ;;  data            2    0[COMRAM] PTR unsigned char 
 39651 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 39652 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 39653 ;;  length          2    2[COMRAM] unsigned int 
 39654 ;; Auto vars:     Size  Location     Type
 39655 ;;		None
 39656 ;; Return value:  Size  Location     Type
 39657 ;;                  1    wreg      void 
 39658 ;; Registers used:
 39659 ;;		wreg, status,2, status,0
 39660 ;; Tracked objects:
 39661 ;;		On entry : 0/0
 39662 ;;		On exit  : 0/0
 39663 ;;		Unchanged: 0/0
 39664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39667 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39668 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39669 ;;Total ram usage:        8 bytes
 39670 ;; Hardware stack levels used:    1
 39671 ;; This function calls:
 39672 ;;		Nothing
 39673 ;; This function is called by:
 39674 ;;		__flash_set_page_size
 39675 ;;		__flash_wakeup
 39676 ;;		__flash_copy_page_to_buffer
 39677 ;;		__flash_compare_page_to_buffer
 39678 ;;		__flash_write_page_from_buffer
 39679 ;;		__flash_erase_page
 39680 ;;		_flash_set_power_state
 39681 ;; This function uses a non-reentrant model
 39682 ;;
 39683                           
 39684                           	psect	text208
 39685  007336                     __ptext208:
 39686                           	opt stack 0
 39687  007336                     _spi_tx:
 39688                           	opt stack 27
 39689                           
 39690                           ;spi.c: 351: DMACON1bits.SSCON1 = 0;
 39691                           
 39692                           ; BSR set to: 0
 39693                           ;incstack = 0
 39694  007336  9E88               	bcf	3976,7,c	;volatile
 39695                           
 39696                           ;spi.c: 352: DMACON1bits.SSCON0 = 0;
 39697  007338  9C88               	bcf	3976,6,c	;volatile
 39698                           
 39699                           ;spi.c: 354: DMACON1bits.TXINC = 1;
 39700  00733A  8A88               	bsf	3976,5,c	;volatile
 39701                           
 39702                           ;spi.c: 356: DMACON1bits.RXINC = 0;
 39703  00733C  9888               	bcf	3976,4,c	;volatile
 39704                           
 39705                           ;spi.c: 358: DMACON1bits.DUPLEX1 = 0;
 39706  00733E  9688               	bcf	3976,3,c	;volatile
 39707                           
 39708                           ;spi.c: 359: DMACON1bits.DUPLEX0 = 1;
 39709  007340  8488               	bsf	3976,2,c	;volatile
 39710                           
 39711                           ;spi.c: 361: DMACON1bits.DLYINTEN = 0;
 39712  007342  9288               	bcf	3976,1,c	;volatile
 39713                           
 39714                           ;spi.c: 363: DMACON2bits.DLYCYC = 0b0000;
 39715  007344  9886               	bcf	3974,4,c	;volatile
 39716  007346  9A86               	bcf	3974,5,c	;volatile
 39717  007348  9C86               	bcf	3974,6,c	;volatile
 39718  00734A  9E86               	bcf	3974,7,c	;volatile
 39719                           
 39720                           ;spi.c: 365: DMACON2bits.INTLVL = 0b0000;
 39721  00734C  9086               	bcf	3974,0,c	;volatile
 39722  00734E  9286               	bcf	3974,1,c	;volatile
 39723  007350  9486               	bcf	3974,2,c	;volatile
 39724  007352  9686               	bcf	3974,3,c	;volatile
 39725                           
 39726                           ;spi.c: 368: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39727  007354  5002               	movf	spi_tx@data+1,w,c
 39728  007356  6E6A               	movwf	3946,c	;volatile
 39729                           
 39730                           ;spi.c: 369: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39731  007358  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 39732                           
 39733                           ;spi.c: 372: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 39734  00735C  0EFF               	movlw	255
 39735  00735E  6E05               	movwf	??_spi_tx& (0+255),c
 39736  007360  0EFF               	movlw	255
 39737  007362  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 39738  007364  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 39739  007368  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 39740  00736C  5005               	movf	??_spi_tx,w,c
 39741  00736E  2607               	addwf	??_spi_tx+2,f,c
 39742  007370  5006               	movf	??_spi_tx+1,w,c
 39743  007372  2208               	addwfc	??_spi_tx+3,f,c
 39744  007374  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 39745  007378  6A08               	clrf	??_spi_tx+3,c
 39746  00737A  5007               	movf	??_spi_tx+2,w,c
 39747  00737C  6E66               	movwf	3942,c	;volatile
 39748                           
 39749                           ;spi.c: 373: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 39750  00737E  0403               	decf	spi_tx@length,w,c
 39751  007380  6E67               	movwf	3943,c	;volatile
 39752                           
 39753                           ;spi.c: 376: LATDbits.LD7 = 0;
 39754  007382  9E8C               	bcf	3980,7,c	;volatile
 39755                           
 39756                           ;spi.c: 377: DMACON1bits.DMAEN = 1;
 39757  007384  8088               	bsf	3976,0,c	;volatile
 39758  007386  B088               	btfsc	3976,0,c	;volatile
 39759  007388  D7FE               	goto	l2828
 39760                           
 39761                           ;spi.c: 379: LATDbits.LD7 = 1;
 39762  00738A  8E8C               	bsf	3980,7,c	;volatile
 39763  00738C  0012               	return		;funcret
 39764  00738E                     __end_of_spi_tx:
 39765                           	opt stack 0
 39766                           tosu	equ	0xFFF
 39767                           tosh	equ	0xFFE
 39768                           tosl	equ	0xFFD
 39769                           pclath	equ	0xFFA
 39770                           tblptru	equ	0xFF8
 39771                           tblptrh	equ	0xFF7
 39772                           tblptrl	equ	0xFF6
 39773                           tablat	equ	0xFF5
 39774                           prodh	equ	0xFF4
 39775                           prodl	equ	0xFF3
 39776                           intcon	equ	0xFF2
 39777                           intcon2	equ	0xFF1
 39778                           intcon3	equ	0xFF0
 39779                           indf0	equ	0xFEF
 39780                           postinc0	equ	0xFEE
 39781                           fsr0h	equ	0xFEA
 39782                           fsr0l	equ	0xFE9
 39783                           wreg	equ	0xFE8
 39784                           indf1	equ	0xFE7
 39785                           postdec1	equ	0xFE5
 39786                           plusw1	equ	0xFE3
 39787                           fsr1h	equ	0xFE2
 39788                           fsr1l	equ	0xFE1
 39789                           indf2	equ	0xFDF
 39790                           postinc2	equ	0xFDE
 39791                           postdec2	equ	0xFDD
 39792                           plusw2	equ	0xFDB
 39793                           fsr2h	equ	0xFDA
 39794                           fsr2l	equ	0xFD9
 39795                           status	equ	0xFD8
 39796                           
 39797 ;; *************** function __flash_get_status *****************
 39798 ;; Defined at:
 39799 ;;		line 113 in file "flash.c"
 39800 ;; Parameters:    Size  Location     Type
 39801 ;;		None
 39802 ;; Auto vars:     Size  Location     Type
 39803 ;;  status          2   15[COMRAM] unsigned int 
 39804 ;;  command         1   14[COMRAM] unsigned char 
 39805 ;; Return value:  Size  Location     Type
 39806 ;;                  2   12[COMRAM] unsigned int 
 39807 ;; Registers used:
 39808 ;;		wreg, status,2, status,0, cstack
 39809 ;; Tracked objects:
 39810 ;;		On entry : 0/0
 39811 ;;		On exit  : 0/0
 39812 ;;		Unchanged: 0/0
 39813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39815 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39817 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39818 ;;Total ram usage:        5 bytes
 39819 ;; Hardware stack levels used:    1
 39820 ;; Hardware stack levels required when called:    1
 39821 ;; This function calls:
 39822 ;;		_spi_tx_rx
 39823 ;; This function is called by:
 39824 ;;		__flash_compare_page_to_buffer
 39825 ;;		__flash_is_busy
 39826 ;; This function uses a non-reentrant model
 39827 ;;
 39828                           
 39829                           	psect	text209
 39830  007C7A                     __ptext209:
 39831                           	opt stack 0
 39832  007C7A                     __flash_get_status:
 39833                           	opt stack 25
 39834                           
 39835                           ;flash.c: 117: uint8_t command = 0xD7;
 39836                           
 39837                           ;incstack = 0
 39838  007C7A  0ED7               	movlw	215
 39839  007C7C  6E0F               	movwf	__flash_get_status@command,c
 39840                           
 39841                           ;flash.c: 118: uint16_t status;;flash.c: 119: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 39842  007C7E  0E0F               	movlw	low __flash_get_status@command
 39843  007C80  6E01               	movwf	spi_tx_rx@command,c
 39844  007C82  0E00               	movlw	high __flash_get_status@command
 39845  007C84  6E02               	movwf	spi_tx_rx@command+1,c
 39846  007C86  0E00               	movlw	0
 39847  007C88  6E04               	movwf	spi_tx_rx@command_length+1,c
 39848  007C8A  0E01               	movlw	1
 39849  007C8C  6E03               	movwf	spi_tx_rx@command_length,c
 39850  007C8E  0E10               	movlw	low __flash_get_status@status
 39851  007C90  6E05               	movwf	spi_tx_rx@data,c
 39852  007C92  0E00               	movlw	high __flash_get_status@status
 39853  007C94  6E06               	movwf	spi_tx_rx@data+1,c
 39854  007C96  0E00               	movlw	0
 39855  007C98  6E08               	movwf	spi_tx_rx@data_length+1,c
 39856  007C9A  0E02               	movlw	2
 39857  007C9C  6E07               	movwf	spi_tx_rx@data_length,c
 39858  007C9E  ECC3  F030         	call	_spi_tx_rx	;wreg free
 39859                           
 39860                           ;flash.c: 120: return status;
 39861  007CA2  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 39862  007CA6  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 39863  007CAA  0012               	return	
 39864  007CAC                     __end_of__flash_get_status:
 39865                           	opt stack 0
 39866                           tosu	equ	0xFFF
 39867                           tosh	equ	0xFFE
 39868                           tosl	equ	0xFFD
 39869                           pclath	equ	0xFFA
 39870                           tblptru	equ	0xFF8
 39871                           tblptrh	equ	0xFF7
 39872                           tblptrl	equ	0xFF6
 39873                           tablat	equ	0xFF5
 39874                           prodh	equ	0xFF4
 39875                           prodl	equ	0xFF3
 39876                           intcon	equ	0xFF2
 39877                           intcon2	equ	0xFF1
 39878                           intcon3	equ	0xFF0
 39879                           indf0	equ	0xFEF
 39880                           postinc0	equ	0xFEE
 39881                           fsr0h	equ	0xFEA
 39882                           fsr0l	equ	0xFE9
 39883                           wreg	equ	0xFE8
 39884                           indf1	equ	0xFE7
 39885                           postdec1	equ	0xFE5
 39886                           plusw1	equ	0xFE3
 39887                           fsr1h	equ	0xFE2
 39888                           fsr1l	equ	0xFE1
 39889                           indf2	equ	0xFDF
 39890                           postinc2	equ	0xFDE
 39891                           postdec2	equ	0xFDD
 39892                           plusw2	equ	0xFDB
 39893                           fsr2h	equ	0xFDA
 39894                           fsr2l	equ	0xFD9
 39895                           status	equ	0xFD8
 39896                           
 39897 ;; *************** function _spi_tx_rx *****************
 39898 ;; Defined at:
 39899 ;;		line 439 in file "spi.c"
 39900 ;; Parameters:    Size  Location     Type
 39901 ;;  command         2    0[COMRAM] PTR unsigned char 
 39902 ;;		 -> _flash_partial_read@command(4), _flash_get_status@command(1), 
 39903 ;;  command_leng    2    2[COMRAM] unsigned int 
 39904 ;;  data            2    4[COMRAM] PTR unsigned char 
 39905 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 39906 ;;		 -> buffer(512), fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 39907 ;;		 -> fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_
      +cluster(2), 
 39908 ;;		 -> _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(
      +1), 
 39909 ;;		 -> _flash_get_status@status(2), msd_buffer(512), RAM(3759), 
 39910 ;;  data_length     2    6[COMRAM] unsigned int 
 39911 ;; Auto vars:     Size  Location     Type
 39912 ;;		None
 39913 ;; Return value:  Size  Location     Type
 39914 ;;                  1    wreg      void 
 39915 ;; Registers used:
 39916 ;;		wreg, status,2, status,0
 39917 ;; Tracked objects:
 39918 ;;		On entry : 0/0
 39919 ;;		On exit  : 0/0
 39920 ;;		Unchanged: 0/0
 39921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39922 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39924 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39925 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39926 ;;Total ram usage:       12 bytes
 39927 ;; Hardware stack levels used:    1
 39928 ;; This function calls:
 39929 ;;		Nothing
 39930 ;; This function is called by:
 39931 ;;		__flash_get_status
 39932 ;;		__flash_partial_read
 39933 ;; This function uses a non-reentrant model
 39934 ;;
 39935                           
 39936                           	psect	text210
 39937  006186                     __ptext210:
 39938                           	opt stack 0
 39939  006186                     _spi_tx_rx:
 39940                           	opt stack 25
 39941                           
 39942                           ;spi.c: 442: DMACON1bits.SSCON1 = 0;
 39943                           
 39944                           ;incstack = 0
 39945  006186  9E88               	bcf	3976,7,c	;volatile
 39946                           
 39947                           ;spi.c: 443: DMACON1bits.SSCON0 = 0;
 39948  006188  9C88               	bcf	3976,6,c	;volatile
 39949                           
 39950                           ;spi.c: 445: DMACON1bits.TXINC = 1;
 39951  00618A  8A88               	bsf	3976,5,c	;volatile
 39952                           
 39953                           ;spi.c: 447: DMACON1bits.RXINC = 0;
 39954  00618C  9888               	bcf	3976,4,c	;volatile
 39955                           
 39956                           ;spi.c: 449: DMACON1bits.DUPLEX1 = 0;
 39957  00618E  9688               	bcf	3976,3,c	;volatile
 39958                           
 39959                           ;spi.c: 450: DMACON1bits.DUPLEX0 = 1;
 39960  006190  8488               	bsf	3976,2,c	;volatile
 39961                           
 39962                           ;spi.c: 452: DMACON1bits.DLYINTEN = 0;
 39963  006192  9288               	bcf	3976,1,c	;volatile
 39964                           
 39965                           ;spi.c: 454: DMACON2bits.DLYCYC = 0b0000;
 39966  006194  9886               	bcf	3974,4,c	;volatile
 39967  006196  9A86               	bcf	3974,5,c	;volatile
 39968  006198  9C86               	bcf	3974,6,c	;volatile
 39969  00619A  9E86               	bcf	3974,7,c	;volatile
 39970                           
 39971                           ;spi.c: 456: DMACON2bits.INTLVL = 0b0000;
 39972  00619C  9086               	bcf	3974,0,c	;volatile
 39973  00619E  9286               	bcf	3974,1,c	;volatile
 39974  0061A0  9486               	bcf	3974,2,c	;volatile
 39975  0061A2  9686               	bcf	3974,3,c	;volatile
 39976                           
 39977                           ;spi.c: 459: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 39978  0061A4  5002               	movf	spi_tx_rx@command+1,w,c
 39979  0061A6  6E6A               	movwf	3946,c	;volatile
 39980                           
 39981                           ;spi.c: 460: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 39982  0061A8  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 39983                           
 39984                           ;spi.c: 463: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 39985  0061AC  0EFF               	movlw	255
 39986  0061AE  6E09               	movwf	??_spi_tx_rx& (0+255),c
 39987  0061B0  0EFF               	movlw	255
 39988  0061B2  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 39989  0061B4  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 39990  0061B8  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 39991  0061BC  5009               	movf	??_spi_tx_rx,w,c
 39992  0061BE  260B               	addwf	??_spi_tx_rx+2,f,c
 39993  0061C0  500A               	movf	??_spi_tx_rx+1,w,c
 39994  0061C2  220C               	addwfc	??_spi_tx_rx+3,f,c
 39995  0061C4  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39996  0061C8  6A0C               	clrf	??_spi_tx_rx+3,c
 39997  0061CA  500B               	movf	??_spi_tx_rx+2,w,c
 39998  0061CC  6E66               	movwf	3942,c	;volatile
 39999                           
 40000                           ;spi.c: 464: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 40001  0061CE  0403               	decf	spi_tx_rx@command_length,w,c
 40002  0061D0  6E67               	movwf	3943,c	;volatile
 40003                           
 40004                           ;spi.c: 467: LATDbits.LD7 = 0;
 40005  0061D2  9E8C               	bcf	3980,7,c	;volatile
 40006                           
 40007                           ;spi.c: 470: DMACON1bits.DMAEN = 1;
 40008  0061D4  8088               	bsf	3976,0,c	;volatile
 40009  0061D6  B088               	btfsc	3976,0,c	;volatile
 40010  0061D8  D7FE               	goto	l2843
 40011                           
 40012                           ;spi.c: 474: DMACON1bits.TXINC = 0;
 40013  0061DA  9A88               	bcf	3976,5,c	;volatile
 40014                           
 40015                           ;spi.c: 476: DMACON1bits.RXINC = 1;
 40016  0061DC  8888               	bsf	3976,4,c	;volatile
 40017                           
 40018                           ;spi.c: 478: DMACON1bits.DUPLEX1 = 0;
 40019  0061DE  9688               	bcf	3976,3,c	;volatile
 40020                           
 40021                           ;spi.c: 479: DMACON1bits.DUPLEX0 = 0;
 40022  0061E0  9488               	bcf	3976,2,c	;volatile
 40023                           
 40024                           ;spi.c: 482: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 40025  0061E2  5006               	movf	spi_tx_rx@data+1,w,c
 40026  0061E4  6E68               	movwf	3944,c	;volatile
 40027                           
 40028                           ;spi.c: 483: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 40029  0061E6  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 40030                           
 40031                           ;spi.c: 486: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 40032  0061EA  0EFF               	movlw	255
 40033  0061EC  6E09               	movwf	??_spi_tx_rx& (0+255),c
 40034  0061EE  0EFF               	movlw	255
 40035  0061F0  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 40036  0061F2  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 40037  0061F6  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 40038  0061FA  5009               	movf	??_spi_tx_rx,w,c
 40039  0061FC  260B               	addwf	??_spi_tx_rx+2,f,c
 40040  0061FE  500A               	movf	??_spi_tx_rx+1,w,c
 40041  006200  220C               	addwfc	??_spi_tx_rx+3,f,c
 40042  006202  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 40043  006206  6A0C               	clrf	??_spi_tx_rx+3,c
 40044  006208  500B               	movf	??_spi_tx_rx+2,w,c
 40045  00620A  6E66               	movwf	3942,c	;volatile
 40046                           
 40047                           ;spi.c: 487: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 40048  00620C  0407               	decf	spi_tx_rx@data_length,w,c
 40049  00620E  6E67               	movwf	3943,c	;volatile
 40050                           
 40051                           ;spi.c: 490: DMACON1bits.DMAEN = 1;
 40052  006210  8088               	bsf	3976,0,c	;volatile
 40053  006212  B088               	btfsc	3976,0,c	;volatile
 40054  006214  D7FE               	goto	l2846
 40055                           
 40056                           ;spi.c: 494: LATDbits.LD7 = 1;
 40057  006216  8E8C               	bsf	3980,7,c	;volatile
 40058  006218  0012               	return		;funcret
 40059  00621A                     __end_of_spi_tx_rx:
 40060                           	opt stack 0
 40061                           tosu	equ	0xFFF
 40062                           tosh	equ	0xFFE
 40063                           tosl	equ	0xFFD
 40064                           pclath	equ	0xFFA
 40065                           tblptru	equ	0xFF8
 40066                           tblptrh	equ	0xFF7
 40067                           tblptrl	equ	0xFF6
 40068                           tablat	equ	0xFF5
 40069                           prodh	equ	0xFF4
 40070                           prodl	equ	0xFF3
 40071                           intcon	equ	0xFF2
 40072                           intcon2	equ	0xFF1
 40073                           intcon3	equ	0xFF0
 40074                           indf0	equ	0xFEF
 40075                           postinc0	equ	0xFEE
 40076                           fsr0h	equ	0xFEA
 40077                           fsr0l	equ	0xFE9
 40078                           wreg	equ	0xFE8
 40079                           indf1	equ	0xFE7
 40080                           postdec1	equ	0xFE5
 40081                           plusw1	equ	0xFE3
 40082                           fsr1h	equ	0xFE2
 40083                           fsr1l	equ	0xFE1
 40084                           indf2	equ	0xFDF
 40085                           postinc2	equ	0xFDE
 40086                           postdec2	equ	0xFDD
 40087                           plusw2	equ	0xFDB
 40088                           fsr2h	equ	0xFDA
 40089                           fsr2l	equ	0xFD9
 40090                           status	equ	0xFD8
 40091                           
 40092 ;; *************** function _USBTransferOnePacket *****************
 40093 ;; Defined at:
 40094 ;;		line 995 in file "usb_device.c"
 40095 ;; Parameters:    Size  Location     Type
 40096 ;;  ep              1    wreg     unsigned char 
 40097 ;;  dir             1    0[COMRAM] unsigned char 
 40098 ;;  data            2    1[COMRAM] PTR unsigned char 
 40099 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 40100 ;;		 -> msd_cbw(31), NULL(0), 
 40101 ;;  len             1    3[COMRAM] unsigned char 
 40102 ;; Auto vars:     Size  Location     Type
 40103 ;;  ep              1    8[COMRAM] unsigned char 
 40104 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 40105 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 40106 ;; Return value:  Size  Location     Type
 40107 ;;                  2    0[COMRAM] PTR void 
 40108 ;; Registers used:
 40109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40110 ;; Tracked objects:
 40111 ;;		On entry : 0/0
 40112 ;;		On exit  : 0/0
 40113 ;;		Unchanged: 0/0
 40114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40115 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40116 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40117 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40118 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40119 ;;Total ram usage:       11 bytes
 40120 ;; Hardware stack levels used:    1
 40121 ;; This function calls:
 40122 ;;		Nothing
 40123 ;; This function is called by:
 40124 ;;		_USBMSDInit
 40125 ;;		_USBCheckMSDRequest
 40126 ;;		_MSDTasks
 40127 ;;		_MSDProcessCommandMediaPresent
 40128 ;;		_MSDReadHandler
 40129 ;;		_MSDWriteHandler
 40130 ;;		_MSDTransferTerminated
 40131 ;;		_APP_DeviceCustomHIDInitialize
 40132 ;;		_APP_DeviceCustomHIDTasks
 40133 ;; This function uses a non-reentrant model
 40134 ;;
 40135                           
 40136                           	psect	text211
 40137  0047FC                     __ptext211:
 40138                           	opt stack 0
 40139  0047FC                     _USBTransferOnePacket:
 40140                           	opt stack 27
 40141                           
 40142                           ;incstack = 0
 40143                           ;USBTransferOnePacket@ep stored from wreg
 40144  0047FC  6E09               	movwf	USBTransferOnePacket@ep,c
 40145                           
 40146                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 40147  0047FE  5001               	movf	USBTransferOnePacket@dir,w,c
 40148  004800  B4D8               	btfsc	status,2,c
 40149  004802  D007               	goto	l183
 40150                           
 40151                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 40152  004804  5009               	movf	USBTransferOnePacket@ep,w,c
 40153  004806  0D02               	mullw	2
 40154  004808  0EC5               	movlw	low _pBDTEntryIn
 40155  00480A  24F3               	addwf	prodl,w,c
 40156  00480C  6ED9               	movwf	fsr2l,c
 40157  00480E  0E00               	movlw	high _pBDTEntryIn
 40158  004810  D006               	goto	L40
 40159  004812                     l183:
 40160                           
 40161                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 40162  004812  5009               	movf	USBTransferOnePacket@ep,w,c
 40163  004814  0D02               	mullw	2
 40164  004816  0E40               	movlw	low _pBDTEntryOut
 40165  004818  24F3               	addwf	prodl,w,c
 40166  00481A  6ED9               	movwf	fsr2l,c
 40167  00481C  0E01               	movlw	high _pBDTEntryOut
 40168  00481E                     L40:
 40169  00481E  20F4               	addwfc	prodh,w,c
 40170  004820  6EDA               	movwf	fsr2h,c
 40171  004822  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 40172  004826  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 40173                           
 40174                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 40175  00482A  500A               	movf	USBTransferOnePacket@handle,w,c
 40176  00482C  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 40177  00482E  A4D8               	btfss	status,2,c
 40178  004830  D005               	goto	l185
 40179                           
 40180                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 40181  004832  0E00               	movlw	0
 40182  004834  6E01               	movwf	?_USBTransferOnePacket,c
 40183  004836  0E00               	movlw	0
 40184  004838  6E02               	movwf	?_USBTransferOnePacket+1,c
 40185  00483A  0012               	return	
 40186  00483C                     l185:
 40187                           
 40188                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 40189  00483C  EE20 F002          	lfsr	2,2
 40190  004840  500A               	movf	USBTransferOnePacket@handle,w,c
 40191  004842  26D9               	addwf	fsr2l,f,c
 40192  004844  500B               	movf	USBTransferOnePacket@handle+1,w,c
 40193  004846  22DA               	addwfc	fsr2h,f,c
 40194  004848  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 40195  00484C  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 40196                           
 40197                           ;usb_device.c: 1030: handle->CNT = len;
 40198  004850  EE20 F001          	lfsr	2,1
 40199  004854  500A               	movf	USBTransferOnePacket@handle,w,c
 40200  004856  26D9               	addwf	fsr2l,f,c
 40201  004858  500B               	movf	USBTransferOnePacket@handle+1,w,c
 40202  00485A  22DA               	addwfc	fsr2h,f,c
 40203  00485C  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 40204                           
 40205                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 40206  004860  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 40207  004864  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 40208  004868  0E40               	movlw	64
 40209  00486A  16DF               	andwf	indf2,f,c
 40210                           
 40211                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 40212  00486C  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 40213  004870  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 40214  004874  0E00               	movlw	0
 40215  004876  86DB               	bsf	plusw2,3,c
 40216                           
 40217                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 40218  004878  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 40219  00487C  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 40220  004880  0E00               	movlw	0
 40221  004882  8EDB               	bsf	plusw2,7,c
 40222                           
 40223                           ;usb_device.c: 1036: if(dir != 0)
 40224  004884  5001               	movf	USBTransferOnePacket@dir,w,c
 40225  004886  B4D8               	btfsc	status,2,c
 40226  004888  D018               	goto	l187
 40227                           
 40228                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 40229  00488A  5009               	movf	USBTransferOnePacket@ep,w,c
 40230  00488C  0D02               	mullw	2
 40231  00488E  0EC5               	movlw	low _pBDTEntryIn
 40232  004890  24F3               	addwf	prodl,w,c
 40233  004892  6ED9               	movwf	fsr2l,c
 40234  004894  0E00               	movlw	high _pBDTEntryIn
 40235  004896  20F4               	addwfc	prodh,w,c
 40236  004898  6EDA               	movwf	fsr2h,c
 40237  00489A  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 40238  00489E  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 40239  0048A2  0E04               	movlw	4
 40240  0048A4  1805               	xorwf	??_USBTransferOnePacket,w,c
 40241  0048A6  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 40242  0048A8  5006               	movf	??_USBTransferOnePacket+1,w,c
 40243  0048AA  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 40244  0048AC  5009               	movf	USBTransferOnePacket@ep,w,c
 40245  0048AE  0D02               	mullw	2
 40246  0048B0  0EC5               	movlw	low _pBDTEntryIn
 40247  0048B2  24F3               	addwf	prodl,w,c
 40248  0048B4  6ED9               	movwf	fsr2l,c
 40249  0048B6  0E00               	movlw	high _pBDTEntryIn
 40250  0048B8  D017               	goto	L41
 40251  0048BA                     l187:
 40252                           
 40253                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 40254  0048BA  5009               	movf	USBTransferOnePacket@ep,w,c
 40255  0048BC  0D02               	mullw	2
 40256  0048BE  0E40               	movlw	low _pBDTEntryOut
 40257  0048C0  24F3               	addwf	prodl,w,c
 40258  0048C2  6ED9               	movwf	fsr2l,c
 40259  0048C4  0E01               	movlw	high _pBDTEntryOut
 40260  0048C6  20F4               	addwfc	prodh,w,c
 40261  0048C8  6EDA               	movwf	fsr2h,c
 40262  0048CA  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 40263  0048CE  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 40264  0048D2  0E04               	movlw	4
 40265  0048D4  1805               	xorwf	??_USBTransferOnePacket,w,c
 40266  0048D6  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 40267  0048D8  5006               	movf	??_USBTransferOnePacket+1,w,c
 40268  0048DA  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 40269  0048DC  5009               	movf	USBTransferOnePacket@ep,w,c
 40270  0048DE  0D02               	mullw	2
 40271  0048E0  0E40               	movlw	low _pBDTEntryOut
 40272  0048E2  24F3               	addwf	prodl,w,c
 40273  0048E4  6ED9               	movwf	fsr2l,c
 40274  0048E6  0E01               	movlw	high _pBDTEntryOut
 40275  0048E8                     L41:
 40276  0048E8  20F4               	addwfc	prodh,w,c
 40277  0048EA  6EDA               	movwf	fsr2h,c
 40278  0048EC  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 40279  0048F0  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 40280                           
 40281                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 40282  0048F4  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 40283  0048F8  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 40284  0048FC  0012               	return	
 40285  0048FE                     __end_of_USBTransferOnePacket:
 40286                           	opt stack 0
 40287                           tosu	equ	0xFFF
 40288                           tosh	equ	0xFFE
 40289                           tosl	equ	0xFFD
 40290                           pclath	equ	0xFFA
 40291                           tblptru	equ	0xFF8
 40292                           tblptrh	equ	0xFF7
 40293                           tblptrl	equ	0xFF6
 40294                           tablat	equ	0xFF5
 40295                           prodh	equ	0xFF4
 40296                           prodl	equ	0xFF3
 40297                           intcon	equ	0xFF2
 40298                           intcon2	equ	0xFF1
 40299                           intcon3	equ	0xFF0
 40300                           indf0	equ	0xFEF
 40301                           postinc0	equ	0xFEE
 40302                           fsr0h	equ	0xFEA
 40303                           fsr0l	equ	0xFE9
 40304                           wreg	equ	0xFE8
 40305                           indf1	equ	0xFE7
 40306                           postdec1	equ	0xFE5
 40307                           plusw1	equ	0xFE3
 40308                           fsr1h	equ	0xFE2
 40309                           fsr1l	equ	0xFE1
 40310                           indf2	equ	0xFDF
 40311                           postinc2	equ	0xFDE
 40312                           postdec2	equ	0xFDD
 40313                           plusw2	equ	0xFDB
 40314                           fsr2h	equ	0xFDA
 40315                           fsr2l	equ	0xFD9
 40316                           status	equ	0xFD8
 40317                           tosu	equ	0xFFF
 40318                           tosh	equ	0xFFE
 40319                           tosl	equ	0xFFD
 40320                           pclath	equ	0xFFA
 40321                           tblptru	equ	0xFF8
 40322                           tblptrh	equ	0xFF7
 40323                           tblptrl	equ	0xFF6
 40324                           tablat	equ	0xFF5
 40325                           prodh	equ	0xFF4
 40326                           prodl	equ	0xFF3
 40327                           intcon	equ	0xFF2
 40328                           intcon2	equ	0xFF1
 40329                           intcon3	equ	0xFF0
 40330                           indf0	equ	0xFEF
 40331                           postinc0	equ	0xFEE
 40332                           fsr0h	equ	0xFEA
 40333                           fsr0l	equ	0xFE9
 40334                           wreg	equ	0xFE8
 40335                           indf1	equ	0xFE7
 40336                           postdec1	equ	0xFE5
 40337                           plusw1	equ	0xFE3
 40338                           fsr1h	equ	0xFE2
 40339                           fsr1l	equ	0xFE1
 40340                           indf2	equ	0xFDF
 40341                           postinc2	equ	0xFDE
 40342                           postdec2	equ	0xFDD
 40343                           plusw2	equ	0xFDB
 40344                           fsr2h	equ	0xFDA
 40345                           fsr2l	equ	0xFD9
 40346                           status	equ	0xFD8
 40347                           
 40348                           	psect	text212
 40349  000000                     __ptext212:
 40350                           	opt stack 0
 40351                           tosu	equ	0xFFF
 40352                           tosh	equ	0xFFE
 40353                           tosl	equ	0xFFD
 40354                           pclath	equ	0xFFA
 40355                           tblptru	equ	0xFF8
 40356                           tblptrh	equ	0xFF7
 40357                           tblptrl	equ	0xFF6
 40358                           tablat	equ	0xFF5
 40359                           prodh	equ	0xFF4
 40360                           prodl	equ	0xFF3
 40361                           intcon	equ	0xFF2
 40362                           intcon2	equ	0xFF1
 40363                           intcon3	equ	0xFF0
 40364                           indf0	equ	0xFEF
 40365                           postinc0	equ	0xFEE
 40366                           fsr0h	equ	0xFEA
 40367                           fsr0l	equ	0xFE9
 40368                           wreg	equ	0xFE8
 40369                           indf1	equ	0xFE7
 40370                           postdec1	equ	0xFE5
 40371                           plusw1	equ	0xFE3
 40372                           fsr1h	equ	0xFE2
 40373                           fsr1l	equ	0xFE1
 40374                           indf2	equ	0xFDF
 40375                           postinc2	equ	0xFDE
 40376                           postdec2	equ	0xFDD
 40377                           plusw2	equ	0xFDB
 40378                           fsr2h	equ	0xFDA
 40379                           fsr2l	equ	0xFD9
 40380                           status	equ	0xFD8
 40381                           
 40382                           	psect	rparam
 40383  0000                     tosu	equ	0xFFF
 40384                           tosh	equ	0xFFE
 40385                           tosl	equ	0xFFD
 40386                           pclath	equ	0xFFA
 40387                           tblptru	equ	0xFF8
 40388                           tblptrh	equ	0xFF7
 40389                           tblptrl	equ	0xFF6
 40390                           tablat	equ	0xFF5
 40391                           prodh	equ	0xFF4
 40392                           prodl	equ	0xFF3
 40393                           intcon	equ	0xFF2
 40394                           intcon2	equ	0xFF1
 40395                           intcon3	equ	0xFF0
 40396                           indf0	equ	0xFEF
 40397                           postinc0	equ	0xFEE
 40398                           fsr0h	equ	0xFEA
 40399                           fsr0l	equ	0xFE9
 40400                           wreg	equ	0xFE8
 40401                           indf1	equ	0xFE7
 40402                           postdec1	equ	0xFE5
 40403                           plusw1	equ	0xFE3
 40404                           fsr1h	equ	0xFE2
 40405                           fsr1l	equ	0xFE1
 40406                           indf2	equ	0xFDF
 40407                           postinc2	equ	0xFDE
 40408                           postdec2	equ	0xFDD
 40409                           plusw2	equ	0xFDB
 40410                           fsr2h	equ	0xFDA
 40411                           fsr2l	equ	0xFD9
 40412                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    823
    Data        38
    BSS         2159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     89     160
    BANK1           256      0     253
    BANK2           256      0     208
    BANK3           256      0     128
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_truncate@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(COMRAM[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK1[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), 
		 -> _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK1[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), RAM(DATA[3759]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK1[50]), RAM(DATA[3759]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK0[2]), fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 3759
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), 
		 -> _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), RAM(DATA[3759]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK1[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), 
		 -> fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), RAM(DATA[3759]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK1[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), 
		 -> _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_api_prepare
    _main->_bootloader_run
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_page_read
    _fat_format->_flash_page_write
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_find_file
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->__flash_partial_read
    _APP_DeviceCustomHIDTasks->_api_prepare
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__read_fat
    _fat_get_file_size->_flash_partial_read
    __fill_buffer_get_status->_flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _api_parse->__parse_command_long
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u32
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_create
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__get_first_cluster
    __get_first_cluster->_flash_partial_read
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_get_file_information
    _fat_get_file_information->__root_is_available
    __root_is_available->_flash_partial_read
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    _flash_is_busy->__flash_is_busy
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    __parse_file_rename->_fat_rename_file
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 1508279
                                             79 BANK0     10    10      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   93854
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   86544
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
                          _i2c_reset
 ---------------------------------------------------------------------------------
 (2) _i2c_reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      44
                           _i2c_init
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   28085
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6304
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6060
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   21781
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    5367
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   16414
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  110387
                                             93 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   47980
                                              0 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   44971
                                              0 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3259
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   17370
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5816
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0   99240
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0   99240
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   94076
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   47789
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   46031
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   22671
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15083
                                             36 COMRAM    11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) _flash_page_write                                     5     1      4   14738
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   12464
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    5068
                                             43 COMRAM    10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (4) _flash_page_read                                      4     0      4    4787
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  472911
                                             75 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   82402
                                             93 COMRAM     1     1      0
                                             71 BANK0      4     0      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
             __fill_buffer_read_file
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   45185
                                             51 BANK0     20    16      4
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  51    41     10   36386
                                              0 BANK0     51    41     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             38    24     14   19282
                                             55 COMRAM    38    24     14
                          __read_fat
               __sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   14    10      4    7995
                                             47 COMRAM    14    10      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    2866
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        5     1      4   16961
                                             62 COMRAM     5     1      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    9819
                                             67 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                            6     3      3  387196
                                             85 COMRAM     3     3      0
                                             51 BANK0      3     0      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0   86566
                                             43 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   83335
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   80147
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0   15330
                                             36 COMRAM     1     1      0
                  __display_itoa_u32
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0   15351
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   21962
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    6     0      6   14943
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3163
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  3     1      2  299984
                                             82 COMRAM     3     1      2
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
               __parse_file_truncate
 ---------------------------------------------------------------------------------
 (3) __parse_file_truncate                                 2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   3     1      2   39294
                                             66 COMRAM     3     1      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     38    34      4   39073
                                             62 COMRAM     4     0      4
                                              0 BANK0     34    34      0
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                   2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   3     1      2   68995
                                             62 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      5     5      0   68818
                                             57 COMRAM     5     5      0
                       __delete_root
                 __get_first_cluster
                          __read_fat
                 __root_is_available
                         __write_fat
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                  10     8      2    7994
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         7     7      0   21685
                                             40 COMRAM     7     7      0
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                   3     1      2   82238
                                             79 COMRAM     3     1      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     53    45      8   82039
                                             67 COMRAM    12     4      8
                                              0 BANK0     41    41      0
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (5) _fat_get_empty_clusters                              12    10      2    8218
                                             47 COMRAM    12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       20    16      4    9375
                                             47 COMRAM    20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    8126
                                             54 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                   3     1      2  109007
                                             74 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  63    59      4  108764
                                             62 COMRAM    12     8      4
                                              0 BANK0     51    51      0
                 __get_empty_cluster
                          __read_fat
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2   16584
                                             54 COMRAM     8     6      2
                 __root_is_available
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   7     7      0    8036
                                             47 COMRAM     7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __write_root                                          8     6      2   21951
                                             40 COMRAM     8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __write_fat                                           8     4      4   22575
                                             40 COMRAM     8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   21571
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) _flash_is_busy                                        1     1      0    2380
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (7) __flash_copy_page_to_buffer                          10     7      3    4031
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __update_modified_time                                2     0      2     177
                                              4 COMRAM     2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (5) __get_time                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __sector_from_cluster                                 2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8349
                                             47 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __get_empty_cluster                                  10     8      2    8350
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7857
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4187
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8     888
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_file_append
           _fat_append_to_file
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_cluster
             __update_modified_time
               __get_date
               __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_find_file
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _fat_get_empty_clusters
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __get_first_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
         __parse_file_modify
         __parse_file_rename
           _fat_rename_file
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_truncate
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
                 _i2c_set_frequency
               _i2c_set_frequency
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
               _i2c_set_frequency
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_file
         _fat_get_file_size
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_read_from_file_fast
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_file_append
         _fat_append_to_file
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           __update_modified_time
             __get_date
             __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_set_configuration
             _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_find_file
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _fat_get_empty_clusters
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __get_first_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
       __parse_file_modify
       __parse_file_rename
         _fat_rename_file
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_truncate
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_file
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file_fast
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
     _flash_is_busy
       __flash_is_busy
         __flash_get_status
           _spi_tx_rx
         __flash_wakeup
           _spi_tx
       _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_page_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_page_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _ui_init
   _system_minimal_init
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
   _system_minimal_init_undo
     _i2c_reset
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D0       9       81.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     59      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     34C      31        0.0%
DATA                 0      0     94C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Sep 04 00:02:51 2018

                          __end_of_fat_read_from_file 6186  
                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E7B  
                            fat_create_file@extension 0046  
              __end_of_i2c_display_send_init_sequence 7D36  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 7D0A  
                                 __system_timer0_init 7F9A  
                                                  _os 00B9  
                                       _USBDeviceInit 3BDA  
                                  _USBCheckHIDRequest 4AE0  
                __bootloader_verify_file@return_value 0089  
                                    ??__flash_is_busy 0012  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0031  
                           ??_internalFlash_erasePage 0005  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 5476  
                                                 l210 5E5A  
                                                 l220 4926  
                                                 l141 3C48  
                                                 l214 60C0  
                                                 l310 59F6  
                                                 l150 3654  
                                                 l143 3C84  
                                                 l303 7AA2  
                                                 l151 364C  
                                                 l320 7016  
                                                 l208 5E40  
                                                 l224 49A8  
                                                 l304 7AA0  
                                                 l152 364A  
                                                 l241 50EC  
                                                 l233 5040  
                                                 l161 36CC  
                                                 l242 50B4  
                                                 l330 5420  
                                                 l322 7060  
                                                 l235 504A  
                                                 l331 53E6  
                                                 l251 4176  
                                                 l411 4B2E  
                                                 l219 497E  
                                                 l139 3C20  
                                                 l171 375A  
                                                 l163 36E2  
                                                 l155 366E  
                                                 l252 415C  
                                                 l412 4AFC  
                                                 l260 4EB0  
                                                 l164 36EE  
                                                 l156 367E  
                                                 l237 50AC  
                                                 l333 5406  
                                                 l309 59FC  
                                                 l173 377E  
                                                 l165 3716  
                                                 l157 3686  
                                                 l238 5074  
                                                 l422 4B50  
                                                 l414 4B40  
                         __end_of_USBStdGetDscHandler 3E62  
                                                 l262 4F24  
                                                 l350 4A3E  
                                                 l166 3720  
                                                 l158 369A  
                                                 l183 4812  
                                                 l191 4442  
                                                 l423 4B68  
                                                 l415 4B1A  
                                                 l271 3D4E  
                                                 l343 4A9C  
                                                 l175 379A  
                                                 l159 36A6  
                                                 l328 539E  
                                                 l248 4100  
                                                 l424 4B74  
                                                 l360 186C  
                                                 l272 3DDC  
                                                 l352 4A44  
                                                 l344 4A0E  
                                                 l168 3732  
                                                 l185 483C  
                                                 l329 53A2  
                                                 l249 40DE  
                                                 l521 46E6  
                                                 l425 4B8C  
                                                 l361 1872  
                                                 l281 5A8C  
                                                 l353 4A62  
                                                 l610 6F18  
                                                 l178 79D8  
                                                 l418 4B98  
                                                 l530 55CA  
                                                 l274 3DE4  
                                                 l282 5A1A  
                                                 l354 4A7E  
                                                 l346 4A18  
                                                 l187 48BA  
                                                 l603 6F20  
                                                 l179 79E6  
                                                 l371 1992  
                                                 l363 18DE  
                                                 l275 3E3A  
                                                 l347 4A1E  
                                                 l620 04BE  
                                                 l604 6EE4  
                                                 l372 19AE  
                                                 l268 3E4A  
                                                 l348 4A24  
                                                 l621 04C8  
                                                 l381 1AA6  
                                                 l365 1926  
                                                 l277 3E42  
                                                 l269 3D3A  
                                                 l285 5AA2  
                                                 l349 4A38  
                                                 l710 4BD2  
                                                 l702 17D6  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 6F00  
                                                 l518 46EE  
                                                 l534 5630  
                                                 l374 1A14  
                                                 l286 5A2C  
                                                 l703 17EE  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 4662  
                                                 l375 1A20  
                                                 l367 1948  
                                                 l287 5A32  
                                                 l295 7842  
                                                 l712 4BE8  
                                                 l704 1808  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 6F0C  
                                                 l800 65A6  
                                                 l376 1A9A  
                                                 l288 5A50  
                                                 l296 7840  
                                                 l721 4C74  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 6F12  
                                                 l561 1E7E  
                                                 l529 5666  
                                                 l369 19C8  
                                                 l722 4C5E  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 1F6A  
                                                 l562 1E68  
                                                 l546 5638  
                                                 l810 6598  
                                                 l715 4C18  
                                                 l651 07CC  
                                                 l571 1E9A  
                                                 l563 1E3C  
                                                 l555 1D3A  
                                                 l379 1A54  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 1E44  
                                                 l804 6574  
                                                 l900 3A80  
                                                 l661 5F80  
                                                 l741 4722  
                                                 l733 4C86  
                                                 l645 0784  
                                                 l573 1EAC  
                                                 l805 657C  
                                                 l901 39FA  
                                                 l750 4756  
                                                 l718 4C24  
                                                 l670 2E10  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 1E5C  
                                                 l806 6584  
                                                 l902 3A02  
                                                 l751 4762  
                                                 l719 4C3E  
                                                 l671 2E1A  
                                                 l575 1ECE  
                                                 l559 1D5C  
                                                 l903 3A0A  
                                                 l752 4774  
                                                 l680 2F48  
                                                 l672 2E2E  
                                                 l648 07CE  
                                                 l592 4236  
                                                 l576 1ED6  
                                                 l808 658E  
                                                 l904 3A12  
                                                 l753 4780  
                                                 l737 4C96  
                                                 l665 2F5E  
                                                 l649 07A8  
                                                 l577 1EFA  
                                                 l905 3A1A  
                                                 l754 4792  
                                                 l674 2E78  
                                                 l666 2DB0  
                                                 l690 1638  
                                                 l586 1F4C  
                                                 l914 708C  
                                                 l906 3A22  
                                                 l659 5F6A  
                                                 l747 47D4  
                                                 l755 47C8  
                                                 l675 2EA0  
                                                 l691 1644  
                                                 l907 3A2C  
                                                 l748 474E  
                                                 l668 2F82  
                                                 l676 2ED0  
                                                 l684 181E  
                                                 l692 1664  
                                                 l596 42CE  
                                                 l764 7402  
                                                 _BDT 000D00  
                                                 l677 2EE2  
                                                 l669 2E04  
                                                 l693 16AE  
                                                 l685 1592  
                                                 l597 42C8  
                                                 l589 1F54  
                                                 l933 75B2  
                                                 l917 70B2  
                                                 l678 2EE8  
                                                 l694 1688  
                                                 l926 75D0  
                                                 l918 70C0  
                                                 l679 2EFC  
                                                 l687 1842  
                                                 l695 16F4  
                                                 l599 42D2  
                                                 l767 7438  
                                                 l935 75BE  
                                                 l927 7596  
                                                 l696 16EC  
                                                 l688 1632  
                                                 l929 75A0  
                       __size_of__sector_from_cluster 000E  
                                                 l698 1708  
                                                 l699 1770  
                                                 l972 5B2E  
                                                 l893 394E  
                                                 l966 5AC0  
                                                 l894 395C  
                                                 l896 39E4  
                                                 l898 3A3C  
                                                 l899 39F2  
                                                 _LBA 015A  
                                                 _LUN 01D8  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                             __get_first_cluster@slot 0039  
                                _i2c_digipot_reset_on 7F12  
                                   main@tx_start_addr 00B1  
                            __size_of__display_failed 02F6  
                                         _start_line1 8DF4  
                                         _start_line2 8E62  
                                         _start_line3 8EA7  
                                         _start_line4 8E22  
                                  api_prepare@command 005E  
                                          _USBSuspend 7CAC  
                                  _internalFlash_read 7AAE  
                              __end_of_display_update 6CD8  
                                USBStdSetCfgHandler@i 0018  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 362C  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 005F  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 42D8  
                               ??_USBCtrlTrfRxService 0001  
                                __read_fat@fat_sector 0032  
                                       _hex_file_size 00CB  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                                 api_prepare@inBuffer 00A7  
                            fat_create_file@root_slot 0064  
                         __flash_write_to_buffer@data 0016  
                                                l1008 80A0  
                                                l2010 22AC  
                                                l1210 647A  
                                                l2011 2302  
                                                l2003 21C6  
                                                l1203 77AC  
                                                l2012 2348  
                                                l1204 7790  
                                                l2100 1BBC  
                                                l1300 4DC2  
                                                l1117 803E  
                                                l2101 1BC0  
                                                l2006 2234  
                                                l2030 1FCC  
                                                l2110 1BE0  
                                                l1302 4DD2  
                                                l2007 220E  
                                                l2023 6148  
                                                l2111 1BE4  
                                                l2103 1BC4  
                                                l2016 5FEA  
                                                l1232 74D8  
                                                l2032 21A0  
                                                l2120 7394  
                                                l2112 1BE8  
                                                l2104 1BC8  
                                                l2040 529A  
                                                l1304 4DE2  
                                                l1320 44EC  
                                                l2201 6976  
                                                l2009 238A  
                                                l1233 74BC  
                                                l2033 2094  
                                                l1209 6496  
                                                l2121 7398  
                                                l2113 1BEC  
                                                l2105 1BCC  
                                                l2018 601E  
                                                l1154 81DC  
                                                l1090 7EC0  
                                                l2034 20BA  
                                                l2122 739C  
                                                l2106 1BD0  
                                                l2050 52BE  
                                                l2042 529E  
                                                l2130 334A  
                                                l1306 4DFA  
                                                l1330 4596  
                                                l1091 7EAE  
                                                l2035 2160  
                                                l1163 8170  
                                                l2123 73A0  
                                                l2107 1BD4  
                                                l2051 52C2  
                                                l2043 52A2  
                                                l1083 7B02  
                                                l1331 45B6  
                                                l1323 4500  
                                                l2204 7D46  
                                                l2124 73A4  
                                                l2108 1BD8  
                                                l2052 52C6  
                                                l2044 52A6  
                                                l2140 33D8  
                                                l2132 3358  
                                                l1084 7B0C  
                                                l1308 4E0A  
                                                l1324 4514  
                                                l2029 200E  
                                                l1181 8168  
                                                l2221 00B4  
                                                l2117 73AC  
                                                l2125 73A8  
                                                l2109 1BDC  
                                                l2053 52CA  
                                                l2045 52AA  
                                                l2141 33DC  
                                                l1325 452A  
                                                l1510 0CE0  
                                                l2206 7D50  
                                                l2222 0202  
                                                l2118 7390  
                                                l2070 1AFC  
                                                l2054 52CE  
                                                l2046 52AE  
                                                l2150 3400  
                                                l2142 33E0  
                                                l2134 3390  
                                                l1175 817C  
                                                l2231 0426  
                                                l2223 0188  
                                                l2311 718C  
                                                l2063 1BF0  
                                                l2071 1B0C  
                                                l2039 52E6  
                                                l2055 52D2  
                                                l2047 52B2  
                                                l2151 3404  
                                                l2143 33E4  
                                                l1319 45C6  
                                                l1327 4552  
                                                l1512 0D8C  
                                                l2208 7D5E  
                                                l2080 1B6C  
                                                l2072 1B1C  
                                                l2064 1ACE  
                                                l2056 52D6  
                                                l2048 52B6  
                                                l2136 3420  
                                                l2152 3408  
                                                l2144 33E8  
                                                l1328 457A  
                                                l1169 81D4  
                                                l1601 2D38  
                                                l2233 0458  
                                                l2225 033E  
                                                l2313 7198  
                                                l2161 7E08  
                                                l2081 1B70  
                                                l2073 1B2C  
                                                l2057 52DA  
                                                l2049 52BA  
                                                l2153 340C  
                                                l2145 33EC  
                                                l2137 33CC  
                                                l1514 0E38  
                                                l1602 2D00  
                                                l1610 3E96  
                                                l2322 5014  
                                                l2226 0310  
                                                l2090 1B94  
                                                l2082 1B74  
                                                l2074 1B3C  
                                                l2066 1AD2  
                                                l2058 52DE  
                                                l2154 3410  
                                                l2146 33F0  
                                                l2138 33D0  
                                                l1195 7DA0  
                                                l1611 3E68  
                                                l2323 4F50  
                                                l2235 048A  
                                                l2219 003E  
                                                l2307 71AA  
                                                l2091 1B98  
                                                l2083 1B78  
                                                l2075 1B4C  
                                                l2067 1AD6  
                                                l2059 52E2  
                                                l2155 3414  
                                                l2147 33F4  
                                                l2139 33D4  
                                                l2171 5CA0  
                                                l1196 7D92  
                                                l1516 0EE4  
                                                l1508 0C36  
                                                l1604 2D8C  
                                                l2324 4FA6  
                                                l2228 039C  
                                                l2340 0FBA  
                                                l2316 719E  
                                                l2308 7180  
                                                l2092 1B9C  
                                                l2084 1B7C  
                                                l2076 1B5C  
                                                l2068 1ADA  
                                                l2156 3418  
                                                l2148 33F8  
                                                l1292 4E30  
                                                l1197 7DB4  
                                                l1605 2D5E  
                                                l1701 751A  
                                                l1613 3EEA  
                                                l2229 03C0  
                                                l2341 0FDE  
                                                l2093 1BA0  
                                                l2085 1B80  
                                                l2077 1B60  
                                                l2069 1AEC  
                                                l2157 341C  
                                                l2149 33FC  
                                                l1293 4D88  
                                                l1198 7D96  
                                                l1622 34E4  
                                                l1702 74EC  
                                                l1614 3EBC  
                                                l1542 5204  
                                                l1550 51F2  
                                                l2334 5BE6  
                                                l2326 4FFC  
                                                l2350 1264  
                                                l2094 1BA4  
                                                l2086 1B84  
                                                l2078 1B64  
                                                l2158 34AC  
                                                l1199 7D9A  
                                                l1471 5534  
                                                l1631 360A  
                                                l1623 34B6  
                                                l1551 51F8  
                                                l1543 51CE  
                                                l2327 4FFE  
                                                l2343 1066  
                                                l2095 1BA8  
                                                l2087 1B88  
                                                l2079 1B68  
                                                l2167 5C50  
                                                l1800 7F96  
                                                l1632 35DC  
                                                l1464 7736  
                                                l1640 1322  
                                                l1616 3F3E  
                                                l1552 51FE  
                                                l2600 510A  
                                                l2328 5008  
                                                l2360 0992  
                                                l2352 1286  
                                                l2344 10CE  
                                                l2096 1BAC  
                                                l2088 1B8C  
                                                l1296 4D9A  
                                                l1625 3538  
                                                l1641 12F4  
                                                l1617 3F10  
                                                l1553 5262  
                                                l1545 51D4  
                                                l2361 09EC  
                                                l2345 1148  
                                                l2097 1BB0  
                                                l2089 1B90  
                                                l1474 555A  
                                                l1626 350A  
                                                l1466 7742  
                                                l1650 13C6  
                                                l1562 2826  
                                                l1554 524E  
                                                l1546 51DA  
                                                l2602 5182  
                                                l2370 0AE8  
                                                l2098 1BB4  
                                                l1298 4DAA  
                                                l3331 7604  
                                                l1643 14F4  
                                                l1651 1398  
                                                l1571 29C0  
                                                l1563 27F8  
                                                l1555 5254  
                                                l1547 51E0  
                                                l2603 5126  
                                                l2371 0BAC  
                                                l2347 11A8  
                                                l2099 1BB8  
                                                l3332 75FC  
                                                l1476 557E  
                                                l1628 35B6  
                                                l3260 6E34  
                                                l1580 3B10  
                                                l1572 2992  
                                                l1556 525A  
                                                l1548 51E6  
                                                l2604 51BA  
                                                l2620 585C  
                                                l2364 0BF6  
                                                l2372 0AF2  
                                                l2348 11DA  
                          USBConfigureEndpoint@handle 0007  
                                                l3341 78E0  
                                                l1629 357E  
                                                l3261 6E28  
                                                l1645 1376  
                                                l1637 12CE  
                                                l1581 3AE2  
                                                l1565 287A  
                                                l1557 528C  
                                                l1549 51EC  
                                                l2605 513E  
                                                l2373 0B6A  
                                                l2365 09FE  
                                                l2357 08A0  
                                                l2349 1208  
                                                l1741 67B2  
                                                l1750 753E  
                                                l3342 78D8  
                                                l1478 55A2  
                                                l1662 14B6  
                                                l1654 1416  
                                                l1646 1348  
                                                l1638 12A0  
                                                l1566 284C  
                                                l2606 515A  
                                                l2614 580C  
                                                l2374 0BA6  
                                                l1742 67DE  
                                                l2199 6966  
                                                l3335 7624  
                                                l1663 1488  
                                                l1655 13E8  
                                                l1671 2FBC  
                                                l1583 3B64  
                                                l2463 7E1A  
                                                l2359 092A  
                                                l1752 7566  
                                                l1760 72FC  
                                                l3336 762E  
                                                l3264 6E5C  
                                                l1648 1516  
                                                l1592 2C04  
                                                l1680 3118  
                                                l1672 2F8E  
                                                l1584 3B36  
                                                l1568 296C  
                                                l2616 5846  
                                                l2472 7AE2  
                                                l2456 6738  
                                                l2376 0BC2  
                                                l2368 0A3A  
                                                l3345 78F8  
                                                l3521 5CEC  
                                                l3265 6E6A  
                                                l1665 154A  
                                                l1593 2BD6  
                                                l1681 30EA  
                                                l1577 3ABC  
                                                l1569 293E  
                                                l1770 684A  
                                                l3346 7902  
                                                l3522 5D2A  
                                                l1690 37FC  
                                                l1666 151C  
                                                l1658 1466  
                                                l1674 3010  
                                                l1586 3BB8  
                                                l1578 3A8E  
                                                l2626 2B98  
                                                l2618 5884  
                                                l2458 6744  
                                                l2810 79A2  
                                                l1931 6A32  
                                                l1915 68F0  
                                                l1923 7EFA  
                                                l3515 78AC  
                                                l1659 1438  
                                                l1595 2C58  
                                                l1675 2FE2  
                                                l1587 3B8A  
                                                l2651 58CE  
                                                l2627 2BC6  
                                                l2619 5850  
                                                l2820 4346  
                                                l1772 6868  
                                                l2660 639A  
                                                l1692 387E  
                                                l1596 2C2A  
                                                l2652 58EA  
                                                l2628 2B9E  
                                                l2644 2590  
                                                l1749 7580  
                                                l1845 6B2A  
                                                l1917 6956  
                                                l1925 7F0A  
                                                l2661 6344  
                                                l1693 3850  
                                                l1677 3064  
                                                l2653 5906  
                                                l2581 3FFA  
                                                l1837 7488  
                                                l3533 7D7C  
                                                l2814 43D2  
                                                l2662 63C8  
                                                l1686 37D6  
                                                l1598 2CAC  
                                                l1678 3036  
                                                l2654 5922  
                                                l2590 401E  
                                                l2582 3FB8  
                                                l3534 7D6C  
                                                l2815 42DC  
                                                l1767 6808  
                                                l1759 72F2  
                                                l1847 6B8C  
                                                l1935 63DE  
                                                l3527 6ED0  
                                                l2663 6352  
                                                l3519 5CB2  
                                                l1695 38F6  
                                                l1687 37A8  
                                                l1599 2C7E  
                                                l2655 5928  
                                                l2639 5DB4  
                                                l2591 4030  
                                                l2807 79B4  
                                                l1768 6812  
                                                l3528 6E92  
                                                l2680 6C3E  
                                                l2664 6360  
                                                l1696 38C8  
                                                l2648 5934  
                                                l2656 592E  
                                                l2592 4042  
                                                l2584 3FCE  
                                                l1880 7B9A  
                                                l2808 7990  
                                                l2817 42E2  
                                                l3545 5720  
                                                l2665 636E  
                                                l1689 382A  
                                                l2649 58B2  
                                                l2593 4050  
                                                l2585 3FE4  
                                                l2809 79C2  
                                                l1794 729A  
                                                l2834 6536  
                                                l1786 76EE  
                                                l3546 567A  
                                                l1938 6440  
                                                l2674 7674  
                                                l2666 637C  
                                                l2594 405E  
                                                l2843 61D6  
                                                l1795 72A4  
                                                l1787 76F8  
                                                l3547 5718  
                                                l2667 638A  
                                                l2587 4086  
                                                l2828 7386  
                                                l2692 66B6  
                                                l2588 4010  
                                                l1876 7BCC  
                                                l2837 656A  
                                                l1973 57E4  
                                                l2597 5104  
                                                l2846 6212  
                                                l1982 31D4  
                                                l1990 6D4C  
                                                l2686 6D14  
                                                l1967 5790  
                                                l1983 330C  
                                                l1984 32AE  
                                                l2880 661A  
                                                l1985 32D0  
                                                l1993 6D66  
                                                l1986 3306  
                                                l1995 6DA4  
                                                l2883 665A  
                                                l2884 6668  
                                                l2879 6626  
                                                STR_1 8FF2  
                                                STR_2 8FF2  
                                                STR_3 8FF2  
                                                STR_4 8FF2  
                                                STR_5 8FF2  
                                                STR_6 8FF2  
                                                STR_7 8FF2  
                               __end_of_checked_line1 8DC4  
                                                STR_8 8FF2  
                               __end_of_checked_line2 8CAE  
                                                STR_9 8FDD  
                               __end_of_checked_line3 8E7B  
                               __end_of_checked_line4 8D43  
                                      _bootloader_run 717C  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 0187  
                                                u6140 7608  
                                                u7100 4C5A  
                                                u6310 71E0  
                                                u6320 71EC  
                                                u6330 71F8  
                                                u6170 78E4  
                                                u7130 4C70  
                                                u6340 7204  
                                                u7300 7B96  
                                                u6350 7210  
                                                u6318 71E2  
                                                u7150 4C82  
                                                u6360 721A  
                                                u6328 71EE  
                                                u7240 0CF4  
                                                u6338 71FA  
                                                u7250 0DA0  
                                                u7170 4C92  
                                                u9010 074C  
                                                u7340 6952  
                                                u9100 31A4  
                                                u6348 7206  
                                                u7260 0E4C  
                                                u9020 075E  
                                                u6445 681E  
                                                u7325 6916  
                                                u7350 569A  
                                                u9110 31D2  
                                                u6366 721C  
                                                u6358 7212  
                                                u6535 72B0  
                               ??_USBCtrlTrfTxService 0001  
                                                u6720 5520  
                                                u9105 319A  
                                                u7370 56D2  
                                                u6730 5546  
                                                u7290 7BC8  
                                                u9050 07D6  
                                                u7450 509C  
                                                u6634 46D8  
                                                u6618 46A6  
                                                u6555 6884  
                                                u7515 2DD6  
                                                u6635 46D2  
                                                u6619 46BA  
                                                u8260 7F0E  
                                                u7380 5708  
                                                u6740 556A  
                                                u6820 662A  
                                                u6660 470E  
                                                u7357 5690  
                                                u8430 57F0  
                                                u6750 558E  
                                                u7470 50DC  
                                                u7375 56CC  
                                                _UCFG 000F39  
                                                u8440 57F6  
                                                u9240 6012  
                                                u8600 3DD6  
                                                u8345 7256  
                                                u7377 56C2  
                                                u7625 15B8  
                                                u7457 5092  
                                                u8290 6A38  
                                                u7490 6EB2  
                                                u6850 6E38  
                                                u7387 56FE  
                                                u8355 7148  
                                                u9260 604E  
                                                u7708 16BA  
                                                u8620 3E2E  
                                                _UEP0 000F26  
                                                u8365 6DD6  
                                                u7709 16CE  
                                                u7477 50D2  
                                                _UEP1 000F27  
                                                u7750 17AA  
                                                u6598 4682  
                                                u8550 4EDC  
                                    ?_fat_create_file 0044  
                                                u6599 4694  
                                                u8607 3DCC  
                                                u7568 2E52  
                                                u7760 17AC  
                                                u7648 15EC  
                                                u7497 6EA8  
                                                u7569 2E66  
                                                u7649 1600  
                                                u9601 3362  
                                                u7850 776E  
                                                u6970 5612  
                                                u6795 7308  
                                                u8475 699C  
                                                u9275 1FA6  
                                                u8627 3E24  
                                                _UEIE 000F37  
                                                u9710 7670  
                                                u8590 3DA6  
                                                u9800 66B2  
                                                u8840 1A3A  
                                                u7778 17B2  
                                                u9555 6A64  
                                                u7779 17C4  
                                                u9740 6C3A  
                                                u8940 062C  
                                                u8908 052C  
                                                u8909 0540  
                                                u8597 3D9C  
                                                u9645 6AC2  
                                                u8918 055C  
                                                u9910 4204  
                                                u9495 7918  
                                                u8919 0570  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u9665 7CEA  
                                                u9770 6D10  
                                                u9924 421A  
                                                u9925 4214  
                                                u8958 064C  
                                                u9934 424C  
                                                u8959 0660  
                                                u9935 4246  
                                                u9974 429E  
                                                u9958 426E  
                                                u9975 4298  
                                                u9959 4280  
                                                u9898 41D2  
                                                u9899 41E6  
                               _i2c_digipot_reset_off 7F34  
                             ??_fat_get_format_status 002C  
                           __parse_file_truncate@data 0001  
                               __size_of__delete_root 005C  
                                      _ResetSenseData 6F44  
              __end_of__fill_buffer_get_configuration 5F2C  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 5E8E  
              USBStdFeatureReqHandler@current_ep_data 001B  
                              ?__update_modified_time 0005  
                                                _pDst 0184  
                                                _main 3918  
                                                _itoa 7888  
                          __end_of_fat_append_to_file 23D8  
                         __size_of_APP_DeviceMSDTasks 0012  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 5298  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 5CAA  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                         __fill_buffer_find_file@cntr 004C  
                             __bootloader_verify_file 0F7C  
                           _ExternalFlash_MediaDetect 8212  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 811E  
                               _display_get_character 7DBA  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DB4  
                                __end_of_failed_line2 8D20  
                                __end_of_failed_line4 8E73  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 4AE0  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 085A  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0046  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           __size_of_flash_page_write 0056  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 017C  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 362C  
                                      _hex_file_entry 01BA  
                              _bootloader_get_entries 81A0  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 7C7A  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                            _system_ui_inactive_count 0178  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 6E16  
                                               l10251 4B14  
                                               l12005 220E  
                                               l11313 69D6  
                                               l10441 75BE  
                                               l11411 5746  
                                               l12051 5FE2  
                                               l10613 567A  
                                               l10437 75A0  
                                               l10711 6E92  
                                               l12063 6016  
                                               l10471 0C36  
                                               l10631 7D6C  
                                               l11417 575A  
                                               l10369 4C24  
                                               l11363 6440  
                                               l13211 2640  
                                               l13131 677C  
                              ?_i2c_digipot_backlight 0001  
                                               l11293 7EF2  
                                               l11453 57F6  
                                               l11365 6444  
                                               l12085 1FCC  
                                               l13301 27B4  
                                               l11545 4EA8  
                                               l13401 4FA6  
                                               l13225 2684  
                                               l13251 26EE  
                                               l10933 772E  
                                               l13261 2714  
                             ?__fill_buffer_find_file 0044  
                                               l10679 504A  
                                               l13263 271C  
                                               l13239 26C8  
                                               l13159 5C22  
                                               l13177 5C72  
                                               l10939 773A  
                                               l12723 3390  
                                               l12715 3358  
                                               l13621 5854  
                                               l10789 2F58  
                                               l12709 334A  
                                               l13277 2760  
                                               l13197 25FC  
                                               l14079 5156  
                                               l12831 7E08  
                                               l12815 3420  
                                               l11777 05FC  
                                               l13289 2786  
                                               l11963 32D0  
                                               l13547 5DAC  
                                               l13475 673C  
                                               l14267 0FD6  
                                               l13299 27AC  
                                               l14525 372A  
                                               l13469 6730  
                                               l13823 3C7C  
                                               l15271 1D20  
                                               l15275 65BE  
                                               l13933 1D54  
                                               l15277 65F2  
                                               l15269 1C08  
                                               l14399 0B6A  
                                        spi_tx@length 0003  
                                               l13795 3C18  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 605E  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE9  
                                               STR_11 8FFB  
                                               STR_12 8FD0  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                     __end_of___lldiv 667A  
                                               u10110 2668  
                                               ?_utoa 0008  
                                               u10040 5C56  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10210 277E  
                                               u10130 26AC  
                                               u11005 7696  
                                               u11021 7D14  
                                               u10230 27AC  
                                               u10150 26E6  
                                               u10070 5CA6  
                                               u10250 27DC  
                                               u10170 2714  
                                               u10090 2624  
                                               u10510 2580  
                                               u10350 4F76  
                                               u10270 00A2  
                                               u11150 1028  
                                               u10190 2744  
                                               u10600 3C3C  
                                               u10425 7FDA  
                                               u10370 4FD2  
                                               u11250 08EC  
                                               u10435 7B26  
                                               u10445 670A  
                                               u10550 5882  
                                               u10630 3CE0  
                                               u10470 675E  
                                               u12207 7574  
                                     __end_of___llmod 6E7C  
                              __end_of_USBDeviceTasks 37A2  
                                               u10750 1D50  
                                               u12177 7EB4  
                                               u10770 1D84  
                                               u11570 379E  
                                               u11810 45B0  
                                               u12187 7558  
                                               u11660 5ADA  
                                               u10940 1F2E  
                                               u12197 756A  
                                               u11680 5AEE  
                                               u11760 453C  
                           ?_USBCtrlEPServiceComplete 0001  
                                     __end_of___lwdiv 7638  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 790C  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                                _file_minimum_address 014E  
                                    ??__display_start 0025  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 0097  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                        __delete_root 7120  
                                     ??_flash_is_busy 0014  
                            __bootloader_program@root 006E  
                                    __end_of_MSDTasks 1F88  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 55B6  
                     __end_of_internalFlash_getBuffer 8164  
                     __end_of_USBCtrlEPAllowDataStage 5E8E  
                                               _sd000 8FCC  
                                               _sd001 8EE8  
                                               _sd002 8F1C  
                                               _sd003 8F8B  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 71D6  
                 i2c_display_send_init_sequence@F6808 01EC  
                       __end_of_MSDTransferTerminated 743A  
                                        _gblCBWLength 00E4  
                          __end_of__parse_file_delete 768A  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 66FC  
                          __end_of__parse_file_create 6C6E  
                              __end_of_ResetSenseData 6FA6  
                            __get_empty_cluster@value 0036  
                          __end_of__parse_file_modify 821E  
                          __end_of__parse_file_rename 6D42  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 0053  
                           fat_get_format_status@cntr 002E  
                             ?__fill_buffer_read_file 0093  
                                               pclath 000FFA  
                                     __end_of_ui_init 8098  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00E8  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 7B4C  
                          __end_of__display_rebooting 753C  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 573A  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 0093  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 7E5A  
             __fill_buffer_get_file_details@outBuffer 0041  
                                      _MSDReadHandler 2DAE  
                                   __delete_root@slot 002F  
                        __size_of_USBStdSetCfgHandler 00E0  
                   fat_create_file@number_of_clusters 0065  
                                flash_page_write@data 0022  
                     __size_of_fat_get_empty_clusters 008E  
               __bootloader_check_address@byte_status 000B  
                                flash_page_write@page 0020  
                       internalFlash_readPage@address 0018  
                                     __initialization 621A  
                       fat_read_from_file@file_number 006E  
                           __end_of__flash_get_status 7CAC  
                        fat_get_file_information@data 0037  
                         fat_read_from_file_fast@data 0040  
                  spi_set_configuration@configuration 0001  
                                 _system_minimal_init 80EE  
               __end_of_ExternalFlash_MediaInitialize 8026  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 800C  
                      __size_of_system_encoder_enable 0010  
                                         _FileAddress 016E  
                                        __end_of_main 3A88  
                                        __end_of_itoa 78CA  
                       __end_of_system_encoder_enable 80DE  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 74E6  
                                        __end_of_utoa 5D4E  
                       fat_read_from_file_fast@length 003C  
                                __end_of__normal_mode 70C4  
                                    _timer_pseudo_isr 7AE4  
                       fat_read_from_file_fast@offset 0056  
                            __parse_command_short@cmd 002C  
                  fat_read_from_file_fast@read_length 0058  
                                    __end_of_i2c_init 8146  
                       fat_read_from_file_fast@sector 0052  
                            __end_of__i2c_acknowledge 8182  
                      __end_of__fill_buffer_find_file 5DF0  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 00CF  
                          __end_of__get_empty_cluster 6A42  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 8058  
                           __size_of_USBCtrlEPService 00AC  
                             __display_rebooting@cntr 0001  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 0176  
                                api_prepare@outBuffer 00A9  
                                              ??_main 00AF  
                                    __end_of__i2c_get 8178  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 00E0  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 0068  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                               main@bytes_transmitted 00B3  
                            _fat_get_file_information 695A  
                                  __write_root@offset 002E  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 8212  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 820E  
                                         ?_USBSuspend 0001  
                         ?_spi_get_external_rx_buffer 0001  
                                __size_of_api_prepare 0120  
                               ??__bootloader_program 0060  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                              ?_spi_set_configuration 0001  
                                _i2c_eeprom_writeByte 790C  
                         ?_spi_get_external_tx_buffer 0001  
                                ?_system_minimal_init 0001  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 7EA6  
                              __flash_write_to_buffer 76DA  
                     i2c_digipot_reset_off@data_array 000B  
                       __size_of__parse_file_truncate 0004  
                      __end_of__fill_buffer_read_file 25F4  
                                _start_from_byte_next 00DD  
                                    ___llmod@dividend 0001  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0037  
                                          __i2c_start 81DA  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 7772  
                           fat_read_from_file@cluster 0071  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 0060  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 73E4  
                                    __end_of__get_fbr 1D30  
                                    __end_of__get_mbr 5366  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                           __size_of_system_full_init 005C  
                                   ??__display_verify 001F  
                                  __size_of_i2c_reset 000E  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 2F88  
                                 _flash_pages_written 0170  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                         fat_append_to_file@file_size 0062  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 5B60  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 810E  
                   __bootloader_program@page_to_write 0099  
                                   _shortPacketStatus 00F6  
                   fat_append_to_file@number_of_bytes 003F  
                          __get_empty_cluster@cluster 0038  
                                      __CFG_XINST$OFF 000000  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 677A  
                        __end_of__flash_set_page_size 67F4  
                                     _hexCharsToUint8 7FBA  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 6A42  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
           SYSTEM_Initialize@pll_startup_counter_3113 0003  
                                           ??___lwdiv 0005  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 00E3  
                                           ??___lwmod 0005  
                                              _buffer 0380  
                                   _USBEnableEndpoint 79C8  
                       __bootloader_program@address32 0092  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 6E7C  
                                  ?_fat_get_file_size 0030  
                                              _memset 7D62  
                                              clear_0 6254  
                                              clear_1 6268  
                                              clear_2 627A  
                                              clear_3 6286  
                                              clear_4 6292  
                                              clear_5 629E  
                           _ExternalFlash_SectorWrite 7B80  
                                   api_parse@inBuffer 0093  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6E  
                                              _reboot 8026  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 44EA  
                                              _spi_tx 7336  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 7C48  
                                              _tx_buf 01F5  
                                    ?_fat_rename_file 003F  
                          __parse_command_long@length 0055  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                             __write_root@root_sector 002C  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 7D8E  
                        __end_of_jump_to_main_program 81F0  
                               __end_of_fat_find_file 57FA  
                         fat_get_empty_clusters@value 0036  
                                 ??_fat_get_file_size 0034  
                              _fat_get_empty_clusters 63CC  
                       __size_of__parse_command_short 00B4  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                    __size_of_fat_read_from_file_fast 0230  
                                        __mediumconst 8C98  
                                 __end_of__i2c_open_1 8058  
                      i2c_digipot_reset_on@data_array 000B  
                               ??_system_minimal_init 0002  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 7006  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 6FA6  
                                              tblptru 000FF8  
                                    __end_of_spi_init 79C8  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                                       main@rx_buffer 00B5  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0028  
                         ??__bootloader_check_address 0006  
                            __size_of_flash_page_read 0032  
                                       spi_tx_rx@data 0005  
                          __end_of__root_is_available 695A  
                             __spi_external_rx_buffer 0300  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0058  
                                       main@tx_buffer 00B7  
                               __end_of_ui_get_status 8208  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00F5  
                          ??_APP_DeviceCustomHIDTasks 00AB  
                                __CFG_LS48MHZ$SYS48X8 000000  
                             __spi_external_tx_buffer 0250  
                                   _SYSTEM_Initialize 7592  
                                 ??_i2c_set_frequency 0001  
                                          __accesstop 0060  
                             __end_of__initialization 62A6  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 816E  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 009B  
                         __end_of__parse_command_long 63CC  
                   __end_of_failed_line3_noNextRecord 8E22  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 6AB4  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                               __write_fat@fat_sector 002D  
                               flash_page_write@match 0024  
                                ??_flash_partial_read 0030  
                                    _flash_page_write 743A  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 7A04  
                            _bootloader_get_file_size 80BC  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FD0  
                                       __end_of_sd001 8F1C  
                                       __end_of_sd002 8F4A  
                                       __end_of_sd003 8FA5  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 821E  
                                        __pidataBANK1 7E80  
                           ??_bootloader_get_rec_data 0001  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 81B4  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 81AA  
                           __get_available_root_entry 7EEE  
                                 fat_rename_file@cntr 0081  
                                 fat_rename_file@name 003F  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 0061  
                                  __size_of__read_fat 0048  
                                     _active_protocol 00FB  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 129A  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 542E  
                                 _userInterfaceStatus 00E0  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 46F6  
                      ?_ExternalFlash_MediaInitialize 0001  
                           __end_of_i2c_set_frequency 7DBA  
                       __size_of__display_programming 01D6  
                                   __end_of_i2c_reset 812C  
                             __end_of_system_delay_ms 7ECA  
                                  __size_of_api_parse 00D2  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0174  
                      __end_of_failed_line3_startCode 8CE9  
                               _communicationSettings 0139  
                    fat_get_empty_clusters@fat_sector 0032  
                                  _fat_read_from_file 60F2  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 003E  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8DA4  
                                        _failed_line2 8D0E  
                                        _failed_line4 8E6B  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00EA  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 75E6  
                             ??__update_modified_time 0007  
                                   __end_of__i2c_read 64E6  
                                   __end_of__i2c_send 81EA  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 5A0E  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 81DA  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 0060  
                                         ?__i2c_write 0006  
                                          __pbssBANK0 00B9  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                       fat_append_to_file@fat_cluster 0068  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 43E2  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 0156  
                                           ?_i2c_init 0001  
                    __fill_buffer_read_file@outBuffer 0095  
                        __end_of__sector_from_cluster 813A  
                                    _mediaInformation 01D1  
                             __end_of_hexCharsToUint8 7FD6  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 003C  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 5CAA  
                     ??__fill_buffer_get_file_details 0043  
                                       __flash_wakeup 753C  
                            __fill_buffer_get_display 57FA  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 00C5  
                               __size_of__normal_mode 005E  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                          __update_modified_time@root 0005  
                    __end_of_USBCtrlEPServiceComplete 49FE  
               __end_of_APP_DeviceCustomHIDInitialize 7B80  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 7B4C  
                         MSDTransferTerminated@handle 000C  
                           __bootloader_check_address 4F46  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 25F4  
                                   ?__display_checked 0001  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 006A  
                        __size_of__flash_partial_read 0078  
                            __size_of_fat_delete_file 006A  
                                           MSDTasks@i 0052  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 21B8  
                                             ?_memset 0001  
                                          _device_dsc 8FA5  
                 fat_get_file_information@file_number 003E  
                                    ??_display_update 0011  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 8040  
                                    _USBCtrlEPService 5962  
                                             ?_ui_run 0001  
                                          _ep_data_in 016B  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0146  
                                  __display_clear@row 0003  
                       fat_append_to_file@file_number 006C  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 37A2  
                    __sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 41C6  
                                  _USBCheckStdRequest 49FE  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA8  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 003F  
                              fat_append_to_file@data 0041  
                                          _flash_init 7FF2  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 50F4  
                                   __end_of__get_data 7E0C  
                                   __end_of__get_date 81D2  
                                 _USBStdSetCfgHandler 4E66  
                              fat_append_to_file@root 0073  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 81C8  
                                   __end_of__get_root 34B0  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                             _RPINR23 000EFE  
                                          _done_line1 8D74  
                                          _done_line2 8E9F  
                                          _done_line3 8D64  
                                          _done_line4 8D54  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 806E  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0172  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 677A  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 7B18  
                                  __get_first_cluster 6DAC  
                                        __normal_mode 7066  
                          __end_of_APP_DeviceMSDTasks 80AA  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 7802  
                     ??_internalFlash_pageFromAddress 0005  
                            _system_minimal_init_undo 80DE  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 0088  
                             __size_of_hexCharToUint8 002C  
               __end_of__flash_compare_page_to_buffer 686C  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 67F4  
                                          __write_fat 794C  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB7  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                    _system_full_init 70C4  
                                   __read_fat@cluster 0030  
                                      ?__flash_wakeup 0001  
              fat_read_from_file_fast@working_cluster 0054  
                                   ??_flash_page_read 002C  
                      __end_of_bootloader_get_entries 81AA  
                              fat_find_file@extension 0032  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 51C6  
                                 ?__get_first_cluster 0030  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 41C6  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 0043  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 7638  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 0072  
                                   __end_of__spi_init 7A76  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 667A  
                                             __Lparam 0000  
                                  __parse_file_create 6C02  
                                _jump_to_main_program 81EA  
                            __size_of_fat_create_file 01BC  
                                   __end_of_hid_rpt01 8F8B  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 47FC  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                  __parse_file_modify 821A  
                                  __parse_file_rename 6CD8  
                          ??_fat_get_file_information 0039  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 6AB4  
                                          _last_error 00DE  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0340  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 8E98  
                                             ___lldiv 65F8  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 6E16  
                                             ___lwdiv 75E6  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 78CA  
                                   _fast_read_cluster 00F9  
                                  __display_rebooting 74E6  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 003F  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 004B  
                                 ?__parse_file_create 0050  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 7A3E  
                                             __pcinit 621A  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B8  
                           __end_of_configDescriptor1 8EE8  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 001A  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 3918  
                                             __ptext1 44EA  
                                     __display_failed 129A  
                                             __ptext2 80CE  
                                             __ptext3 7D0A  
                                             __ptext4 7F12  
                                             __ptext5 7F34  
                                             __ptext6 7E34  
                                             __ptext7 4D86  
                                             __ptext8 7AE4  
                                 ?__parse_file_modify 0001  
                                             __ptext9 80DE  
                                             _inPipes 00BF  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0043  
                                     __size_of_ui_run 0106  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00EB  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005E  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 7FBA  
                                ??__get_first_cluster 0032  
                             _fat_read_from_file_fast 1F88  
                                        ??_USBSuspend 0018  
                                     __display_search 3A88  
                                  __end_of_USBMSDInit 46F6  
                                 ?__display_rebooting 0001  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 810E  
                                             _msd_cbw 000D40  
                                     __display_verify 3E62  
                                             _msd_csw 000D80  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 8164  
                                             _ui_init 8084  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 8084  
                                  __end_of_USB_CD_Ptr 8EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                                  __get_empty_cluster 69CE  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 003D  
                                             _strncmp 5678  
                                 _flash_partial_write 6B24  
                                end_of_initialization 62A6  
                                ??__parse_file_delete 0041  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 73E4  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 2BD0  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 29E2  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 004D  
                                ??__parse_file_create 0052  
                                  __end_of_USB_SD_Ptr 8E83  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                    __write_fat@value 002B  
                                 _pBDTEntryEP0OutNext 00D9  
                                ??__parse_file_modify 0003  
                           __end_of_MSDProcessCommand 42D8  
                                             itoa@buf 0011  
                                ??__parse_file_rename 0045  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 003C  
                                     _USB1msTickCount 015E  
                                    ?_hexCharsToUint8 0003  
                                 ?__get_empty_cluster 0030  
                            __flash_partial_read@data 001A  
                        fat_get_empty_clusters@offset 0034  
                              _internalFlash_readPage 7846  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                                ??__display_rebooting 0001  
                            fat_append_to_file@length 006D  
                         i2c_eeprom_writeByte@address 000B  
                            fat_append_to_file@offset 006A  
           __fill_buffer_get_file_details@file_number 0043  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                            fat_append_to_file@sector 0060  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 7CDC  
                        __end_of__parse_file_truncate 821A  
                             _USBCtrlEPAllowDataStage 5DF0  
                                   __end_of_spi_tx_rx 621A  
                                   __end_of_spi_tx_tx 6572  
               __end_of__fill_buffer_get_file_details 6C02  
              __size_of__fill_buffer_get_file_details 006E  
                       __fill_buffer_get_file_details 6B94  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 818C  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 8182  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 002C  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 48FE  
                                             utoa@val 000A  
                                           _MSD_State 00E9  
                         __end_of__bootloader_program 0C0E  
                               _system_encoder_enable 80CE  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 005E  
                          _USBStatusStageEnabledFlag1 00EE  
                          _USBStatusStageEnabledFlag2 00ED  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                             ?_fat_get_empty_clusters 0030  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                                           _PORTDbits 000F83  
                            flash_partial_write@start 0022  
                                ??__get_empty_cluster 0032  
                      __end_of__flash_write_to_buffer 772A  
                                    __CFG_DSBOREN$OFF 000000  
                                __sector_from_cluster 812C  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       fat_append_to_file@new_cluster 0066  
                                   ??_fat_delete_file 003A  
                              fat_create_file@cluster 0067  
                                 flash_page_read@data 002A  
                                         ?_flash_init 0001  
                                 flash_page_read@page 0028  
                                    __CFG_CPUDIV$OSC1 000000  
                       fat_get_empty_clusters@cluster 003A  
                     __fill_buffer_find_file@inBuffer 0044  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0290  
                                  _BothEP0OutUOWNsSet 00F1  
                       fat_get_empty_clusters@maximum 0030  
                            __end_of_flash_page_write 7490  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 0380  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 7490  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00FD  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DB4  
                                       _checked_line2 8C99  
                                       _checked_line3 8E73  
                                       _checked_line4 8D32  
                                         ?__write_fat 0029  
                                 __delete_root@offset 002C  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8E31  
                             __size_of__display_start 01F0  
                        __end_of_USBTransferOnePacket 48FE  
                              i2c_display_cursor@line 000F  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 5962  
               __end_of_internalFlash_pageFromAddress 7FF2  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 7FD6  
                                __end_of_reboot_line1 8E4C  
                                __end_of_search_line1 8DF4  
                                __end_of_search_line2 8D54  
                                __end_of_search_line3 8CD6  
                                __end_of_search_line4 8E62  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 68E4  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 1590  
                       __get_empty_cluster@fat_sector 0032  
                                    ?_MSDErrorHandler 0001  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 62AC  
                               ??_flash_partial_write 0028  
                       ??_bootloader_get_rec_checksum 0001  
                                    __write_root@slot 0030  
                      __bootloader_program@entry_page 006A  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00D2  
                             __end_of__display_search 3BDA  
                               __end_of_USBDeviceInit 3D28  
               __end_of_USBIncrement1msInternalTimers 7F78  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 7F56  
                                     ??__display_done 001F  
                      __end_of_fat_get_empty_clusters 645A  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 3F8E  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                           ??_fat_read_from_file_fast 0046  
                            __end_of_USBStallEndpoint 44EA  
                                 _i2c_eeprom_readByte 768A  
                                   ??_fat_create_file 004C  
                 __bootloader_program@start_from_byte 0096  
                  __fill_buffer_read_file@data_length 009F  
                         __end_of_system_minimal_init 80FE  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8CAE  
                               ?__sector_from_cluster 0001  
                                      __end_of_memcpy 6EE2  
                                     _MSDRetryAttempt 00E5  
                                      __end_of_memset 7D8E  
                                      __end_of_reboot 8040  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 00F3  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 45F0  
                                      __end_of_spi_tx 738E  
               __get_available_root_entry@file_number 0037  
                                 __end_of__ui_encoder 4E66  
                           __flash_set_page_size@size 0018  
                                 start_initialization 621A  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                           _i2c_reset 811E  
                                 __end_of_api_prepare 40AE  
                   __end_of__get_available_root_entry 7F12  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0096  
                                     _USBMSDOutHandle 00D7  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 60F2  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1ACC  
                                 __flash_partial_read 686C  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 0044  
                                       _MSDHostNoData 00E2  
                                      _hexCharToUint8 7D36  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                      __size_of__update_modified_time 0032  
                   __end_of_USBCtrlEPAllowStatusStage 54F2  
                            _fast_read_cluster_number 00F7  
                                ?_i2c_eeprom_readByte 0012  
                       __end_of__update_modified_time 7C48  
                        __end_of__display_programming 315E  
                fat_get_empty_clusters@empty_clusters 0038  
                            __end_of_USBCtrlEPService 5A0E  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 7A04  
                                           __i2c_read 645A  
                                           __i2c_send 81E2  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 81D2  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                            ??__fill_buffer_find_file 0048  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 820E  
                          __flash_partial_read@length 0018  
                       __end_of_failed_line3_checksum 8E13  
                       __root_is_available@first_byte 0036  
                              _pBDTEntryEP0OutCurrent 00DB  
                              __size_of_fat_find_file 00C0  
                    __end_of_fat_get_file_information 69CE  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 001A  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8D94  
                                   _programming_line2 8CFC  
                                   _programming_line3 8E83  
                                   _programming_line4 8D84  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                                      __get_date@date 0003  
                               spi_init@configuration 0004  
                             flash_partial_read@start 002A  
                                 _USBStdGetDscHandler 3D28  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00A8  
                          fat_get_file_size@file_size 0037  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01D8  
                           ?_APP_DeviceCustomHIDTasks 0001  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 008E  
                       __end_of_i2c_digipot_backlight 7E5A  
                                        ?__i2c_open_1 0001  
                                            ??_reboot 002C  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 002C  
                                  __end_of__i2c_start 81E2  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 003F  
                                  __end_of__i2c_write 77BA  
                            __end_of_system_full_init 7120  
                           __root_is_available@offset 0033  
                                 __size_of__write_fat 0040  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00FE  
                            ??__fill_buffer_read_file 0097  
                      __end_of_USBStdGetStatusHandler 5AB8  
                          ??_system_minimal_init_undo 0001  
                         api_parse@receivedDataLength 0095  
                                         __pbssCOMRAM 005F  
                   __end_of__bootloader_check_address 5020  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 7D0A  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 7CDC  
                          fat_append_to_file@position 006F  
                         fat_create_file@next_cluster 0060  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                                     _flash_page_read 7BE4  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 0060  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                          ?_i2c_reset 0001  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCC  
                       __end_of_MSDCheckForErrorCases 4CA4  
             __bootloader_program@address_within_page 006C  
                              __end_of_hexCharToUint8 7D62  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 0152  
                  __end_of_flash_command_pagesize_512 8FC8  
                          _flash_command_pagesize_512 8FC4  
                  __end_of_flash_command_pagesize_528 8FC4  
                          _flash_command_pagesize_528 8FC0  
                                      __flash_is_busy 7F78  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 6B24  
                                __parse_file_truncate 8216  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 8E91  
                                           __get_data 7DE4  
                                           __get_date 81C8  
                    __bootloader_program@return_value 008E  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 003A  
                                   ?_timer_pseudo_isr 0001  
                     __end_of_fat_read_from_file_fast 21B8  
                                           __get_time 81BE  
                                           __get_root 331A  
                                 __end_of__write_root 7286  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 7AAE  
                            __delete_root@root_sector 002A  
                          __end_of_i2c_display_cursor 7EEE  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 7802  
                                        _pBDTEntryOut 0140  
                                          ?__i2c_stop 0001  
                          fat_rename_file@file_number 0060  
                                           __read_fat 77BA  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8DA4  
                           __end_of_programming_line2 8D0E  
                           __end_of_programming_line3 8E8A  
                           __end_of_programming_line4 8D94  
                    __end_of_ExternalFlash_SectorRead 7BE4  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 81BE  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 81B4  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 5C06  
                   fat_read_from_file_fast@start_byte 0038  
                                   fat_find_file@name 0030  
                      MSDProcessCommandMediaPresent@i 0047  
                                 fat_find_file@buffer 0034  
                                   fat_find_file@slot 003F  
                                           _api_parse 50F4  
                           fat_create_file@root_entry 0069  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 4CA4  
                                  _APP_DeviceMSDTasks 8098  
                                       __pmediumconst 8C98  
                                 fat_find_file@offset 0042  
                               ??__flash_partial_read 001C  
                                           __ptext100 43E2  
                                           __ptext101 6F44  
                                           __ptext110 3F8E  
                                           __ptext102 7BB2  
                                           __ptext111 23D8  
                                           __ptext103 7BE4  
                                           __ptext200 812C  
                                           __ptext120 29E2  
                                           __ptext112 60F2  
                                           __ptext104 5F2C  
                                           __ptext201 77BA  
                                           __ptext121 81F0  
                                           __ptext113 1F88  
                                           __ptext105 8182  
                                           __ptext210 6186  
                                           __ptext202 69CE  
                                           __ptext130 8026  
                                           __ptext122 818C  
                                           __ptext114 6A42  
                                           __ptext106 80AA  
                                           __ptext211 47FC  
                                           __ptext203 7C48  
                                           __ptext131 8202  
                                           __ptext123 8058  
                                           __ptext115 4CA4  
                                           __ptext107 800C  
                                           __ptext212 0000  
                                           __ptext204 42D8  
                                           __ptext140 74E6  
                                           __ptext132 6C6E  
                                           __ptext124 81F6  
                                           __ptext116 6B94  
                                           __ptext108 8212  
                                           __ptext205 686C  
                                           __ptext141 2F88  
                                           __ptext133 7490  
                                           __ptext125 81FC  
                                           __ptext117 57FA  
                                           __ptext109 5AB8  
                                           __ptext206 7F78  
                                           __ptext150 65F8  
                                           __ptext142 2BD0  
                                           __ptext134 7ECA  
                                           __ptext126 5D4E  
                                           __ptext118 7DBA  
                                           __ptext207 753C  
                                           __ptext151 37A2  
                                           __ptext143 80BC  
                                           __ptext135 7E5A  
                                           __ptext127 50F4  
                                           __ptext119 5E8E  
                                           __ptext208 7336  
                                           __ptext160 75E6  
                                           __ptext152 81AA  
                                           __ptext144 129A  
                                           __ptext136 51C6  
                                           __ptext128 58AE  
                                           __ptext209 7C7A  
                                           __ptext161 790C  
                                           __ptext153 772A  
                                           __ptext145 8196  
                                           __ptext137 3E62  
                                           __ptext129 7EA6  
                                           __ptext170 6CD8  
                                           __ptext162 7D8E  
                                           __ptext154 34B0  
                                           __ptext146 8208  
                                           __ptext138 27F2  
                                           __ptext171 5FC8  
                                           __ptext163 7772  
                                           __ptext155 81B4  
                                           __ptext147 81A0  
                                           __ptext139 3A88  
                                           __ptext180 63CC  
                                           __ptext172 821A  
                                           __ptext164 71D6  
                                           __ptext156 54F2  
                                           __ptext148 0C0E  
                                           __ptext181 573A  
                                           __ptext173 7638  
                                           __ptext165 81D2  
                                           __ptext157 7888  
                                           __ptext149 6E16  
                                           __ptext190 6B24  
                                           __ptext182 5678  
                                           __ptext174 6D42  
                                           __ptext166 81DA  
                                           __ptext158 5CAA  
                                           __ptext191 806E  
                                           __ptext183 7EEE  
                                           __ptext175 6DAC  
                                           __ptext167 81E2  
                                           __ptext159 78CA  
                                           __ptext192 76DA  
                                           __ptext184 667A  
                                           __ptext176 7120  
                                           __ptext168 633E  
                                           __ptext193 64E6  
                                           __ptext185 21B8  
                                           __ptext177 6C02  
                                           __ptext169 8216  
                                           __ptext194 7286  
                                           __ptext186 695A  
                                           __ptext178 315E  
                                           __ptext195 72DE  
                                           __ptext187 68E4  
                                           __ptext179 6E7C  
                                           __ptext196 67F4  
                                           __ptext188 722E  
                                           __ptext197 7C16  
                                           __ptext189 794C  
                                           __ptext198 81BE  
                                           __ptext199 81C8  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0040  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                                            ?___lwdiv 0001  
                                           __spi_init 7A3E  
                                            ?___lwmod 0001  
                         __size_of_fat_read_from_file 0094  
                                    ?__display_search 0001  
                                           _hid_rpt01 8F6E  
                                         __ui_encoder 4D86  
                           __get_first_cluster@offset 0035  
                              ??__sector_from_cluster 0003  
                                           _idle_rate 00FC  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0033  
                                      __get_time@time 0003  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 3F8E  
                             __parse_file_delete@data 003F  
                                     __i2c_write@data 0006  
                                _file_maximum_address 014A  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 0044  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0048  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 47FC  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 010A  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 43E2  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 58AE  
                        ??_spi_get_external_rx_buffer 0003  
                 __fill_buffer_get_display@secondHalf 0007  
                              fat_read_from_file@data 0068  
                              __end_of__flash_is_busy 7F9A  
                                       _fat_find_file 573A  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 0073  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 0C0E  
                                   __display_itoa_u16 54F2  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 7066  
                               ??_USBStdGetDscHandler 0001  
                               ?__parse_file_truncate 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 8DE4  
                                 __end_of_found_line2 8CFC  
                                 __end_of_found_line3 8E9F  
                                 __end_of_found_line4 8D32  
                                         _ep_data_out 0168  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 8196  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 7F56  
                       _bootloader_get_rec_dataLength 818C  
                        ??_spi_get_external_tx_buffer 0003  
                                       _MSDWriteState 00E6  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 772A  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 2BD0  
                    __end_of_bootloader_get_file_size 80CE  
                                         _file_buffer 0188  
                                     _config_internal 0165  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 8202  
                                     _config_external 0162  
                                      __display_start 27F2  
                        __size_of_USBCtrlTrfTxService 00D4  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 7DE4  
                                         _file_number 00FF  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 4BC2  
                      __root_is_available@file_number 0035  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                   ??_fat_rename_file 0043  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0220  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                            _PIR3bits 000FA4  
              __fill_buffer_get_file_details@inBuffer 003F  
                   __bootloader_verify_file@address32 008D  
                          __end_of_internalFlash_read 7AE4  
                                          ?_api_parse 0093  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 004B  
                                            _MSDTasks 1D30  
                          _USBDeferINDataStagePackets 00EC  
                                        ??_fat_format 0025  
                                     _fat_delete_file 6D42  
                                _active_configuration 0186  
                           ?__ic2_display_set_address 0001  
                                            _SSP1CON1 000FC6  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0050  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                 __size_of_spi_get_external_rx_buffer 000A  
                                _USBConfigureEndpoint 605E  
                                   __i2c_write@length 0008  
                             __end_of_flash_page_read 7C16  
                                           _spi_tx_rx 6186  
                                           _spi_tx_tx 64E6  
                                __display_verify@cntr 0021  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 00D5  
                 __size_of_spi_get_external_tx_buffer 000A  
                                __display_programming 2F88  
                               ?_USBTransferOnePacket 0001  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 006A  
                           __end_of__display_itoa_u16 55B6  
                           __end_of__display_itoa_u32 0F7C  
                     __size_of__fill_buffer_read_file 021C  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8DD4  
                                __end_of_verify_line2 8E59  
                                __end_of_verify_line3 8E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 0030  
                            fat_rename_file@extension 0041  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00F4  
                   __end_of_ExternalFlash_MediaDetect 8216  
                                        _reboot_line1 8E3F  
                                        _search_line1 8DE4  
                                        _search_line2 8D43  
                                        _search_line3 8CC2  
                                        _search_line4 8E59  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                     fat_read_from_file_fast@position 005A  
                                     ?__flash_is_busy 0001  
                                         ??_i2c_reset 0001  
                    __end_of__fill_buffer_get_display 58AE  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 722E  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 7772  
                   __size_of_fat_get_file_information 0074  
                                _bootloader_get_error 8208  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0037  
                              __end_of__display_found 2DAE  
                             __end_of_USBStallHandler 7846  
                                   ?_flash_page_write 0020  
                      __end_of_internalFlash_readPage 7888  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 29E2  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 622E  
                        __size_of__system_timer0_init 0020  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                        fat_create_file@cluster_count 0062  
                         __end_of_USBStdSetCfgHandler 4F46  
                                  ??_flash_page_write 0024  
                         __size_of__parse_file_delete 0052  
                                        ??__write_fat 002D  
                                  __end_of_fat_format 27F2  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 006C  
                                 __display_found@cntr 0028  
                                            _i2c_init 813A  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 0004  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00E7  
                         __size_of__parse_file_rename 006A  
                                         ??__i2c_stop 0001  
                                  __write_fat@cluster 0029  
                                  __end_of_device_dsc 8FB7  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 816E  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 315E  
                         __size_of__display_rebooting 0056  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0064  
                                            __Hrparam 0000  
                         __end_of_bootloader_filename 8FC0  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 800C  
                                      _TransferLength 00D3  
                                _bootloader_extension 8FC8  
                           __get_empty_cluster@offset 0034  
                          __end_of_USBCheckMSDRequest 5678  
               fat_read_from_file_fast@cluster_number 0044  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 7BB2  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 8D84  
                                  __end_of_done_line2 8EA5  
                                  __end_of_done_line3 8D74  
                                  __end_of_done_line4 8D64  
                                      __i2c_wait_idle 71D6  
                                     _MSDWriteHandler 1590  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 00E1  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                    __end_of_system_minimal_init_undo 80EE  
                                         _found_line1 8DD4  
                                         _found_line2 8CE9  
                                         _found_line3 8E98  
                                         _found_line4 8D20  
                                            __get_fat 738E  
                                            __get_fbr 1ACC  
                         __size_of__get_empty_cluster 0074  
                                            __get_mbr 5298  
                                  __end_of__write_fat 798C  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 80BC  
                          _ExternalFlash_CapacityRead 80AA  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 5D4E  
                              ??__parse_file_truncate 0003  
                        __size_of__bootloader_program 03B4  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0176  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 80FE  
                    __get_first_cluster@first_cluster 0037  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                                    __display_checked 34B0  
               __end_of_bootloader_get_rec_recordType 81F6  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 81F0  
                                            __ptext10 811E  
                                            __ptext11 80EE  
                                            __ptext20 80FE  
                                            __ptext12 813A  
                                            __ptext21 5C06  
                                            __ptext13 8040  
                                            __ptext30 8146  
                                            __ptext22 25F4  
                                            __ptext14 70C4  
                                            __ptext31 8150  
                                            __ptext23 331A  
                                            __ptext15 8084  
                                            __ptext40 66FC  
                                            __ptext32 81EA  
                                            __ptext24 5298  
                                            __ptext16 7FF2  
                                            __ptext41 7846  
                                            __ptext33 717C  
                                            __ptext25 1ACC  
                                            __ptext17 798C  
                                            __ptext50 5B60  
                                            __ptext42 7AAE  
                                            __ptext34 0F7C  
                                            __ptext26 738E  
                                            __ptext18 7A3E  
                                            __ptext51 7066  
                                            __ptext43 7FD6  
                                            __ptext35 085A  
                                            __ptext27 7DE4  
                                            __ptext19 677A  
                                            __ptext60 7802  
                                            __ptext52 768A  
                                            __ptext44 815A  
                                            __ptext36 0020  
                                            __ptext28 7F9A  
                                            __ptext61 7F56  
                                            __ptext53 645A  
                                            __ptext45 7B18  
                                            __ptext37 7FBA  
                                            __ptext29 7A04  
                                            __ptext70 5A0E  
                                            __ptext62 3BDA  
                                            __ptext54 8164  
                                            __ptext46 7E0C  
                                            __ptext38 6AB4  
                                            __ptext71 3D28  
                                            __ptext63 5962  
                                            __ptext55 816E  
                                            __ptext47 6FA6  
                                            __ptext39 7D36  
                                            __ptext80 7B4C  
                                            __ptext72 1848  
                                            __ptext64 62AC  
                                            __ptext56 8178  
                                            __ptext48 7CDC  
                                            __ptext81 79C8  
                                            __ptext73 6572  
                                            __ptext65 48FE  
                                            __ptext57 362C  
                                            __ptext49 4F46  
                                            __ptext90 41C6  
                                            __ptext82 605E  
                                            __ptext74 55B6  
                                            __ptext66 5DF0  
                                            __ptext58 7A76  
                                            __ptext91 6EE2  
                                            __ptext83 7006  
                                            __ptext75 4AE0  
                                            __ptext67 49FE  
                                            __ptext59 7CAC  
                                            __ptext92 049C  
                                            __ptext84 40AE  
                                            __ptext76 7592  
                                            __ptext68 4E66  
                                            __ptext93 1590  
                                            __ptext85 542E  
                                            __ptext77 73E4  
                                            __ptext69 7D62  
                                            __ptext94 820E  
                                            __ptext86 5366  
                                            __ptext78 810E  
                                            __ptext95 7B80  
                                            __ptext87 5020  
                                            __ptext79 45F0  
                                            __ptext96 743A  
                                            __ptext88 8098  
                                            __ptext97 2DAE  
                                            __ptext89 1D30  
                                            __ptext98 4BC2  
                                            __ptext99 46F6  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 6F44  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 6EE2  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                             __size_of_bootloader_run 005A  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 633E  
                   __end_of_failed_line3_addressRange 8CC2  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                                        api_parse@idx 0058  
                      __size_of__bootloader_find_file 00A6  
                  __end_of__flash_copy_page_to_buffer 7336  
                          __flash_copy_page_to_buffer 72DE  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 5B60  
                       __end_of__bootloader_find_file 5C06  
                        __end_of_i2c_digipot_reset_on 7F34  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 7592  
                      __end_of_USBCtrlTrfSetupHandler 633E  
                                       __size_of_main 0170  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F4A  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 6DAC  
                                         ??__read_fat 0032  
                              __fill_buffer_read_file 23D8  
                         __end_of_flash_partial_write 6B94  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003B  
                             fat_get_file_size@sector 0035  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 717C  
                    __size_of__bootloader_verify_file 031E  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 81FC  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 81F6  
                                 _USBCtrlTrfInHandler 5366  
                  _MSDProcessCommandMediaPresent$2390 003C  
                    __get_empty_cluster@first_cluster 0030  
                      fat_read_from_file_fast@cluster 0042  
                                         ??_api_parse 0056  
                              __end_of__i2c_wait_idle 722E  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                          _ODCON3bits 000F40  
                                            _spi_init 798C  
                                _USBCtrlTrfOutHandler 7006  
                           _USBCtrlEPAllowStatusStage 542E  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 815A  
                                ?__parse_command_long 0053  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                    ?_flash_page_read 0028  
                                 __display_start@cntr 0025  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 3918  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0034  
                              ??__parse_command_short 002C  
                                   ?_system_full_init 0001  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00EF  
                  __end_of_spi_get_external_rx_buffer 815A  
                          _spi_get_external_rx_buffer 8150  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 4D86  
                             __parse_file_modify@data 0001  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 7E34  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 7E0C  
                             _internalFlash_erasePage 7B18  
                                   __write_fat@offset 002F  
                                  ??_system_full_init 0030  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                  __end_of_spi_get_external_tx_buffer 8150  
                          _spi_get_external_tx_buffer 8146  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                        __size_of_system_minimal_init 0010  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                    fat_read_from_file@cluster_number 006F  
                __end_of_MSDComputeDeviceInAndResidue 5FC8  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 5F2C  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 8E04  
                                 __end_of_start_line2 8E6B  
                                 __end_of_start_line3 8EA8  
                                 __end_of_start_line4 8E31  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 806E  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 8178  
                              bootloader_run@timeslot 005E  
                             __end_of_fat_create_file 331A  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0076  
                             __parse_file_rename@data 0043  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 65F8  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 6572  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 7BB2  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 72DE  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 7286  
                SYSTEM_Initialize@pll_startup_counter 0001  
                               __update_modified_time 7C16  
                        fat_read_from_file@start_byte 0060  
                                     _display_content 0200  
                          __end_of_flash_partial_read 7C7A  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 1848  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 8202  
                         _bootloader_get_rec_checksum 81FC  
                             __size_of_MSDReadHandler 01DA  
                       __size_of_jump_to_main_program 0006  
                        __bootloader_verify_file@root 0068  
                   __size_of__fill_buffer_get_display 00B4  
                            ?_fat_read_from_file_fast 0038  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 51C6  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8E04  
                                 _USBCtrlTrfRxService 40AE  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 7A76  
                               ??__parse_command_long 0055  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 7ECA  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 1848  
                        __fill_buffer_read_file@start 00A3  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 5020  
                         fat_delete_file@next_cluster 003A  
                                        ?_api_prepare 00A7  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 017E  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 7E34  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E3F  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 81A0  
                          _bootloader_get_rec_address 8196  
                               _USBAlternateInterface 01D6  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 76DA  
                          __delete_root@deleted_value 002E  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0182  
                           _failed_line3_noNextRecord 8E13  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 5FC8  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00F2  
                                      _display_update 6C6E  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8CD6  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 4BC2  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 7E80  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0180  
                             _internalFlash_writePage 66FC  
                                ?_USBCtrlTrfTxService 0001  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 45F0  
                        _USBStatusStageTimeoutCounter 00F0  
                     ??_ExternalFlash_MediaInitialize 0003  
                   __size_of_system_minimal_init_undo 0010  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                           ?_system_minimal_init_undo 0001  
                         __end_of__flash_partial_read 68E4  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 794C  
                                        _verify_line1 8DC4  
                                        _verify_line2 8E4C  
                                        _verify_line3 8E8A  
                            ??_fat_get_empty_clusters 0032  
                                          _USB_CD_Ptr 8EA5  
                                         _power_state 00DF  
                                         _USBInHandle 017A  
                            _APP_DeviceCustomHIDTasks 5AB8  
