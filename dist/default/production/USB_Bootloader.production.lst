

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Jul 09 23:25:33 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1,group=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   217                           	dabs	1,0x600,512,_msd_buffer
   218                           	dabs	1,0xD00,48,_BDT
   219                           	dabs	1,0xD40,31,_msd_cbw
   220                           	dabs	1,0xD80,13,_msd_csw
   221                           	dabs	1,0xD38,8,_CtrlTrfData
   222                           	dabs	1,0xD30,8,_SetupPkt
   223  0000                     
   224                           ; Version 1.42
   225                           ; Generated 13/04/2017 GMT
   226                           ; 
   227                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   228                           ; All rights reserved.
   229                           ; 
   230                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   231                           ; 
   232                           ; Redistribution and use in source and binary forms, with or without modification, are
   233                           ; permitted provided that the following conditions are met:
   234                           ; 
   235                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   236                           ;        conditions and the following disclaimer.
   237                           ; 
   238                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   239                           ;        of conditions and the following disclaimer in the documentation and/or other
   240                           ;        materials provided with the distribution.
   241                           ; 
   242                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   243                           ;        software without specific prior written permission.
   244                           ; 
   245                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   246                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   247                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   248                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   249                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   250                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   251                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   252                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   253                           ; 
   254                           ; 
   255                           ; Code-generator required, PIC18F47J53 Definitions
   256                           ; 
   257                           ; SFR Addresses
   258  0000                     
   259                           	psect	intcode
   260  000008  EF04 F048          	goto	36872	;# 
   261                           
   262                           	psect	intcodelo
   263  000018  EF0C F048          	goto	36888	; ;# 
   264  0000                     
   265                           	psect	idataBANK0
   266  0079DE                     __pidataBANK0:
   267                           	opt stack 0
   268                           
   269                           ;initializer for _file_number
   270  0079DE  FF                 	db	255
   271                           
   272                           	psect	idataBANK1
   273  0070E4                     __pidataBANK1:
   274                           	opt stack 0
   275                           
   276                           ;initializer for _LUN
   277  0070E4  20                 	db	low _ExternalFlash_MediaInitialize
   278  0070E5  77                 	db	high _ExternalFlash_MediaInitialize
   279  0070E6  FC                 	db	low _ExternalFlash_CapacityRead
   280  0070E7  78                 	db	high _ExternalFlash_CapacityRead
   281  0070E8  A8                 	db	low _ExternalFlash_SectorSizeRead
   282  0070E9  79                 	db	high _ExternalFlash_SectorSizeRead
   283  0070EA  DA                 	db	low _ExternalFlash_MediaDetect
   284  0070EB  79                 	db	high _ExternalFlash_MediaDetect
   285  0070EC  00                 	db	low _ExternalFlash_SectorRead
   286  0070ED  74                 	db	high _ExternalFlash_SectorRead
   287  0070EE  D6                 	db	low _ExternalFlash_WriteProtectStateGet
   288  0070EF  79                 	db	high _ExternalFlash_WriteProtectStateGet
   289  0070F0  CE                 	db	low _ExternalFlash_SectorWrite
   290  0070F1  73                 	db	high _ExternalFlash_SectorWrite
   291  0070F2  00                 	db	0
   292  0070F3  00                 	db	0
   293  0070F4  00                 	db	0
   294  0070F5  00                 	db	0
   295  0070F6  00                 	db	0
   296  0070F7  00                 	db	0
   297                           
   298                           ;initializer for i2c_display_init@F8323
   299  0070F8  3A                 	db	58
   300  0070F9  1E                 	db	30
   301  0070FA  39                 	db	57
   302  0070FB  0C                 	db	12
   303  0070FC  74                 	db	116
   304  0070FD  5C                 	db	92
   305  0070FE  6D                 	db	109
   306  0070FF  0C                 	db	12
   307  007100  01                 	db	1
   308                           
   309                           ;initializer for i2c_display_send_init_sequence@F8320
   310  007101  3A                 	db	58
   311  007102  1E                 	db	30
   312  007103  39                 	db	57
   313  007104  0C                 	db	12
   314  007105  74                 	db	116
   315  007106  5C                 	db	92
   316  007107  6D                 	db	109
   317  007108  0C                 	db	12
   318  007109  01                 	db	1
   319                           
   320                           ;initializer for system_init@F8463
   321  00710A  4E                 	db	78
   322  00710B  45                 	db	69
   323  00710C  57                 	db	87
   324  00710D  46                 	db	70
   325  00710E  49                 	db	73
   326  00710F  4C                 	db	76
   327  007110  45                 	db	69
   328  007111  20                 	db	32
   329  007112  00                 	db	0
   330                           
   331                           ;initializer for system_init@F8459
   332  007113  54                 	db	84
   333  007114  45                 	db	69
   334  007115  53                 	db	83
   335  007116  54                 	db	84
   336  007117  20                 	db	32
   337  007118  20                 	db	32
   338  007119  20                 	db	32
   339  00711A  20                 	db	32
   340  00711B  00                 	db	0
   341                           
   342                           ;initializer for system_init@F8465
   343  00711C  54                 	db	84
   344  00711D  58                 	db	88
   345  00711E  54                 	db	84
   346  00711F  00                 	db	0
   347                           
   348                           ;initializer for system_init@F8461
   349  007120  54                 	db	84
   350  007121  58                 	db	88
   351  007122  54                 	db	84
   352  007123  00                 	db	0
   353                           
   354                           	psect	idataBANK3
   355  006548                     __pidataBANK3:
   356                           	opt stack 0
   357                           
   358                           ;initializer for system_init@F8467
   359  006548  4A                 	db	74
   360  006549  75                 	db	117
   361  00654A  73                 	db	115
   362  00654B  74                 	db	116
   363  00654C  20                 	db	32
   364  00654D  61                 	db	97
   365  00654E  70                 	db	112
   366  00654F  70                 	db	112
   367  006550  65                 	db	101
   368  006551  6E                 	db	110
   369  006552  64                 	db	100
   370  006553  65                 	db	101
   371  006554  64                 	db	100
   372  006555  20                 	db	32
   373  006556  74                 	db	116
   374  006557  68                 	db	104
   375  006558  69                 	db	105
   376  006559  73                 	db	115
   377  00655A  20                 	db	32
   378  00655B  74                 	db	116
   379  00655C  65                 	db	101
   380  00655D  78                 	db	120
   381  00655E  74                 	db	116
   382  00655F  21                 	db	33
   383  006560  20                 	db	32
   384  006561  4E                 	db	78
   385  006562  6F                 	db	111
   386  006563  77                 	db	119
   387  006564  20                 	db	32
   388  006565  74                 	db	116
   389  006566  68                 	db	104
   390  006567  69                 	db	105
   391  006568  73                 	db	115
   392  006569  20                 	db	32
   393  00656A  69                 	db	105
   394  00656B  73                 	db	115
   395  00656C  20                 	db	32
   396  00656D  73                 	db	115
   397  00656E  75                 	db	117
   398  00656F  70                 	db	112
   399  006570  65                 	db	101
   400  006571  72                 	db	114
   401  006572  2D                 	db	45
   402  006573  6C                 	db	108
   403  006574  6F                 	db	111
   404  006575  6E                 	db	110
   405  006576  67                 	db	103
   406  006577  2E                 	db	46
   407  006578  20                 	db	32
   408  006579  69                 	db	105
   409  00657A  74                 	db	116
   410  00657B  20                 	db	32
   411  00657C  67                 	db	103
   412  00657D  6F                 	db	111
   413  00657E  65                 	db	101
   414  00657F  73                 	db	115
   415  006580  20                 	db	32
   416  006581  6F                 	db	111
   417  006582  6E                 	db	110
   418  006583  20                 	db	32
   419  006584  61                 	db	97
   420  006585  6E                 	db	110
   421  006586  64                 	db	100
   422  006587  20                 	db	32
   423  006588  6F                 	db	111
   424  006589  6E                 	db	110
   425  00658A  20                 	db	32
   426  00658B  61                 	db	97
   427  00658C  6E                 	db	110
   428  00658D  64                 	db	100
   429  00658E  20                 	db	32
   430  00658F  6F                 	db	111
   431  006590  6E                 	db	110
   432  006591  20                 	db	32
   433  006592  2E                 	db	46
   434  006593  2E                 	db	46
   435  006594  2E                 	db	46
   436  006595  20                 	db	32
   437  006596  62                 	db	98
   438  006597  75                 	db	117
   439  006598  74                 	db	116
   440  006599  20                 	db	32
   441  00659A  66                 	db	102
   442  00659B  69                 	db	105
   443  00659C  6E                 	db	110
   444  00659D  61                 	db	97
   445  00659E  6C                 	db	108
   446  00659F  6C                 	db	108
   447  0065A0  79                 	db	121
   448  0065A1  20                 	db	32
   449  0065A2  69                 	db	105
   450  0065A3  74                 	db	116
   451  0065A4  20                 	db	32
   452  0065A5  65                 	db	101
   453  0065A6  6E                 	db	110
   454  0065A7  64                 	db	100
   455  0065A8  73                 	db	115
   456  0065A9  20                 	db	32
   457  0065AA  48                 	db	72
   458  0065AB  45                 	db	69
   459  0065AC  52                 	db	82
   460  0065AD  45                 	db	69
   461  0065AE  2E                 	db	46
   462  0065AF  00                 	db	0
   463                           
   464                           	psect	mediumconst
   465  008CCC                     __pmediumconst:
   466                           	opt stack 0
   467  008CCC  00                 	db	0
   468  008CCD                     _checked_line2:
   469                           	opt stack 0
   470  008CCD  46                 	db	70
   471  008CCE  69                 	db	105
   472  008CCF  6C                 	db	108
   473  008CD0  65                 	db	101
   474  008CD1  20                 	db	32
   475  008CD2  63                 	db	99
   476  008CD3  68                 	db	104
   477  008CD4  65                 	db	101
   478  008CD5  63                 	db	99
   479  008CD6  6B                 	db	107
   480  008CD7  20                 	db	32
   481  008CD8  63                 	db	99
   482  008CD9  6F                 	db	111
   483  008CDA  6D                 	db	109
   484  008CDB  70                 	db	112
   485  008CDC  6C                 	db	108
   486  008CDD  65                 	db	101
   487  008CDE  74                 	db	116
   488  008CDF  65                 	db	101
   489  008CE0  64                 	db	100
   490  008CE1  00                 	db	0
   491  008CE2                     __end_of_checked_line2:
   492                           	opt stack 0
   493  008CE2                     _failed_line3_addressRange:
   494                           	opt stack 0
   495  008CE2  41                 	db	65
   496  008CE3  64                 	db	100
   497  008CE4  64                 	db	100
   498  008CE5  72                 	db	114
   499  008CE6  2E                 	db	46
   500  008CE7  20                 	db	32
   501  008CE8  6F                 	db	111
   502  008CE9  75                 	db	117
   503  008CEA  74                 	db	116
   504  008CEB  73                 	db	115
   505  008CEC  69                 	db	105
   506  008CED  64                 	db	100
   507  008CEE  65                 	db	101
   508  008CEF  20                 	db	32
   509  008CF0  72                 	db	114
   510  008CF1  61                 	db	97
   511  008CF2  6E                 	db	110
   512  008CF3  67                 	db	103
   513  008CF4  65                 	db	101
   514  008CF5  00                 	db	0
   515  008CF6                     __end_of_failed_line3_addressRange:
   516                           	opt stack 0
   517  008CF6                     _start_line3:
   518                           	opt stack 0
   519  008CF6  46                 	db	70
   520  008CF7  49                 	db	73
   521  008CF8  52                 	db	82
   522  008CF9  4D                 	db	77
   523  008CFA  57                 	db	87
   524  008CFB  41                 	db	65
   525  008CFC  52                 	db	82
   526  008CFD  45                 	db	69
   527  008CFE  2E                 	db	46
   528  008CFF  48                 	db	72
   529  008D00  45                 	db	69
   530  008D01  58                 	db	88
   531  008D02  20                 	db	32
   532  008D03  6F                 	db	111
   533  008D04  6E                 	db	110
   534  008D05  20                 	db	32
   535  008D06  55                 	db	85
   536  008D07  53                 	db	83
   537  008D08  42                 	db	66
   538  008D09  00                 	db	0
   539  008D0A                     __end_of_start_line3:
   540                           	opt stack 0
   541  008D0A                     _failed_line3_startCode:
   542                           	opt stack 0
   543  008D0A  4D                 	db	77
   544  008D0B  69                 	db	105
   545  008D0C  73                 	db	115
   546  008D0D  73                 	db	115
   547  008D0E  69                 	db	105
   548  008D0F  6E                 	db	110
   549  008D10  67                 	db	103
   550  008D11  20                 	db	32
   551  008D12  73                 	db	115
   552  008D13  74                 	db	116
   553  008D14  61                 	db	97
   554  008D15  72                 	db	114
   555  008D16  74                 	db	116
   556  008D17  20                 	db	32
   557  008D18  63                 	db	99
   558  008D19  6F                 	db	111
   559  008D1A  64                 	db	100
   560  008D1B  65                 	db	101
   561  008D1C  00                 	db	0
   562  008D1D                     __end_of_failed_line3_startCode:
   563                           	opt stack 0
   564  008D1D                     _found_line2:
   565                           	opt stack 0
   566  008D1D  46                 	db	70
   567  008D1E  49                 	db	73
   568  008D1F  52                 	db	82
   569  008D20  4D                 	db	77
   570  008D21  57                 	db	87
   571  008D22  41                 	db	65
   572  008D23  52                 	db	82
   573  008D24  45                 	db	69
   574  008D25  2E                 	db	46
   575  008D26  48                 	db	72
   576  008D27  45                 	db	69
   577  008D28  58                 	db	88
   578  008D29  20                 	db	32
   579  008D2A  66                 	db	102
   580  008D2B  6F                 	db	111
   581  008D2C  75                 	db	117
   582  008D2D  6E                 	db	110
   583  008D2E  64                 	db	100
   584  008D2F  00                 	db	0
   585  008D30                     __end_of_found_line2:
   586                           	opt stack 0
   587  008D30                     _programming_line2:
   588                           	opt stack 0
   589  008D30  50                 	db	80
   590  008D31  72                 	db	114
   591  008D32  6F                 	db	111
   592  008D33  67                 	db	103
   593  008D34  72                 	db	114
   594  008D35  61                 	db	97
   595  008D36  6D                 	db	109
   596  008D37  6D                 	db	109
   597  008D38  69                 	db	105
   598  008D39  6E                 	db	110
   599  008D3A  67                 	db	103
   600  008D3B  20                 	db	32
   601  008D3C  66                 	db	102
   602  008D3D  6C                 	db	108
   603  008D3E  61                 	db	97
   604  008D3F  73                 	db	115
   605  008D40  68                 	db	104
   606  008D41  00                 	db	0
   607  008D42                     __end_of_programming_line2:
   608                           	opt stack 0
   609  008D42                     _failed_line2:
   610                           	opt stack 0
   611  008D42  46                 	db	70
   612  008D43  69                 	db	105
   613  008D44  6C                 	db	108
   614  008D45  65                 	db	101
   615  008D46  20                 	db	32
   616  008D47  63                 	db	99
   617  008D48  68                 	db	104
   618  008D49  65                 	db	101
   619  008D4A  63                 	db	99
   620  008D4B  6B                 	db	107
   621  008D4C  20                 	db	32
   622  008D4D  66                 	db	102
   623  008D4E  61                 	db	97
   624  008D4F  69                 	db	105
   625  008D50  6C                 	db	108
   626  008D51  65                 	db	101
   627  008D52  64                 	db	100
   628  008D53  00                 	db	0
   629  008D54                     __end_of_failed_line2:
   630                           	opt stack 0
   631  008D54                     _found_line4:
   632                           	opt stack 0
   633  008D54  50                 	db	80
   634  008D55  72                 	db	114
   635  008D56  65                 	db	101
   636  008D57  73                 	db	115
   637  008D58  73                 	db	115
   638  008D59  20                 	db	32
   639  008D5A  74                 	db	116
   640  008D5B  6F                 	db	111
   641  008D5C  20                 	db	32
   642  008D5D  75                 	db	117
   643  008D5E  73                 	db	115
   644  008D5F  65                 	db	101
   645  008D60  20                 	db	32
   646  008D61  66                 	db	102
   647  008D62  69                 	db	105
   648  008D63  6C                 	db	108
   649  008D64  65                 	db	101
   650  008D65  00                 	db	0
   651  008D66                     __end_of_found_line4:
   652                           	opt stack 0
   653  008D66                     _checked_line4:
   654                           	opt stack 0
   655  008D66  50                 	db	80
   656  008D67  72                 	db	114
   657  008D68  65                 	db	101
   658  008D69  73                 	db	115
   659  008D6A  73                 	db	115
   660  008D6B  20                 	db	32
   661  008D6C  74                 	db	116
   662  008D6D  6F                 	db	111
   663  008D6E  20                 	db	32
   664  008D6F  70                 	db	112
   665  008D70  72                 	db	114
   666  008D71  6F                 	db	111
   667  008D72  67                 	db	103
   668  008D73  72                 	db	114
   669  008D74  61                 	db	97
   670  008D75  6D                 	db	109
   671  008D76  00                 	db	0
   672  008D77                     __end_of_checked_line4:
   673                           	opt stack 0
   674  008D77                     _start_line2:
   675                           	opt stack 0
   676  008D77  4C                 	db	76
   677  008D78  6F                 	db	111
   678  008D79  6F                 	db	111
   679  008D7A  6B                 	db	107
   680  008D7B  69                 	db	105
   681  008D7C  6E                 	db	110
   682  008D7D  67                 	db	103
   683  008D7E  20                 	db	32
   684  008D7F  66                 	db	102
   685  008D80  6F                 	db	111
   686  008D81  72                 	db	114
   687  008D82  20                 	db	32
   688  008D83  66                 	db	102
   689  008D84  69                 	db	105
   690  008D85  6C                 	db	108
   691  008D86  65                 	db	101
   692  008D87  00                 	db	0
   693  008D88                     __end_of_start_line2:
   694                           	opt stack 0
   695  008D88                     _start_line1:
   696                           	opt stack 0
   697  008D88  42                 	db	66
   698  008D89  6F                 	db	111
   699  008D8A  6F                 	db	111
   700  008D8B  74                 	db	116
   701  008D8C  6C                 	db	108
   702  008D8D  6F                 	db	111
   703  008D8E  61                 	db	97
   704  008D8F  64                 	db	100
   705  008D90  65                 	db	101
   706  008D91  72                 	db	114
   707  008D92  20                 	db	32
   708  008D93  4D                 	db	77
   709  008D94  6F                 	db	111
   710  008D95  64                 	db	100
   711  008D96  65                 	db	101
   712  008D97  00                 	db	0
   713  008D98  00                 	db	0
   714  008D99                     __end_of_start_line1:
   715                           	opt stack 0
   716  008D99                     _done_line4:
   717                           	opt stack 0
   718  008D99  50                 	db	80
   719  008D9A  72                 	db	114
   720  008D9B  65                 	db	101
   721  008D9C  73                 	db	115
   722  008D9D  73                 	db	115
   723  008D9E  20                 	db	32
   724  008D9F  74                 	db	116
   725  008DA0  6F                 	db	111
   726  008DA1  20                 	db	32
   727  008DA2  72                 	db	114
   728  008DA3  65                 	db	101
   729  008DA4  62                 	db	98
   730  008DA5  6F                 	db	111
   731  008DA6  6F                 	db	111
   732  008DA7  74                 	db	116
   733  008DA8  00                 	db	0
   734  008DA9                     __end_of_done_line4:
   735                           	opt stack 0
   736  008DA9                     _done_line3:
   737                           	opt stack 0
   738  008DA9  50                 	db	80
   739  008DAA  61                 	db	97
   740  008DAB  67                 	db	103
   741  008DAC  65                 	db	101
   742  008DAD  73                 	db	115
   743  008DAE  20                 	db	32
   744  008DAF  77                 	db	119
   745  008DB0  72                 	db	114
   746  008DB1  69                 	db	105
   747  008DB2  74                 	db	116
   748  008DB3  74                 	db	116
   749  008DB4  65                 	db	101
   750  008DB5  6E                 	db	110
   751  008DB6  3A                 	db	58
   752  008DB7  20                 	db	32
   753  008DB8  00                 	db	0
   754  008DB9                     __end_of_done_line3:
   755                           	opt stack 0
   756  008DB9                     _done_line1:
   757                           	opt stack 0
   758  008DB9  42                 	db	66
   759  008DBA  6F                 	db	111
   760  008DBB  6F                 	db	111
   761  008DBC  74                 	db	116
   762  008DBD  6C                 	db	108
   763  008DBE  6F                 	db	111
   764  008DBF  61                 	db	97
   765  008DC0  64                 	db	100
   766  008DC1  65                 	db	101
   767  008DC2  72                 	db	114
   768  008DC3  20                 	db	32
   769  008DC4  4D                 	db	77
   770  008DC5  6F                 	db	111
   771  008DC6  64                 	db	100
   772  008DC7  65                 	db	101
   773  008DC8  00                 	db	0
   774  008DC9                     __end_of_done_line1:
   775                           	opt stack 0
   776  008DC9                     _programming_line4:
   777                           	opt stack 0
   778  008DC9  50                 	db	80
   779  008DCA  61                 	db	97
   780  008DCB  67                 	db	103
   781  008DCC  65                 	db	101
   782  008DCD  73                 	db	115
   783  008DCE  20                 	db	32
   784  008DCF  77                 	db	119
   785  008DD0  72                 	db	114
   786  008DD1  69                 	db	105
   787  008DD2  74                 	db	116
   788  008DD3  74                 	db	116
   789  008DD4  65                 	db	101
   790  008DD5  6E                 	db	110
   791  008DD6  3A                 	db	58
   792  008DD7  20                 	db	32
   793  008DD8  00                 	db	0
   794  008DD9                     __end_of_programming_line4:
   795                           	opt stack 0
   796  008DD9                     _programming_line1:
   797                           	opt stack 0
   798  008DD9  42                 	db	66
   799  008DDA  6F                 	db	111
   800  008DDB  6F                 	db	111
   801  008DDC  74                 	db	116
   802  008DDD  6C                 	db	108
   803  008DDE  6F                 	db	111
   804  008DDF  61                 	db	97
   805  008DE0  64                 	db	100
   806  008DE1  65                 	db	101
   807  008DE2  72                 	db	114
   808  008DE3  20                 	db	32
   809  008DE4  4D                 	db	77
   810  008DE5  6F                 	db	111
   811  008DE6  64                 	db	100
   812  008DE7  65                 	db	101
   813  008DE8  00                 	db	0
   814  008DE9                     __end_of_programming_line1:
   815                           	opt stack 0
   816  008DE9                     _failed_line1:
   817                           	opt stack 0
   818  008DE9  42                 	db	66
   819  008DEA  6F                 	db	111
   820  008DEB  6F                 	db	111
   821  008DEC  74                 	db	116
   822  008DED  6C                 	db	108
   823  008DEE  6F                 	db	111
   824  008DEF  61                 	db	97
   825  008DF0  64                 	db	100
   826  008DF1  65                 	db	101
   827  008DF2  72                 	db	114
   828  008DF3  20                 	db	32
   829  008DF4  4D                 	db	77
   830  008DF5  6F                 	db	111
   831  008DF6  64                 	db	100
   832  008DF7  65                 	db	101
   833  008DF8  00                 	db	0
   834  008DF9                     __end_of_failed_line1:
   835                           	opt stack 0
   836  008DF9                     _checked_line1:
   837                           	opt stack 0
   838  008DF9  42                 	db	66
   839  008DFA  6F                 	db	111
   840  008DFB  6F                 	db	111
   841  008DFC  74                 	db	116
   842  008DFD  6C                 	db	108
   843  008DFE  6F                 	db	111
   844  008DFF  61                 	db	97
   845  008E00  64                 	db	100
   846  008E01  65                 	db	101
   847  008E02  72                 	db	114
   848  008E03  20                 	db	32
   849  008E04  4D                 	db	77
   850  008E05  6F                 	db	111
   851  008E06  64                 	db	100
   852  008E07  65                 	db	101
   853  008E08  00                 	db	0
   854  008E09                     __end_of_checked_line1:
   855                           	opt stack 0
   856  008E09                     _verify_line1:
   857                           	opt stack 0
   858  008E09  42                 	db	66
   859  008E0A  6F                 	db	111
   860  008E0B  6F                 	db	111
   861  008E0C  74                 	db	116
   862  008E0D  6C                 	db	108
   863  008E0E  6F                 	db	111
   864  008E0F  61                 	db	97
   865  008E10  64                 	db	100
   866  008E11  65                 	db	101
   867  008E12  72                 	db	114
   868  008E13  20                 	db	32
   869  008E14  4D                 	db	77
   870  008E15  6F                 	db	111
   871  008E16  64                 	db	100
   872  008E17  65                 	db	101
   873  008E18  00                 	db	0
   874  008E19                     __end_of_verify_line1:
   875                           	opt stack 0
   876  008E19                     _found_line1:
   877                           	opt stack 0
   878  008E19  42                 	db	66
   879  008E1A  6F                 	db	111
   880  008E1B  6F                 	db	111
   881  008E1C  74                 	db	116
   882  008E1D  6C                 	db	108
   883  008E1E  6F                 	db	111
   884  008E1F  61                 	db	97
   885  008E20  64                 	db	100
   886  008E21  65                 	db	101
   887  008E22  72                 	db	114
   888  008E23  20                 	db	32
   889  008E24  4D                 	db	77
   890  008E25  6F                 	db	111
   891  008E26  64                 	db	100
   892  008E27  65                 	db	101
   893  008E28  00                 	db	0
   894  008E29                     __end_of_found_line1:
   895                           	opt stack 0
   896  008E29                     _failed_line3_checksum:
   897                           	opt stack 0
   898  008E29  43                 	db	67
   899  008E2A  68                 	db	104
   900  008E2B  65                 	db	101
   901  008E2C  63                 	db	99
   902  008E2D  6B                 	db	107
   903  008E2E  73                 	db	115
   904  008E2F  75                 	db	117
   905  008E30  6D                 	db	109
   906  008E31  20                 	db	32
   907  008E32  65                 	db	101
   908  008E33  72                 	db	114
   909  008E34  72                 	db	114
   910  008E35  6F                 	db	111
   911  008E36  72                 	db	114
   912  008E37  00                 	db	0
   913  008E38                     __end_of_failed_line3_checksum:
   914                           	opt stack 0
   915  008E38                     _failed_line3_noNextRecord:
   916                           	opt stack 0
   917  008E38  4E                 	db	78
   918  008E39  6F                 	db	111
   919  008E3A  20                 	db	32
   920  008E3B  6E                 	db	110
   921  008E3C  65                 	db	101
   922  008E3D  78                 	db	120
   923  008E3E  74                 	db	116
   924  008E3F  20                 	db	32
   925  008E40  72                 	db	114
   926  008E41  65                 	db	101
   927  008E42  63                 	db	99
   928  008E43  6F                 	db	111
   929  008E44  72                 	db	114
   930  008E45  64                 	db	100
   931  008E46  00                 	db	0
   932  008E47                     __end_of_failed_line3_noNextRecord:
   933                           	opt stack 0
   934  008E47                     _failed_line3_dataTooLong:
   935                           	opt stack 0
   936  008E47  44                 	db	68
   937  008E48  61                 	db	97
   938  008E49  74                 	db	116
   939  008E4A  61                 	db	97
   940  008E4B  20                 	db	32
   941  008E4C  74                 	db	116
   942  008E4D  6F                 	db	111
   943  008E4E  6F                 	db	111
   944  008E4F  20                 	db	32
   945  008E50  6C                 	db	108
   946  008E51  6F                 	db	111
   947  008E52  6E                 	db	110
   948  008E53  67                 	db	103
   949  008E54  00                 	db	0
   950  008E55                     __end_of_failed_line3_dataTooLong:
   951                           	opt stack 0
   952  008E55                     _verify_line2:
   953                           	opt stack 0
   954  008E55  56                 	db	86
   955  008E56  65                 	db	101
   956  008E57  72                 	db	114
   957  008E58  69                 	db	105
   958  008E59  66                 	db	102
   959  008E5A  79                 	db	121
   960  008E5B  69                 	db	105
   961  008E5C  6E                 	db	110
   962  008E5D  67                 	db	103
   963  008E5E  2E                 	db	46
   964  008E5F  2E                 	db	46
   965  008E60  2E                 	db	46
   966  008E61  00                 	db	0
   967  008E62                     __end_of_verify_line2:
   968                           	opt stack 0
   969  008E62                     _start_line4:
   970                           	opt stack 0
   971  008E62  64                 	db	100
   972  008E63  72                 	db	114
   973  008E64  69                 	db	105
   974  008E65  76                 	db	118
   975  008E66  65                 	db	101
   976  008E67  2E                 	db	46
   977  008E68  2E                 	db	46
   978  008E69  2E                 	db	46
   979  008E6A  00                 	db	0
   980  008E6B                     __end_of_start_line4:
   981                           	opt stack 0
   982  008E6B                     _failed_line4:
   983                           	opt stack 0
   984  008E6B  52                 	db	82
   985  008E6C  65                 	db	101
   986  008E6D  63                 	db	99
   987  008E6E  6F                 	db	111
   988  008E6F  72                 	db	114
   989  008E70  64                 	db	100
   990  008E71  20                 	db	32
   991  008E72  00                 	db	0
   992  008E73                     __end_of_failed_line4:
   993                           	opt stack 0
   994  008E73                     _checked_line3:
   995                           	opt stack 0
   996  008E73  72                 	db	114
   997  008E74  65                 	db	101
   998  008E75  63                 	db	99
   999  008E76  6F                 	db	111
  1000  008E77  72                 	db	114
  1001  008E78  64                 	db	100
  1002  008E79  73                 	db	115
  1003  008E7A  00                 	db	0
  1004  008E7B                     __end_of_checked_line3:
  1005                           	opt stack 0
  1006  008E7B                     _USB_SD_Ptr:
  1007                           	opt stack 0
  1008  008E7B  CB                 	db	low _sd000
  1009  008E7C  8F                 	db	high _sd000
  1010  008E7D  E7                 	db	low _sd001
  1011  008E7E  8E                 	db	high _sd001
  1012  008E7F  1B                 	db	low _sd002
  1013  008E80  8F                 	db	high _sd002
  1014  008E81  8A                 	db	low _sd003
  1015  008E82  8F                 	db	high _sd003
  1016  008E83                     __end_of_USB_SD_Ptr:
  1017                           	opt stack 0
  1018  008E83                     _programming_line3:
  1019                           	opt stack 0
  1020  008E83  45                 	db	69
  1021  008E84  6E                 	db	110
  1022  008E85  74                 	db	116
  1023  008E86  72                 	db	114
  1024  008E87  79                 	db	121
  1025  008E88  20                 	db	32
  1026  008E89  00                 	db	0
  1027  008E8A                     __end_of_programming_line3:
  1028                           	opt stack 0
  1029  008E8A                     _verify_line3:
  1030                           	opt stack 0
  1031  008E8A  52                 	db	82
  1032  008E8B  65                 	db	101
  1033  008E8C  63                 	db	99
  1034  008E8D  6F                 	db	111
  1035  008E8E  72                 	db	114
  1036  008E8F  64                 	db	100
  1037  008E90  00                 	db	0
  1038  008E91                     __end_of_verify_line3:
  1039                           	opt stack 0
  1040  008E91                     _found_line3b:
  1041                           	opt stack 0
  1042  008E91  20                 	db	32
  1043  008E92  62                 	db	98
  1044  008E93  79                 	db	121
  1045  008E94  74                 	db	116
  1046  008E95  65                 	db	101
  1047  008E96  73                 	db	115
  1048  008E97  00                 	db	0
  1049  008E98                     __end_of_found_line3b:
  1050                           	opt stack 0
  1051  008E98                     _found_line3:
  1052                           	opt stack 0
  1053  008E98  53                 	db	83
  1054  008E99  69                 	db	105
  1055  008E9A  7A                 	db	122
  1056  008E9B  65                 	db	101
  1057  008E9C  3A                 	db	58
  1058  008E9D  20                 	db	32
  1059  008E9E  00                 	db	0
  1060  008E9F                     __end_of_found_line3:
  1061                           	opt stack 0
  1062  008E9F                     _done_line2:
  1063                           	opt stack 0
  1064  008E9F  44                 	db	68
  1065  008EA0  6F                 	db	111
  1066  008EA1  6E                 	db	110
  1067  008EA2  65                 	db	101
  1068  008EA3  21                 	db	33
  1069  008EA4  00                 	db	0
  1070  008EA5                     __end_of_done_line2:
  1071                           	opt stack 0
  1072  008EA5                     _USB_CD_Ptr:
  1073                           	opt stack 0
  1074  008EA5  A7                 	db	low _configDescriptor1
  1075  008EA6  8E                 	db	high _configDescriptor1
  1076  008EA7                     __end_of_USB_CD_Ptr:
  1077                           	opt stack 0
  1078  008EA7                     _configDescriptor1:
  1079                           	opt stack 0
  1080  008EA7  09                 	db	9
  1081  008EA8  02                 	db	2
  1082  008EA9  40                 	db	64
  1083  008EAA  00                 	db	0
  1084  008EAB  02                 	db	2
  1085  008EAC  01                 	db	1
  1086  008EAD  00                 	db	0
  1087  008EAE  C0                 	db	192
  1088  008EAF  32                 	db	50
  1089  008EB0  09                 	db	9
  1090  008EB1  04                 	db	4
  1091  008EB2  00                 	db	0
  1092  008EB3  00                 	db	0
  1093  008EB4  02                 	db	2
  1094  008EB5  03                 	db	3
  1095  008EB6  00                 	db	0
  1096  008EB7  00                 	db	0
  1097  008EB8  00                 	db	0
  1098  008EB9  09                 	db	9
  1099  008EBA  21                 	db	33
  1100  008EBB  11                 	db	17
  1101  008EBC  01                 	db	1
  1102  008EBD  00                 	db	0
  1103  008EBE  01                 	db	1
  1104  008EBF  22                 	db	34
  1105  008EC0  1D                 	db	29
  1106  008EC1  00                 	db	0
  1107  008EC2  07                 	db	7
  1108  008EC3  05                 	db	5
  1109  008EC4  81                 	db	129
  1110  008EC5  03                 	db	3
  1111  008EC6  40                 	db	64
  1112  008EC7  00                 	db	0
  1113  008EC8  01                 	db	1
  1114  008EC9  07                 	db	7
  1115  008ECA  05                 	db	5
  1116  008ECB  01                 	db	1
  1117  008ECC  03                 	db	3
  1118  008ECD  40                 	db	64
  1119  008ECE  00                 	db	0
  1120  008ECF  01                 	db	1
  1121  008ED0  09                 	db	9
  1122  008ED1  04                 	db	4
  1123  008ED2  01                 	db	1
  1124  008ED3  00                 	db	0
  1125  008ED4  02                 	db	2
  1126  008ED5  08                 	db	8
  1127  008ED6  06                 	db	6
  1128  008ED7  50                 	db	80
  1129  008ED8  00                 	db	0
  1130  008ED9  07                 	db	7
  1131  008EDA  05                 	db	5
  1132  008EDB  82                 	db	130
  1133  008EDC  02                 	db	2
  1134  008EDD  40                 	db	64
  1135  008EDE  00                 	db	0
  1136  008EDF  01                 	db	1
  1137  008EE0  07                 	db	7
  1138  008EE1  05                 	db	5
  1139  008EE2  02                 	db	2
  1140  008EE3  02                 	db	2
  1141  008EE4  40                 	db	64
  1142  008EE5  00                 	db	0
  1143  008EE6  01                 	db	1
  1144  008EE7                     __end_of_configDescriptor1:
  1145                           	opt stack 0
  1146  008EE7                     _sd001:
  1147                           	opt stack 0
  1148  008EE7  34                 	db	52
  1149  008EE8  03                 	db	3
  1150  008EE9  0053               	dw	83
  1151  008EEB  006F               	dw	111
  1152  008EED  006C               	dw	108
  1153  008EEF  0064               	dw	100
  1154  008EF1  0065               	dw	101
  1155  008EF3  0072               	dw	114
  1156  008EF5  006E               	dw	110
  1157  008EF7  0065               	dw	101
  1158  008EF9  0072               	dw	114
  1159  008EFB  0064               	dw	100
  1160  008EFD  002E               	dw	46
  1161  008EFF  0063               	dw	99
  1162  008F01  006F               	dw	111
  1163  008F03  006D               	dw	109
  1164  008F05  0020               	dw	32
  1165  008F07  0020               	dw	32
  1166  008F09  0020               	dw	32
  1167  008F0B  0020               	dw	32
  1168  008F0D  0020               	dw	32
  1169  008F0F  0020               	dw	32
  1170  008F11  0020               	dw	32
  1171  008F13  0020               	dw	32
  1172  008F15  0020               	dw	32
  1173  008F17  0020               	dw	32
  1174  008F19  0020               	dw	32
  1175  008F1B                     __end_of_sd001:
  1176                           	opt stack 0
  1177  008F1B                     _sd002:
  1178                           	opt stack 0
  1179  008F1B  2E                 	db	46
  1180  008F1C  03                 	db	3
  1181  008F1D  004D               	dw	77
  1182  008F1F  0050               	dw	80
  1183  008F21  0050               	dw	80
  1184  008F23  0054               	dw	84
  1185  008F25  0053               	dw	83
  1186  008F27  006F               	dw	111
  1187  008F29  006C               	dw	108
  1188  008F2B  0061               	dw	97
  1189  008F2D  0072               	dw	114
  1190  008F2F  0020               	dw	32
  1191  008F31  0043               	dw	67
  1192  008F33  0068               	dw	104
  1193  008F35  0061               	dw	97
  1194  008F37  0072               	dw	114
  1195  008F39  0067               	dw	103
  1196  008F3B  0065               	dw	101
  1197  008F3D  0072               	dw	114
  1198  008F3F  0020               	dw	32
  1199  008F41  0052               	dw	82
  1200  008F43  0065               	dw	101
  1201  008F45  0076               	dw	118
  1202  008F47  0043               	dw	67
  1203  008F49                     __end_of_sd002:
  1204                           	opt stack 0
  1205  008F49                     _inq_resp:
  1206                           	opt stack 0
  1207  008F49  00                 	db	0
  1208  008F4A  80                 	db	128
  1209  008F4B  04                 	db	4
  1210  008F4C  02                 	db	2
  1211  008F4D  20                 	db	32
  1212  008F4E  00                 	db	0
  1213  008F4F  00                 	db	0
  1214  008F50  00                 	db	0
  1215  008F51  4D                 	db	77
  1216  008F52  69                 	db	105
  1217  008F53  63                 	db	99
  1218  008F54  72                 	db	114
  1219  008F55  6F                 	db	111
  1220  008F56  63                 	db	99
  1221  008F57  68                 	db	104
  1222  008F58  70                 	db	112
  1223  008F59  4D                 	db	77
  1224  008F5A  61                 	db	97
  1225  008F5B  73                 	db	115
  1226  008F5C  73                 	db	115
  1227  008F5D  20                 	db	32
  1228  008F5E  53                 	db	83
  1229  008F5F  74                 	db	116
  1230  008F60  6F                 	db	111
  1231  008F61  72                 	db	114
  1232  008F62  61                 	db	97
  1233  008F63  67                 	db	103
  1234  008F64  65                 	db	101
  1235  008F65  20                 	db	32
  1236  008F66  20                 	db	32
  1237  008F67  20                 	db	32
  1238  008F68  20                 	db	32
  1239  008F69  30                 	db	48
  1240  008F6A  30                 	db	48
  1241  008F6B  30                 	db	48
  1242  008F6C  31                 	db	49
  1243  008F6D                     __end_of_inq_resp:
  1244                           	opt stack 0
  1245  008F6D                     _hid_rpt01:
  1246                           	opt stack 0
  1247  008F6D  06                 	db	6
  1248  008F6E  00                 	db	0
  1249  008F6F  FF                 	db	255
  1250  008F70  09                 	db	9
  1251  008F71  01                 	db	1
  1252  008F72  A1                 	db	161
  1253  008F73  01                 	db	1
  1254  008F74  19                 	db	25
  1255  008F75  01                 	db	1
  1256  008F76  29                 	db	41
  1257  008F77  40                 	db	64
  1258  008F78  15                 	db	21
  1259  008F79  00                 	db	0
  1260  008F7A  26                 	db	38
  1261  008F7B  FF                 	db	255
  1262  008F7C  00                 	db	0
  1263  008F7D  75                 	db	117
  1264  008F7E  08                 	db	8
  1265  008F7F  95                 	db	149
  1266  008F80  40                 	db	64
  1267  008F81  81                 	db	129
  1268  008F82  00                 	db	0
  1269  008F83  19                 	db	25
  1270  008F84  01                 	db	1
  1271  008F85  29                 	db	41
  1272  008F86  40                 	db	64
  1273  008F87  91                 	db	145
  1274  008F88  00                 	db	0
  1275  008F89  C0                 	db	192
  1276  008F8A                     __end_of_hid_rpt01:
  1277                           	opt stack 0
  1278  008F8A                     _sd003:
  1279                           	opt stack 0
  1280  008F8A  1A                 	db	26
  1281  008F8B  03                 	db	3
  1282  008F8C  0031               	dw	49
  1283  008F8E  0032               	dw	50
  1284  008F90  0033               	dw	51
  1285  008F92  0034               	dw	52
  1286  008F94  0035               	dw	53
  1287  008F96  0036               	dw	54
  1288  008F98  0037               	dw	55
  1289  008F9A  0038               	dw	56
  1290  008F9C  0039               	dw	57
  1291  008F9E  0030               	dw	48
  1292  008FA0  0039               	dw	57
  1293  008FA2  0039               	dw	57
  1294  008FA4                     __end_of_sd003:
  1295                           	opt stack 0
  1296  008FA4                     _device_dsc:
  1297                           	opt stack 0
  1298  008FA4  12                 	db	18
  1299  008FA5  01                 	db	1
  1300  008FA6  0200               	dw	512
  1301  008FA8  00                 	db	0
  1302  008FA9  00                 	db	0
  1303  008FAA  00                 	db	0
  1304  008FAB  08                 	db	8
  1305  008FAC  04D8               	dw	1240
  1306  008FAE  F08E               	dw	61582
  1307  008FB0  0100               	dw	256
  1308  008FB2  01                 	db	1
  1309  008FB3  02                 	db	2
  1310  008FB4  00                 	db	0
  1311  008FB5  01                 	db	1
  1312  008FB6                     __end_of_device_dsc:
  1313                           	opt stack 0
  1314  008FB6                     _bootloader_filename:
  1315                           	opt stack 0
  1316  008FB6  46                 	db	70
  1317  008FB7  49                 	db	73
  1318  008FB8  52                 	db	82
  1319  008FB9  4D                 	db	77
  1320  008FBA  57                 	db	87
  1321  008FBB  41                 	db	65
  1322  008FBC  52                 	db	82
  1323  008FBD  45                 	db	69
  1324  008FBE  00                 	db	0
  1325  008FBF                     __end_of_bootloader_filename:
  1326                           	opt stack 0
  1327  008FBF                     _flash_command_pagesize_528:
  1328                           	opt stack 0
  1329  008FBF  3D                 	db	61
  1330  008FC0  2A                 	db	42
  1331  008FC1  80                 	db	128
  1332  008FC2  A7                 	db	167
  1333  008FC3                     __end_of_flash_command_pagesize_528:
  1334                           	opt stack 0
  1335  008FC3                     _flash_command_pagesize_512:
  1336                           	opt stack 0
  1337  008FC3  3D                 	db	61
  1338  008FC4  2A                 	db	42
  1339  008FC5  80                 	db	128
  1340  008FC6  A6                 	db	166
  1341  008FC7                     __end_of_flash_command_pagesize_512:
  1342                           	opt stack 0
  1343  008FC7                     _bootloader_extension:
  1344                           	opt stack 0
  1345  008FC7  48                 	db	72
  1346  008FC8  45                 	db	69
  1347  008FC9  58                 	db	88
  1348  008FCA  00                 	db	0
  1349  008FCB                     __end_of_bootloader_extension:
  1350                           	opt stack 0
  1351  008FCB                     _sd000:
  1352                           	opt stack 0
  1353  008FCB  04                 	db	4
  1354  008FCC  03                 	db	3
  1355  008FCD  0409               	dw	1033
  1356  008FCF                     __end_of_sd000:
  1357                           	opt stack 0
  1358  0000                     _RPINR22	set	3837
  1359  0000                     _RPOR22	set	3798
  1360  0000                     _RPOR21	set	3797
  1361  0000                     _RPINR21	set	3836
  1362  0000                     _RPINR2	set	3810
  1363  0000                     _RPINR3	set	3811
  1364  0000                     _RPINR1	set	3809
  1365  0000                     _PPSCONbits	set	3775
  1366  0000                     _RTCVALH	set	3899
  1367  0000                     _RTCVALL	set	3898
  1368  0000                     _RTCCAL	set	3902
  1369  0000                     _RTCCFGbits	set	3903
  1370  0000                     _ANCON1bits	set	3913
  1371  0000                     _ANCON0bits	set	3912
  1372  0000                     _UEP0bits	set	3878
  1373  0000                     _UIEbits	set	3894
  1374  0000                     _UADDR	set	3896
  1375  0000                     _UIE	set	3894
  1376  0000                     _UEIE	set	3895
  1377  0000                     _UCFG	set	3897
  1378  0000                     _UEP1	set	3879
  1379  0000                     _UEP0	set	3878
  1380  0000                     _TBLPTR	set	4086
  1381  0000                     _INTCON	set	4082
  1382  0000                     _EECON1	set	4006
  1383  0000                     _TABLAT	set	4085
  1384  0000                     _EECON1bits	set	4006
  1385  0000                     _SSP2CON1bits	set	3954
  1386  0000                     _SSP2STATbits	set	3955
  1387  0000                     _RXADDRL	set	3945
  1388  0000                     _RXADDRH	set	3944
  1389  0000                     _DMABCL	set	3943
  1390  0000                     _DMABCH	set	3942
  1391  0000                     _TXADDRL	set	3947
  1392  0000                     _TXADDRH	set	3946
  1393  0000                     _DMACON2bits	set	3974
  1394  0000                     _DMACON1bits	set	3976
  1395  0000                     _SSP1BUF	set	4041
  1396  0000                     _SSP1CON2bits	set	4037
  1397  0000                     _SSP1CON1bits	set	4038
  1398  0000                     _SSP1ADD	set	4040
  1399  0000                     _SSP1STATbits	set	4039
  1400  0000                     _T1CONbits	set	4045
  1401  0000                     _TMR1L	set	4046
  1402  0000                     _TMR1H	set	4047
  1403  0000                     _PIR1bits	set	3998
  1404  0000                     _LATAbits	set	3977
  1405  0000                     _TRISEbits	set	3990
  1406  0000                     _LATEbits	set	3981
  1407  0000                     _LATCbits	set	3979
  1408  0000                     _TRISAbits	set	3986
  1409  0000                     _TRISBbits	set	3987
  1410  0000                     _LATBbits	set	3978
  1411  0000                     _TRISDbits	set	3989
  1412  0000                     _TRISCbits	set	3988
  1413  0000                     _T0CONbits	set	4053
  1414  0000                     _INTCON2bits	set	4081
  1415  0000                     _EECON2	set	4007
  1416  0000                     _PORTBbits	set	3969
  1417  0000                     _INTCON3bits	set	4080
  1418  0000                     _TMR0L	set	4054
  1419  0000                     _TMR0H	set	4055
  1420  0000                     _INTCONbits	set	4082
  1421  0000                     _LATDbits	set	3980
  1422  0000                     _OSCCON	set	4051
  1423  0000                     _OSCTUNEbits	set	3995
  1424  0000                     _PORTAbits	set	3968
  1425  0000                     _USTAT	set	3940
  1426  0000                     _PIR2bits	set	4001
  1427  0000                     _UCON	set	3941
  1428  0000                     _UIRbits	set	3938
  1429  0000                     _UCONbits	set	3941
  1430  0000                     _UIR	set	3938
  1431  0000                     _UEIR	set	3939
  1432  0000                     _PIE2bits	set	4000
  1433  008FCF                     STR_12:
  1434  008FCF  48                 	db	72	;'H'
  1435  008FD0  65                 	db	101	;'e'
  1436  008FD1  6C                 	db	108	;'l'
  1437  008FD2  6C                 	db	108	;'l'
  1438  008FD3  6F                 	db	111	;'o'
  1439  008FD4  20                 	db	32
  1440  008FD5  57                 	db	87	;'W'
  1441  008FD6  6F                 	db	111	;'o'
  1442  008FD7  72                 	db	114	;'r'
  1443  008FD8  6C                 	db	108	;'l'
  1444  008FD9  64                 	db	100	;'d'
  1445  008FDA  21                 	db	33
  1446  008FDB  00                 	db	0
  1447  008FDC                     STR_9:
  1448  008FDC  53                 	db	83	;'S'
  1449  008FDD  6F                 	db	111	;'o'
  1450  008FDE  6C                 	db	108	;'l'
  1451  008FDF  61                 	db	97	;'a'
  1452  008FE0  72                 	db	114	;'r'
  1453  008FE1  43                 	db	67	;'C'
  1454  008FE2  68                 	db	104	;'h'
  1455  008FE3  61                 	db	97	;'a'
  1456  008FE4  72                 	db	114	;'r'
  1457  008FE5  67                 	db	103	;'g'
  1458  008FE6  72                 	db	114	;'r'
  1459  008FE7  00                 	db	0
  1460  008FE8                     STR_10:
  1461  008FE8  46                 	db	70	;'F'
  1462  008FE9  49                 	db	73	;'I'
  1463  008FEA  4C                 	db	76	;'L'
  1464  008FEB  45                 	db	69	;'E'
  1465  008FEC  20                 	db	32
  1466  008FED  20                 	db	32
  1467  008FEE  20                 	db	32
  1468  008FEF  20                 	db	32
  1469  008FF0  00                 	db	0
  1470  008FF1                     STR_1:
  1471  008FF1  4D                 	db	77	;'M'
  1472  008FF2  53                 	db	83	;'S'
  1473  008FF3  44                 	db	68	;'D'
  1474  008FF4  4F                 	db	79	;'O'
  1475  008FF5  53                 	db	83	;'S'
  1476  008FF6  35                 	db	53	;'5'
  1477  008FF7  2E                 	db	46
  1478  008FF8  30                 	db	48	;'0'
  1479  008FF9  00                 	db	0
  1480  008FFA                     STR_11:
  1481  008FFA  54                 	db	84	;'T'
  1482  008FFB  58                 	db	88	;'X'
  1483  008FFC  54                 	db	84	;'T'
  1484  008FFD  00                 	db	0
  1485  0000                     
  1486                           ; #config settings
  1487  008FFE  00                 	db	0	; dummy byte at the end
  1488  0000                     
  1489                           	psect	cinit
  1490  00547C                     __pcinit:
  1491                           	opt stack 0
  1492  00547C                     start_initialization:
  1493                           	opt stack 0
  1494  00547C                     __initialization:
  1495                           	opt stack 0
  1496                           
  1497                           ; Initialize objects allocated to BANK3 (104 bytes)
  1498                           ; load TBLPTR registers with __pidataBANK3
  1499  00547C  0E48               	movlw	low __pidataBANK3
  1500  00547E  6EF6               	movwf	tblptrl,c
  1501  005480  0E65               	movlw	high __pidataBANK3
  1502  005482  6EF7               	movwf	tblptrh,c
  1503  005484  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1504  005486  6EF8               	movwf	tblptru,c
  1505  005488  EE03  F072         	lfsr	0,__pdataBANK3
  1506  00548C  EE10 F068          	lfsr	1,104
  1507  005490                     copy_data0:
  1508  005490  0009               	tblrd		*+
  1509  005492  CFF5 FFEE          	movff	tablat,postinc0
  1510  005496  50E5               	movf	postdec1,w,c
  1511  005498  50E1               	movf	fsr1l,w,c
  1512  00549A  E1FA               	bnz	copy_data0
  1513                           
  1514                           ; Initialize objects allocated to BANK1 (64 bytes)
  1515                           ; load TBLPTR registers with __pidataBANK1
  1516  00549C  0EE4               	movlw	low __pidataBANK1
  1517  00549E  6EF6               	movwf	tblptrl,c
  1518  0054A0  0E70               	movlw	high __pidataBANK1
  1519  0054A2  6EF7               	movwf	tblptrh,c
  1520  0054A4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1521  0054A6  6EF8               	movwf	tblptru,c
  1522  0054A8  EE01  F0B9         	lfsr	0,__pdataBANK1
  1523  0054AC  EE10 F040          	lfsr	1,64
  1524  0054B0                     copy_data1:
  1525  0054B0  0009               	tblrd		*+
  1526  0054B2  CFF5 FFEE          	movff	tablat,postinc0
  1527  0054B6  50E5               	movf	postdec1,w,c
  1528  0054B8  50E1               	movf	fsr1l,w,c
  1529  0054BA  E1FA               	bnz	copy_data1
  1530                           
  1531                           ; Initialize objects allocated to BANK0 (1 bytes)
  1532                           ; load TBLPTR registers with __pidataBANK0
  1533  0054BC  0EDE               	movlw	low __pidataBANK0
  1534  0054BE  6EF6               	movwf	tblptrl,c
  1535  0054C0  0E79               	movlw	high __pidataBANK0
  1536  0054C2  6EF7               	movwf	tblptrh,c
  1537  0054C4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1538  0054C6  6EF8               	movwf	tblptru,c
  1539  0054C8  0009               	tblrd		*+	;fetch initializer
  1540  0054CA  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1541                           
  1542                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1543  0054CE  EE03  F0DA         	lfsr	0,__pbssBIGRAMll
  1544  0054D2  EE12 F000          	lfsr	1,512
  1545  0054D6                     clear_0:
  1546  0054D6  6AEE               	clrf	postinc0,c
  1547  0054D8  50E5               	movf	postdec1,w,c
  1548  0054DA  50E1               	movf	fsr1l,w,c
  1549  0054DC  E1FC               	bnz	clear_0
  1550  0054DE  50E2               	movf	fsr1h,w,c
  1551  0054E0  E1FA               	bnz	clear_0
  1552                           
  1553                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1554  0054E2  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1555  0054E6  EE14 F000          	lfsr	1,1024
  1556  0054EA                     clear_1:
  1557  0054EA  6AEE               	clrf	postinc0,c
  1558  0054EC  50E5               	movf	postdec1,w,c
  1559  0054EE  50E1               	movf	fsr1l,w,c
  1560  0054F0  E1FC               	bnz	clear_1
  1561  0054F2  50E2               	movf	fsr1h,w,c
  1562  0054F4  E1FA               	bnz	clear_1
  1563                           
  1564                           ; Clear objects allocated to BANK3 (114 bytes)
  1565  0054F6  EE03  F000         	lfsr	0,__pbssBANK3
  1566  0054FA  0E72               	movlw	114
  1567  0054FC                     clear_2:
  1568  0054FC  6AEE               	clrf	postinc0,c
  1569  0054FE  06E8               	decf	wreg,f,c
  1570  005500  E1FD               	bnz	clear_2
  1571                           
  1572                           ; Clear objects allocated to BANK2 (244 bytes)
  1573  005502  EE02  F000         	lfsr	0,__pbssBANK2
  1574  005506  0EF4               	movlw	244
  1575  005508                     clear_3:
  1576  005508  6AEE               	clrf	postinc0,c
  1577  00550A  06E8               	decf	wreg,f,c
  1578  00550C  E1FD               	bnz	clear_3
  1579                           
  1580                           ; Clear objects allocated to BANK1 (185 bytes)
  1581  00550E  EE01  F000         	lfsr	0,__pbssBANK1
  1582  005512  0EB9               	movlw	185
  1583  005514                     clear_4:
  1584  005514  6AEE               	clrf	postinc0,c
  1585  005516  06E8               	decf	wreg,f,c
  1586  005518  E1FD               	bnz	clear_4
  1587                           
  1588                           ; Clear objects allocated to BANK0 (29 bytes)
  1589  00551A  EE00  F0E2         	lfsr	0,__pbssBANK0
  1590  00551E  0E1D               	movlw	29
  1591  005520                     clear_5:
  1592  005520  6AEE               	clrf	postinc0,c
  1593  005522  06E8               	decf	wreg,f,c
  1594  005524  E1FD               	bnz	clear_5
  1595                           
  1596                           ; Clear objects allocated to COMRAM (6 bytes)
  1597  005526  6A5F               	clrf	(__pbssCOMRAM+5)& (0+255),c
  1598  005528  6A5E               	clrf	(__pbssCOMRAM+4)& (0+255),c
  1599  00552A  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1600  00552C  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1601  00552E  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1602  005530  6A5A               	clrf	__pbssCOMRAM& (0+255),c
  1603  005532                     end_of_initialization:
  1604                           	opt stack 0
  1605  005532                     __end_of__initialization:
  1606                           	opt stack 0
  1607  005532  0100               	movlb	0
  1608  005534  EFFC  F026         	goto	_main	;jump to C main() function
  1609                           tblptru	equ	0xFF8
  1610                           tblptrh	equ	0xFF7
  1611                           tblptrl	equ	0xFF6
  1612                           tablat	equ	0xFF5
  1613                           postinc0	equ	0xFEE
  1614                           wreg	equ	0xFE8
  1615                           postdec1	equ	0xFE5
  1616                           fsr1h	equ	0xFE2
  1617                           fsr1l	equ	0xFE1
  1618                           
  1619                           	psect	bssCOMRAM
  1620  00005A                     __pbssCOMRAM:
  1621                           	opt stack 0
  1622  00005A                     _USBInHandle:
  1623                           	opt stack 0
  1624  00005A                     	ds	2
  1625  00005C                     _pBDTEntryEP0OutNext:
  1626                           	opt stack 0
  1627  00005C                     	ds	2
  1628  00005E                     _pBDTEntryEP0OutCurrent:
  1629                           	opt stack 0
  1630  00005E                     	ds	2
  1631                           tblptru	equ	0xFF8
  1632                           tblptrh	equ	0xFF7
  1633                           tblptrl	equ	0xFF6
  1634                           tablat	equ	0xFF5
  1635                           postinc0	equ	0xFEE
  1636                           wreg	equ	0xFE8
  1637                           postdec1	equ	0xFE5
  1638                           fsr1h	equ	0xFE2
  1639                           fsr1l	equ	0xFE1
  1640                           
  1641                           	psect	bssBANK0
  1642  0000E2                     __pbssBANK0:
  1643                           	opt stack 0
  1644  0000E2                     _os:
  1645                           	opt stack 0
  1646  0000E2                     	ds	6
  1647  0000E8                     _inPipes:
  1648                           	opt stack 0
  1649  0000E8                     	ds	6
  1650  0000EE                     _pBDTEntryIn:
  1651                           	opt stack 0
  1652  0000EE                     	ds	6
  1653  0000F4                     _USBMSDInHandle:
  1654                           	opt stack 0
  1655  0000F4                     	ds	2
  1656  0000F6                     _USBMSDOutHandle:
  1657                           	opt stack 0
  1658  0000F6                     	ds	2
  1659  0000F8                     _MSDHostNoData:
  1660                           	opt stack 0
  1661  0000F8                     	ds	1
  1662  0000F9                     _MSDCommandState:
  1663                           	opt stack 0
  1664  0000F9                     	ds	1
  1665  0000FA                     _USBDeferStatusStagePacket:
  1666                           	opt stack 0
  1667  0000FA                     	ds	1
  1668  0000FB                     _controlTransferState:
  1669                           	opt stack 0
  1670  0000FB                     	ds	1
  1671  0000FC                     _USBDeviceState:
  1672                           	opt stack 0
  1673  0000FC                     	ds	1
  1674  0000FD                     _USTATcopy:
  1675                           	opt stack 0
  1676  0000FD                     	ds	1
  1677  0000FE                     _USBActiveConfiguration:
  1678                           	opt stack 0
  1679  0000FE                     	ds	1
  1680                           tblptru	equ	0xFF8
  1681                           tblptrh	equ	0xFF7
  1682                           tblptrl	equ	0xFF6
  1683                           tablat	equ	0xFF5
  1684                           postinc0	equ	0xFEE
  1685                           wreg	equ	0xFE8
  1686                           postdec1	equ	0xFE5
  1687                           fsr1h	equ	0xFE2
  1688                           fsr1l	equ	0xFE1
  1689                           
  1690                           	psect	dataBANK0
  1691  0000FF                     __pdataBANK0:
  1692                           	opt stack 0
  1693  0000FF                     _file_number:
  1694                           	opt stack 0
  1695  0000FF                     	ds	1
  1696                           tblptru	equ	0xFF8
  1697                           tblptrh	equ	0xFF7
  1698                           tblptrl	equ	0xFF6
  1699                           tablat	equ	0xFF5
  1700                           postinc0	equ	0xFEE
  1701                           wreg	equ	0xFE8
  1702                           postdec1	equ	0xFE5
  1703                           fsr1h	equ	0xFE2
  1704                           fsr1l	equ	0xFE1
  1705                           
  1706                           	psect	bssBANK1
  1707  000100                     __pbssBANK1:
  1708                           	opt stack 0
  1709  000100                     _gblCBW:
  1710                           	opt stack 0
  1711  000100                     	ds	31
  1712  00011F                     _gblSenseData:
  1713                           	opt stack 0
  1714  00011F                     	ds	18
  1715  000131                     _outPipes:
  1716                           	opt stack 0
  1717  000131                     	ds	8
  1718  000139                     _pBDTEntryOut:
  1719                           	opt stack 0
  1720  000139                     	ds	6
  1721  00013F                     _extended_linear_address:
  1722                           	opt stack 0
  1723  00013F                     	ds	4
  1724  000143                     _hex_file_size:
  1725                           	opt stack 0
  1726  000143                     	ds	4
  1727  000147                     _hex_file_offset:
  1728                           	opt stack 0
  1729  000147                     	ds	4
  1730  00014B                     _file_maximum_address:
  1731                           	opt stack 0
  1732  00014B                     	ds	4
  1733  00014F                     _file_minimum_address:
  1734                           	opt stack 0
  1735  00014F                     	ds	4
  1736  000153                     _gblBLKLen:
  1737                           	opt stack 0
  1738  000153                     	ds	4
  1739  000157                     _gblNumBLKS:
  1740                           	opt stack 0
  1741  000157                     	ds	4
  1742  00015B                     _LBA:
  1743                           	opt stack 0
  1744  00015B                     	ds	4
  1745  00015F                     _USB1msTickCount:
  1746                           	opt stack 0
  1747  00015F                     	ds	4
  1748  000163                     _FileAddress:
  1749                           	opt stack 0
  1750  000163                     	ds	3
  1751  000166                     _ep_data_out:
  1752                           	opt stack 0
  1753  000166                     	ds	3
  1754  000169                     _ep_data_in:
  1755                           	opt stack 0
  1756  000169                     	ds	3
  1757  00016C                     _flash_pages_written:
  1758                           	opt stack 0
  1759  00016C                     	ds	2
  1760  00016E                     _total_hex_file_entries:
  1761                           	opt stack 0
  1762  00016E                     	ds	2
  1763  000170                     _hex_file_entries:
  1764                           	opt stack 0
  1765  000170                     	ds	2
  1766  000172                     _system_ui_inactive_count:
  1767                           	opt stack 0
  1768  000172                     	ds	2
  1769  000174                     _USBOutHandle:
  1770                           	opt stack 0
  1771  000174                     	ds	2
  1772  000176                     _TransferLength:
  1773                           	opt stack 0
  1774  000176                     	ds	2
  1775  000178                     _gblMediaPresent:
  1776                           	opt stack 0
  1777  000178                     	ds	2
  1778  00017A                     _MSBBufferIndex:
  1779                           	opt stack 0
  1780  00017A                     	ds	2
  1781  00017C                     _ptrNextData:
  1782                           	opt stack 0
  1783  00017C                     	ds	2
  1784  00017E                     _pDst:
  1785                           	opt stack 0
  1786  00017E                     	ds	2
  1787  000180                     _start_from_byte_next:
  1788                           	opt stack 0
  1789  000180                     	ds	1
  1790  000181                     _last_error:
  1791                           	opt stack 0
  1792  000181                     	ds	1
  1793  000182                     _power_state:
  1794                           	opt stack 0
  1795  000182                     	ds	1
  1796  000183                     _userInterfaceStatus:
  1797                           	opt stack 0
  1798  000183                     	ds	1
  1799  000184                     _task_list_write_index:
  1800                           	opt stack 0
  1801  000184                     	ds	1
  1802  000185                     _task_list_read_index:
  1803                           	opt stack 0
  1804  000185                     	ds	1
  1805  000186                     _i2c_frequency:
  1806                           	opt stack 0
  1807  000186                     	ds	1
  1808  000187                     _MSDCBWValid:
  1809                           	opt stack 0
  1810  000187                     	ds	1
  1811  000188                     _SoftDetach:
  1812                           	opt stack 0
  1813  000188                     	ds	1
  1814  000189                     _gblCBWLength:
  1815                           	opt stack 0
  1816  000189                     	ds	1
  1817  00018A                     _MSDRetryAttempt:
  1818                           	opt stack 0
  1819  00018A                     	ds	1
  1820  00018B                     _MSDWriteState:
  1821                           	opt stack 0
  1822  00018B                     	ds	1
  1823  00018C                     _MSDReadState:
  1824                           	opt stack 0
  1825  00018C                     	ds	1
  1826  00018D                     _MSD_State:
  1827                           	opt stack 0
  1828  00018D                     	ds	1
  1829  00018E                     _USBTicksSinceSuspendEnd:
  1830                           	opt stack 0
  1831  00018E                     	ds	1
  1832  00018F                     _USBDeferOUTDataStagePackets:
  1833                           	opt stack 0
  1834  00018F                     	ds	1
  1835  000190                     _USBDeferINDataStagePackets:
  1836                           	opt stack 0
  1837  000190                     	ds	1
  1838  000191                     _USBStatusStageEnabledFlag2:
  1839                           	opt stack 0
  1840  000191                     	ds	1
  1841  000192                     _USBStatusStageEnabledFlag1:
  1842                           	opt stack 0
  1843  000192                     	ds	1
  1844  000193                     _USBStatusStageTimeoutCounter:
  1845                           	opt stack 0
  1846  000193                     	ds	1
  1847  000194                     _BothEP0OutUOWNsSet:
  1848                           	opt stack 0
  1849  000194                     	ds	1
  1850  000195                     _endpoint_number:
  1851                           	opt stack 0
  1852  000195                     	ds	1
  1853  000196                     _USBBusIsSuspended:
  1854                           	opt stack 0
  1855  000196                     	ds	1
  1856  000197                     _RemoteWakeup:
  1857                           	opt stack 0
  1858  000197                     	ds	1
  1859  000198                     _shortPacketStatus:
  1860                           	opt stack 0
  1861  000198                     	ds	1
  1862  000199                     _hex_file_entry:
  1863                           	opt stack 0
  1864  000199                     	ds	23
  1865  0001B0                     _mediaInformation:
  1866                           	opt stack 0
  1867  0001B0                     	ds	5
  1868  0001B5                     _USBAlternateInterface:
  1869                           	opt stack 0
  1870  0001B5                     	ds	2
  1871  0001B7                     _active_protocol:
  1872                           	opt stack 0
  1873  0001B7                     	ds	1
  1874  0001B8                     _idle_rate:
  1875                           	opt stack 0
  1876  0001B8                     	ds	1
  1877                           tblptru	equ	0xFF8
  1878                           tblptrh	equ	0xFF7
  1879                           tblptrl	equ	0xFF6
  1880                           tablat	equ	0xFF5
  1881                           postinc0	equ	0xFEE
  1882                           wreg	equ	0xFE8
  1883                           postdec1	equ	0xFE5
  1884                           fsr1h	equ	0xFE2
  1885                           fsr1l	equ	0xFE1
  1886                           
  1887                           	psect	dataBANK1
  1888  0001B9                     __pdataBANK1:
  1889                           	opt stack 0
  1890  0001B9                     _LUN:
  1891                           	opt stack 0
  1892  0001B9                     	ds	20
  1893  0001CD                     i2c_display_init@F8323:
  1894                           	opt stack 0
  1895  0001CD                     	ds	9
  1896  0001D6                     i2c_display_send_init_sequence@F8320:
  1897                           	opt stack 0
  1898  0001D6                     	ds	9
  1899  0001DF                     system_init@F8463:
  1900                           	opt stack 0
  1901  0001DF                     	ds	9
  1902  0001E8                     system_init@F8459:
  1903                           	opt stack 0
  1904  0001E8                     	ds	9
  1905  0001F1                     system_init@F8465:
  1906                           	opt stack 0
  1907  0001F1                     	ds	4
  1908  0001F5                     system_init@F8461:
  1909                           	opt stack 0
  1910  0001F5                     	ds	4
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           postinc0	equ	0xFEE
  1916                           wreg	equ	0xFE8
  1917                           postdec1	equ	0xFE5
  1918                           fsr1h	equ	0xFE2
  1919                           fsr1l	equ	0xFE1
  1920                           
  1921                           	psect	bssBANK2
  1922  000200                     __pbssBANK2:
  1923                           	opt stack 0
  1924  000200                     _task_list:
  1925                           	opt stack 0
  1926  000200                     	ds	16
  1927  000210                     _calibrationParameters:
  1928                           	opt stack 0
  1929  000210                     	ds	84
  1930  000264                     _display_content:
  1931                           	opt stack 0
  1932  000264                     	ds	80
  1933  0002B4                     _ToSendDataBuffer:
  1934                           	opt stack 0
  1935  0002B4                     	ds	64
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           postinc0	equ	0xFEE
  1941                           wreg	equ	0xFE8
  1942                           postdec1	equ	0xFE5
  1943                           fsr1h	equ	0xFE2
  1944                           fsr1l	equ	0xFE1
  1945                           
  1946                           	psect	bssBANK3
  1947  000300                     __pbssBANK3:
  1948                           	opt stack 0
  1949  000300                     _ReceivedDataBuffer:
  1950                           	opt stack 0
  1951  000300                     	ds	64
  1952  000340                     _file_buffer:
  1953                           	opt stack 0
  1954  000340                     	ds	50
  1955                           tblptru	equ	0xFF8
  1956                           tblptrh	equ	0xFF7
  1957                           tblptrl	equ	0xFF6
  1958                           tablat	equ	0xFF5
  1959                           postinc0	equ	0xFEE
  1960                           wreg	equ	0xFE8
  1961                           postdec1	equ	0xFE5
  1962                           fsr1h	equ	0xFE2
  1963                           fsr1l	equ	0xFE1
  1964                           
  1965                           	psect	dataBANK3
  1966  000372                     __pdataBANK3:
  1967                           	opt stack 0
  1968  000372                     system_init@F8467:
  1969                           	opt stack 0
  1970  000372                     	ds	104
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           postinc0	equ	0xFEE
  1976                           wreg	equ	0xFE8
  1977                           postdec1	equ	0xFE5
  1978                           fsr1h	equ	0xFE2
  1979                           fsr1l	equ	0xFE1
  1980                           
  1981                           	psect	bssBIGRAMlh
  1982  000800                     __pbssBIGRAMlh:
  1983                           	opt stack 0
  1984  000800                     _pageBuffer:
  1985                           	opt stack 0
  1986  000800                     	ds	1024
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           postinc0	equ	0xFEE
  1992                           wreg	equ	0xFE8
  1993                           postdec1	equ	0xFE5
  1994                           fsr1h	equ	0xFE2
  1995                           fsr1l	equ	0xFE1
  1996                           
  1997                           	psect	bssBIGRAMll
  1998  0003DA                     __pbssBIGRAMll:
  1999                           	opt stack 0
  2000  0003DA                     _buffer:
  2001                           	opt stack 0
  2002  0003DA                     	ds	512
  2003                           tblptru	equ	0xFF8
  2004                           tblptrh	equ	0xFF7
  2005                           tblptrl	equ	0xFF6
  2006                           tablat	equ	0xFF5
  2007                           postinc0	equ	0xFEE
  2008                           wreg	equ	0xFE8
  2009                           postdec1	equ	0xFE5
  2010                           fsr1h	equ	0xFE2
  2011                           fsr1l	equ	0xFE1
  2012                           
  2013                           	psect	cstackBANK0
  2014  000060                     __pcstackBANK0:
  2015                           	opt stack 0
  2016  000060                     fat_read_from_file@sector:
  2017                           	opt stack 0
  2018  000060                     system_init@appendtext:
  2019                           	opt stack 0
  2020                           
  2021                           ; 104 bytes @ 0x0
  2022  000060                     	ds	2
  2023  000062                     fat_read_from_file@file_number:
  2024                           	opt stack 0
  2025                           
  2026                           ; 1 bytes @ 0x2
  2027  000062                     	ds	1
  2028  000063                     fat_read_from_file@root:
  2029                           	opt stack 0
  2030                           
  2031                           ; 32 bytes @ 0x3
  2032  000063                     	ds	32
  2033  000083                     fat_read_from_file@cluster:
  2034                           	opt stack 0
  2035                           
  2036                           ; 2 bytes @ 0x23
  2037  000083                     	ds	2
  2038  000085                     fat_read_from_file@offset:
  2039                           	opt stack 0
  2040                           
  2041                           ; 2 bytes @ 0x25
  2042  000085                     	ds	2
  2043  000087                     fat_read_from_file@read_length:
  2044                           	opt stack 0
  2045                           
  2046                           ; 2 bytes @ 0x27
  2047  000087                     	ds	2
  2048  000089                     fat_read_from_file@position:
  2049                           	opt stack 0
  2050                           
  2051                           ; 4 bytes @ 0x29
  2052  000089                     	ds	4
  2053  00008D                     __bootloader_program@buffer:
  2054                           	opt stack 0
  2055                           
  2056                           ; 2 bytes @ 0x2D
  2057  00008D                     	ds	2
  2058  00008F                     __bootloader_program@entry_page:
  2059                           	opt stack 0
  2060                           
  2061                           ; 2 bytes @ 0x2F
  2062  00008F                     	ds	2
  2063  000091                     __bootloader_program@address_within_page:
  2064                           	opt stack 0
  2065                           
  2066                           ; 2 bytes @ 0x31
  2067  000091                     	ds	2
  2068  000093                     __bootloader_program@return_value:
  2069                           	opt stack 0
  2070                           
  2071                           ; 4 bytes @ 0x33
  2072  000093                     	ds	4
  2073  000097                     __bootloader_program@address32:
  2074                           	opt stack 0
  2075                           
  2076                           ; 4 bytes @ 0x37
  2077  000097                     	ds	4
  2078  00009B                     __bootloader_program@start_from_byte:
  2079                           	opt stack 0
  2080                           
  2081                           ; 1 bytes @ 0x3B
  2082  00009B                     	ds	1
  2083  00009C                     __bootloader_program@cntr:
  2084                           	opt stack 0
  2085                           
  2086                           ; 2 bytes @ 0x3C
  2087  00009C                     	ds	2
  2088  00009E                     __bootloader_program@page_to_write:
  2089                           	opt stack 0
  2090                           
  2091                           ; 2 bytes @ 0x3E
  2092  00009E                     	ds	42
  2093  0000C8                     system_init@filename:
  2094                           	opt stack 0
  2095                           
  2096                           ; 9 bytes @ 0x68
  2097  0000C8                     	ds	9
  2098  0000D1                     system_init@filename2:
  2099                           	opt stack 0
  2100                           
  2101                           ; 9 bytes @ 0x71
  2102  0000D1                     	ds	9
  2103  0000DA                     system_init@extension:
  2104                           	opt stack 0
  2105                           
  2106                           ; 4 bytes @ 0x7A
  2107  0000DA                     	ds	4
  2108  0000DE                     system_init@extension2:
  2109                           	opt stack 0
  2110                           
  2111                           ; 4 bytes @ 0x7E
  2112  0000DE                     	ds	4
  2113                           tblptru	equ	0xFF8
  2114                           tblptrh	equ	0xFF7
  2115                           tblptrl	equ	0xFF6
  2116                           tablat	equ	0xFF5
  2117                           postinc0	equ	0xFEE
  2118                           wreg	equ	0xFE8
  2119                           postdec1	equ	0xFE5
  2120                           fsr1h	equ	0xFE2
  2121                           fsr1l	equ	0xFE1
  2122                           
  2123                           	psect	cstackCOMRAM
  2124  000001                     __pcstackCOMRAM:
  2125                           	opt stack 0
  2126  000001                     ??_USBStdGetDscHandler:
  2127  000001                     ??_USBStdGetStatusHandler:
  2128  000001                     ??__i2c_wait_idle:
  2129  000001                     ??__display_clear:
  2130  000001                     ?_USBTransferOnePacket:
  2131                           	opt stack 0
  2132  000001                     ?_ExternalFlash_MediaInitialize:
  2133                           	opt stack 0
  2134  000001                     ?_ExternalFlash_SectorSizeRead:
  2135                           	opt stack 0
  2136  000001                     ?_bootloader_get_entries:
  2137                           	opt stack 0
  2138  000001                     ?_bootloader_get_total_entries:
  2139                           	opt stack 0
  2140  000001                     ?_bootloader_get_rec_address:
  2141                           	opt stack 0
  2142  000001                     ?_bootloader_get_flashPagesWritten:
  2143                           	opt stack 0
  2144  000001                     ?_strncmp:
  2145                           	opt stack 0
  2146  000001                     ?_internalFlash_pageFromAddress:
  2147                           	opt stack 0
  2148  000001                     ?_internalFlash_getBuffer:
  2149                           	opt stack 0
  2150  000001                     ?__sector_from_cluster:
  2151                           	opt stack 0
  2152  000001                     ?___lwdiv:
  2153                           	opt stack 0
  2154  000001                     ?___lwmod:
  2155                           	opt stack 0
  2156  000001                     ?_ExternalFlash_CapacityRead:
  2157                           	opt stack 0
  2158  000001                     ?_bootloader_get_file_size:
  2159                           	opt stack 0
  2160  000001                     ?_internalFlash_addressFromPage:
  2161                           	opt stack 0
  2162  000001                     ?___lldiv:
  2163                           	opt stack 0
  2164  000001                     ?___llmod:
  2165                           	opt stack 0
  2166  000001                     USBTransferOnePacket@dir:
  2167                           	opt stack 0
  2168  000001                     USBStallEndpoint@dir:
  2169                           	opt stack 0
  2170  000001                     USBConfigureEndpoint@direction:
  2171                           	opt stack 0
  2172  000001                     USBCtrlTrfTxService@byteToSend:
  2173                           	opt stack 0
  2174  000001                     USBCtrlTrfRxService@i:
  2175                           	opt stack 0
  2176  000001                     __i2c_send@dat:
  2177                           	opt stack 0
  2178  000001                     i2c_set_frequency@frequency:
  2179                           	opt stack 0
  2180  000001                     get_next_eeprom_write_task@task:
  2181                           	opt stack 0
  2182  000001                     display_get_character@position:
  2183                           	opt stack 0
  2184  000001                     __display_start@cntr:
  2185                           	opt stack 0
  2186  000001                     rtcc_set_year@year:
  2187                           	opt stack 0
  2188  000001                     rtcc_set_month@month:
  2189                           	opt stack 0
  2190  000001                     rtcc_set_day@day:
  2191                           	opt stack 0
  2192  000001                     rtcc_set_hours@hours:
  2193                           	opt stack 0
  2194  000001                     rtcc_set_minutes@minutes:
  2195                           	opt stack 0
  2196  000001                     rtcc_set_seconds@seconds:
  2197                           	opt stack 0
  2198  000001                     hexCharToUint8@c:
  2199                           	opt stack 0
  2200  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2201                           	opt stack 0
  2202  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2203                           	opt stack 0
  2204  000001                     SYSTEM_Initialize@pll_startup_counter:
  2205                           	opt stack 0
  2206  000001                     __i2c_eeprom_load_default_calibration@buffer:
  2207                           	opt stack 0
  2208  000001                     __flash_spi_tx@data:
  2209                           	opt stack 0
  2210  000001                     __flash_spi_tx_tx@command:
  2211                           	opt stack 0
  2212  000001                     __flash_spi_tx_rx@command:
  2213                           	opt stack 0
  2214  000001                     ExternalFlash_MediaInitialize@config:
  2215                           	opt stack 0
  2216  000001                     ExternalFlash_SectorSizeRead@config:
  2217                           	opt stack 0
  2218  000001                     ExternalFlash_CapacityRead@config:
  2219                           	opt stack 0
  2220  000001                     ExternalFlash_MediaDetect@config:
  2221                           	opt stack 0
  2222  000001                     ExternalFlash_WriteProtectStateGet@config:
  2223                           	opt stack 0
  2224  000001                     __sector_from_cluster@fat_cluster:
  2225                           	opt stack 0
  2226  000001                     __get_mbr@idx:
  2227                           	opt stack 0
  2228  000001                     __get_fbr@idx:
  2229                           	opt stack 0
  2230  000001                     __get_fat@idx:
  2231                           	opt stack 0
  2232  000001                     __get_root@idx:
  2233                           	opt stack 0
  2234  000001                     __get_data@idx:
  2235                           	opt stack 0
  2236  000001                     internalFlash_addressFromPage@page:
  2237                           	opt stack 0
  2238  000001                     ___lwdiv@dividend:
  2239                           	opt stack 0
  2240  000001                     ___lwmod@dividend:
  2241                           	opt stack 0
  2242  000001                     memcpy@d1:
  2243                           	opt stack 0
  2244  000001                     memset@p1:
  2245                           	opt stack 0
  2246  000001                     strncmp@s1:
  2247                           	opt stack 0
  2248  000001                     __bootloader_check_address@address:
  2249                           	opt stack 0
  2250  000001                     internalFlash_pageFromAddress@address:
  2251                           	opt stack 0
  2252  000001                     ___lldiv@dividend:
  2253                           	opt stack 0
  2254  000001                     ___llmod@dividend:
  2255                           	opt stack 0
  2256                           
  2257                           ; 4 bytes @ 0x0
  2258  000001                     	ds	1
  2259  000002                     ??_USBConfigureEndpoint:
  2260  000002                     ??_display_get_character:
  2261  000002                     ??_USBStallEndpoint:
  2262  000002                     USBCtrlTrfRxService@byteToRead:
  2263                           	opt stack 0
  2264  000002                     USBCtrlTrfInHandler@lastDTS:
  2265                           	opt stack 0
  2266  000002                     __parse_command_long@data:
  2267                           	opt stack 0
  2268  000002                     schedule_eeprom_write_task@task:
  2269                           	opt stack 0
  2270  000002                     hexCharToUint8@ascii:
  2271                           	opt stack 0
  2272  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2273                           	opt stack 0
  2274  000002                     USBTransferOnePacket@data:
  2275                           	opt stack 0
  2276  000002                     USBStdGetStatusHandler@p:
  2277                           	opt stack 0
  2278                           
  2279                           ; 2 bytes @ 0x1
  2280  000002                     	ds	1
  2281  000003                     ??_MSDComputeDeviceInAndResidue:
  2282  000003                     ??__get_mbr:
  2283  000003                     ??__get_fbr:
  2284  000003                     ??__get_fat:
  2285  000003                     ??__get_root:
  2286  000003                     ?_hexCharsToUint16:
  2287                           	opt stack 0
  2288  000003                     __parse_command_long@cmd:
  2289                           	opt stack 0
  2290  000003                     __i2c_eeprom_load_default_calibration@index:
  2291                           	opt stack 0
  2292  000003                     schedule_eeprom_write_task@idx:
  2293                           	opt stack 0
  2294  000003                     __display_clear@row:
  2295                           	opt stack 0
  2296  000003                     hexCharsToUint8@c2:
  2297                           	opt stack 0
  2298  000003                     hexCharsToUint16@c2:
  2299                           	opt stack 0
  2300  000003                     SYSTEM_Initialize@pll_startup_counter_2822:
  2301                           	opt stack 0
  2302  000003                     __flash_spi_tx@length:
  2303                           	opt stack 0
  2304  000003                     __flash_spi_tx_tx@command_length:
  2305                           	opt stack 0
  2306  000003                     __flash_spi_tx_rx@command_length:
  2307                           	opt stack 0
  2308  000003                     internalFlash_erasePage@page:
  2309                           	opt stack 0
  2310  000003                     internalFlash_writePage@page:
  2311                           	opt stack 0
  2312  000003                     ___lwdiv@divisor:
  2313                           	opt stack 0
  2314  000003                     ___lwmod@divisor:
  2315                           	opt stack 0
  2316  000003                     memset@c:
  2317                           	opt stack 0
  2318  000003                     strncmp@s2:
  2319                           	opt stack 0
  2320  000003                     memcpy@s1:
  2321                           	opt stack 0
  2322                           
  2323                           ; 3 bytes @ 0x2
  2324  000003                     	ds	1
  2325  000004                     ??_hexCharsToUint8:
  2326  000004                     USBTransferOnePacket@len:
  2327                           	opt stack 0
  2328  000004                     __parse_command_calibration@item:
  2329                           	opt stack 0
  2330  000004                     display_get_character@line:
  2331                           	opt stack 0
  2332  000004                     __display_clear@col:
  2333                           	opt stack 0
  2334  000004                     hexCharsToUint16@c3:
  2335                           	opt stack 0
  2336                           
  2337                           ; 1 bytes @ 0x3
  2338  000004                     	ds	1
  2339  000005                     ??_USBTransferOnePacket:
  2340  000005                     ??__fill_buffer_get_display1:
  2341  000005                     ??__fill_buffer_get_display2:
  2342  000005                     ??_internalFlash_pageFromAddress:
  2343  000005                     ??__flash_spi_tx:
  2344  000005                     SYSTEM_Initialize@state:
  2345                           	opt stack 0
  2346  000005                     __parse_command_calibration@dat1:
  2347                           	opt stack 0
  2348  000005                     hexCharsToUint8@c1:
  2349                           	opt stack 0
  2350  000005                     hexCharsToUint16@c4:
  2351                           	opt stack 0
  2352  000005                     __bootloader_check_address@dataLength:
  2353                           	opt stack 0
  2354  000005                     ___lwmod@counter:
  2355                           	opt stack 0
  2356  000005                     __flash_spi_tx_tx@data:
  2357                           	opt stack 0
  2358  000005                     __flash_spi_tx_rx@data:
  2359                           	opt stack 0
  2360  000005                     ___lwdiv@quotient:
  2361                           	opt stack 0
  2362  000005                     memset@n:
  2363                           	opt stack 0
  2364  000005                     strncmp@len:
  2365                           	opt stack 0
  2366  000005                     internalFlash_erasePage@address:
  2367                           	opt stack 0
  2368  000005                     internalFlash_writePage@address:
  2369                           	opt stack 0
  2370  000005                     internalFlash_addressFromPage@address:
  2371                           	opt stack 0
  2372  000005                     ___lldiv@divisor:
  2373                           	opt stack 0
  2374  000005                     ___llmod@divisor:
  2375                           	opt stack 0
  2376                           
  2377                           ; 4 bytes @ 0x4
  2378  000005                     	ds	1
  2379  000006                     ??_hexCharsToUint16:
  2380  000006                     ??__bootloader_check_address:
  2381  000006                     USBStallEndpoint@ep:
  2382                           	opt stack 0
  2383  000006                     USBConfigureEndpoint@EPNum:
  2384                           	opt stack 0
  2385  000006                     __fill_buffer_get_display1@cntr:
  2386                           	opt stack 0
  2387  000006                     __fill_buffer_get_display2@cntr:
  2388                           	opt stack 0
  2389  000006                     __parse_command_calibration@dat2:
  2390                           	opt stack 0
  2391  000006                     hexCharsToUint8@retVal:
  2392                           	opt stack 0
  2393  000006                     __i2c_write@data:
  2394                           	opt stack 0
  2395  000006                     __i2c_read@data:
  2396                           	opt stack 0
  2397  000006                     i2c_display_write_fixed@data:
  2398                           	opt stack 0
  2399  000006                     memcpy@n:
  2400                           	opt stack 0
  2401                           
  2402                           ; 2 bytes @ 0x5
  2403  000006                     	ds	1
  2404  000007                     ??_strncmp:
  2405  000007                     __fill_buffer_get_display1@line:
  2406                           	opt stack 0
  2407  000007                     __fill_buffer_get_display2@line:
  2408                           	opt stack 0
  2409  000007                     __parse_command_calibration@dat3:
  2410                           	opt stack 0
  2411  000007                     ___lwdiv@counter:
  2412                           	opt stack 0
  2413  000007                     USBStallEndpoint@p:
  2414                           	opt stack 0
  2415  000007                     USBConfigureEndpoint@handle:
  2416                           	opt stack 0
  2417  000007                     __flash_spi_tx_tx@data_length:
  2418                           	opt stack 0
  2419  000007                     __flash_spi_tx_rx@data_length:
  2420                           	opt stack 0
  2421  000007                     memset@p:
  2422                           	opt stack 0
  2423                           
  2424                           ; 2 bytes @ 0x6
  2425  000007                     	ds	1
  2426  000008                     ??__parse_command_calibration:
  2427  000008                     __fill_buffer_get_display1@position:
  2428                           	opt stack 0
  2429  000008                     __fill_buffer_get_display2@position:
  2430                           	opt stack 0
  2431  000008                     __i2c_write@length:
  2432                           	opt stack 0
  2433  000008                     __i2c_read@length:
  2434                           	opt stack 0
  2435  000008                     i2c_display_write_fixed@length:
  2436                           	opt stack 0
  2437  000008                     utoa@buf:
  2438                           	opt stack 0
  2439  000008                     memcpy@s:
  2440                           	opt stack 0
  2441                           
  2442                           ; 3 bytes @ 0x7
  2443  000008                     	ds	1
  2444  000009                     ??__i2c_read:
  2445  000009                     ??__flash_spi_tx_tx:
  2446  000009                     ??__flash_spi_tx_rx:
  2447  000009                     ?_internalFlash_addressWithinPage:
  2448                           	opt stack 0
  2449  000009                     USBDeviceInit@i:
  2450                           	opt stack 0
  2451  000009                     USBEnableEndpoint@options:
  2452                           	opt stack 0
  2453  000009                     USBTransferOnePacket@ep:
  2454                           	opt stack 0
  2455  000009                     MSDErrorHandler@ErrorCase:
  2456                           	opt stack 0
  2457  000009                     __i2c_write@slave_address:
  2458                           	opt stack 0
  2459  000009                     i2c_display_write_fixed@pos:
  2460                           	opt stack 0
  2461  000009                     __flash_wakeup@command:
  2462                           	opt stack 0
  2463  000009                     hexCharsToUint16@c1:
  2464                           	opt stack 0
  2465  000009                     ___llmod@counter:
  2466                           	opt stack 0
  2467  000009                     internalFlash_writePage@cntr:
  2468                           	opt stack 0
  2469  000009                     internalFlash_addressWithinPage@address:
  2470                           	opt stack 0
  2471  000009                     ___lldiv@quotient:
  2472                           	opt stack 0
  2473                           
  2474                           ; 4 bytes @ 0x8
  2475  000009                     	ds	1
  2476  00000A                     MSDErrorHandler@OldMSD_State:
  2477                           	opt stack 0
  2478  00000A                     __i2c_write@cntr:
  2479                           	opt stack 0
  2480  00000A                     __bootloader_check_address@worst_case:
  2481                           	opt stack 0
  2482  00000A                     USBEnableEndpoint@p:
  2483                           	opt stack 0
  2484  00000A                     USBTransferOnePacket@handle:
  2485                           	opt stack 0
  2486  00000A                     __parse_command_calibration@parameter:
  2487                           	opt stack 0
  2488  00000A                     hexCharsToUint16@retVal:
  2489                           	opt stack 0
  2490  00000A                     utoa@val:
  2491                           	opt stack 0
  2492                           
  2493                           ; 2 bytes @ 0x9
  2494  00000A                     	ds	1
  2495  00000B                     __ic2_display_set_address@address:
  2496                           	opt stack 0
  2497  00000B                     i2c_digipot_backlight@level:
  2498                           	opt stack 0
  2499  00000B                     __bootloader_check_address@byte_status:
  2500                           	opt stack 0
  2501  00000B                     internalFlash_writePage@block_cntr:
  2502                           	opt stack 0
  2503  00000B                     i2c_digipot_reset_on@data_array:
  2504                           	opt stack 0
  2505  00000B                     i2c_digipot_reset_off@data_array:
  2506                           	opt stack 0
  2507  00000B                     i2c_eeprom_writeByte@address:
  2508                           	opt stack 0
  2509  00000B                     i2c_eeprom_write@address:
  2510                           	opt stack 0
  2511  00000B                     memcpy@d:
  2512                           	opt stack 0
  2513  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2514                           	opt stack 0
  2515  00000B                     i2c_display_send_init_sequence@init_sequence:
  2516                           	opt stack 0
  2517                           
  2518                           ; 9 bytes @ 0xA
  2519  00000B                     	ds	1
  2520  00000C                     ??_USBMSDInit:
  2521  00000C                     ?_parseHexFileEntry:
  2522                           	opt stack 0
  2523  00000C                     USBEnableEndpoint@ep:
  2524                           	opt stack 0
  2525  00000C                     __bootloader_check_address@cntr:
  2526                           	opt stack 0
  2527  00000C                     internalFlash_writePage@byte_cntr:
  2528                           	opt stack 0
  2529  00000C                     _USBCheckMSDRequest$2316:
  2530                           	opt stack 0
  2531  00000C                     MSDTransferTerminated@handle:
  2532                           	opt stack 0
  2533  00000C                     __ic2_display_set_address@data_array:
  2534                           	opt stack 0
  2535  00000C                     i2c_digipot_backlight@data_array:
  2536                           	opt stack 0
  2537  00000C                     parseHexFileEntry@data:
  2538                           	opt stack 0
  2539  00000C                     utoa@base:
  2540                           	opt stack 0
  2541                           
  2542                           ; 2 bytes @ 0xB
  2543  00000C                     	ds	1
  2544  00000D                     ?__flash_get_status:
  2545                           	opt stack 0
  2546  00000D                     i2c_eeprom_writeByte@data:
  2547                           	opt stack 0
  2548  00000D                     ___lldiv@counter:
  2549                           	opt stack 0
  2550  00000D                     memcpy@tmp:
  2551                           	opt stack 0
  2552  00000D                     i2c_eeprom_write@data:
  2553                           	opt stack 0
  2554  00000D                     internalFlash_addressWithinPage@page:
  2555                           	opt stack 0
  2556                           
  2557                           ; 2 bytes @ 0xC
  2558  00000D                     	ds	1
  2559  00000E                     ??_i2c_eeprom_writeByte:
  2560  00000E                     i2c_display_cursor@position:
  2561                           	opt stack 0
  2562  00000E                     _USBCheckMSDRequest$2317:
  2563                           	opt stack 0
  2564  00000E                     _MSDTransferTerminated$2404:
  2565                           	opt stack 0
  2566  00000E                     utoa@v:
  2567                           	opt stack 0
  2568  00000E                     parseHexFileEntry@offset:
  2569                           	opt stack 0
  2570  00000E                     internalFlash_read@address:
  2571                           	opt stack 0
  2572                           
  2573                           ; 4 bytes @ 0xD
  2574  00000E                     	ds	1
  2575  00000F                     ??_internalFlash_addressWithinPage:
  2576  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2577                           	opt stack 0
  2578  00000F                     i2c_display_cursor@line:
  2579                           	opt stack 0
  2580  00000F                     i2c_eeprom_write@length:
  2581                           	opt stack 0
  2582  00000F                     __flash_get_status@command:
  2583                           	opt stack 0
  2584                           
  2585                           ; 1 bytes @ 0xE
  2586  00000F                     	ds	1
  2587  000010                     ??_i2c_eeprom_write:
  2588  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2589                           	opt stack 0
  2590  000010                     __i2c_read@slave_address:
  2591                           	opt stack 0
  2592  000010                     i2c_display_cursor@address:
  2593                           	opt stack 0
  2594  000010                     utoa@c:
  2595                           	opt stack 0
  2596  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2597                           	opt stack 0
  2598  000010                     __flash_get_status@status:
  2599                           	opt stack 0
  2600                           
  2601                           ; 2 bytes @ 0xF
  2602  000010                     	ds	1
  2603  000011                     MSDCheckForErrorCases@DeviceNoData:
  2604                           	opt stack 0
  2605  000011                     __i2c_read@cntr:
  2606                           	opt stack 0
  2607  000011                     i2c_eeprom_writeByte@dat:
  2608                           	opt stack 0
  2609  000011                     itoa@buf:
  2610                           	opt stack 0
  2611                           
  2612                           ; 2 bytes @ 0x10
  2613  000011                     	ds	1
  2614  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2615                           	opt stack 0
  2616  000012                     i2c_eeprom_readByte@address:
  2617                           	opt stack 0
  2618  000012                     i2c_eeprom_read@address:
  2619                           	opt stack 0
  2620  000012                     flash_is_busy@status:
  2621                           	opt stack 0
  2622  000012                     parseHexFileEntry@hexEntry:
  2623                           	opt stack 0
  2624  000012                     internalFlash_read@data_length:
  2625                           	opt stack 0
  2626                           
  2627                           ; 2 bytes @ 0x11
  2628  000012                     	ds	1
  2629  000013                     i2c_eeprom_writeByte@slave_address:
  2630                           	opt stack 0
  2631  000013                     itoa@val:
  2632                           	opt stack 0
  2633  000013                     internalFlash_addressWithinPage@page_start_address:
  2634                           	opt stack 0
  2635  000013                     i2c_eeprom_write@dat:
  2636                           	opt stack 0
  2637                           
  2638                           ; 17 bytes @ 0x12
  2639  000013                     	ds	1
  2640  000014                     ??_i2c_eeprom_readByte:
  2641  000014                     ??_parseHexFileEntry:
  2642  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2643                           	opt stack 0
  2644  000014                     i2c_eeprom_read@data:
  2645                           	opt stack 0
  2646  000014                     __flash_compare_page_to_buffer@page:
  2647                           	opt stack 0
  2648  000014                     __flash_write_to_buffer@start:
  2649                           	opt stack 0
  2650  000014                     __flash_write_page_from_buffer@page:
  2651                           	opt stack 0
  2652  000014                     flash_partial_read@page:
  2653                           	opt stack 0
  2654  000014                     internalFlash_read@buffer:
  2655                           	opt stack 0
  2656  000014                     __flash_set_page_size@command:
  2657                           	opt stack 0
  2658                           
  2659                           ; 4 bytes @ 0x13
  2660  000014                     	ds	1
  2661  000015                     itoa@base:
  2662                           	opt stack 0
  2663                           
  2664                           ; 2 bytes @ 0x14
  2665  000015                     	ds	1
  2666  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2667  000016                     i2c_eeprom_read@length:
  2668                           	opt stack 0
  2669  000016                     __flash_compare_page_to_buffer@buffer:
  2670                           	opt stack 0
  2671  000016                     __flash_write_page_from_buffer@buffer:
  2672                           	opt stack 0
  2673  000016                     __flash_write_to_buffer@data:
  2674                           	opt stack 0
  2675  000016                     flash_partial_read@start:
  2676                           	opt stack 0
  2677  000016                     internalFlash_readPage@page:
  2678                           	opt stack 0
  2679                           
  2680                           ; 2 bytes @ 0x15
  2681  000016                     	ds	1
  2682  000017                     ??_i2c_eeprom_read:
  2683  000017                     ??__flash_compare_page_to_buffer:
  2684  000017                     ??__flash_write_page_from_buffer:
  2685  000017                     i2c_eeprom_readByte@slave_address:
  2686                           	opt stack 0
  2687  000017                     itoa@cp:
  2688                           	opt stack 0
  2689                           
  2690                           ; 2 bytes @ 0x16
  2691  000017                     	ds	1
  2692  000018                     ??_USBStdFeatureReqHandler:
  2693  000018                     USBStdSetCfgHandler@i:
  2694                           	opt stack 0
  2695  000018                     i2c_eeprom_readByte@addr:
  2696                           	opt stack 0
  2697  000018                     i2c_eeprom_read@addr:
  2698                           	opt stack 0
  2699  000018                     __flash_set_page_size@size:
  2700                           	opt stack 0
  2701  000018                     __flash_write_to_buffer@data_length:
  2702                           	opt stack 0
  2703  000018                     flash_partial_read@length:
  2704                           	opt stack 0
  2705  000018                     internalFlash_readPage@address:
  2706                           	opt stack 0
  2707                           
  2708                           ; 4 bytes @ 0x17
  2709  000018                     	ds	1
  2710  000019                     i2c_eeprom_read@slave_address:
  2711                           	opt stack 0
  2712  000019                     USBStdFeatureReqHandler@pUEP:
  2713                           	opt stack 0
  2714  000019                     __display_itoa_u16@value:
  2715                           	opt stack 0
  2716                           
  2717                           ; 4 bytes @ 0x18
  2718  000019                     	ds	1
  2719  00001A                     ??_i2c_eeprom_read_calibration:
  2720  00001A                     __flash_write_to_buffer@buffer:
  2721                           	opt stack 0
  2722  00001A                     __flash_compare_page_to_buffer@status:
  2723                           	opt stack 0
  2724  00001A                     flash_partial_read@data:
  2725                           	opt stack 0
  2726  00001A                     __flash_write_page_from_buffer@command:
  2727                           	opt stack 0
  2728  00001A                     rtcc_read_eeprom@date:
  2729                           	opt stack 0
  2730                           
  2731                           ; 6 bytes @ 0x19
  2732  00001A                     	ds	1
  2733  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2734                           	opt stack 0
  2735  00001B                     __flash_write_to_buffer@command:
  2736                           	opt stack 0
  2737                           
  2738                           ; 4 bytes @ 0x1A
  2739  00001B                     	ds	1
  2740  00001C                     ??_flash_partial_read:
  2741  00001C                     parseHexFileEntry@i:
  2742                           	opt stack 0
  2743  00001C                     USBStdFeatureReqHandler@p:
  2744                           	opt stack 0
  2745  00001C                     i2c_eeprom_read_calibration@buffer:
  2746                           	opt stack 0
  2747  00001C                     __flash_compare_page_to_buffer@command:
  2748                           	opt stack 0
  2749                           
  2750                           ; 4 bytes @ 0x1B
  2751  00001C                     	ds	1
  2752  00001D                     __display_itoa_u16@text:
  2753                           	opt stack 0
  2754                           
  2755                           ; 2 bytes @ 0x1C
  2756  00001D                     	ds	1
  2757  00001E                     ??_USBCtrlEPService:
  2758  00001E                     
  2759                           ; 1 bytes @ 0x1D
  2760  00001E                     	ds	1
  2761  00001F                     ??__display_verify:
  2762  00001F                     ??__display_checked:
  2763  00001F                     __display_programming@cntr:
  2764                           	opt stack 0
  2765  00001F                     __display_done@cntr:
  2766                           	opt stack 0
  2767  00001F                     __display_itoa_u32@value:
  2768                           	opt stack 0
  2769                           
  2770                           ; 4 bytes @ 0x1E
  2771  00001F                     	ds	1
  2772  000020                     USBDeviceTasks@i:
  2773                           	opt stack 0
  2774  000020                     i2c_eeprom_read_calibration@addr:
  2775                           	opt stack 0
  2776  000020                     flash_page_write@page:
  2777                           	opt stack 0
  2778  000020                     flash_partial_read@command:
  2779                           	opt stack 0
  2780                           
  2781                           ; 4 bytes @ 0x1F
  2782  000020                     	ds	1
  2783  000021                     __display_verify@cntr:
  2784                           	opt stack 0
  2785  000021                     __display_checked@start:
  2786                           	opt stack 0
  2787                           
  2788                           ; 1 bytes @ 0x20
  2789  000021                     	ds	1
  2790  000022                     i2c_eeprom_read_calibration@cntr:
  2791                           	opt stack 0
  2792  000022                     __display_checked@cntr:
  2793                           	opt stack 0
  2794  000022                     flash_page_write@data:
  2795                           	opt stack 0
  2796                           
  2797                           ; 2 bytes @ 0x21
  2798  000022                     	ds	1
  2799  000023                     __display_itoa_u32@text:
  2800                           	opt stack 0
  2801                           
  2802                           ; 2 bytes @ 0x22
  2803  000023                     	ds	1
  2804  000024                     i2c_eeprom_write@slave_address:
  2805                           	opt stack 0
  2806  000024                     flash_page_write@match:
  2807                           	opt stack 0
  2808  000024                     flash_partial_read@address:
  2809                           	opt stack 0
  2810                           
  2811                           ; 4 bytes @ 0x23
  2812  000024                     	ds	1
  2813  000025                     ??__display_found:
  2814  000025                     i2c_eeprom_write@cntr:
  2815                           	opt stack 0
  2816  000025                     __display_failed@cntr:
  2817                           	opt stack 0
  2818  000025                     ExternalFlash_SectorWrite@config:
  2819                           	opt stack 0
  2820  000025                     fat_format@cntr:
  2821                           	opt stack 0
  2822                           
  2823                           ; 2 bytes @ 0x24
  2824  000025                     	ds	1
  2825  000026                     ??__write_calibration:
  2826  000026                     rtcc_write_eeprom@date:
  2827                           	opt stack 0
  2828                           
  2829                           ; 6 bytes @ 0x25
  2830  000026                     	ds	1
  2831  000027                     __display_found@start:
  2832                           	opt stack 0
  2833  000027                     ExternalFlash_SectorWrite@sector_addr:
  2834                           	opt stack 0
  2835                           
  2836                           ; 4 bytes @ 0x26
  2837  000027                     	ds	1
  2838  000028                     ?__read_fat:
  2839                           	opt stack 0
  2840  000028                     ?_fat_get_file_size:
  2841                           	opt stack 0
  2842  000028                     __display_found@cntr:
  2843                           	opt stack 0
  2844  000028                     flash_page_read@page:
  2845                           	opt stack 0
  2846  000028                     __read_fat@cluster:
  2847                           	opt stack 0
  2848  000028                     __read_root@data:
  2849                           	opt stack 0
  2850  000028                     fat_find_file@name:
  2851                           	opt stack 0
  2852  000028                     __write_calibration@buffer:
  2853                           	opt stack 0
  2854                           
  2855                           ; 16 bytes @ 0x27
  2856  000028                     	ds	1
  2857  000029                     ??_display_prepare:
  2858                           
  2859                           ; 1 bytes @ 0x28
  2860  000029                     	ds	1
  2861  00002A                     ??__read_root:
  2862  00002A                     flash_page_read@data:
  2863                           	opt stack 0
  2864  00002A                     __read_fat@fat_sector:
  2865                           	opt stack 0
  2866  00002A                     fat_find_file@extension:
  2867                           	opt stack 0
  2868                           
  2869                           ; 2 bytes @ 0x29
  2870  00002A                     	ds	1
  2871  00002B                     display_prepare@mode:
  2872                           	opt stack 0
  2873  00002B                     ExternalFlash_SectorWrite@buffer:
  2874                           	opt stack 0
  2875  00002B                     __read_root@root_sector:
  2876                           	opt stack 0
  2877                           
  2878                           ; 2 bytes @ 0x2A
  2879  00002B                     	ds	1
  2880  00002C                     ??_fat_get_file_size:
  2881  00002C                     ??_fat_get_format_status:
  2882  00002C                     __parse_command_short@cmd:
  2883                           	opt stack 0
  2884  00002C                     ExternalFlash_SectorRead@config:
  2885                           	opt stack 0
  2886  00002C                     __read_fat@offset:
  2887                           	opt stack 0
  2888  00002C                     fat_find_file@buffer:
  2889                           	opt stack 0
  2890                           
  2891                           ; 11 bytes @ 0x2B
  2892  00002C                     	ds	1
  2893  00002D                     ??_APP_DeviceCustomHIDTasks:
  2894  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2895                           	opt stack 0
  2896  00002D                     __read_root@offset:
  2897                           	opt stack 0
  2898  00002D                     fat_get_file_size@sector:
  2899                           	opt stack 0
  2900                           
  2901                           ; 2 bytes @ 0x2C
  2902  00002D                     	ds	1
  2903  00002E                     ExternalFlash_SectorWrite@page:
  2904                           	opt stack 0
  2905  00002E                     __read_fat@value:
  2906                           	opt stack 0
  2907  00002E                     fat_get_format_status@cntr:
  2908                           	opt stack 0
  2909  00002E                     ExternalFlash_SectorRead@sector_addr:
  2910                           	opt stack 0
  2911                           
  2912                           ; 4 bytes @ 0x2D
  2913  00002E                     	ds	1
  2914  00002F                     __read_root@slot:
  2915                           	opt stack 0
  2916  00002F                     fat_get_file_size@file_size:
  2917                           	opt stack 0
  2918                           
  2919                           ; 4 bytes @ 0x2E
  2920  00002F                     	ds	1
  2921  000030                     ??_MSDWriteHandler:
  2922  000030                     fat_read_from_file@start_byte:
  2923                           	opt stack 0
  2924                           
  2925                           ; 4 bytes @ 0x2F
  2926  000030                     	ds	2
  2927  000032                     ExternalFlash_SectorRead@buffer:
  2928                           	opt stack 0
  2929                           
  2930                           ; 2 bytes @ 0x31
  2931  000032                     	ds	1
  2932  000033                     fat_get_file_size@offset:
  2933                           	opt stack 0
  2934                           
  2935                           ; 2 bytes @ 0x32
  2936  000033                     	ds	1
  2937  000034                     ExternalFlash_SectorRead@page:
  2938                           	opt stack 0
  2939  000034                     fat_read_from_file@length:
  2940                           	opt stack 0
  2941                           
  2942                           ; 4 bytes @ 0x33
  2943  000034                     	ds	1
  2944  000035                     fat_get_file_size@file_number:
  2945                           	opt stack 0
  2946  000035                     APP_DeviceCustomHIDTasks@return_value:
  2947                           	opt stack 0
  2948                           
  2949                           ; 2 bytes @ 0x34
  2950  000035                     	ds	1
  2951  000036                     ??_MSDReadHandler:
  2952                           
  2953                           ; 1 bytes @ 0x35
  2954  000036                     	ds	1
  2955  000037                     APP_DeviceCustomHIDTasks@idx:
  2956                           	opt stack 0
  2957  000037                     fat_find_file@slot:
  2958                           	opt stack 0
  2959                           
  2960                           ; 1 bytes @ 0x36
  2961  000037                     	ds	1
  2962  000038                     __write_calibration@addr:
  2963                           	opt stack 0
  2964  000038                     fat_find_file@sector:
  2965                           	opt stack 0
  2966  000038                     fat_read_from_file@data:
  2967                           	opt stack 0
  2968                           
  2969                           ; 2 bytes @ 0x37
  2970  000038                     	ds	2
  2971  00003A                     ??_MSDProcessCommandMediaPresent:
  2972  00003A                     ??_fat_read_from_file:
  2973  00003A                     __write_calibration@ptr:
  2974                           	opt stack 0
  2975  00003A                     fat_find_file@offset:
  2976                           	opt stack 0
  2977                           
  2978                           ; 2 bytes @ 0x39
  2979  00003A                     	ds	2
  2980  00003C                     __write_calibration@index:
  2981                           	opt stack 0
  2982  00003C                     _MSDProcessCommandMediaPresent$2387:
  2983                           	opt stack 0
  2984                           
  2985                           ; 2 bytes @ 0x3B
  2986  00003C                     	ds	1
  2987  00003D                     __write_calibration@cntr:
  2988                           	opt stack 0
  2989                           
  2990                           ; 1 bytes @ 0x3C
  2991  00003D                     	ds	1
  2992  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  2993                           	opt stack 0
  2994                           
  2995                           ; 1 bytes @ 0x3D
  2996  00003E                     	ds	1
  2997  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  2998                           	opt stack 0
  2999                           
  3000                           ; 4 bytes @ 0x3E
  3001  00003F                     	ds	4
  3002  000043                     MSDProcessCommandMediaPresent@capacity:
  3003                           	opt stack 0
  3004                           
  3005                           ; 4 bytes @ 0x42
  3006  000043                     	ds	3
  3007  000046                     ??__bootloader_verify_file:
  3008  000046                     ??__bootloader_program:
  3009                           
  3010                           ; 1 bytes @ 0x45
  3011  000046                     	ds	1
  3012  000047                     MSDProcessCommandMediaPresent@i:
  3013                           	opt stack 0
  3014                           
  3015                           ; 1 bytes @ 0x46
  3016  000047                     	ds	1
  3017  000048                     ??_MSDProcessCommand:
  3018  000048                     
  3019                           ; 1 bytes @ 0x47
  3020  000048                     	ds	5
  3021  00004D                     ??_MSDTasks:
  3022                           
  3023                           ; 1 bytes @ 0x4C
  3024  00004D                     	ds	1
  3025  00004E                     __bootloader_verify_file@rec_counter:
  3026                           	opt stack 0
  3027  00004E                     _MSDTasks$2369:
  3028                           	opt stack 0
  3029                           
  3030                           ; 2 bytes @ 0x4D
  3031  00004E                     	ds	1
  3032  00004F                     __bootloader_verify_file@return_value:
  3033                           	opt stack 0
  3034                           
  3035                           ; 4 bytes @ 0x4E
  3036  00004F                     	ds	1
  3037  000050                     _MSDTasks$2370:
  3038                           	opt stack 0
  3039                           
  3040                           ; 2 bytes @ 0x4F
  3041  000050                     	ds	2
  3042  000052                     MSDTasks@i:
  3043                           	opt stack 0
  3044                           
  3045                           ; 1 bytes @ 0x51
  3046  000052                     	ds	1
  3047  000053                     __bootloader_verify_file@address32:
  3048                           	opt stack 0
  3049                           
  3050                           ; 4 bytes @ 0x52
  3051  000053                     	ds	4
  3052  000057                     bootloader_run@timeslot:
  3053                           	opt stack 0
  3054                           
  3055                           ; 1 bytes @ 0x56
  3056  000057                     	ds	1
  3057  000058                     ??_main:
  3058                           
  3059                           ; 1 bytes @ 0x57
  3060  000058                     	ds	2
  3061                           tblptru	equ	0xFF8
  3062                           tblptrh	equ	0xFF7
  3063                           tblptrl	equ	0xFF6
  3064                           tablat	equ	0xFF5
  3065                           postinc0	equ	0xFEE
  3066                           wreg	equ	0xFE8
  3067                           postdec1	equ	0xFE5
  3068                           fsr1h	equ	0xFE2
  3069                           fsr1l	equ	0xFE1
  3070                           
  3071 ;;
  3072 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3073 ;;
  3074 ;; *************** function _main *****************
  3075 ;; Defined at:
  3076 ;;		line 78 in file "main.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;		None
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      void 
  3083 ;; Registers used:
  3084 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3092 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3093 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3094 ;;Total ram usage:        2 bytes
  3095 ;; Hardware stack levels required when called:   12
  3096 ;; This function calls:
  3097 ;;		_APP_DeviceCustomHIDTasks
  3098 ;;		_APP_DeviceMSDTasks
  3099 ;;		_SYSTEM_Initialize
  3100 ;;		_USBDeviceInit
  3101 ;;		_USBDeviceTasks
  3102 ;;		_bootloader_run
  3103 ;;		_display_prepare
  3104 ;;		_display_update
  3105 ;;		_i2c_eeprom_tasks
  3106 ;;		_normal_mode
  3107 ;;		_system_init
  3108 ;;		_timer_pseudo_isr
  3109 ;;		_ui_get_status
  3110 ;;		_ui_run
  3111 ;; This function is called by:
  3112 ;;		Startup code after reset
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text0
  3117  004DF8                     __ptext0:
  3118                           	opt stack 0
  3119  004DF8                     _main:
  3120                           	opt stack 19
  3121                           
  3122                           ;main.c: 81: system_init();
  3123                           
  3124                           ;incstack = 0
  3125  004DF8  EC2E  F025         	call	_system_init	;wreg free
  3126                           
  3127                           ;main.c: 84: if(normal_mode())
  3128  004DFC  EC01  F034         	call	_normal_mode	;wreg free
  3129  004E00  0900               	iorlw	0
  3130  004E02  A4D8               	btfss	status,2,c
  3131  004E04  EF00 F048          	goto	36864	; ;# 
  3132                           
  3133                           ;main.c: 90: }
  3134                           ;main.c: 92: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3135  004E08  0E00               	movlw	0
  3136  004E0A  EC89  F035         	call	_SYSTEM_Initialize
  3137                           
  3138                           ;main.c: 94: USBDeviceInit();
  3139  004E0E  ECBF  F01B         	call	_USBDeviceInit	;wreg free
  3140  004E12                     l14696:
  3141                           
  3142                           ;main.c: 98: {
  3143                           ;main.c: 113: USBDeviceTasks();
  3144  004E12  ECAE  F018         	call	_USBDeviceTasks	;wreg free
  3145                           
  3146                           ;main.c: 117: APP_DeviceMSDTasks();
  3147  004E16  EC2F  F03C         	call	_APP_DeviceMSDTasks	;wreg free
  3148                           
  3149                           ;main.c: 118: APP_DeviceCustomHIDTasks();
  3150  004E1A  ECD6  F009         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3151                           
  3152                           ;main.c: 122: timer_pseudo_isr();
  3153  004E1E  EC92  F038         	call	_timer_pseudo_isr	;wreg free
  3154                           
  3155                           ;main.c: 124: if(!os.done)
  3156  004E22  0100               	movlb	0	; () banked
  3157  004E24  51E5               	movf	(_os+3)& (0+255),w,b	;volatile
  3158  004E26  A4D8               	btfss	status,2,c
  3159  004E28  D7F4               	goto	l14696
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;main.c: 125: {
  3163                           ;main.c: 127: i2c_eeprom_tasks();
  3164  004E2A  ECFF  F031         	call	_i2c_eeprom_tasks	;wreg free
  3165                           
  3166                           ;main.c: 130: ui_run();
  3167  004E2E  EC37  F024         	call	_ui_run	;wreg free
  3168                           
  3169                           ;main.c: 133: switch(os.timeSlot&0b00000111)
  3170  004E32  D02A               	goto	l14730
  3171  004E34                     l14708:
  3172                           
  3173                           ;main.c: 136: bootloader_run(0);
  3174  004E34  0E00               	movlw	0
  3175  004E36  EC7C  F036         	call	_bootloader_run
  3176                           
  3177                           ;main.c: 137: break;
  3178  004E3A  D048               	goto	l14732
  3179  004E3C                     l14710:
  3180                           
  3181                           ;main.c: 140: bootloader_run(1);
  3182  004E3C  0E01               	movlw	1
  3183  004E3E  EC7C  F036         	call	_bootloader_run
  3184                           
  3185                           ;main.c: 141: break;
  3186  004E42  D044               	goto	l14732
  3187  004E44                     l14712:
  3188                           
  3189                           ;main.c: 144: bootloader_run(2);
  3190  004E44  0E02               	movlw	2
  3191  004E46  EC7C  F036         	call	_bootloader_run
  3192                           
  3193                           ;main.c: 145: break;
  3194  004E4A  D040               	goto	l14732
  3195  004E4C                     l14714:
  3196                           
  3197                           ;main.c: 148: bootloader_run(3);
  3198  004E4C  0E03               	movlw	3
  3199  004E4E  EC7C  F036         	call	_bootloader_run
  3200                           
  3201                           ;main.c: 149: break;
  3202  004E52  D03C               	goto	l14732
  3203  004E54                     l14716:
  3204                           
  3205                           ;main.c: 152: bootloader_run(4);
  3206  004E54  0E04               	movlw	4
  3207  004E56  EC7C  F036         	call	_bootloader_run
  3208                           
  3209                           ;main.c: 153: break;
  3210  004E5A  D038               	goto	l14732
  3211  004E5C                     l14718:
  3212                           
  3213                           ;main.c: 156: bootloader_run(5);
  3214  004E5C  0E05               	movlw	5
  3215  004E5E  EC7C  F036         	call	_bootloader_run
  3216                           
  3217                           ;main.c: 157: break;
  3218  004E62  D034               	goto	l14732
  3219  004E64                     l14720:
  3220                           
  3221                           ;main.c: 160: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3222  004E64  ECE8  F03C         	call	_ui_get_status	;wreg free
  3223  004E68  0A05               	xorlw	5
  3224  004E6A  A4D8               	btfss	status,2,c
  3225  004E6C  D02F               	goto	l14732
  3226                           
  3227                           ;main.c: 161: {
  3228                           ;main.c: 162: display_prepare(os.display_mode);
  3229  004E6E  0100               	movlb	0	; () banked
  3230  004E70  51E7               	movf	(_os+5)& (0+255),w,b	;volatile
  3231  004E72  EC16  F029         	call	_display_prepare
  3232                           
  3233                           ;main.c: 163: }
  3234                           ;main.c: 164: break;
  3235  004E76  D02A               	goto	l14732
  3236  004E78                     l14724:
  3237                           
  3238                           ;main.c: 167: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3239  004E78  ECE8  F03C         	call	_ui_get_status	;wreg free
  3240  004E7C  0A05               	xorlw	5
  3241  004E7E  A4D8               	btfss	status,2,c
  3242  004E80  D025               	goto	l14732
  3243                           
  3244                           ;main.c: 168: {
  3245                           ;main.c: 169: display_update();
  3246  004E82  EC6F  F032         	call	_display_update	;wreg free
  3247                           
  3248                           ;main.c: 172: }
  3249                           
  3250                           ;main.c: 170: }
  3251                           ;main.c: 171: break;
  3252  004E86  D022               	goto	l14732
  3253  004E88                     l14730:
  3254  004E88  0100               	movlb	0	; () banked
  3255  004E8A  51E4               	movf	(_os+2)& (0+255),w,b	;volatile
  3256  004E8C  0B07               	andlw	7
  3257  004E8E  6E58               	movwf	??_main& (0+255),c
  3258  004E90  6A59               	clrf	(??_main+1)& (0+255),c
  3259                           
  3260                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3261                           ; Switch size 1, requested type "space"
  3262                           ; Number of cases is 1, Range of values is 0 to 0
  3263                           ; switch strategies available:
  3264                           ; Name         Instructions Cycles
  3265                           ; simple_byte            4     3 (average)
  3266                           ;	Chosen strategy is simple_byte
  3267  004E92  5059               	movf	??_main+1,w,c
  3268  004E94  0A00               	xorlw	0	; case 0
  3269  004E96  A4D8               	btfss	status,2,c
  3270  004E98  D019               	goto	l14732
  3271                           
  3272                           ; BSR set to: 0
  3273                           ; Switch size 1, requested type "space"
  3274                           ; Number of cases is 8, Range of values is 0 to 7
  3275                           ; switch strategies available:
  3276                           ; Name         Instructions Cycles
  3277                           ; simple_byte           25    13 (average)
  3278                           ;	Chosen strategy is simple_byte
  3279  004E9A  5058               	movf	??_main,w,c
  3280  004E9C  0A00               	xorlw	0	; case 0
  3281  004E9E  B4D8               	btfsc	status,2,c
  3282  004EA0  D7C9               	goto	l14708
  3283  004EA2  0A01               	xorlw	1	; case 1
  3284  004EA4  B4D8               	btfsc	status,2,c
  3285  004EA6  D7CA               	goto	l14710
  3286  004EA8  0A03               	xorlw	3	; case 2
  3287  004EAA  B4D8               	btfsc	status,2,c
  3288  004EAC  D7CB               	goto	l14712
  3289  004EAE  0A01               	xorlw	1	; case 3
  3290  004EB0  B4D8               	btfsc	status,2,c
  3291  004EB2  D7CC               	goto	l14714
  3292  004EB4  0A07               	xorlw	7	; case 4
  3293  004EB6  B4D8               	btfsc	status,2,c
  3294  004EB8  D7CD               	goto	l14716
  3295  004EBA  0A01               	xorlw	1	; case 5
  3296  004EBC  B4D8               	btfsc	status,2,c
  3297  004EBE  D7CE               	goto	l14718
  3298  004EC0  0A03               	xorlw	3	; case 6
  3299  004EC2  B4D8               	btfsc	status,2,c
  3300  004EC4  D7CF               	goto	l14720
  3301  004EC6  0A01               	xorlw	1	; case 7
  3302  004EC8  B4D8               	btfsc	status,2,c
  3303  004ECA  D7D6               	goto	l14724
  3304  004ECC                     l14732:
  3305                           
  3306                           ;main.c: 173: os.done = 1;
  3307  004ECC  0E01               	movlw	1
  3308  004ECE  0100               	movlb	0	; () banked
  3309  004ED0  6FE5               	movwf	(_os+3)& (0+255),b	;volatile
  3310                           
  3311                           ; BSR set to: 0
  3312                           
  3313                           ; BSR set to: 0
  3314  004ED2  D79F               	goto	l14696
  3315  004ED4                     __end_of_main:
  3316                           	opt stack 0
  3317                           tblptru	equ	0xFF8
  3318                           tblptrh	equ	0xFF7
  3319                           tblptrl	equ	0xFF6
  3320                           tablat	equ	0xFF5
  3321                           postinc0	equ	0xFEE
  3322                           wreg	equ	0xFE8
  3323                           postdec1	equ	0xFE5
  3324                           fsr1h	equ	0xFE2
  3325                           fsr1l	equ	0xFE1
  3326                           status	equ	0xFD8
  3327                           
  3328 ;; *************** function _ui_run *****************
  3329 ;; Defined at:
  3330 ;;		line 74 in file "ui.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;Total ram usage:        0 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    4
  3351 ;; This function calls:
  3352 ;;		__ui_encoder
  3353 ;;		_i2c_digipot_backlight
  3354 ;;		_i2c_digipot_reset_off
  3355 ;;		_i2c_digipot_reset_on
  3356 ;;		_i2c_display_send_init_sequence
  3357 ;;		_system_encoder_enable
  3358 ;; This function is called by:
  3359 ;;		_main
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text1
  3364  00486E                     __ptext1:
  3365                           	opt stack 0
  3366  00486E                     _ui_run:
  3367                           	opt stack 26
  3368                           
  3369                           ;ui.c: 76: switch(userInterfaceStatus)
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;incstack = 0
  3373  00486E  D067               	goto	l14448
  3374  004870                     l14400:
  3375                           
  3376                           ;ui.c: 79: if (os.buttonCount!=0)
  3377  004870  0100               	movlb	0	; () banked
  3378  004872  51E3               	movf	(_os+1)& (0+255),w,b	;volatile
  3379  004874  B4D8               	btfsc	status,2,c
  3380  004876  0012               	return	
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;ui.c: 80: {
  3384                           ;ui.c: 82: LATCbits.LC2 = 1;
  3385  004878  848B               	bsf	3979,2,c	;volatile
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;ui.c: 83: os.buttonCount = 0;
  3389  00487A  0E00               	movlw	0
  3390  00487C  0100               	movlb	0	; () banked
  3391  00487E  6FE3               	movwf	(_os+1)& (0+255),b	;volatile
  3392                           
  3393                           ;ui.c: 85: system_ui_inactive_count = 0;
  3394  004880  0E00               	movlw	0
  3395  004882  0101               	movlb	1	; () banked
  3396  004884  6F73               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3397  004886  0E00               	movlw	0
  3398  004888  6F72               	movwf	_system_ui_inactive_count& (0+255),b
  3399                           
  3400                           ;ui.c: 86: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  3401  00488A  0E01               	movlw	1
  3402  00488C  0101               	movlb	1	; () banked
  3403  00488E  6F83               	movwf	_userInterfaceStatus& (0+255),b
  3404                           
  3405                           ; BSR set to: 1
  3406                           ;ui.c: 87: }
  3407                           ;ui.c: 88: break;
  3408  004890  0012               	return	
  3409  004892                     l1521:
  3410                           
  3411                           ; BSR set to: 1
  3412                           ;ui.c: 92: LATDbits.LD0 = 0;
  3413  004892  908C               	bcf	3980,0,c	;volatile
  3414                           
  3415                           ; BSR set to: 1
  3416                           ;ui.c: 94: system_ui_inactive_count = 0;
  3417  004894  0E00               	movlw	0
  3418  004896  0101               	movlb	1	; () banked
  3419  004898  6F73               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3420  00489A  0E00               	movlw	0
  3421  00489C  6F72               	movwf	_system_ui_inactive_count& (0+255),b
  3422                           
  3423                           ;ui.c: 95: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3424  00489E  0E02               	movlw	2
  3425  0048A0  0101               	movlb	1	; () banked
  3426  0048A2  6F83               	movwf	_userInterfaceStatus& (0+255),b
  3427                           
  3428                           ;ui.c: 96: break;
  3429  0048A4  0012               	return	
  3430  0048A6                     l14408:
  3431                           
  3432                           ; BSR set to: 1
  3433                           ;ui.c: 100: i2c_digipot_reset_on();
  3434  0048A6  EC3D  F03B         	call	_i2c_digipot_reset_on	;wreg free
  3435                           
  3436                           ;ui.c: 102: system_ui_inactive_count = 0;
  3437  0048AA  0E00               	movlw	0
  3438  0048AC  0101               	movlb	1	; () banked
  3439  0048AE  6F73               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3440  0048B0  0E00               	movlw	0
  3441  0048B2  6F72               	movwf	_system_ui_inactive_count& (0+255),b
  3442                           
  3443                           ; BSR set to: 1
  3444                           ;ui.c: 103: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3445  0048B4  0E03               	movlw	3
  3446  0048B6  0101               	movlb	1	; () banked
  3447  0048B8  6F83               	movwf	_userInterfaceStatus& (0+255),b
  3448                           
  3449                           ;ui.c: 104: break;
  3450  0048BA  0012               	return	
  3451  0048BC                     l14414:
  3452                           
  3453                           ; BSR set to: 1
  3454                           ;ui.c: 107: ++system_ui_inactive_count;
  3455  0048BC  0101               	movlb	1	; () banked
  3456  0048BE  4B72               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3457  0048C0  2B73               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3458                           
  3459                           ; BSR set to: 1
  3460                           ;ui.c: 109: if (system_ui_inactive_count>3)
  3461  0048C2  0101               	movlb	1	; () banked
  3462  0048C4  5173               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3463  0048C6  E105               	bnz	u11500
  3464  0048C8  0E04               	movlw	4
  3465  0048CA  0101               	movlb	1	; () banked
  3466  0048CC  5D72               	subwf	_system_ui_inactive_count& (0+255),w,b
  3467  0048CE  A0D8               	btfss	status,0,c
  3468  0048D0  0012               	return	
  3469  0048D2                     u11500:
  3470                           
  3471                           ; BSR set to: 1
  3472                           ;ui.c: 110: {
  3473                           ;ui.c: 111: i2c_digipot_reset_off();
  3474  0048D2  EC4E  F03B         	call	_i2c_digipot_reset_off	;wreg free
  3475                           
  3476                           ;ui.c: 112: system_ui_inactive_count = 0;
  3477  0048D6  0E00               	movlw	0
  3478  0048D8  0101               	movlb	1	; () banked
  3479  0048DA  6F73               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3480  0048DC  0E00               	movlw	0
  3481  0048DE  6F72               	movwf	_system_ui_inactive_count& (0+255),b
  3482                           
  3483                           ; BSR set to: 1
  3484                           ;ui.c: 113: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3485  0048E0  0E04               	movlw	4
  3486  0048E2  0101               	movlb	1	; () banked
  3487  0048E4  6F83               	movwf	_userInterfaceStatus& (0+255),b
  3488                           
  3489                           ; BSR set to: 1
  3490                           ;ui.c: 114: }
  3491                           ;ui.c: 115: break;
  3492  0048E6  0012               	return	
  3493  0048E8                     l14424:
  3494                           
  3495                           ; BSR set to: 1
  3496                           ;ui.c: 119: i2c_display_send_init_sequence();
  3497  0048E8  EC49  F03A         	call	_i2c_display_send_init_sequence	;wreg free
  3498                           
  3499                           ;ui.c: 121: i2c_digipot_backlight(150);
  3500  0048EC  0E96               	movlw	150
  3501  0048EE  ECF2  F03A         	call	_i2c_digipot_backlight
  3502                           
  3503                           ;ui.c: 123: system_encoder_enable();
  3504  0048F2  EC87  F03C         	call	_system_encoder_enable	;wreg free
  3505                           
  3506                           ;ui.c: 125: system_ui_inactive_count = 0;
  3507  0048F6  0E00               	movlw	0
  3508  0048F8  0101               	movlb	1	; () banked
  3509  0048FA  6F73               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3510  0048FC  0E00               	movlw	0
  3511  0048FE  6F72               	movwf	_system_ui_inactive_count& (0+255),b
  3512                           
  3513                           ; BSR set to: 1
  3514                           ;ui.c: 126: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3515  004900  0E05               	movlw	5
  3516  004902  0101               	movlb	1	; () banked
  3517  004904  6F83               	movwf	_userInterfaceStatus& (0+255),b
  3518                           
  3519                           ;ui.c: 127: break;
  3520  004906  0012               	return	
  3521  004908                     l14434:
  3522                           
  3523                           ; BSR set to: 1
  3524                           ;ui.c: 130: if (os.encoderCount==0 && os.buttonCount==0)
  3525  004908  0100               	movlb	0	; () banked
  3526  00490A  51E2               	movf	_os& (0+255),w,b	;volatile
  3527  00490C  A4D8               	btfss	status,2,c
  3528  00490E  D00F               	goto	l14442
  3529                           
  3530                           ; BSR set to: 0
  3531  004910  0100               	movlb	0	; () banked
  3532  004912  51E3               	movf	(_os+1)& (0+255),w,b	;volatile
  3533  004914  A4D8               	btfss	status,2,c
  3534  004916  D00B               	goto	l14442
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;ui.c: 131: {
  3538                           ;ui.c: 132: if(system_ui_inactive_count<0xFFFF)
  3539  004918  0101               	movlb	1	; () banked
  3540  00491A  2972               	incf	_system_ui_inactive_count& (0+255),w,b
  3541  00491C  E104               	bnz	u11530
  3542  00491E  0101               	movlb	1	; () banked
  3543  004920  2973               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3544  004922  B4D8               	btfsc	status,2,c
  3545  004924  0012               	return	
  3546  004926                     u11530:
  3547                           
  3548                           ; BSR set to: 1
  3549                           ;ui.c: 133: ++system_ui_inactive_count;
  3550  004926  0101               	movlb	1	; () banked
  3551  004928  4B72               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3552  00492A  2B73               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3553                           
  3554                           ; BSR set to: 1
  3555                           ;ui.c: 134: }
  3556  00492C  0012               	return	
  3557  00492E                     l14442:
  3558                           
  3559                           ;ui.c: 135: else
  3560                           ;ui.c: 136: {
  3561                           ;ui.c: 137: system_ui_inactive_count = 0;
  3562  00492E  0E00               	movlw	0
  3563  004930  0101               	movlb	1	; () banked
  3564  004932  6F73               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3565  004934  0E00               	movlw	0
  3566  004936  6F72               	movwf	_system_ui_inactive_count& (0+255),b
  3567                           
  3568                           ; BSR set to: 1
  3569                           ;ui.c: 138: _ui_encoder();
  3570  004938  EC9B  F02D         	call	__ui_encoder	;wreg free
  3571                           
  3572                           ;ui.c: 141: }
  3573                           
  3574                           ;ui.c: 139: }
  3575                           ;ui.c: 140: break;
  3576  00493C  0012               	return	
  3577  00493E                     l14448:
  3578  00493E  0101               	movlb	1	; () banked
  3579  004940  5183               	movf	_userInterfaceStatus& (0+255),w,b
  3580                           
  3581                           ; Switch size 1, requested type "space"
  3582                           ; Number of cases is 6, Range of values is 0 to 5
  3583                           ; switch strategies available:
  3584                           ; Name         Instructions Cycles
  3585                           ; simple_byte           19    10 (average)
  3586                           ;	Chosen strategy is simple_byte
  3587  004942  0A00               	xorlw	0	; case 0
  3588  004944  B4D8               	btfsc	status,2,c
  3589  004946  D794               	goto	l14400
  3590  004948  0A01               	xorlw	1	; case 1
  3591  00494A  B4D8               	btfsc	status,2,c
  3592  00494C  D7A2               	goto	l1521
  3593  00494E  0A03               	xorlw	3	; case 2
  3594  004950  B4D8               	btfsc	status,2,c
  3595  004952  D7A9               	goto	l14408
  3596  004954  0A01               	xorlw	1	; case 3
  3597  004956  B4D8               	btfsc	status,2,c
  3598  004958  D7B1               	goto	l14414
  3599  00495A  0A07               	xorlw	7	; case 4
  3600  00495C  B4D8               	btfsc	status,2,c
  3601  00495E  D7C4               	goto	l14424
  3602  004960  0A01               	xorlw	1	; case 5
  3603  004962  A4D8               	btfss	status,2,c
  3604  004964  0012               	return	
  3605  004966  D7D0               	goto	l14434
  3606  004968                     __end_of_ui_run:
  3607                           	opt stack 0
  3608                           tblptru	equ	0xFF8
  3609                           tblptrh	equ	0xFF7
  3610                           tblptrl	equ	0xFF6
  3611                           tablat	equ	0xFF5
  3612                           postinc0	equ	0xFEE
  3613                           wreg	equ	0xFE8
  3614                           postdec1	equ	0xFE5
  3615                           fsr1h	equ	0xFE2
  3616                           fsr1l	equ	0xFE1
  3617                           status	equ	0xFD8
  3618                           
  3619 ;; *************** function _system_encoder_enable *****************
  3620 ;; Defined at:
  3621 ;;		line 131 in file "os.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3639 ;;Total ram usage:        0 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_ui_run
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text2
  3649  00790E                     __ptext2:
  3650                           	opt stack 0
  3651  00790E                     _system_encoder_enable:
  3652                           	opt stack 29
  3653                           
  3654                           ;os.c: 134: INTCON3bits.INT2IF = 0;
  3655                           
  3656                           ;incstack = 0
  3657  00790E  92F0               	bcf	intcon3,1,c	;volatile
  3658                           
  3659                           ;os.c: 135: INTCON3bits.INT3IF = 0;
  3660  007910  94F0               	bcf	intcon3,2,c	;volatile
  3661                           
  3662                           ;os.c: 138: os.encoderCount = 0;
  3663  007912  0E00               	movlw	0
  3664  007914  0100               	movlb	0	; () banked
  3665  007916  6FE2               	movwf	_os& (0+255),b	;volatile
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;os.c: 141: INTCON3bits.INT2IE = 1;
  3669  007918  88F0               	bsf	intcon3,4,c	;volatile
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;os.c: 142: INTCON3bits.INT3IE = 1;
  3673  00791A  8AF0               	bsf	intcon3,5,c	;volatile
  3674                           
  3675                           ; BSR set to: 0
  3676  00791C  0012               	return		;funcret
  3677  00791E                     __end_of_system_encoder_enable:
  3678                           	opt stack 0
  3679                           tblptru	equ	0xFF8
  3680                           tblptrh	equ	0xFF7
  3681                           tblptrl	equ	0xFF6
  3682                           tablat	equ	0xFF5
  3683                           intcon3	equ	0xFF0
  3684                           postinc0	equ	0xFEE
  3685                           wreg	equ	0xFE8
  3686                           postdec1	equ	0xFE5
  3687                           fsr1h	equ	0xFE2
  3688                           fsr1l	equ	0xFE1
  3689                           status	equ	0xFD8
  3690                           
  3691 ;; *************** function _i2c_display_send_init_sequence *****************
  3692 ;; Defined at:
  3693 ;;		line 225 in file "i2c.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;		None
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3708 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3710 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3711 ;;Total ram usage:        9 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:    2
  3714 ;; This function calls:
  3715 ;;		__i2c_write
  3716 ;;		_i2c_set_frequency
  3717 ;; This function is called by:
  3718 ;;		_ui_run
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text3
  3723  007492                     __ptext3:
  3724                           	opt stack 0
  3725  007492                     _i2c_display_send_init_sequence:
  3726                           	opt stack 27
  3727                           
  3728                           ;i2c.c: 227: uint8_t init_sequence[9] = {
  3729                           ;i2c.c: 228: 0x3A,
  3730                           ;i2c.c: 230: 0b00011110,
  3731                           ;i2c.c: 231: 0x39,
  3732                           ;i2c.c: 233: 0b00001100,
  3733                           ;i2c.c: 234: 0x74,
  3734                           ;i2c.c: 235: 0b1011100,
  3735                           ;i2c.c: 236: 0x6d,
  3736                           ;i2c.c: 237: 0x0c,
  3737                           ;i2c.c: 238: 0x01
  3738                           ;i2c.c: 239: };
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;incstack = 0
  3742  007492  EE21  F0D6         	lfsr	2,i2c_display_send_init_sequence@F8320
  3743  007496  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  3744  00749A  0E08               	movlw	8
  3745  00749C                     u10201:
  3746  00749C  CFDB FFE3          	movff	plusw2,plusw1
  3747  0074A0  06E8               	decf	wreg,f,c
  3748  0074A2  E2FC               	bc	u10201
  3749                           
  3750                           ;i2c.c: 242: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  3751  0074A4  0E00               	movlw	0
  3752  0074A6  EC8B  F03A         	call	_i2c_set_frequency
  3753                           
  3754                           ;i2c.c: 245: _i2c_write(0b01111000, &init_sequence[0], 9);
  3755  0074AA  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  3756  0074AC  6E06               	movwf	__i2c_write@data,c
  3757  0074AE  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  3758  0074B0  6E07               	movwf	__i2c_write@data+1,c
  3759  0074B2  0E09               	movlw	9
  3760  0074B4  6E08               	movwf	__i2c_write@length,c
  3761  0074B6  0E78               	movlw	120
  3762  0074B8  EC82  F037         	call	__i2c_write
  3763  0074BC  0012               	return		;funcret
  3764  0074BE                     __end_of_i2c_display_send_init_sequence:
  3765                           	opt stack 0
  3766                           tblptru	equ	0xFF8
  3767                           tblptrh	equ	0xFF7
  3768                           tblptrl	equ	0xFF6
  3769                           tablat	equ	0xFF5
  3770                           intcon3	equ	0xFF0
  3771                           postinc0	equ	0xFEE
  3772                           wreg	equ	0xFE8
  3773                           postdec1	equ	0xFE5
  3774                           plusw1	equ	0xFE3
  3775                           fsr1h	equ	0xFE2
  3776                           fsr1l	equ	0xFE1
  3777                           plusw2	equ	0xFDB
  3778                           status	equ	0xFD8
  3779                           
  3780 ;; *************** function _i2c_digipot_reset_on *****************
  3781 ;; Defined at:
  3782 ;;		line 402 in file "i2c.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;		None
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  data_array      2   10[COMRAM] unsigned char [2]
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3799 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3800 ;;Total ram usage:        2 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    2
  3803 ;; This function calls:
  3804 ;;		__i2c_write
  3805 ;;		_i2c_set_frequency
  3806 ;; This function is called by:
  3807 ;;		_ui_run
  3808 ;;		_i2c_display_init
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text4
  3813  00767A                     __ptext4:
  3814                           	opt stack 0
  3815  00767A                     _i2c_digipot_reset_on:
  3816                           	opt stack 27
  3817                           
  3818                           ;i2c.c: 404: uint8_t data_array[2];
  3819                           ;i2c.c: 405: data_array[0] = 0x10 | 0x00;
  3820                           
  3821                           ;incstack = 0
  3822  00767A  0E10               	movlw	16
  3823  00767C  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  3824                           
  3825                           ;i2c.c: 407: data_array[1] = 0x00;
  3826  00767E  0E00               	movlw	0
  3827  007680  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  3828                           
  3829                           ;i2c.c: 410: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3830  007682  0E02               	movlw	2
  3831  007684  EC8B  F03A         	call	_i2c_set_frequency
  3832                           
  3833                           ;i2c.c: 412: _i2c_write(0b01011100, &data_array[0], 2);
  3834  007688  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  3835  00768A  6E06               	movwf	__i2c_write@data,c
  3836  00768C  0E00               	movlw	high i2c_digipot_reset_on@data_array
  3837  00768E  6E07               	movwf	__i2c_write@data+1,c
  3838  007690  0E02               	movlw	2
  3839  007692  6E08               	movwf	__i2c_write@length,c
  3840  007694  0E5C               	movlw	92
  3841  007696  EC82  F037         	call	__i2c_write
  3842  00769A  0012               	return		;funcret
  3843  00769C                     __end_of_i2c_digipot_reset_on:
  3844                           	opt stack 0
  3845                           tblptru	equ	0xFF8
  3846                           tblptrh	equ	0xFF7
  3847                           tblptrl	equ	0xFF6
  3848                           tablat	equ	0xFF5
  3849                           intcon3	equ	0xFF0
  3850                           postinc0	equ	0xFEE
  3851                           wreg	equ	0xFE8
  3852                           postdec1	equ	0xFE5
  3853                           plusw1	equ	0xFE3
  3854                           fsr1h	equ	0xFE2
  3855                           fsr1l	equ	0xFE1
  3856                           plusw2	equ	0xFDB
  3857                           status	equ	0xFD8
  3858                           
  3859 ;; *************** function _i2c_digipot_reset_off *****************
  3860 ;; Defined at:
  3861 ;;		line 415 in file "i2c.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;		None
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;  data_array      2   10[COMRAM] unsigned char [2]
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      void 
  3868 ;; Registers used:
  3869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3878 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3879 ;;Total ram usage:        2 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; Hardware stack levels required when called:    2
  3882 ;; This function calls:
  3883 ;;		__i2c_write
  3884 ;;		_i2c_set_frequency
  3885 ;; This function is called by:
  3886 ;;		_ui_run
  3887 ;;		_i2c_display_init
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text5
  3892  00769C                     __ptext5:
  3893                           	opt stack 0
  3894  00769C                     _i2c_digipot_reset_off:
  3895                           	opt stack 27
  3896                           
  3897                           ;i2c.c: 417: uint8_t data_array[2];
  3898                           ;i2c.c: 418: data_array[0] = 0x10 | 0x00;
  3899                           
  3900                           ;incstack = 0
  3901  00769C  0E10               	movlw	16
  3902  00769E  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  3903                           
  3904                           ;i2c.c: 419: data_array[1] = 0x80;
  3905  0076A0  0E80               	movlw	128
  3906  0076A2  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  3907                           
  3908                           ;i2c.c: 422: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3909  0076A4  0E02               	movlw	2
  3910  0076A6  EC8B  F03A         	call	_i2c_set_frequency
  3911                           
  3912                           ;i2c.c: 424: _i2c_write(0b01011100, &data_array[0], 2);
  3913  0076AA  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  3914  0076AC  6E06               	movwf	__i2c_write@data,c
  3915  0076AE  0E00               	movlw	high i2c_digipot_reset_off@data_array
  3916  0076B0  6E07               	movwf	__i2c_write@data+1,c
  3917  0076B2  0E02               	movlw	2
  3918  0076B4  6E08               	movwf	__i2c_write@length,c
  3919  0076B6  0E5C               	movlw	92
  3920  0076B8  EC82  F037         	call	__i2c_write
  3921  0076BC  0012               	return		;funcret
  3922  0076BE                     __end_of_i2c_digipot_reset_off:
  3923                           	opt stack 0
  3924                           tblptru	equ	0xFF8
  3925                           tblptrh	equ	0xFF7
  3926                           tblptrl	equ	0xFF6
  3927                           tablat	equ	0xFF5
  3928                           intcon3	equ	0xFF0
  3929                           postinc0	equ	0xFEE
  3930                           wreg	equ	0xFE8
  3931                           postdec1	equ	0xFE5
  3932                           plusw1	equ	0xFE3
  3933                           fsr1h	equ	0xFE2
  3934                           fsr1l	equ	0xFE1
  3935                           plusw2	equ	0xFDB
  3936                           status	equ	0xFD8
  3937                           
  3938 ;; *************** function _i2c_digipot_backlight *****************
  3939 ;; Defined at:
  3940 ;;		line 427 in file "i2c.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  level           1    wreg     unsigned char 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;  level           1   10[COMRAM] unsigned char 
  3945 ;;  data_array      2   11[COMRAM] unsigned char [2]
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3956 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3958 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3959 ;;Total ram usage:        3 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:    2
  3962 ;; This function calls:
  3963 ;;		__i2c_write
  3964 ;;		_i2c_set_frequency
  3965 ;; This function is called by:
  3966 ;;		_ui_run
  3967 ;;		_i2c_display_init
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text6
  3972  0075E4                     __ptext6:
  3973                           	opt stack 0
  3974  0075E4                     _i2c_digipot_backlight:
  3975                           	opt stack 27
  3976                           
  3977                           ;incstack = 0
  3978                           ;i2c_digipot_backlight@level stored from wreg
  3979  0075E4  6E0B               	movwf	i2c_digipot_backlight@level,c
  3980                           
  3981                           ;i2c.c: 429: uint8_t data_array[2];
  3982                           ;i2c.c: 430: data_array[0] = 0x00 | 0x00;
  3983  0075E6  0E00               	movlw	0
  3984  0075E8  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  3985                           
  3986                           ;i2c.c: 431: data_array[1] = level>>1;
  3987  0075EA  90D8               	bcf	status,0,c
  3988  0075EC  300B               	rrcf	i2c_digipot_backlight@level,w,c
  3989  0075EE  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  3990                           
  3991                           ;i2c.c: 434: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3992  0075F0  0E02               	movlw	2
  3993  0075F2  EC8B  F03A         	call	_i2c_set_frequency
  3994                           
  3995                           ;i2c.c: 436: _i2c_write(0b01011100, &data_array[0], 2);
  3996  0075F6  0E0C               	movlw	low i2c_digipot_backlight@data_array
  3997  0075F8  6E06               	movwf	__i2c_write@data,c
  3998  0075FA  0E00               	movlw	high i2c_digipot_backlight@data_array
  3999  0075FC  6E07               	movwf	__i2c_write@data+1,c
  4000  0075FE  0E02               	movlw	2
  4001  007600  6E08               	movwf	__i2c_write@length,c
  4002  007602  0E5C               	movlw	92
  4003  007604  EC82  F037         	call	__i2c_write
  4004  007608  0012               	return		;funcret
  4005  00760A                     __end_of_i2c_digipot_backlight:
  4006                           	opt stack 0
  4007                           tblptru	equ	0xFF8
  4008                           tblptrh	equ	0xFF7
  4009                           tblptrl	equ	0xFF6
  4010                           tablat	equ	0xFF5
  4011                           intcon3	equ	0xFF0
  4012                           postinc0	equ	0xFEE
  4013                           wreg	equ	0xFE8
  4014                           postdec1	equ	0xFE5
  4015                           plusw1	equ	0xFE3
  4016                           fsr1h	equ	0xFE2
  4017                           fsr1l	equ	0xFE1
  4018                           plusw2	equ	0xFDB
  4019                           status	equ	0xFD8
  4020                           
  4021 ;; *************** function __ui_encoder *****************
  4022 ;; Defined at:
  4023 ;;		line 18 in file "ui.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4041 ;;Total ram usage:        0 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    3
  4044 ;; This function calls:
  4045 ;;		_i2c_eeprom_writeByte
  4046 ;; This function is called by:
  4047 ;;		_ui_run
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text7
  4052  005B36                     __ptext7:
  4053                           	opt stack 0
  4054  005B36                     __ui_encoder:
  4055                           	opt stack 26
  4056                           
  4057                           ;ui.c: 20: switch(os.display_mode)
  4058                           
  4059                           ;incstack = 0
  4060  005B36  D031               	goto	l13450
  4061  005B38                     l13436:
  4062                           
  4063                           ;ui.c: 26: if(os.buttonCount>0)
  4064  005B38  0100               	movlb	0	; () banked
  4065  005B3A  51E3               	movf	(_os+1)& (0+255),w,b	;volatile
  4066  005B3C  0A80               	xorlw	128
  4067  005B3E  0F7F               	addlw	-129
  4068  005B40  A0D8               	btfss	status,0,c
  4069  005B42  0012               	return	
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;ui.c: 27: {
  4073                           ;ui.c: 28: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4074  005B44  0E20               	movlw	32
  4075  005B46  0100               	movlb	0	; () banked
  4076  005B48  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
  4077                           
  4078                           ;ui.c: 29: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4079  005B4A  0E20               	movlw	32
  4080  005B4C  0100               	movlb	0	; () banked
  4081  005B4E  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
  4082                           
  4083                           ;ui.c: 30: os.buttonCount = 0;
  4084  005B50  0E00               	movlw	0
  4085  005B52  0100               	movlb	0	; () banked
  4086  005B54  6FE3               	movwf	(_os+1)& (0+255),b	;volatile
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;ui.c: 38: break;
  4090                           
  4091                           ;ui.c: 37: case DISPLAY_MODE_BOOTLOADER_CHECK_FAILED:
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;ui.c: 35: break;
  4095                           
  4096                           ;ui.c: 34: case DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING:
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;ui.c: 31: }
  4100                           ;ui.c: 32: break;
  4101  005B56  0012               	return	
  4102  005B58                     l13440:
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;ui.c: 41: if(os.buttonCount>0)
  4106  005B58  0100               	movlb	0	; () banked
  4107  005B5A  51E3               	movf	(_os+1)& (0+255),w,b	;volatile
  4108  005B5C  0A80               	xorlw	128
  4109  005B5E  0F7F               	addlw	-129
  4110  005B60  A0D8               	btfss	status,0,c
  4111  005B62  0012               	return	
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;ui.c: 42: {
  4115                           ;ui.c: 43: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4116  005B64  0E50               	movlw	80
  4117  005B66  0100               	movlb	0	; () banked
  4118  005B68  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
  4119                           
  4120                           ;ui.c: 44: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4121  005B6A  0E50               	movlw	80
  4122  005B6C  0100               	movlb	0	; () banked
  4123  005B6E  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
  4124                           
  4125                           ;ui.c: 45: os.buttonCount = 0;
  4126  005B70  0E00               	movlw	0
  4127  005B72  0100               	movlb	0	; () banked
  4128  005B74  6FE3               	movwf	(_os+1)& (0+255),b	;volatile
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;ui.c: 50: break;
  4132                           
  4133                           ;ui.c: 49: case BOOTLOADER_MODE_PROGRAMMING:
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;ui.c: 46: }
  4137                           ;ui.c: 47: break;
  4138  005B76  0012               	return	
  4139  005B78                     l13444:
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;ui.c: 53: if(os.buttonCount>0)
  4143  005B78  0100               	movlb	0	; () banked
  4144  005B7A  51E3               	movf	(_os+1)& (0+255),w,b	;volatile
  4145  005B7C  0A80               	xorlw	128
  4146  005B7E  0F7F               	addlw	-129
  4147  005B80  A0D8               	btfss	status,0,c
  4148  005B82  0012               	return	
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;ui.c: 54: {
  4152                           ;ui.c: 55: i2c_eeprom_writeByte(0x100, 0x78);
  4153  005B84  0E01               	movlw	1
  4154  005B86  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  4155  005B88  0E00               	movlw	0
  4156  005B8A  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  4157  005B8C  0E78               	movlw	120
  4158  005B8E  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  4159  005B90  ECB2  F038         	call	_i2c_eeprom_writeByte	;wreg free
  4160  005B94  EF00 F048          	goto	36864	; ;# 
  4161                           
  4162                           ;ui.c: 62: }
  4163                           
  4164                           ;ui.c: 59: }
  4165                           ;ui.c: 61: break;
  4166  005B98  0012               	return	
  4167  005B9A                     l13450:
  4168  005B9A  0100               	movlb	0	; () banked
  4169  005B9C  51E7               	movf	(_os+5)& (0+255),w,b	;volatile
  4170                           
  4171                           ; Switch size 1, requested type "space"
  4172                           ; Number of cases is 7, Range of values is 0 to 96
  4173                           ; switch strategies available:
  4174                           ; Name         Instructions Cycles
  4175                           ; simple_byte           22    12 (average)
  4176                           ;	Chosen strategy is simple_byte
  4177  005B9E  0A00               	xorlw	0	; case 0
  4178  005BA0  B4D8               	btfsc	status,2,c
  4179  005BA2  0012               	return	
  4180  005BA4  0A10               	xorlw	16	; case 16
  4181  005BA6  B4D8               	btfsc	status,2,c
  4182  005BA8  D7C7               	goto	l13436
  4183  005BAA  0A30               	xorlw	48	; case 32
  4184  005BAC  B4D8               	btfsc	status,2,c
  4185  005BAE  0012               	return	
  4186  005BB0  0A10               	xorlw	16	; case 48
  4187  005BB2  B4D8               	btfsc	status,2,c
  4188  005BB4  D7D1               	goto	l13440
  4189  005BB6  0A70               	xorlw	112	; case 64
  4190  005BB8  B4D8               	btfsc	status,2,c
  4191  005BBA  0012               	return	
  4192  005BBC  0A10               	xorlw	16	; case 80
  4193  005BBE  B4D8               	btfsc	status,2,c
  4194  005BC0  0012               	return	
  4195  005BC2  0A30               	xorlw	48	; case 96
  4196  005BC4  A4D8               	btfss	status,2,c
  4197  005BC6  0012               	return	
  4198  005BC8  D7D7               	goto	l13444
  4199  005BCA                     __end_of__ui_encoder:
  4200                           	opt stack 0
  4201                           tblptru	equ	0xFF8
  4202                           tblptrh	equ	0xFF7
  4203                           tblptrl	equ	0xFF6
  4204                           tablat	equ	0xFF5
  4205                           intcon3	equ	0xFF0
  4206                           postinc0	equ	0xFEE
  4207                           wreg	equ	0xFE8
  4208                           postdec1	equ	0xFE5
  4209                           plusw1	equ	0xFE3
  4210                           fsr1h	equ	0xFE2
  4211                           fsr1l	equ	0xFE1
  4212                           plusw2	equ	0xFDB
  4213                           status	equ	0xFD8
  4214                           
  4215 ;; *************** function _timer_pseudo_isr *****************
  4216 ;; Defined at:
  4217 ;;		line 43 in file "os.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4235 ;;Total ram usage:        0 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; This function calls:
  4238 ;;		Nothing
  4239 ;; This function is called by:
  4240 ;;		_main
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           	psect	text8
  4245  007124                     __ptext8:
  4246                           	opt stack 0
  4247  007124                     _timer_pseudo_isr:
  4248                           	opt stack 30
  4249                           
  4250                           ;os.c: 46: if(INTCONbits.T0IF==0)
  4251                           
  4252                           ;incstack = 0
  4253  007124  A4F2               	btfss	intcon,2,c	;volatile
  4254  007126  0012               	return	
  4255                           
  4256                           ;os.c: 49: }
  4257                           ;os.c: 53: TMR0H = 0xD1;
  4258                           
  4259                           ;os.c: 47: {
  4260                           ;os.c: 48: return;
  4261  007128  0ED1               	movlw	209
  4262  00712A  6ED7               	movwf	4055,c	;volatile
  4263                           
  4264                           ;os.c: 54: TMR0L = 0x20;
  4265  00712C  0E20               	movlw	32
  4266  00712E  6ED6               	movwf	4054,c	;volatile
  4267                           
  4268                           ;os.c: 55: ++os.timeSlot;
  4269  007130  0100               	movlb	0	; () banked
  4270  007132  2BE4               	incf	(_os+2)& (0+255),f,b	;volatile
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;os.c: 56: os.done = 0;
  4274  007134  0E00               	movlw	0
  4275  007136  0100               	movlb	0	; () banked
  4276  007138  6FE5               	movwf	(_os+3)& (0+255),b	;volatile
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;os.c: 57: INTCONbits.T0IF = 0;
  4280  00713A  94F2               	bcf	intcon,2,c	;volatile
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;os.c: 60: if(INTCON3bits.INT1IF)
  4284  00713C  A0F0               	btfss	intcon3,0,c	;volatile
  4285  00713E  D003               	goto	l14362
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;os.c: 61: {
  4289                           ;os.c: 62: ++os.buttonCount;
  4290  007140  0100               	movlb	0	; () banked
  4291  007142  2BE3               	incf	(_os+1)& (0+255),f,b	;volatile
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;os.c: 63: INTCON3bits.INT1IF = 0;
  4295  007144  90F0               	bcf	intcon3,0,c	;volatile
  4296  007146                     l14362:
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;os.c: 64: }
  4300                           ;os.c: 67: if(INTCON3bits.INT2IF)
  4301  007146  A2F0               	btfss	intcon3,1,c	;volatile
  4302  007148  D005               	goto	l14370
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;os.c: 68: {
  4306                           ;os.c: 69: if(!PORTBbits.RB6)
  4307  00714A  BC81               	btfsc	3969,6,c	;volatile
  4308  00714C  D002               	goto	l14368
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;os.c: 70: {
  4312                           ;os.c: 71: --os.encoderCount;
  4313  00714E  0100               	movlb	0	; () banked
  4314  007150  07E2               	decf	_os& (0+255),f,b	;volatile
  4315  007152                     l14368:
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;os.c: 72: }
  4319                           ;os.c: 73: INTCON3bits.INT2IF = 0;
  4320  007152  92F0               	bcf	intcon3,1,c	;volatile
  4321  007154                     l14370:
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;os.c: 74: }
  4325                           ;os.c: 75: if(INTCON3bits.INT3IF)
  4326  007154  A4F0               	btfss	intcon3,2,c	;volatile
  4327  007156  0012               	return	
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;os.c: 76: {
  4331                           ;os.c: 77: if(!PORTBbits.RB7)
  4332  007158  BE81               	btfsc	3969,7,c	;volatile
  4333  00715A  D002               	goto	l14376
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;os.c: 78: {
  4337                           ;os.c: 79: ++os.encoderCount;
  4338  00715C  0100               	movlb	0	; () banked
  4339  00715E  2BE2               	incf	_os& (0+255),f,b	;volatile
  4340  007160                     l14376:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;os.c: 80: }
  4344                           ;os.c: 81: INTCON3bits.INT3IF = 0;
  4345  007160  94F0               	bcf	intcon3,2,c	;volatile
  4346  007162  0012               	return	
  4347  007164                     __end_of_timer_pseudo_isr:
  4348                           	opt stack 0
  4349                           tblptru	equ	0xFF8
  4350                           tblptrh	equ	0xFF7
  4351                           tblptrl	equ	0xFF6
  4352                           tablat	equ	0xFF5
  4353                           intcon	equ	0xFF2
  4354                           intcon3	equ	0xFF0
  4355                           postinc0	equ	0xFEE
  4356                           wreg	equ	0xFE8
  4357                           postdec1	equ	0xFE5
  4358                           plusw1	equ	0xFE3
  4359                           fsr1h	equ	0xFE2
  4360                           fsr1l	equ	0xFE1
  4361                           plusw2	equ	0xFDB
  4362                           status	equ	0xFD8
  4363                           
  4364 ;; *************** function _system_init *****************
  4365 ;; Defined at:
  4366 ;;		line 175 in file "os.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  appendtext    104    0[BANK0 ] unsigned char [104]
  4371 ;;  temp           50    0        unsigned char [50]
  4372 ;;  filename2       9  113[BANK0 ] unsigned char [9]
  4373 ;;  filename        9  104[BANK0 ] unsigned char [9]
  4374 ;;  extension2      4  126[BANK0 ] unsigned char [4]
  4375 ;;  extension       4  122[BANK0 ] unsigned char [4]
  4376 ;;  file_number     1    0        unsigned char 
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4387 ;;      Locals:         0     130       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;      Totals:         0     130       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4390 ;;Total ram usage:      130 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    7
  4393 ;; This function calls:
  4394 ;;		__system_encoder_init
  4395 ;;		__system_timer0_init
  4396 ;;		_fat_init
  4397 ;;		_flash_init
  4398 ;;		_i2c_eeprom_read_calibration
  4399 ;;		_i2c_init
  4400 ;;		_rtcc_init
  4401 ;;		_ui_init
  4402 ;; This function is called by:
  4403 ;;		_main
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text9
  4408  004A5C                     __ptext9:
  4409                           	opt stack 0
  4410  004A5C                     _system_init:
  4411                           	opt stack 23
  4412                           
  4413                           ;os.c: 177: char filename[9] = "TEST    ";
  4414                           
  4415                           ;incstack = 0
  4416  004A5C  EE21  F0E8         	lfsr	2,system_init@F8459
  4417  004A60  EE10  F0C8         	lfsr	1,system_init@filename
  4418  004A64  0E08               	movlw	8
  4419  004A66                     u11141:
  4420  004A66  CFDB FFE3          	movff	plusw2,plusw1
  4421  004A6A  06E8               	decf	wreg,f,c
  4422  004A6C  E2FC               	bc	u11141
  4423                           
  4424                           ;os.c: 178: char extension[4] = "TXT";
  4425  004A6E  C1F5  F0DA         	movff	system_init@F8461,system_init@extension
  4426  004A72  C1F6  F0DB         	movff	system_init@F8461+1,system_init@extension+1
  4427  004A76  C1F7  F0DC         	movff	system_init@F8461+2,system_init@extension+2
  4428  004A7A  C1F8  F0DD         	movff	system_init@F8461+3,system_init@extension+3
  4429                           
  4430                           ;os.c: 179: char filename2[9] = "NEWFILE ";
  4431  004A7E  EE21  F0DF         	lfsr	2,system_init@F8463
  4432  004A82  EE10  F0D1         	lfsr	1,system_init@filename2
  4433  004A86  0E08               	movlw	8
  4434  004A88                     u11151:
  4435  004A88  CFDB FFE3          	movff	plusw2,plusw1
  4436  004A8C  06E8               	decf	wreg,f,c
  4437  004A8E  E2FC               	bc	u11151
  4438                           
  4439                           ;os.c: 180: char extension2[4] = "TXT";
  4440  004A90  C1F1  F0DE         	movff	system_init@F8465,system_init@extension2
  4441  004A94  C1F2  F0DF         	movff	system_init@F8465+1,system_init@extension2+1
  4442  004A98  C1F3  F0E0         	movff	system_init@F8465+2,system_init@extension2+2
  4443  004A9C  C1F4  F0E1         	movff	system_init@F8465+3,system_init@extension2+3
  4444                           
  4445                           ;os.c: 181: char appendtext[104] = "Just appended this text! Now this is super-long. it 
      +                          goes on and on and on ... but finally it ends HERE.";
  4446  004AA0  EE23  F072         	lfsr	2,system_init@F8467
  4447  004AA4  EE10  F060         	lfsr	1,system_init@appendtext
  4448  004AA8  0E67               	movlw	103
  4449  004AAA                     u11161:
  4450  004AAA  CFDB FFE3          	movff	plusw2,plusw1
  4451  004AAE  06E8               	decf	wreg,f,c
  4452  004AB0  E2FC               	bc	u11161
  4453                           
  4454                           ;os.c: 182: uint8_t file_number;
  4455                           ;os.c: 183: uint8_t temp[50];
  4456                           ;os.c: 186: TRISCbits.TRISC2 = 0;
  4457  004AB2  9494               	bcf	3988,2,c	;volatile
  4458                           
  4459                           ;os.c: 187: TRISDbits.TRISD0 = 0;
  4460  004AB4  9095               	bcf	3989,0,c	;volatile
  4461                           
  4462                           ;os.c: 189: TRISDbits.TRISD3 = 0;
  4463  004AB6  9695               	bcf	3989,3,c	;volatile
  4464                           
  4465                           ;os.c: 190: LATDbits.LD3 = 0;
  4466  004AB8  968C               	bcf	3980,3,c	;volatile
  4467                           
  4468                           ;os.c: 193: LATDbits.LD2 = 0;
  4469  004ABA  948C               	bcf	3980,2,c	;volatile
  4470                           
  4471                           ;os.c: 194: TRISDbits.TRISD2 = 0;
  4472  004ABC  9495               	bcf	3989,2,c	;volatile
  4473                           
  4474                           ;os.c: 197: LATBbits.LB1 = 0;
  4475  004ABE  928A               	bcf	3978,1,c	;volatile
  4476                           
  4477                           ;os.c: 198: TRISBbits.TRISB1 = 0;
  4478  004AC0  9293               	bcf	3987,1,c	;volatile
  4479                           
  4480                           ;os.c: 199: LATBbits.LB2 = 0;
  4481  004AC2  948A               	bcf	3978,2,c	;volatile
  4482                           
  4483                           ;os.c: 200: TRISBbits.TRISB2 = 0;
  4484  004AC4  9493               	bcf	3987,2,c	;volatile
  4485                           
  4486                           ;os.c: 201: LATBbits.LB3 = 0;
  4487  004AC6  968A               	bcf	3978,3,c	;volatile
  4488                           
  4489                           ;os.c: 202: TRISBbits.TRISB3 = 0;
  4490  004AC8  9693               	bcf	3987,3,c	;volatile
  4491                           
  4492                           ;os.c: 205: TRISDbits.TRISD6 = 1;
  4493  004ACA  8C95               	bsf	3989,6,c	;volatile
  4494                           
  4495                           ;os.c: 206: TRISDbits.TRISD4 = 0;
  4496  004ACC  9895               	bcf	3989,4,c	;volatile
  4497                           
  4498                           ;os.c: 207: TRISDbits.TRISD5 = 0;
  4499  004ACE  9A95               	bcf	3989,5,c	;volatile
  4500                           
  4501                           ;os.c: 208: TRISDbits.TRISD7 = 0;
  4502  004AD0  9E95               	bcf	3989,7,c	;volatile
  4503                           
  4504                           ;os.c: 209: LATDbits.LD7 = 1;
  4505  004AD2  8E8C               	bsf	3980,7,c	;volatile
  4506                           
  4507                           ;os.c: 212: TRISAbits.TRISA3 = 1;
  4508  004AD4  8692               	bsf	3986,3,c	;volatile
  4509                           
  4510                           ;os.c: 213: ANCON0bits.PCFG3 = 0;
  4511  004AD6  010F               	movlb	15	; () banked
  4512  004AD8  9748               	bcf	72,3,b	;volatile
  4513                           
  4514                           ; BSR set to: 15
  4515                           ;os.c: 214: TRISBbits.TRISB0 = 1;
  4516  004ADA  8093               	bsf	3987,0,c	;volatile
  4517                           
  4518                           ; BSR set to: 15
  4519                           ;os.c: 215: ANCON1bits.PCFG12 = 0;
  4520  004ADC  010F               	movlb	15	; () banked
  4521  004ADE  9949               	bcf	73,4,b	;volatile
  4522                           
  4523                           ; BSR set to: 15
  4524                           ;os.c: 216: TRISAbits.TRISA1 = 1;
  4525  004AE0  8292               	bsf	3986,1,c	;volatile
  4526                           
  4527                           ; BSR set to: 15
  4528                           ;os.c: 217: ANCON0bits.PCFG1 = 0;
  4529  004AE2  010F               	movlb	15	; () banked
  4530  004AE4  9348               	bcf	72,1,b	;volatile
  4531                           
  4532                           ; BSR set to: 15
  4533                           ;os.c: 218: TRISAbits.TRISA2 = 1;
  4534  004AE6  8492               	bsf	3986,2,c	;volatile
  4535                           
  4536                           ; BSR set to: 15
  4537                           ;os.c: 219: ANCON0bits.PCFG2 = 0;
  4538  004AE8  010F               	movlb	15	; () banked
  4539  004AEA  9548               	bcf	72,2,b	;volatile
  4540                           
  4541                           ; BSR set to: 15
  4542                           ;os.c: 222: LATCbits.LC7 = 0;
  4543  004AEC  9E8B               	bcf	3979,7,c	;volatile
  4544                           
  4545                           ; BSR set to: 15
  4546                           ;os.c: 223: TRISCbits.TRISC7 = 0;
  4547  004AEE  9E94               	bcf	3988,7,c	;volatile
  4548                           
  4549                           ; BSR set to: 15
  4550                           ;os.c: 224: LATEbits.LE2 = 1;
  4551  004AF0  848D               	bsf	3981,2,c	;volatile
  4552                           
  4553                           ; BSR set to: 15
  4554                           ;os.c: 225: TRISEbits.TRISE2 = 0;
  4555  004AF2  9496               	bcf	3990,2,c	;volatile
  4556                           
  4557                           ; BSR set to: 15
  4558                           ;os.c: 226: LATEbits.LE1 = 1;
  4559  004AF4  828D               	bsf	3981,1,c	;volatile
  4560                           
  4561                           ; BSR set to: 15
  4562                           ;os.c: 227: TRISEbits.TRISE1 = 0;
  4563  004AF6  9296               	bcf	3990,1,c	;volatile
  4564                           
  4565                           ; BSR set to: 15
  4566                           ;os.c: 228: LATEbits.LE0 = 1;
  4567  004AF8  808D               	bsf	3981,0,c	;volatile
  4568                           
  4569                           ; BSR set to: 15
  4570                           ;os.c: 229: TRISEbits.TRISE0 = 0;
  4571  004AFA  9096               	bcf	3990,0,c	;volatile
  4572                           
  4573                           ; BSR set to: 15
  4574                           ;os.c: 230: LATAbits.LA5 = 1;
  4575  004AFC  8A89               	bsf	3977,5,c	;volatile
  4576                           
  4577                           ; BSR set to: 15
  4578                           ;os.c: 231: TRISAbits.TRISA5 = 0;
  4579  004AFE  9A92               	bcf	3986,5,c	;volatile
  4580                           
  4581                           ; BSR set to: 15
  4582                           ;os.c: 233: TRISAbits.TRISA0 = 1;
  4583  004B00  8092               	bsf	3986,0,c	;volatile
  4584                           
  4585                           ; BSR set to: 15
  4586                           ;os.c: 234: ANCON0bits.PCFG0 = 1;
  4587  004B02  010F               	movlb	15	; () banked
  4588  004B04  8148               	bsf	72,0,b	;volatile
  4589                           
  4590                           ; BSR set to: 15
  4591                           ;os.c: 235: TRISBbits.TRISB6 = 1;
  4592  004B06  8C93               	bsf	3987,6,c	;volatile
  4593                           
  4594                           ; BSR set to: 15
  4595                           ;os.c: 236: TRISBbits.TRISB7 = 1;
  4596  004B08  8E93               	bsf	3987,7,c	;volatile
  4597                           
  4598                           ; BSR set to: 15
  4599                           ;os.c: 239: os.bootloader_mode = BOOTLOADER_MODE_START;
  4600  004B0A  0E00               	movlw	0
  4601  004B0C  0100               	movlb	0	; () banked
  4602  004B0E  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;os.c: 240: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  4606  004B10  0E00               	movlw	0
  4607  004B12  0100               	movlb	0	; () banked
  4608  004B14  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;os.c: 244: PIR1bits.TMR1IF = 0;
  4612  004B16  909E               	bcf	3998,0,c	;volatile
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;os.c: 246: TMR1H = 0xFC;
  4616  004B18  0EFC               	movlw	252
  4617  004B1A  6ECF               	movwf	4047,c	;volatile
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;os.c: 247: TMR1L = 0x00;
  4621  004B1C  0E00               	movlw	0
  4622  004B1E  6ECE               	movwf	4046,c	;volatile
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;os.c: 249: T1CONbits.TMR1ON = 1;
  4626  004B20  80CD               	bsf	4045,0,c	;volatile
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;os.c: 251: T1CONbits.T1OSCEN = 1;
  4630  004B22  86CD               	bsf	4045,3,c	;volatile
  4631  004B24                     l1240:
  4632  004B24  A09E               	btfss	3998,0,c	;volatile
  4633  004B26  D7FE               	goto	l1240
  4634                           
  4635                           ;os.c: 255: T1CONbits.TMR1ON = 0;
  4636  004B28  90CD               	bcf	4045,0,c	;volatile
  4637                           
  4638                           ;os.c: 258: i2c_init();
  4639  004B2A  ECA6  F03C         	call	_i2c_init	;wreg free
  4640                           
  4641                           ;os.c: 260: ui_init();
  4642  004B2E  EC25  F03C         	call	_ui_init	;wreg free
  4643                           
  4644                           ;os.c: 263: rtcc_init();
  4645  004B32  EC70  F03B         	call	_rtcc_init	;wreg free
  4646                           
  4647                           ;os.c: 266: i2c_eeprom_read_calibration();
  4648  004B36  EC23  F021         	call	_i2c_eeprom_read_calibration	;wreg free
  4649                           
  4650                           ;os.c: 269: _system_timer0_init();
  4651  004B3A  EC80  F03B         	call	__system_timer0_init	;wreg free
  4652                           
  4653                           ;os.c: 272: _system_encoder_init();
  4654  004B3E  ECED  F037         	call	__system_encoder_init	;wreg free
  4655                           
  4656                           ;os.c: 274: flash_init();
  4657  004B42  EC55  F036         	call	_flash_init	;wreg free
  4658                           
  4659                           ;os.c: 275: fat_init();
  4660  004B46  EC8F  F03C         	call	_fat_init	;wreg free
  4661  004B4A  0012               	return		;funcret
  4662  004B4C                     __end_of_system_init:
  4663                           	opt stack 0
  4664                           tblptru	equ	0xFF8
  4665                           tblptrh	equ	0xFF7
  4666                           tblptrl	equ	0xFF6
  4667                           tablat	equ	0xFF5
  4668                           intcon	equ	0xFF2
  4669                           intcon3	equ	0xFF0
  4670                           postinc0	equ	0xFEE
  4671                           wreg	equ	0xFE8
  4672                           postdec1	equ	0xFE5
  4673                           plusw1	equ	0xFE3
  4674                           fsr1h	equ	0xFE2
  4675                           fsr1l	equ	0xFE1
  4676                           plusw2	equ	0xFDB
  4677                           status	equ	0xFD8
  4678                           
  4679 ;; *************** function _ui_init *****************
  4680 ;; Defined at:
  4681 ;;		line 65 in file "ui.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;		None
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		wreg, status,2
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4699 ;;Total ram usage:        0 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_system_init
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           	psect	text10
  4709  00784A                     __ptext10:
  4710                           	opt stack 0
  4711  00784A                     _ui_init:
  4712                           	opt stack 29
  4713                           
  4714                           ;ui.c: 67: system_ui_inactive_count = 0;
  4715                           
  4716                           ;incstack = 0
  4717  00784A  0E00               	movlw	0
  4718  00784C  0101               	movlb	1	; () banked
  4719  00784E  6F73               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4720  007850  0E00               	movlw	0
  4721  007852  6F72               	movwf	_system_ui_inactive_count& (0+255),b
  4722                           
  4723                           ; BSR set to: 1
  4724                           ;ui.c: 69: LATCbits.LC2 = 1;
  4725  007854  848B               	bsf	3979,2,c	;volatile
  4726                           
  4727                           ;ui.c: 70: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  4728  007856  0E01               	movlw	1
  4729  007858  0101               	movlb	1	; () banked
  4730  00785A  6F83               	movwf	_userInterfaceStatus& (0+255),b
  4731                           
  4732                           ; BSR set to: 1
  4733  00785C  0012               	return		;funcret
  4734  00785E                     __end_of_ui_init:
  4735                           	opt stack 0
  4736                           tblptru	equ	0xFF8
  4737                           tblptrh	equ	0xFF7
  4738                           tblptrl	equ	0xFF6
  4739                           tablat	equ	0xFF5
  4740                           intcon	equ	0xFF2
  4741                           intcon3	equ	0xFF0
  4742                           postinc0	equ	0xFEE
  4743                           wreg	equ	0xFE8
  4744                           postdec1	equ	0xFE5
  4745                           plusw1	equ	0xFE3
  4746                           fsr1h	equ	0xFE2
  4747                           fsr1l	equ	0xFE1
  4748                           plusw2	equ	0xFDB
  4749                           status	equ	0xFD8
  4750                           
  4751 ;; *************** function _rtcc_init *****************
  4752 ;; Defined at:
  4753 ;;		line 81 in file "rtcc.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;		None
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;		None
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4771 ;;Total ram usage:        0 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; Hardware stack levels required when called:    4
  4774 ;; This function calls:
  4775 ;;		_rtcc_read_eeprom
  4776 ;; This function is called by:
  4777 ;;		_system_init
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text11
  4782  0076E0                     __ptext11:
  4783                           	opt stack 0
  4784  0076E0                     _rtcc_init:
  4785                           	opt stack 25
  4786                           
  4787                           ;rtcc.c: 83: EECON2 = 0x55;
  4788                           
  4789                           ; BSR set to: 1
  4790                           ;incstack = 0
  4791  0076E0  0E55               	movlw	85
  4792  0076E2  6EA7               	movwf	4007,c	;volatile
  4793                           
  4794                           ;rtcc.c: 84: EECON2 = 0xAA;
  4795  0076E4  0EAA               	movlw	170
  4796  0076E6  6EA7               	movwf	4007,c	;volatile
  4797                           
  4798                           ;rtcc.c: 85: RTCCFGbits.RTCWREN = 1;
  4799  0076E8  010F               	movlb	15	; () banked
  4800  0076EA  8B3F               	bsf	63,5,b	;volatile
  4801                           
  4802                           ; BSR set to: 15
  4803                           ;rtcc.c: 86: RTCCFGbits.RTCEN = 1;
  4804  0076EC  010F               	movlb	15	; () banked
  4805  0076EE  8F3F               	bsf	63,7,b	;volatile
  4806                           
  4807                           ; BSR set to: 15
  4808                           ;rtcc.c: 87: RTCCFGbits.RTCOE = 0;
  4809  0076F0  010F               	movlb	15	; () banked
  4810  0076F2  953F               	bcf	63,2,b	;volatile
  4811                           
  4812                           ;rtcc.c: 88: RTCCAL = 0x00;
  4813  0076F4  0E00               	movlw	0
  4814  0076F6  010F               	movlb	15	; () banked
  4815  0076F8  6F3E               	movwf	62,b	;volatile
  4816                           
  4817                           ; BSR set to: 15
  4818                           ;rtcc.c: 91: rtcc_read_eeprom();
  4819  0076FA  ECD2  F038         	call	_rtcc_read_eeprom	;wreg free
  4820  0076FE  0012               	return		;funcret
  4821  007700                     __end_of_rtcc_init:
  4822                           	opt stack 0
  4823                           tblptru	equ	0xFF8
  4824                           tblptrh	equ	0xFF7
  4825                           tblptrl	equ	0xFF6
  4826                           tablat	equ	0xFF5
  4827                           intcon	equ	0xFF2
  4828                           intcon3	equ	0xFF0
  4829                           postinc0	equ	0xFEE
  4830                           wreg	equ	0xFE8
  4831                           postdec1	equ	0xFE5
  4832                           plusw1	equ	0xFE3
  4833                           fsr1h	equ	0xFE2
  4834                           fsr1l	equ	0xFE1
  4835                           plusw2	equ	0xFDB
  4836                           status	equ	0xFD8
  4837                           
  4838 ;; *************** function _rtcc_read_eeprom *****************
  4839 ;; Defined at:
  4840 ;;		line 330 in file "rtcc.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;		None
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  date            6   25[COMRAM] unsigned char [6]
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4855 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4857 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4858 ;;Total ram usage:        6 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:    3
  4861 ;; This function calls:
  4862 ;;		_i2c_eeprom_read
  4863 ;;		_rtcc_set_day
  4864 ;;		_rtcc_set_hours
  4865 ;;		_rtcc_set_minutes
  4866 ;;		_rtcc_set_month
  4867 ;;		_rtcc_set_seconds
  4868 ;;		_rtcc_set_year
  4869 ;; This function is called by:
  4870 ;;		_rtcc_init
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           	psect	text12
  4875  0071A4                     __ptext12:
  4876                           	opt stack 0
  4877  0071A4                     _rtcc_read_eeprom:
  4878                           	opt stack 25
  4879                           
  4880                           ;rtcc.c: 332: uint8_t date[6];
  4881                           ;rtcc.c: 333: i2c_eeprom_read(0x0040, &date[0], 6);
  4882                           
  4883                           ;incstack = 0
  4884  0071A4  0E00               	movlw	0
  4885  0071A6  6E13               	movwf	i2c_eeprom_read@address+1,c
  4886  0071A8  0E40               	movlw	64
  4887  0071AA  6E12               	movwf	i2c_eeprom_read@address,c
  4888  0071AC  0E1A               	movlw	low rtcc_read_eeprom@date
  4889  0071AE  6E14               	movwf	i2c_eeprom_read@data,c
  4890  0071B0  0E00               	movlw	high rtcc_read_eeprom@date
  4891  0071B2  6E15               	movwf	i2c_eeprom_read@data+1,c
  4892  0071B4  0E06               	movlw	6
  4893  0071B6  6E16               	movwf	i2c_eeprom_read@length,c
  4894  0071B8  ECA3  F036         	call	_i2c_eeprom_read	;wreg free
  4895                           
  4896                           ;rtcc.c: 336: rtcc_set_year(date[0]);
  4897  0071BC  501A               	movf	rtcc_read_eeprom@date,w,c
  4898  0071BE  ECC7  F03B         	call	_rtcc_set_year
  4899                           
  4900                           ;rtcc.c: 337: rtcc_set_month(date[1]);
  4901  0071C2  501B               	movf	rtcc_read_eeprom@date+1,w,c
  4902  0071C4  ECDF  F03B         	call	_rtcc_set_month
  4903                           
  4904                           ;rtcc.c: 338: rtcc_set_day(date[2]);
  4905  0071C8  501C               	movf	rtcc_read_eeprom@date+2,w,c
  4906  0071CA  EC03  F03C         	call	_rtcc_set_day
  4907                           
  4908                           ;rtcc.c: 339: rtcc_set_hours(date[3]);
  4909  0071CE  501D               	movf	rtcc_read_eeprom@date+3,w,c
  4910  0071D0  ECF7  F03B         	call	_rtcc_set_hours
  4911                           
  4912                           ;rtcc.c: 340: rtcc_set_minutes(date[4]);
  4913  0071D4  501E               	movf	rtcc_read_eeprom@date+4,w,c
  4914  0071D6  ECEB  F03B         	call	_rtcc_set_minutes
  4915                           
  4916                           ;rtcc.c: 341: rtcc_set_seconds(date[5]);
  4917  0071DA  501F               	movf	rtcc_read_eeprom@date+5,w,c
  4918  0071DC  ECD3  F03B         	call	_rtcc_set_seconds
  4919  0071E0  0012               	return		;funcret
  4920  0071E2                     __end_of_rtcc_read_eeprom:
  4921                           	opt stack 0
  4922                           tblptru	equ	0xFF8
  4923                           tblptrh	equ	0xFF7
  4924                           tblptrl	equ	0xFF6
  4925                           tablat	equ	0xFF5
  4926                           intcon	equ	0xFF2
  4927                           intcon3	equ	0xFF0
  4928                           postinc0	equ	0xFEE
  4929                           wreg	equ	0xFE8
  4930                           postdec1	equ	0xFE5
  4931                           plusw1	equ	0xFE3
  4932                           fsr1h	equ	0xFE2
  4933                           fsr1l	equ	0xFE1
  4934                           plusw2	equ	0xFDB
  4935                           status	equ	0xFD8
  4936                           
  4937 ;; *************** function _i2c_init *****************
  4938 ;; Defined at:
  4939 ;;		line 93 in file "i2c.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg, status,2, status,0, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4957 ;;Total ram usage:        0 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:    1
  4960 ;; This function calls:
  4961 ;;		__i2c_open_1
  4962 ;;		_i2c_set_frequency
  4963 ;; This function is called by:
  4964 ;;		_system_init
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text13
  4969  00794C                     __ptext13:
  4970                           	opt stack 0
  4971  00794C                     _i2c_init:
  4972                           	opt stack 28
  4973                           
  4974                           ;i2c.c: 95: _i2c_open_1();
  4975                           
  4976                           ;incstack = 0
  4977  00794C  ECBB  F03B         	call	__i2c_open_1	;wreg free
  4978                           
  4979                           ;i2c.c: 97: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4980  007950  0E00               	movlw	0
  4981  007952  EC8B  F03A         	call	_i2c_set_frequency
  4982  007956  0012               	return		;funcret
  4983  007958                     __end_of_i2c_init:
  4984                           	opt stack 0
  4985                           tblptru	equ	0xFF8
  4986                           tblptrh	equ	0xFF7
  4987                           tblptrl	equ	0xFF6
  4988                           tablat	equ	0xFF5
  4989                           intcon	equ	0xFF2
  4990                           intcon3	equ	0xFF0
  4991                           postinc0	equ	0xFEE
  4992                           wreg	equ	0xFE8
  4993                           postdec1	equ	0xFE5
  4994                           plusw1	equ	0xFE3
  4995                           fsr1h	equ	0xFE2
  4996                           fsr1l	equ	0xFE1
  4997                           plusw2	equ	0xFDB
  4998                           status	equ	0xFD8
  4999                           
  5000 ;; *************** function __i2c_open_1 *****************
  5001 ;; Defined at:
  5002 ;;		line 32 in file "i2c.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;		None
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5020 ;;Total ram usage:        0 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_i2c_init
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text14
  5030  007776                     __ptext14:
  5031                           	opt stack 0
  5032  007776                     __i2c_open_1:
  5033                           	opt stack 28
  5034                           
  5035                           ;i2c.c: 34: SSP1STATbits.SMP = 0;
  5036                           
  5037                           ;incstack = 0
  5038  007776  9EC7               	bcf	4039,7,c	;volatile
  5039                           
  5040                           ;i2c.c: 35: SSP1STATbits.CKE = 0;
  5041  007778  9CC7               	bcf	4039,6,c	;volatile
  5042                           
  5043                           ;i2c.c: 36: SSP1ADD = 29;
  5044  00777A  0E1D               	movlw	29
  5045  00777C  6EC8               	movwf	4040,c	;volatile
  5046                           
  5047                           ;i2c.c: 37: SSP1CON1bits.WCOL = 0;
  5048  00777E  9EC6               	bcf	4038,7,c	;volatile
  5049                           
  5050                           ;i2c.c: 38: SSP1CON1bits.SSPOV = 0;
  5051  007780  9CC6               	bcf	4038,6,c	;volatile
  5052                           
  5053                           ;i2c.c: 39: SSP1CON1bits.SSPM = 0b1000;
  5054  007782  50C6               	movf	4038,w,c	;volatile
  5055  007784  0BF0               	andlw	-16
  5056  007786  0908               	iorlw	8
  5057  007788  6EC6               	movwf	4038,c	;volatile
  5058                           
  5059                           ;i2c.c: 40: SSP1CON1bits.SSPEN = 1;
  5060  00778A  8AC6               	bsf	4038,5,c	;volatile
  5061  00778C  0012               	return		;funcret
  5062  00778E                     __end_of__i2c_open_1:
  5063                           	opt stack 0
  5064                           tblptru	equ	0xFF8
  5065                           tblptrh	equ	0xFF7
  5066                           tblptrl	equ	0xFF6
  5067                           tablat	equ	0xFF5
  5068                           intcon	equ	0xFF2
  5069                           intcon3	equ	0xFF0
  5070                           postinc0	equ	0xFEE
  5071                           wreg	equ	0xFE8
  5072                           postdec1	equ	0xFE5
  5073                           plusw1	equ	0xFE3
  5074                           fsr1h	equ	0xFE2
  5075                           fsr1l	equ	0xFE1
  5076                           plusw2	equ	0xFDB
  5077                           status	equ	0xFD8
  5078                           
  5079 ;; *************** function _i2c_eeprom_read_calibration *****************
  5080 ;; Defined at:
  5081 ;;		line 556 in file "i2c.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;		None
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;  buffer          4   27[COMRAM] unsigned char [4]
  5086 ;;  addr            2   31[COMRAM] unsigned int 
  5087 ;;  cntr            1   33[COMRAM] unsigned char 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1    wreg      void 
  5090 ;; Registers used:
  5091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5098 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5099 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5100 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5101 ;;Total ram usage:        9 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    3
  5104 ;; This function calls:
  5105 ;;		__i2c_eeprom_load_default_calibration
  5106 ;;		_i2c_eeprom_read
  5107 ;;		_schedule_eeprom_write_task
  5108 ;; This function is called by:
  5109 ;;		_system_init
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text15
  5114  004246                     __ptext15:
  5115                           	opt stack 0
  5116  004246                     _i2c_eeprom_read_calibration:
  5117                           	opt stack 26
  5118                           
  5119                           ;i2c.c: 558: uint8_t buffer[4];
  5120                           ;i2c.c: 559: uint8_t cntr;
  5121                           ;i2c.c: 560: uint16_t addr;
  5122                           ;i2c.c: 562: for(cntr=0; cntr<CALIBRATION_INDEX_COUNT; ++cntr)
  5123                           
  5124                           ;incstack = 0
  5125  004246  0E00               	movlw	0
  5126  004248  6E22               	movwf	i2c_eeprom_read_calibration@cntr,c
  5127  00424A                     l13268:
  5128  00424A  0E06               	movlw	6
  5129  00424C  6422               	cpfsgt	i2c_eeprom_read_calibration@cntr,c
  5130  00424E  D001               	goto	l13272
  5131  004250  0012               	return	
  5132  004252                     l13272:
  5133                           
  5134                           ;i2c.c: 563: {
  5135                           ;i2c.c: 565: addr = 0x0100 + (cntr<<4);
  5136  004252  5022               	movf	i2c_eeprom_read_calibration@cntr,w,c
  5137  004254  6E1A               	movwf	??_i2c_eeprom_read_calibration& (0+255),c
  5138  004256  6A1B               	clrf	(??_i2c_eeprom_read_calibration+1)& (0+255),c
  5139  004258  3A1A               	swapf	??_i2c_eeprom_read_calibration,f,c
  5140  00425A  3A1B               	swapf	??_i2c_eeprom_read_calibration+1,f,c
  5141  00425C  0EF0               	movlw	240
  5142  00425E  161B               	andwf	??_i2c_eeprom_read_calibration+1,f,c
  5143  004260  501A               	movf	??_i2c_eeprom_read_calibration,w,c
  5144  004262  0B0F               	andlw	15
  5145  004264  121B               	iorwf	??_i2c_eeprom_read_calibration+1,f,c
  5146  004266  0EF0               	movlw	240
  5147  004268  161A               	andwf	??_i2c_eeprom_read_calibration,f,c
  5148  00426A  0E00               	movlw	0
  5149  00426C  241A               	addwf	??_i2c_eeprom_read_calibration,w,c
  5150  00426E  6E20               	movwf	i2c_eeprom_read_calibration@addr,c
  5151  004270  0E01               	movlw	1
  5152  004272  201B               	addwfc	??_i2c_eeprom_read_calibration+1,w,c
  5153  004274  6E21               	movwf	i2c_eeprom_read_calibration@addr+1,c
  5154                           
  5155                           ;i2c.c: 566: i2c_eeprom_read(addr, &buffer[0], 4);
  5156  004276  C020  F012         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  5157  00427A  C021  F013         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  5158  00427E  0E1C               	movlw	low i2c_eeprom_read_calibration@buffer
  5159  004280  6E14               	movwf	i2c_eeprom_read@data,c
  5160  004282  0E00               	movlw	high i2c_eeprom_read_calibration@buffer
  5161  004284  6E15               	movwf	i2c_eeprom_read@data+1,c
  5162  004286  0E04               	movlw	4
  5163  004288  6E16               	movwf	i2c_eeprom_read@length,c
  5164  00428A  ECA3  F036         	call	_i2c_eeprom_read	;wreg free
  5165                           
  5166                           ;i2c.c: 568: if((buffer[0]==0x77) && (buffer[1]==0x55) && (buffer[2]==0x33) && (buffer[3
      +                          ]==cntr))
  5167  00428E  0E77               	movlw	119
  5168  004290  181C               	xorwf	i2c_eeprom_read_calibration@buffer,w,c
  5169  004292  A4D8               	btfss	status,2,c
  5170  004294  D021               	goto	l13288
  5171  004296  0E55               	movlw	85
  5172  004298  181D               	xorwf	i2c_eeprom_read_calibration@buffer+1,w,c
  5173  00429A  A4D8               	btfss	status,2,c
  5174  00429C  D01D               	goto	l13288
  5175  00429E  0E33               	movlw	51
  5176  0042A0  181E               	xorwf	i2c_eeprom_read_calibration@buffer+2,w,c
  5177  0042A2  A4D8               	btfss	status,2,c
  5178  0042A4  D019               	goto	l13288
  5179  0042A6  5022               	movf	i2c_eeprom_read_calibration@cntr,w,c
  5180  0042A8  181F               	xorwf	i2c_eeprom_read_calibration@buffer+3,w,c
  5181  0042AA  A4D8               	btfss	status,2,c
  5182  0042AC  D015               	goto	l13288
  5183                           
  5184                           ;i2c.c: 569: {
  5185                           ;i2c.c: 571: addr += 4;
  5186  0042AE  0E04               	movlw	4
  5187  0042B0  2620               	addwf	i2c_eeprom_read_calibration@addr,f,c
  5188  0042B2  0E00               	movlw	0
  5189  0042B4  2221               	addwfc	i2c_eeprom_read_calibration@addr+1,f,c
  5190                           
  5191                           ;i2c.c: 572: i2c_eeprom_read(addr, (uint8_t*) &calibrationParameters[cntr], 12);
  5192  0042B6  C020  F012         	movff	i2c_eeprom_read_calibration@addr,i2c_eeprom_read@address
  5193  0042BA  C021  F013         	movff	i2c_eeprom_read_calibration@addr+1,i2c_eeprom_read@address+1
  5194  0042BE  5022               	movf	i2c_eeprom_read_calibration@cntr,w,c
  5195  0042C0  0D0C               	mullw	12
  5196  0042C2  0E10               	movlw	low _calibrationParameters
  5197  0042C4  24F3               	addwf	prodl,w,c
  5198  0042C6  6E14               	movwf	i2c_eeprom_read@data,c
  5199  0042C8  0E02               	movlw	high _calibrationParameters
  5200  0042CA  20F4               	addwfc	prodh,w,c
  5201  0042CC  6E15               	movwf	i2c_eeprom_read@data+1,c
  5202  0042CE  0E0C               	movlw	12
  5203  0042D0  6E16               	movwf	i2c_eeprom_read@length,c
  5204  0042D2  ECA3  F036         	call	_i2c_eeprom_read	;wreg free
  5205                           
  5206                           ;i2c.c: 573: }
  5207  0042D6  D03F               	goto	l13308
  5208  0042D8                     l13288:
  5209                           
  5210                           ;i2c.c: 574: else
  5211                           ;i2c.c: 575: {
  5212                           ;i2c.c: 577: _i2c_eeprom_load_default_calibration(&calibrationParameters[cntr], cntr);
  5213  0042D8  5022               	movf	i2c_eeprom_read_calibration@cntr,w,c
  5214  0042DA  0D0C               	mullw	12
  5215  0042DC  0E10               	movlw	low _calibrationParameters
  5216  0042DE  24F3               	addwf	prodl,w,c
  5217  0042E0  6E01               	movwf	__i2c_eeprom_load_default_calibration@buffer,c
  5218  0042E2  0E02               	movlw	high _calibrationParameters
  5219  0042E4  20F4               	addwfc	prodh,w,c
  5220  0042E6  6E02               	movwf	__i2c_eeprom_load_default_calibration@buffer+1,c
  5221  0042E8  C022  F003         	movff	i2c_eeprom_read_calibration@cntr,__i2c_eeprom_load_default_calibration@index
  5222  0042EC  EC40  F006         	call	__i2c_eeprom_load_default_calibration	;wreg free
  5223                           
  5224                           ;i2c.c: 579: switch((calibrationIndex_t) cntr)
  5225  0042F0  D01C               	goto	l13306
  5226  0042F2                     l13290:
  5227                           
  5228                           ;i2c.c: 582: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_VOLTAGE);
  5229  0042F2  0E02               	movlw	2
  5230  0042F4  ECDC  F035         	call	_schedule_eeprom_write_task
  5231                           
  5232                           ;i2c.c: 583: break;
  5233  0042F8  D02E               	goto	l13308
  5234  0042FA                     l13292:
  5235                           
  5236                           ;i2c.c: 585: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_VOLTAGE);
  5237  0042FA  0E03               	movlw	3
  5238  0042FC  ECDC  F035         	call	_schedule_eeprom_write_task
  5239                           
  5240                           ;i2c.c: 586: break;
  5241  004300  D02A               	goto	l13308
  5242  004302                     l13294:
  5243                           
  5244                           ;i2c.c: 588: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_INPUT_CURRENT);
  5245  004302  0E04               	movlw	4
  5246  004304  ECDC  F035         	call	_schedule_eeprom_write_task
  5247                           
  5248                           ;i2c.c: 589: break;
  5249  004308  D026               	goto	l13308
  5250  00430A                     l13296:
  5251                           
  5252                           ;i2c.c: 591: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_OUTPUT_CURRENT);
  5253  00430A  0E05               	movlw	5
  5254  00430C  ECDC  F035         	call	_schedule_eeprom_write_task
  5255                           
  5256                           ;i2c.c: 592: break;
  5257  004310  D022               	goto	l13308
  5258  004312                     l13298:
  5259                           
  5260                           ;i2c.c: 594: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_ONBOARD_TEMPERATUR
      +                          E);
  5261  004312  0E06               	movlw	6
  5262  004314  ECDC  F035         	call	_schedule_eeprom_write_task
  5263                           
  5264                           ;i2c.c: 595: break;
  5265  004318  D01E               	goto	l13308
  5266  00431A                     l13300:
  5267                           
  5268                           ;i2c.c: 597: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_1);
  5269  00431A  0E07               	movlw	7
  5270  00431C  ECDC  F035         	call	_schedule_eeprom_write_task
  5271                           
  5272                           ;i2c.c: 598: break;
  5273  004320  D01A               	goto	l13308
  5274  004322                     l13302:
  5275                           
  5276                           ;i2c.c: 600: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_EXTERNAL_TEMPERATU
      +                          RE_2);
  5277  004322  0E08               	movlw	8
  5278  004324  ECDC  F035         	call	_schedule_eeprom_write_task
  5279                           
  5280                           ;i2c.c: 602: }
  5281                           
  5282                           ;i2c.c: 601: break;
  5283  004328  D016               	goto	l13308
  5284  00432A                     l13306:
  5285  00432A  5022               	movf	i2c_eeprom_read_calibration@cntr,w,c
  5286                           
  5287                           ; Switch size 1, requested type "space"
  5288                           ; Number of cases is 7, Range of values is 0 to 6
  5289                           ; switch strategies available:
  5290                           ; Name         Instructions Cycles
  5291                           ; simple_byte           22    12 (average)
  5292                           ;	Chosen strategy is simple_byte
  5293  00432C  0A00               	xorlw	0	; case 0
  5294  00432E  B4D8               	btfsc	status,2,c
  5295  004330  D7E0               	goto	l13290
  5296  004332  0A01               	xorlw	1	; case 1
  5297  004334  B4D8               	btfsc	status,2,c
  5298  004336  D7E1               	goto	l13292
  5299  004338  0A03               	xorlw	3	; case 2
  5300  00433A  B4D8               	btfsc	status,2,c
  5301  00433C  D7E2               	goto	l13294
  5302  00433E  0A01               	xorlw	1	; case 3
  5303  004340  B4D8               	btfsc	status,2,c
  5304  004342  D7E3               	goto	l13296
  5305  004344  0A07               	xorlw	7	; case 4
  5306  004346  B4D8               	btfsc	status,2,c
  5307  004348  D7E4               	goto	l13298
  5308  00434A  0A01               	xorlw	1	; case 5
  5309  00434C  B4D8               	btfsc	status,2,c
  5310  00434E  D7E5               	goto	l13300
  5311  004350  0A03               	xorlw	3	; case 6
  5312  004352  B4D8               	btfsc	status,2,c
  5313  004354  D7E6               	goto	l13302
  5314  004356                     l13308:
  5315  004356  2A22               	incf	i2c_eeprom_read_calibration@cntr,f,c
  5316  004358  D778               	goto	l13268
  5317  00435A                     __end_of_i2c_eeprom_read_calibration:
  5318                           	opt stack 0
  5319                           tblptru	equ	0xFF8
  5320                           tblptrh	equ	0xFF7
  5321                           tblptrl	equ	0xFF6
  5322                           tablat	equ	0xFF5
  5323                           prodh	equ	0xFF4
  5324                           prodl	equ	0xFF3
  5325                           intcon	equ	0xFF2
  5326                           intcon3	equ	0xFF0
  5327                           postinc0	equ	0xFEE
  5328                           wreg	equ	0xFE8
  5329                           postdec1	equ	0xFE5
  5330                           plusw1	equ	0xFE3
  5331                           fsr1h	equ	0xFE2
  5332                           fsr1l	equ	0xFE1
  5333                           plusw2	equ	0xFDB
  5334                           status	equ	0xFD8
  5335                           
  5336 ;; *************** function _i2c_eeprom_read *****************
  5337 ;; Defined at:
  5338 ;;		line 540 in file "i2c.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  address         2   17[COMRAM] unsigned int 
  5341 ;;  data            2   19[COMRAM] PTR unsigned char 
  5342 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), calibrationParameters(84), 
  5343 ;;  length          1   21[COMRAM] unsigned char 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  slave_addres    1   24[COMRAM] unsigned char 
  5346 ;;  addr            1   23[COMRAM] unsigned char 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5356 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5358 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5359 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5360 ;;Total ram usage:        8 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    2
  5363 ;; This function calls:
  5364 ;;		__i2c_read
  5365 ;;		__i2c_write
  5366 ;;		_i2c_set_frequency
  5367 ;; This function is called by:
  5368 ;;		_i2c_eeprom_read_calibration
  5369 ;;		_rtcc_read_eeprom
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text16
  5374  006D46                     __ptext16:
  5375                           	opt stack 0
  5376  006D46                     _i2c_eeprom_read:
  5377                           	opt stack 25
  5378                           
  5379                           ;i2c.c: 542: uint8_t slave_address;
  5380                           ;i2c.c: 543: uint8_t addr;
  5381                           ;i2c.c: 544: addr = address & 0xFF;
  5382                           
  5383                           ;incstack = 0
  5384  006D46  C012  F018         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  5385                           
  5386                           ;i2c.c: 545: address &= 0b0000011100000000;
  5387  006D4A  0E00               	movlw	0
  5388  006D4C  1612               	andwf	i2c_eeprom_read@address,f,c
  5389  006D4E  0E07               	movlw	7
  5390  006D50  1613               	andwf	i2c_eeprom_read@address+1,f,c
  5391                           
  5392                           ;i2c.c: 546: address >>= 7;
  5393  006D52  0E07               	movlw	7
  5394  006D54  6E17               	movwf	??_i2c_eeprom_read& (0+255),c
  5395  006D56                     u8485:
  5396  006D56  90D8               	bcf	status,0,c
  5397  006D58  3213               	rrcf	i2c_eeprom_read@address+1,f,c
  5398  006D5A  3212               	rrcf	i2c_eeprom_read@address,f,c
  5399  006D5C  2E17               	decfsz	??_i2c_eeprom_read& (0+255),f,c
  5400  006D5E  D7FB               	goto	u8485
  5401                           
  5402                           ;i2c.c: 547: slave_address = 0b10100000 | address;
  5403  006D60  5012               	movf	i2c_eeprom_read@address,w,c
  5404  006D62  09A0               	iorlw	160
  5405  006D64  6E19               	movwf	i2c_eeprom_read@slave_address,c
  5406                           
  5407                           ;i2c.c: 550: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  5408  006D66  0E02               	movlw	2
  5409  006D68  EC8B  F03A         	call	_i2c_set_frequency
  5410                           
  5411                           ;i2c.c: 552: _i2c_write(slave_address, &addr, 1);
  5412  006D6C  0E18               	movlw	low i2c_eeprom_read@addr
  5413  006D6E  6E06               	movwf	__i2c_write@data,c
  5414  006D70  0E00               	movlw	high i2c_eeprom_read@addr
  5415  006D72  6E07               	movwf	__i2c_write@data+1,c
  5416  006D74  0E01               	movlw	1
  5417  006D76  6E08               	movwf	__i2c_write@length,c
  5418  006D78  5019               	movf	i2c_eeprom_read@slave_address,w,c
  5419  006D7A  EC82  F037         	call	__i2c_write
  5420                           
  5421                           ;i2c.c: 553: _i2c_read(slave_address, &data[0], length);
  5422  006D7E  C014  F006         	movff	i2c_eeprom_read@data,__i2c_read@data
  5423  006D82  C015  F007         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  5424  006D86  C016  F008         	movff	i2c_eeprom_read@length,__i2c_read@length
  5425  006D8A  5019               	movf	i2c_eeprom_read@slave_address,w,c
  5426  006D8C  ECC1  F02E         	call	__i2c_read
  5427  006D90  0012               	return		;funcret
  5428  006D92                     __end_of_i2c_eeprom_read:
  5429                           	opt stack 0
  5430                           tblptru	equ	0xFF8
  5431                           tblptrh	equ	0xFF7
  5432                           tblptrl	equ	0xFF6
  5433                           tablat	equ	0xFF5
  5434                           prodh	equ	0xFF4
  5435                           prodl	equ	0xFF3
  5436                           intcon	equ	0xFF2
  5437                           intcon3	equ	0xFF0
  5438                           postinc0	equ	0xFEE
  5439                           wreg	equ	0xFE8
  5440                           postdec1	equ	0xFE5
  5441                           plusw1	equ	0xFE3
  5442                           fsr1h	equ	0xFE2
  5443                           fsr1l	equ	0xFE1
  5444                           plusw2	equ	0xFDB
  5445                           status	equ	0xFD8
  5446                           
  5447 ;; *************** function __i2c_eeprom_load_default_calibration *****************
  5448 ;; Defined at:
  5449 ;;		line 622 in file "i2c.c"
  5450 ;; Parameters:    Size  Location     Type
  5451 ;;  buffer          2    0[COMRAM] PTR struct .
  5452 ;;		 -> calibrationParameters(84), 
  5453 ;;  index           1    2[COMRAM] enum E8141
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;		None
  5456 ;; Return value:  Size  Location     Type
  5457 ;;                  1    wreg      void 
  5458 ;; Registers used:
  5459 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5465 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5468 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5469 ;;Total ram usage:        3 bytes
  5470 ;; Hardware stack levels used:    1
  5471 ;; This function calls:
  5472 ;;		Nothing
  5473 ;; This function is called by:
  5474 ;;		_i2c_eeprom_read_calibration
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           
  5478                           	psect	text17
  5479  000C80                     __ptext17:
  5480                           	opt stack 0
  5481  000C80                     __i2c_eeprom_load_default_calibration:
  5482                           	opt stack 28
  5483                           
  5484                           ;i2c.c: 624: switch(index)
  5485                           
  5486                           ;incstack = 0
  5487  000C80  D1C7               	goto	l12194
  5488  000C82                     l12094:
  5489                           
  5490                           ;i2c.c: 627: (*buffer).NeutralOffset = 0;
  5491  000C82  C001  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  5492  000C86  C002  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  5493  000C8A  0E00               	movlw	0
  5494  000C8C  6EDE               	movwf	postinc2,c
  5495  000C8E  0E00               	movlw	0
  5496  000C90  6EDD               	movwf	postdec2,c
  5497                           
  5498                           ;i2c.c: 628: (*buffer).NeutralMultiplier = 11;
  5499  000C92  EE20 F002          	lfsr	2,2
  5500  000C96  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5501  000C98  26D9               	addwf	fsr2l,f,c
  5502  000C9A  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5503  000C9C  22DA               	addwfc	fsr2h,f,c
  5504  000C9E  0E0B               	movlw	11
  5505  000CA0  6EDE               	movwf	postinc2,c
  5506  000CA2  0E00               	movlw	0
  5507  000CA4  6EDD               	movwf	postdec2,c
  5508                           
  5509                           ;i2c.c: 629: (*buffer).NeutralShift = 4;
  5510  000CA6  EE20 F004          	lfsr	2,4
  5511  000CAA  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5512  000CAC  26D9               	addwf	fsr2l,f,c
  5513  000CAE  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5514  000CB0  22DA               	addwfc	fsr2h,f,c
  5515  000CB2  0E04               	movlw	4
  5516  000CB4  6EDF               	movwf	indf2,c
  5517                           
  5518                           ;i2c.c: 630: (*buffer).Offset = 0;
  5519  000CB6  EE20 F005          	lfsr	2,5
  5520  000CBA  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5521  000CBC  26D9               	addwf	fsr2l,f,c
  5522  000CBE  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5523  000CC0  22DA               	addwfc	fsr2h,f,c
  5524  000CC2  0E00               	movlw	0
  5525  000CC4  6EDE               	movwf	postinc2,c
  5526  000CC6  0E00               	movlw	0
  5527  000CC8  6EDD               	movwf	postdec2,c
  5528                           
  5529                           ;i2c.c: 631: (*buffer).Multiplier = 11;
  5530  000CCA  EE20 F007          	lfsr	2,7
  5531  000CCE  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5532  000CD0  26D9               	addwf	fsr2l,f,c
  5533  000CD2  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5534  000CD4  22DA               	addwfc	fsr2h,f,c
  5535  000CD6  0E0B               	movlw	11
  5536  000CD8  6EDE               	movwf	postinc2,c
  5537  000CDA  0E00               	movlw	0
  5538  000CDC  6EDD               	movwf	postdec2,c
  5539                           
  5540                           ;i2c.c: 632: (*buffer).Shift = 4;
  5541  000CDE  EE20 F009          	lfsr	2,9
  5542  000CE2  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5543  000CE4  26D9               	addwf	fsr2l,f,c
  5544  000CE6  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5545  000CE8  22DA               	addwfc	fsr2h,f,c
  5546  000CEA  0E04               	movlw	4
  5547  000CEC  6EDF               	movwf	indf2,c
  5548                           
  5549                           ;i2c.c: 633: (*buffer).AutoCalibration = 0;
  5550  000CEE  EE20 F00A          	lfsr	2,10
  5551  000CF2  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5552  000CF4  26D9               	addwf	fsr2l,f,c
  5553  000CF6  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5554  000CF8  22DA               	addwfc	fsr2h,f,c
  5555  000CFA  0E00               	movlw	0
  5556  000CFC  6EDE               	movwf	postinc2,c
  5557  000CFE  0E00               	movlw	0
  5558  000D00  6EDD               	movwf	postdec2,c
  5559                           
  5560                           ;i2c.c: 634: break;
  5561  000D02  0012               	return	
  5562  000D04                     l12108:
  5563                           
  5564                           ;i2c.c: 636: (*buffer).NeutralOffset = 0;
  5565  000D04  C001  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  5566  000D08  C002  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  5567  000D0C  0E00               	movlw	0
  5568  000D0E  6EDE               	movwf	postinc2,c
  5569  000D10  0E00               	movlw	0
  5570  000D12  6EDD               	movwf	postdec2,c
  5571                           
  5572                           ;i2c.c: 637: (*buffer).NeutralMultiplier = 17;
  5573  000D14  EE20 F002          	lfsr	2,2
  5574  000D18  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5575  000D1A  26D9               	addwf	fsr2l,f,c
  5576  000D1C  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5577  000D1E  22DA               	addwfc	fsr2h,f,c
  5578  000D20  0E11               	movlw	17
  5579  000D22  6EDE               	movwf	postinc2,c
  5580  000D24  0E00               	movlw	0
  5581  000D26  6EDD               	movwf	postdec2,c
  5582                           
  5583                           ;i2c.c: 638: (*buffer).NeutralShift = 5;
  5584  000D28  EE20 F004          	lfsr	2,4
  5585  000D2C  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5586  000D2E  26D9               	addwf	fsr2l,f,c
  5587  000D30  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5588  000D32  22DA               	addwfc	fsr2h,f,c
  5589  000D34  0E05               	movlw	5
  5590  000D36  6EDF               	movwf	indf2,c
  5591                           
  5592                           ;i2c.c: 639: (*buffer).Offset = 0;
  5593  000D38  EE20 F005          	lfsr	2,5
  5594  000D3C  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5595  000D3E  26D9               	addwf	fsr2l,f,c
  5596  000D40  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5597  000D42  22DA               	addwfc	fsr2h,f,c
  5598  000D44  0E00               	movlw	0
  5599  000D46  6EDE               	movwf	postinc2,c
  5600  000D48  0E00               	movlw	0
  5601  000D4A  6EDD               	movwf	postdec2,c
  5602                           
  5603                           ;i2c.c: 640: (*buffer).Multiplier = 17;
  5604  000D4C  EE20 F007          	lfsr	2,7
  5605  000D50  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5606  000D52  26D9               	addwf	fsr2l,f,c
  5607  000D54  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5608  000D56  22DA               	addwfc	fsr2h,f,c
  5609  000D58  0E11               	movlw	17
  5610  000D5A  6EDE               	movwf	postinc2,c
  5611  000D5C  0E00               	movlw	0
  5612  000D5E  6EDD               	movwf	postdec2,c
  5613                           
  5614                           ;i2c.c: 641: (*buffer).Shift = 5;
  5615  000D60  EE20 F009          	lfsr	2,9
  5616  000D64  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5617  000D66  26D9               	addwf	fsr2l,f,c
  5618  000D68  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5619  000D6A  22DA               	addwfc	fsr2h,f,c
  5620  000D6C  0E05               	movlw	5
  5621  000D6E  6EDF               	movwf	indf2,c
  5622                           
  5623                           ;i2c.c: 642: (*buffer).AutoCalibration = 0;
  5624  000D70  EE20 F00A          	lfsr	2,10
  5625  000D74  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5626  000D76  26D9               	addwf	fsr2l,f,c
  5627  000D78  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5628  000D7A  22DA               	addwfc	fsr2h,f,c
  5629  000D7C  0E00               	movlw	0
  5630  000D7E  6EDE               	movwf	postinc2,c
  5631  000D80  0E00               	movlw	0
  5632  000D82  6EDD               	movwf	postdec2,c
  5633                           
  5634                           ;i2c.c: 643: break;
  5635  000D84  0012               	return	
  5636  000D86                     l12122:
  5637                           
  5638                           ;i2c.c: 645: (*buffer).NeutralOffset = 0;
  5639  000D86  C001  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  5640  000D8A  C002  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  5641  000D8E  0E00               	movlw	0
  5642  000D90  6EDE               	movwf	postinc2,c
  5643  000D92  0E00               	movlw	0
  5644  000D94  6EDD               	movwf	postdec2,c
  5645                           
  5646                           ;i2c.c: 646: (*buffer).NeutralMultiplier = 5851;
  5647  000D96  EE20 F002          	lfsr	2,2
  5648  000D9A  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5649  000D9C  26D9               	addwf	fsr2l,f,c
  5650  000D9E  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5651  000DA0  22DA               	addwfc	fsr2h,f,c
  5652  000DA2  0EDB               	movlw	219
  5653  000DA4  6EDE               	movwf	postinc2,c
  5654  000DA6  0E16               	movlw	22
  5655  000DA8  6EDD               	movwf	postdec2,c
  5656                           
  5657                           ;i2c.c: 647: (*buffer).NeutralShift = 15;
  5658  000DAA  EE20 F004          	lfsr	2,4
  5659  000DAE  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5660  000DB0  26D9               	addwf	fsr2l,f,c
  5661  000DB2  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5662  000DB4  22DA               	addwfc	fsr2h,f,c
  5663  000DB6  0E0F               	movlw	15
  5664  000DB8  6EDF               	movwf	indf2,c
  5665                           
  5666                           ;i2c.c: 648: (*buffer).Offset = 0;
  5667  000DBA  EE20 F005          	lfsr	2,5
  5668  000DBE  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5669  000DC0  26D9               	addwf	fsr2l,f,c
  5670  000DC2  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5671  000DC4  22DA               	addwfc	fsr2h,f,c
  5672  000DC6  0E00               	movlw	0
  5673  000DC8  6EDE               	movwf	postinc2,c
  5674  000DCA  0E00               	movlw	0
  5675  000DCC  6EDD               	movwf	postdec2,c
  5676                           
  5677                           ;i2c.c: 649: (*buffer).Multiplier = 5851;
  5678  000DCE  EE20 F007          	lfsr	2,7
  5679  000DD2  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5680  000DD4  26D9               	addwf	fsr2l,f,c
  5681  000DD6  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5682  000DD8  22DA               	addwfc	fsr2h,f,c
  5683  000DDA  0EDB               	movlw	219
  5684  000DDC  6EDE               	movwf	postinc2,c
  5685  000DDE  0E16               	movlw	22
  5686  000DE0  6EDD               	movwf	postdec2,c
  5687                           
  5688                           ;i2c.c: 650: (*buffer).Shift = 15;
  5689  000DE2  EE20 F009          	lfsr	2,9
  5690  000DE6  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5691  000DE8  26D9               	addwf	fsr2l,f,c
  5692  000DEA  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5693  000DEC  22DA               	addwfc	fsr2h,f,c
  5694  000DEE  0E0F               	movlw	15
  5695  000DF0  6EDF               	movwf	indf2,c
  5696                           
  5697                           ;i2c.c: 651: (*buffer).AutoCalibration = 0;
  5698  000DF2  EE20 F00A          	lfsr	2,10
  5699  000DF6  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5700  000DF8  26D9               	addwf	fsr2l,f,c
  5701  000DFA  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5702  000DFC  22DA               	addwfc	fsr2h,f,c
  5703  000DFE  0E00               	movlw	0
  5704  000E00  6EDE               	movwf	postinc2,c
  5705  000E02  0E00               	movlw	0
  5706  000E04  6EDD               	movwf	postdec2,c
  5707                           
  5708                           ;i2c.c: 652: break;
  5709  000E06  0012               	return	
  5710  000E08                     l12136:
  5711                           
  5712                           ;i2c.c: 654: (*buffer).NeutralOffset = 0;
  5713  000E08  C001  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  5714  000E0C  C002  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  5715  000E10  0E00               	movlw	0
  5716  000E12  6EDE               	movwf	postinc2,c
  5717  000E14  0E00               	movlw	0
  5718  000E16  6EDD               	movwf	postdec2,c
  5719                           
  5720                           ;i2c.c: 655: (*buffer).NeutralMultiplier = 5851;
  5721  000E18  EE20 F002          	lfsr	2,2
  5722  000E1C  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5723  000E1E  26D9               	addwf	fsr2l,f,c
  5724  000E20  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5725  000E22  22DA               	addwfc	fsr2h,f,c
  5726  000E24  0EDB               	movlw	219
  5727  000E26  6EDE               	movwf	postinc2,c
  5728  000E28  0E16               	movlw	22
  5729  000E2A  6EDD               	movwf	postdec2,c
  5730                           
  5731                           ;i2c.c: 656: (*buffer).NeutralShift = 15;
  5732  000E2C  EE20 F004          	lfsr	2,4
  5733  000E30  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5734  000E32  26D9               	addwf	fsr2l,f,c
  5735  000E34  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5736  000E36  22DA               	addwfc	fsr2h,f,c
  5737  000E38  0E0F               	movlw	15
  5738  000E3A  6EDF               	movwf	indf2,c
  5739                           
  5740                           ;i2c.c: 657: (*buffer).Offset = 0;
  5741  000E3C  EE20 F005          	lfsr	2,5
  5742  000E40  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5743  000E42  26D9               	addwf	fsr2l,f,c
  5744  000E44  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5745  000E46  22DA               	addwfc	fsr2h,f,c
  5746  000E48  0E00               	movlw	0
  5747  000E4A  6EDE               	movwf	postinc2,c
  5748  000E4C  0E00               	movlw	0
  5749  000E4E  6EDD               	movwf	postdec2,c
  5750                           
  5751                           ;i2c.c: 658: (*buffer).Multiplier = 5851;
  5752  000E50  EE20 F007          	lfsr	2,7
  5753  000E54  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5754  000E56  26D9               	addwf	fsr2l,f,c
  5755  000E58  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5756  000E5A  22DA               	addwfc	fsr2h,f,c
  5757  000E5C  0EDB               	movlw	219
  5758  000E5E  6EDE               	movwf	postinc2,c
  5759  000E60  0E16               	movlw	22
  5760  000E62  6EDD               	movwf	postdec2,c
  5761                           
  5762                           ;i2c.c: 659: (*buffer).Shift = 15;
  5763  000E64  EE20 F009          	lfsr	2,9
  5764  000E68  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5765  000E6A  26D9               	addwf	fsr2l,f,c
  5766  000E6C  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5767  000E6E  22DA               	addwfc	fsr2h,f,c
  5768  000E70  0E0F               	movlw	15
  5769  000E72  6EDF               	movwf	indf2,c
  5770                           
  5771                           ;i2c.c: 660: (*buffer).AutoCalibration = 0;
  5772  000E74  EE20 F00A          	lfsr	2,10
  5773  000E78  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5774  000E7A  26D9               	addwf	fsr2l,f,c
  5775  000E7C  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5776  000E7E  22DA               	addwfc	fsr2h,f,c
  5777  000E80  0E00               	movlw	0
  5778  000E82  6EDE               	movwf	postinc2,c
  5779  000E84  0E00               	movlw	0
  5780  000E86  6EDD               	movwf	postdec2,c
  5781                           
  5782                           ;i2c.c: 661: break;
  5783  000E88  0012               	return	
  5784  000E8A                     l12150:
  5785                           
  5786                           ;i2c.c: 663: (*buffer).NeutralOffset = -13769;
  5787  000E8A  C001  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  5788  000E8E  C002  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  5789  000E92  0E37               	movlw	55
  5790  000E94  6EDE               	movwf	postinc2,c
  5791  000E96  0ECA               	movlw	202
  5792  000E98  6EDD               	movwf	postdec2,c
  5793                           
  5794                           ;i2c.c: 664: (*buffer).NeutralMultiplier = -11479;
  5795  000E9A  EE20 F002          	lfsr	2,2
  5796  000E9E  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5797  000EA0  26D9               	addwf	fsr2l,f,c
  5798  000EA2  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5799  000EA4  22DA               	addwfc	fsr2h,f,c
  5800  000EA6  0E29               	movlw	41
  5801  000EA8  6EDE               	movwf	postinc2,c
  5802  000EAA  0ED3               	movlw	211
  5803  000EAC  6EDD               	movwf	postdec2,c
  5804                           
  5805                           ;i2c.c: 665: (*buffer).NeutralShift = 13;
  5806  000EAE  EE20 F004          	lfsr	2,4
  5807  000EB2  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5808  000EB4  26D9               	addwf	fsr2l,f,c
  5809  000EB6  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5810  000EB8  22DA               	addwfc	fsr2h,f,c
  5811  000EBA  0E0D               	movlw	13
  5812  000EBC  6EDF               	movwf	indf2,c
  5813                           
  5814                           ;i2c.c: 666: (*buffer).Offset = -13769;
  5815  000EBE  EE20 F005          	lfsr	2,5
  5816  000EC2  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5817  000EC4  26D9               	addwf	fsr2l,f,c
  5818  000EC6  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5819  000EC8  22DA               	addwfc	fsr2h,f,c
  5820  000ECA  0E37               	movlw	55
  5821  000ECC  6EDE               	movwf	postinc2,c
  5822  000ECE  0ECA               	movlw	202
  5823  000ED0  6EDD               	movwf	postdec2,c
  5824                           
  5825                           ;i2c.c: 667: (*buffer).Multiplier = -11479;
  5826  000ED2  EE20 F007          	lfsr	2,7
  5827  000ED6  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5828  000ED8  26D9               	addwf	fsr2l,f,c
  5829  000EDA  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5830  000EDC  22DA               	addwfc	fsr2h,f,c
  5831  000EDE  0E29               	movlw	41
  5832  000EE0  6EDE               	movwf	postinc2,c
  5833  000EE2  0ED3               	movlw	211
  5834  000EE4  6EDD               	movwf	postdec2,c
  5835                           
  5836                           ;i2c.c: 668: (*buffer).Shift = 13;
  5837  000EE6  EE20 F009          	lfsr	2,9
  5838  000EEA  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5839  000EEC  26D9               	addwf	fsr2l,f,c
  5840  000EEE  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5841  000EF0  22DA               	addwfc	fsr2h,f,c
  5842  000EF2  0E0D               	movlw	13
  5843  000EF4  6EDF               	movwf	indf2,c
  5844                           
  5845                           ;i2c.c: 669: (*buffer).AutoCalibration = 0;
  5846  000EF6  EE20 F00A          	lfsr	2,10
  5847  000EFA  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5848  000EFC  26D9               	addwf	fsr2l,f,c
  5849  000EFE  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5850  000F00  22DA               	addwfc	fsr2h,f,c
  5851  000F02  0E00               	movlw	0
  5852  000F04  6EDE               	movwf	postinc2,c
  5853  000F06  0E00               	movlw	0
  5854  000F08  6EDD               	movwf	postdec2,c
  5855                           
  5856                           ;i2c.c: 670: break;
  5857  000F0A  0012               	return	
  5858  000F0C                     l12164:
  5859                           
  5860                           ;i2c.c: 672: (*buffer).NeutralOffset = -13769;
  5861  000F0C  C001  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  5862  000F10  C002  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  5863  000F14  0E37               	movlw	55
  5864  000F16  6EDE               	movwf	postinc2,c
  5865  000F18  0ECA               	movlw	202
  5866  000F1A  6EDD               	movwf	postdec2,c
  5867                           
  5868                           ;i2c.c: 673: (*buffer).NeutralMultiplier = -11479;
  5869  000F1C  EE20 F002          	lfsr	2,2
  5870  000F20  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5871  000F22  26D9               	addwf	fsr2l,f,c
  5872  000F24  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5873  000F26  22DA               	addwfc	fsr2h,f,c
  5874  000F28  0E29               	movlw	41
  5875  000F2A  6EDE               	movwf	postinc2,c
  5876  000F2C  0ED3               	movlw	211
  5877  000F2E  6EDD               	movwf	postdec2,c
  5878                           
  5879                           ;i2c.c: 674: (*buffer).NeutralShift = 13;
  5880  000F30  EE20 F004          	lfsr	2,4
  5881  000F34  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5882  000F36  26D9               	addwf	fsr2l,f,c
  5883  000F38  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5884  000F3A  22DA               	addwfc	fsr2h,f,c
  5885  000F3C  0E0D               	movlw	13
  5886  000F3E  6EDF               	movwf	indf2,c
  5887                           
  5888                           ;i2c.c: 675: (*buffer).Offset = -13769;
  5889  000F40  EE20 F005          	lfsr	2,5
  5890  000F44  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5891  000F46  26D9               	addwf	fsr2l,f,c
  5892  000F48  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5893  000F4A  22DA               	addwfc	fsr2h,f,c
  5894  000F4C  0E37               	movlw	55
  5895  000F4E  6EDE               	movwf	postinc2,c
  5896  000F50  0ECA               	movlw	202
  5897  000F52  6EDD               	movwf	postdec2,c
  5898                           
  5899                           ;i2c.c: 676: (*buffer).Multiplier = -11479;
  5900  000F54  EE20 F007          	lfsr	2,7
  5901  000F58  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5902  000F5A  26D9               	addwf	fsr2l,f,c
  5903  000F5C  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5904  000F5E  22DA               	addwfc	fsr2h,f,c
  5905  000F60  0E29               	movlw	41
  5906  000F62  6EDE               	movwf	postinc2,c
  5907  000F64  0ED3               	movlw	211
  5908  000F66  6EDD               	movwf	postdec2,c
  5909                           
  5910                           ;i2c.c: 677: (*buffer).Shift = 13;
  5911  000F68  EE20 F009          	lfsr	2,9
  5912  000F6C  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5913  000F6E  26D9               	addwf	fsr2l,f,c
  5914  000F70  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5915  000F72  22DA               	addwfc	fsr2h,f,c
  5916  000F74  0E0D               	movlw	13
  5917  000F76  6EDF               	movwf	indf2,c
  5918                           
  5919                           ;i2c.c: 678: (*buffer).AutoCalibration = 0;
  5920  000F78  EE20 F00A          	lfsr	2,10
  5921  000F7C  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5922  000F7E  26D9               	addwf	fsr2l,f,c
  5923  000F80  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5924  000F82  22DA               	addwfc	fsr2h,f,c
  5925  000F84  0E00               	movlw	0
  5926  000F86  6EDE               	movwf	postinc2,c
  5927  000F88  0E00               	movlw	0
  5928  000F8A  6EDD               	movwf	postdec2,c
  5929                           
  5930                           ;i2c.c: 679: break;
  5931  000F8C  0012               	return	
  5932  000F8E                     l12178:
  5933                           
  5934                           ;i2c.c: 681: (*buffer).NeutralOffset = -13769;
  5935  000F8E  C001  FFD9         	movff	__i2c_eeprom_load_default_calibration@buffer,fsr2l
  5936  000F92  C002  FFDA         	movff	__i2c_eeprom_load_default_calibration@buffer+1,fsr2h
  5937  000F96  0E37               	movlw	55
  5938  000F98  6EDE               	movwf	postinc2,c
  5939  000F9A  0ECA               	movlw	202
  5940  000F9C  6EDD               	movwf	postdec2,c
  5941                           
  5942                           ;i2c.c: 682: (*buffer).NeutralMultiplier = -11479;
  5943  000F9E  EE20 F002          	lfsr	2,2
  5944  000FA2  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5945  000FA4  26D9               	addwf	fsr2l,f,c
  5946  000FA6  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5947  000FA8  22DA               	addwfc	fsr2h,f,c
  5948  000FAA  0E29               	movlw	41
  5949  000FAC  6EDE               	movwf	postinc2,c
  5950  000FAE  0ED3               	movlw	211
  5951  000FB0  6EDD               	movwf	postdec2,c
  5952                           
  5953                           ;i2c.c: 683: (*buffer).NeutralShift = 13;
  5954  000FB2  EE20 F004          	lfsr	2,4
  5955  000FB6  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5956  000FB8  26D9               	addwf	fsr2l,f,c
  5957  000FBA  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5958  000FBC  22DA               	addwfc	fsr2h,f,c
  5959  000FBE  0E0D               	movlw	13
  5960  000FC0  6EDF               	movwf	indf2,c
  5961                           
  5962                           ;i2c.c: 684: (*buffer).Offset = -13769;
  5963  000FC2  EE20 F005          	lfsr	2,5
  5964  000FC6  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5965  000FC8  26D9               	addwf	fsr2l,f,c
  5966  000FCA  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5967  000FCC  22DA               	addwfc	fsr2h,f,c
  5968  000FCE  0E37               	movlw	55
  5969  000FD0  6EDE               	movwf	postinc2,c
  5970  000FD2  0ECA               	movlw	202
  5971  000FD4  6EDD               	movwf	postdec2,c
  5972                           
  5973                           ;i2c.c: 685: (*buffer).Multiplier = -11479;
  5974  000FD6  EE20 F007          	lfsr	2,7
  5975  000FDA  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5976  000FDC  26D9               	addwf	fsr2l,f,c
  5977  000FDE  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5978  000FE0  22DA               	addwfc	fsr2h,f,c
  5979  000FE2  0E29               	movlw	41
  5980  000FE4  6EDE               	movwf	postinc2,c
  5981  000FE6  0ED3               	movlw	211
  5982  000FE8  6EDD               	movwf	postdec2,c
  5983                           
  5984                           ;i2c.c: 686: (*buffer).Shift = 13;
  5985  000FEA  EE20 F009          	lfsr	2,9
  5986  000FEE  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5987  000FF0  26D9               	addwf	fsr2l,f,c
  5988  000FF2  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5989  000FF4  22DA               	addwfc	fsr2h,f,c
  5990  000FF6  0E0D               	movlw	13
  5991  000FF8  6EDF               	movwf	indf2,c
  5992                           
  5993                           ;i2c.c: 687: (*buffer).AutoCalibration = 0;
  5994  000FFA  EE20 F00A          	lfsr	2,10
  5995  000FFE  5001               	movf	__i2c_eeprom_load_default_calibration@buffer,w,c
  5996  001000  26D9               	addwf	fsr2l,f,c
  5997  001002  5002               	movf	__i2c_eeprom_load_default_calibration@buffer+1,w,c
  5998  001004  22DA               	addwfc	fsr2h,f,c
  5999  001006  0E00               	movlw	0
  6000  001008  6EDE               	movwf	postinc2,c
  6001  00100A  0E00               	movlw	0
  6002  00100C  6EDD               	movwf	postdec2,c
  6003                           
  6004                           ;i2c.c: 689: }
  6005                           
  6006                           ;i2c.c: 688: break;
  6007  00100E  0012               	return	
  6008  001010                     l12194:
  6009  001010  5003               	movf	__i2c_eeprom_load_default_calibration@index,w,c
  6010                           
  6011                           ; Switch size 1, requested type "space"
  6012                           ; Number of cases is 7, Range of values is 0 to 6
  6013                           ; switch strategies available:
  6014                           ; Name         Instructions Cycles
  6015                           ; simple_byte           22    12 (average)
  6016                           ;	Chosen strategy is simple_byte
  6017  001012  0A00               	xorlw	0	; case 0
  6018  001014  B4D8               	btfsc	status,2,c
  6019  001016  D635               	goto	l12094
  6020  001018  0A01               	xorlw	1	; case 1
  6021  00101A  B4D8               	btfsc	status,2,c
  6022  00101C  D673               	goto	l12108
  6023  00101E  0A03               	xorlw	3	; case 2
  6024  001020  B4D8               	btfsc	status,2,c
  6025  001022  D6B1               	goto	l12122
  6026  001024  0A01               	xorlw	1	; case 3
  6027  001026  B4D8               	btfsc	status,2,c
  6028  001028  D6EF               	goto	l12136
  6029  00102A  0A07               	xorlw	7	; case 4
  6030  00102C  B4D8               	btfsc	status,2,c
  6031  00102E  D72D               	goto	l12150
  6032  001030  0A01               	xorlw	1	; case 5
  6033  001032  B4D8               	btfsc	status,2,c
  6034  001034  D76B               	goto	l12164
  6035  001036  0A03               	xorlw	3	; case 6
  6036  001038  A4D8               	btfss	status,2,c
  6037  00103A  0012               	return	
  6038  00103C  D7A8               	goto	l12178
  6039  00103E                     __end_of__i2c_eeprom_load_default_calibration:
  6040                           	opt stack 0
  6041                           tblptru	equ	0xFF8
  6042                           tblptrh	equ	0xFF7
  6043                           tblptrl	equ	0xFF6
  6044                           tablat	equ	0xFF5
  6045                           prodh	equ	0xFF4
  6046                           prodl	equ	0xFF3
  6047                           intcon	equ	0xFF2
  6048                           intcon3	equ	0xFF0
  6049                           postinc0	equ	0xFEE
  6050                           wreg	equ	0xFE8
  6051                           postdec1	equ	0xFE5
  6052                           plusw1	equ	0xFE3
  6053                           fsr1h	equ	0xFE2
  6054                           fsr1l	equ	0xFE1
  6055                           indf2	equ	0xFDF
  6056                           postinc2	equ	0xFDE
  6057                           postdec2	equ	0xFDD
  6058                           plusw2	equ	0xFDB
  6059                           fsr2h	equ	0xFDA
  6060                           fsr2l	equ	0xFD9
  6061                           status	equ	0xFD8
  6062                           
  6063 ;; *************** function _flash_init *****************
  6064 ;; Defined at:
  6065 ;;		line 448 in file "flash.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6083 ;;Total ram usage:        0 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:    4
  6086 ;; This function calls:
  6087 ;;		__flash_set_page_size
  6088 ;; This function is called by:
  6089 ;;		_system_init
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           	psect	text18
  6094  006CAA                     __ptext18:
  6095                           	opt stack 0
  6096  006CAA                     _flash_init:
  6097                           	opt stack 25
  6098                           
  6099                           ;flash.c: 451: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6100                           
  6101                           ;incstack = 0
  6102  006CAA  0E55               	movlw	85
  6103  006CAC  6EA7               	movwf	4007,c	;volatile
  6104  006CAE  0EAA               	movlw	170
  6105  006CB0  6EA7               	movwf	4007,c	;volatile
  6106  006CB2  010E               	movlb	14	; () banked
  6107  006CB4  91BF               	bcf	191,0,b	;volatile
  6108                           
  6109                           ;flash.c: 452: RPINR21 = 23;
  6110  006CB6  0E17               	movlw	23
  6111  006CB8  010E               	movlb	14	; () banked
  6112  006CBA  6FFC               	movwf	252,b	;volatile
  6113                           
  6114                           ;flash.c: 453: RPOR21 = 10;
  6115  006CBC  0E0A               	movlw	10
  6116  006CBE  010E               	movlb	14	; () banked
  6117  006CC0  6FD5               	movwf	213,b	;volatile
  6118                           
  6119                           ;flash.c: 455: RPOR22 = 11;
  6120  006CC2  0E0B               	movlw	11
  6121  006CC4  010E               	movlb	14	; () banked
  6122  006CC6  6FD6               	movwf	214,b	;volatile
  6123                           
  6124                           ;flash.c: 456: RPINR22 = 22;
  6125  006CC8  0E16               	movlw	22
  6126  006CCA  010E               	movlb	14	; () banked
  6127  006CCC  6FFD               	movwf	253,b	;volatile
  6128                           
  6129                           ;flash.c: 458: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  6130  006CCE  0E55               	movlw	85
  6131  006CD0  6EA7               	movwf	4007,c	;volatile
  6132  006CD2  0EAA               	movlw	170
  6133  006CD4  6EA7               	movwf	4007,c	;volatile
  6134                           
  6135                           ; BSR set to: 14
  6136  006CD6  010E               	movlb	14	; () banked
  6137  006CD8  81BF               	bsf	191,0,b	;volatile
  6138                           
  6139                           ; BSR set to: 14
  6140                           ;flash.c: 461: SSP2STATbits.SMP = 1;
  6141  006CDA  8E73               	bsf	3955,7,c	;volatile
  6142                           
  6143                           ; BSR set to: 14
  6144                           ;flash.c: 462: SSP2STATbits.CKE = 1;
  6145  006CDC  8C73               	bsf	3955,6,c	;volatile
  6146                           
  6147                           ; BSR set to: 14
  6148                           ;flash.c: 463: SSP2CON1bits.CKP = 0;
  6149  006CDE  9872               	bcf	3954,4,c	;volatile
  6150                           
  6151                           ; BSR set to: 14
  6152                           ;flash.c: 464: SSP2CON1bits.SSPM =0b0000;
  6153  006CE0  9072               	bcf	3954,0,c	;volatile
  6154  006CE2  9272               	bcf	3954,1,c	;volatile
  6155  006CE4  9472               	bcf	3954,2,c	;volatile
  6156  006CE6  9672               	bcf	3954,3,c	;volatile
  6157                           
  6158                           ; BSR set to: 14
  6159                           ;flash.c: 465: SSP2CON1bits.SSPEN = 1;
  6160  006CE8  8A72               	bsf	3954,5,c	;volatile
  6161                           
  6162                           ;flash.c: 468: power_state = FLASH_POWER_STATE_NORMAL;
  6163  006CEA  0E00               	movlw	0
  6164  006CEC  0101               	movlb	1	; () banked
  6165  006CEE  6F82               	movwf	_power_state& (0+255),b
  6166                           
  6167                           ; BSR set to: 1
  6168                           ;flash.c: 471: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  6169  006CF0  0E00               	movlw	0
  6170  006CF2  ECD4  F030         	call	__flash_set_page_size
  6171  006CF6  0012               	return		;funcret
  6172  006CF8                     __end_of_flash_init:
  6173                           	opt stack 0
  6174                           tblptru	equ	0xFF8
  6175                           tblptrh	equ	0xFF7
  6176                           tblptrl	equ	0xFF6
  6177                           tablat	equ	0xFF5
  6178                           prodh	equ	0xFF4
  6179                           prodl	equ	0xFF3
  6180                           intcon	equ	0xFF2
  6181                           intcon3	equ	0xFF0
  6182                           postinc0	equ	0xFEE
  6183                           wreg	equ	0xFE8
  6184                           postdec1	equ	0xFE5
  6185                           plusw1	equ	0xFE3
  6186                           fsr1h	equ	0xFE2
  6187                           fsr1l	equ	0xFE1
  6188                           indf2	equ	0xFDF
  6189                           postinc2	equ	0xFDE
  6190                           postdec2	equ	0xFDD
  6191                           plusw2	equ	0xFDB
  6192                           fsr2h	equ	0xFDA
  6193                           fsr2l	equ	0xFD9
  6194                           status	equ	0xFD8
  6195                           
  6196 ;; *************** function __flash_set_page_size *****************
  6197 ;; Defined at:
  6198 ;;		line 260 in file "flash.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  size            1    wreg     enum E8293
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;  size            1   23[COMRAM] enum E8293
  6203 ;;  command         4   19[COMRAM] unsigned char [4]
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      void 
  6206 ;; Registers used:
  6207 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6214 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6216 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6217 ;;Total ram usage:        5 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    3
  6220 ;; This function calls:
  6221 ;;		__flash_spi_tx
  6222 ;;		_flash_is_busy
  6223 ;;		_memcpy
  6224 ;; This function is called by:
  6225 ;;		_flash_init
  6226 ;; This function uses a non-reentrant model
  6227 ;;
  6228                           
  6229                           	psect	text19
  6230  0061A8                     __ptext19:
  6231                           	opt stack 0
  6232  0061A8                     __flash_set_page_size:
  6233                           	opt stack 25
  6234                           
  6235                           ;incstack = 0
  6236                           ;__flash_set_page_size@size stored from wreg
  6237  0061A8  6E18               	movwf	__flash_set_page_size@size,c
  6238  0061AA                     l12324:
  6239  0061AA  EC5F  F03B         	call	_flash_is_busy	;wreg free
  6240  0061AE  0900               	iorlw	0
  6241  0061B0  A4D8               	btfss	status,2,c
  6242  0061B2  D7FB               	goto	l12324
  6243                           
  6244                           ;flash.c: 268: if(size==FLASH_PAGE_SIZE_512)
  6245  0061B4  5018               	movf	__flash_set_page_size@size,w,c
  6246  0061B6  A4D8               	btfss	status,2,c
  6247  0061B8  D013               	goto	l12330
  6248                           
  6249                           ;flash.c: 269: memcpy(command, flash_command_pagesize_512, 4);
  6250  0061BA  0E14               	movlw	low __flash_set_page_size@command
  6251  0061BC  6E01               	movwf	memcpy@d1,c
  6252  0061BE  0E00               	movlw	high __flash_set_page_size@command
  6253  0061C0  6E02               	movwf	memcpy@d1+1,c
  6254  0061C2  0EC3               	movlw	low _flash_command_pagesize_512
  6255  0061C4  6E03               	movwf	memcpy@s1,c
  6256  0061C6  0E8F               	movlw	high _flash_command_pagesize_512
  6257  0061C8  6E04               	movwf	memcpy@s1+1,c
  6258  0061CA  5003               	movf	memcpy@s1,w,c
  6259  0061CC  1004               	iorwf	memcpy@s1+1,w,c
  6260  0061CE  A4D8               	btfss	status,2,c
  6261  0061D0  0E00               	movlw	low (__mediumconst shr (0+16))
  6262  0061D2  6E05               	movwf	memcpy@s1+2,c
  6263  0061D4  0E00               	movlw	0
  6264  0061D6  6E07               	movwf	memcpy@n+1,c
  6265  0061D8  0E04               	movlw	4
  6266  0061DA  6E06               	movwf	memcpy@n,c
  6267  0061DC  EC3E  F033         	call	_memcpy	;wreg free
  6268  0061E0                     l12330:
  6269                           
  6270                           ;flash.c: 270: if(size==FLASH_PAGE_SIZE_528)
  6271  0061E0  0418               	decf	__flash_set_page_size@size,w,c
  6272  0061E2  A4D8               	btfss	status,2,c
  6273  0061E4  D013               	goto	l12334
  6274                           
  6275                           ;flash.c: 271: memcpy(command, flash_command_pagesize_528, 4);
  6276  0061E6  0E14               	movlw	low __flash_set_page_size@command
  6277  0061E8  6E01               	movwf	memcpy@d1,c
  6278  0061EA  0E00               	movlw	high __flash_set_page_size@command
  6279  0061EC  6E02               	movwf	memcpy@d1+1,c
  6280  0061EE  0EBF               	movlw	low _flash_command_pagesize_528
  6281  0061F0  6E03               	movwf	memcpy@s1,c
  6282  0061F2  0E8F               	movlw	high _flash_command_pagesize_528
  6283  0061F4  6E04               	movwf	memcpy@s1+1,c
  6284  0061F6  5003               	movf	memcpy@s1,w,c
  6285  0061F8  1004               	iorwf	memcpy@s1+1,w,c
  6286  0061FA  A4D8               	btfss	status,2,c
  6287  0061FC  0E00               	movlw	low (__mediumconst shr (0+16))
  6288  0061FE  6E05               	movwf	memcpy@s1+2,c
  6289  006200  0E00               	movlw	0
  6290  006202  6E07               	movwf	memcpy@n+1,c
  6291  006204  0E04               	movlw	4
  6292  006206  6E06               	movwf	memcpy@n,c
  6293  006208  EC3E  F033         	call	_memcpy	;wreg free
  6294  00620C                     l12334:
  6295                           
  6296                           ;flash.c: 274: _flash_spi_tx(command, 4);
  6297  00620C  0E14               	movlw	low __flash_set_page_size@command
  6298  00620E  6E01               	movwf	__flash_spi_tx@data,c
  6299  006210  0E00               	movlw	high __flash_set_page_size@command
  6300  006212  6E02               	movwf	__flash_spi_tx@data+1,c
  6301  006214  0E00               	movlw	0
  6302  006216  6E04               	movwf	__flash_spi_tx@length+1,c
  6303  006218  0E04               	movlw	4
  6304  00621A  6E03               	movwf	__flash_spi_tx@length,c
  6305  00621C  EC85  F034         	call	__flash_spi_tx	;wreg free
  6306  006220  0012               	return		;funcret
  6307  006222                     __end_of__flash_set_page_size:
  6308                           	opt stack 0
  6309                           tblptru	equ	0xFF8
  6310                           tblptrh	equ	0xFF7
  6311                           tblptrl	equ	0xFF6
  6312                           tablat	equ	0xFF5
  6313                           prodh	equ	0xFF4
  6314                           prodl	equ	0xFF3
  6315                           intcon	equ	0xFF2
  6316                           intcon3	equ	0xFF0
  6317                           postinc0	equ	0xFEE
  6318                           wreg	equ	0xFE8
  6319                           postdec1	equ	0xFE5
  6320                           plusw1	equ	0xFE3
  6321                           fsr1h	equ	0xFE2
  6322                           fsr1l	equ	0xFE1
  6323                           indf2	equ	0xFDF
  6324                           postinc2	equ	0xFDE
  6325                           postdec2	equ	0xFDD
  6326                           plusw2	equ	0xFDB
  6327                           fsr2h	equ	0xFDA
  6328                           fsr2l	equ	0xFD9
  6329                           status	equ	0xFD8
  6330                           
  6331 ;; *************** function _fat_init *****************
  6332 ;; Defined at:
  6333 ;;		line 1023 in file "fat16.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;		None
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;		None
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      void 
  6340 ;; Registers used:
  6341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;Total ram usage:        0 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    6
  6354 ;; This function calls:
  6355 ;;		_fat_format
  6356 ;;		_fat_get_format_status
  6357 ;; This function is called by:
  6358 ;;		_system_init
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text20
  6363  00791E                     __ptext20:
  6364                           	opt stack 0
  6365  00791E                     _fat_init:
  6366                           	opt stack 23
  6367                           
  6368                           ;fat16.c: 1026: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  6369                           
  6370                           ;incstack = 0
  6371  00791E  EC55  F02C         	call	_fat_get_format_status	;wreg free
  6372  007922  0900               	iorlw	0
  6373  007924  A4D8               	btfss	status,2,c
  6374  007926  0012               	return	
  6375                           
  6376                           ;fat16.c: 1027: {
  6377                           ;fat16.c: 1028: fat_format();
  6378  007928  ECD8  F014         	call	_fat_format	;wreg free
  6379  00792C  0012               	return	
  6380  00792E                     __end_of_fat_init:
  6381                           	opt stack 0
  6382                           tblptru	equ	0xFF8
  6383                           tblptrh	equ	0xFF7
  6384                           tblptrl	equ	0xFF6
  6385                           tablat	equ	0xFF5
  6386                           prodh	equ	0xFF4
  6387                           prodl	equ	0xFF3
  6388                           intcon	equ	0xFF2
  6389                           intcon3	equ	0xFF0
  6390                           postinc0	equ	0xFEE
  6391                           wreg	equ	0xFE8
  6392                           postdec1	equ	0xFE5
  6393                           plusw1	equ	0xFE3
  6394                           fsr1h	equ	0xFE2
  6395                           fsr1l	equ	0xFE1
  6396                           indf2	equ	0xFDF
  6397                           postinc2	equ	0xFDE
  6398                           postdec2	equ	0xFDD
  6399                           plusw2	equ	0xFDB
  6400                           fsr2h	equ	0xFDA
  6401                           fsr2l	equ	0xFD9
  6402                           status	equ	0xFD8
  6403                           
  6404 ;; *************** function _fat_get_format_status *****************
  6405 ;; Defined at:
  6406 ;;		line 935 in file "fat16.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;		None
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  cntr            2   45[COMRAM] unsigned int 
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  1    wreg      enum E8279
  6413 ;; Registers used:
  6414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6422 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6423 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6424 ;;Total ram usage:        4 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; Hardware stack levels required when called:    5
  6427 ;; This function calls:
  6428 ;;		__get_fbr
  6429 ;;		__get_mbr
  6430 ;;		_flash_page_read
  6431 ;; This function is called by:
  6432 ;;		_fat_init
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text21
  6437  0058AA                     __ptext21:
  6438                           	opt stack 0
  6439  0058AA                     _fat_get_format_status:
  6440                           	opt stack 23
  6441                           
  6442                           ;fat16.c: 937: uint16_t cntr;
  6443                           ;fat16.c: 940: flash_page_read(0, buffer);
  6444                           
  6445                           ;incstack = 0
  6446  0058AA  0E00               	movlw	0
  6447  0058AC  6E29               	movwf	flash_page_read@page+1,c
  6448  0058AE  0E00               	movlw	0
  6449  0058B0  6E28               	movwf	flash_page_read@page,c
  6450  0058B2  0EDA               	movlw	low _buffer
  6451  0058B4  6E2A               	movwf	flash_page_read@data,c
  6452  0058B6  0E03               	movlw	high _buffer
  6453  0058B8  6E2B               	movwf	flash_page_read@data+1,c
  6454  0058BA  EC18  F03B         	call	_flash_page_read	;wreg free
  6455                           
  6456                           ;fat16.c: 941: for(cntr=0; cntr<512; ++cntr)
  6457  0058BE  0E00               	movlw	0
  6458  0058C0  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6459  0058C2  0E00               	movlw	0
  6460  0058C4  6E2E               	movwf	fat_get_format_status@cntr,c
  6461  0058C6                     l12458:
  6462  0058C6  0E02               	movlw	2
  6463  0058C8  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6464  0058CA  B0D8               	btfsc	status,0,c
  6465  0058CC  D016               	goto	l12472
  6466                           
  6467                           ;fat16.c: 942: {
  6468                           ;fat16.c: 943: if(buffer[cntr] != _get_mbr(cntr))
  6469  0058CE  0EDA               	movlw	low _buffer
  6470  0058D0  242E               	addwf	fat_get_format_status@cntr,w,c
  6471  0058D2  6ED9               	movwf	fsr2l,c
  6472  0058D4  0E03               	movlw	high _buffer
  6473  0058D6  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6474  0058D8  6EDA               	movwf	fsr2h,c
  6475  0058DA  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6476  0058DE  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6477  0058E2  ECAF  F028         	call	__get_mbr	;wreg free
  6478  0058E6  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6479  0058E8  50DE               	movf	postinc2,w,c
  6480  0058EA  182D               	xorwf	??_fat_get_format_status+1,w,c
  6481  0058EC  B4D8               	btfsc	status,2,c
  6482  0058EE  D002               	goto	l12468
  6483                           
  6484                           ;fat16.c: 944: {
  6485                           ;fat16.c: 945: return DRIVE_NOT_FORMATED;
  6486  0058F0  0E00               	movlw	0
  6487  0058F2  0012               	return	
  6488  0058F4                     l12468:
  6489  0058F4  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6490  0058F6  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6491  0058F8  D7E6               	goto	l12458
  6492  0058FA                     l12472:
  6493                           
  6494                           ;fat16.c: 946: }
  6495                           ;fat16.c: 947: }
  6496                           ;fat16.c: 950: flash_page_read(1, buffer);
  6497  0058FA  0E00               	movlw	0
  6498  0058FC  6E29               	movwf	flash_page_read@page+1,c
  6499  0058FE  0E01               	movlw	1
  6500  005900  6E28               	movwf	flash_page_read@page,c
  6501  005902  0EDA               	movlw	low _buffer
  6502  005904  6E2A               	movwf	flash_page_read@data,c
  6503  005906  0E03               	movlw	high _buffer
  6504  005908  6E2B               	movwf	flash_page_read@data+1,c
  6505  00590A  EC18  F03B         	call	_flash_page_read	;wreg free
  6506                           
  6507                           ;fat16.c: 951: for(cntr=0; cntr<512; ++cntr)
  6508  00590E  0E00               	movlw	0
  6509  005910  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6510  005912  0E00               	movlw	0
  6511  005914  6E2E               	movwf	fat_get_format_status@cntr,c
  6512  005916                     l12476:
  6513  005916  0E02               	movlw	2
  6514  005918  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6515  00591A  B0D8               	btfsc	status,0,c
  6516  00591C  D016               	goto	l12490
  6517                           
  6518                           ;fat16.c: 952: {
  6519                           ;fat16.c: 953: if(buffer[cntr] != _get_fbr(cntr))
  6520  00591E  0EDA               	movlw	low _buffer
  6521  005920  242E               	addwf	fat_get_format_status@cntr,w,c
  6522  005922  6ED9               	movwf	fsr2l,c
  6523  005924  0E03               	movlw	high _buffer
  6524  005926  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6525  005928  6EDA               	movwf	fsr2h,c
  6526  00592A  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6527  00592E  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6528  005932  EC77  F012         	call	__get_fbr	;wreg free
  6529  005936  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6530  005938  50DE               	movf	postinc2,w,c
  6531  00593A  182D               	xorwf	??_fat_get_format_status+1,w,c
  6532  00593C  B4D8               	btfsc	status,2,c
  6533  00593E  D002               	goto	l12486
  6534                           
  6535                           ;fat16.c: 954: {
  6536                           ;fat16.c: 955: return DRIVE_NOT_FORMATED;
  6537  005940  0E00               	movlw	0
  6538  005942  0012               	return	
  6539  005944                     l12486:
  6540  005944  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6541  005946  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6542  005948  D7E6               	goto	l12476
  6543  00594A                     l12490:
  6544                           
  6545                           ;fat16.c: 956: }
  6546                           ;fat16.c: 957: }
  6547                           ;fat16.c: 960: return DRIVE_FORMATED;
  6548  00594A  0E01               	movlw	1
  6549  00594C  0012               	return	
  6550  00594E                     __end_of_fat_get_format_status:
  6551                           	opt stack 0
  6552                           tblptru	equ	0xFF8
  6553                           tblptrh	equ	0xFF7
  6554                           tblptrl	equ	0xFF6
  6555                           tablat	equ	0xFF5
  6556                           prodh	equ	0xFF4
  6557                           prodl	equ	0xFF3
  6558                           intcon	equ	0xFF2
  6559                           intcon3	equ	0xFF0
  6560                           postinc0	equ	0xFEE
  6561                           wreg	equ	0xFE8
  6562                           postdec1	equ	0xFE5
  6563                           plusw1	equ	0xFE3
  6564                           fsr1h	equ	0xFE2
  6565                           fsr1l	equ	0xFE1
  6566                           indf2	equ	0xFDF
  6567                           postinc2	equ	0xFDE
  6568                           postdec2	equ	0xFDD
  6569                           plusw2	equ	0xFDB
  6570                           fsr2h	equ	0xFDA
  6571                           fsr2l	equ	0xFD9
  6572                           status	equ	0xFD8
  6573                           
  6574 ;; *************** function _fat_format *****************
  6575 ;; Defined at:
  6576 ;;		line 963 in file "fat16.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;		None
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;  cntr            2   36[COMRAM] unsigned int 
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  1    wreg      void 
  6583 ;; Registers used:
  6584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6594 ;;Total ram usage:        2 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:    5
  6597 ;; This function calls:
  6598 ;;		__get_data
  6599 ;;		__get_fat
  6600 ;;		__get_fbr
  6601 ;;		__get_mbr
  6602 ;;		__get_root
  6603 ;;		_flash_page_write
  6604 ;; This function is called by:
  6605 ;;		_fat_init
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text22
  6610  0029B0                     __ptext22:
  6611                           	opt stack 0
  6612  0029B0                     _fat_format:
  6613                           	opt stack 23
  6614                           
  6615                           ;fat16.c: 965: uint16_t cntr;
  6616                           ;fat16.c: 968: for(cntr=0; cntr<512; ++cntr)
  6617                           
  6618                           ;incstack = 0
  6619  0029B0  0E00               	movlw	0
  6620  0029B2  6E26               	movwf	fat_format@cntr+1,c
  6621  0029B4  0E00               	movlw	0
  6622  0029B6  6E25               	movwf	fat_format@cntr,c
  6623  0029B8                     l12496:
  6624  0029B8  0E02               	movlw	2
  6625  0029BA  5C26               	subwf	fat_format@cntr+1,w,c
  6626  0029BC  B0D8               	btfsc	status,0,c
  6627  0029BE  D010               	goto	l12506
  6628                           
  6629                           ;fat16.c: 969: {
  6630                           ;fat16.c: 970: buffer[cntr] = _get_mbr(cntr);
  6631  0029C0  0EDA               	movlw	low _buffer
  6632  0029C2  2425               	addwf	fat_format@cntr,w,c
  6633  0029C4  6ED9               	movwf	fsr2l,c
  6634  0029C6  0E03               	movlw	high _buffer
  6635  0029C8  2026               	addwfc	fat_format@cntr+1,w,c
  6636  0029CA  6EDA               	movwf	fsr2h,c
  6637  0029CC  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
  6638  0029D0  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
  6639  0029D4  ECAF  F028         	call	__get_mbr	;wreg free
  6640  0029D8  6EDF               	movwf	indf2,c
  6641  0029DA  4A25               	infsnz	fat_format@cntr,f,c
  6642  0029DC  2A26               	incf	fat_format@cntr+1,f,c
  6643  0029DE  D7EC               	goto	l12496
  6644  0029E0                     l12506:
  6645                           
  6646                           ;fat16.c: 971: }
  6647                           ;fat16.c: 972: flash_page_write(0, buffer);
  6648  0029E0  0E00               	movlw	0
  6649  0029E2  6E21               	movwf	flash_page_write@page+1,c
  6650  0029E4  0E00               	movlw	0
  6651  0029E6  6E20               	movwf	flash_page_write@page,c
  6652  0029E8  0EDA               	movlw	low _buffer
  6653  0029EA  6E22               	movwf	flash_page_write@data,c
  6654  0029EC  0E03               	movlw	high _buffer
  6655  0029EE  6E23               	movwf	flash_page_write@data+1,c
  6656  0029F0  EC15  F037         	call	_flash_page_write	;wreg free
  6657                           
  6658                           ;fat16.c: 975: for(cntr=0; cntr<512; ++cntr)
  6659  0029F4  0E00               	movlw	0
  6660  0029F6  6E26               	movwf	fat_format@cntr+1,c
  6661  0029F8  0E00               	movlw	0
  6662  0029FA  6E25               	movwf	fat_format@cntr,c
  6663  0029FC                     l12510:
  6664  0029FC  0E02               	movlw	2
  6665  0029FE  5C26               	subwf	fat_format@cntr+1,w,c
  6666  002A00  B0D8               	btfsc	status,0,c
  6667  002A02  D010               	goto	l12520
  6668                           
  6669                           ;fat16.c: 976: {
  6670                           ;fat16.c: 977: buffer[cntr] = _get_fbr(cntr);
  6671  002A04  0EDA               	movlw	low _buffer
  6672  002A06  2425               	addwf	fat_format@cntr,w,c
  6673  002A08  6ED9               	movwf	fsr2l,c
  6674  002A0A  0E03               	movlw	high _buffer
  6675  002A0C  2026               	addwfc	fat_format@cntr+1,w,c
  6676  002A0E  6EDA               	movwf	fsr2h,c
  6677  002A10  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
  6678  002A14  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
  6679  002A18  EC77  F012         	call	__get_fbr	;wreg free
  6680  002A1C  6EDF               	movwf	indf2,c
  6681  002A1E  4A25               	infsnz	fat_format@cntr,f,c
  6682  002A20  2A26               	incf	fat_format@cntr+1,f,c
  6683  002A22  D7EC               	goto	l12510
  6684  002A24                     l12520:
  6685                           
  6686                           ;fat16.c: 978: }
  6687                           ;fat16.c: 979: flash_page_write(1, buffer);
  6688  002A24  0E00               	movlw	0
  6689  002A26  6E21               	movwf	flash_page_write@page+1,c
  6690  002A28  0E01               	movlw	1
  6691  002A2A  6E20               	movwf	flash_page_write@page,c
  6692  002A2C  0EDA               	movlw	low _buffer
  6693  002A2E  6E22               	movwf	flash_page_write@data,c
  6694  002A30  0E03               	movlw	high _buffer
  6695  002A32  6E23               	movwf	flash_page_write@data+1,c
  6696  002A34  EC15  F037         	call	_flash_page_write	;wreg free
  6697                           
  6698                           ;fat16.c: 982: for(cntr=0; cntr<512; ++cntr)
  6699  002A38  0E00               	movlw	0
  6700  002A3A  6E26               	movwf	fat_format@cntr+1,c
  6701  002A3C  0E00               	movlw	0
  6702  002A3E  6E25               	movwf	fat_format@cntr,c
  6703  002A40                     l12524:
  6704  002A40  0E02               	movlw	2
  6705  002A42  5C26               	subwf	fat_format@cntr+1,w,c
  6706  002A44  B0D8               	btfsc	status,0,c
  6707  002A46  D010               	goto	l12534
  6708                           
  6709                           ;fat16.c: 983: {
  6710                           ;fat16.c: 984: buffer[cntr] = _get_fat(cntr);
  6711  002A48  0EDA               	movlw	low _buffer
  6712  002A4A  2425               	addwf	fat_format@cntr,w,c
  6713  002A4C  6ED9               	movwf	fsr2l,c
  6714  002A4E  0E03               	movlw	high _buffer
  6715  002A50  2026               	addwfc	fat_format@cntr+1,w,c
  6716  002A52  6EDA               	movwf	fsr2h,c
  6717  002A54  C025  F001         	movff	fat_format@cntr,__get_fat@idx
  6718  002A58  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
  6719  002A5C  ECDD  F034         	call	__get_fat	;wreg free
  6720  002A60  6EDF               	movwf	indf2,c
  6721  002A62  4A25               	infsnz	fat_format@cntr,f,c
  6722  002A64  2A26               	incf	fat_format@cntr+1,f,c
  6723  002A66  D7EC               	goto	l12524
  6724  002A68                     l12534:
  6725                           
  6726                           ;fat16.c: 985: }
  6727                           ;fat16.c: 986: flash_page_write(2, buffer);
  6728  002A68  0E00               	movlw	0
  6729  002A6A  6E21               	movwf	flash_page_write@page+1,c
  6730  002A6C  0E02               	movlw	2
  6731  002A6E  6E20               	movwf	flash_page_write@page,c
  6732  002A70  0EDA               	movlw	low _buffer
  6733  002A72  6E22               	movwf	flash_page_write@data,c
  6734  002A74  0E03               	movlw	high _buffer
  6735  002A76  6E23               	movwf	flash_page_write@data+1,c
  6736  002A78  EC15  F037         	call	_flash_page_write	;wreg free
  6737                           
  6738                           ;fat16.c: 989: for(cntr=0; cntr<512; ++cntr)
  6739  002A7C  0E00               	movlw	0
  6740  002A7E  6E26               	movwf	fat_format@cntr+1,c
  6741  002A80  0E00               	movlw	0
  6742  002A82  6E25               	movwf	fat_format@cntr,c
  6743  002A84                     l12538:
  6744  002A84  0E02               	movlw	2
  6745  002A86  5C26               	subwf	fat_format@cntr+1,w,c
  6746  002A88  B0D8               	btfsc	status,0,c
  6747  002A8A  D00B               	goto	l12548
  6748                           
  6749                           ;fat16.c: 990: {
  6750                           ;fat16.c: 991: buffer[cntr] = 0x00;
  6751  002A8C  0EDA               	movlw	low _buffer
  6752  002A8E  2425               	addwf	fat_format@cntr,w,c
  6753  002A90  6ED9               	movwf	fsr2l,c
  6754  002A92  0E03               	movlw	high _buffer
  6755  002A94  2026               	addwfc	fat_format@cntr+1,w,c
  6756  002A96  6EDA               	movwf	fsr2h,c
  6757  002A98  0E00               	movlw	0
  6758  002A9A  6EDF               	movwf	indf2,c
  6759  002A9C  4A25               	infsnz	fat_format@cntr,f,c
  6760  002A9E  2A26               	incf	fat_format@cntr+1,f,c
  6761  002AA0  D7F1               	goto	l12538
  6762  002AA2                     l12548:
  6763                           
  6764                           ;fat16.c: 992: }
  6765                           ;fat16.c: 993: for(cntr=3; cntr<=17; ++cntr)
  6766  002AA2  0E00               	movlw	0
  6767  002AA4  6E26               	movwf	fat_format@cntr+1,c
  6768  002AA6  0E03               	movlw	3
  6769  002AA8  6E25               	movwf	fat_format@cntr,c
  6770  002AAA                     l12550:
  6771  002AAA  5026               	movf	fat_format@cntr+1,w,c
  6772  002AAC  E111               	bnz	l12560
  6773  002AAE  0E12               	movlw	18
  6774  002AB0  5C25               	subwf	fat_format@cntr,w,c
  6775  002AB2  B0D8               	btfsc	status,0,c
  6776  002AB4  D00D               	goto	l12560
  6777                           
  6778                           ;fat16.c: 994: {
  6779                           ;fat16.c: 995: flash_page_write(cntr, buffer);
  6780  002AB6  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  6781  002ABA  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  6782  002ABE  0EDA               	movlw	low _buffer
  6783  002AC0  6E22               	movwf	flash_page_write@data,c
  6784  002AC2  0E03               	movlw	high _buffer
  6785  002AC4  6E23               	movwf	flash_page_write@data+1,c
  6786  002AC6  EC15  F037         	call	_flash_page_write	;wreg free
  6787  002ACA  4A25               	infsnz	fat_format@cntr,f,c
  6788  002ACC  2A26               	incf	fat_format@cntr+1,f,c
  6789  002ACE  D7ED               	goto	l12550
  6790  002AD0                     l12560:
  6791                           
  6792                           ;fat16.c: 996: }
  6793                           ;fat16.c: 999: for(cntr=0; cntr<512; ++cntr)
  6794  002AD0  0E00               	movlw	0
  6795  002AD2  6E26               	movwf	fat_format@cntr+1,c
  6796  002AD4  0E00               	movlw	0
  6797  002AD6  6E25               	movwf	fat_format@cntr,c
  6798  002AD8                     l12562:
  6799  002AD8  0E02               	movlw	2
  6800  002ADA  5C26               	subwf	fat_format@cntr+1,w,c
  6801  002ADC  B0D8               	btfsc	status,0,c
  6802  002ADE  D010               	goto	l12572
  6803                           
  6804                           ;fat16.c: 1000: {
  6805                           ;fat16.c: 1001: buffer[cntr] = _get_root(cntr);
  6806  002AE0  0EDA               	movlw	low _buffer
  6807  002AE2  2425               	addwf	fat_format@cntr,w,c
  6808  002AE4  6ED9               	movwf	fsr2l,c
  6809  002AE6  0E03               	movlw	high _buffer
  6810  002AE8  2026               	addwfc	fat_format@cntr+1,w,c
  6811  002AEA  6EDA               	movwf	fsr2h,c
  6812  002AEC  C025  F001         	movff	fat_format@cntr,__get_root@idx
  6813  002AF0  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
  6814  002AF4  EC7B  F019         	call	__get_root	;wreg free
  6815  002AF8  6EDF               	movwf	indf2,c
  6816  002AFA  4A25               	infsnz	fat_format@cntr,f,c
  6817  002AFC  2A26               	incf	fat_format@cntr+1,f,c
  6818  002AFE  D7EC               	goto	l12562
  6819  002B00                     l12572:
  6820                           
  6821                           ;fat16.c: 1002: }
  6822                           ;fat16.c: 1003: flash_page_write(18, buffer);
  6823  002B00  0E00               	movlw	0
  6824  002B02  6E21               	movwf	flash_page_write@page+1,c
  6825  002B04  0E12               	movlw	18
  6826  002B06  6E20               	movwf	flash_page_write@page,c
  6827  002B08  0EDA               	movlw	low _buffer
  6828  002B0A  6E22               	movwf	flash_page_write@data,c
  6829  002B0C  0E03               	movlw	high _buffer
  6830  002B0E  6E23               	movwf	flash_page_write@data+1,c
  6831  002B10  EC15  F037         	call	_flash_page_write	;wreg free
  6832                           
  6833                           ;fat16.c: 1006: for(cntr=0; cntr<512; ++cntr)
  6834  002B14  0E00               	movlw	0
  6835  002B16  6E26               	movwf	fat_format@cntr+1,c
  6836  002B18  0E00               	movlw	0
  6837  002B1A  6E25               	movwf	fat_format@cntr,c
  6838  002B1C                     l12576:
  6839  002B1C  0E02               	movlw	2
  6840  002B1E  5C26               	subwf	fat_format@cntr+1,w,c
  6841  002B20  B0D8               	btfsc	status,0,c
  6842  002B22  D00B               	goto	l12586
  6843                           
  6844                           ;fat16.c: 1007: {
  6845                           ;fat16.c: 1008: buffer[cntr] = 0x00;
  6846  002B24  0EDA               	movlw	low _buffer
  6847  002B26  2425               	addwf	fat_format@cntr,w,c
  6848  002B28  6ED9               	movwf	fsr2l,c
  6849  002B2A  0E03               	movlw	high _buffer
  6850  002B2C  2026               	addwfc	fat_format@cntr+1,w,c
  6851  002B2E  6EDA               	movwf	fsr2h,c
  6852  002B30  0E00               	movlw	0
  6853  002B32  6EDF               	movwf	indf2,c
  6854  002B34  4A25               	infsnz	fat_format@cntr,f,c
  6855  002B36  2A26               	incf	fat_format@cntr+1,f,c
  6856  002B38  D7F1               	goto	l12576
  6857  002B3A                     l12586:
  6858                           
  6859                           ;fat16.c: 1009: }
  6860                           ;fat16.c: 1010: for(cntr=19; cntr<=21; ++cntr)
  6861  002B3A  0E00               	movlw	0
  6862  002B3C  6E26               	movwf	fat_format@cntr+1,c
  6863  002B3E  0E13               	movlw	19
  6864  002B40  6E25               	movwf	fat_format@cntr,c
  6865  002B42                     l12588:
  6866  002B42  5026               	movf	fat_format@cntr+1,w,c
  6867  002B44  E111               	bnz	l12598
  6868  002B46  0E16               	movlw	22
  6869  002B48  5C25               	subwf	fat_format@cntr,w,c
  6870  002B4A  B0D8               	btfsc	status,0,c
  6871  002B4C  D00D               	goto	l12598
  6872                           
  6873                           ;fat16.c: 1011: {
  6874                           ;fat16.c: 1012: flash_page_write(cntr, buffer);
  6875  002B4E  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  6876  002B52  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  6877  002B56  0EDA               	movlw	low _buffer
  6878  002B58  6E22               	movwf	flash_page_write@data,c
  6879  002B5A  0E03               	movlw	high _buffer
  6880  002B5C  6E23               	movwf	flash_page_write@data+1,c
  6881  002B5E  EC15  F037         	call	_flash_page_write	;wreg free
  6882  002B62  4A25               	infsnz	fat_format@cntr,f,c
  6883  002B64  2A26               	incf	fat_format@cntr+1,f,c
  6884  002B66  D7ED               	goto	l12588
  6885  002B68                     l12598:
  6886                           
  6887                           ;fat16.c: 1013: }
  6888                           ;fat16.c: 1016: for(cntr=0; cntr<512; ++cntr)
  6889  002B68  0E00               	movlw	0
  6890  002B6A  6E26               	movwf	fat_format@cntr+1,c
  6891  002B6C  0E00               	movlw	0
  6892  002B6E  6E25               	movwf	fat_format@cntr,c
  6893  002B70                     l12600:
  6894  002B70  0E02               	movlw	2
  6895  002B72  5C26               	subwf	fat_format@cntr+1,w,c
  6896  002B74  B0D8               	btfsc	status,0,c
  6897  002B76  D010               	goto	l12610
  6898                           
  6899                           ;fat16.c: 1017: {
  6900                           ;fat16.c: 1018: buffer[cntr] = _get_data(cntr);
  6901  002B78  0EDA               	movlw	low _buffer
  6902  002B7A  2425               	addwf	fat_format@cntr,w,c
  6903  002B7C  6ED9               	movwf	fsr2l,c
  6904  002B7E  0E03               	movlw	high _buffer
  6905  002B80  2026               	addwfc	fat_format@cntr+1,w,c
  6906  002B82  6EDA               	movwf	fsr2h,c
  6907  002B84  C025  F001         	movff	fat_format@cntr,__get_data@idx
  6908  002B88  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
  6909  002B8C  ECB6  F03A         	call	__get_data	;wreg free
  6910  002B90  6EDF               	movwf	indf2,c
  6911  002B92  4A25               	infsnz	fat_format@cntr,f,c
  6912  002B94  2A26               	incf	fat_format@cntr+1,f,c
  6913  002B96  D7EC               	goto	l12600
  6914  002B98                     l12610:
  6915                           
  6916                           ;fat16.c: 1019: }
  6917                           ;fat16.c: 1020: flash_page_write(22, buffer);
  6918  002B98  0E00               	movlw	0
  6919  002B9A  6E21               	movwf	flash_page_write@page+1,c
  6920  002B9C  0E16               	movlw	22
  6921  002B9E  6E20               	movwf	flash_page_write@page,c
  6922  002BA0  0EDA               	movlw	low _buffer
  6923  002BA2  6E22               	movwf	flash_page_write@data,c
  6924  002BA4  0E03               	movlw	high _buffer
  6925  002BA6  6E23               	movwf	flash_page_write@data+1,c
  6926  002BA8  EC15  F037         	call	_flash_page_write	;wreg free
  6927  002BAC  0012               	return		;funcret
  6928  002BAE                     __end_of_fat_format:
  6929                           	opt stack 0
  6930                           tblptru	equ	0xFF8
  6931                           tblptrh	equ	0xFF7
  6932                           tblptrl	equ	0xFF6
  6933                           tablat	equ	0xFF5
  6934                           prodh	equ	0xFF4
  6935                           prodl	equ	0xFF3
  6936                           intcon	equ	0xFF2
  6937                           intcon3	equ	0xFF0
  6938                           postinc0	equ	0xFEE
  6939                           wreg	equ	0xFE8
  6940                           postdec1	equ	0xFE5
  6941                           plusw1	equ	0xFE3
  6942                           fsr1h	equ	0xFE2
  6943                           fsr1l	equ	0xFE1
  6944                           indf2	equ	0xFDF
  6945                           postinc2	equ	0xFDE
  6946                           postdec2	equ	0xFDD
  6947                           plusw2	equ	0xFDB
  6948                           fsr2h	equ	0xFDA
  6949                           fsr2l	equ	0xFD9
  6950                           status	equ	0xFD8
  6951                           
  6952 ;; *************** function __get_root *****************
  6953 ;; Defined at:
  6954 ;;		line 849 in file "fat16.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  idx             2    0[COMRAM] unsigned int 
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;		None
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  1    wreg      unsigned char 
  6961 ;; Registers used:
  6962 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6970 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6971 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6972 ;;Total ram usage:        6 bytes
  6973 ;; Hardware stack levels used:    1
  6974 ;; This function calls:
  6975 ;;		Nothing
  6976 ;; This function is called by:
  6977 ;;		_fat_format
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text23
  6982  0032F6                     __ptext23:
  6983                           	opt stack 0
  6984  0032F6                     __get_root:
  6985                           	opt stack 27
  6986                           
  6987                           ;fat16.c: 851: if (idx < 0x20)
  6988                           
  6989                           ;incstack = 0
  6990  0032F6  5002               	movf	__get_root@idx+1,w,c
  6991  0032F8  E11D               	bnz	l11726
  6992  0032FA  0E20               	movlw	32
  6993  0032FC  5C01               	subwf	__get_root@idx,w,c
  6994  0032FE  B0D8               	btfsc	status,0,c
  6995  003300  D019               	goto	l11726
  6996                           
  6997                           ;fat16.c: 852: {
  6998                           ;fat16.c: 853: if (idx < 11)
  6999  003302  5002               	movf	__get_root@idx+1,w,c
  7000  003304  E110               	bnz	l11720
  7001  003306  0E0B               	movlw	11
  7002  003308  5C01               	subwf	__get_root@idx,w,c
  7003  00330A  B0D8               	btfsc	status,0,c
  7004  00330C  D00C               	goto	l11720
  7005                           
  7006                           ;fat16.c: 854: {
  7007                           ;fat16.c: 855: return "SolarChargr"[idx];
  7008  00330E  0EDC               	movlw	low STR_9
  7009  003310  2401               	addwf	__get_root@idx,w,c
  7010  003312  6EF6               	movwf	tblptrl,c
  7011  003314  0E8F               	movlw	high STR_9
  7012  003316  2002               	addwfc	__get_root@idx+1,w,c
  7013  003318  6EF7               	movwf	tblptrh,c
  7014  00331A                     	if	1	;There are 3 active tblptr bytes
  7015  00331A  6AF8               	clrf	tblptru,c
  7016  00331C  0E00               	movlw	low (__mediumconst shr (0+16))
  7017  00331E  22F8               	addwfc	tblptru,f,c
  7018  003320                     	endif
  7019  003320  0008               	tblrd		*
  7020  003322  50F5               	movf	tablat,w,c
  7021  003324  0012               	return	
  7022  003326                     l11720:
  7023                           
  7024                           ;fat16.c: 856: }
  7025                           ;fat16.c: 857: if(idx==11)
  7026  003326  0E0B               	movlw	11
  7027  003328  1801               	xorwf	__get_root@idx,w,c
  7028  00332A  1002               	iorwf	__get_root@idx+1,w,c
  7029  00332C  A4D8               	btfss	status,2,c
  7030  00332E  D002               	goto	l11726
  7031                           
  7032                           ;fat16.c: 858: {
  7033                           ;fat16.c: 859: return 0x08;
  7034  003330  0E08               	movlw	8
  7035  003332  0012               	return	
  7036  003334                     l11726:
  7037                           
  7038                           ;fat16.c: 860: }
  7039                           ;fat16.c: 861: }
  7040                           ;fat16.c: 862: if (idx < 0x40)
  7041  003334  5002               	movf	__get_root@idx+1,w,c
  7042  003336  E103               	bnz	u8601
  7043  003338  0E40               	movlw	64
  7044  00333A  5C01               	subwf	__get_root@idx,w,c
  7045  00333C  B0D8               	btfsc	status,0,c
  7046  00333E                     u8601:
  7047  00333E  D0A4               	goto	l11828
  7048                           
  7049                           ;fat16.c: 863: {
  7050                           ;fat16.c: 864: idx -= 0x20;
  7051  003340  0E20               	movlw	32
  7052  003342  5E01               	subwf	__get_root@idx,f,c
  7053  003344  0E00               	movlw	0
  7054  003346  5A02               	subwfb	__get_root@idx+1,f,c
  7055                           
  7056                           ;fat16.c: 865: if (idx < 0+8)
  7057  003348  5002               	movf	__get_root@idx+1,w,c
  7058  00334A  E110               	bnz	l11734
  7059  00334C  0E08               	movlw	8
  7060  00334E  5C01               	subwf	__get_root@idx,w,c
  7061  003350  B0D8               	btfsc	status,0,c
  7062  003352  D00C               	goto	l11734
  7063                           
  7064                           ;fat16.c: 866: {
  7065                           ;fat16.c: 867: return "FILE    "[idx];
  7066  003354  0EE8               	movlw	low STR_10
  7067  003356  2401               	addwf	__get_root@idx,w,c
  7068  003358  6EF6               	movwf	tblptrl,c
  7069  00335A  0E8F               	movlw	high STR_10
  7070  00335C  2002               	addwfc	__get_root@idx+1,w,c
  7071  00335E  6EF7               	movwf	tblptrh,c
  7072  003360                     	if	1	;There are 3 active tblptr bytes
  7073  003360  6AF8               	clrf	tblptru,c
  7074  003362  0E00               	movlw	low (__mediumconst shr (0+16))
  7075  003364  22F8               	addwfc	tblptru,f,c
  7076  003366                     	endif
  7077  003366  0008               	tblrd		*
  7078  003368  50F5               	movf	tablat,w,c
  7079  00336A  0012               	return	
  7080  00336C                     l11734:
  7081                           
  7082                           ;fat16.c: 868: }
  7083                           ;fat16.c: 869: if (idx < 11)
  7084  00336C  5002               	movf	__get_root@idx+1,w,c
  7085  00336E  E146               	bnz	l11826
  7086  003370  0E0B               	movlw	11
  7087  003372  5C01               	subwf	__get_root@idx,w,c
  7088  003374  B0D8               	btfsc	status,0,c
  7089  003376  D042               	goto	l11826
  7090                           
  7091                           ;fat16.c: 870: {
  7092                           ;fat16.c: 871: return "TXT"[idx-8];
  7093  003378  0EF8               	movlw	248
  7094  00337A  6E03               	movwf	??__get_root& (0+255),c
  7095  00337C  0EFF               	movlw	255
  7096  00337E  6E04               	movwf	(??__get_root+1)& (0+255),c
  7097  003380  C001  F005         	movff	__get_root@idx,??__get_root+2
  7098  003384  C002  F006         	movff	__get_root@idx+1,??__get_root+3
  7099  003388  5003               	movf	??__get_root,w,c
  7100  00338A  2605               	addwf	??__get_root+2,f,c
  7101  00338C  5004               	movf	??__get_root+1,w,c
  7102  00338E  2206               	addwfc	??__get_root+3,f,c
  7103  003390  0EFA               	movlw	low STR_11
  7104  003392  2405               	addwf	??__get_root+2,w,c
  7105  003394  6EF6               	movwf	tblptrl,c
  7106  003396  0E8F               	movlw	high STR_11
  7107  003398  2006               	addwfc	??__get_root+3,w,c
  7108  00339A  6EF7               	movwf	tblptrh,c
  7109  00339C                     	if	1	;There are 3 active tblptr bytes
  7110  00339C  6AF8               	clrf	tblptru,c
  7111  00339E  0E00               	movlw	low (__mediumconst shr (0+16))
  7112  0033A0  22F8               	addwfc	tblptru,f,c
  7113  0033A2                     	endif
  7114  0033A2  0008               	tblrd		*
  7115  0033A4  50F5               	movf	tablat,w,c
  7116  0033A6  0012               	return	
  7117  0033A8                     l11740:
  7118                           
  7119                           ;fat16.c: 876: return 0x20;
  7120  0033A8  0E20               	movlw	32
  7121  0033AA  0012               	return	
  7122  0033AC                     l11744:
  7123                           
  7124                           ;fat16.c: 878: return 0x06;
  7125  0033AC  0E06               	movlw	6
  7126  0033AE  0012               	return	
  7127  0033B0                     l11748:
  7128                           
  7129                           ;fat16.c: 880: return 0x28;
  7130  0033B0  0E28               	movlw	40
  7131  0033B2  0012               	return	
  7132  0033B4                     l11752:
  7133                           
  7134                           ;fat16.c: 882: return 0x78;
  7135  0033B4  0E78               	movlw	120
  7136  0033B6  0012               	return	
  7137  0033B8                     l11756:
  7138                           
  7139                           ;fat16.c: 884: return 0xDE;
  7140  0033B8  0EDE               	movlw	222
  7141  0033BA  0012               	return	
  7142  0033BC                     l11760:
  7143                           
  7144                           ;fat16.c: 886: return 0x38;
  7145  0033BC  0E38               	movlw	56
  7146  0033BE  0012               	return	
  7147  0033C0                     l11764:
  7148                           
  7149                           ;fat16.c: 888: return 0x5F;
  7150  0033C0  0E5F               	movlw	95
  7151  0033C2  0012               	return	
  7152  0033C4                     l11768:
  7153                           
  7154                           ;fat16.c: 890: return 0x4B;
  7155  0033C4  0E4B               	movlw	75
  7156  0033C6  0012               	return	
  7157  0033C8                     l11772:
  7158                           
  7159                           ;fat16.c: 892: return 0x00;
  7160  0033C8  0E00               	movlw	0
  7161  0033CA  0012               	return	
  7162  0033CC                     l11776:
  7163                           
  7164                           ;fat16.c: 894: return 0x00;
  7165  0033CC  0E00               	movlw	0
  7166  0033CE  0012               	return	
  7167  0033D0                     l11780:
  7168                           
  7169                           ;fat16.c: 896: return 0x04;
  7170  0033D0  0E04               	movlw	4
  7171  0033D2  0012               	return	
  7172  0033D4                     l11784:
  7173                           
  7174                           ;fat16.c: 898: return 0x77;
  7175  0033D4  0E77               	movlw	119
  7176  0033D6  0012               	return	
  7177  0033D8                     l11788:
  7178                           
  7179                           ;fat16.c: 900: return 0xDE;
  7180  0033D8  0EDE               	movlw	222
  7181  0033DA  0012               	return	
  7182  0033DC                     l11792:
  7183                           
  7184                           ;fat16.c: 902: return 0x38;
  7185  0033DC  0E38               	movlw	56
  7186  0033DE  0012               	return	
  7187  0033E0                     l11796:
  7188                           
  7189                           ;fat16.c: 904: return ((unsigned char)((((uint16_t)2))&0xFF));
  7190  0033E0  0E02               	movlw	2
  7191  0033E2  0012               	return	
  7192  0033E4                     l11800:
  7193                           
  7194                           ;fat16.c: 906: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  7195  0033E4  0E00               	movlw	0
  7196  0033E6  0012               	return	
  7197  0033E8                     l11804:
  7198                           
  7199                           ;fat16.c: 908: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0xF
      +                          F));
  7200  0033E8  0E0C               	movlw	12
  7201  0033EA  0012               	return	
  7202  0033EC                     l11808:
  7203                           
  7204                           ;fat16.c: 911: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>8
      +                          )&0xFF));
  7205  0033EC  0E00               	movlw	0
  7206  0033EE  0012               	return	
  7207  0033F0                     l11812:
  7208                           
  7209                           ;fat16.c: 914: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF)
      +                          ))&0xFF));
  7210  0033F0  0E00               	movlw	0
  7211  0033F2  0012               	return	
  7212  0033F4                     l11816:
  7213                           
  7214                           ;fat16.c: 917: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  7215  0033F4  0E00               	movlw	0
  7216  0033F6  0012               	return	
  7217  0033F8                     l11820:
  7218                           
  7219                           ;fat16.c: 920: return 0x00;
  7220  0033F8  0E00               	movlw	0
  7221  0033FA  0012               	return	
  7222  0033FC                     l11826:
  7223  0033FC  C001  F003         	movff	__get_root@idx,??__get_root
  7224  003400  C002  F004         	movff	__get_root@idx+1,??__get_root+1
  7225                           
  7226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7227                           ; Switch size 1, requested type "space"
  7228                           ; Number of cases is 1, Range of values is 0 to 0
  7229                           ; switch strategies available:
  7230                           ; Name         Instructions Cycles
  7231                           ; simple_byte            4     3 (average)
  7232                           ;	Chosen strategy is simple_byte
  7233  003404  5004               	movf	??__get_root+1,w,c
  7234  003406  0A00               	xorlw	0	; case 0
  7235  003408  A4D8               	btfss	status,2,c
  7236  00340A  D7F6               	goto	l11820
  7237                           
  7238                           ; Switch size 1, requested type "space"
  7239                           ; Number of cases is 20, Range of values is 11 to 31
  7240                           ; switch strategies available:
  7241                           ; Name         Instructions Cycles
  7242                           ; simple_byte           61    31 (average)
  7243                           ;	Chosen strategy is simple_byte
  7244  00340C  5003               	movf	??__get_root,w,c
  7245  00340E  0A0B               	xorlw	11	; case 11
  7246  003410  B4D8               	btfsc	status,2,c
  7247  003412  D7CA               	goto	l11740
  7248  003414  0A06               	xorlw	6	; case 13
  7249  003416  B4D8               	btfsc	status,2,c
  7250  003418  D7C9               	goto	l11744
  7251  00341A  0A03               	xorlw	3	; case 14
  7252  00341C  B4D8               	btfsc	status,2,c
  7253  00341E  D7C8               	goto	l11748
  7254  003420  0A01               	xorlw	1	; case 15
  7255  003422  B4D8               	btfsc	status,2,c
  7256  003424  D7C7               	goto	l11752
  7257  003426  0A1F               	xorlw	31	; case 16
  7258  003428  B4D8               	btfsc	status,2,c
  7259  00342A  D7C6               	goto	l11756
  7260  00342C  0A01               	xorlw	1	; case 17
  7261  00342E  B4D8               	btfsc	status,2,c
  7262  003430  D7C5               	goto	l11760
  7263  003432  0A03               	xorlw	3	; case 18
  7264  003434  B4D8               	btfsc	status,2,c
  7265  003436  D7C4               	goto	l11764
  7266  003438  0A01               	xorlw	1	; case 19
  7267  00343A  B4D8               	btfsc	status,2,c
  7268  00343C  D7C3               	goto	l11768
  7269  00343E  0A07               	xorlw	7	; case 20
  7270  003440  B4D8               	btfsc	status,2,c
  7271  003442  D7C2               	goto	l11772
  7272  003444  0A01               	xorlw	1	; case 21
  7273  003446  B4D8               	btfsc	status,2,c
  7274  003448  D7C1               	goto	l11776
  7275  00344A  0A03               	xorlw	3	; case 22
  7276  00344C  B4D8               	btfsc	status,2,c
  7277  00344E  D7C0               	goto	l11780
  7278  003450  0A01               	xorlw	1	; case 23
  7279  003452  B4D8               	btfsc	status,2,c
  7280  003454  D7BF               	goto	l11784
  7281  003456  0A0F               	xorlw	15	; case 24
  7282  003458  B4D8               	btfsc	status,2,c
  7283  00345A  D7BE               	goto	l11788
  7284  00345C  0A01               	xorlw	1	; case 25
  7285  00345E  B4D8               	btfsc	status,2,c
  7286  003460  D7BD               	goto	l11792
  7287  003462  0A03               	xorlw	3	; case 26
  7288  003464  B4D8               	btfsc	status,2,c
  7289  003466  D7BC               	goto	l11796
  7290  003468  0A01               	xorlw	1	; case 27
  7291  00346A  B4D8               	btfsc	status,2,c
  7292  00346C  D7BB               	goto	l11800
  7293  00346E  0A07               	xorlw	7	; case 28
  7294  003470  B4D8               	btfsc	status,2,c
  7295  003472  D7BA               	goto	l11804
  7296  003474  0A01               	xorlw	1	; case 29
  7297  003476  B4D8               	btfsc	status,2,c
  7298  003478  D7B9               	goto	l11808
  7299  00347A  0A03               	xorlw	3	; case 30
  7300  00347C  B4D8               	btfsc	status,2,c
  7301  00347E  D7B8               	goto	l11812
  7302  003480  0A01               	xorlw	1	; case 31
  7303  003482  B4D8               	btfsc	status,2,c
  7304  003484  D7B7               	goto	l11816
  7305  003486  D7B8               	goto	l11820
  7306  003488                     l11828:
  7307                           
  7308                           ;fat16.c: 922: }
  7309                           ;fat16.c: 923: return 0X00;
  7310  003488  0E00               	movlw	0
  7311  00348A  0012               	return	
  7312  00348C                     __end_of__get_root:
  7313                           	opt stack 0
  7314                           tblptru	equ	0xFF8
  7315                           tblptrh	equ	0xFF7
  7316                           tblptrl	equ	0xFF6
  7317                           tablat	equ	0xFF5
  7318                           prodh	equ	0xFF4
  7319                           prodl	equ	0xFF3
  7320                           intcon	equ	0xFF2
  7321                           intcon3	equ	0xFF0
  7322                           postinc0	equ	0xFEE
  7323                           wreg	equ	0xFE8
  7324                           postdec1	equ	0xFE5
  7325                           plusw1	equ	0xFE3
  7326                           fsr1h	equ	0xFE2
  7327                           fsr1l	equ	0xFE1
  7328                           indf2	equ	0xFDF
  7329                           postinc2	equ	0xFDE
  7330                           postdec2	equ	0xFDD
  7331                           plusw2	equ	0xFDB
  7332                           fsr2h	equ	0xFDA
  7333                           fsr2l	equ	0xFD9
  7334                           status	equ	0xFD8
  7335                           
  7336 ;; *************** function __get_mbr *****************
  7337 ;; Defined at:
  7338 ;;		line 637 in file "fat16.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;  idx             2    0[COMRAM] unsigned int 
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;		None
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  1    wreg      unsigned char 
  7345 ;; Registers used:
  7346 ;;		wreg, status,2, status,0
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7354 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7355 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7356 ;;Total ram usage:        4 bytes
  7357 ;; Hardware stack levels used:    1
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_fat_get_format_status
  7362 ;;		_fat_format
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           	psect	text24
  7367  00515E                     __ptext24:
  7368                           	opt stack 0
  7369  00515E                     __get_mbr:
  7370                           	opt stack 27
  7371                           
  7372                           ;fat16.c: 639: switch (idx)
  7373                           
  7374                           ;incstack = 0
  7375  00515E  D026               	goto	l11458
  7376  005160                     l11380:
  7377                           
  7378                           ;fat16.c: 650: return 0x80;
  7379  005160  0E80               	movlw	128
  7380  005162  0012               	return	
  7381  005164                     l11384:
  7382                           
  7383                           ;fat16.c: 652: return ((1%63)+1);
  7384  005164  0E02               	movlw	2
  7385  005166  0012               	return	
  7386  005168                     l11388:
  7387                           
  7388                           ;fat16.c: 655: return (((1/(16*63)) & 0b00000011)<<6) | (((1/63)%16) & 0b00111111);
  7389  005168  0E00               	movlw	0
  7390  00516A  0012               	return	
  7391  00516C                     l11392:
  7392                           
  7393                           ;fat16.c: 658: return (1/(16*63)) >> 2;
  7394  00516C  0E00               	movlw	0
  7395  00516E  0012               	return	
  7396  005170                     l11396:
  7397                           
  7398                           ;fat16.c: 661: return 0x04;
  7399  005170  0E04               	movlw	4
  7400  005172  0012               	return	
  7401  005174                     l11400:
  7402                           
  7403                           ;fat16.c: 664: return (((1+5000-1)%63)+1);
  7404  005174  0E18               	movlw	24
  7405  005176  0012               	return	
  7406  005178                     l11404:
  7407                           
  7408                           ;fat16.c: 667: return ((((1+5000-1)/(16*63)) & 0b00000011) << 6) | ((((1+5000-1)/63)%16)
      +                           & 0b00111111);
  7409  005178  0E0F               	movlw	15
  7410  00517A  0012               	return	
  7411  00517C                     l11408:
  7412                           
  7413                           ;fat16.c: 670: return ((1+5000-1)/(16*63)) >> 2;
  7414  00517C  0E01               	movlw	1
  7415  00517E  0012               	return	
  7416  005180                     l11412:
  7417                           
  7418                           ;fat16.c: 673: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
  7419  005180  0E01               	movlw	1
  7420  005182  0012               	return	
  7421  005184                     l11416:
  7422                           
  7423                           ;fat16.c: 675: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
  7424  005184  0E00               	movlw	0
  7425  005186  0012               	return	
  7426  005188                     l11420:
  7427                           
  7428                           ;fat16.c: 677: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
  7429  005188  0E00               	movlw	0
  7430  00518A  0012               	return	
  7431  00518C                     l11424:
  7432                           
  7433                           ;fat16.c: 679: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  7434  00518C  0E00               	movlw	0
  7435  00518E  0012               	return	
  7436  005190                     l11428:
  7437                           
  7438                           ;fat16.c: 681: return ((unsigned char)((((unsigned short)((((uint32_t)5000))&0xFFFF)))&0
      +                          xFF));
  7439  005190  0E88               	movlw	136
  7440  005192  0012               	return	
  7441  005194                     l11432:
  7442                           
  7443                           ;fat16.c: 683: return ((unsigned char)(((((unsigned short)((((uint32_t)5000))&0xFFFF)))>
      +                          >8)&0xFF));
  7444  005194  0E13               	movlw	19
  7445  005196  0012               	return	
  7446  005198                     l11436:
  7447                           
  7448                           ;fat16.c: 685: return ((unsigned char)((((unsigned short)(((((uint32_t)5000))>>16)&0xFFF
      +                          F)))&0xFF));
  7449  005198  0E00               	movlw	0
  7450  00519A  0012               	return	
  7451  00519C                     l11440:
  7452                           
  7453                           ;fat16.c: 687: return ((unsigned char)(((((unsigned short)(((((uint32_t)5000))>>16)&0xFF
      +                          FF)))>>8)&0xFF));
  7454  00519C  0E00               	movlw	0
  7455  00519E  0012               	return	
  7456  0051A0                     l11444:
  7457                           
  7458                           ;fat16.c: 689: return 0X55AA >> 8;
  7459  0051A0  0E55               	movlw	85
  7460  0051A2  0012               	return	
  7461  0051A4                     l11448:
  7462                           
  7463                           ;fat16.c: 691: return 0X55AA & 0XFF;
  7464  0051A4  0EAA               	movlw	170
  7465  0051A6  0012               	return	
  7466  0051A8                     l11452:
  7467                           
  7468                           ;fat16.c: 693: return 0X00;
  7469  0051A8  0E00               	movlw	0
  7470                           
  7471                           ;fat16.c: 694: }
  7472  0051AA  0012               	return	
  7473  0051AC                     l11458:
  7474  0051AC  C001  F003         	movff	__get_mbr@idx,??__get_mbr
  7475  0051B0  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
  7476                           
  7477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7478                           ; Switch size 1, requested type "space"
  7479                           ; Number of cases is 1, Range of values is 1 to 1
  7480                           ; switch strategies available:
  7481                           ; Name         Instructions Cycles
  7482                           ; simple_byte            4     3 (average)
  7483                           ;	Chosen strategy is simple_byte
  7484  0051B4  5004               	movf	??__get_mbr+1,w,c
  7485  0051B6  0A01               	xorlw	1	; case 1
  7486  0051B8  A4D8               	btfss	status,2,c
  7487  0051BA  D7F6               	goto	l11452
  7488                           
  7489                           ; Switch size 1, requested type "space"
  7490                           ; Number of cases is 18, Range of values is 190 to 255
  7491                           ; switch strategies available:
  7492                           ; Name         Instructions Cycles
  7493                           ; simple_byte           55    28 (average)
  7494                           ;	Chosen strategy is simple_byte
  7495  0051BC  5003               	movf	??__get_mbr,w,c
  7496  0051BE  0ABE               	xorlw	190	; case 190
  7497  0051C0  B4D8               	btfsc	status,2,c
  7498  0051C2  D7CE               	goto	l11380
  7499  0051C4  0A01               	xorlw	1	; case 191
  7500  0051C6  B4D8               	btfsc	status,2,c
  7501  0051C8  D7CD               	goto	l11384
  7502  0051CA  0A7F               	xorlw	127	; case 192
  7503  0051CC  B4D8               	btfsc	status,2,c
  7504  0051CE  D7CC               	goto	l11388
  7505  0051D0  0A01               	xorlw	1	; case 193
  7506  0051D2  B4D8               	btfsc	status,2,c
  7507  0051D4  D7CB               	goto	l11392
  7508  0051D6  0A03               	xorlw	3	; case 194
  7509  0051D8  B4D8               	btfsc	status,2,c
  7510  0051DA  D7CA               	goto	l11396
  7511  0051DC  0A01               	xorlw	1	; case 195
  7512  0051DE  B4D8               	btfsc	status,2,c
  7513  0051E0  D7C9               	goto	l11400
  7514  0051E2  0A07               	xorlw	7	; case 196
  7515  0051E4  B4D8               	btfsc	status,2,c
  7516  0051E6  D7C8               	goto	l11404
  7517  0051E8  0A01               	xorlw	1	; case 197
  7518  0051EA  B4D8               	btfsc	status,2,c
  7519  0051EC  D7C7               	goto	l11408
  7520  0051EE  0A03               	xorlw	3	; case 198
  7521  0051F0  B4D8               	btfsc	status,2,c
  7522  0051F2  D7C6               	goto	l11412
  7523  0051F4  0A01               	xorlw	1	; case 199
  7524  0051F6  B4D8               	btfsc	status,2,c
  7525  0051F8  D7C5               	goto	l11416
  7526  0051FA  0A0F               	xorlw	15	; case 200
  7527  0051FC  B4D8               	btfsc	status,2,c
  7528  0051FE  D7C4               	goto	l11420
  7529  005200  0A01               	xorlw	1	; case 201
  7530  005202  B4D8               	btfsc	status,2,c
  7531  005204  D7C3               	goto	l11424
  7532  005206  0A03               	xorlw	3	; case 202
  7533  005208  B4D8               	btfsc	status,2,c
  7534  00520A  D7C2               	goto	l11428
  7535  00520C  0A01               	xorlw	1	; case 203
  7536  00520E  B4D8               	btfsc	status,2,c
  7537  005210  D7C1               	goto	l11432
  7538  005212  0A07               	xorlw	7	; case 204
  7539  005214  B4D8               	btfsc	status,2,c
  7540  005216  D7C0               	goto	l11436
  7541  005218  0A01               	xorlw	1	; case 205
  7542  00521A  B4D8               	btfsc	status,2,c
  7543  00521C  D7BF               	goto	l11440
  7544  00521E  0A33               	xorlw	51	; case 254
  7545  005220  B4D8               	btfsc	status,2,c
  7546  005222  D7BE               	goto	l11444
  7547  005224  0A01               	xorlw	1	; case 255
  7548  005226  B4D8               	btfsc	status,2,c
  7549  005228  D7BD               	goto	l11448
  7550  00522A  D7BE               	goto	l11452
  7551  00522C                     __end_of__get_mbr:
  7552                           	opt stack 0
  7553                           tblptru	equ	0xFF8
  7554                           tblptrh	equ	0xFF7
  7555                           tblptrl	equ	0xFF6
  7556                           tablat	equ	0xFF5
  7557                           prodh	equ	0xFF4
  7558                           prodl	equ	0xFF3
  7559                           intcon	equ	0xFF2
  7560                           intcon3	equ	0xFF0
  7561                           postinc0	equ	0xFEE
  7562                           wreg	equ	0xFE8
  7563                           postdec1	equ	0xFE5
  7564                           plusw1	equ	0xFE3
  7565                           fsr1h	equ	0xFE2
  7566                           fsr1l	equ	0xFE1
  7567                           indf2	equ	0xFDF
  7568                           postinc2	equ	0xFDE
  7569                           postdec2	equ	0xFDD
  7570                           plusw2	equ	0xFDB
  7571                           fsr2h	equ	0xFDA
  7572                           fsr2l	equ	0xFD9
  7573                           status	equ	0xFD8
  7574                           
  7575 ;; *************** function __get_fbr *****************
  7576 ;; Defined at:
  7577 ;;		line 697 in file "fat16.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  idx             2    0[COMRAM] unsigned int 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;		None
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  1    wreg      unsigned char 
  7584 ;; Registers used:
  7585 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7595 ;;Total ram usage:        4 bytes
  7596 ;; Hardware stack levels used:    1
  7597 ;; This function calls:
  7598 ;;		Nothing
  7599 ;; This function is called by:
  7600 ;;		_fat_get_format_status
  7601 ;;		_fat_format
  7602 ;; This function uses a non-reentrant model
  7603 ;;
  7604                           
  7605                           	psect	text25
  7606  0024EE                     __ptext25:
  7607                           	opt stack 0
  7608  0024EE                     __get_fbr:
  7609                           	opt stack 27
  7610                           
  7611                           ;fat16.c: 699: switch (idx)
  7612                           
  7613                           ;incstack = 0
  7614  0024EE  D093               	goto	l11664
  7615  0024F0                     l11466:
  7616                           
  7617                           ;fat16.c: 702: return 0xEB;
  7618  0024F0  0EEB               	movlw	235
  7619  0024F2  0012               	return	
  7620  0024F4                     l11470:
  7621                           
  7622                           ;fat16.c: 704: return 0x3C;
  7623  0024F4  0E3C               	movlw	60
  7624  0024F6  0012               	return	
  7625  0024F8                     l11474:
  7626                           
  7627                           ;fat16.c: 706: return 0x90;
  7628  0024F8  0E90               	movlw	144
  7629  0024FA  0012               	return	
  7630  0024FC                     l11478:
  7631                           
  7632                           ;fat16.c: 708: return "MSDOS5.0"[0];
  7633  0024FC  0EF1               	movlw	low STR_1
  7634  0024FE  6EF6               	movwf	tblptrl,c
  7635  002500                     	if	1	;There is more than 1 active tblptr byte
  7636  002500  0E8F               	movlw	high STR_1
  7637  002502  6EF7               	movwf	tblptrh,c
  7638  002504                     	endif
  7639  002504                     	if	1	;There are 3 active tblptr bytes
  7640  002504  0E00               	movlw	low (STR_1 shr (0+16))
  7641  002506  6EF8               	movwf	tblptru,c
  7642  002508                     	endif
  7643  002508  0008               	tblrd		*
  7644  00250A  50F5               	movf	tablat,w,c
  7645  00250C  0012               	return	
  7646  00250E                     l11482:
  7647                           
  7648                           ;fat16.c: 710: return "MSDOS5.0"[1];
  7649  00250E  0EF2               	movlw	low (STR_1+1)
  7650  002510  6EF6               	movwf	tblptrl,c
  7651  002512  0E8F               	movlw	high (STR_1+1)
  7652  002514  6EF7               	movwf	tblptrh,c
  7653  002516                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7654  002516  6AF8               	clrf	tblptru,c
  7655  002518                     	endif
  7656  002518                     	if	0	;tblptru may be non-zero
  7657  002518                     	endif
  7658  002518  0008               	tblrd		*
  7659  00251A  50F5               	movf	tablat,w,c
  7660  00251C  0012               	return	
  7661  00251E                     l11486:
  7662                           
  7663                           ;fat16.c: 712: return "MSDOS5.0"[2];
  7664  00251E  0EF3               	movlw	low (STR_1+2)
  7665  002520  6EF6               	movwf	tblptrl,c
  7666  002522  0E8F               	movlw	high (STR_1+2)
  7667  002524  6EF7               	movwf	tblptrh,c
  7668  002526                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7669  002526  6AF8               	clrf	tblptru,c
  7670  002528                     	endif
  7671  002528                     	if	0	;tblptru may be non-zero
  7672  002528                     	endif
  7673  002528  0008               	tblrd		*
  7674  00252A  50F5               	movf	tablat,w,c
  7675  00252C  0012               	return	
  7676  00252E                     l11490:
  7677                           
  7678                           ;fat16.c: 714: return "MSDOS5.0"[3];
  7679  00252E  0EF4               	movlw	low (STR_1+3)
  7680  002530  6EF6               	movwf	tblptrl,c
  7681  002532  0E8F               	movlw	high (STR_1+3)
  7682  002534  6EF7               	movwf	tblptrh,c
  7683  002536                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7684  002536  6AF8               	clrf	tblptru,c
  7685  002538                     	endif
  7686  002538                     	if	0	;tblptru may be non-zero
  7687  002538                     	endif
  7688  002538  0008               	tblrd		*
  7689  00253A  50F5               	movf	tablat,w,c
  7690  00253C  0012               	return	
  7691  00253E                     l11494:
  7692                           
  7693                           ;fat16.c: 716: return "MSDOS5.0"[4];
  7694  00253E  0EF5               	movlw	low (STR_1+4)
  7695  002540  6EF6               	movwf	tblptrl,c
  7696  002542  0E8F               	movlw	high (STR_1+4)
  7697  002544  6EF7               	movwf	tblptrh,c
  7698  002546                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7699  002546  6AF8               	clrf	tblptru,c
  7700  002548                     	endif
  7701  002548                     	if	0	;tblptru may be non-zero
  7702  002548                     	endif
  7703  002548  0008               	tblrd		*
  7704  00254A  50F5               	movf	tablat,w,c
  7705  00254C  0012               	return	
  7706  00254E                     l11498:
  7707                           
  7708                           ;fat16.c: 718: return "MSDOS5.0"[5];
  7709  00254E  0EF6               	movlw	low (STR_1+5)
  7710  002550  6EF6               	movwf	tblptrl,c
  7711  002552  0E8F               	movlw	high (STR_1+5)
  7712  002554  6EF7               	movwf	tblptrh,c
  7713  002556                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7714  002556  6AF8               	clrf	tblptru,c
  7715  002558                     	endif
  7716  002558                     	if	0	;tblptru may be non-zero
  7717  002558                     	endif
  7718  002558  0008               	tblrd		*
  7719  00255A  50F5               	movf	tablat,w,c
  7720  00255C  0012               	return	
  7721  00255E                     l11502:
  7722                           
  7723                           ;fat16.c: 720: return "MSDOS5.0"[6];
  7724  00255E  0EF7               	movlw	low (STR_1+6)
  7725  002560  6EF6               	movwf	tblptrl,c
  7726  002562  0E8F               	movlw	high (STR_1+6)
  7727  002564  6EF7               	movwf	tblptrh,c
  7728  002566                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7729  002566  6AF8               	clrf	tblptru,c
  7730  002568                     	endif
  7731  002568                     	if	0	;tblptru may be non-zero
  7732  002568                     	endif
  7733  002568  0008               	tblrd		*
  7734  00256A  50F5               	movf	tablat,w,c
  7735  00256C  0012               	return	
  7736  00256E                     l11506:
  7737                           
  7738                           ;fat16.c: 722: return "MSDOS5.0"[7];
  7739  00256E  0EF8               	movlw	low (STR_1+7)
  7740  002570  6EF6               	movwf	tblptrl,c
  7741  002572  0E8F               	movlw	high (STR_1+7)
  7742  002574  6EF7               	movwf	tblptrh,c
  7743  002576                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7744  002576  6AF8               	clrf	tblptru,c
  7745  002578                     	endif
  7746  002578                     	if	0	;tblptru may be non-zero
  7747  002578                     	endif
  7748  002578  0008               	tblrd		*
  7749  00257A  50F5               	movf	tablat,w,c
  7750  00257C  0012               	return	
  7751  00257E                     l11510:
  7752                           
  7753                           ;fat16.c: 724: return ((unsigned char)((((uint16_t)512))&0xFF));
  7754  00257E  0E00               	movlw	0
  7755  002580  0012               	return	
  7756  002582                     l11514:
  7757                           
  7758                           ;fat16.c: 726: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  7759  002582  0E02               	movlw	2
  7760  002584  0012               	return	
  7761  002586                     l11518:
  7762                           
  7763                           ;fat16.c: 728: return 1;
  7764  002586  0E01               	movlw	1
  7765  002588  0012               	return	
  7766  00258A                     l11522:
  7767                           
  7768                           ;fat16.c: 730: return ((unsigned char)((((uint16_t)1))&0xFF));
  7769  00258A  0E01               	movlw	1
  7770  00258C  0012               	return	
  7771  00258E                     l11526:
  7772                           
  7773                           ;fat16.c: 733: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  7774  00258E  0E00               	movlw	0
  7775  002590  0012               	return	
  7776  002592                     l11530:
  7777                           
  7778                           ;fat16.c: 736: return 1;
  7779  002592  0E01               	movlw	1
  7780  002594  0012               	return	
  7781  002596                     l11534:
  7782                           
  7783                           ;fat16.c: 738: return ((unsigned char)((((uint16_t)64))&0xFF));
  7784  002596  0E40               	movlw	64
  7785  002598  0012               	return	
  7786  00259A                     l11538:
  7787                           
  7788                           ;fat16.c: 741: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  7789  00259A  0E00               	movlw	0
  7790  00259C  0012               	return	
  7791  00259E                     l11542:
  7792                           
  7793                           ;fat16.c: 744: return ((unsigned char)((((uint16_t)4114))&0xFF));
  7794  00259E  0E12               	movlw	18
  7795  0025A0  0012               	return	
  7796  0025A2                     l11546:
  7797                           
  7798                           ;fat16.c: 747: return ((unsigned char)(((((uint16_t)4114))>>8)&0xFF));
  7799  0025A2  0E10               	movlw	16
  7800  0025A4  0012               	return	
  7801  0025A6                     l11550:
  7802                           
  7803                           ;fat16.c: 750: return 0XF8;
  7804  0025A6  0EF8               	movlw	248
  7805  0025A8  0012               	return	
  7806  0025AA                     l11554:
  7807                           
  7808                           ;fat16.c: 752: return ((unsigned char)((((uint16_t)16))&0xFF));
  7809  0025AA  0E10               	movlw	16
  7810  0025AC  0012               	return	
  7811  0025AE                     l11558:
  7812                           
  7813                           ;fat16.c: 755: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  7814  0025AE  0E00               	movlw	0
  7815  0025B0  0012               	return	
  7816  0025B2                     l11562:
  7817                           
  7818                           ;fat16.c: 758: return ((unsigned char)((((uint16_t)63))&0xFF));
  7819  0025B2  0E3F               	movlw	63
  7820  0025B4  0012               	return	
  7821  0025B6                     l11566:
  7822                           
  7823                           ;fat16.c: 761: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  7824  0025B6  0E00               	movlw	0
  7825  0025B8  0012               	return	
  7826  0025BA                     l11570:
  7827                           
  7828                           ;fat16.c: 764: return ((unsigned char)((((uint16_t)16))&0xFF));
  7829  0025BA  0E10               	movlw	16
  7830  0025BC  0012               	return	
  7831  0025BE                     l11574:
  7832                           
  7833                           ;fat16.c: 767: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  7834  0025BE  0E00               	movlw	0
  7835  0025C0  0012               	return	
  7836  0025C2                     l11578:
  7837                           
  7838                           ;fat16.c: 770: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xFF
      +                          ));
  7839  0025C2  0E00               	movlw	0
  7840  0025C4  0012               	return	
  7841  0025C6                     l11582:
  7842                           
  7843                           ;fat16.c: 773: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8)
      +                          &0xFF));
  7844  0025C6  0E00               	movlw	0
  7845  0025C8  0012               	return	
  7846  0025CA                     l11586:
  7847                           
  7848                           ;fat16.c: 776: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF))
      +                          )&0xFF));
  7849  0025CA  0E00               	movlw	0
  7850  0025CC  0012               	return	
  7851  0025CE                     l11590:
  7852                           
  7853                           ;fat16.c: 779: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  7854  0025CE  0E00               	movlw	0
  7855  0025D0  0012               	return	
  7856  0025D2                     l11594:
  7857                           
  7858                           ;fat16.c: 782: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  7859  0025D2  0E01               	movlw	1
  7860  0025D4  0012               	return	
  7861  0025D6                     l11598:
  7862                           
  7863                           ;fat16.c: 785: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  7864  0025D6  0E00               	movlw	0
  7865  0025D8  0012               	return	
  7866  0025DA                     l11602:
  7867                           
  7868                           ;fat16.c: 788: return ((unsigned char)((((unsigned short)((((uint32_t)((16*1)+1)))&0xFFF
      +                          F)))&0xFF));
  7869  0025DA  0E11               	movlw	17
  7870  0025DC  0012               	return	
  7871  0025DE                     l11606:
  7872                           
  7873                           ;fat16.c: 791: return ((unsigned char)(((((unsigned short)((((uint32_t)((16*1)+1)))&0xFF
      +                          FF)))>>8)&0xFF));
  7874  0025DE  0E00               	movlw	0
  7875  0025E0  0012               	return	
  7876  0025E2                     l11610:
  7877                           
  7878                           ;fat16.c: 794: return ((unsigned char)((((unsigned short)(((((uint32_t)((16*1)+1)))>>16)
      +                          &0xFFFF)))&0xFF));
  7879  0025E2  0E11               	movlw	17
  7880  0025E4  0012               	return	
  7881  0025E6                     l11614:
  7882                           
  7883                           ;fat16.c: 797: return ((unsigned char)(((((unsigned short)(((((uint32_t)((16*1)+1)))>>16
      +                          )&0xFFFF)))>>8)&0xFF));
  7884  0025E6  0E00               	movlw	0
  7885  0025E8  0012               	return	
  7886  0025EA                     l11618:
  7887                           
  7888                           ;fat16.c: 800: return 'F';
  7889  0025EA  0E46               	movlw	70
  7890  0025EC  0012               	return	
  7891  0025EE                     l11622:
  7892                           
  7893                           ;fat16.c: 802: return 'A';
  7894  0025EE  0E41               	movlw	65
  7895  0025F0  0012               	return	
  7896  0025F2                     l11626:
  7897                           
  7898                           ;fat16.c: 804: return 'T';
  7899  0025F2  0E54               	movlw	84
  7900  0025F4  0012               	return	
  7901  0025F6                     l11630:
  7902                           
  7903                           ;fat16.c: 806: return '1';
  7904  0025F6  0E31               	movlw	49
  7905  0025F8  0012               	return	
  7906  0025FA                     l11634:
  7907                           
  7908                           ;fat16.c: 808: return '6';
  7909  0025FA  0E36               	movlw	54
  7910  0025FC  0012               	return	
  7911  0025FE                     l11638:
  7912                           
  7913                           ;fat16.c: 810: return ' ';
  7914  0025FE  0E20               	movlw	32
  7915  002600  0012               	return	
  7916  002602                     l11642:
  7917                           
  7918                           ;fat16.c: 812: return ' ';
  7919  002602  0E20               	movlw	32
  7920  002604  0012               	return	
  7921  002606                     l11646:
  7922                           
  7923                           ;fat16.c: 814: return ' ';
  7924  002606  0E20               	movlw	32
  7925  002608  0012               	return	
  7926  00260A                     l11650:
  7927                           
  7928                           ;fat16.c: 816: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  7929  00260A  0E55               	movlw	85
  7930  00260C  0012               	return	
  7931  00260E                     l11654:
  7932                           
  7933                           ;fat16.c: 819: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  7934  00260E  0EAA               	movlw	170
  7935  002610  0012               	return	
  7936  002612                     l11658:
  7937                           
  7938                           ;fat16.c: 822: return 0X00;
  7939  002612  0E00               	movlw	0
  7940                           
  7941                           ;fat16.c: 823: }
  7942  002614  0012               	return	
  7943  002616                     l11664:
  7944  002616  C001  F003         	movff	__get_fbr@idx,??__get_fbr
  7945  00261A  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
  7946                           
  7947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7948                           ; Switch size 1, requested type "space"
  7949                           ; Number of cases is 2, Range of values is 0 to 1
  7950                           ; switch strategies available:
  7951                           ; Name         Instructions Cycles
  7952                           ; simple_byte            7     4 (average)
  7953                           ;	Chosen strategy is simple_byte
  7954  00261E  5004               	movf	??__get_fbr+1,w,c
  7955  002620  0A00               	xorlw	0	; case 0
  7956  002622  B4D8               	btfsc	status,2,c
  7957  002624  D004               	goto	l15478
  7958  002626  0A01               	xorlw	1	; case 1
  7959  002628  B4D8               	btfsc	status,2,c
  7960  00262A  D08D               	goto	l15480
  7961  00262C  D7F2               	goto	l11658
  7962  00262E                     l15478:
  7963                           
  7964                           ; Switch size 1, requested type "space"
  7965                           ; Number of cases is 46, Range of values is 0 to 61
  7966                           ; switch strategies available:
  7967                           ; Name         Instructions Cycles
  7968                           ; simple_byte          139    70 (average)
  7969                           ;	Chosen strategy is simple_byte
  7970  00262E  5003               	movf	??__get_fbr,w,c
  7971  002630  0A00               	xorlw	0	; case 0
  7972  002632  B4D8               	btfsc	status,2,c
  7973  002634  D75D               	goto	l11466
  7974  002636  0A01               	xorlw	1	; case 1
  7975  002638  B4D8               	btfsc	status,2,c
  7976  00263A  D75C               	goto	l11470
  7977  00263C  0A03               	xorlw	3	; case 2
  7978  00263E  B4D8               	btfsc	status,2,c
  7979  002640  D75B               	goto	l11474
  7980  002642  0A01               	xorlw	1	; case 3
  7981  002644  B4D8               	btfsc	status,2,c
  7982  002646  D75A               	goto	l11478
  7983  002648  0A07               	xorlw	7	; case 4
  7984  00264A  B4D8               	btfsc	status,2,c
  7985  00264C  D760               	goto	l11482
  7986  00264E  0A01               	xorlw	1	; case 5
  7987  002650  B4D8               	btfsc	status,2,c
  7988  002652  D765               	goto	l11486
  7989  002654  0A03               	xorlw	3	; case 6
  7990  002656  B4D8               	btfsc	status,2,c
  7991  002658  D76A               	goto	l11490
  7992  00265A  0A01               	xorlw	1	; case 7
  7993  00265C  B4D8               	btfsc	status,2,c
  7994  00265E  D76F               	goto	l11494
  7995  002660  0A0F               	xorlw	15	; case 8
  7996  002662  B4D8               	btfsc	status,2,c
  7997  002664  D774               	goto	l11498
  7998  002666  0A01               	xorlw	1	; case 9
  7999  002668  B4D8               	btfsc	status,2,c
  8000  00266A  D779               	goto	l11502
  8001  00266C  0A03               	xorlw	3	; case 10
  8002  00266E  B4D8               	btfsc	status,2,c
  8003  002670  D77E               	goto	l11506
  8004  002672  0A01               	xorlw	1	; case 11
  8005  002674  B4D8               	btfsc	status,2,c
  8006  002676  D783               	goto	l11510
  8007  002678  0A07               	xorlw	7	; case 12
  8008  00267A  B4D8               	btfsc	status,2,c
  8009  00267C  D782               	goto	l11514
  8010  00267E  0A01               	xorlw	1	; case 13
  8011  002680  B4D8               	btfsc	status,2,c
  8012  002682  D781               	goto	l11518
  8013  002684  0A03               	xorlw	3	; case 14
  8014  002686  B4D8               	btfsc	status,2,c
  8015  002688  D780               	goto	l11522
  8016  00268A  0A01               	xorlw	1	; case 15
  8017  00268C  B4D8               	btfsc	status,2,c
  8018  00268E  D77F               	goto	l11526
  8019  002690  0A1F               	xorlw	31	; case 16
  8020  002692  B4D8               	btfsc	status,2,c
  8021  002694  D77E               	goto	l11530
  8022  002696  0A01               	xorlw	1	; case 17
  8023  002698  B4D8               	btfsc	status,2,c
  8024  00269A  D77D               	goto	l11534
  8025  00269C  0A03               	xorlw	3	; case 18
  8026  00269E  B4D8               	btfsc	status,2,c
  8027  0026A0  D77C               	goto	l11538
  8028  0026A2  0A01               	xorlw	1	; case 19
  8029  0026A4  B4D8               	btfsc	status,2,c
  8030  0026A6  D77B               	goto	l11542
  8031  0026A8  0A07               	xorlw	7	; case 20
  8032  0026AA  B4D8               	btfsc	status,2,c
  8033  0026AC  D77A               	goto	l11546
  8034  0026AE  0A01               	xorlw	1	; case 21
  8035  0026B0  B4D8               	btfsc	status,2,c
  8036  0026B2  D779               	goto	l11550
  8037  0026B4  0A03               	xorlw	3	; case 22
  8038  0026B6  B4D8               	btfsc	status,2,c
  8039  0026B8  D778               	goto	l11554
  8040  0026BA  0A01               	xorlw	1	; case 23
  8041  0026BC  B4D8               	btfsc	status,2,c
  8042  0026BE  D777               	goto	l11558
  8043  0026C0  0A0F               	xorlw	15	; case 24
  8044  0026C2  B4D8               	btfsc	status,2,c
  8045  0026C4  D776               	goto	l11562
  8046  0026C6  0A01               	xorlw	1	; case 25
  8047  0026C8  B4D8               	btfsc	status,2,c
  8048  0026CA  D775               	goto	l11566
  8049  0026CC  0A03               	xorlw	3	; case 26
  8050  0026CE  B4D8               	btfsc	status,2,c
  8051  0026D0  D774               	goto	l11570
  8052  0026D2  0A01               	xorlw	1	; case 27
  8053  0026D4  B4D8               	btfsc	status,2,c
  8054  0026D6  D773               	goto	l11574
  8055  0026D8  0A07               	xorlw	7	; case 28
  8056  0026DA  B4D8               	btfsc	status,2,c
  8057  0026DC  D772               	goto	l11578
  8058  0026DE  0A01               	xorlw	1	; case 29
  8059  0026E0  B4D8               	btfsc	status,2,c
  8060  0026E2  D771               	goto	l11582
  8061  0026E4  0A03               	xorlw	3	; case 30
  8062  0026E6  B4D8               	btfsc	status,2,c
  8063  0026E8  D770               	goto	l11586
  8064  0026EA  0A01               	xorlw	1	; case 31
  8065  0026EC  B4D8               	btfsc	status,2,c
  8066  0026EE  D76F               	goto	l11590
  8067  0026F0  0A37               	xorlw	55	; case 40
  8068  0026F2  B4D8               	btfsc	status,2,c
  8069  0026F4  D76E               	goto	l11594
  8070  0026F6  0A01               	xorlw	1	; case 41
  8071  0026F8  B4D8               	btfsc	status,2,c
  8072  0026FA  D76D               	goto	l11598
  8073  0026FC  0A05               	xorlw	5	; case 44
  8074  0026FE  B4D8               	btfsc	status,2,c
  8075  002700  D76C               	goto	l11602
  8076  002702  0A01               	xorlw	1	; case 45
  8077  002704  B4D8               	btfsc	status,2,c
  8078  002706  D76B               	goto	l11606
  8079  002708  0A03               	xorlw	3	; case 46
  8080  00270A  B4D8               	btfsc	status,2,c
  8081  00270C  D76A               	goto	l11610
  8082  00270E  0A01               	xorlw	1	; case 47
  8083  002710  B4D8               	btfsc	status,2,c
  8084  002712  D769               	goto	l11614
  8085  002714  0A19               	xorlw	25	; case 54
  8086  002716  B4D8               	btfsc	status,2,c
  8087  002718  D768               	goto	l11618
  8088  00271A  0A01               	xorlw	1	; case 55
  8089  00271C  B4D8               	btfsc	status,2,c
  8090  00271E  D767               	goto	l11622
  8091  002720  0A0F               	xorlw	15	; case 56
  8092  002722  B4D8               	btfsc	status,2,c
  8093  002724  D766               	goto	l11626
  8094  002726  0A01               	xorlw	1	; case 57
  8095  002728  B4D8               	btfsc	status,2,c
  8096  00272A  D765               	goto	l11630
  8097  00272C  0A03               	xorlw	3	; case 58
  8098  00272E  B4D8               	btfsc	status,2,c
  8099  002730  D764               	goto	l11634
  8100  002732  0A01               	xorlw	1	; case 59
  8101  002734  B4D8               	btfsc	status,2,c
  8102  002736  D763               	goto	l11638
  8103  002738  0A07               	xorlw	7	; case 60
  8104  00273A  B4D8               	btfsc	status,2,c
  8105  00273C  D762               	goto	l11642
  8106  00273E  0A01               	xorlw	1	; case 61
  8107  002740  B4D8               	btfsc	status,2,c
  8108  002742  D761               	goto	l11646
  8109  002744  D766               	goto	l11658
  8110  002746                     l15480:
  8111                           
  8112                           ; Switch size 1, requested type "space"
  8113                           ; Number of cases is 2, Range of values is 254 to 255
  8114                           ; switch strategies available:
  8115                           ; Name         Instructions Cycles
  8116                           ; simple_byte            7     4 (average)
  8117                           ;	Chosen strategy is simple_byte
  8118  002746  5003               	movf	??__get_fbr,w,c
  8119  002748  0AFE               	xorlw	254	; case 254
  8120  00274A  B4D8               	btfsc	status,2,c
  8121  00274C  D75E               	goto	l11650
  8122  00274E  0A01               	xorlw	1	; case 255
  8123  002750  B4D8               	btfsc	status,2,c
  8124  002752  D75D               	goto	l11654
  8125  002754  D75E               	goto	l11658
  8126  002756                     __end_of__get_fbr:
  8127                           	opt stack 0
  8128                           tblptru	equ	0xFF8
  8129                           tblptrh	equ	0xFF7
  8130                           tblptrl	equ	0xFF6
  8131                           tablat	equ	0xFF5
  8132                           prodh	equ	0xFF4
  8133                           prodl	equ	0xFF3
  8134                           intcon	equ	0xFF2
  8135                           intcon3	equ	0xFF0
  8136                           postinc0	equ	0xFEE
  8137                           wreg	equ	0xFE8
  8138                           postdec1	equ	0xFE5
  8139                           plusw1	equ	0xFE3
  8140                           fsr1h	equ	0xFE2
  8141                           fsr1l	equ	0xFE1
  8142                           indf2	equ	0xFDF
  8143                           postinc2	equ	0xFDE
  8144                           postdec2	equ	0xFDD
  8145                           plusw2	equ	0xFDB
  8146                           fsr2h	equ	0xFDA
  8147                           fsr2l	equ	0xFD9
  8148                           status	equ	0xFD8
  8149                           
  8150 ;; *************** function __get_fat *****************
  8151 ;; Defined at:
  8152 ;;		line 826 in file "fat16.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  idx             2    0[COMRAM] unsigned int 
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;		None
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  1    wreg      unsigned char 
  8159 ;; Registers used:
  8160 ;;		wreg, status,2, status,0
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8169 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8170 ;;Total ram usage:        4 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; This function calls:
  8173 ;;		Nothing
  8174 ;; This function is called by:
  8175 ;;		_fat_format
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           	psect	text26
  8180  0069BA                     __ptext26:
  8181                           	opt stack 0
  8182  0069BA                     __get_fat:
  8183                           	opt stack 27
  8184                           
  8185                           ;fat16.c: 828: switch (idx)
  8186                           
  8187                           ;incstack = 0
  8188  0069BA  D00E               	goto	l11706
  8189  0069BC                     l11676:
  8190                           
  8191                           ;fat16.c: 832: return 0xF8;
  8192  0069BC  0EF8               	movlw	248
  8193  0069BE  0012               	return	
  8194  0069C0                     l11680:
  8195                           
  8196                           ;fat16.c: 834: return 0xFF;
  8197  0069C0  0EFF               	movlw	255
  8198  0069C2  0012               	return	
  8199  0069C4                     l11684:
  8200                           
  8201                           ;fat16.c: 836: return 0xFF;
  8202  0069C4  0EFF               	movlw	255
  8203  0069C6  0012               	return	
  8204  0069C8                     l11688:
  8205                           
  8206                           ;fat16.c: 838: return 0xFF;
  8207  0069C8  0EFF               	movlw	255
  8208  0069CA  0012               	return	
  8209  0069CC                     l11692:
  8210                           
  8211                           ;fat16.c: 841: return 0xFF;
  8212  0069CC  0EFF               	movlw	255
  8213  0069CE  0012               	return	
  8214  0069D0                     l11696:
  8215                           
  8216                           ;fat16.c: 843: return 0xFF;
  8217  0069D0  0EFF               	movlw	255
  8218  0069D2  0012               	return	
  8219  0069D4                     l11700:
  8220                           
  8221                           ;fat16.c: 845: return 0X00;
  8222  0069D4  0E00               	movlw	0
  8223                           
  8224                           ;fat16.c: 846: }
  8225  0069D6  0012               	return	
  8226  0069D8                     l11706:
  8227  0069D8  C001  F003         	movff	__get_fat@idx,??__get_fat
  8228  0069DC  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
  8229                           
  8230                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8231                           ; Switch size 1, requested type "space"
  8232                           ; Number of cases is 1, Range of values is 0 to 0
  8233                           ; switch strategies available:
  8234                           ; Name         Instructions Cycles
  8235                           ; simple_byte            4     3 (average)
  8236                           ;	Chosen strategy is simple_byte
  8237  0069E0  5004               	movf	??__get_fat+1,w,c
  8238  0069E2  0A00               	xorlw	0	; case 0
  8239  0069E4  A4D8               	btfss	status,2,c
  8240  0069E6  D7F6               	goto	l11700
  8241                           
  8242                           ; Switch size 1, requested type "space"
  8243                           ; Number of cases is 6, Range of values is 0 to 5
  8244                           ; switch strategies available:
  8245                           ; Name         Instructions Cycles
  8246                           ; simple_byte           19    10 (average)
  8247                           ;	Chosen strategy is simple_byte
  8248  0069E8  5003               	movf	??__get_fat,w,c
  8249  0069EA  0A00               	xorlw	0	; case 0
  8250  0069EC  B4D8               	btfsc	status,2,c
  8251  0069EE  D7E6               	goto	l11676
  8252  0069F0  0A01               	xorlw	1	; case 1
  8253  0069F2  B4D8               	btfsc	status,2,c
  8254  0069F4  D7E5               	goto	l11680
  8255  0069F6  0A03               	xorlw	3	; case 2
  8256  0069F8  B4D8               	btfsc	status,2,c
  8257  0069FA  D7E4               	goto	l11684
  8258  0069FC  0A01               	xorlw	1	; case 3
  8259  0069FE  B4D8               	btfsc	status,2,c
  8260  006A00  D7E3               	goto	l11688
  8261  006A02  0A07               	xorlw	7	; case 4
  8262  006A04  B4D8               	btfsc	status,2,c
  8263  006A06  D7E2               	goto	l11692
  8264  006A08  0A01               	xorlw	1	; case 5
  8265  006A0A  B4D8               	btfsc	status,2,c
  8266  006A0C  D7E1               	goto	l11696
  8267  006A0E  D7E2               	goto	l11700
  8268  006A10                     __end_of__get_fat:
  8269                           	opt stack 0
  8270                           tblptru	equ	0xFF8
  8271                           tblptrh	equ	0xFF7
  8272                           tblptrl	equ	0xFF6
  8273                           tablat	equ	0xFF5
  8274                           prodh	equ	0xFF4
  8275                           prodl	equ	0xFF3
  8276                           intcon	equ	0xFF2
  8277                           intcon3	equ	0xFF0
  8278                           postinc0	equ	0xFEE
  8279                           wreg	equ	0xFE8
  8280                           postdec1	equ	0xFE5
  8281                           plusw1	equ	0xFE3
  8282                           fsr1h	equ	0xFE2
  8283                           fsr1l	equ	0xFE1
  8284                           indf2	equ	0xFDF
  8285                           postinc2	equ	0xFDE
  8286                           postdec2	equ	0xFDD
  8287                           plusw2	equ	0xFDB
  8288                           fsr2h	equ	0xFDA
  8289                           fsr2l	equ	0xFD9
  8290                           status	equ	0xFD8
  8291                           
  8292 ;; *************** function __get_data *****************
  8293 ;; Defined at:
  8294 ;;		line 926 in file "fat16.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;  idx             2    0[COMRAM] unsigned int 
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;		None
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  1    wreg      unsigned char 
  8301 ;; Registers used:
  8302 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8312 ;;Total ram usage:        2 bytes
  8313 ;; Hardware stack levels used:    1
  8314 ;; This function calls:
  8315 ;;		Nothing
  8316 ;; This function is called by:
  8317 ;;		_fat_format
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320                           
  8321                           	psect	text27
  8322  00756C                     __ptext27:
  8323                           	opt stack 0
  8324  00756C                     __get_data:
  8325                           	opt stack 27
  8326                           
  8327                           ;fat16.c: 928: if (idx < 12)
  8328                           
  8329                           ;incstack = 0
  8330  00756C  5002               	movf	__get_data@idx+1,w,c
  8331  00756E  E110               	bnz	l11842
  8332  007570  0E0C               	movlw	12
  8333  007572  5C01               	subwf	__get_data@idx,w,c
  8334  007574  B0D8               	btfsc	status,0,c
  8335  007576  D00C               	goto	l11842
  8336                           
  8337                           ;fat16.c: 929: {
  8338                           ;fat16.c: 930: return "Hello World!"[idx];
  8339  007578  0ECF               	movlw	low STR_12
  8340  00757A  2401               	addwf	__get_data@idx,w,c
  8341  00757C  6EF6               	movwf	tblptrl,c
  8342  00757E  0E8F               	movlw	high STR_12
  8343  007580  2002               	addwfc	__get_data@idx+1,w,c
  8344  007582  6EF7               	movwf	tblptrh,c
  8345  007584                     	if	1	;There are 3 active tblptr bytes
  8346  007584  6AF8               	clrf	tblptru,c
  8347  007586  0E00               	movlw	low (__mediumconst shr (0+16))
  8348  007588  22F8               	addwfc	tblptru,f,c
  8349  00758A                     	endif
  8350  00758A  0008               	tblrd		*
  8351  00758C  50F5               	movf	tablat,w,c
  8352  00758E  0012               	return	
  8353  007590                     l11842:
  8354                           
  8355                           ;fat16.c: 931: }
  8356                           ;fat16.c: 932: return 0X00;
  8357  007590  0E00               	movlw	0
  8358  007592  0012               	return	
  8359  007594                     __end_of__get_data:
  8360                           	opt stack 0
  8361                           tblptru	equ	0xFF8
  8362                           tblptrh	equ	0xFF7
  8363                           tblptrl	equ	0xFF6
  8364                           tablat	equ	0xFF5
  8365                           prodh	equ	0xFF4
  8366                           prodl	equ	0xFF3
  8367                           intcon	equ	0xFF2
  8368                           intcon3	equ	0xFF0
  8369                           postinc0	equ	0xFEE
  8370                           wreg	equ	0xFE8
  8371                           postdec1	equ	0xFE5
  8372                           plusw1	equ	0xFE3
  8373                           fsr1h	equ	0xFE2
  8374                           fsr1l	equ	0xFE1
  8375                           indf2	equ	0xFDF
  8376                           postinc2	equ	0xFDE
  8377                           postdec2	equ	0xFDD
  8378                           plusw2	equ	0xFDB
  8379                           fsr2h	equ	0xFDA
  8380                           fsr2l	equ	0xFD9
  8381                           status	equ	0xFD8
  8382                           
  8383 ;; *************** function __system_timer0_init *****************
  8384 ;; Defined at:
  8385 ;;		line 147 in file "os.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg, status,2
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8403 ;;Total ram usage:        0 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		_system_init
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text28
  8413  007700                     __ptext28:
  8414                           	opt stack 0
  8415  007700                     __system_timer0_init:
  8416                           	opt stack 29
  8417                           
  8418                           ;os.c: 150: T0CONbits.T0CS = 0;
  8419                           
  8420                           ;incstack = 0
  8421  007700  9AD5               	bcf	4053,5,c	;volatile
  8422                           
  8423                           ;os.c: 152: T0CONbits.T08BIT = 0;
  8424  007702  9CD5               	bcf	4053,6,c	;volatile
  8425                           
  8426                           ;os.c: 154: T0CONbits.T0PS2 = 0;
  8427  007704  94D5               	bcf	4053,2,c	;volatile
  8428                           
  8429                           ;os.c: 155: T0CONbits.T0PS1 = 1;
  8430  007706  82D5               	bsf	4053,1,c	;volatile
  8431                           
  8432                           ;os.c: 156: T0CONbits.T0PS0 = 0;
  8433  007708  90D5               	bcf	4053,0,c	;volatile
  8434                           
  8435                           ;os.c: 158: T0CONbits.PSA = 0;
  8436  00770A  96D5               	bcf	4053,3,c	;volatile
  8437                           
  8438                           ;os.c: 160: TMR0H = 0xD1;
  8439  00770C  0ED1               	movlw	209
  8440  00770E  6ED7               	movwf	4055,c	;volatile
  8441                           
  8442                           ;os.c: 161: TMR0L = 0x20;
  8443  007710  0E20               	movlw	32
  8444  007712  6ED6               	movwf	4054,c	;volatile
  8445                           
  8446                           ;os.c: 163: T0CONbits.TMR0ON = 1;
  8447  007714  8ED5               	bsf	4053,7,c	;volatile
  8448                           
  8449                           ;os.c: 167: INTCONbits.TMR0IF = 0;
  8450  007716  94F2               	bcf	intcon,2,c	;volatile
  8451                           
  8452                           ;os.c: 172: os.timeSlot = 0;
  8453  007718  0E00               	movlw	0
  8454  00771A  0100               	movlb	0	; () banked
  8455  00771C  6FE4               	movwf	(_os+2)& (0+255),b	;volatile
  8456                           
  8457                           ; BSR set to: 0
  8458  00771E  0012               	return		;funcret
  8459  007720                     __end_of__system_timer0_init:
  8460                           	opt stack 0
  8461                           tblptru	equ	0xFF8
  8462                           tblptrh	equ	0xFF7
  8463                           tblptrl	equ	0xFF6
  8464                           tablat	equ	0xFF5
  8465                           prodh	equ	0xFF4
  8466                           prodl	equ	0xFF3
  8467                           intcon	equ	0xFF2
  8468                           intcon3	equ	0xFF0
  8469                           postinc0	equ	0xFEE
  8470                           wreg	equ	0xFE8
  8471                           postdec1	equ	0xFE5
  8472                           plusw1	equ	0xFE3
  8473                           fsr1h	equ	0xFE2
  8474                           fsr1l	equ	0xFE1
  8475                           indf2	equ	0xFDF
  8476                           postinc2	equ	0xFDE
  8477                           postdec2	equ	0xFDD
  8478                           plusw2	equ	0xFDB
  8479                           fsr2h	equ	0xFDA
  8480                           fsr2l	equ	0xFD9
  8481                           status	equ	0xFD8
  8482                           
  8483 ;; *************** function __system_encoder_init *****************
  8484 ;; Defined at:
  8485 ;;		line 97 in file "os.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;		None
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;		None
  8490 ;; Return value:  Size  Location     Type
  8491 ;;                  1    wreg      void 
  8492 ;; Registers used:
  8493 ;;		wreg, status,2
  8494 ;; Tracked objects:
  8495 ;;		On entry : 0/0
  8496 ;;		On exit  : 0/0
  8497 ;;		Unchanged: 0/0
  8498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8503 ;;Total ram usage:        0 bytes
  8504 ;; Hardware stack levels used:    1
  8505 ;; This function calls:
  8506 ;;		Nothing
  8507 ;; This function is called by:
  8508 ;;		_system_init
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text29
  8513  006FDA                     __ptext29:
  8514                           	opt stack 0
  8515  006FDA                     __system_encoder_init:
  8516                           	opt stack 29
  8517                           
  8518                           ;os.c: 99: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8519                           
  8520                           ; BSR set to: 0
  8521                           ;incstack = 0
  8522  006FDA  0E55               	movlw	85
  8523  006FDC  6EA7               	movwf	4007,c	;volatile
  8524  006FDE  0EAA               	movlw	170
  8525  006FE0  6EA7               	movwf	4007,c	;volatile
  8526  006FE2  010E               	movlb	14	; () banked
  8527  006FE4  91BF               	bcf	191,0,b	;volatile
  8528                           
  8529                           ;os.c: 100: RPINR1 = 0;
  8530  006FE6  0E00               	movlw	0
  8531  006FE8  010E               	movlb	14	; () banked
  8532  006FEA  6FE1               	movwf	225,b	;volatile
  8533                           
  8534                           ;os.c: 101: RPINR3 = 9;
  8535  006FEC  0E09               	movlw	9
  8536  006FEE  010E               	movlb	14	; () banked
  8537  006FF0  6FE3               	movwf	227,b	;volatile
  8538                           
  8539                           ;os.c: 102: RPINR2 = 10;
  8540  006FF2  0E0A               	movlw	10
  8541  006FF4  010E               	movlb	14	; () banked
  8542  006FF6  6FE2               	movwf	226,b	;volatile
  8543                           
  8544                           ;os.c: 103: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  8545  006FF8  0E55               	movlw	85
  8546  006FFA  6EA7               	movwf	4007,c	;volatile
  8547  006FFC  0EAA               	movlw	170
  8548  006FFE  6EA7               	movwf	4007,c	;volatile
  8549                           
  8550                           ; BSR set to: 14
  8551  007000  010E               	movlb	14	; () banked
  8552  007002  91BF               	bcf	191,0,b	;volatile
  8553                           
  8554                           ; BSR set to: 14
  8555                           ;os.c: 111: INTCON2bits.INTEDG1 = 0;
  8556  007004  9AF1               	bcf	intcon2,5,c	;volatile
  8557                           
  8558                           ; BSR set to: 14
  8559                           ;os.c: 112: INTCON3bits.INT1IF = 0;
  8560  007006  90F0               	bcf	intcon3,0,c	;volatile
  8561                           
  8562                           ; BSR set to: 14
  8563                           ;os.c: 114: INTCON2bits.INTEDG2 = 1;
  8564  007008  88F1               	bsf	intcon2,4,c	;volatile
  8565                           
  8566                           ; BSR set to: 14
  8567                           ;os.c: 115: INTCON3bits.INT2IF = 0;
  8568  00700A  92F0               	bcf	intcon3,1,c	;volatile
  8569                           
  8570                           ; BSR set to: 14
  8571                           ;os.c: 117: INTCON2bits.INTEDG3 = 1;
  8572  00700C  86F1               	bsf	intcon2,3,c	;volatile
  8573                           
  8574                           ; BSR set to: 14
  8575                           ;os.c: 118: INTCON3bits.INT3IF = 0;
  8576  00700E  94F0               	bcf	intcon3,2,c	;volatile
  8577                           
  8578                           ;os.c: 120: os.encoderCount = 0;
  8579  007010  0E00               	movlw	0
  8580  007012  0100               	movlb	0	; () banked
  8581  007014  6FE2               	movwf	_os& (0+255),b	;volatile
  8582                           
  8583                           ;os.c: 121: os.buttonCount = 0;
  8584  007016  0E00               	movlw	0
  8585  007018  0100               	movlb	0	; () banked
  8586  00701A  6FE3               	movwf	(_os+1)& (0+255),b	;volatile
  8587                           
  8588                           ; BSR set to: 0
  8589  00701C  0012               	return		;funcret
  8590  00701E                     __end_of__system_encoder_init:
  8591                           	opt stack 0
  8592                           tblptru	equ	0xFF8
  8593                           tblptrh	equ	0xFF7
  8594                           tblptrl	equ	0xFF6
  8595                           tablat	equ	0xFF5
  8596                           prodh	equ	0xFF4
  8597                           prodl	equ	0xFF3
  8598                           intcon	equ	0xFF2
  8599                           intcon2	equ	0xFF1
  8600                           intcon3	equ	0xFF0
  8601                           postinc0	equ	0xFEE
  8602                           wreg	equ	0xFE8
  8603                           postdec1	equ	0xFE5
  8604                           plusw1	equ	0xFE3
  8605                           fsr1h	equ	0xFE2
  8606                           fsr1l	equ	0xFE1
  8607                           indf2	equ	0xFDF
  8608                           postinc2	equ	0xFDE
  8609                           postdec2	equ	0xFDD
  8610                           plusw2	equ	0xFDB
  8611                           fsr2h	equ	0xFDA
  8612                           fsr2l	equ	0xFD9
  8613                           status	equ	0xFD8
  8614                           
  8615 ;; *************** function _normal_mode *****************
  8616 ;; Defined at:
  8617 ;;		line 180 in file "main.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;		None
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;		None
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  1    wreg      unsigned char 
  8624 ;; Registers used:
  8625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8635 ;;Total ram usage:        0 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; Hardware stack levels required when called:    3
  8638 ;; This function calls:
  8639 ;;		_i2c_eeprom_readByte
  8640 ;;		_i2c_eeprom_writeByte
  8641 ;; This function is called by:
  8642 ;;		_main
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645                           
  8646                           	psect	text30
  8647  006802                     __ptext30:
  8648                           	opt stack 0
  8649  006802                     _normal_mode:
  8650                           	opt stack 27
  8651                           
  8652                           ;main.c: 182: if(i2c_eeprom_readByte(0x100)==0x94)
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;incstack = 0
  8656  006802  0E01               	movlw	1
  8657  006804  6E13               	movwf	i2c_eeprom_readByte@address+1,c
  8658  006806  0E00               	movlw	0
  8659  006808  6E12               	movwf	i2c_eeprom_readByte@address,c
  8660  00680A  EC05  F036         	call	_i2c_eeprom_readByte	;wreg free
  8661  00680E  0A94               	xorlw	148
  8662  006810  A4D8               	btfss	status,2,c
  8663  006812  D00A               	goto	l14212
  8664                           
  8665                           ;main.c: 183: {
  8666                           ;main.c: 185: i2c_eeprom_writeByte(0x100, 0x00);
  8667  006814  0E01               	movlw	1
  8668  006816  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  8669  006818  0E00               	movlw	0
  8670  00681A  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  8671  00681C  0E00               	movlw	0
  8672  00681E  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  8673  006820  ECB2  F038         	call	_i2c_eeprom_writeByte	;wreg free
  8674                           
  8675                           ;main.c: 187: return 0;
  8676  006824  0E00               	movlw	0
  8677                           
  8678                           ;main.c: 188: }
  8679  006826  0012               	return	
  8680  006828                     l14212:
  8681                           
  8682                           ;main.c: 189: else if(i2c_eeprom_readByte(0x100)==0x78)
  8683  006828  0E01               	movlw	1
  8684  00682A  6E13               	movwf	i2c_eeprom_readByte@address+1,c
  8685  00682C  0E00               	movlw	0
  8686  00682E  6E12               	movwf	i2c_eeprom_readByte@address,c
  8687  006830  EC05  F036         	call	_i2c_eeprom_readByte	;wreg free
  8688  006834  0A78               	xorlw	120
  8689  006836  A4D8               	btfss	status,2,c
  8690  006838  D00A               	goto	l880
  8691                           
  8692                           ;main.c: 190: {
  8693                           ;main.c: 192: i2c_eeprom_writeByte(0x100, 0x00);
  8694  00683A  0E01               	movlw	1
  8695  00683C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  8696  00683E  0E00               	movlw	0
  8697  006840  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  8698  006842  0E00               	movlw	0
  8699  006844  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  8700  006846  ECB2  F038         	call	_i2c_eeprom_writeByte	;wreg free
  8701                           
  8702                           ;main.c: 194: return 1;
  8703  00684A  0E01               	movlw	1
  8704                           
  8705                           ;main.c: 195: }
  8706  00684C  0012               	return	
  8707  00684E                     l880:
  8708                           
  8709                           ;main.c: 196: else if(!PORTAbits.RA0)
  8710  00684E  B080               	btfsc	3968,0,c	;volatile
  8711  006850  D002               	goto	l14228
  8712                           
  8713                           ;main.c: 197: {
  8714                           ;main.c: 199: return 0;
  8715  006852  0E00               	movlw	0
  8716                           
  8717                           ;main.c: 200: }
  8718  006854  0012               	return	
  8719  006856                     l14228:
  8720                           
  8721                           ;main.c: 201: else
  8722                           ;main.c: 202: {
  8723                           ;main.c: 204: return 1;
  8724  006856  0E01               	movlw	1
  8725  006858  0012               	return	
  8726  00685A                     __end_of_normal_mode:
  8727                           	opt stack 0
  8728                           tblptru	equ	0xFF8
  8729                           tblptrh	equ	0xFF7
  8730                           tblptrl	equ	0xFF6
  8731                           tablat	equ	0xFF5
  8732                           prodh	equ	0xFF4
  8733                           prodl	equ	0xFF3
  8734                           intcon	equ	0xFF2
  8735                           intcon2	equ	0xFF1
  8736                           intcon3	equ	0xFF0
  8737                           postinc0	equ	0xFEE
  8738                           wreg	equ	0xFE8
  8739                           postdec1	equ	0xFE5
  8740                           plusw1	equ	0xFE3
  8741                           fsr1h	equ	0xFE2
  8742                           fsr1l	equ	0xFE1
  8743                           indf2	equ	0xFDF
  8744                           postinc2	equ	0xFDE
  8745                           postdec2	equ	0xFDD
  8746                           plusw2	equ	0xFDB
  8747                           fsr2h	equ	0xFDA
  8748                           fsr2l	equ	0xFD9
  8749                           status	equ	0xFD8
  8750                           
  8751 ;; *************** function _i2c_eeprom_writeByte *****************
  8752 ;; Defined at:
  8753 ;;		line 488 in file "i2c.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;  address         2   10[COMRAM] unsigned int 
  8756 ;;  data            1   12[COMRAM] unsigned char 
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;  dat             2   16[COMRAM] unsigned char [2]
  8759 ;;  slave_addres    1   18[COMRAM] unsigned char 
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8769 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8770 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8771 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8772 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8773 ;;Total ram usage:        9 bytes
  8774 ;; Hardware stack levels used:    1
  8775 ;; Hardware stack levels required when called:    2
  8776 ;; This function calls:
  8777 ;;		__i2c_write
  8778 ;;		_i2c_set_frequency
  8779 ;; This function is called by:
  8780 ;;		_normal_mode
  8781 ;;		__ui_encoder
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           	psect	text31
  8786  007164                     __ptext31:
  8787                           	opt stack 0
  8788  007164                     _i2c_eeprom_writeByte:
  8789                           	opt stack 26
  8790                           
  8791                           ;i2c.c: 490: uint8_t slave_address;
  8792                           ;i2c.c: 491: uint8_t dat[2];
  8793                           ;i2c.c: 493: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
  8794                           
  8795                           ;incstack = 0
  8796  007164  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
  8797  007168  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
  8798  00716C  0E07               	movlw	7
  8799  00716E  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
  8800  007170                     u8925:
  8801  007170  90D8               	bcf	status,0,c
  8802  007172  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
  8803  007174  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
  8804  007176  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
  8805  007178  D7FB               	goto	u8925
  8806  00717A  500E               	movf	??_i2c_eeprom_writeByte,w,c
  8807  00717C  0B0E               	andlw	14
  8808  00717E  09A0               	iorlw	160
  8809  007180  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
  8810                           
  8811                           ;i2c.c: 494: dat[0] = address & 0xFF;
  8812  007182  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
  8813                           
  8814                           ;i2c.c: 495: dat[1] = data;
  8815  007186  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
  8816                           
  8817                           ;i2c.c: 498: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  8818  00718A  0E02               	movlw	2
  8819  00718C  EC8B  F03A         	call	_i2c_set_frequency
  8820                           
  8821                           ;i2c.c: 500: _i2c_write(slave_address, &dat[0], 2);
  8822  007190  0E11               	movlw	low i2c_eeprom_writeByte@dat
  8823  007192  6E06               	movwf	__i2c_write@data,c
  8824  007194  0E00               	movlw	high i2c_eeprom_writeByte@dat
  8825  007196  6E07               	movwf	__i2c_write@data+1,c
  8826  007198  0E02               	movlw	2
  8827  00719A  6E08               	movwf	__i2c_write@length,c
  8828  00719C  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
  8829  00719E  EC82  F037         	call	__i2c_write
  8830  0071A2  0012               	return		;funcret
  8831  0071A4                     __end_of_i2c_eeprom_writeByte:
  8832                           	opt stack 0
  8833                           tblptru	equ	0xFF8
  8834                           tblptrh	equ	0xFF7
  8835                           tblptrl	equ	0xFF6
  8836                           tablat	equ	0xFF5
  8837                           prodh	equ	0xFF4
  8838                           prodl	equ	0xFF3
  8839                           intcon	equ	0xFF2
  8840                           intcon2	equ	0xFF1
  8841                           intcon3	equ	0xFF0
  8842                           postinc0	equ	0xFEE
  8843                           wreg	equ	0xFE8
  8844                           postdec1	equ	0xFE5
  8845                           plusw1	equ	0xFE3
  8846                           fsr1h	equ	0xFE2
  8847                           fsr1l	equ	0xFE1
  8848                           indf2	equ	0xFDF
  8849                           postinc2	equ	0xFDE
  8850                           postdec2	equ	0xFDD
  8851                           plusw2	equ	0xFDB
  8852                           fsr2h	equ	0xFDA
  8853                           fsr2l	equ	0xFD9
  8854                           status	equ	0xFD8
  8855                           
  8856 ;; *************** function _i2c_eeprom_readByte *****************
  8857 ;; Defined at:
  8858 ;;		line 503 in file "i2c.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;  address         2   17[COMRAM] unsigned int 
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;  addr            1   23[COMRAM] unsigned char 
  8863 ;;  slave_addres    1   22[COMRAM] unsigned char 
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  1    wreg      unsigned char 
  8866 ;; Registers used:
  8867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8868 ;; Tracked objects:
  8869 ;;		On entry : 0/0
  8870 ;;		On exit  : 0/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8875 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8876 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8877 ;;Total ram usage:        7 bytes
  8878 ;; Hardware stack levels used:    1
  8879 ;; Hardware stack levels required when called:    2
  8880 ;; This function calls:
  8881 ;;		__i2c_read
  8882 ;;		__i2c_write
  8883 ;;		_i2c_set_frequency
  8884 ;; This function is called by:
  8885 ;;		_normal_mode
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889                           	psect	text32
  8890  006C0A                     __ptext32:
  8891                           	opt stack 0
  8892  006C0A                     _i2c_eeprom_readByte:
  8893                           	opt stack 27
  8894                           
  8895                           ;i2c.c: 505: uint8_t slave_address;
  8896                           ;i2c.c: 506: uint8_t addr;
  8897                           ;i2c.c: 507: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
  8898                           
  8899                           ;incstack = 0
  8900  006C0A  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
  8901  006C0E  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
  8902  006C12  0E07               	movlw	7
  8903  006C14  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
  8904  006C16                     u10045:
  8905  006C16  90D8               	bcf	status,0,c
  8906  006C18  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
  8907  006C1A  3214               	rrcf	??_i2c_eeprom_readByte,f,c
  8908  006C1C  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
  8909  006C1E  D7FB               	goto	u10045
  8910  006C20  5014               	movf	??_i2c_eeprom_readByte,w,c
  8911  006C22  0B0E               	andlw	14
  8912  006C24  09A0               	iorlw	160
  8913  006C26  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
  8914                           
  8915                           ;i2c.c: 508: addr = address & 0xFF;
  8916  006C28  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
  8917                           
  8918                           ;i2c.c: 511: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  8919  006C2C  0E02               	movlw	2
  8920  006C2E  EC8B  F03A         	call	_i2c_set_frequency
  8921                           
  8922                           ;i2c.c: 513: _i2c_write(slave_address, &addr, 1);
  8923  006C32  0E18               	movlw	low i2c_eeprom_readByte@addr
  8924  006C34  6E06               	movwf	__i2c_write@data,c
  8925  006C36  0E00               	movlw	high i2c_eeprom_readByte@addr
  8926  006C38  6E07               	movwf	__i2c_write@data+1,c
  8927  006C3A  0E01               	movlw	1
  8928  006C3C  6E08               	movwf	__i2c_write@length,c
  8929  006C3E  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
  8930  006C40  EC82  F037         	call	__i2c_write
  8931                           
  8932                           ;i2c.c: 514: _i2c_read(slave_address, &addr, 1);
  8933  006C44  0E18               	movlw	low i2c_eeprom_readByte@addr
  8934  006C46  6E06               	movwf	__i2c_read@data,c
  8935  006C48  0E00               	movlw	high i2c_eeprom_readByte@addr
  8936  006C4A  6E07               	movwf	__i2c_read@data+1,c
  8937  006C4C  0E01               	movlw	1
  8938  006C4E  6E08               	movwf	__i2c_read@length,c
  8939  006C50  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
  8940  006C52  ECC1  F02E         	call	__i2c_read
  8941                           
  8942                           ;i2c.c: 515: return addr;
  8943  006C56  5018               	movf	i2c_eeprom_readByte@addr,w,c
  8944  006C58  0012               	return	
  8945  006C5A                     __end_of_i2c_eeprom_readByte:
  8946                           	opt stack 0
  8947                           tblptru	equ	0xFF8
  8948                           tblptrh	equ	0xFF7
  8949                           tblptrl	equ	0xFF6
  8950                           tablat	equ	0xFF5
  8951                           prodh	equ	0xFF4
  8952                           prodl	equ	0xFF3
  8953                           intcon	equ	0xFF2
  8954                           intcon2	equ	0xFF1
  8955                           intcon3	equ	0xFF0
  8956                           postinc0	equ	0xFEE
  8957                           wreg	equ	0xFE8
  8958                           postdec1	equ	0xFE5
  8959                           plusw1	equ	0xFE3
  8960                           fsr1h	equ	0xFE2
  8961                           fsr1l	equ	0xFE1
  8962                           indf2	equ	0xFDF
  8963                           postinc2	equ	0xFDE
  8964                           postdec2	equ	0xFDD
  8965                           plusw2	equ	0xFDB
  8966                           fsr2h	equ	0xFDA
  8967                           fsr2l	equ	0xFD9
  8968                           status	equ	0xFD8
  8969                           
  8970 ;; *************** function __i2c_read *****************
  8971 ;; Defined at:
  8972 ;;		line 144 in file "i2c.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;  slave_addres    1    wreg     unsigned char 
  8975 ;;  data            2    5[COMRAM] PTR unsigned char 
  8976 ;;		 -> rtcc_read_eeprom@date(6), i2c_eeprom_read_calibration@buffer(4), i2c_eeprom_readByte@addr(1), calibrationParamet
      +ers(84), 
  8977 ;;  length          1    7[COMRAM] unsigned char 
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;  slave_addres    1   15[COMRAM] unsigned char 
  8980 ;;  cntr            1   16[COMRAM] unsigned char 
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  1    wreg      void 
  8983 ;; Registers used:
  8984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8990 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8992 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8993 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8994 ;;Total ram usage:       12 bytes
  8995 ;; Hardware stack levels used:    1
  8996 ;; Hardware stack levels required when called:    1
  8997 ;; This function calls:
  8998 ;;		__i2c_acknowledge
  8999 ;;		__i2c_get
  9000 ;;		__i2c_not_acknowledge
  9001 ;;		__i2c_send
  9002 ;;		__i2c_start
  9003 ;;		__i2c_stop
  9004 ;;		__i2c_wait_idle
  9005 ;; This function is called by:
  9006 ;;		_i2c_eeprom_readByte
  9007 ;;		_i2c_eeprom_read
  9008 ;; This function uses a non-reentrant model
  9009 ;;
  9010                           
  9011                           	psect	text33
  9012  005D82                     __ptext33:
  9013                           	opt stack 0
  9014  005D82                     __i2c_read:
  9015                           	opt stack 25
  9016                           
  9017                           ;incstack = 0
  9018                           ;__i2c_read@slave_address stored from wreg
  9019  005D82  6E10               	movwf	__i2c_read@slave_address,c
  9020                           
  9021                           ;i2c.c: 146: uint8_t cntr;
  9022                           ;i2c.c: 148: _i2c_wait_idle();
  9023  005D84  ECB1  F034         	call	__i2c_wait_idle	;wreg free
  9024                           
  9025                           ;i2c.c: 149: _i2c_start();
  9026  005D88  ECDD  F03C         	call	__i2c_start	;wreg free
  9027                           
  9028                           ;i2c.c: 150: _i2c_wait_idle();
  9029  005D8C  ECB1  F034         	call	__i2c_wait_idle	;wreg free
  9030                           
  9031                           ;i2c.c: 151: _i2c_send(slave_address | 0x01);
  9032  005D90  5010               	movf	__i2c_read@slave_address,w,c
  9033  005D92  0901               	iorlw	1
  9034  005D94  ECE1  F03C         	call	__i2c_send
  9035                           
  9036                           ;i2c.c: 152: _i2c_wait_idle();
  9037  005D98  ECB1  F034         	call	__i2c_wait_idle	;wreg free
  9038                           
  9039                           ;i2c.c: 162: for(cntr=0; cntr<length-1; ++cntr)
  9040  005D9C  0E00               	movlw	0
  9041  005D9E  6E11               	movwf	__i2c_read@cntr,c
  9042  005DA0  D00E               	goto	l10964
  9043  005DA2                     l10958:
  9044                           
  9045                           ;i2c.c: 163: {
  9046                           ;i2c.c: 164: data[cntr] = _i2c_get();
  9047  005DA2  5011               	movf	__i2c_read@cntr,w,c
  9048  005DA4  0D01               	mullw	1
  9049  005DA6  50F3               	movf	prodl,w,c
  9050  005DA8  2406               	addwf	__i2c_read@data,w,c
  9051  005DAA  6ED9               	movwf	fsr2l,c
  9052  005DAC  50F4               	movf	prodh,w,c
  9053  005DAE  2007               	addwfc	__i2c_read@data+1,w,c
  9054  005DB0  6EDA               	movwf	fsr2h,c
  9055  005DB2  ECB1  F03C         	call	__i2c_get	;wreg free
  9056  005DB6  6EDF               	movwf	indf2,c
  9057                           
  9058                           ;i2c.c: 165: _i2c_acknowledge();
  9059  005DB8  ECB6  F03C         	call	__i2c_acknowledge	;wreg free
  9060  005DBC  2A11               	incf	__i2c_read@cntr,f,c
  9061  005DBE                     l10964:
  9062  005DBE  0EFF               	movlw	255
  9063  005DC0  6E09               	movwf	??__i2c_read& (0+255),c
  9064  005DC2  0EFF               	movlw	255
  9065  005DC4  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
  9066  005DC6  5008               	movf	__i2c_read@length,w,c
  9067  005DC8  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
  9068  005DCA  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
  9069  005DCC  5009               	movf	??__i2c_read,w,c
  9070  005DCE  260B               	addwf	??__i2c_read+2,f,c
  9071  005DD0  500A               	movf	??__i2c_read+1,w,c
  9072  005DD2  220C               	addwfc	??__i2c_read+3,f,c
  9073  005DD4  5011               	movf	__i2c_read@cntr,w,c
  9074  005DD6  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
  9075  005DD8  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
  9076  005DDA  500B               	movf	??__i2c_read+2,w,c
  9077  005DDC  5C0D               	subwf	??__i2c_read+4,w,c
  9078  005DDE  500E               	movf	??__i2c_read+5,w,c
  9079  005DE0  0A80               	xorlw	128
  9080  005DE2  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
  9081  005DE4  500C               	movf	??__i2c_read+3,w,c
  9082  005DE6  0A80               	xorlw	128
  9083  005DE8  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
  9084  005DEA  A0D8               	btfss	status,0,c
  9085  005DEC  D7DA               	goto	l10958
  9086                           
  9087                           ;i2c.c: 166: }
  9088                           ;i2c.c: 167: data[cntr] = _i2c_get();
  9089  005DEE  5011               	movf	__i2c_read@cntr,w,c
  9090  005DF0  0D01               	mullw	1
  9091  005DF2  50F3               	movf	prodl,w,c
  9092  005DF4  2406               	addwf	__i2c_read@data,w,c
  9093  005DF6  6ED9               	movwf	fsr2l,c
  9094  005DF8  50F4               	movf	prodh,w,c
  9095  005DFA  2007               	addwfc	__i2c_read@data+1,w,c
  9096  005DFC  6EDA               	movwf	fsr2h,c
  9097  005DFE  ECB1  F03C         	call	__i2c_get	;wreg free
  9098  005E02  6EDF               	movwf	indf2,c
  9099                           
  9100                           ;i2c.c: 168: _i2c_not_acknowledge();
  9101  005E04  ECAC  F03C         	call	__i2c_not_acknowledge	;wreg free
  9102                           
  9103                           ;i2c.c: 170: _i2c_stop();
  9104  005E08  ECD9  F03C         	call	__i2c_stop	;wreg free
  9105  005E0C  0012               	return		;funcret
  9106  005E0E                     __end_of__i2c_read:
  9107                           	opt stack 0
  9108                           tblptru	equ	0xFF8
  9109                           tblptrh	equ	0xFF7
  9110                           tblptrl	equ	0xFF6
  9111                           tablat	equ	0xFF5
  9112                           prodh	equ	0xFF4
  9113                           prodl	equ	0xFF3
  9114                           intcon	equ	0xFF2
  9115                           intcon2	equ	0xFF1
  9116                           intcon3	equ	0xFF0
  9117                           postinc0	equ	0xFEE
  9118                           wreg	equ	0xFE8
  9119                           postdec1	equ	0xFE5
  9120                           plusw1	equ	0xFE3
  9121                           fsr1h	equ	0xFE2
  9122                           fsr1l	equ	0xFE1
  9123                           indf2	equ	0xFDF
  9124                           postinc2	equ	0xFDE
  9125                           postdec2	equ	0xFDD
  9126                           plusw2	equ	0xFDB
  9127                           fsr2h	equ	0xFDA
  9128                           fsr2l	equ	0xFD9
  9129                           status	equ	0xFD8
  9130                           
  9131 ;; *************** function __i2c_not_acknowledge *****************
  9132 ;; Defined at:
  9133 ;;		line 86 in file "i2c.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;		None
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;		None
  9138 ;; Return value:  Size  Location     Type
  9139 ;;                  1    wreg      void 
  9140 ;; Registers used:
  9141 ;;		None
  9142 ;; Tracked objects:
  9143 ;;		On entry : 0/0
  9144 ;;		On exit  : 0/0
  9145 ;;		Unchanged: 0/0
  9146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9151 ;;Total ram usage:        0 bytes
  9152 ;; Hardware stack levels used:    1
  9153 ;; This function calls:
  9154 ;;		Nothing
  9155 ;; This function is called by:
  9156 ;;		__i2c_read
  9157 ;;		_i2c_adc_read
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           	psect	text34
  9162  007958                     __ptext34:
  9163                           	opt stack 0
  9164  007958                     __i2c_not_acknowledge:
  9165                           	opt stack 25
  9166                           
  9167                           ;i2c.c: 88: SSP1CON2bits.ACKDT = 1;
  9168                           
  9169                           ;incstack = 0
  9170  007958  8AC5               	bsf	4037,5,c	;volatile
  9171                           
  9172                           ;i2c.c: 89: SSP1CON2bits.ACKEN = 1;
  9173  00795A  88C5               	bsf	4037,4,c	;volatile
  9174  00795C                     l1320:
  9175  00795C  A8C5               	btfss	4037,4,c	;volatile
  9176  00795E  0012               	return	
  9177  007960  D7FD               	goto	l1320
  9178  007962                     __end_of__i2c_not_acknowledge:
  9179                           	opt stack 0
  9180                           tblptru	equ	0xFF8
  9181                           tblptrh	equ	0xFF7
  9182                           tblptrl	equ	0xFF6
  9183                           tablat	equ	0xFF5
  9184                           prodh	equ	0xFF4
  9185                           prodl	equ	0xFF3
  9186                           intcon	equ	0xFF2
  9187                           intcon2	equ	0xFF1
  9188                           intcon3	equ	0xFF0
  9189                           postinc0	equ	0xFEE
  9190                           wreg	equ	0xFE8
  9191                           postdec1	equ	0xFE5
  9192                           plusw1	equ	0xFE3
  9193                           fsr1h	equ	0xFE2
  9194                           fsr1l	equ	0xFE1
  9195                           indf2	equ	0xFDF
  9196                           postinc2	equ	0xFDE
  9197                           postdec2	equ	0xFDD
  9198                           plusw2	equ	0xFDB
  9199                           fsr2h	equ	0xFDA
  9200                           fsr2l	equ	0xFD9
  9201                           status	equ	0xFD8
  9202                           
  9203 ;; *************** function __i2c_get *****************
  9204 ;; Defined at:
  9205 ;;		line 63 in file "i2c.c"
  9206 ;; Parameters:    Size  Location     Type
  9207 ;;		None
  9208 ;; Auto vars:     Size  Location     Type
  9209 ;;		None
  9210 ;; Return value:  Size  Location     Type
  9211 ;;                  1    wreg      unsigned char 
  9212 ;; Registers used:
  9213 ;;		wreg, status,2
  9214 ;; Tracked objects:
  9215 ;;		On entry : 0/0
  9216 ;;		On exit  : 0/0
  9217 ;;		Unchanged: 0/0
  9218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9223 ;;Total ram usage:        0 bytes
  9224 ;; Hardware stack levels used:    1
  9225 ;; This function calls:
  9226 ;;		Nothing
  9227 ;; This function is called by:
  9228 ;;		__i2c_read
  9229 ;;		_i2c_adc_read
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233                           	psect	text35
  9234  007962                     __ptext35:
  9235                           	opt stack 0
  9236  007962                     __i2c_get:
  9237                           	opt stack 25
  9238                           
  9239                           ;i2c.c: 65: SSP1CON2bits.RCEN = 1 ;
  9240                           
  9241                           ;incstack = 0
  9242  007962  86C5               	bsf	4037,3,c	;volatile
  9243  007964                     l1302:
  9244  007964  B6C5               	btfsc	4037,3,c	;volatile
  9245  007966  D7FE               	goto	l1302
  9246                           
  9247                           ;i2c.c: 67: return SSP1BUF;
  9248  007968  50C9               	movf	4041,w,c	;volatile
  9249  00796A  0012               	return	
  9250  00796C                     __end_of__i2c_get:
  9251                           	opt stack 0
  9252                           tblptru	equ	0xFF8
  9253                           tblptrh	equ	0xFF7
  9254                           tblptrl	equ	0xFF6
  9255                           tablat	equ	0xFF5
  9256                           prodh	equ	0xFF4
  9257                           prodl	equ	0xFF3
  9258                           intcon	equ	0xFF2
  9259                           intcon2	equ	0xFF1
  9260                           intcon3	equ	0xFF0
  9261                           postinc0	equ	0xFEE
  9262                           wreg	equ	0xFE8
  9263                           postdec1	equ	0xFE5
  9264                           plusw1	equ	0xFE3
  9265                           fsr1h	equ	0xFE2
  9266                           fsr1l	equ	0xFE1
  9267                           indf2	equ	0xFDF
  9268                           postinc2	equ	0xFDE
  9269                           postdec2	equ	0xFDD
  9270                           plusw2	equ	0xFDB
  9271                           fsr2h	equ	0xFDA
  9272                           fsr2l	equ	0xFD9
  9273                           status	equ	0xFD8
  9274                           
  9275 ;; *************** function __i2c_acknowledge *****************
  9276 ;; Defined at:
  9277 ;;		line 78 in file "i2c.c"
  9278 ;; Parameters:    Size  Location     Type
  9279 ;;		None
  9280 ;; Auto vars:     Size  Location     Type
  9281 ;;		None
  9282 ;; Return value:  Size  Location     Type
  9283 ;;                  1    wreg      void 
  9284 ;; Registers used:
  9285 ;;		None
  9286 ;; Tracked objects:
  9287 ;;		On entry : 0/0
  9288 ;;		On exit  : 0/0
  9289 ;;		Unchanged: 0/0
  9290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9295 ;;Total ram usage:        0 bytes
  9296 ;; Hardware stack levels used:    1
  9297 ;; This function calls:
  9298 ;;		Nothing
  9299 ;; This function is called by:
  9300 ;;		__i2c_read
  9301 ;;		_i2c_adc_read
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305                           	psect	text36
  9306  00796C                     __ptext36:
  9307                           	opt stack 0
  9308  00796C                     __i2c_acknowledge:
  9309                           	opt stack 25
  9310                           
  9311                           ;i2c.c: 80: SSP1CON2bits.ACKDT = 0;
  9312                           
  9313                           ;incstack = 0
  9314  00796C  9AC5               	bcf	4037,5,c	;volatile
  9315                           
  9316                           ;i2c.c: 81: SSP1CON2bits.ACKEN = 1;
  9317  00796E  88C5               	bsf	4037,4,c	;volatile
  9318  007970                     l1314:
  9319  007970  A8C5               	btfss	4037,4,c	;volatile
  9320  007972  0012               	return	
  9321  007974  D7FD               	goto	l1314
  9322  007976                     __end_of__i2c_acknowledge:
  9323                           	opt stack 0
  9324                           tblptru	equ	0xFF8
  9325                           tblptrh	equ	0xFF7
  9326                           tblptrl	equ	0xFF6
  9327                           tablat	equ	0xFF5
  9328                           prodh	equ	0xFF4
  9329                           prodl	equ	0xFF3
  9330                           intcon	equ	0xFF2
  9331                           intcon2	equ	0xFF1
  9332                           intcon3	equ	0xFF0
  9333                           postinc0	equ	0xFEE
  9334                           wreg	equ	0xFE8
  9335                           postdec1	equ	0xFE5
  9336                           plusw1	equ	0xFE3
  9337                           fsr1h	equ	0xFE2
  9338                           fsr1l	equ	0xFE1
  9339                           indf2	equ	0xFDF
  9340                           postinc2	equ	0xFDE
  9341                           postdec2	equ	0xFDD
  9342                           plusw2	equ	0xFDB
  9343                           fsr2h	equ	0xFDA
  9344                           fsr2l	equ	0xFD9
  9345                           status	equ	0xFD8
  9346                           
  9347 ;; *************** function _i2c_eeprom_tasks *****************
  9348 ;; Defined at:
  9349 ;;		line 756 in file "i2c.c"
  9350 ;; Parameters:    Size  Location     Type
  9351 ;;		None
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;		None
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  1    wreg      void 
  9356 ;; Registers used:
  9357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9367 ;;Total ram usage:        0 bytes
  9368 ;; Hardware stack levels used:    1
  9369 ;; Hardware stack levels required when called:    4
  9370 ;; This function calls:
  9371 ;;		__write_calibration
  9372 ;;		_get_next_eeprom_write_task
  9373 ;; This function is called by:
  9374 ;;		_main
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378                           	psect	text37
  9379  0063FE                     __ptext37:
  9380                           	opt stack 0
  9381  0063FE                     _i2c_eeprom_tasks:
  9382                           	opt stack 26
  9383                           
  9384                           ;i2c.c: 758: switch(get_next_eeprom_write_task())
  9385                           
  9386                           ;incstack = 0
  9387  0063FE  D01C               	goto	l14396
  9388  006400                     l14380:
  9389                           
  9390                           ;i2c.c: 763: _write_calibration(CALIBRATION_INDEX_INPUT_VOLTAGE);
  9391  006400  0E00               	movlw	0
  9392  006402  EC79  F02E         	call	__write_calibration
  9393                           
  9394                           ;i2c.c: 764: break;
  9395  006406  0012               	return	
  9396  006408                     l14382:
  9397                           
  9398                           ;i2c.c: 766: _write_calibration(CALIBRATION_INDEX_OUTPUT_VOLTAGE);
  9399  006408  0E01               	movlw	1
  9400  00640A  EC79  F02E         	call	__write_calibration
  9401                           
  9402                           ;i2c.c: 767: break;
  9403  00640E  0012               	return	
  9404  006410                     l14384:
  9405                           
  9406                           ;i2c.c: 769: _write_calibration(CALIBRATION_INDEX_INPUT_CURRENT);
  9407  006410  0E02               	movlw	2
  9408  006412  EC79  F02E         	call	__write_calibration
  9409                           
  9410                           ;i2c.c: 770: break;
  9411  006416  0012               	return	
  9412  006418                     l14386:
  9413                           
  9414                           ;i2c.c: 772: _write_calibration(CALIBRATION_INDEX_OUTPUT_CURRENT);
  9415  006418  0E03               	movlw	3
  9416  00641A  EC79  F02E         	call	__write_calibration
  9417                           
  9418                           ;i2c.c: 773: break;
  9419  00641E  0012               	return	
  9420  006420                     l14388:
  9421                           
  9422                           ;i2c.c: 775: _write_calibration(CALIBRATION_INDEX_ONBOARD_TEMPERATURE);
  9423  006420  0E04               	movlw	4
  9424  006422  EC79  F02E         	call	__write_calibration
  9425                           
  9426                           ;i2c.c: 776: break;
  9427  006426  0012               	return	
  9428  006428                     l14390:
  9429                           
  9430                           ;i2c.c: 778: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_1);
  9431  006428  0E05               	movlw	5
  9432  00642A  EC79  F02E         	call	__write_calibration
  9433                           
  9434                           ;i2c.c: 779: break;
  9435  00642E  0012               	return	
  9436  006430                     l14392:
  9437                           
  9438                           ;i2c.c: 781: _write_calibration(CALIBRATION_INDEX_EXTERNAL_TEMPERATURE_2);
  9439  006430  0E06               	movlw	6
  9440  006432  EC79  F02E         	call	__write_calibration
  9441                           
  9442                           ;i2c.c: 783: }
  9443                           
  9444                           ;i2c.c: 782: break;
  9445  006436  0012               	return	
  9446  006438                     l14396:
  9447  006438  EC81  F039         	call	_get_next_eeprom_write_task	;wreg free
  9448                           
  9449                           ; Switch size 1, requested type "space"
  9450                           ; Number of cases is 8, Range of values is 1 to 8
  9451                           ; switch strategies available:
  9452                           ; Name         Instructions Cycles
  9453                           ; simple_byte           25    13 (average)
  9454                           ;	Chosen strategy is simple_byte
  9455  00643C  0A01               	xorlw	1	; case 1
  9456  00643E  B4D8               	btfsc	status,2,c
  9457  006440  0012               	return	
  9458  006442  0A03               	xorlw	3	; case 2
  9459  006444  B4D8               	btfsc	status,2,c
  9460  006446  D7DC               	goto	l14380
  9461  006448  0A01               	xorlw	1	; case 3
  9462  00644A  B4D8               	btfsc	status,2,c
  9463  00644C  D7DD               	goto	l14382
  9464  00644E  0A07               	xorlw	7	; case 4
  9465  006450  B4D8               	btfsc	status,2,c
  9466  006452  D7DE               	goto	l14384
  9467  006454  0A01               	xorlw	1	; case 5
  9468  006456  B4D8               	btfsc	status,2,c
  9469  006458  D7DF               	goto	l14386
  9470  00645A  0A03               	xorlw	3	; case 6
  9471  00645C  B4D8               	btfsc	status,2,c
  9472  00645E  D7E0               	goto	l14388
  9473  006460  0A01               	xorlw	1	; case 7
  9474  006462  B4D8               	btfsc	status,2,c
  9475  006464  D7E1               	goto	l14390
  9476  006466  0A0F               	xorlw	15	; case 8
  9477  006468  A4D8               	btfss	status,2,c
  9478  00646A  0012               	return	
  9479  00646C  D7E1               	goto	l14392
  9480  00646E                     __end_of_i2c_eeprom_tasks:
  9481                           	opt stack 0
  9482                           tblptru	equ	0xFF8
  9483                           tblptrh	equ	0xFF7
  9484                           tblptrl	equ	0xFF6
  9485                           tablat	equ	0xFF5
  9486                           prodh	equ	0xFF4
  9487                           prodl	equ	0xFF3
  9488                           intcon	equ	0xFF2
  9489                           intcon2	equ	0xFF1
  9490                           intcon3	equ	0xFF0
  9491                           postinc0	equ	0xFEE
  9492                           wreg	equ	0xFE8
  9493                           postdec1	equ	0xFE5
  9494                           plusw1	equ	0xFE3
  9495                           fsr1h	equ	0xFE2
  9496                           fsr1l	equ	0xFE1
  9497                           indf2	equ	0xFDF
  9498                           postinc2	equ	0xFDE
  9499                           postdec2	equ	0xFDD
  9500                           plusw2	equ	0xFDB
  9501                           fsr2h	equ	0xFDA
  9502                           fsr2l	equ	0xFD9
  9503                           status	equ	0xFD8
  9504                           
  9505 ;; *************** function _get_next_eeprom_write_task *****************
  9506 ;; Defined at:
  9507 ;;		line 736 in file "i2c.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;		None
  9510 ;; Auto vars:     Size  Location     Type
  9511 ;;  task            1    0[COMRAM] enum E8218
  9512 ;; Return value:  Size  Location     Type
  9513 ;;                  1    wreg      enum E8218
  9514 ;; Registers used:
  9515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9516 ;; Tracked objects:
  9517 ;;		On entry : 0/0
  9518 ;;		On exit  : 0/0
  9519 ;;		Unchanged: 0/0
  9520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9525 ;;Total ram usage:        1 bytes
  9526 ;; Hardware stack levels used:    1
  9527 ;; This function calls:
  9528 ;;		Nothing
  9529 ;; This function is called by:
  9530 ;;		_i2c_eeprom_tasks
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           	psect	text38
  9535  007302                     __ptext38:
  9536                           	opt stack 0
  9537  007302                     _get_next_eeprom_write_task:
  9538                           	opt stack 29
  9539                           
  9540                           ;i2c.c: 738: eeprom_write_task_t task;
  9541                           ;i2c.c: 739: if (task_list_read_index == task_list_write_index)
  9542                           
  9543                           ;incstack = 0
  9544  007302  0101               	movlb	1	; () banked
  9545  007304  5184               	movf	_task_list_write_index& (0+255),w,b
  9546  007306  0101               	movlb	1	; () banked
  9547  007308  1985               	xorwf	_task_list_read_index& (0+255),w,b
  9548  00730A  A4D8               	btfss	status,2,c
  9549  00730C  D002               	goto	l13424
  9550                           
  9551                           ; BSR set to: 1
  9552                           ;i2c.c: 740: {
  9553                           ;i2c.c: 742: return EEPROM_WRITE_TASK_NONE;
  9554  00730E  0E00               	movlw	0
  9555                           
  9556                           ; BSR set to: 1
  9557                           ;i2c.c: 743: }
  9558                           
  9559                           ; BSR set to: 1
  9560  007310  0012               	return	
  9561  007312                     l13424:
  9562                           
  9563                           ; BSR set to: 1
  9564                           ;i2c.c: 744: else
  9565                           ;i2c.c: 745: {
  9566                           ;i2c.c: 747: task = task_list[task_list_read_index];
  9567  007312  0101               	movlb	1	; () banked
  9568  007314  5185               	movf	_task_list_read_index& (0+255),w,b
  9569  007316  0D01               	mullw	1
  9570  007318  0E00               	movlw	low _task_list
  9571  00731A  24F3               	addwf	prodl,w,c
  9572  00731C  6ED9               	movwf	fsr2l,c
  9573  00731E  0E02               	movlw	high _task_list
  9574  007320  20F4               	addwfc	prodh,w,c
  9575  007322  6EDA               	movwf	fsr2h,c
  9576  007324  50DF               	movf	indf2,w,c
  9577  007326  6E01               	movwf	get_next_eeprom_write_task@task,c
  9578                           
  9579                           ; BSR set to: 1
  9580                           ;i2c.c: 749: ++task_list_read_index;
  9581  007328  0101               	movlb	1	; () banked
  9582  00732A  2B85               	incf	_task_list_read_index& (0+255),f,b
  9583                           
  9584                           ; BSR set to: 1
  9585                           ;i2c.c: 750: task_list_read_index &= 0x0F;
  9586  00732C  0E0F               	movlw	15
  9587  00732E  0101               	movlb	1	; () banked
  9588  007330  1785               	andwf	_task_list_read_index& (0+255),f,b
  9589                           
  9590                           ; BSR set to: 1
  9591                           ;i2c.c: 752: return task;
  9592  007332  5001               	movf	get_next_eeprom_write_task@task,w,c
  9593                           
  9594                           ; BSR set to: 1
  9595  007334  0012               	return	
  9596  007336                     __end_of_get_next_eeprom_write_task:
  9597                           	opt stack 0
  9598                           tblptru	equ	0xFF8
  9599                           tblptrh	equ	0xFF7
  9600                           tblptrl	equ	0xFF6
  9601                           tablat	equ	0xFF5
  9602                           prodh	equ	0xFF4
  9603                           prodl	equ	0xFF3
  9604                           intcon	equ	0xFF2
  9605                           intcon2	equ	0xFF1
  9606                           intcon3	equ	0xFF0
  9607                           postinc0	equ	0xFEE
  9608                           wreg	equ	0xFE8
  9609                           postdec1	equ	0xFE5
  9610                           plusw1	equ	0xFE3
  9611                           fsr1h	equ	0xFE2
  9612                           fsr1l	equ	0xFE1
  9613                           indf2	equ	0xFDF
  9614                           postinc2	equ	0xFDE
  9615                           postdec2	equ	0xFDD
  9616                           plusw2	equ	0xFDB
  9617                           fsr2h	equ	0xFDA
  9618                           fsr2l	equ	0xFD9
  9619                           status	equ	0xFD8
  9620                           
  9621 ;; *************** function __write_calibration *****************
  9622 ;; Defined at:
  9623 ;;		line 692 in file "i2c.c"
  9624 ;; Parameters:    Size  Location     Type
  9625 ;;  index           1    wreg     enum E8141
  9626 ;; Auto vars:     Size  Location     Type
  9627 ;;  index           1   59[COMRAM] enum E8141
  9628 ;;  buffer         16   39[COMRAM] unsigned char [16]
  9629 ;;  ptr             2   57[COMRAM] PTR unsigned char 
  9630 ;;		 -> calibrationParameters(84), 
  9631 ;;  addr            2   55[COMRAM] unsigned int 
  9632 ;;  cntr            1   60[COMRAM] unsigned char 
  9633 ;; Return value:  Size  Location     Type
  9634 ;;                  1    wreg      void 
  9635 ;; Registers used:
  9636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9637 ;; Tracked objects:
  9638 ;;		On entry : 0/0
  9639 ;;		On exit  : 0/0
  9640 ;;		Unchanged: 0/0
  9641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9643 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9645 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9646 ;;Total ram usage:       24 bytes
  9647 ;; Hardware stack levels used:    1
  9648 ;; Hardware stack levels required when called:    3
  9649 ;; This function calls:
  9650 ;;		_i2c_eeprom_write
  9651 ;; This function is called by:
  9652 ;;		_i2c_eeprom_tasks
  9653 ;; This function uses a non-reentrant model
  9654 ;;
  9655                           
  9656                           	psect	text39
  9657  005CF2                     __ptext39:
  9658                           	opt stack 0
  9659  005CF2                     __write_calibration:
  9660                           	opt stack 26
  9661                           
  9662                           ; BSR set to: 1
  9663                           ;incstack = 0
  9664                           ;__write_calibration@index stored from wreg
  9665  005CF2  6E3C               	movwf	__write_calibration@index,c
  9666                           
  9667                           ;i2c.c: 694: uint8_t buffer[16];
  9668                           ;i2c.c: 695: uint8_t *ptr;
  9669                           ;i2c.c: 696: uint8_t cntr;
  9670                           ;i2c.c: 697: uint16_t addr;
  9671                           ;i2c.c: 698: buffer[0] = 0x77;
  9672  005CF4  0E77               	movlw	119
  9673  005CF6  6E28               	movwf	__write_calibration@buffer,c
  9674                           
  9675                           ;i2c.c: 699: buffer[1] = 0x55;
  9676  005CF8  0E55               	movlw	85
  9677  005CFA  6E29               	movwf	__write_calibration@buffer+1,c
  9678                           
  9679                           ;i2c.c: 700: buffer[2] = 0x33;
  9680  005CFC  0E33               	movlw	51
  9681  005CFE  6E2A               	movwf	__write_calibration@buffer+2,c
  9682                           
  9683                           ;i2c.c: 701: buffer[3] = (uint8_t) index;
  9684  005D00  C03C  F02B         	movff	__write_calibration@index,__write_calibration@buffer+3
  9685                           
  9686                           ;i2c.c: 702: ptr = (uint8_t*) &calibrationParameters[index];
  9687  005D04  503C               	movf	__write_calibration@index,w,c
  9688  005D06  0D0C               	mullw	12
  9689  005D08  0E10               	movlw	low _calibrationParameters
  9690  005D0A  24F3               	addwf	prodl,w,c
  9691  005D0C  6E3A               	movwf	__write_calibration@ptr,c
  9692  005D0E  0E02               	movlw	high _calibrationParameters
  9693  005D10  20F4               	addwfc	prodh,w,c
  9694  005D12  6E3B               	movwf	__write_calibration@ptr+1,c
  9695                           
  9696                           ;i2c.c: 703: for(cntr=4; cntr<16; ++cntr)
  9697  005D14  0E04               	movlw	4
  9698  005D16  6E3D               	movwf	__write_calibration@cntr,c
  9699  005D18                     l13400:
  9700  005D18  0E0F               	movlw	15
  9701  005D1A  643D               	cpfsgt	__write_calibration@cntr,c
  9702  005D1C  D001               	goto	l13404
  9703  005D1E  D012               	goto	l13412
  9704  005D20                     l13404:
  9705                           
  9706                           ;i2c.c: 704: {
  9707                           ;i2c.c: 705: buffer[cntr] = *ptr;
  9708  005D20  C03A  FFD9         	movff	__write_calibration@ptr,fsr2l
  9709  005D24  C03B  FFDA         	movff	__write_calibration@ptr+1,fsr2h
  9710  005D28  503D               	movf	__write_calibration@cntr,w,c
  9711  005D2A  0D01               	mullw	1
  9712  005D2C  0E28               	movlw	low __write_calibration@buffer
  9713  005D2E  24F3               	addwf	prodl,w,c
  9714  005D30  6EE1               	movwf	fsr1l,c
  9715  005D32  0E00               	movlw	high __write_calibration@buffer
  9716  005D34  20F4               	addwfc	prodh,w,c
  9717  005D36  6EE2               	movwf	fsr1h,c
  9718  005D38  CFDF FFE7          	movff	indf2,indf1
  9719                           
  9720                           ;i2c.c: 706: ++ptr;
  9721  005D3C  4A3A               	infsnz	__write_calibration@ptr,f,c
  9722  005D3E  2A3B               	incf	__write_calibration@ptr+1,f,c
  9723  005D40  2A3D               	incf	__write_calibration@cntr,f,c
  9724  005D42  D7EA               	goto	l13400
  9725  005D44                     l13412:
  9726                           
  9727                           ;i2c.c: 707: }
  9728                           ;i2c.c: 708: addr = 0x0100 + (index<<4);
  9729  005D44  503C               	movf	__write_calibration@index,w,c
  9730  005D46  6E26               	movwf	??__write_calibration& (0+255),c
  9731  005D48  6A27               	clrf	(??__write_calibration+1)& (0+255),c
  9732  005D4A  3A26               	swapf	??__write_calibration,f,c
  9733  005D4C  3A27               	swapf	??__write_calibration+1,f,c
  9734  005D4E  0EF0               	movlw	240
  9735  005D50  1627               	andwf	??__write_calibration+1,f,c
  9736  005D52  5026               	movf	??__write_calibration,w,c
  9737  005D54  0B0F               	andlw	15
  9738  005D56  1227               	iorwf	??__write_calibration+1,f,c
  9739  005D58  0EF0               	movlw	240
  9740  005D5A  1626               	andwf	??__write_calibration,f,c
  9741  005D5C  0E00               	movlw	0
  9742  005D5E  2426               	addwf	??__write_calibration,w,c
  9743  005D60  6E38               	movwf	__write_calibration@addr,c
  9744  005D62  0E01               	movlw	1
  9745  005D64  2027               	addwfc	??__write_calibration+1,w,c
  9746  005D66  6E39               	movwf	__write_calibration@addr+1,c
  9747                           
  9748                           ;i2c.c: 709: i2c_eeprom_write(addr, &buffer[0], 16);
  9749  005D68  C038  F00B         	movff	__write_calibration@addr,i2c_eeprom_write@address
  9750  005D6C  C039  F00C         	movff	__write_calibration@addr+1,i2c_eeprom_write@address+1
  9751  005D70  0E28               	movlw	low __write_calibration@buffer
  9752  005D72  6E0D               	movwf	i2c_eeprom_write@data,c
  9753  005D74  0E00               	movlw	high __write_calibration@buffer
  9754  005D76  6E0E               	movwf	i2c_eeprom_write@data+1,c
  9755  005D78  0E10               	movlw	16
  9756  005D7A  6E0F               	movwf	i2c_eeprom_write@length,c
  9757  005D7C  EC95  F030         	call	_i2c_eeprom_write	;wreg free
  9758  005D80  0012               	return		;funcret
  9759  005D82                     __end_of__write_calibration:
  9760                           	opt stack 0
  9761                           tblptru	equ	0xFF8
  9762                           tblptrh	equ	0xFF7
  9763                           tblptrl	equ	0xFF6
  9764                           tablat	equ	0xFF5
  9765                           prodh	equ	0xFF4
  9766                           prodl	equ	0xFF3
  9767                           intcon	equ	0xFF2
  9768                           intcon2	equ	0xFF1
  9769                           intcon3	equ	0xFF0
  9770                           postinc0	equ	0xFEE
  9771                           wreg	equ	0xFE8
  9772                           indf1	equ	0xFE7
  9773                           postdec1	equ	0xFE5
  9774                           plusw1	equ	0xFE3
  9775                           fsr1h	equ	0xFE2
  9776                           fsr1l	equ	0xFE1
  9777                           indf2	equ	0xFDF
  9778                           postinc2	equ	0xFDE
  9779                           postdec2	equ	0xFDD
  9780                           plusw2	equ	0xFDB
  9781                           fsr2h	equ	0xFDA
  9782                           fsr2l	equ	0xFD9
  9783                           status	equ	0xFD8
  9784                           
  9785 ;; *************** function _display_update *****************
  9786 ;; Defined at:
  9787 ;;		line 459 in file "display.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;		None
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;		None
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  1    wreg      void 
  9794 ;; Registers used:
  9795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9805 ;;Total ram usage:        0 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:    4
  9808 ;; This function calls:
  9809 ;;		_i2c_display_cursor
  9810 ;;		_i2c_display_write_fixed
  9811 ;; This function is called by:
  9812 ;;		_main
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           	psect	text40
  9817  0064DE                     __ptext40:
  9818                           	opt stack 0
  9819  0064DE                     _display_update:
  9820                           	opt stack 26
  9821                           
  9822                           ;display.c: 461: i2c_display_cursor(0, 0);
  9823                           
  9824                           ;incstack = 0
  9825  0064DE  0E00               	movlw	0
  9826  0064E0  6E0E               	movwf	i2c_display_cursor@position,c
  9827  0064E2  0E00               	movlw	0
  9828  0064E4  EC2B  F03B         	call	_i2c_display_cursor
  9829                           
  9830                           ;display.c: 462: i2c_display_write_fixed(&display_content[0][0], 20);
  9831  0064E8  0E64               	movlw	low _display_content
  9832  0064EA  6E06               	movwf	i2c_display_write_fixed@data,c
  9833  0064EC  0E02               	movlw	high _display_content
  9834  0064EE  6E07               	movwf	i2c_display_write_fixed@data+1,c
  9835  0064F0  0E14               	movlw	20
  9836  0064F2  6E08               	movwf	i2c_display_write_fixed@length,c
  9837  0064F4  EC08  F035         	call	_i2c_display_write_fixed	;wreg free
  9838                           
  9839                           ;display.c: 463: i2c_display_cursor(1, 0);
  9840  0064F8  0E00               	movlw	0
  9841  0064FA  6E0E               	movwf	i2c_display_cursor@position,c
  9842  0064FC  0E01               	movlw	1
  9843  0064FE  EC2B  F03B         	call	_i2c_display_cursor
  9844                           
  9845                           ;display.c: 464: i2c_display_write_fixed(&display_content[1][0], 20);
  9846  006502  0E78               	movlw	low (_display_content+20)
  9847  006504  6E06               	movwf	i2c_display_write_fixed@data,c
  9848  006506  0E02               	movlw	high (_display_content+20)
  9849  006508  6E07               	movwf	i2c_display_write_fixed@data+1,c
  9850  00650A  0E14               	movlw	20
  9851  00650C  6E08               	movwf	i2c_display_write_fixed@length,c
  9852  00650E  EC08  F035         	call	_i2c_display_write_fixed	;wreg free
  9853                           
  9854                           ;display.c: 465: i2c_display_cursor(2, 0);
  9855  006512  0E00               	movlw	0
  9856  006514  6E0E               	movwf	i2c_display_cursor@position,c
  9857  006516  0E02               	movlw	2
  9858  006518  EC2B  F03B         	call	_i2c_display_cursor
  9859                           
  9860                           ;display.c: 466: i2c_display_write_fixed(&display_content[2][0], 20);
  9861  00651C  0E8C               	movlw	low (_display_content+40)
  9862  00651E  6E06               	movwf	i2c_display_write_fixed@data,c
  9863  006520  0E02               	movlw	high (_display_content+40)
  9864  006522  6E07               	movwf	i2c_display_write_fixed@data+1,c
  9865  006524  0E14               	movlw	20
  9866  006526  6E08               	movwf	i2c_display_write_fixed@length,c
  9867  006528  EC08  F035         	call	_i2c_display_write_fixed	;wreg free
  9868                           
  9869                           ;display.c: 467: i2c_display_cursor(3, 0);
  9870  00652C  0E00               	movlw	0
  9871  00652E  6E0E               	movwf	i2c_display_cursor@position,c
  9872  006530  0E03               	movlw	3
  9873  006532  EC2B  F03B         	call	_i2c_display_cursor
  9874                           
  9875                           ;display.c: 468: i2c_display_write_fixed(&display_content[3][0], 20);
  9876  006536  0EA0               	movlw	low (_display_content+60)
  9877  006538  6E06               	movwf	i2c_display_write_fixed@data,c
  9878  00653A  0E02               	movlw	high (_display_content+60)
  9879  00653C  6E07               	movwf	i2c_display_write_fixed@data+1,c
  9880  00653E  0E14               	movlw	20
  9881  006540  6E08               	movwf	i2c_display_write_fixed@length,c
  9882  006542  EC08  F035         	call	_i2c_display_write_fixed	;wreg free
  9883  006546  0012               	return		;funcret
  9884  006548                     __end_of_display_update:
  9885                           	opt stack 0
  9886                           tblptru	equ	0xFF8
  9887                           tblptrh	equ	0xFF7
  9888                           tblptrl	equ	0xFF6
  9889                           tablat	equ	0xFF5
  9890                           prodh	equ	0xFF4
  9891                           prodl	equ	0xFF3
  9892                           intcon	equ	0xFF2
  9893                           intcon2	equ	0xFF1
  9894                           intcon3	equ	0xFF0
  9895                           postinc0	equ	0xFEE
  9896                           wreg	equ	0xFE8
  9897                           indf1	equ	0xFE7
  9898                           postdec1	equ	0xFE5
  9899                           plusw1	equ	0xFE3
  9900                           fsr1h	equ	0xFE2
  9901                           fsr1l	equ	0xFE1
  9902                           indf2	equ	0xFDF
  9903                           postinc2	equ	0xFDE
  9904                           postdec2	equ	0xFDD
  9905                           plusw2	equ	0xFDB
  9906                           fsr2h	equ	0xFDA
  9907                           fsr2l	equ	0xFD9
  9908                           status	equ	0xFD8
  9909                           
  9910 ;; *************** function _i2c_display_write_fixed *****************
  9911 ;; Defined at:
  9912 ;;		line 341 in file "i2c.c"
  9913 ;; Parameters:    Size  Location     Type
  9914 ;;  data            2    5[COMRAM] PTR unsigned char 
  9915 ;;		 -> display_content(80), 
  9916 ;;  length          1    7[COMRAM] unsigned char 
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;  pos             1    8[COMRAM] unsigned char 
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  1    wreg      void 
  9921 ;; Registers used:
  9922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9923 ;; Tracked objects:
  9924 ;;		On entry : 0/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9928 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9931 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9932 ;;Total ram usage:        4 bytes
  9933 ;; Hardware stack levels used:    1
  9934 ;; Hardware stack levels required when called:    1
  9935 ;; This function calls:
  9936 ;;		__i2c_send
  9937 ;;		__i2c_start
  9938 ;;		__i2c_stop
  9939 ;;		__i2c_wait_idle
  9940 ;;		_i2c_set_frequency
  9941 ;; This function is called by:
  9942 ;;		_display_update
  9943 ;; This function uses a non-reentrant model
  9944 ;;
  9945                           
  9946                           	psect	text41
  9947  006A10                     __ptext41:
  9948                           	opt stack 0
  9949  006A10                     _i2c_display_write_fixed:
  9950                           	opt stack 28
  9951                           
  9952                           ;i2c.c: 343: uint8_t pos;
  9953                           ;i2c.c: 346: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  9954                           
  9955                           ;incstack = 0
  9956  006A10  0E00               	movlw	0
  9957  006A12  EC8B  F03A         	call	_i2c_set_frequency
  9958                           
  9959                           ;i2c.c: 348: _i2c_wait_idle();
  9960  006A16  ECB1  F034         	call	__i2c_wait_idle	;wreg free
  9961                           
  9962                           ;i2c.c: 349: _i2c_start();
  9963  006A1A  ECDD  F03C         	call	__i2c_start	;wreg free
  9964                           
  9965                           ;i2c.c: 350: _i2c_wait_idle();
  9966  006A1E  ECB1  F034         	call	__i2c_wait_idle	;wreg free
  9967                           
  9968                           ;i2c.c: 351: _i2c_send(0b01111000);
  9969  006A22  0E78               	movlw	120
  9970  006A24  ECE1  F03C         	call	__i2c_send
  9971                           
  9972                           ;i2c.c: 352: _i2c_wait_idle();
  9973  006A28  ECB1  F034         	call	__i2c_wait_idle	;wreg free
  9974                           
  9975                           ;i2c.c: 353: _i2c_send(0b01000000);
  9976  006A2C  0E40               	movlw	64
  9977  006A2E  ECE1  F03C         	call	__i2c_send
  9978                           
  9979                           ;i2c.c: 354: _i2c_wait_idle();
  9980  006A32  ECB1  F034         	call	__i2c_wait_idle	;wreg free
  9981                           
  9982                           ;i2c.c: 357: for(pos=0; pos<length; ++pos)
  9983  006A36  0E00               	movlw	0
  9984  006A38  6E09               	movwf	i2c_display_write_fixed@pos,c
  9985  006A3A  D00E               	goto	l13388
  9986  006A3C                     l13382:
  9987                           
  9988                           ;i2c.c: 358: {
  9989                           ;i2c.c: 359: _i2c_send(data[pos]);
  9990  006A3C  5009               	movf	i2c_display_write_fixed@pos,w,c
  9991  006A3E  0D01               	mullw	1
  9992  006A40  50F3               	movf	prodl,w,c
  9993  006A42  2406               	addwf	i2c_display_write_fixed@data,w,c
  9994  006A44  6ED9               	movwf	fsr2l,c
  9995  006A46  50F4               	movf	prodh,w,c
  9996  006A48  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
  9997  006A4A  6EDA               	movwf	fsr2h,c
  9998  006A4C  50DF               	movf	indf2,w,c
  9999  006A4E  ECE1  F03C         	call	__i2c_send
 10000                           
 10001                           ;i2c.c: 360: _i2c_wait_idle();
 10002  006A52  ECB1  F034         	call	__i2c_wait_idle	;wreg free
 10003  006A56  2A09               	incf	i2c_display_write_fixed@pos,f,c
 10004  006A58                     l13388:
 10005  006A58  5008               	movf	i2c_display_write_fixed@length,w,c
 10006  006A5A  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 10007  006A5C  A0D8               	btfss	status,0,c
 10008  006A5E  D7EE               	goto	l13382
 10009                           
 10010                           ;i2c.c: 361: }
 10011                           ;i2c.c: 363: _i2c_stop();
 10012  006A60  ECD9  F03C         	call	__i2c_stop	;wreg free
 10013  006A64  0012               	return		;funcret
 10014  006A66                     __end_of_i2c_display_write_fixed:
 10015                           	opt stack 0
 10016                           tblptru	equ	0xFF8
 10017                           tblptrh	equ	0xFF7
 10018                           tblptrl	equ	0xFF6
 10019                           tablat	equ	0xFF5
 10020                           prodh	equ	0xFF4
 10021                           prodl	equ	0xFF3
 10022                           intcon	equ	0xFF2
 10023                           intcon2	equ	0xFF1
 10024                           intcon3	equ	0xFF0
 10025                           postinc0	equ	0xFEE
 10026                           wreg	equ	0xFE8
 10027                           indf1	equ	0xFE7
 10028                           postdec1	equ	0xFE5
 10029                           plusw1	equ	0xFE3
 10030                           fsr1h	equ	0xFE2
 10031                           fsr1l	equ	0xFE1
 10032                           indf2	equ	0xFDF
 10033                           postinc2	equ	0xFDE
 10034                           postdec2	equ	0xFDD
 10035                           plusw2	equ	0xFDB
 10036                           fsr2h	equ	0xFDA
 10037                           fsr2l	equ	0xFD9
 10038                           status	equ	0xFD8
 10039                           
 10040 ;; *************** function _i2c_display_cursor *****************
 10041 ;; Defined at:
 10042 ;;		line 301 in file "i2c.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;  line            1    wreg     unsigned char 
 10045 ;;  position        1   13[COMRAM] unsigned char 
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;  line            1   14[COMRAM] unsigned char 
 10048 ;;  address         1   15[COMRAM] unsigned char 
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  1    wreg      void 
 10051 ;; Registers used:
 10052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10058 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10061 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10062 ;;Total ram usage:        3 bytes
 10063 ;; Hardware stack levels used:    1
 10064 ;; Hardware stack levels required when called:    3
 10065 ;; This function calls:
 10066 ;;		__ic2_display_set_address
 10067 ;;		_i2c_set_frequency
 10068 ;; This function is called by:
 10069 ;;		_display_update
 10070 ;; This function uses a non-reentrant model
 10071 ;;
 10072                           
 10073                           	psect	text42
 10074  007656                     __ptext42:
 10075                           	opt stack 0
 10076  007656                     _i2c_display_cursor:
 10077                           	opt stack 26
 10078                           
 10079                           ;incstack = 0
 10080                           ;i2c_display_cursor@line stored from wreg
 10081  007656  6E0F               	movwf	i2c_display_cursor@line,c
 10082                           
 10083                           ;i2c.c: 303: uint8_t address;
 10084                           ;i2c.c: 306: line &= 0b11;
 10085  007658  0E03               	movlw	3
 10086  00765A  160F               	andwf	i2c_display_cursor@line,f,c
 10087                           
 10088                           ;i2c.c: 307: address = line<<5;
 10089  00765C  380F               	swapf	i2c_display_cursor@line,w,c
 10090  00765E  46E8               	rlncf	wreg,f,c
 10091  007660  0BE0               	andlw	224
 10092  007662  6E10               	movwf	i2c_display_cursor@address,c
 10093                           
 10094                           ;i2c.c: 308: position &= 0b11111;
 10095  007664  0E1F               	movlw	31
 10096  007666  160E               	andwf	i2c_display_cursor@position,f,c
 10097                           
 10098                           ;i2c.c: 309: address |= position;
 10099  007668  500E               	movf	i2c_display_cursor@position,w,c
 10100  00766A  1210               	iorwf	i2c_display_cursor@address,f,c
 10101                           
 10102                           ;i2c.c: 312: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 10103  00766C  0E00               	movlw	0
 10104  00766E  EC8B  F03A         	call	_i2c_set_frequency
 10105                           
 10106                           ;i2c.c: 315: _ic2_display_set_address(address);
 10107  007672  5010               	movf	i2c_display_cursor@address,w,c
 10108  007674  EC05  F03B         	call	__ic2_display_set_address
 10109  007678  0012               	return		;funcret
 10110  00767A                     __end_of_i2c_display_cursor:
 10111                           	opt stack 0
 10112                           tblptru	equ	0xFF8
 10113                           tblptrh	equ	0xFF7
 10114                           tblptrl	equ	0xFF6
 10115                           tablat	equ	0xFF5
 10116                           prodh	equ	0xFF4
 10117                           prodl	equ	0xFF3
 10118                           intcon	equ	0xFF2
 10119                           intcon2	equ	0xFF1
 10120                           intcon3	equ	0xFF0
 10121                           postinc0	equ	0xFEE
 10122                           wreg	equ	0xFE8
 10123                           indf1	equ	0xFE7
 10124                           postdec1	equ	0xFE5
 10125                           plusw1	equ	0xFE3
 10126                           fsr1h	equ	0xFE2
 10127                           fsr1l	equ	0xFE1
 10128                           indf2	equ	0xFDF
 10129                           postinc2	equ	0xFDE
 10130                           postdec2	equ	0xFDD
 10131                           plusw2	equ	0xFDB
 10132                           fsr2h	equ	0xFDA
 10133                           fsr2l	equ	0xFD9
 10134                           status	equ	0xFD8
 10135                           
 10136 ;; *************** function __ic2_display_set_address *****************
 10137 ;; Defined at:
 10138 ;;		line 288 in file "i2c.c"
 10139 ;; Parameters:    Size  Location     Type
 10140 ;;  address         1    wreg     unsigned char 
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;  address         1   10[COMRAM] unsigned char 
 10143 ;;  data_array      2   11[COMRAM] unsigned char [2]
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  1    wreg      void 
 10146 ;; Registers used:
 10147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10154 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10156 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10157 ;;Total ram usage:        3 bytes
 10158 ;; Hardware stack levels used:    1
 10159 ;; Hardware stack levels required when called:    2
 10160 ;; This function calls:
 10161 ;;		__i2c_write
 10162 ;;		_i2c_set_frequency
 10163 ;; This function is called by:
 10164 ;;		_i2c_display_cursor
 10165 ;; This function uses a non-reentrant model
 10166 ;;
 10167                           
 10168                           	psect	text43
 10169  00760A                     __ptext43:
 10170                           	opt stack 0
 10171  00760A                     __ic2_display_set_address:
 10172                           	opt stack 26
 10173                           
 10174                           ;incstack = 0
 10175                           ;__ic2_display_set_address@address stored from wreg
 10176  00760A  6E0B               	movwf	__ic2_display_set_address@address,c
 10177                           
 10178                           ;i2c.c: 290: uint8_t data_array[2];
 10179                           ;i2c.c: 291: data_array[0] = 0b00000000;
 10180  00760C  0E00               	movlw	0
 10181  00760E  6E0C               	movwf	__ic2_display_set_address@data_array,c
 10182                           
 10183                           ;i2c.c: 292: data_array[1] = 0b10000000 | address;
 10184  007610  500B               	movf	__ic2_display_set_address@address,w,c
 10185  007612  0980               	iorlw	128
 10186  007614  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
 10187                           
 10188                           ;i2c.c: 295: i2c_set_frequency(I2C_FREQUENCY_100kHz);
 10189  007616  0E00               	movlw	0
 10190  007618  EC8B  F03A         	call	_i2c_set_frequency
 10191                           
 10192                           ;i2c.c: 298: _i2c_write(0b01111000, &data_array[0], 2);
 10193  00761C  0E0C               	movlw	low __ic2_display_set_address@data_array
 10194  00761E  6E06               	movwf	__i2c_write@data,c
 10195  007620  0E00               	movlw	high __ic2_display_set_address@data_array
 10196  007622  6E07               	movwf	__i2c_write@data+1,c
 10197  007624  0E02               	movlw	2
 10198  007626  6E08               	movwf	__i2c_write@length,c
 10199  007628  0E78               	movlw	120
 10200  00762A  EC82  F037         	call	__i2c_write
 10201  00762E  0012               	return		;funcret
 10202  007630                     __end_of__ic2_display_set_address:
 10203                           	opt stack 0
 10204                           tblptru	equ	0xFF8
 10205                           tblptrh	equ	0xFF7
 10206                           tblptrl	equ	0xFF6
 10207                           tablat	equ	0xFF5
 10208                           prodh	equ	0xFF4
 10209                           prodl	equ	0xFF3
 10210                           intcon	equ	0xFF2
 10211                           intcon2	equ	0xFF1
 10212                           intcon3	equ	0xFF0
 10213                           postinc0	equ	0xFEE
 10214                           wreg	equ	0xFE8
 10215                           indf1	equ	0xFE7
 10216                           postdec1	equ	0xFE5
 10217                           plusw1	equ	0xFE3
 10218                           fsr1h	equ	0xFE2
 10219                           fsr1l	equ	0xFE1
 10220                           indf2	equ	0xFDF
 10221                           postinc2	equ	0xFDE
 10222                           postdec2	equ	0xFDD
 10223                           plusw2	equ	0xFDB
 10224                           fsr2h	equ	0xFDA
 10225                           fsr2l	equ	0xFD9
 10226                           status	equ	0xFD8
 10227                           
 10228 ;; *************** function _display_prepare *****************
 10229 ;; Defined at:
 10230 ;;		line 222 in file "display.c"
 10231 ;; Parameters:    Size  Location     Type
 10232 ;;  mode            1    wreg     unsigned char 
 10233 ;; Auto vars:     Size  Location     Type
 10234 ;;  mode            1   42[COMRAM] unsigned char 
 10235 ;; Return value:  Size  Location     Type
 10236 ;;                  1    wreg      void 
 10237 ;; Registers used:
 10238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10239 ;; Tracked objects:
 10240 ;;		On entry : 0/0
 10241 ;;		On exit  : 0/0
 10242 ;;		Unchanged: 0/0
 10243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10246 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10247 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10248 ;;Total ram usage:        3 bytes
 10249 ;; Hardware stack levels used:    1
 10250 ;; Hardware stack levels required when called:    6
 10251 ;; This function calls:
 10252 ;;		__display_checked
 10253 ;;		__display_clear
 10254 ;;		__display_done
 10255 ;;		__display_failed
 10256 ;;		__display_found
 10257 ;;		__display_programming
 10258 ;;		__display_start
 10259 ;;		__display_verify
 10260 ;; This function is called by:
 10261 ;;		_main
 10262 ;; This function uses a non-reentrant model
 10263 ;;
 10264                           
 10265                           	psect	text44
 10266  00522C                     __ptext44:
 10267                           	opt stack 0
 10268  00522C                     _display_prepare:
 10269                           	opt stack 24
 10270                           
 10271                           ;incstack = 0
 10272                           ;display_prepare@mode stored from wreg
 10273  00522C  6E2B               	movwf	display_prepare@mode,c
 10274                           
 10275                           ;display.c: 224: _display_clear();
 10276  00522E  EC3A  F037         	call	__display_clear	;wreg free
 10277                           
 10278                           ;display.c: 226: switch(mode&0xF0)
 10279  005232  D015               	goto	l14484
 10280  005234                     l14468:
 10281                           
 10282                           ;display.c: 229: _display_start();
 10283  005234  EC72  F01C         	call	__display_start	;wreg free
 10284                           
 10285                           ;display.c: 230: break;
 10286  005238  D03B               	goto	l14488
 10287  00523A                     l14470:
 10288                           
 10289                           ;display.c: 233: _display_found();
 10290  00523A  ECD4  F016         	call	__display_found	;wreg free
 10291                           
 10292                           ;display.c: 234: break;
 10293  00523E  D038               	goto	l14488
 10294  005240                     l14472:
 10295                           
 10296                           ;display.c: 237: _display_verify();
 10297  005240  ECBF  F01D         	call	__display_verify	;wreg free
 10298                           
 10299                           ;display.c: 238: break;
 10300  005244  D035               	goto	l14488
 10301  005246                     l14474:
 10302                           
 10303                           ;display.c: 241: _display_checked();
 10304  005246  EC46  F01A         	call	__display_checked	;wreg free
 10305                           
 10306                           ;display.c: 242: break;
 10307  00524A  D032               	goto	l14488
 10308  00524C                     l14476:
 10309                           
 10310                           ;display.c: 245: _display_failed();
 10311  00524C  ECE8  F00C         	call	__display_failed	;wreg free
 10312                           
 10313                           ;display.c: 246: break;
 10314  005250  D02F               	goto	l14488
 10315  005252                     l14478:
 10316                           
 10317                           ;display.c: 249: _display_programming();
 10318  005252  ECC3  F017         	call	__display_programming	;wreg free
 10319                           
 10320                           ;display.c: 250: break;
 10321  005256  D02C               	goto	l14488
 10322  005258                     l14480:
 10323                           
 10324                           ;display.c: 253: _display_done();
 10325  005258  EC04  F01B         	call	__display_done	;wreg free
 10326                           
 10327                           ;display.c: 255: }
 10328                           
 10329                           ;display.c: 254: break;
 10330  00525C  D029               	goto	l14488
 10331  00525E                     l14484:
 10332  00525E  502B               	movf	display_prepare@mode,w,c
 10333  005260  0BF0               	andlw	240
 10334  005262  6E29               	movwf	??_display_prepare& (0+255),c
 10335  005264  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 10336                           
 10337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10338                           ; Switch size 1, requested type "space"
 10339                           ; Number of cases is 1, Range of values is 0 to 0
 10340                           ; switch strategies available:
 10341                           ; Name         Instructions Cycles
 10342                           ; simple_byte            4     3 (average)
 10343                           ;	Chosen strategy is simple_byte
 10344  005266  502A               	movf	??_display_prepare+1,w,c
 10345  005268  0A00               	xorlw	0	; case 0
 10346  00526A  A4D8               	btfss	status,2,c
 10347  00526C  D021               	goto	l14488
 10348                           
 10349                           ; Switch size 1, requested type "space"
 10350                           ; Number of cases is 7, Range of values is 0 to 96
 10351                           ; switch strategies available:
 10352                           ; Name         Instructions Cycles
 10353                           ; simple_byte           22    12 (average)
 10354                           ;	Chosen strategy is simple_byte
 10355  00526E  5029               	movf	??_display_prepare,w,c
 10356  005270  0A00               	xorlw	0	; case 0
 10357  005272  B4D8               	btfsc	status,2,c
 10358  005274  D7DF               	goto	l14468
 10359  005276  0A10               	xorlw	16	; case 16
 10360  005278  B4D8               	btfsc	status,2,c
 10361  00527A  D7DF               	goto	l14470
 10362  00527C  0A30               	xorlw	48	; case 32
 10363  00527E  B4D8               	btfsc	status,2,c
 10364  005280  D7DF               	goto	l14472
 10365  005282  0A10               	xorlw	16	; case 48
 10366  005284  B4D8               	btfsc	status,2,c
 10367  005286  D7DF               	goto	l14474
 10368  005288  0A70               	xorlw	112	; case 64
 10369  00528A  B4D8               	btfsc	status,2,c
 10370  00528C  D7DF               	goto	l14476
 10371  00528E  0A10               	xorlw	16	; case 80
 10372  005290  B4D8               	btfsc	status,2,c
 10373  005292  D7DF               	goto	l14478
 10374  005294  0A30               	xorlw	48	; case 96
 10375  005296  B4D8               	btfsc	status,2,c
 10376  005298  D7DF               	goto	l14480
 10377                           
 10378                           ;display.c: 258: switch((os.timeSlot>>5)&0b11)
 10379  00529A  D00A               	goto	l14488
 10380  00529C                     l14486:
 10381                           
 10382                           ;display.c: 261: display_content[0][17] = '.';
 10383  00529C  0E2E               	movlw	46
 10384  00529E  0102               	movlb	2	; () banked
 10385  0052A0  6F75               	movwf	(_display_content+17)& (0+255),b
 10386  0052A2                     l1707:
 10387                           
 10388                           ;display.c: 264: display_content[0][16] = '.';
 10389  0052A2  0E2E               	movlw	46
 10390  0052A4  0102               	movlb	2	; () banked
 10391  0052A6  6F74               	movwf	(_display_content+16)& (0+255),b
 10392  0052A8                     l1708:
 10393                           
 10394                           ;display.c: 267: display_content[0][15] = '.';
 10395  0052A8  0E2E               	movlw	46
 10396  0052AA  0102               	movlb	2	; () banked
 10397  0052AC  6F73               	movwf	(_display_content+15)& (0+255),b
 10398                           
 10399                           ;display.c: 269: }
 10400  0052AE  D015               	goto	l1709
 10401  0052B0                     l14488:
 10402  0052B0  0100               	movlb	0	; () banked
 10403  0052B2  39E4               	swapf	(_os+2)& (0+255),w,b	;volatile
 10404  0052B4  42E8               	rrncf	wreg,f,c
 10405  0052B6  0B07               	andlw	7
 10406  0052B8  0B03               	andlw	3
 10407  0052BA  6E29               	movwf	??_display_prepare& (0+255),c
 10408  0052BC  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 10409                           
 10410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10411                           ; Switch size 1, requested type "space"
 10412                           ; Number of cases is 1, Range of values is 0 to 0
 10413                           ; switch strategies available:
 10414                           ; Name         Instructions Cycles
 10415                           ; simple_byte            4     3 (average)
 10416                           ;	Chosen strategy is simple_byte
 10417  0052BE  502A               	movf	??_display_prepare+1,w,c
 10418  0052C0  0A00               	xorlw	0	; case 0
 10419  0052C2  A4D8               	btfss	status,2,c
 10420  0052C4  D00A               	goto	l1709
 10421                           
 10422                           ; BSR set to: 0
 10423                           ; Switch size 1, requested type "space"
 10424                           ; Number of cases is 3, Range of values is 1 to 3
 10425                           ; switch strategies available:
 10426                           ; Name         Instructions Cycles
 10427                           ; simple_byte           10     6 (average)
 10428                           ;	Chosen strategy is simple_byte
 10429  0052C6  5029               	movf	??_display_prepare,w,c
 10430  0052C8  0A01               	xorlw	1	; case 1
 10431  0052CA  B4D8               	btfsc	status,2,c
 10432  0052CC  D7ED               	goto	l1708
 10433  0052CE  0A03               	xorlw	3	; case 2
 10434  0052D0  B4D8               	btfsc	status,2,c
 10435  0052D2  D7E7               	goto	l1707
 10436  0052D4  0A01               	xorlw	1	; case 3
 10437  0052D6  B4D8               	btfsc	status,2,c
 10438  0052D8  D7E1               	goto	l14486
 10439  0052DA                     l1709:
 10440                           
 10441                           ;display.c: 274: if(INTCONbits.GIE)
 10442  0052DA  AEF2               	btfss	intcon,7,c	;volatile
 10443  0052DC  D003               	goto	l14492
 10444                           
 10445                           ;display.c: 275: {
 10446                           ;display.c: 276: display_content[0][18] = 'I';
 10447  0052DE  0E49               	movlw	73
 10448  0052E0  0102               	movlb	2	; () banked
 10449  0052E2  6F76               	movwf	(_display_content+18)& (0+255),b
 10450  0052E4                     l14492:
 10451                           
 10452                           ;display.c: 277: }
 10453                           ;display.c: 279: if(os.buttonCount>0)
 10454  0052E4  0100               	movlb	0	; () banked
 10455  0052E6  51E3               	movf	(_os+1)& (0+255),w,b	;volatile
 10456  0052E8  0A80               	xorlw	128
 10457  0052EA  0F7F               	addlw	-129
 10458  0052EC  A0D8               	btfss	status,0,c
 10459  0052EE  0012               	return	
 10460                           
 10461                           ; BSR set to: 0
 10462                           ;display.c: 280: {
 10463                           ;display.c: 281: display_content[3][19] = 'X';
 10464  0052F0  0E58               	movlw	88
 10465  0052F2  0102               	movlb	2	; () banked
 10466  0052F4  6FB3               	movwf	(_display_content+79)& (0+255),b
 10467  0052F6  0012               	return	
 10468  0052F8                     __end_of_display_prepare:
 10469                           	opt stack 0
 10470                           tblptru	equ	0xFF8
 10471                           tblptrh	equ	0xFF7
 10472                           tblptrl	equ	0xFF6
 10473                           tablat	equ	0xFF5
 10474                           prodh	equ	0xFF4
 10475                           prodl	equ	0xFF3
 10476                           intcon	equ	0xFF2
 10477                           intcon2	equ	0xFF1
 10478                           intcon3	equ	0xFF0
 10479                           postinc0	equ	0xFEE
 10480                           wreg	equ	0xFE8
 10481                           indf1	equ	0xFE7
 10482                           postdec1	equ	0xFE5
 10483                           plusw1	equ	0xFE3
 10484                           fsr1h	equ	0xFE2
 10485                           fsr1l	equ	0xFE1
 10486                           indf2	equ	0xFDF
 10487                           postinc2	equ	0xFDE
 10488                           postdec2	equ	0xFDD
 10489                           plusw2	equ	0xFDB
 10490                           fsr2h	equ	0xFDA
 10491                           fsr2l	equ	0xFD9
 10492                           status	equ	0xFD8
 10493                           
 10494 ;; *************** function __display_verify *****************
 10495 ;; Defined at:
 10496 ;;		line 329 in file "display.c"
 10497 ;; Parameters:    Size  Location     Type
 10498 ;;		None
 10499 ;; Auto vars:     Size  Location     Type
 10500 ;;  cntr            1   32[COMRAM] unsigned char 
 10501 ;;  start           1    0        unsigned char 
 10502 ;; Return value:  Size  Location     Type
 10503 ;;                  1    wreg      void 
 10504 ;; Registers used:
 10505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10506 ;; Tracked objects:
 10507 ;;		On entry : 0/0
 10508 ;;		On exit  : 0/0
 10509 ;;		Unchanged: 0/0
 10510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10513 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10514 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10515 ;;Total ram usage:        3 bytes
 10516 ;; Hardware stack levels used:    1
 10517 ;; Hardware stack levels required when called:    4
 10518 ;; This function calls:
 10519 ;;		__display_itoa_u16
 10520 ;;		_bootloader_get_entries
 10521 ;; This function is called by:
 10522 ;;		_display_prepare
 10523 ;; This function uses a non-reentrant model
 10524 ;;
 10525                           
 10526                           	psect	text45
 10527  003B7E                     __ptext45:
 10528                           	opt stack 0
 10529  003B7E                     __display_verify:
 10530                           	opt stack 25
 10531                           
 10532                           ;display.c: 331: uint8_t cntr;
 10533                           ;display.c: 332: uint8_t start;
 10534                           ;display.c: 333: cntr = 0;
 10535                           
 10536                           ;incstack = 0
 10537  003B7E  0E00               	movlw	0
 10538  003B80  6E21               	movwf	__display_verify@cntr,c
 10539                           
 10540                           ;display.c: 334: while(verify_line1[cntr])
 10541  003B82  D017               	goto	l13554
 10542  003B84                     l13550:
 10543                           
 10544                           ;display.c: 335: display_content[0][cntr] = verify_line1[cntr++];
 10545  003B84  5021               	movf	__display_verify@cntr,w,c
 10546  003B86  0D01               	mullw	1
 10547  003B88  0E09               	movlw	low _verify_line1
 10548  003B8A  24F3               	addwf	prodl,w,c
 10549  003B8C  6EF6               	movwf	tblptrl,c
 10550  003B8E  0E8E               	movlw	high _verify_line1
 10551  003B90  20F4               	addwfc	prodh,w,c
 10552  003B92  6EF7               	movwf	tblptrh,c
 10553  003B94                     	if	1	;There are 3 active tblptr bytes
 10554  003B94  6AF8               	clrf	tblptru,c
 10555  003B96  0E00               	movlw	low (__mediumconst shr (0+16))
 10556  003B98  22F8               	addwfc	tblptru,f,c
 10557  003B9A                     	endif
 10558  003B9A  5021               	movf	__display_verify@cntr,w,c
 10559  003B9C  0D01               	mullw	1
 10560  003B9E  0E64               	movlw	low _display_content
 10561  003BA0  24F3               	addwf	prodl,w,c
 10562  003BA2  6ED9               	movwf	fsr2l,c
 10563  003BA4  0E02               	movlw	high _display_content
 10564  003BA6  20F4               	addwfc	prodh,w,c
 10565  003BA8  6EDA               	movwf	fsr2h,c
 10566  003BAA  0008               	tblrd		*
 10567  003BAC  CFF5 FFDF          	movff	tablat,indf2
 10568  003BB0  2A21               	incf	__display_verify@cntr,f,c
 10569  003BB2                     l13554:
 10570  003BB2  5021               	movf	__display_verify@cntr,w,c
 10571  003BB4  0D01               	mullw	1
 10572  003BB6  0E09               	movlw	low _verify_line1
 10573  003BB8  24F3               	addwf	prodl,w,c
 10574  003BBA  6EF6               	movwf	tblptrl,c
 10575  003BBC  0E8E               	movlw	high _verify_line1
 10576  003BBE  20F4               	addwfc	prodh,w,c
 10577  003BC0  6EF7               	movwf	tblptrh,c
 10578  003BC2                     	if	1	;There are 3 active tblptr bytes
 10579  003BC2  6AF8               	clrf	tblptru,c
 10580  003BC4  0E00               	movlw	low (__mediumconst shr (0+16))
 10581  003BC6  22F8               	addwfc	tblptru,f,c
 10582  003BC8                     	endif
 10583  003BC8  0008               	tblrd		*
 10584  003BCA  50F5               	movf	tablat,w,c
 10585  003BCC  0900               	iorlw	0
 10586  003BCE  A4D8               	btfss	status,2,c
 10587  003BD0  D7D9               	goto	l13550
 10588                           
 10589                           ;display.c: 336: cntr = 0;
 10590  003BD2  0E00               	movlw	0
 10591  003BD4  6E21               	movwf	__display_verify@cntr,c
 10592                           
 10593                           ;display.c: 337: while(verify_line2[cntr])
 10594  003BD6  D017               	goto	l13562
 10595  003BD8                     l13558:
 10596                           
 10597                           ;display.c: 338: display_content[1][cntr] = verify_line2[cntr++];
 10598  003BD8  5021               	movf	__display_verify@cntr,w,c
 10599  003BDA  0D01               	mullw	1
 10600  003BDC  0E55               	movlw	low _verify_line2
 10601  003BDE  24F3               	addwf	prodl,w,c
 10602  003BE0  6EF6               	movwf	tblptrl,c
 10603  003BE2  0E8E               	movlw	high _verify_line2
 10604  003BE4  20F4               	addwfc	prodh,w,c
 10605  003BE6  6EF7               	movwf	tblptrh,c
 10606  003BE8                     	if	1	;There are 3 active tblptr bytes
 10607  003BE8  6AF8               	clrf	tblptru,c
 10608  003BEA  0E00               	movlw	low (__mediumconst shr (0+16))
 10609  003BEC  22F8               	addwfc	tblptru,f,c
 10610  003BEE                     	endif
 10611  003BEE  5021               	movf	__display_verify@cntr,w,c
 10612  003BF0  0D01               	mullw	1
 10613  003BF2  0E78               	movlw	low (_display_content+20)
 10614  003BF4  24F3               	addwf	prodl,w,c
 10615  003BF6  6ED9               	movwf	fsr2l,c
 10616  003BF8  0E02               	movlw	high (_display_content+20)
 10617  003BFA  20F4               	addwfc	prodh,w,c
 10618  003BFC  6EDA               	movwf	fsr2h,c
 10619  003BFE  0008               	tblrd		*
 10620  003C00  CFF5 FFDF          	movff	tablat,indf2
 10621  003C04  2A21               	incf	__display_verify@cntr,f,c
 10622  003C06                     l13562:
 10623  003C06  5021               	movf	__display_verify@cntr,w,c
 10624  003C08  0D01               	mullw	1
 10625  003C0A  0E55               	movlw	low _verify_line2
 10626  003C0C  24F3               	addwf	prodl,w,c
 10627  003C0E  6EF6               	movwf	tblptrl,c
 10628  003C10  0E8E               	movlw	high _verify_line2
 10629  003C12  20F4               	addwfc	prodh,w,c
 10630  003C14  6EF7               	movwf	tblptrh,c
 10631  003C16                     	if	1	;There are 3 active tblptr bytes
 10632  003C16  6AF8               	clrf	tblptru,c
 10633  003C18  0E00               	movlw	low (__mediumconst shr (0+16))
 10634  003C1A  22F8               	addwfc	tblptru,f,c
 10635  003C1C                     	endif
 10636  003C1C  0008               	tblrd		*
 10637  003C1E  50F5               	movf	tablat,w,c
 10638  003C20  0900               	iorlw	0
 10639  003C22  A4D8               	btfss	status,2,c
 10640  003C24  D7D9               	goto	l13558
 10641                           
 10642                           ;display.c: 339: cntr = 0;
 10643  003C26  0E00               	movlw	0
 10644  003C28  6E21               	movwf	__display_verify@cntr,c
 10645                           
 10646                           ;display.c: 340: while(verify_line3[cntr])
 10647  003C2A  D017               	goto	l13570
 10648  003C2C                     l13566:
 10649                           
 10650                           ;display.c: 341: display_content[2][cntr] = verify_line3[cntr++];
 10651  003C2C  5021               	movf	__display_verify@cntr,w,c
 10652  003C2E  0D01               	mullw	1
 10653  003C30  0E8A               	movlw	low _verify_line3
 10654  003C32  24F3               	addwf	prodl,w,c
 10655  003C34  6EF6               	movwf	tblptrl,c
 10656  003C36  0E8E               	movlw	high _verify_line3
 10657  003C38  20F4               	addwfc	prodh,w,c
 10658  003C3A  6EF7               	movwf	tblptrh,c
 10659  003C3C                     	if	1	;There are 3 active tblptr bytes
 10660  003C3C  6AF8               	clrf	tblptru,c
 10661  003C3E  0E00               	movlw	low (__mediumconst shr (0+16))
 10662  003C40  22F8               	addwfc	tblptru,f,c
 10663  003C42                     	endif
 10664  003C42  5021               	movf	__display_verify@cntr,w,c
 10665  003C44  0D01               	mullw	1
 10666  003C46  0E8C               	movlw	low (_display_content+40)
 10667  003C48  24F3               	addwf	prodl,w,c
 10668  003C4A  6ED9               	movwf	fsr2l,c
 10669  003C4C  0E02               	movlw	high (_display_content+40)
 10670  003C4E  20F4               	addwfc	prodh,w,c
 10671  003C50  6EDA               	movwf	fsr2h,c
 10672  003C52  0008               	tblrd		*
 10673  003C54  CFF5 FFDF          	movff	tablat,indf2
 10674  003C58  2A21               	incf	__display_verify@cntr,f,c
 10675  003C5A                     l13570:
 10676  003C5A  5021               	movf	__display_verify@cntr,w,c
 10677  003C5C  0D01               	mullw	1
 10678  003C5E  0E8A               	movlw	low _verify_line3
 10679  003C60  24F3               	addwf	prodl,w,c
 10680  003C62  6EF6               	movwf	tblptrl,c
 10681  003C64  0E8E               	movlw	high _verify_line3
 10682  003C66  20F4               	addwfc	prodh,w,c
 10683  003C68  6EF7               	movwf	tblptrh,c
 10684  003C6A                     	if	1	;There are 3 active tblptr bytes
 10685  003C6A  6AF8               	clrf	tblptru,c
 10686  003C6C  0E00               	movlw	low (__mediumconst shr (0+16))
 10687  003C6E  22F8               	addwfc	tblptru,f,c
 10688  003C70                     	endif
 10689  003C70  0008               	tblrd		*
 10690  003C72  50F5               	movf	tablat,w,c
 10691  003C74  0900               	iorlw	0
 10692  003C76  A4D8               	btfss	status,2,c
 10693  003C78  D7D9               	goto	l13566
 10694                           
 10695                           ;display.c: 342: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 10696  003C7A  ECC0  F03C         	call	_bootloader_get_entries	;wreg free
 10697  003C7E  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 10698  003C82  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 10699  003C86  6A1B               	clrf	__display_itoa_u16@value+2,c
 10700  003C88  6A1C               	clrf	__display_itoa_u16@value+3,c
 10701  003C8A  5021               	movf	__display_verify@cntr,w,c
 10702  003C8C  6E1F               	movwf	??__display_verify& (0+255),c
 10703  003C8E  6A20               	clrf	(??__display_verify+1)& (0+255),c
 10704  003C90  0E01               	movlw	1
 10705  003C92  261F               	addwf	??__display_verify,f,c
 10706  003C94  0E00               	movlw	0
 10707  003C96  2220               	addwfc	??__display_verify+1,f,c
 10708  003C98  0E8C               	movlw	low (_display_content+40)
 10709  003C9A  241F               	addwf	??__display_verify,w,c
 10710  003C9C  6E1D               	movwf	__display_itoa_u16@text,c
 10711  003C9E  0E02               	movlw	high (_display_content+40)
 10712  003CA0  2020               	addwfc	??__display_verify+1,w,c
 10713  003CA2  6E1E               	movwf	__display_itoa_u16@text+1,c
 10714  003CA4  EC7C  F029         	call	__display_itoa_u16	;wreg free
 10715  003CA8  0012               	return		;funcret
 10716  003CAA                     __end_of__display_verify:
 10717                           	opt stack 0
 10718                           tblptru	equ	0xFF8
 10719                           tblptrh	equ	0xFF7
 10720                           tblptrl	equ	0xFF6
 10721                           tablat	equ	0xFF5
 10722                           prodh	equ	0xFF4
 10723                           prodl	equ	0xFF3
 10724                           intcon	equ	0xFF2
 10725                           intcon2	equ	0xFF1
 10726                           intcon3	equ	0xFF0
 10727                           postinc0	equ	0xFEE
 10728                           wreg	equ	0xFE8
 10729                           indf1	equ	0xFE7
 10730                           postdec1	equ	0xFE5
 10731                           plusw1	equ	0xFE3
 10732                           fsr1h	equ	0xFE2
 10733                           fsr1l	equ	0xFE1
 10734                           indf2	equ	0xFDF
 10735                           postinc2	equ	0xFDE
 10736                           postdec2	equ	0xFDD
 10737                           plusw2	equ	0xFDB
 10738                           fsr2h	equ	0xFDA
 10739                           fsr2l	equ	0xFD9
 10740                           status	equ	0xFD8
 10741                           
 10742 ;; *************** function __display_start *****************
 10743 ;; Defined at:
 10744 ;;		line 285 in file "display.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;		None
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;  cntr            1    0[COMRAM] unsigned char 
 10749 ;; Return value:  Size  Location     Type
 10750 ;;                  1    wreg      void 
 10751 ;; Registers used:
 10752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 10753 ;; Tracked objects:
 10754 ;;		On entry : 0/0
 10755 ;;		On exit  : 0/0
 10756 ;;		Unchanged: 0/0
 10757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10761 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10762 ;;Total ram usage:        1 bytes
 10763 ;; Hardware stack levels used:    1
 10764 ;; This function calls:
 10765 ;;		Nothing
 10766 ;; This function is called by:
 10767 ;;		_display_prepare
 10768 ;; This function uses a non-reentrant model
 10769 ;;
 10770                           
 10771                           	psect	text46
 10772  0038E4                     __ptext46:
 10773                           	opt stack 0
 10774  0038E4                     __display_start:
 10775                           	opt stack 29
 10776                           
 10777                           ;display.c: 287: uint8_t cntr;
 10778                           ;display.c: 288: cntr = 0;
 10779                           
 10780                           ;incstack = 0
 10781  0038E4  0E00               	movlw	0
 10782  0038E6  6E01               	movwf	__display_start@cntr,c
 10783                           
 10784                           ;display.c: 289: while(start_line1[cntr])
 10785  0038E8  D017               	goto	l13480
 10786  0038EA                     l13476:
 10787                           
 10788                           ;display.c: 290: display_content[0][cntr] = start_line1[cntr++];
 10789  0038EA  5001               	movf	__display_start@cntr,w,c
 10790  0038EC  0D01               	mullw	1
 10791  0038EE  0E88               	movlw	low _start_line1
 10792  0038F0  24F3               	addwf	prodl,w,c
 10793  0038F2  6EF6               	movwf	tblptrl,c
 10794  0038F4  0E8D               	movlw	high _start_line1
 10795  0038F6  20F4               	addwfc	prodh,w,c
 10796  0038F8  6EF7               	movwf	tblptrh,c
 10797  0038FA                     	if	1	;There are 3 active tblptr bytes
 10798  0038FA  6AF8               	clrf	tblptru,c
 10799  0038FC  0E00               	movlw	low (__mediumconst shr (0+16))
 10800  0038FE  22F8               	addwfc	tblptru,f,c
 10801  003900                     	endif
 10802  003900  5001               	movf	__display_start@cntr,w,c
 10803  003902  0D01               	mullw	1
 10804  003904  0E64               	movlw	low _display_content
 10805  003906  24F3               	addwf	prodl,w,c
 10806  003908  6ED9               	movwf	fsr2l,c
 10807  00390A  0E02               	movlw	high _display_content
 10808  00390C  20F4               	addwfc	prodh,w,c
 10809  00390E  6EDA               	movwf	fsr2h,c
 10810  003910  0008               	tblrd		*
 10811  003912  CFF5 FFDF          	movff	tablat,indf2
 10812  003916  2A01               	incf	__display_start@cntr,f,c
 10813  003918                     l13480:
 10814  003918  5001               	movf	__display_start@cntr,w,c
 10815  00391A  0D01               	mullw	1
 10816  00391C  0E88               	movlw	low _start_line1
 10817  00391E  24F3               	addwf	prodl,w,c
 10818  003920  6EF6               	movwf	tblptrl,c
 10819  003922  0E8D               	movlw	high _start_line1
 10820  003924  20F4               	addwfc	prodh,w,c
 10821  003926  6EF7               	movwf	tblptrh,c
 10822  003928                     	if	1	;There are 3 active tblptr bytes
 10823  003928  6AF8               	clrf	tblptru,c
 10824  00392A  0E00               	movlw	low (__mediumconst shr (0+16))
 10825  00392C  22F8               	addwfc	tblptru,f,c
 10826  00392E                     	endif
 10827  00392E  0008               	tblrd		*
 10828  003930  50F5               	movf	tablat,w,c
 10829  003932  0900               	iorlw	0
 10830  003934  A4D8               	btfss	status,2,c
 10831  003936  D7D9               	goto	l13476
 10832                           
 10833                           ;display.c: 291: cntr = 0;
 10834  003938  0E00               	movlw	0
 10835  00393A  6E01               	movwf	__display_start@cntr,c
 10836                           
 10837                           ;display.c: 292: while(start_line2[cntr])
 10838  00393C  D017               	goto	l13488
 10839  00393E                     l13484:
 10840                           
 10841                           ;display.c: 293: display_content[1][cntr] = start_line2[cntr++];
 10842  00393E  5001               	movf	__display_start@cntr,w,c
 10843  003940  0D01               	mullw	1
 10844  003942  0E77               	movlw	low _start_line2
 10845  003944  24F3               	addwf	prodl,w,c
 10846  003946  6EF6               	movwf	tblptrl,c
 10847  003948  0E8D               	movlw	high _start_line2
 10848  00394A  20F4               	addwfc	prodh,w,c
 10849  00394C  6EF7               	movwf	tblptrh,c
 10850  00394E                     	if	1	;There are 3 active tblptr bytes
 10851  00394E  6AF8               	clrf	tblptru,c
 10852  003950  0E00               	movlw	low (__mediumconst shr (0+16))
 10853  003952  22F8               	addwfc	tblptru,f,c
 10854  003954                     	endif
 10855  003954  5001               	movf	__display_start@cntr,w,c
 10856  003956  0D01               	mullw	1
 10857  003958  0E78               	movlw	low (_display_content+20)
 10858  00395A  24F3               	addwf	prodl,w,c
 10859  00395C  6ED9               	movwf	fsr2l,c
 10860  00395E  0E02               	movlw	high (_display_content+20)
 10861  003960  20F4               	addwfc	prodh,w,c
 10862  003962  6EDA               	movwf	fsr2h,c
 10863  003964  0008               	tblrd		*
 10864  003966  CFF5 FFDF          	movff	tablat,indf2
 10865  00396A  2A01               	incf	__display_start@cntr,f,c
 10866  00396C                     l13488:
 10867  00396C  5001               	movf	__display_start@cntr,w,c
 10868  00396E  0D01               	mullw	1
 10869  003970  0E77               	movlw	low _start_line2
 10870  003972  24F3               	addwf	prodl,w,c
 10871  003974  6EF6               	movwf	tblptrl,c
 10872  003976  0E8D               	movlw	high _start_line2
 10873  003978  20F4               	addwfc	prodh,w,c
 10874  00397A  6EF7               	movwf	tblptrh,c
 10875  00397C                     	if	1	;There are 3 active tblptr bytes
 10876  00397C  6AF8               	clrf	tblptru,c
 10877  00397E  0E00               	movlw	low (__mediumconst shr (0+16))
 10878  003980  22F8               	addwfc	tblptru,f,c
 10879  003982                     	endif
 10880  003982  0008               	tblrd		*
 10881  003984  50F5               	movf	tablat,w,c
 10882  003986  0900               	iorlw	0
 10883  003988  A4D8               	btfss	status,2,c
 10884  00398A  D7D9               	goto	l13484
 10885                           
 10886                           ;display.c: 294: cntr = 0;
 10887  00398C  0E00               	movlw	0
 10888  00398E  6E01               	movwf	__display_start@cntr,c
 10889                           
 10890                           ;display.c: 295: while(start_line3[cntr])
 10891  003990  D017               	goto	l13496
 10892  003992                     l13492:
 10893                           
 10894                           ;display.c: 296: display_content[2][cntr] = start_line3[cntr++];
 10895  003992  5001               	movf	__display_start@cntr,w,c
 10896  003994  0D01               	mullw	1
 10897  003996  0EF6               	movlw	low _start_line3
 10898  003998  24F3               	addwf	prodl,w,c
 10899  00399A  6EF6               	movwf	tblptrl,c
 10900  00399C  0E8C               	movlw	high _start_line3
 10901  00399E  20F4               	addwfc	prodh,w,c
 10902  0039A0  6EF7               	movwf	tblptrh,c
 10903  0039A2                     	if	1	;There are 3 active tblptr bytes
 10904  0039A2  6AF8               	clrf	tblptru,c
 10905  0039A4  0E00               	movlw	low (__mediumconst shr (0+16))
 10906  0039A6  22F8               	addwfc	tblptru,f,c
 10907  0039A8                     	endif
 10908  0039A8  5001               	movf	__display_start@cntr,w,c
 10909  0039AA  0D01               	mullw	1
 10910  0039AC  0E8C               	movlw	low (_display_content+40)
 10911  0039AE  24F3               	addwf	prodl,w,c
 10912  0039B0  6ED9               	movwf	fsr2l,c
 10913  0039B2  0E02               	movlw	high (_display_content+40)
 10914  0039B4  20F4               	addwfc	prodh,w,c
 10915  0039B6  6EDA               	movwf	fsr2h,c
 10916  0039B8  0008               	tblrd		*
 10917  0039BA  CFF5 FFDF          	movff	tablat,indf2
 10918  0039BE  2A01               	incf	__display_start@cntr,f,c
 10919  0039C0                     l13496:
 10920  0039C0  5001               	movf	__display_start@cntr,w,c
 10921  0039C2  0D01               	mullw	1
 10922  0039C4  0EF6               	movlw	low _start_line3
 10923  0039C6  24F3               	addwf	prodl,w,c
 10924  0039C8  6EF6               	movwf	tblptrl,c
 10925  0039CA  0E8C               	movlw	high _start_line3
 10926  0039CC  20F4               	addwfc	prodh,w,c
 10927  0039CE  6EF7               	movwf	tblptrh,c
 10928  0039D0                     	if	1	;There are 3 active tblptr bytes
 10929  0039D0  6AF8               	clrf	tblptru,c
 10930  0039D2  0E00               	movlw	low (__mediumconst shr (0+16))
 10931  0039D4  22F8               	addwfc	tblptru,f,c
 10932  0039D6                     	endif
 10933  0039D6  0008               	tblrd		*
 10934  0039D8  50F5               	movf	tablat,w,c
 10935  0039DA  0900               	iorlw	0
 10936  0039DC  A4D8               	btfss	status,2,c
 10937  0039DE  D7D9               	goto	l13492
 10938                           
 10939                           ;display.c: 297: cntr = 0;
 10940  0039E0  0E00               	movlw	0
 10941  0039E2  6E01               	movwf	__display_start@cntr,c
 10942                           
 10943                           ;display.c: 298: while(start_line4[cntr])
 10944  0039E4  D017               	goto	l13504
 10945  0039E6                     l13500:
 10946                           
 10947                           ;display.c: 299: display_content[3][cntr] = start_line4[cntr++];
 10948  0039E6  5001               	movf	__display_start@cntr,w,c
 10949  0039E8  0D01               	mullw	1
 10950  0039EA  0E62               	movlw	low _start_line4
 10951  0039EC  24F3               	addwf	prodl,w,c
 10952  0039EE  6EF6               	movwf	tblptrl,c
 10953  0039F0  0E8E               	movlw	high _start_line4
 10954  0039F2  20F4               	addwfc	prodh,w,c
 10955  0039F4  6EF7               	movwf	tblptrh,c
 10956  0039F6                     	if	1	;There are 3 active tblptr bytes
 10957  0039F6  6AF8               	clrf	tblptru,c
 10958  0039F8  0E00               	movlw	low (__mediumconst shr (0+16))
 10959  0039FA  22F8               	addwfc	tblptru,f,c
 10960  0039FC                     	endif
 10961  0039FC  5001               	movf	__display_start@cntr,w,c
 10962  0039FE  0D01               	mullw	1
 10963  003A00  0EA0               	movlw	low (_display_content+60)
 10964  003A02  24F3               	addwf	prodl,w,c
 10965  003A04  6ED9               	movwf	fsr2l,c
 10966  003A06  0E02               	movlw	high (_display_content+60)
 10967  003A08  20F4               	addwfc	prodh,w,c
 10968  003A0A  6EDA               	movwf	fsr2h,c
 10969  003A0C  0008               	tblrd		*
 10970  003A0E  CFF5 FFDF          	movff	tablat,indf2
 10971  003A12  2A01               	incf	__display_start@cntr,f,c
 10972  003A14                     l13504:
 10973  003A14  5001               	movf	__display_start@cntr,w,c
 10974  003A16  0D01               	mullw	1
 10975  003A18  0E62               	movlw	low _start_line4
 10976  003A1A  24F3               	addwf	prodl,w,c
 10977  003A1C  6EF6               	movwf	tblptrl,c
 10978  003A1E  0E8E               	movlw	high _start_line4
 10979  003A20  20F4               	addwfc	prodh,w,c
 10980  003A22  6EF7               	movwf	tblptrh,c
 10981  003A24                     	if	1	;There are 3 active tblptr bytes
 10982  003A24  6AF8               	clrf	tblptru,c
 10983  003A26  0E00               	movlw	low (__mediumconst shr (0+16))
 10984  003A28  22F8               	addwfc	tblptru,f,c
 10985  003A2A                     	endif
 10986  003A2A  0008               	tblrd		*
 10987  003A2C  50F5               	movf	tablat,w,c
 10988  003A2E  0900               	iorlw	0
 10989  003A30  B4D8               	btfsc	status,2,c
 10990  003A32  0012               	return	
 10991  003A34  D7D8               	goto	l13500
 10992  003A36                     __end_of__display_start:
 10993                           	opt stack 0
 10994                           tblptru	equ	0xFF8
 10995                           tblptrh	equ	0xFF7
 10996                           tblptrl	equ	0xFF6
 10997                           tablat	equ	0xFF5
 10998                           prodh	equ	0xFF4
 10999                           prodl	equ	0xFF3
 11000                           intcon	equ	0xFF2
 11001                           intcon2	equ	0xFF1
 11002                           intcon3	equ	0xFF0
 11003                           postinc0	equ	0xFEE
 11004                           wreg	equ	0xFE8
 11005                           indf1	equ	0xFE7
 11006                           postdec1	equ	0xFE5
 11007                           plusw1	equ	0xFE3
 11008                           fsr1h	equ	0xFE2
 11009                           fsr1l	equ	0xFE1
 11010                           indf2	equ	0xFDF
 11011                           postinc2	equ	0xFDE
 11012                           postdec2	equ	0xFDD
 11013                           plusw2	equ	0xFDB
 11014                           fsr2h	equ	0xFDA
 11015                           fsr2l	equ	0xFD9
 11016                           status	equ	0xFD8
 11017                           
 11018 ;; *************** function __display_programming *****************
 11019 ;; Defined at:
 11020 ;;		line 417 in file "display.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;		None
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;  cntr            1   30[COMRAM] unsigned char 
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  1    wreg      void 
 11027 ;; Registers used:
 11028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11037 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11038 ;;Total ram usage:        1 bytes
 11039 ;; Hardware stack levels used:    1
 11040 ;; Hardware stack levels required when called:    4
 11041 ;; This function calls:
 11042 ;;		__display_itoa_u16
 11043 ;;		_bootloader_get_entries
 11044 ;;		_bootloader_get_flashPagesWritten
 11045 ;;		_bootloader_get_total_entries
 11046 ;; This function is called by:
 11047 ;;		_display_prepare
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           
 11051                           	psect	text47
 11052  002F86                     __ptext47:
 11053                           	opt stack 0
 11054  002F86                     __display_programming:
 11055                           	opt stack 25
 11056                           
 11057                           ;display.c: 419: uint8_t cntr;
 11058                           ;display.c: 420: cntr = 0;
 11059                           
 11060                           ;incstack = 0
 11061  002F86  0E00               	movlw	0
 11062  002F88  6E1F               	movwf	__display_programming@cntr,c
 11063                           
 11064                           ;display.c: 421: while(programming_line1[cntr])
 11065  002F8A  D017               	goto	l13680
 11066  002F8C                     l13676:
 11067                           
 11068                           ;display.c: 422: display_content[0][cntr] = programming_line1[cntr++];
 11069  002F8C  501F               	movf	__display_programming@cntr,w,c
 11070  002F8E  0D01               	mullw	1
 11071  002F90  0ED9               	movlw	low _programming_line1
 11072  002F92  24F3               	addwf	prodl,w,c
 11073  002F94  6EF6               	movwf	tblptrl,c
 11074  002F96  0E8D               	movlw	high _programming_line1
 11075  002F98  20F4               	addwfc	prodh,w,c
 11076  002F9A  6EF7               	movwf	tblptrh,c
 11077  002F9C                     	if	1	;There are 3 active tblptr bytes
 11078  002F9C  6AF8               	clrf	tblptru,c
 11079  002F9E  0E00               	movlw	low (__mediumconst shr (0+16))
 11080  002FA0  22F8               	addwfc	tblptru,f,c
 11081  002FA2                     	endif
 11082  002FA2  501F               	movf	__display_programming@cntr,w,c
 11083  002FA4  0D01               	mullw	1
 11084  002FA6  0E64               	movlw	low _display_content
 11085  002FA8  24F3               	addwf	prodl,w,c
 11086  002FAA  6ED9               	movwf	fsr2l,c
 11087  002FAC  0E02               	movlw	high _display_content
 11088  002FAE  20F4               	addwfc	prodh,w,c
 11089  002FB0  6EDA               	movwf	fsr2h,c
 11090  002FB2  0008               	tblrd		*
 11091  002FB4  CFF5 FFDF          	movff	tablat,indf2
 11092  002FB8  2A1F               	incf	__display_programming@cntr,f,c
 11093  002FBA                     l13680:
 11094  002FBA  501F               	movf	__display_programming@cntr,w,c
 11095  002FBC  0D01               	mullw	1
 11096  002FBE  0ED9               	movlw	low _programming_line1
 11097  002FC0  24F3               	addwf	prodl,w,c
 11098  002FC2  6EF6               	movwf	tblptrl,c
 11099  002FC4  0E8D               	movlw	high _programming_line1
 11100  002FC6  20F4               	addwfc	prodh,w,c
 11101  002FC8  6EF7               	movwf	tblptrh,c
 11102  002FCA                     	if	1	;There are 3 active tblptr bytes
 11103  002FCA  6AF8               	clrf	tblptru,c
 11104  002FCC  0E00               	movlw	low (__mediumconst shr (0+16))
 11105  002FCE  22F8               	addwfc	tblptru,f,c
 11106  002FD0                     	endif
 11107  002FD0  0008               	tblrd		*
 11108  002FD2  50F5               	movf	tablat,w,c
 11109  002FD4  0900               	iorlw	0
 11110  002FD6  A4D8               	btfss	status,2,c
 11111  002FD8  D7D9               	goto	l13676
 11112                           
 11113                           ;display.c: 424: cntr = 0;
 11114  002FDA  0E00               	movlw	0
 11115  002FDC  6E1F               	movwf	__display_programming@cntr,c
 11116                           
 11117                           ;display.c: 425: while(programming_line2[cntr])
 11118  002FDE  D017               	goto	l13688
 11119  002FE0                     l13684:
 11120                           
 11121                           ;display.c: 426: display_content[1][cntr] = programming_line2[cntr++];
 11122  002FE0  501F               	movf	__display_programming@cntr,w,c
 11123  002FE2  0D01               	mullw	1
 11124  002FE4  0E30               	movlw	low _programming_line2
 11125  002FE6  24F3               	addwf	prodl,w,c
 11126  002FE8  6EF6               	movwf	tblptrl,c
 11127  002FEA  0E8D               	movlw	high _programming_line2
 11128  002FEC  20F4               	addwfc	prodh,w,c
 11129  002FEE  6EF7               	movwf	tblptrh,c
 11130  002FF0                     	if	1	;There are 3 active tblptr bytes
 11131  002FF0  6AF8               	clrf	tblptru,c
 11132  002FF2  0E00               	movlw	low (__mediumconst shr (0+16))
 11133  002FF4  22F8               	addwfc	tblptru,f,c
 11134  002FF6                     	endif
 11135  002FF6  501F               	movf	__display_programming@cntr,w,c
 11136  002FF8  0D01               	mullw	1
 11137  002FFA  0E78               	movlw	low (_display_content+20)
 11138  002FFC  24F3               	addwf	prodl,w,c
 11139  002FFE  6ED9               	movwf	fsr2l,c
 11140  003000  0E02               	movlw	high (_display_content+20)
 11141  003002  20F4               	addwfc	prodh,w,c
 11142  003004  6EDA               	movwf	fsr2h,c
 11143  003006  0008               	tblrd		*
 11144  003008  CFF5 FFDF          	movff	tablat,indf2
 11145  00300C  2A1F               	incf	__display_programming@cntr,f,c
 11146  00300E                     l13688:
 11147  00300E  501F               	movf	__display_programming@cntr,w,c
 11148  003010  0D01               	mullw	1
 11149  003012  0E30               	movlw	low _programming_line2
 11150  003014  24F3               	addwf	prodl,w,c
 11151  003016  6EF6               	movwf	tblptrl,c
 11152  003018  0E8D               	movlw	high _programming_line2
 11153  00301A  20F4               	addwfc	prodh,w,c
 11154  00301C  6EF7               	movwf	tblptrh,c
 11155  00301E                     	if	1	;There are 3 active tblptr bytes
 11156  00301E  6AF8               	clrf	tblptru,c
 11157  003020  0E00               	movlw	low (__mediumconst shr (0+16))
 11158  003022  22F8               	addwfc	tblptru,f,c
 11159  003024                     	endif
 11160  003024  0008               	tblrd		*
 11161  003026  50F5               	movf	tablat,w,c
 11162  003028  0900               	iorlw	0
 11163  00302A  A4D8               	btfss	status,2,c
 11164  00302C  D7D9               	goto	l13684
 11165                           
 11166                           ;display.c: 428: cntr = 0;
 11167  00302E  0E00               	movlw	0
 11168  003030  6E1F               	movwf	__display_programming@cntr,c
 11169                           
 11170                           ;display.c: 429: while(programming_line3[cntr])
 11171  003032  D017               	goto	l13696
 11172  003034                     l13692:
 11173                           
 11174                           ;display.c: 430: display_content[2][cntr] = programming_line3[cntr++];
 11175  003034  501F               	movf	__display_programming@cntr,w,c
 11176  003036  0D01               	mullw	1
 11177  003038  0E83               	movlw	low _programming_line3
 11178  00303A  24F3               	addwf	prodl,w,c
 11179  00303C  6EF6               	movwf	tblptrl,c
 11180  00303E  0E8E               	movlw	high _programming_line3
 11181  003040  20F4               	addwfc	prodh,w,c
 11182  003042  6EF7               	movwf	tblptrh,c
 11183  003044                     	if	1	;There are 3 active tblptr bytes
 11184  003044  6AF8               	clrf	tblptru,c
 11185  003046  0E00               	movlw	low (__mediumconst shr (0+16))
 11186  003048  22F8               	addwfc	tblptru,f,c
 11187  00304A                     	endif
 11188  00304A  501F               	movf	__display_programming@cntr,w,c
 11189  00304C  0D01               	mullw	1
 11190  00304E  0E8C               	movlw	low (_display_content+40)
 11191  003050  24F3               	addwf	prodl,w,c
 11192  003052  6ED9               	movwf	fsr2l,c
 11193  003054  0E02               	movlw	high (_display_content+40)
 11194  003056  20F4               	addwfc	prodh,w,c
 11195  003058  6EDA               	movwf	fsr2h,c
 11196  00305A  0008               	tblrd		*
 11197  00305C  CFF5 FFDF          	movff	tablat,indf2
 11198  003060  2A1F               	incf	__display_programming@cntr,f,c
 11199  003062                     l13696:
 11200  003062  501F               	movf	__display_programming@cntr,w,c
 11201  003064  0D01               	mullw	1
 11202  003066  0E83               	movlw	low _programming_line3
 11203  003068  24F3               	addwf	prodl,w,c
 11204  00306A  6EF6               	movwf	tblptrl,c
 11205  00306C  0E8E               	movlw	high _programming_line3
 11206  00306E  20F4               	addwfc	prodh,w,c
 11207  003070  6EF7               	movwf	tblptrh,c
 11208  003072                     	if	1	;There are 3 active tblptr bytes
 11209  003072  6AF8               	clrf	tblptru,c
 11210  003074  0E00               	movlw	low (__mediumconst shr (0+16))
 11211  003076  22F8               	addwfc	tblptru,f,c
 11212  003078                     	endif
 11213  003078  0008               	tblrd		*
 11214  00307A  50F5               	movf	tablat,w,c
 11215  00307C  0900               	iorlw	0
 11216  00307E  A4D8               	btfss	status,2,c
 11217  003080  D7D9               	goto	l13692
 11218                           
 11219                           ;display.c: 431: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 11220  003082  ECC0  F03C         	call	_bootloader_get_entries	;wreg free
 11221  003086  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 11222  00308A  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 11223  00308E  6A1B               	clrf	__display_itoa_u16@value+2,c
 11224  003090  6A1C               	clrf	__display_itoa_u16@value+3,c
 11225  003092  501F               	movf	__display_programming@cntr,w,c
 11226  003094  0D01               	mullw	1
 11227  003096  0E8C               	movlw	low (_display_content+40)
 11228  003098  24F3               	addwf	prodl,w,c
 11229  00309A  6E1D               	movwf	__display_itoa_u16@text,c
 11230  00309C  0E02               	movlw	high (_display_content+40)
 11231  00309E  20F4               	addwfc	prodh,w,c
 11232  0030A0  6E1E               	movwf	__display_itoa_u16@text+1,c
 11233  0030A2  EC7C  F029         	call	__display_itoa_u16	;wreg free
 11234  0030A6  261F               	addwf	__display_programming@cntr,f,c
 11235                           
 11236                           ;display.c: 432: display_content[2][cntr++] = '/';
 11237  0030A8  501F               	movf	__display_programming@cntr,w,c
 11238  0030AA  0D01               	mullw	1
 11239  0030AC  0E8C               	movlw	low (_display_content+40)
 11240  0030AE  24F3               	addwf	prodl,w,c
 11241  0030B0  6ED9               	movwf	fsr2l,c
 11242  0030B2  0E02               	movlw	high (_display_content+40)
 11243  0030B4  20F4               	addwfc	prodh,w,c
 11244  0030B6  6EDA               	movwf	fsr2h,c
 11245  0030B8  0E2F               	movlw	47
 11246  0030BA  6EDF               	movwf	indf2,c
 11247  0030BC  2A1F               	incf	__display_programming@cntr,f,c
 11248                           
 11249                           ;display.c: 433: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 11250  0030BE  ECCA  F03C         	call	_bootloader_get_total_entries	;wreg free
 11251  0030C2  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 11252  0030C6  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 11253  0030CA  6A1B               	clrf	__display_itoa_u16@value+2,c
 11254  0030CC  6A1C               	clrf	__display_itoa_u16@value+3,c
 11255  0030CE  501F               	movf	__display_programming@cntr,w,c
 11256  0030D0  0D01               	mullw	1
 11257  0030D2  0E8C               	movlw	low (_display_content+40)
 11258  0030D4  24F3               	addwf	prodl,w,c
 11259  0030D6  6E1D               	movwf	__display_itoa_u16@text,c
 11260  0030D8  0E02               	movlw	high (_display_content+40)
 11261  0030DA  20F4               	addwfc	prodh,w,c
 11262  0030DC  6E1E               	movwf	__display_itoa_u16@text+1,c
 11263  0030DE  EC7C  F029         	call	__display_itoa_u16	;wreg free
 11264                           
 11265                           ;display.c: 435: cntr = 0;
 11266  0030E2  0E00               	movlw	0
 11267  0030E4  6E1F               	movwf	__display_programming@cntr,c
 11268                           
 11269                           ;display.c: 436: while(programming_line4[cntr])
 11270  0030E6  D017               	goto	l13712
 11271  0030E8                     l13708:
 11272                           
 11273                           ;display.c: 437: display_content[3][cntr] = programming_line4[cntr++];
 11274  0030E8  501F               	movf	__display_programming@cntr,w,c
 11275  0030EA  0D01               	mullw	1
 11276  0030EC  0EC9               	movlw	low _programming_line4
 11277  0030EE  24F3               	addwf	prodl,w,c
 11278  0030F0  6EF6               	movwf	tblptrl,c
 11279  0030F2  0E8D               	movlw	high _programming_line4
 11280  0030F4  20F4               	addwfc	prodh,w,c
 11281  0030F6  6EF7               	movwf	tblptrh,c
 11282  0030F8                     	if	1	;There are 3 active tblptr bytes
 11283  0030F8  6AF8               	clrf	tblptru,c
 11284  0030FA  0E00               	movlw	low (__mediumconst shr (0+16))
 11285  0030FC  22F8               	addwfc	tblptru,f,c
 11286  0030FE                     	endif
 11287  0030FE  501F               	movf	__display_programming@cntr,w,c
 11288  003100  0D01               	mullw	1
 11289  003102  0EA0               	movlw	low (_display_content+60)
 11290  003104  24F3               	addwf	prodl,w,c
 11291  003106  6ED9               	movwf	fsr2l,c
 11292  003108  0E02               	movlw	high (_display_content+60)
 11293  00310A  20F4               	addwfc	prodh,w,c
 11294  00310C  6EDA               	movwf	fsr2h,c
 11295  00310E  0008               	tblrd		*
 11296  003110  CFF5 FFDF          	movff	tablat,indf2
 11297  003114  2A1F               	incf	__display_programming@cntr,f,c
 11298  003116                     l13712:
 11299  003116  501F               	movf	__display_programming@cntr,w,c
 11300  003118  0D01               	mullw	1
 11301  00311A  0EC9               	movlw	low _programming_line4
 11302  00311C  24F3               	addwf	prodl,w,c
 11303  00311E  6EF6               	movwf	tblptrl,c
 11304  003120  0E8D               	movlw	high _programming_line4
 11305  003122  20F4               	addwfc	prodh,w,c
 11306  003124  6EF7               	movwf	tblptrh,c
 11307  003126                     	if	1	;There are 3 active tblptr bytes
 11308  003126  6AF8               	clrf	tblptru,c
 11309  003128  0E00               	movlw	low (__mediumconst shr (0+16))
 11310  00312A  22F8               	addwfc	tblptru,f,c
 11311  00312C                     	endif
 11312  00312C  0008               	tblrd		*
 11313  00312E  50F5               	movf	tablat,w,c
 11314  003130  0900               	iorlw	0
 11315  003132  A4D8               	btfss	status,2,c
 11316  003134  D7D9               	goto	l13708
 11317                           
 11318                           ;display.c: 438: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 11319  003136  ECC5  F03C         	call	_bootloader_get_flashPagesWritten	;wreg free
 11320  00313A  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 11321  00313E  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 11322  003142  6A1B               	clrf	__display_itoa_u16@value+2,c
 11323  003144  6A1C               	clrf	__display_itoa_u16@value+3,c
 11324  003146  501F               	movf	__display_programming@cntr,w,c
 11325  003148  0D01               	mullw	1
 11326  00314A  0EA0               	movlw	low (_display_content+60)
 11327  00314C  24F3               	addwf	prodl,w,c
 11328  00314E  6E1D               	movwf	__display_itoa_u16@text,c
 11329  003150  0E02               	movlw	high (_display_content+60)
 11330  003152  20F4               	addwfc	prodh,w,c
 11331  003154  6E1E               	movwf	__display_itoa_u16@text+1,c
 11332  003156  EC7C  F029         	call	__display_itoa_u16	;wreg free
 11333  00315A  0012               	return		;funcret
 11334  00315C                     __end_of__display_programming:
 11335                           	opt stack 0
 11336                           tblptru	equ	0xFF8
 11337                           tblptrh	equ	0xFF7
 11338                           tblptrl	equ	0xFF6
 11339                           tablat	equ	0xFF5
 11340                           prodh	equ	0xFF4
 11341                           prodl	equ	0xFF3
 11342                           intcon	equ	0xFF2
 11343                           intcon2	equ	0xFF1
 11344                           intcon3	equ	0xFF0
 11345                           postinc0	equ	0xFEE
 11346                           wreg	equ	0xFE8
 11347                           indf1	equ	0xFE7
 11348                           postdec1	equ	0xFE5
 11349                           plusw1	equ	0xFE3
 11350                           fsr1h	equ	0xFE2
 11351                           fsr1l	equ	0xFE1
 11352                           indf2	equ	0xFDF
 11353                           postinc2	equ	0xFDE
 11354                           postdec2	equ	0xFDD
 11355                           plusw2	equ	0xFDB
 11356                           fsr2h	equ	0xFDA
 11357                           fsr2l	equ	0xFD9
 11358                           status	equ	0xFD8
 11359                           
 11360 ;; *************** function __display_found *****************
 11361 ;; Defined at:
 11362 ;;		line 302 in file "display.c"
 11363 ;; Parameters:    Size  Location     Type
 11364 ;;		None
 11365 ;; Auto vars:     Size  Location     Type
 11366 ;;  cntr            1   39[COMRAM] unsigned char 
 11367 ;;  start           1   38[COMRAM] unsigned char 
 11368 ;; Return value:  Size  Location     Type
 11369 ;;                  1    wreg      void 
 11370 ;; Registers used:
 11371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11372 ;; Tracked objects:
 11373 ;;		On entry : 0/0
 11374 ;;		On exit  : 0/0
 11375 ;;		Unchanged: 0/0
 11376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11379 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11380 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11381 ;;Total ram usage:        4 bytes
 11382 ;; Hardware stack levels used:    1
 11383 ;; Hardware stack levels required when called:    5
 11384 ;; This function calls:
 11385 ;;		__display_itoa_u32
 11386 ;;		_bootloader_get_file_size
 11387 ;; This function is called by:
 11388 ;;		_display_prepare
 11389 ;; This function uses a non-reentrant model
 11390 ;;
 11391                           
 11392                           	psect	text48
 11393  002DA8                     __ptext48:
 11394                           	opt stack 0
 11395  002DA8                     __display_found:
 11396                           	opt stack 24
 11397                           
 11398                           ;display.c: 304: uint8_t cntr;
 11399                           ;display.c: 305: uint8_t start;
 11400                           ;display.c: 307: cntr = 0;
 11401                           
 11402                           ;incstack = 0
 11403  002DA8  0E00               	movlw	0
 11404  002DAA  6E28               	movwf	__display_found@cntr,c
 11405                           
 11406                           ;display.c: 308: while(found_line1[cntr])
 11407  002DAC  D017               	goto	l13512
 11408  002DAE                     l13508:
 11409                           
 11410                           ;display.c: 309: display_content[0][cntr] = found_line1[cntr++];
 11411  002DAE  5028               	movf	__display_found@cntr,w,c
 11412  002DB0  0D01               	mullw	1
 11413  002DB2  0E19               	movlw	low _found_line1
 11414  002DB4  24F3               	addwf	prodl,w,c
 11415  002DB6  6EF6               	movwf	tblptrl,c
 11416  002DB8  0E8E               	movlw	high _found_line1
 11417  002DBA  20F4               	addwfc	prodh,w,c
 11418  002DBC  6EF7               	movwf	tblptrh,c
 11419  002DBE                     	if	1	;There are 3 active tblptr bytes
 11420  002DBE  6AF8               	clrf	tblptru,c
 11421  002DC0  0E00               	movlw	low (__mediumconst shr (0+16))
 11422  002DC2  22F8               	addwfc	tblptru,f,c
 11423  002DC4                     	endif
 11424  002DC4  5028               	movf	__display_found@cntr,w,c
 11425  002DC6  0D01               	mullw	1
 11426  002DC8  0E64               	movlw	low _display_content
 11427  002DCA  24F3               	addwf	prodl,w,c
 11428  002DCC  6ED9               	movwf	fsr2l,c
 11429  002DCE  0E02               	movlw	high _display_content
 11430  002DD0  20F4               	addwfc	prodh,w,c
 11431  002DD2  6EDA               	movwf	fsr2h,c
 11432  002DD4  0008               	tblrd		*
 11433  002DD6  CFF5 FFDF          	movff	tablat,indf2
 11434  002DDA  2A28               	incf	__display_found@cntr,f,c
 11435  002DDC                     l13512:
 11436  002DDC  5028               	movf	__display_found@cntr,w,c
 11437  002DDE  0D01               	mullw	1
 11438  002DE0  0E19               	movlw	low _found_line1
 11439  002DE2  24F3               	addwf	prodl,w,c
 11440  002DE4  6EF6               	movwf	tblptrl,c
 11441  002DE6  0E8E               	movlw	high _found_line1
 11442  002DE8  20F4               	addwfc	prodh,w,c
 11443  002DEA  6EF7               	movwf	tblptrh,c
 11444  002DEC                     	if	1	;There are 3 active tblptr bytes
 11445  002DEC  6AF8               	clrf	tblptru,c
 11446  002DEE  0E00               	movlw	low (__mediumconst shr (0+16))
 11447  002DF0  22F8               	addwfc	tblptru,f,c
 11448  002DF2                     	endif
 11449  002DF2  0008               	tblrd		*
 11450  002DF4  50F5               	movf	tablat,w,c
 11451  002DF6  0900               	iorlw	0
 11452  002DF8  A4D8               	btfss	status,2,c
 11453  002DFA  D7D9               	goto	l13508
 11454                           
 11455                           ;display.c: 311: cntr = 0;
 11456  002DFC  0E00               	movlw	0
 11457  002DFE  6E28               	movwf	__display_found@cntr,c
 11458                           
 11459                           ;display.c: 312: while(found_line2[cntr])
 11460  002E00  D017               	goto	l13520
 11461  002E02                     l13516:
 11462                           
 11463                           ;display.c: 313: display_content[1][cntr] = found_line2[cntr++];
 11464  002E02  5028               	movf	__display_found@cntr,w,c
 11465  002E04  0D01               	mullw	1
 11466  002E06  0E1D               	movlw	low _found_line2
 11467  002E08  24F3               	addwf	prodl,w,c
 11468  002E0A  6EF6               	movwf	tblptrl,c
 11469  002E0C  0E8D               	movlw	high _found_line2
 11470  002E0E  20F4               	addwfc	prodh,w,c
 11471  002E10  6EF7               	movwf	tblptrh,c
 11472  002E12                     	if	1	;There are 3 active tblptr bytes
 11473  002E12  6AF8               	clrf	tblptru,c
 11474  002E14  0E00               	movlw	low (__mediumconst shr (0+16))
 11475  002E16  22F8               	addwfc	tblptru,f,c
 11476  002E18                     	endif
 11477  002E18  5028               	movf	__display_found@cntr,w,c
 11478  002E1A  0D01               	mullw	1
 11479  002E1C  0E78               	movlw	low (_display_content+20)
 11480  002E1E  24F3               	addwf	prodl,w,c
 11481  002E20  6ED9               	movwf	fsr2l,c
 11482  002E22  0E02               	movlw	high (_display_content+20)
 11483  002E24  20F4               	addwfc	prodh,w,c
 11484  002E26  6EDA               	movwf	fsr2h,c
 11485  002E28  0008               	tblrd		*
 11486  002E2A  CFF5 FFDF          	movff	tablat,indf2
 11487  002E2E  2A28               	incf	__display_found@cntr,f,c
 11488  002E30                     l13520:
 11489  002E30  5028               	movf	__display_found@cntr,w,c
 11490  002E32  0D01               	mullw	1
 11491  002E34  0E1D               	movlw	low _found_line2
 11492  002E36  24F3               	addwf	prodl,w,c
 11493  002E38  6EF6               	movwf	tblptrl,c
 11494  002E3A  0E8D               	movlw	high _found_line2
 11495  002E3C  20F4               	addwfc	prodh,w,c
 11496  002E3E  6EF7               	movwf	tblptrh,c
 11497  002E40                     	if	1	;There are 3 active tblptr bytes
 11498  002E40  6AF8               	clrf	tblptru,c
 11499  002E42  0E00               	movlw	low (__mediumconst shr (0+16))
 11500  002E44  22F8               	addwfc	tblptru,f,c
 11501  002E46                     	endif
 11502  002E46  0008               	tblrd		*
 11503  002E48  50F5               	movf	tablat,w,c
 11504  002E4A  0900               	iorlw	0
 11505  002E4C  A4D8               	btfss	status,2,c
 11506  002E4E  D7D9               	goto	l13516
 11507                           
 11508                           ;display.c: 315: cntr = 0;
 11509  002E50  0E00               	movlw	0
 11510  002E52  6E28               	movwf	__display_found@cntr,c
 11511                           
 11512                           ;display.c: 316: while(found_line3[cntr])
 11513  002E54  D017               	goto	l13528
 11514  002E56                     l13524:
 11515                           
 11516                           ;display.c: 317: display_content[2][cntr] = found_line3[cntr++];
 11517  002E56  5028               	movf	__display_found@cntr,w,c
 11518  002E58  0D01               	mullw	1
 11519  002E5A  0E98               	movlw	low _found_line3
 11520  002E5C  24F3               	addwf	prodl,w,c
 11521  002E5E  6EF6               	movwf	tblptrl,c
 11522  002E60  0E8E               	movlw	high _found_line3
 11523  002E62  20F4               	addwfc	prodh,w,c
 11524  002E64  6EF7               	movwf	tblptrh,c
 11525  002E66                     	if	1	;There are 3 active tblptr bytes
 11526  002E66  6AF8               	clrf	tblptru,c
 11527  002E68  0E00               	movlw	low (__mediumconst shr (0+16))
 11528  002E6A  22F8               	addwfc	tblptru,f,c
 11529  002E6C                     	endif
 11530  002E6C  5028               	movf	__display_found@cntr,w,c
 11531  002E6E  0D01               	mullw	1
 11532  002E70  0E8C               	movlw	low (_display_content+40)
 11533  002E72  24F3               	addwf	prodl,w,c
 11534  002E74  6ED9               	movwf	fsr2l,c
 11535  002E76  0E02               	movlw	high (_display_content+40)
 11536  002E78  20F4               	addwfc	prodh,w,c
 11537  002E7A  6EDA               	movwf	fsr2h,c
 11538  002E7C  0008               	tblrd		*
 11539  002E7E  CFF5 FFDF          	movff	tablat,indf2
 11540  002E82  2A28               	incf	__display_found@cntr,f,c
 11541  002E84                     l13528:
 11542  002E84  5028               	movf	__display_found@cntr,w,c
 11543  002E86  0D01               	mullw	1
 11544  002E88  0E98               	movlw	low _found_line3
 11545  002E8A  24F3               	addwf	prodl,w,c
 11546  002E8C  6EF6               	movwf	tblptrl,c
 11547  002E8E  0E8E               	movlw	high _found_line3
 11548  002E90  20F4               	addwfc	prodh,w,c
 11549  002E92  6EF7               	movwf	tblptrh,c
 11550  002E94                     	if	1	;There are 3 active tblptr bytes
 11551  002E94  6AF8               	clrf	tblptru,c
 11552  002E96  0E00               	movlw	low (__mediumconst shr (0+16))
 11553  002E98  22F8               	addwfc	tblptru,f,c
 11554  002E9A                     	endif
 11555  002E9A  0008               	tblrd		*
 11556  002E9C  50F5               	movf	tablat,w,c
 11557  002E9E  0900               	iorlw	0
 11558  002EA0  A4D8               	btfss	status,2,c
 11559  002EA2  D7D9               	goto	l13524
 11560                           
 11561                           ;display.c: 318: start = cntr;
 11562  002EA4  C028  F027         	movff	__display_found@cntr,__display_found@start
 11563                           
 11564                           ;display.c: 319: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 11565  002EA8  EC75  F03C         	call	_bootloader_get_file_size	;wreg free
 11566  002EAC  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 11567  002EB0  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 11568  002EB4  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 11569  002EB8  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 11570  002EBC  5028               	movf	__display_found@cntr,w,c
 11571  002EBE  0D01               	mullw	1
 11572  002EC0  0E8C               	movlw	low (_display_content+40)
 11573  002EC2  24F3               	addwf	prodl,w,c
 11574  002EC4  6E23               	movwf	__display_itoa_u32@text,c
 11575  002EC6  0E02               	movlw	high (_display_content+40)
 11576  002EC8  20F4               	addwfc	prodh,w,c
 11577  002ECA  6E24               	movwf	__display_itoa_u32@text+1,c
 11578  002ECC  EC1F  F008         	call	__display_itoa_u32	;wreg free
 11579  002ED0  2627               	addwf	__display_found@start,f,c
 11580                           
 11581                           ;display.c: 320: cntr = 0;
 11582  002ED2  0E00               	movlw	0
 11583  002ED4  6E28               	movwf	__display_found@cntr,c
 11584                           
 11585                           ;display.c: 321: while(found_line3b[cntr])
 11586  002ED6  D01C               	goto	l13538
 11587  002ED8                     l13534:
 11588                           
 11589                           ;display.c: 322: display_content[2][start+cntr] = found_line3b[cntr++];
 11590  002ED8  5028               	movf	__display_found@cntr,w,c
 11591  002EDA  0D01               	mullw	1
 11592  002EDC  0E91               	movlw	low _found_line3b
 11593  002EDE  24F3               	addwf	prodl,w,c
 11594  002EE0  6EF6               	movwf	tblptrl,c
 11595  002EE2  0E8E               	movlw	high _found_line3b
 11596  002EE4  20F4               	addwfc	prodh,w,c
 11597  002EE6  6EF7               	movwf	tblptrh,c
 11598  002EE8                     	if	1	;There are 3 active tblptr bytes
 11599  002EE8  6AF8               	clrf	tblptru,c
 11600  002EEA  0E00               	movlw	low (__mediumconst shr (0+16))
 11601  002EEC  22F8               	addwfc	tblptru,f,c
 11602  002EEE                     	endif
 11603  002EEE  5028               	movf	__display_found@cntr,w,c
 11604  002EF0  C027  F025         	movff	__display_found@start,??__display_found
 11605  002EF4  6A26               	clrf	(??__display_found+1)& (0+255),c
 11606  002EF6  2625               	addwf	??__display_found,f,c
 11607  002EF8  0E00               	movlw	0
 11608  002EFA  2226               	addwfc	??__display_found+1,f,c
 11609  002EFC  0E8C               	movlw	low (_display_content+40)
 11610  002EFE  2425               	addwf	??__display_found,w,c
 11611  002F00  6ED9               	movwf	fsr2l,c
 11612  002F02  0E02               	movlw	high (_display_content+40)
 11613  002F04  2026               	addwfc	??__display_found+1,w,c
 11614  002F06  6EDA               	movwf	fsr2h,c
 11615  002F08  0008               	tblrd		*
 11616  002F0A  CFF5 FFDF          	movff	tablat,indf2
 11617  002F0E  2A28               	incf	__display_found@cntr,f,c
 11618  002F10                     l13538:
 11619  002F10  5028               	movf	__display_found@cntr,w,c
 11620  002F12  0D01               	mullw	1
 11621  002F14  0E91               	movlw	low _found_line3b
 11622  002F16  24F3               	addwf	prodl,w,c
 11623  002F18  6EF6               	movwf	tblptrl,c
 11624  002F1A  0E8E               	movlw	high _found_line3b
 11625  002F1C  20F4               	addwfc	prodh,w,c
 11626  002F1E  6EF7               	movwf	tblptrh,c
 11627  002F20                     	if	1	;There are 3 active tblptr bytes
 11628  002F20  6AF8               	clrf	tblptru,c
 11629  002F22  0E00               	movlw	low (__mediumconst shr (0+16))
 11630  002F24  22F8               	addwfc	tblptru,f,c
 11631  002F26                     	endif
 11632  002F26  0008               	tblrd		*
 11633  002F28  50F5               	movf	tablat,w,c
 11634  002F2A  0900               	iorlw	0
 11635  002F2C  A4D8               	btfss	status,2,c
 11636  002F2E  D7D4               	goto	l13534
 11637                           
 11638                           ;display.c: 324: cntr = 0;
 11639  002F30  0E00               	movlw	0
 11640  002F32  6E28               	movwf	__display_found@cntr,c
 11641                           
 11642                           ;display.c: 325: while(found_line4[cntr])
 11643  002F34  D017               	goto	l13546
 11644  002F36                     l13542:
 11645                           
 11646                           ;display.c: 326: display_content[3][cntr] = found_line4[cntr++];
 11647  002F36  5028               	movf	__display_found@cntr,w,c
 11648  002F38  0D01               	mullw	1
 11649  002F3A  0E54               	movlw	low _found_line4
 11650  002F3C  24F3               	addwf	prodl,w,c
 11651  002F3E  6EF6               	movwf	tblptrl,c
 11652  002F40  0E8D               	movlw	high _found_line4
 11653  002F42  20F4               	addwfc	prodh,w,c
 11654  002F44  6EF7               	movwf	tblptrh,c
 11655  002F46                     	if	1	;There are 3 active tblptr bytes
 11656  002F46  6AF8               	clrf	tblptru,c
 11657  002F48  0E00               	movlw	low (__mediumconst shr (0+16))
 11658  002F4A  22F8               	addwfc	tblptru,f,c
 11659  002F4C                     	endif
 11660  002F4C  5028               	movf	__display_found@cntr,w,c
 11661  002F4E  0D01               	mullw	1
 11662  002F50  0EA0               	movlw	low (_display_content+60)
 11663  002F52  24F3               	addwf	prodl,w,c
 11664  002F54  6ED9               	movwf	fsr2l,c
 11665  002F56  0E02               	movlw	high (_display_content+60)
 11666  002F58  20F4               	addwfc	prodh,w,c
 11667  002F5A  6EDA               	movwf	fsr2h,c
 11668  002F5C  0008               	tblrd		*
 11669  002F5E  CFF5 FFDF          	movff	tablat,indf2
 11670  002F62  2A28               	incf	__display_found@cntr,f,c
 11671  002F64                     l13546:
 11672  002F64  5028               	movf	__display_found@cntr,w,c
 11673  002F66  0D01               	mullw	1
 11674  002F68  0E54               	movlw	low _found_line4
 11675  002F6A  24F3               	addwf	prodl,w,c
 11676  002F6C  6EF6               	movwf	tblptrl,c
 11677  002F6E  0E8D               	movlw	high _found_line4
 11678  002F70  20F4               	addwfc	prodh,w,c
 11679  002F72  6EF7               	movwf	tblptrh,c
 11680  002F74                     	if	1	;There are 3 active tblptr bytes
 11681  002F74  6AF8               	clrf	tblptru,c
 11682  002F76  0E00               	movlw	low (__mediumconst shr (0+16))
 11683  002F78  22F8               	addwfc	tblptru,f,c
 11684  002F7A                     	endif
 11685  002F7A  0008               	tblrd		*
 11686  002F7C  50F5               	movf	tablat,w,c
 11687  002F7E  0900               	iorlw	0
 11688  002F80  B4D8               	btfsc	status,2,c
 11689  002F82  0012               	return	
 11690  002F84  D7D8               	goto	l13542
 11691  002F86                     __end_of__display_found:
 11692                           	opt stack 0
 11693                           tblptru	equ	0xFF8
 11694                           tblptrh	equ	0xFF7
 11695                           tblptrl	equ	0xFF6
 11696                           tablat	equ	0xFF5
 11697                           prodh	equ	0xFF4
 11698                           prodl	equ	0xFF3
 11699                           intcon	equ	0xFF2
 11700                           intcon2	equ	0xFF1
 11701                           intcon3	equ	0xFF0
 11702                           postinc0	equ	0xFEE
 11703                           wreg	equ	0xFE8
 11704                           indf1	equ	0xFE7
 11705                           postdec1	equ	0xFE5
 11706                           plusw1	equ	0xFE3
 11707                           fsr1h	equ	0xFE2
 11708                           fsr1l	equ	0xFE1
 11709                           indf2	equ	0xFDF
 11710                           postinc2	equ	0xFDE
 11711                           postdec2	equ	0xFDD
 11712                           plusw2	equ	0xFDB
 11713                           fsr2h	equ	0xFDA
 11714                           fsr2l	equ	0xFD9
 11715                           status	equ	0xFD8
 11716                           
 11717 ;; *************** function _bootloader_get_file_size *****************
 11718 ;; Defined at:
 11719 ;;		line 422 in file "bootloader.c"
 11720 ;; Parameters:    Size  Location     Type
 11721 ;;		None
 11722 ;; Auto vars:     Size  Location     Type
 11723 ;;		None
 11724 ;; Return value:  Size  Location     Type
 11725 ;;                  4    0[COMRAM] unsigned long 
 11726 ;; Registers used:
 11727 ;;		None
 11728 ;; Tracked objects:
 11729 ;;		On entry : 0/0
 11730 ;;		On exit  : 0/0
 11731 ;;		Unchanged: 0/0
 11732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11733 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11736 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11737 ;;Total ram usage:        4 bytes
 11738 ;; Hardware stack levels used:    1
 11739 ;; This function calls:
 11740 ;;		Nothing
 11741 ;; This function is called by:
 11742 ;;		__display_found
 11743 ;; This function uses a non-reentrant model
 11744 ;;
 11745                           
 11746                           	psect	text49
 11747  0078EA                     __ptext49:
 11748                           	opt stack 0
 11749  0078EA                     _bootloader_get_file_size:
 11750                           	opt stack 28
 11751                           
 11752                           ;bootloader.c: 424: return hex_file_size;
 11753                           
 11754                           ;incstack = 0
 11755  0078EA  C143  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 11756  0078EE  C144  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 11757  0078F2  C145  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 11758  0078F6  C146  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 11759  0078FA  0012               	return		;funcret
 11760  0078FC                     __end_of_bootloader_get_file_size:
 11761                           	opt stack 0
 11762                           tblptru	equ	0xFF8
 11763                           tblptrh	equ	0xFF7
 11764                           tblptrl	equ	0xFF6
 11765                           tablat	equ	0xFF5
 11766                           prodh	equ	0xFF4
 11767                           prodl	equ	0xFF3
 11768                           intcon	equ	0xFF2
 11769                           intcon2	equ	0xFF1
 11770                           intcon3	equ	0xFF0
 11771                           postinc0	equ	0xFEE
 11772                           wreg	equ	0xFE8
 11773                           indf1	equ	0xFE7
 11774                           postdec1	equ	0xFE5
 11775                           plusw1	equ	0xFE3
 11776                           fsr1h	equ	0xFE2
 11777                           fsr1l	equ	0xFE1
 11778                           indf2	equ	0xFDF
 11779                           postinc2	equ	0xFDE
 11780                           postdec2	equ	0xFDD
 11781                           plusw2	equ	0xFDB
 11782                           fsr2h	equ	0xFDA
 11783                           fsr2l	equ	0xFD9
 11784                           status	equ	0xFD8
 11785                           
 11786 ;; *************** function __display_failed *****************
 11787 ;; Defined at:
 11788 ;;		line 367 in file "display.c"
 11789 ;; Parameters:    Size  Location     Type
 11790 ;;		None
 11791 ;; Auto vars:     Size  Location     Type
 11792 ;;  cntr            1   36[COMRAM] unsigned char 
 11793 ;;  start           1    0        unsigned char 
 11794 ;; Return value:  Size  Location     Type
 11795 ;;                  1    wreg      void 
 11796 ;; Registers used:
 11797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11798 ;; Tracked objects:
 11799 ;;		On entry : 0/0
 11800 ;;		On exit  : 0/0
 11801 ;;		Unchanged: 0/0
 11802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11807 ;;Total ram usage:        1 bytes
 11808 ;; Hardware stack levels used:    1
 11809 ;; Hardware stack levels required when called:    5
 11810 ;; This function calls:
 11811 ;;		__display_itoa_u16
 11812 ;;		__display_itoa_u32
 11813 ;;		_bootloader_get_entries
 11814 ;;		_bootloader_get_error
 11815 ;;		_bootloader_get_rec_address
 11816 ;; This function is called by:
 11817 ;;		_display_prepare
 11818 ;; This function uses a non-reentrant model
 11819 ;;
 11820                           
 11821                           	psect	text50
 11822  0019D0                     __ptext50:
 11823                           	opt stack 0
 11824  0019D0                     __display_failed:
 11825                           	opt stack 24
 11826                           
 11827                           ;display.c: 369: uint8_t cntr;
 11828                           ;display.c: 370: uint8_t start;
 11829                           ;display.c: 371: cntr = 0;
 11830                           
 11831                           ;incstack = 0
 11832  0019D0  0E00               	movlw	0
 11833  0019D2  6E25               	movwf	__display_failed@cntr,c
 11834                           
 11835                           ;display.c: 372: while(failed_line1[cntr])
 11836  0019D4  D017               	goto	l13616
 11837  0019D6                     l13612:
 11838                           
 11839                           ;display.c: 373: display_content[0][cntr] = failed_line1[cntr++];
 11840  0019D6  5025               	movf	__display_failed@cntr,w,c
 11841  0019D8  0D01               	mullw	1
 11842  0019DA  0EE9               	movlw	low _failed_line1
 11843  0019DC  24F3               	addwf	prodl,w,c
 11844  0019DE  6EF6               	movwf	tblptrl,c
 11845  0019E0  0E8D               	movlw	high _failed_line1
 11846  0019E2  20F4               	addwfc	prodh,w,c
 11847  0019E4  6EF7               	movwf	tblptrh,c
 11848  0019E6                     	if	1	;There are 3 active tblptr bytes
 11849  0019E6  6AF8               	clrf	tblptru,c
 11850  0019E8  0E00               	movlw	low (__mediumconst shr (0+16))
 11851  0019EA  22F8               	addwfc	tblptru,f,c
 11852  0019EC                     	endif
 11853  0019EC  5025               	movf	__display_failed@cntr,w,c
 11854  0019EE  0D01               	mullw	1
 11855  0019F0  0E64               	movlw	low _display_content
 11856  0019F2  24F3               	addwf	prodl,w,c
 11857  0019F4  6ED9               	movwf	fsr2l,c
 11858  0019F6  0E02               	movlw	high _display_content
 11859  0019F8  20F4               	addwfc	prodh,w,c
 11860  0019FA  6EDA               	movwf	fsr2h,c
 11861  0019FC  0008               	tblrd		*
 11862  0019FE  CFF5 FFDF          	movff	tablat,indf2
 11863  001A02  2A25               	incf	__display_failed@cntr,f,c
 11864  001A04                     l13616:
 11865  001A04  5025               	movf	__display_failed@cntr,w,c
 11866  001A06  0D01               	mullw	1
 11867  001A08  0EE9               	movlw	low _failed_line1
 11868  001A0A  24F3               	addwf	prodl,w,c
 11869  001A0C  6EF6               	movwf	tblptrl,c
 11870  001A0E  0E8D               	movlw	high _failed_line1
 11871  001A10  20F4               	addwfc	prodh,w,c
 11872  001A12  6EF7               	movwf	tblptrh,c
 11873  001A14                     	if	1	;There are 3 active tblptr bytes
 11874  001A14  6AF8               	clrf	tblptru,c
 11875  001A16  0E00               	movlw	low (__mediumconst shr (0+16))
 11876  001A18  22F8               	addwfc	tblptru,f,c
 11877  001A1A                     	endif
 11878  001A1A  0008               	tblrd		*
 11879  001A1C  50F5               	movf	tablat,w,c
 11880  001A1E  0900               	iorlw	0
 11881  001A20  A4D8               	btfss	status,2,c
 11882  001A22  D7D9               	goto	l13612
 11883                           
 11884                           ;display.c: 374: cntr = 0;
 11885  001A24  0E00               	movlw	0
 11886  001A26  6E25               	movwf	__display_failed@cntr,c
 11887                           
 11888                           ;display.c: 375: while(failed_line2[cntr])
 11889  001A28  D017               	goto	l13624
 11890  001A2A                     l13620:
 11891                           
 11892                           ;display.c: 376: display_content[1][cntr] = failed_line2[cntr++];
 11893  001A2A  5025               	movf	__display_failed@cntr,w,c
 11894  001A2C  0D01               	mullw	1
 11895  001A2E  0E42               	movlw	low _failed_line2
 11896  001A30  24F3               	addwf	prodl,w,c
 11897  001A32  6EF6               	movwf	tblptrl,c
 11898  001A34  0E8D               	movlw	high _failed_line2
 11899  001A36  20F4               	addwfc	prodh,w,c
 11900  001A38  6EF7               	movwf	tblptrh,c
 11901  001A3A                     	if	1	;There are 3 active tblptr bytes
 11902  001A3A  6AF8               	clrf	tblptru,c
 11903  001A3C  0E00               	movlw	low (__mediumconst shr (0+16))
 11904  001A3E  22F8               	addwfc	tblptru,f,c
 11905  001A40                     	endif
 11906  001A40  5025               	movf	__display_failed@cntr,w,c
 11907  001A42  0D01               	mullw	1
 11908  001A44  0E78               	movlw	low (_display_content+20)
 11909  001A46  24F3               	addwf	prodl,w,c
 11910  001A48  6ED9               	movwf	fsr2l,c
 11911  001A4A  0E02               	movlw	high (_display_content+20)
 11912  001A4C  20F4               	addwfc	prodh,w,c
 11913  001A4E  6EDA               	movwf	fsr2h,c
 11914  001A50  0008               	tblrd		*
 11915  001A52  CFF5 FFDF          	movff	tablat,indf2
 11916  001A56  2A25               	incf	__display_failed@cntr,f,c
 11917  001A58                     l13624:
 11918  001A58  5025               	movf	__display_failed@cntr,w,c
 11919  001A5A  0D01               	mullw	1
 11920  001A5C  0E42               	movlw	low _failed_line2
 11921  001A5E  24F3               	addwf	prodl,w,c
 11922  001A60  6EF6               	movwf	tblptrl,c
 11923  001A62  0E8D               	movlw	high _failed_line2
 11924  001A64  20F4               	addwfc	prodh,w,c
 11925  001A66  6EF7               	movwf	tblptrh,c
 11926  001A68                     	if	1	;There are 3 active tblptr bytes
 11927  001A68  6AF8               	clrf	tblptru,c
 11928  001A6A  0E00               	movlw	low (__mediumconst shr (0+16))
 11929  001A6C  22F8               	addwfc	tblptru,f,c
 11930  001A6E                     	endif
 11931  001A6E  0008               	tblrd		*
 11932  001A70  50F5               	movf	tablat,w,c
 11933  001A72  0900               	iorlw	0
 11934  001A74  A4D8               	btfss	status,2,c
 11935  001A76  D7D9               	goto	l13620
 11936                           
 11937                           ;display.c: 378: cntr = 0;
 11938  001A78  0E00               	movlw	0
 11939  001A7A  6E25               	movwf	__display_failed@cntr,c
 11940                           
 11941                           ;display.c: 379: switch(bootloader_get_error())
 11942  001A7C  D0D6               	goto	l13662
 11943  001A7E                     l13628:
 11944                           
 11945                           ;display.c: 383: display_content[2][cntr] = failed_line3_startCode[cntr++];
 11946  001A7E  5025               	movf	__display_failed@cntr,w,c
 11947  001A80  0D01               	mullw	1
 11948  001A82  0E0A               	movlw	low _failed_line3_startCode
 11949  001A84  24F3               	addwf	prodl,w,c
 11950  001A86  6EF6               	movwf	tblptrl,c
 11951  001A88  0E8D               	movlw	high _failed_line3_startCode
 11952  001A8A  20F4               	addwfc	prodh,w,c
 11953  001A8C  6EF7               	movwf	tblptrh,c
 11954  001A8E                     	if	1	;There are 3 active tblptr bytes
 11955  001A8E  6AF8               	clrf	tblptru,c
 11956  001A90  0E00               	movlw	low (__mediumconst shr (0+16))
 11957  001A92  22F8               	addwfc	tblptru,f,c
 11958  001A94                     	endif
 11959  001A94  5025               	movf	__display_failed@cntr,w,c
 11960  001A96  0D01               	mullw	1
 11961  001A98  0E8C               	movlw	low (_display_content+40)
 11962  001A9A  24F3               	addwf	prodl,w,c
 11963  001A9C  6ED9               	movwf	fsr2l,c
 11964  001A9E  0E02               	movlw	high (_display_content+40)
 11965  001AA0  20F4               	addwfc	prodh,w,c
 11966  001AA2  6EDA               	movwf	fsr2h,c
 11967  001AA4  0008               	tblrd		*
 11968  001AA6  CFF5 FFDF          	movff	tablat,indf2
 11969  001AAA  2A25               	incf	__display_failed@cntr,f,c
 11970  001AAC                     l13632:
 11971  001AAC  5025               	movf	__display_failed@cntr,w,c
 11972  001AAE  0D01               	mullw	1
 11973  001AB0  0E0A               	movlw	low _failed_line3_startCode
 11974  001AB2  24F3               	addwf	prodl,w,c
 11975  001AB4  6EF6               	movwf	tblptrl,c
 11976  001AB6  0E8D               	movlw	high _failed_line3_startCode
 11977  001AB8  20F4               	addwfc	prodh,w,c
 11978  001ABA  6EF7               	movwf	tblptrh,c
 11979  001ABC                     	if	1	;There are 3 active tblptr bytes
 11980  001ABC  6AF8               	clrf	tblptru,c
 11981  001ABE  0E00               	movlw	low (__mediumconst shr (0+16))
 11982  001AC0  22F8               	addwfc	tblptru,f,c
 11983  001AC2                     	endif
 11984  001AC2  0008               	tblrd		*
 11985  001AC4  50F5               	movf	tablat,w,c
 11986  001AC6  0900               	iorlw	0
 11987  001AC8  B4D8               	btfsc	status,2,c
 11988  001ACA  D0C0               	goto	l13664
 11989  001ACC  D7D8               	goto	l13628
 11990  001ACE                     l13634:
 11991                           
 11992                           ;display.c: 388: display_content[2][cntr] = failed_line3_checksum[cntr++];
 11993  001ACE  5025               	movf	__display_failed@cntr,w,c
 11994  001AD0  0D01               	mullw	1
 11995  001AD2  0E29               	movlw	low _failed_line3_checksum
 11996  001AD4  24F3               	addwf	prodl,w,c
 11997  001AD6  6EF6               	movwf	tblptrl,c
 11998  001AD8  0E8E               	movlw	high _failed_line3_checksum
 11999  001ADA  20F4               	addwfc	prodh,w,c
 12000  001ADC  6EF7               	movwf	tblptrh,c
 12001  001ADE                     	if	1	;There are 3 active tblptr bytes
 12002  001ADE  6AF8               	clrf	tblptru,c
 12003  001AE0  0E00               	movlw	low (__mediumconst shr (0+16))
 12004  001AE2  22F8               	addwfc	tblptru,f,c
 12005  001AE4                     	endif
 12006  001AE4  5025               	movf	__display_failed@cntr,w,c
 12007  001AE6  0D01               	mullw	1
 12008  001AE8  0E8C               	movlw	low (_display_content+40)
 12009  001AEA  24F3               	addwf	prodl,w,c
 12010  001AEC  6ED9               	movwf	fsr2l,c
 12011  001AEE  0E02               	movlw	high (_display_content+40)
 12012  001AF0  20F4               	addwfc	prodh,w,c
 12013  001AF2  6EDA               	movwf	fsr2h,c
 12014  001AF4  0008               	tblrd		*
 12015  001AF6  CFF5 FFDF          	movff	tablat,indf2
 12016  001AFA  2A25               	incf	__display_failed@cntr,f,c
 12017  001AFC                     l13638:
 12018  001AFC  5025               	movf	__display_failed@cntr,w,c
 12019  001AFE  0D01               	mullw	1
 12020  001B00  0E29               	movlw	low _failed_line3_checksum
 12021  001B02  24F3               	addwf	prodl,w,c
 12022  001B04  6EF6               	movwf	tblptrl,c
 12023  001B06  0E8E               	movlw	high _failed_line3_checksum
 12024  001B08  20F4               	addwfc	prodh,w,c
 12025  001B0A  6EF7               	movwf	tblptrh,c
 12026  001B0C                     	if	1	;There are 3 active tblptr bytes
 12027  001B0C  6AF8               	clrf	tblptru,c
 12028  001B0E  0E00               	movlw	low (__mediumconst shr (0+16))
 12029  001B10  22F8               	addwfc	tblptru,f,c
 12030  001B12                     	endif
 12031  001B12  0008               	tblrd		*
 12032  001B14  50F5               	movf	tablat,w,c
 12033  001B16  0900               	iorlw	0
 12034  001B18  B4D8               	btfsc	status,2,c
 12035  001B1A  D098               	goto	l13664
 12036  001B1C  D7D8               	goto	l13634
 12037  001B1E                     l13640:
 12038                           
 12039                           ;display.c: 395: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 12040  001B1E  5025               	movf	__display_failed@cntr,w,c
 12041  001B20  0D01               	mullw	1
 12042  001B22  0E38               	movlw	low _failed_line3_noNextRecord
 12043  001B24  24F3               	addwf	prodl,w,c
 12044  001B26  6EF6               	movwf	tblptrl,c
 12045  001B28  0E8E               	movlw	high _failed_line3_noNextRecord
 12046  001B2A  20F4               	addwfc	prodh,w,c
 12047  001B2C  6EF7               	movwf	tblptrh,c
 12048  001B2E                     	if	1	;There are 3 active tblptr bytes
 12049  001B2E  6AF8               	clrf	tblptru,c
 12050  001B30  0E00               	movlw	low (__mediumconst shr (0+16))
 12051  001B32  22F8               	addwfc	tblptru,f,c
 12052  001B34                     	endif
 12053  001B34  5025               	movf	__display_failed@cntr,w,c
 12054  001B36  0D01               	mullw	1
 12055  001B38  0E8C               	movlw	low (_display_content+40)
 12056  001B3A  24F3               	addwf	prodl,w,c
 12057  001B3C  6ED9               	movwf	fsr2l,c
 12058  001B3E  0E02               	movlw	high (_display_content+40)
 12059  001B40  20F4               	addwfc	prodh,w,c
 12060  001B42  6EDA               	movwf	fsr2h,c
 12061  001B44  0008               	tblrd		*
 12062  001B46  CFF5 FFDF          	movff	tablat,indf2
 12063  001B4A  2A25               	incf	__display_failed@cntr,f,c
 12064  001B4C                     l13644:
 12065  001B4C  5025               	movf	__display_failed@cntr,w,c
 12066  001B4E  0D01               	mullw	1
 12067  001B50  0E38               	movlw	low _failed_line3_noNextRecord
 12068  001B52  24F3               	addwf	prodl,w,c
 12069  001B54  6EF6               	movwf	tblptrl,c
 12070  001B56  0E8E               	movlw	high _failed_line3_noNextRecord
 12071  001B58  20F4               	addwfc	prodh,w,c
 12072  001B5A  6EF7               	movwf	tblptrh,c
 12073  001B5C                     	if	1	;There are 3 active tblptr bytes
 12074  001B5C  6AF8               	clrf	tblptru,c
 12075  001B5E  0E00               	movlw	low (__mediumconst shr (0+16))
 12076  001B60  22F8               	addwfc	tblptru,f,c
 12077  001B62                     	endif
 12078  001B62  0008               	tblrd		*
 12079  001B64  50F5               	movf	tablat,w,c
 12080  001B66  0900               	iorlw	0
 12081  001B68  B4D8               	btfsc	status,2,c
 12082  001B6A  D070               	goto	l13664
 12083  001B6C  D7D8               	goto	l13640
 12084  001B6E                     l13646:
 12085                           
 12086                           ;display.c: 400: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 12087  001B6E  5025               	movf	__display_failed@cntr,w,c
 12088  001B70  0D01               	mullw	1
 12089  001B72  0E47               	movlw	low _failed_line3_dataTooLong
 12090  001B74  24F3               	addwf	prodl,w,c
 12091  001B76  6EF6               	movwf	tblptrl,c
 12092  001B78  0E8E               	movlw	high _failed_line3_dataTooLong
 12093  001B7A  20F4               	addwfc	prodh,w,c
 12094  001B7C  6EF7               	movwf	tblptrh,c
 12095  001B7E                     	if	1	;There are 3 active tblptr bytes
 12096  001B7E  6AF8               	clrf	tblptru,c
 12097  001B80  0E00               	movlw	low (__mediumconst shr (0+16))
 12098  001B82  22F8               	addwfc	tblptru,f,c
 12099  001B84                     	endif
 12100  001B84  5025               	movf	__display_failed@cntr,w,c
 12101  001B86  0D01               	mullw	1
 12102  001B88  0E8C               	movlw	low (_display_content+40)
 12103  001B8A  24F3               	addwf	prodl,w,c
 12104  001B8C  6ED9               	movwf	fsr2l,c
 12105  001B8E  0E02               	movlw	high (_display_content+40)
 12106  001B90  20F4               	addwfc	prodh,w,c
 12107  001B92  6EDA               	movwf	fsr2h,c
 12108  001B94  0008               	tblrd		*
 12109  001B96  CFF5 FFDF          	movff	tablat,indf2
 12110  001B9A  2A25               	incf	__display_failed@cntr,f,c
 12111  001B9C                     l13650:
 12112  001B9C  5025               	movf	__display_failed@cntr,w,c
 12113  001B9E  0D01               	mullw	1
 12114  001BA0  0E47               	movlw	low _failed_line3_dataTooLong
 12115  001BA2  24F3               	addwf	prodl,w,c
 12116  001BA4  6EF6               	movwf	tblptrl,c
 12117  001BA6  0E8E               	movlw	high _failed_line3_dataTooLong
 12118  001BA8  20F4               	addwfc	prodh,w,c
 12119  001BAA  6EF7               	movwf	tblptrh,c
 12120  001BAC                     	if	1	;There are 3 active tblptr bytes
 12121  001BAC  6AF8               	clrf	tblptru,c
 12122  001BAE  0E00               	movlw	low (__mediumconst shr (0+16))
 12123  001BB0  22F8               	addwfc	tblptru,f,c
 12124  001BB2                     	endif
 12125  001BB2  0008               	tblrd		*
 12126  001BB4  50F5               	movf	tablat,w,c
 12127  001BB6  0900               	iorlw	0
 12128  001BB8  B4D8               	btfsc	status,2,c
 12129  001BBA  D048               	goto	l13664
 12130  001BBC  D7D8               	goto	l13646
 12131  001BBE                     l13652:
 12132                           
 12133                           ;display.c: 405: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 12134  001BBE  5025               	movf	__display_failed@cntr,w,c
 12135  001BC0  0D01               	mullw	1
 12136  001BC2  0EE2               	movlw	low _failed_line3_addressRange
 12137  001BC4  24F3               	addwf	prodl,w,c
 12138  001BC6  6EF6               	movwf	tblptrl,c
 12139  001BC8  0E8C               	movlw	high _failed_line3_addressRange
 12140  001BCA  20F4               	addwfc	prodh,w,c
 12141  001BCC  6EF7               	movwf	tblptrh,c
 12142  001BCE                     	if	1	;There are 3 active tblptr bytes
 12143  001BCE  6AF8               	clrf	tblptru,c
 12144  001BD0  0E00               	movlw	low (__mediumconst shr (0+16))
 12145  001BD2  22F8               	addwfc	tblptru,f,c
 12146  001BD4                     	endif
 12147  001BD4  5025               	movf	__display_failed@cntr,w,c
 12148  001BD6  0D01               	mullw	1
 12149  001BD8  0E8C               	movlw	low (_display_content+40)
 12150  001BDA  24F3               	addwf	prodl,w,c
 12151  001BDC  6ED9               	movwf	fsr2l,c
 12152  001BDE  0E02               	movlw	high (_display_content+40)
 12153  001BE0  20F4               	addwfc	prodh,w,c
 12154  001BE2  6EDA               	movwf	fsr2h,c
 12155  001BE4  0008               	tblrd		*
 12156  001BE6  CFF5 FFDF          	movff	tablat,indf2
 12157  001BEA  2A25               	incf	__display_failed@cntr,f,c
 12158  001BEC                     l13656:
 12159  001BEC  5025               	movf	__display_failed@cntr,w,c
 12160  001BEE  0D01               	mullw	1
 12161  001BF0  0EE2               	movlw	low _failed_line3_addressRange
 12162  001BF2  24F3               	addwf	prodl,w,c
 12163  001BF4  6EF6               	movwf	tblptrl,c
 12164  001BF6  0E8C               	movlw	high _failed_line3_addressRange
 12165  001BF8  20F4               	addwfc	prodh,w,c
 12166  001BFA  6EF7               	movwf	tblptrh,c
 12167  001BFC                     	if	1	;There are 3 active tblptr bytes
 12168  001BFC  6AF8               	clrf	tblptru,c
 12169  001BFE  0E00               	movlw	low (__mediumconst shr (0+16))
 12170  001C00  22F8               	addwfc	tblptru,f,c
 12171  001C02                     	endif
 12172  001C02  0008               	tblrd		*
 12173  001C04  50F5               	movf	tablat,w,c
 12174  001C06  0900               	iorlw	0
 12175  001C08  A4D8               	btfss	status,2,c
 12176  001C0A  D7D9               	goto	l13652
 12177                           
 12178                           ;display.c: 406: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 12179  001C0C  ECBB  F03C         	call	_bootloader_get_rec_address	;wreg free
 12180  001C10  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 12181  001C14  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 12182  001C18  6A21               	clrf	__display_itoa_u32@value+2,c
 12183  001C1A  6A22               	clrf	__display_itoa_u32@value+3,c
 12184  001C1C  0EAE               	movlw	low (_display_content+74)
 12185  001C1E  6E23               	movwf	__display_itoa_u32@text,c
 12186  001C20  0E02               	movlw	high (_display_content+74)
 12187  001C22  6E24               	movwf	__display_itoa_u32@text+1,c
 12188  001C24  EC1F  F008         	call	__display_itoa_u32	;wreg free
 12189                           
 12190                           ;display.c: 409: }
 12191                           
 12192                           ;display.c: 407: break;
 12193  001C28  D011               	goto	l13664
 12194  001C2A                     l13662:
 12195  001C2A  ECE5  F03C         	call	_bootloader_get_error	;wreg free
 12196                           
 12197                           ; Switch size 1, requested type "space"
 12198                           ; Number of cases is 5, Range of values is 11 to 15
 12199                           ; switch strategies available:
 12200                           ; Name         Instructions Cycles
 12201                           ; simple_byte           16     9 (average)
 12202                           ;	Chosen strategy is simple_byte
 12203  001C2E  0A0B               	xorlw	11	; case 11
 12204  001C30  B4D8               	btfsc	status,2,c
 12205  001C32  D7DC               	goto	l13656
 12206  001C34  0A07               	xorlw	7	; case 12
 12207  001C36  B4D8               	btfsc	status,2,c
 12208  001C38  D7B1               	goto	l13650
 12209  001C3A  0A01               	xorlw	1	; case 13
 12210  001C3C  B4D8               	btfsc	status,2,c
 12211  001C3E  D786               	goto	l13644
 12212  001C40  0A03               	xorlw	3	; case 14
 12213  001C42  B4D8               	btfsc	status,2,c
 12214  001C44  D75B               	goto	l13638
 12215  001C46  0A01               	xorlw	1	; case 15
 12216  001C48  B4D8               	btfsc	status,2,c
 12217  001C4A  D730               	goto	l13632
 12218  001C4C                     l13664:
 12219                           
 12220                           ;display.c: 411: cntr = 0;
 12221  001C4C  0E00               	movlw	0
 12222  001C4E  6E25               	movwf	__display_failed@cntr,c
 12223                           
 12224                           ;display.c: 412: while(failed_line4[cntr])
 12225  001C50  D017               	goto	l13670
 12226  001C52                     l13666:
 12227                           
 12228                           ;display.c: 413: display_content[3][cntr] = failed_line4[cntr++];
 12229  001C52  5025               	movf	__display_failed@cntr,w,c
 12230  001C54  0D01               	mullw	1
 12231  001C56  0E6B               	movlw	low _failed_line4
 12232  001C58  24F3               	addwf	prodl,w,c
 12233  001C5A  6EF6               	movwf	tblptrl,c
 12234  001C5C  0E8E               	movlw	high _failed_line4
 12235  001C5E  20F4               	addwfc	prodh,w,c
 12236  001C60  6EF7               	movwf	tblptrh,c
 12237  001C62                     	if	1	;There are 3 active tblptr bytes
 12238  001C62  6AF8               	clrf	tblptru,c
 12239  001C64  0E00               	movlw	low (__mediumconst shr (0+16))
 12240  001C66  22F8               	addwfc	tblptru,f,c
 12241  001C68                     	endif
 12242  001C68  5025               	movf	__display_failed@cntr,w,c
 12243  001C6A  0D01               	mullw	1
 12244  001C6C  0EA0               	movlw	low (_display_content+60)
 12245  001C6E  24F3               	addwf	prodl,w,c
 12246  001C70  6ED9               	movwf	fsr2l,c
 12247  001C72  0E02               	movlw	high (_display_content+60)
 12248  001C74  20F4               	addwfc	prodh,w,c
 12249  001C76  6EDA               	movwf	fsr2h,c
 12250  001C78  0008               	tblrd		*
 12251  001C7A  CFF5 FFDF          	movff	tablat,indf2
 12252  001C7E  2A25               	incf	__display_failed@cntr,f,c
 12253  001C80                     l13670:
 12254  001C80  5025               	movf	__display_failed@cntr,w,c
 12255  001C82  0D01               	mullw	1
 12256  001C84  0E6B               	movlw	low _failed_line4
 12257  001C86  24F3               	addwf	prodl,w,c
 12258  001C88  6EF6               	movwf	tblptrl,c
 12259  001C8A  0E8E               	movlw	high _failed_line4
 12260  001C8C  20F4               	addwfc	prodh,w,c
 12261  001C8E  6EF7               	movwf	tblptrh,c
 12262  001C90                     	if	1	;There are 3 active tblptr bytes
 12263  001C90  6AF8               	clrf	tblptru,c
 12264  001C92  0E00               	movlw	low (__mediumconst shr (0+16))
 12265  001C94  22F8               	addwfc	tblptru,f,c
 12266  001C96                     	endif
 12267  001C96  0008               	tblrd		*
 12268  001C98  50F5               	movf	tablat,w,c
 12269  001C9A  0900               	iorlw	0
 12270  001C9C  A4D8               	btfss	status,2,c
 12271  001C9E  D7D9               	goto	l13666
 12272                           
 12273                           ;display.c: 414: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 12274  001CA0  ECC0  F03C         	call	_bootloader_get_entries	;wreg free
 12275  001CA4  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 12276  001CA8  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 12277  001CAC  6A1B               	clrf	__display_itoa_u16@value+2,c
 12278  001CAE  6A1C               	clrf	__display_itoa_u16@value+3,c
 12279  001CB0  5025               	movf	__display_failed@cntr,w,c
 12280  001CB2  0D01               	mullw	1
 12281  001CB4  0EA0               	movlw	low (_display_content+60)
 12282  001CB6  24F3               	addwf	prodl,w,c
 12283  001CB8  6E1D               	movwf	__display_itoa_u16@text,c
 12284  001CBA  0E02               	movlw	high (_display_content+60)
 12285  001CBC  20F4               	addwfc	prodh,w,c
 12286  001CBE  6E1E               	movwf	__display_itoa_u16@text+1,c
 12287  001CC0  EC7C  F029         	call	__display_itoa_u16	;wreg free
 12288  001CC4  0012               	return		;funcret
 12289  001CC6                     __end_of__display_failed:
 12290                           	opt stack 0
 12291                           tblptru	equ	0xFF8
 12292                           tblptrh	equ	0xFF7
 12293                           tblptrl	equ	0xFF6
 12294                           tablat	equ	0xFF5
 12295                           prodh	equ	0xFF4
 12296                           prodl	equ	0xFF3
 12297                           intcon	equ	0xFF2
 12298                           intcon2	equ	0xFF1
 12299                           intcon3	equ	0xFF0
 12300                           postinc0	equ	0xFEE
 12301                           wreg	equ	0xFE8
 12302                           indf1	equ	0xFE7
 12303                           postdec1	equ	0xFE5
 12304                           plusw1	equ	0xFE3
 12305                           fsr1h	equ	0xFE2
 12306                           fsr1l	equ	0xFE1
 12307                           indf2	equ	0xFDF
 12308                           postinc2	equ	0xFDE
 12309                           postdec2	equ	0xFDD
 12310                           plusw2	equ	0xFDB
 12311                           fsr2h	equ	0xFDA
 12312                           fsr2l	equ	0xFD9
 12313                           status	equ	0xFD8
 12314                           
 12315 ;; *************** function _bootloader_get_rec_address *****************
 12316 ;; Defined at:
 12317 ;;		line 447 in file "bootloader.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;		None
 12320 ;; Auto vars:     Size  Location     Type
 12321 ;;		None
 12322 ;; Return value:  Size  Location     Type
 12323 ;;                  2    0[COMRAM] unsigned int 
 12324 ;; Registers used:
 12325 ;;		None
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12334 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12335 ;;Total ram usage:        2 bytes
 12336 ;; Hardware stack levels used:    1
 12337 ;; This function calls:
 12338 ;;		Nothing
 12339 ;; This function is called by:
 12340 ;;		__display_failed
 12341 ;; This function uses a non-reentrant model
 12342 ;;
 12343                           
 12344                           	psect	text51
 12345  007976                     __ptext51:
 12346                           	opt stack 0
 12347  007976                     _bootloader_get_rec_address:
 12348                           	opt stack 28
 12349                           
 12350                           ;bootloader.c: 450: return hex_file_entry.address;
 12351                           
 12352                           ;incstack = 0
 12353  007976  C19B  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 12354  00797A  C19C  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 12355  00797E  0012               	return		;funcret
 12356  007980                     __end_of_bootloader_get_rec_address:
 12357                           	opt stack 0
 12358                           tblptru	equ	0xFF8
 12359                           tblptrh	equ	0xFF7
 12360                           tblptrl	equ	0xFF6
 12361                           tablat	equ	0xFF5
 12362                           prodh	equ	0xFF4
 12363                           prodl	equ	0xFF3
 12364                           intcon	equ	0xFF2
 12365                           intcon2	equ	0xFF1
 12366                           intcon3	equ	0xFF0
 12367                           postinc0	equ	0xFEE
 12368                           wreg	equ	0xFE8
 12369                           indf1	equ	0xFE7
 12370                           postdec1	equ	0xFE5
 12371                           plusw1	equ	0xFE3
 12372                           fsr1h	equ	0xFE2
 12373                           fsr1l	equ	0xFE1
 12374                           indf2	equ	0xFDF
 12375                           postinc2	equ	0xFDE
 12376                           postdec2	equ	0xFDD
 12377                           plusw2	equ	0xFDB
 12378                           fsr2h	equ	0xFDA
 12379                           fsr2l	equ	0xFD9
 12380                           status	equ	0xFD8
 12381                           
 12382 ;; *************** function _bootloader_get_error *****************
 12383 ;; Defined at:
 12384 ;;		line 437 in file "bootloader.c"
 12385 ;; Parameters:    Size  Location     Type
 12386 ;;		None
 12387 ;; Auto vars:     Size  Location     Type
 12388 ;;		None
 12389 ;; Return value:  Size  Location     Type
 12390 ;;                  1    wreg      enum E8594
 12391 ;; Registers used:
 12392 ;;		wreg, status,2
 12393 ;; Tracked objects:
 12394 ;;		On entry : 0/0
 12395 ;;		On exit  : 0/0
 12396 ;;		Unchanged: 0/0
 12397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12402 ;;Total ram usage:        0 bytes
 12403 ;; Hardware stack levels used:    1
 12404 ;; This function calls:
 12405 ;;		Nothing
 12406 ;; This function is called by:
 12407 ;;		__display_failed
 12408 ;; This function uses a non-reentrant model
 12409 ;;
 12410                           
 12411                           	psect	text52
 12412  0079CA                     __ptext52:
 12413                           	opt stack 0
 12414  0079CA                     _bootloader_get_error:
 12415                           	opt stack 28
 12416                           
 12417                           ;bootloader.c: 439: return last_error;
 12418                           
 12419                           ;incstack = 0
 12420  0079CA  0101               	movlb	1	; () banked
 12421  0079CC  5181               	movf	_last_error& (0+255),w,b
 12422  0079CE  0012               	return	
 12423  0079D0                     __end_of_bootloader_get_error:
 12424                           	opt stack 0
 12425                           tblptru	equ	0xFF8
 12426                           tblptrh	equ	0xFF7
 12427                           tblptrl	equ	0xFF6
 12428                           tablat	equ	0xFF5
 12429                           prodh	equ	0xFF4
 12430                           prodl	equ	0xFF3
 12431                           intcon	equ	0xFF2
 12432                           intcon2	equ	0xFF1
 12433                           intcon3	equ	0xFF0
 12434                           postinc0	equ	0xFEE
 12435                           wreg	equ	0xFE8
 12436                           indf1	equ	0xFE7
 12437                           postdec1	equ	0xFE5
 12438                           plusw1	equ	0xFE3
 12439                           fsr1h	equ	0xFE2
 12440                           fsr1l	equ	0xFE1
 12441                           indf2	equ	0xFDF
 12442                           postinc2	equ	0xFDE
 12443                           postdec2	equ	0xFDD
 12444                           plusw2	equ	0xFDB
 12445                           fsr2h	equ	0xFDA
 12446                           fsr2l	equ	0xFD9
 12447                           status	equ	0xFD8
 12448                           
 12449 ;; *************** function _bootloader_get_entries *****************
 12450 ;; Defined at:
 12451 ;;		line 427 in file "bootloader.c"
 12452 ;; Parameters:    Size  Location     Type
 12453 ;;		None
 12454 ;; Auto vars:     Size  Location     Type
 12455 ;;		None
 12456 ;; Return value:  Size  Location     Type
 12457 ;;                  2    0[COMRAM] unsigned int 
 12458 ;; Registers used:
 12459 ;;		None
 12460 ;; Tracked objects:
 12461 ;;		On entry : 0/0
 12462 ;;		On exit  : 0/0
 12463 ;;		Unchanged: 0/0
 12464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12469 ;;Total ram usage:        2 bytes
 12470 ;; Hardware stack levels used:    1
 12471 ;; This function calls:
 12472 ;;		Nothing
 12473 ;; This function is called by:
 12474 ;;		__display_verify
 12475 ;;		__display_failed
 12476 ;;		__display_programming
 12477 ;; This function uses a non-reentrant model
 12478 ;;
 12479                           
 12480                           	psect	text53
 12481  007980                     __ptext53:
 12482                           	opt stack 0
 12483  007980                     _bootloader_get_entries:
 12484                           	opt stack 28
 12485                           
 12486                           ;bootloader.c: 429: return hex_file_entries;
 12487                           
 12488                           ; BSR set to: 1
 12489                           ;incstack = 0
 12490  007980  C170  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 12491  007984  C171  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 12492  007988  0012               	return		;funcret
 12493  00798A                     __end_of_bootloader_get_entries:
 12494                           	opt stack 0
 12495                           tblptru	equ	0xFF8
 12496                           tblptrh	equ	0xFF7
 12497                           tblptrl	equ	0xFF6
 12498                           tablat	equ	0xFF5
 12499                           prodh	equ	0xFF4
 12500                           prodl	equ	0xFF3
 12501                           intcon	equ	0xFF2
 12502                           intcon2	equ	0xFF1
 12503                           intcon3	equ	0xFF0
 12504                           postinc0	equ	0xFEE
 12505                           wreg	equ	0xFE8
 12506                           indf1	equ	0xFE7
 12507                           postdec1	equ	0xFE5
 12508                           plusw1	equ	0xFE3
 12509                           fsr1h	equ	0xFE2
 12510                           fsr1l	equ	0xFE1
 12511                           indf2	equ	0xFDF
 12512                           postinc2	equ	0xFDE
 12513                           postdec2	equ	0xFDD
 12514                           plusw2	equ	0xFDB
 12515                           fsr2h	equ	0xFDA
 12516                           fsr2l	equ	0xFD9
 12517                           status	equ	0xFD8
 12518                           
 12519 ;; *************** function __display_itoa_u32 *****************
 12520 ;; Defined at:
 12521 ;;		line 109 in file "display.c"
 12522 ;; Parameters:    Size  Location     Type
 12523 ;;  value           4   30[COMRAM] unsigned long 
 12524 ;;  text            2   34[COMRAM] PTR unsigned char 
 12525 ;;		 -> display_content(80), 
 12526 ;; Auto vars:     Size  Location     Type
 12527 ;;		None
 12528 ;; Return value:  Size  Location     Type
 12529 ;;                  1    wreg      unsigned char 
 12530 ;; Registers used:
 12531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12532 ;; Tracked objects:
 12533 ;;		On entry : 0/0
 12534 ;;		On exit  : 0/0
 12535 ;;		Unchanged: 0/0
 12536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12537 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12540 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12541 ;;Total ram usage:        6 bytes
 12542 ;; Hardware stack levels used:    1
 12543 ;; Hardware stack levels required when called:    4
 12544 ;; This function calls:
 12545 ;;		___lldiv
 12546 ;;		___llmod
 12547 ;;		__display_itoa_u16
 12548 ;;		_itoa
 12549 ;; This function is called by:
 12550 ;;		__display_found
 12551 ;;		__display_failed
 12552 ;; This function uses a non-reentrant model
 12553 ;;
 12554                           
 12555                           	psect	text54
 12556  00103E                     __ptext54:
 12557                           	opt stack 0
 12558  00103E                     __display_itoa_u32:
 12559                           	opt stack 24
 12560                           
 12561                           ;display.c: 112: if(value<=0x7FFF)
 12562                           
 12563                           ;incstack = 0
 12564  00103E  5022               	movf	__display_itoa_u32@value+3,w,c
 12565  001040  1021               	iorwf	__display_itoa_u32@value+2,w,c
 12566  001042  E111               	bnz	l12202
 12567  001044  0E80               	movlw	128
 12568  001046  5C20               	subwf	__display_itoa_u32@value+1,w,c
 12569  001048  B0D8               	btfsc	status,0,c
 12570  00104A  D00D               	goto	l12202
 12571                           
 12572                           ;display.c: 113: {
 12573                           ;display.c: 114: return _display_itoa_u16((uint16_t) value, text);
 12574  00104C  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 12575  001050  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 12576  001054  6A1B               	clrf	__display_itoa_u16@value+2,c
 12577  001056  6A1C               	clrf	__display_itoa_u16@value+3,c
 12578  001058  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 12579  00105C  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 12580  001060  EC7C  F029         	call	__display_itoa_u16	;wreg free
 12581  001064  0012               	return	
 12582  001066                     l12202:
 12583                           
 12584                           ;display.c: 115: }
 12585                           ;display.c: 118: if(value>100000000)
 12586  001066  041F               	decf	__display_itoa_u32@value,w,c
 12587  001068  0EE1               	movlw	225
 12588  00106A  5820               	subwfb	__display_itoa_u32@value+1,w,c
 12589  00106C  0EF5               	movlw	245
 12590  00106E  5821               	subwfb	__display_itoa_u32@value+2,w,c
 12591  001070  0E05               	movlw	5
 12592  001072  5822               	subwfb	__display_itoa_u32@value+3,w,c
 12593  001074  A0D8               	btfss	status,0,c
 12594  001076  D04C               	goto	l12214
 12595                           
 12596                           ;display.c: 119: {
 12597                           ;display.c: 120: itoa(text, (uint16_t)(value/10000), 10);
 12598  001078  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 12599  00107C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 12600  001080  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 12601  001084  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 12602  001088  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 12603  00108C  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 12604  001090  0E10               	movlw	16
 12605  001092  6E05               	movwf	___lldiv@divisor,c
 12606  001094  0E27               	movlw	39
 12607  001096  6E06               	movwf	___lldiv@divisor+1,c
 12608  001098  0E00               	movlw	0
 12609  00109A  6E07               	movwf	___lldiv@divisor+2,c
 12610  00109C  0E00               	movlw	0
 12611  00109E  6E08               	movwf	___lldiv@divisor+3,c
 12612  0010A0  EC15  F030         	call	___lldiv	;wreg free
 12613  0010A4  C001  F013         	movff	?___lldiv,itoa@val
 12614  0010A8  C002  F014         	movff	?___lldiv+1,itoa@val+1
 12615  0010AC  0E00               	movlw	0
 12616  0010AE  6E16               	movwf	itoa@base+1,c
 12617  0010B0  0E0A               	movlw	10
 12618  0010B2  6E15               	movwf	itoa@base,c
 12619  0010B4  EC0F  F038         	call	_itoa	;wreg free
 12620                           
 12621                           ;display.c: 121: itoa(text+5, (uint16_t)(value%10000), 10);
 12622  0010B8  0E05               	movlw	5
 12623  0010BA  2423               	addwf	__display_itoa_u32@text,w,c
 12624  0010BC  6E11               	movwf	itoa@buf,c
 12625  0010BE  0E00               	movlw	0
 12626  0010C0  2024               	addwfc	__display_itoa_u32@text+1,w,c
 12627  0010C2  6E12               	movwf	itoa@buf+1,c
 12628  0010C4  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 12629  0010C8  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 12630  0010CC  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 12631  0010D0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 12632  0010D4  0E10               	movlw	16
 12633  0010D6  6E05               	movwf	___llmod@divisor,c
 12634  0010D8  0E27               	movlw	39
 12635  0010DA  6E06               	movwf	___llmod@divisor+1,c
 12636  0010DC  0E00               	movlw	0
 12637  0010DE  6E07               	movwf	___llmod@divisor+2,c
 12638  0010E0  0E00               	movlw	0
 12639  0010E2  6E08               	movwf	___llmod@divisor+3,c
 12640  0010E4  ECD8  F032         	call	___llmod	;wreg free
 12641  0010E8  C001  F013         	movff	?___llmod,itoa@val
 12642  0010EC  C002  F014         	movff	?___llmod+1,itoa@val+1
 12643  0010F0  0E00               	movlw	0
 12644  0010F2  6E16               	movwf	itoa@base+1,c
 12645  0010F4  0E0A               	movlw	10
 12646  0010F6  6E15               	movwf	itoa@base,c
 12647  0010F8  EC0F  F038         	call	_itoa	;wreg free
 12648                           
 12649                           ;display.c: 122: *(text+9) = ' ';
 12650  0010FC  EE20 F009          	lfsr	2,9
 12651  001100  5023               	movf	__display_itoa_u32@text,w,c
 12652  001102  26D9               	addwf	fsr2l,f,c
 12653  001104  5024               	movf	__display_itoa_u32@text+1,w,c
 12654  001106  22DA               	addwfc	fsr2h,f,c
 12655  001108  0E20               	movlw	32
 12656  00110A  6EDF               	movwf	indf2,c
 12657                           
 12658                           ;display.c: 123: return 9;
 12659  00110C  0E09               	movlw	9
 12660                           
 12661                           ;display.c: 124: }
 12662  00110E  0012               	return	
 12663  001110                     l12214:
 12664                           
 12665                           ;display.c: 125: else if(value>10000000)
 12666  001110  5022               	movf	__display_itoa_u32@value+3,w,c
 12667  001112  E108               	bnz	u8970
 12668  001114  0E81               	movlw	129
 12669  001116  5C1F               	subwf	__display_itoa_u32@value,w,c
 12670  001118  0E96               	movlw	150
 12671  00111A  5820               	subwfb	__display_itoa_u32@value+1,w,c
 12672  00111C  0E98               	movlw	152
 12673  00111E  5821               	subwfb	__display_itoa_u32@value+2,w,c
 12674  001120  A0D8               	btfss	status,0,c
 12675  001122  D04C               	goto	l12226
 12676  001124                     u8970:
 12677                           
 12678                           ;display.c: 126: {
 12679                           ;display.c: 127: itoa(text, (uint16_t)(value/10000), 10);
 12680  001124  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 12681  001128  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 12682  00112C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 12683  001130  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 12684  001134  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 12685  001138  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 12686  00113C  0E10               	movlw	16
 12687  00113E  6E05               	movwf	___lldiv@divisor,c
 12688  001140  0E27               	movlw	39
 12689  001142  6E06               	movwf	___lldiv@divisor+1,c
 12690  001144  0E00               	movlw	0
 12691  001146  6E07               	movwf	___lldiv@divisor+2,c
 12692  001148  0E00               	movlw	0
 12693  00114A  6E08               	movwf	___lldiv@divisor+3,c
 12694  00114C  EC15  F030         	call	___lldiv	;wreg free
 12695  001150  C001  F013         	movff	?___lldiv,itoa@val
 12696  001154  C002  F014         	movff	?___lldiv+1,itoa@val+1
 12697  001158  0E00               	movlw	0
 12698  00115A  6E16               	movwf	itoa@base+1,c
 12699  00115C  0E0A               	movlw	10
 12700  00115E  6E15               	movwf	itoa@base,c
 12701  001160  EC0F  F038         	call	_itoa	;wreg free
 12702                           
 12703                           ;display.c: 128: itoa(text+4, (uint16_t)(value%10000), 10);
 12704  001164  0E04               	movlw	4
 12705  001166  2423               	addwf	__display_itoa_u32@text,w,c
 12706  001168  6E11               	movwf	itoa@buf,c
 12707  00116A  0E00               	movlw	0
 12708  00116C  2024               	addwfc	__display_itoa_u32@text+1,w,c
 12709  00116E  6E12               	movwf	itoa@buf+1,c
 12710  001170  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 12711  001174  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 12712  001178  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 12713  00117C  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 12714  001180  0E10               	movlw	16
 12715  001182  6E05               	movwf	___llmod@divisor,c
 12716  001184  0E27               	movlw	39
 12717  001186  6E06               	movwf	___llmod@divisor+1,c
 12718  001188  0E00               	movlw	0
 12719  00118A  6E07               	movwf	___llmod@divisor+2,c
 12720  00118C  0E00               	movlw	0
 12721  00118E  6E08               	movwf	___llmod@divisor+3,c
 12722  001190  ECD8  F032         	call	___llmod	;wreg free
 12723  001194  C001  F013         	movff	?___llmod,itoa@val
 12724  001198  C002  F014         	movff	?___llmod+1,itoa@val+1
 12725  00119C  0E00               	movlw	0
 12726  00119E  6E16               	movwf	itoa@base+1,c
 12727  0011A0  0E0A               	movlw	10
 12728  0011A2  6E15               	movwf	itoa@base,c
 12729  0011A4  EC0F  F038         	call	_itoa	;wreg free
 12730                           
 12731                           ;display.c: 129: *(text+8) = ' ';
 12732  0011A8  EE20 F008          	lfsr	2,8
 12733  0011AC  5023               	movf	__display_itoa_u32@text,w,c
 12734  0011AE  26D9               	addwf	fsr2l,f,c
 12735  0011B0  5024               	movf	__display_itoa_u32@text+1,w,c
 12736  0011B2  22DA               	addwfc	fsr2h,f,c
 12737  0011B4  0E20               	movlw	32
 12738  0011B6  6EDF               	movwf	indf2,c
 12739                           
 12740                           ;display.c: 130: return 8;
 12741  0011B8  0E08               	movlw	8
 12742                           
 12743                           ;display.c: 131: }
 12744  0011BA  0012               	return	
 12745  0011BC                     l12226:
 12746                           
 12747                           ;display.c: 132: else if(value>1000000)
 12748  0011BC  5022               	movf	__display_itoa_u32@value+3,w,c
 12749  0011BE  E108               	bnz	u8980
 12750  0011C0  0E41               	movlw	65
 12751  0011C2  5C1F               	subwf	__display_itoa_u32@value,w,c
 12752  0011C4  0E42               	movlw	66
 12753  0011C6  5820               	subwfb	__display_itoa_u32@value+1,w,c
 12754  0011C8  0E0F               	movlw	15
 12755  0011CA  5821               	subwfb	__display_itoa_u32@value+2,w,c
 12756  0011CC  A0D8               	btfss	status,0,c
 12757  0011CE  D04C               	goto	l12238
 12758  0011D0                     u8980:
 12759                           
 12760                           ;display.c: 133: {
 12761                           ;display.c: 134: itoa(text, (uint16_t)(value/10000), 10);
 12762  0011D0  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 12763  0011D4  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 12764  0011D8  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 12765  0011DC  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 12766  0011E0  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 12767  0011E4  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 12768  0011E8  0E10               	movlw	16
 12769  0011EA  6E05               	movwf	___lldiv@divisor,c
 12770  0011EC  0E27               	movlw	39
 12771  0011EE  6E06               	movwf	___lldiv@divisor+1,c
 12772  0011F0  0E00               	movlw	0
 12773  0011F2  6E07               	movwf	___lldiv@divisor+2,c
 12774  0011F4  0E00               	movlw	0
 12775  0011F6  6E08               	movwf	___lldiv@divisor+3,c
 12776  0011F8  EC15  F030         	call	___lldiv	;wreg free
 12777  0011FC  C001  F013         	movff	?___lldiv,itoa@val
 12778  001200  C002  F014         	movff	?___lldiv+1,itoa@val+1
 12779  001204  0E00               	movlw	0
 12780  001206  6E16               	movwf	itoa@base+1,c
 12781  001208  0E0A               	movlw	10
 12782  00120A  6E15               	movwf	itoa@base,c
 12783  00120C  EC0F  F038         	call	_itoa	;wreg free
 12784                           
 12785                           ;display.c: 135: itoa(text+3, (uint16_t)(value%10000), 10);
 12786  001210  0E03               	movlw	3
 12787  001212  2423               	addwf	__display_itoa_u32@text,w,c
 12788  001214  6E11               	movwf	itoa@buf,c
 12789  001216  0E00               	movlw	0
 12790  001218  2024               	addwfc	__display_itoa_u32@text+1,w,c
 12791  00121A  6E12               	movwf	itoa@buf+1,c
 12792  00121C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 12793  001220  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 12794  001224  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 12795  001228  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 12796  00122C  0E10               	movlw	16
 12797  00122E  6E05               	movwf	___llmod@divisor,c
 12798  001230  0E27               	movlw	39
 12799  001232  6E06               	movwf	___llmod@divisor+1,c
 12800  001234  0E00               	movlw	0
 12801  001236  6E07               	movwf	___llmod@divisor+2,c
 12802  001238  0E00               	movlw	0
 12803  00123A  6E08               	movwf	___llmod@divisor+3,c
 12804  00123C  ECD8  F032         	call	___llmod	;wreg free
 12805  001240  C001  F013         	movff	?___llmod,itoa@val
 12806  001244  C002  F014         	movff	?___llmod+1,itoa@val+1
 12807  001248  0E00               	movlw	0
 12808  00124A  6E16               	movwf	itoa@base+1,c
 12809  00124C  0E0A               	movlw	10
 12810  00124E  6E15               	movwf	itoa@base,c
 12811  001250  EC0F  F038         	call	_itoa	;wreg free
 12812                           
 12813                           ;display.c: 136: *(text+7) = ' ';
 12814  001254  EE20 F007          	lfsr	2,7
 12815  001258  5023               	movf	__display_itoa_u32@text,w,c
 12816  00125A  26D9               	addwf	fsr2l,f,c
 12817  00125C  5024               	movf	__display_itoa_u32@text+1,w,c
 12818  00125E  22DA               	addwfc	fsr2h,f,c
 12819  001260  0E20               	movlw	32
 12820  001262  6EDF               	movwf	indf2,c
 12821                           
 12822                           ;display.c: 137: return 7;
 12823  001264  0E07               	movlw	7
 12824                           
 12825                           ;display.c: 138: }
 12826  001266  0012               	return	
 12827  001268                     l12238:
 12828                           
 12829                           ;display.c: 139: else if(value>100000)
 12830  001268  5022               	movf	__display_itoa_u32@value+3,w,c
 12831  00126A  E108               	bnz	u8990
 12832  00126C  0EA1               	movlw	161
 12833  00126E  5C1F               	subwf	__display_itoa_u32@value,w,c
 12834  001270  0E86               	movlw	134
 12835  001272  5820               	subwfb	__display_itoa_u32@value+1,w,c
 12836  001274  0E01               	movlw	1
 12837  001276  5821               	subwfb	__display_itoa_u32@value+2,w,c
 12838  001278  A0D8               	btfss	status,0,c
 12839  00127A  D04C               	goto	l12250
 12840  00127C                     u8990:
 12841                           
 12842                           ;display.c: 140: {
 12843                           ;display.c: 141: itoa(text, (uint16_t)(value/10000), 10);
 12844  00127C  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 12845  001280  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 12846  001284  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 12847  001288  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 12848  00128C  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 12849  001290  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 12850  001294  0E10               	movlw	16
 12851  001296  6E05               	movwf	___lldiv@divisor,c
 12852  001298  0E27               	movlw	39
 12853  00129A  6E06               	movwf	___lldiv@divisor+1,c
 12854  00129C  0E00               	movlw	0
 12855  00129E  6E07               	movwf	___lldiv@divisor+2,c
 12856  0012A0  0E00               	movlw	0
 12857  0012A2  6E08               	movwf	___lldiv@divisor+3,c
 12858  0012A4  EC15  F030         	call	___lldiv	;wreg free
 12859  0012A8  C001  F013         	movff	?___lldiv,itoa@val
 12860  0012AC  C002  F014         	movff	?___lldiv+1,itoa@val+1
 12861  0012B0  0E00               	movlw	0
 12862  0012B2  6E16               	movwf	itoa@base+1,c
 12863  0012B4  0E0A               	movlw	10
 12864  0012B6  6E15               	movwf	itoa@base,c
 12865  0012B8  EC0F  F038         	call	_itoa	;wreg free
 12866                           
 12867                           ;display.c: 142: itoa(text+2, (uint16_t)(value%10000), 10);
 12868  0012BC  0E02               	movlw	2
 12869  0012BE  2423               	addwf	__display_itoa_u32@text,w,c
 12870  0012C0  6E11               	movwf	itoa@buf,c
 12871  0012C2  0E00               	movlw	0
 12872  0012C4  2024               	addwfc	__display_itoa_u32@text+1,w,c
 12873  0012C6  6E12               	movwf	itoa@buf+1,c
 12874  0012C8  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 12875  0012CC  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 12876  0012D0  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 12877  0012D4  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 12878  0012D8  0E10               	movlw	16
 12879  0012DA  6E05               	movwf	___llmod@divisor,c
 12880  0012DC  0E27               	movlw	39
 12881  0012DE  6E06               	movwf	___llmod@divisor+1,c
 12882  0012E0  0E00               	movlw	0
 12883  0012E2  6E07               	movwf	___llmod@divisor+2,c
 12884  0012E4  0E00               	movlw	0
 12885  0012E6  6E08               	movwf	___llmod@divisor+3,c
 12886  0012E8  ECD8  F032         	call	___llmod	;wreg free
 12887  0012EC  C001  F013         	movff	?___llmod,itoa@val
 12888  0012F0  C002  F014         	movff	?___llmod+1,itoa@val+1
 12889  0012F4  0E00               	movlw	0
 12890  0012F6  6E16               	movwf	itoa@base+1,c
 12891  0012F8  0E0A               	movlw	10
 12892  0012FA  6E15               	movwf	itoa@base,c
 12893  0012FC  EC0F  F038         	call	_itoa	;wreg free
 12894                           
 12895                           ;display.c: 143: *(text+6) = ' ';
 12896  001300  EE20 F006          	lfsr	2,6
 12897  001304  5023               	movf	__display_itoa_u32@text,w,c
 12898  001306  26D9               	addwf	fsr2l,f,c
 12899  001308  5024               	movf	__display_itoa_u32@text+1,w,c
 12900  00130A  22DA               	addwfc	fsr2h,f,c
 12901  00130C  0E20               	movlw	32
 12902  00130E  6EDF               	movwf	indf2,c
 12903                           
 12904                           ;display.c: 144: return 6;
 12905  001310  0E06               	movlw	6
 12906                           
 12907                           ;display.c: 145: }
 12908  001312  0012               	return	
 12909  001314                     l12250:
 12910                           
 12911                           ;display.c: 146: else
 12912                           ;display.c: 147: {
 12913                           ;display.c: 148: itoa(text, (uint16_t)(value/10000), 10);
 12914  001314  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 12915  001318  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 12916  00131C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 12917  001320  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 12918  001324  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 12919  001328  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 12920  00132C  0E10               	movlw	16
 12921  00132E  6E05               	movwf	___lldiv@divisor,c
 12922  001330  0E27               	movlw	39
 12923  001332  6E06               	movwf	___lldiv@divisor+1,c
 12924  001334  0E00               	movlw	0
 12925  001336  6E07               	movwf	___lldiv@divisor+2,c
 12926  001338  0E00               	movlw	0
 12927  00133A  6E08               	movwf	___lldiv@divisor+3,c
 12928  00133C  EC15  F030         	call	___lldiv	;wreg free
 12929  001340  C001  F013         	movff	?___lldiv,itoa@val
 12930  001344  C002  F014         	movff	?___lldiv+1,itoa@val+1
 12931  001348  0E00               	movlw	0
 12932  00134A  6E16               	movwf	itoa@base+1,c
 12933  00134C  0E0A               	movlw	10
 12934  00134E  6E15               	movwf	itoa@base,c
 12935  001350  EC0F  F038         	call	_itoa	;wreg free
 12936                           
 12937                           ;display.c: 149: itoa(text+1, (uint16_t)(value%10000), 10);
 12938  001354  0E01               	movlw	1
 12939  001356  2423               	addwf	__display_itoa_u32@text,w,c
 12940  001358  6E11               	movwf	itoa@buf,c
 12941  00135A  0E00               	movlw	0
 12942  00135C  2024               	addwfc	__display_itoa_u32@text+1,w,c
 12943  00135E  6E12               	movwf	itoa@buf+1,c
 12944  001360  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 12945  001364  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 12946  001368  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 12947  00136C  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 12948  001370  0E10               	movlw	16
 12949  001372  6E05               	movwf	___llmod@divisor,c
 12950  001374  0E27               	movlw	39
 12951  001376  6E06               	movwf	___llmod@divisor+1,c
 12952  001378  0E00               	movlw	0
 12953  00137A  6E07               	movwf	___llmod@divisor+2,c
 12954  00137C  0E00               	movlw	0
 12955  00137E  6E08               	movwf	___llmod@divisor+3,c
 12956  001380  ECD8  F032         	call	___llmod	;wreg free
 12957  001384  C001  F013         	movff	?___llmod,itoa@val
 12958  001388  C002  F014         	movff	?___llmod+1,itoa@val+1
 12959  00138C  0E00               	movlw	0
 12960  00138E  6E16               	movwf	itoa@base+1,c
 12961  001390  0E0A               	movlw	10
 12962  001392  6E15               	movwf	itoa@base,c
 12963  001394  EC0F  F038         	call	_itoa	;wreg free
 12964                           
 12965                           ;display.c: 150: *(text+5) = ' ';
 12966  001398  EE20 F005          	lfsr	2,5
 12967  00139C  5023               	movf	__display_itoa_u32@text,w,c
 12968  00139E  26D9               	addwf	fsr2l,f,c
 12969  0013A0  5024               	movf	__display_itoa_u32@text+1,w,c
 12970  0013A2  22DA               	addwfc	fsr2h,f,c
 12971  0013A4  0E20               	movlw	32
 12972  0013A6  6EDF               	movwf	indf2,c
 12973                           
 12974                           ;display.c: 151: return 5;
 12975  0013A8  0E05               	movlw	5
 12976  0013AA  0012               	return	
 12977  0013AC                     __end_of__display_itoa_u32:
 12978                           	opt stack 0
 12979                           tblptru	equ	0xFF8
 12980                           tblptrh	equ	0xFF7
 12981                           tblptrl	equ	0xFF6
 12982                           tablat	equ	0xFF5
 12983                           prodh	equ	0xFF4
 12984                           prodl	equ	0xFF3
 12985                           intcon	equ	0xFF2
 12986                           intcon2	equ	0xFF1
 12987                           intcon3	equ	0xFF0
 12988                           postinc0	equ	0xFEE
 12989                           wreg	equ	0xFE8
 12990                           indf1	equ	0xFE7
 12991                           postdec1	equ	0xFE5
 12992                           plusw1	equ	0xFE3
 12993                           fsr1h	equ	0xFE2
 12994                           fsr1l	equ	0xFE1
 12995                           indf2	equ	0xFDF
 12996                           postinc2	equ	0xFDE
 12997                           postdec2	equ	0xFDD
 12998                           plusw2	equ	0xFDB
 12999                           fsr2h	equ	0xFDA
 13000                           fsr2l	equ	0xFD9
 13001                           status	equ	0xFD8
 13002                           
 13003 ;; *************** function ___llmod *****************
 13004 ;; Defined at:
 13005 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\llmod.c"
 13006 ;; Parameters:    Size  Location     Type
 13007 ;;  dividend        4    0[COMRAM] unsigned long 
 13008 ;;  divisor         4    4[COMRAM] unsigned long 
 13009 ;; Auto vars:     Size  Location     Type
 13010 ;;  counter         1    8[COMRAM] unsigned char 
 13011 ;; Return value:  Size  Location     Type
 13012 ;;                  4    0[COMRAM] unsigned long 
 13013 ;; Registers used:
 13014 ;;		wreg, status,2, status,0
 13015 ;; Tracked objects:
 13016 ;;		On entry : 0/0
 13017 ;;		On exit  : 0/0
 13018 ;;		Unchanged: 0/0
 13019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13020 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13023 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13024 ;;Total ram usage:        9 bytes
 13025 ;; Hardware stack levels used:    1
 13026 ;; This function calls:
 13027 ;;		Nothing
 13028 ;; This function is called by:
 13029 ;;		__display_itoa_u32
 13030 ;; This function uses a non-reentrant model
 13031 ;;
 13032                           
 13033                           	psect	text55
 13034  0065B0                     __ptext55:
 13035                           	opt stack 0
 13036  0065B0                     ___llmod:
 13037                           	opt stack 27
 13038                           
 13039                           ;incstack = 0
 13040  0065B0  5005               	movf	___llmod@divisor,w,c
 13041  0065B2  1006               	iorwf	___llmod@divisor+1,w,c
 13042  0065B4  1007               	iorwf	___llmod@divisor+2,w,c
 13043  0065B6  1008               	iorwf	___llmod@divisor+3,w,c
 13044  0065B8  B4D8               	btfsc	status,2,c
 13045  0065BA  D024               	goto	l3197
 13046  0065BC  0E01               	movlw	1
 13047  0065BE  6E09               	movwf	___llmod@counter,c
 13048  0065C0  D006               	goto	l11916
 13049  0065C2                     l11914:
 13050  0065C2  90D8               	bcf	status,0,c
 13051  0065C4  3605               	rlcf	___llmod@divisor,f,c
 13052  0065C6  3606               	rlcf	___llmod@divisor+1,f,c
 13053  0065C8  3607               	rlcf	___llmod@divisor+2,f,c
 13054  0065CA  3608               	rlcf	___llmod@divisor+3,f,c
 13055  0065CC  2A09               	incf	___llmod@counter,f,c
 13056  0065CE                     l11916:
 13057  0065CE  AE08               	btfss	___llmod@divisor+3,7,c
 13058  0065D0  D7F8               	goto	l11914
 13059  0065D2                     l11918:
 13060  0065D2  5005               	movf	___llmod@divisor,w,c
 13061  0065D4  5C01               	subwf	___llmod@dividend,w,c
 13062  0065D6  5006               	movf	___llmod@divisor+1,w,c
 13063  0065D8  5802               	subwfb	___llmod@dividend+1,w,c
 13064  0065DA  5007               	movf	___llmod@divisor+2,w,c
 13065  0065DC  5803               	subwfb	___llmod@dividend+2,w,c
 13066  0065DE  5008               	movf	___llmod@divisor+3,w,c
 13067  0065E0  5804               	subwfb	___llmod@dividend+3,w,c
 13068  0065E2  A0D8               	btfss	status,0,c
 13069  0065E4  D008               	goto	l11922
 13070  0065E6  5005               	movf	___llmod@divisor,w,c
 13071  0065E8  5E01               	subwf	___llmod@dividend,f,c
 13072  0065EA  5006               	movf	___llmod@divisor+1,w,c
 13073  0065EC  5A02               	subwfb	___llmod@dividend+1,f,c
 13074  0065EE  5007               	movf	___llmod@divisor+2,w,c
 13075  0065F0  5A03               	subwfb	___llmod@dividend+2,f,c
 13076  0065F2  5008               	movf	___llmod@divisor+3,w,c
 13077  0065F4  5A04               	subwfb	___llmod@dividend+3,f,c
 13078  0065F6                     l11922:
 13079  0065F6  90D8               	bcf	status,0,c
 13080  0065F8  3208               	rrcf	___llmod@divisor+3,f,c
 13081  0065FA  3207               	rrcf	___llmod@divisor+2,f,c
 13082  0065FC  3206               	rrcf	___llmod@divisor+1,f,c
 13083  0065FE  3205               	rrcf	___llmod@divisor,f,c
 13084  006600  2E09               	decfsz	___llmod@counter,f,c
 13085  006602  D7E7               	goto	l11918
 13086  006604                     l3197:
 13087  006604  C001  F001         	movff	___llmod@dividend,?___llmod
 13088  006608  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 13089  00660C  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 13090  006610  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 13091  006614  0012               	return		;funcret
 13092  006616                     __end_of___llmod:
 13093                           	opt stack 0
 13094                           tblptru	equ	0xFF8
 13095                           tblptrh	equ	0xFF7
 13096                           tblptrl	equ	0xFF6
 13097                           tablat	equ	0xFF5
 13098                           prodh	equ	0xFF4
 13099                           prodl	equ	0xFF3
 13100                           intcon	equ	0xFF2
 13101                           intcon2	equ	0xFF1
 13102                           intcon3	equ	0xFF0
 13103                           postinc0	equ	0xFEE
 13104                           wreg	equ	0xFE8
 13105                           indf1	equ	0xFE7
 13106                           postdec1	equ	0xFE5
 13107                           plusw1	equ	0xFE3
 13108                           fsr1h	equ	0xFE2
 13109                           fsr1l	equ	0xFE1
 13110                           indf2	equ	0xFDF
 13111                           postinc2	equ	0xFDE
 13112                           postdec2	equ	0xFDD
 13113                           plusw2	equ	0xFDB
 13114                           fsr2h	equ	0xFDA
 13115                           fsr2l	equ	0xFD9
 13116                           status	equ	0xFD8
 13117                           
 13118 ;; *************** function ___lldiv *****************
 13119 ;; Defined at:
 13120 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
 13121 ;; Parameters:    Size  Location     Type
 13122 ;;  dividend        4    0[COMRAM] unsigned long 
 13123 ;;  divisor         4    4[COMRAM] unsigned long 
 13124 ;; Auto vars:     Size  Location     Type
 13125 ;;  quotient        4    8[COMRAM] unsigned long 
 13126 ;;  counter         1   12[COMRAM] unsigned char 
 13127 ;; Return value:  Size  Location     Type
 13128 ;;                  4    0[COMRAM] unsigned long 
 13129 ;; Registers used:
 13130 ;;		wreg, status,2, status,0
 13131 ;; Tracked objects:
 13132 ;;		On entry : 0/0
 13133 ;;		On exit  : 0/0
 13134 ;;		Unchanged: 0/0
 13135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13136 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13137 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13139 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13140 ;;Total ram usage:       13 bytes
 13141 ;; Hardware stack levels used:    1
 13142 ;; This function calls:
 13143 ;;		Nothing
 13144 ;; This function is called by:
 13145 ;;		__display_itoa_u32
 13146 ;; This function uses a non-reentrant model
 13147 ;;
 13148                           
 13149                           	psect	text56
 13150  00602A                     __ptext56:
 13151                           	opt stack 0
 13152  00602A                     ___lldiv:
 13153                           	opt stack 27
 13154                           
 13155                           ;incstack = 0
 13156  00602A  0E00               	movlw	0
 13157  00602C  6E09               	movwf	___lldiv@quotient,c
 13158  00602E  0E00               	movlw	0
 13159  006030  6E0A               	movwf	___lldiv@quotient+1,c
 13160  006032  0E00               	movlw	0
 13161  006034  6E0B               	movwf	___lldiv@quotient+2,c
 13162  006036  0E00               	movlw	0
 13163  006038  6E0C               	movwf	___lldiv@quotient+3,c
 13164  00603A  5005               	movf	___lldiv@divisor,w,c
 13165  00603C  1006               	iorwf	___lldiv@divisor+1,w,c
 13166  00603E  1007               	iorwf	___lldiv@divisor+2,w,c
 13167  006040  1008               	iorwf	___lldiv@divisor+3,w,c
 13168  006042  B4D8               	btfsc	status,2,c
 13169  006044  D02A               	goto	l3187
 13170  006046  0E01               	movlw	1
 13171  006048  6E0D               	movwf	___lldiv@counter,c
 13172  00604A  D006               	goto	l11896
 13173  00604C                     l11894:
 13174  00604C  90D8               	bcf	status,0,c
 13175  00604E  3605               	rlcf	___lldiv@divisor,f,c
 13176  006050  3606               	rlcf	___lldiv@divisor+1,f,c
 13177  006052  3607               	rlcf	___lldiv@divisor+2,f,c
 13178  006054  3608               	rlcf	___lldiv@divisor+3,f,c
 13179  006056  2A0D               	incf	___lldiv@counter,f,c
 13180  006058                     l11896:
 13181  006058  AE08               	btfss	___lldiv@divisor+3,7,c
 13182  00605A  D7F8               	goto	l11894
 13183  00605C                     l11898:
 13184  00605C  90D8               	bcf	status,0,c
 13185  00605E  3609               	rlcf	___lldiv@quotient,f,c
 13186  006060  360A               	rlcf	___lldiv@quotient+1,f,c
 13187  006062  360B               	rlcf	___lldiv@quotient+2,f,c
 13188  006064  360C               	rlcf	___lldiv@quotient+3,f,c
 13189  006066  5005               	movf	___lldiv@divisor,w,c
 13190  006068  5C01               	subwf	___lldiv@dividend,w,c
 13191  00606A  5006               	movf	___lldiv@divisor+1,w,c
 13192  00606C  5802               	subwfb	___lldiv@dividend+1,w,c
 13193  00606E  5007               	movf	___lldiv@divisor+2,w,c
 13194  006070  5803               	subwfb	___lldiv@dividend+2,w,c
 13195  006072  5008               	movf	___lldiv@divisor+3,w,c
 13196  006074  5804               	subwfb	___lldiv@dividend+3,w,c
 13197  006076  A0D8               	btfss	status,0,c
 13198  006078  D009               	goto	l11906
 13199  00607A  5005               	movf	___lldiv@divisor,w,c
 13200  00607C  5E01               	subwf	___lldiv@dividend,f,c
 13201  00607E  5006               	movf	___lldiv@divisor+1,w,c
 13202  006080  5A02               	subwfb	___lldiv@dividend+1,f,c
 13203  006082  5007               	movf	___lldiv@divisor+2,w,c
 13204  006084  5A03               	subwfb	___lldiv@dividend+2,f,c
 13205  006086  5008               	movf	___lldiv@divisor+3,w,c
 13206  006088  5A04               	subwfb	___lldiv@dividend+3,f,c
 13207  00608A  8009               	bsf	___lldiv@quotient,0,c
 13208  00608C                     l11906:
 13209  00608C  90D8               	bcf	status,0,c
 13210  00608E  3208               	rrcf	___lldiv@divisor+3,f,c
 13211  006090  3207               	rrcf	___lldiv@divisor+2,f,c
 13212  006092  3206               	rrcf	___lldiv@divisor+1,f,c
 13213  006094  3205               	rrcf	___lldiv@divisor,f,c
 13214  006096  2E0D               	decfsz	___lldiv@counter,f,c
 13215  006098  D7E1               	goto	l11898
 13216  00609A                     l3187:
 13217  00609A  C009  F001         	movff	___lldiv@quotient,?___lldiv
 13218  00609E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 13219  0060A2  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 13220  0060A6  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 13221  0060AA  0012               	return		;funcret
 13222  0060AC                     __end_of___lldiv:
 13223                           	opt stack 0
 13224                           tblptru	equ	0xFF8
 13225                           tblptrh	equ	0xFF7
 13226                           tblptrl	equ	0xFF6
 13227                           tablat	equ	0xFF5
 13228                           prodh	equ	0xFF4
 13229                           prodl	equ	0xFF3
 13230                           intcon	equ	0xFF2
 13231                           intcon2	equ	0xFF1
 13232                           intcon3	equ	0xFF0
 13233                           postinc0	equ	0xFEE
 13234                           wreg	equ	0xFE8
 13235                           indf1	equ	0xFE7
 13236                           postdec1	equ	0xFE5
 13237                           plusw1	equ	0xFE3
 13238                           fsr1h	equ	0xFE2
 13239                           fsr1l	equ	0xFE1
 13240                           indf2	equ	0xFDF
 13241                           postinc2	equ	0xFDE
 13242                           postdec2	equ	0xFDD
 13243                           plusw2	equ	0xFDB
 13244                           fsr2h	equ	0xFDA
 13245                           fsr2l	equ	0xFD9
 13246                           status	equ	0xFD8
 13247                           
 13248 ;; *************** function __display_done *****************
 13249 ;; Defined at:
 13250 ;;		line 441 in file "display.c"
 13251 ;; Parameters:    Size  Location     Type
 13252 ;;		None
 13253 ;; Auto vars:     Size  Location     Type
 13254 ;;  cntr            1   30[COMRAM] unsigned char 
 13255 ;; Return value:  Size  Location     Type
 13256 ;;                  1    wreg      void 
 13257 ;; Registers used:
 13258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13259 ;; Tracked objects:
 13260 ;;		On entry : 0/0
 13261 ;;		On exit  : 0/0
 13262 ;;		Unchanged: 0/0
 13263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13267 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13268 ;;Total ram usage:        1 bytes
 13269 ;; Hardware stack levels used:    1
 13270 ;; Hardware stack levels required when called:    4
 13271 ;; This function calls:
 13272 ;;		__display_itoa_u16
 13273 ;;		_bootloader_get_flashPagesWritten
 13274 ;; This function is called by:
 13275 ;;		_display_prepare
 13276 ;; This function uses a non-reentrant model
 13277 ;;
 13278                           
 13279                           	psect	text57
 13280  003608                     __ptext57:
 13281                           	opt stack 0
 13282  003608                     __display_done:
 13283                           	opt stack 25
 13284                           
 13285                           ;display.c: 443: uint8_t cntr;
 13286                           ;display.c: 444: cntr = 0;
 13287                           
 13288                           ;incstack = 0
 13289  003608  0E00               	movlw	0
 13290  00360A  6E1F               	movwf	__display_done@cntr,c
 13291                           
 13292                           ;display.c: 445: while(done_line1[cntr])
 13293  00360C  D017               	goto	l13722
 13294  00360E                     l13718:
 13295                           
 13296                           ;display.c: 446: display_content[0][cntr] = done_line1[cntr++];
 13297  00360E  501F               	movf	__display_done@cntr,w,c
 13298  003610  0D01               	mullw	1
 13299  003612  0EB9               	movlw	low _done_line1
 13300  003614  24F3               	addwf	prodl,w,c
 13301  003616  6EF6               	movwf	tblptrl,c
 13302  003618  0E8D               	movlw	high _done_line1
 13303  00361A  20F4               	addwfc	prodh,w,c
 13304  00361C  6EF7               	movwf	tblptrh,c
 13305  00361E                     	if	1	;There are 3 active tblptr bytes
 13306  00361E  6AF8               	clrf	tblptru,c
 13307  003620  0E00               	movlw	low (__mediumconst shr (0+16))
 13308  003622  22F8               	addwfc	tblptru,f,c
 13309  003624                     	endif
 13310  003624  501F               	movf	__display_done@cntr,w,c
 13311  003626  0D01               	mullw	1
 13312  003628  0E64               	movlw	low _display_content
 13313  00362A  24F3               	addwf	prodl,w,c
 13314  00362C  6ED9               	movwf	fsr2l,c
 13315  00362E  0E02               	movlw	high _display_content
 13316  003630  20F4               	addwfc	prodh,w,c
 13317  003632  6EDA               	movwf	fsr2h,c
 13318  003634  0008               	tblrd		*
 13319  003636  CFF5 FFDF          	movff	tablat,indf2
 13320  00363A  2A1F               	incf	__display_done@cntr,f,c
 13321  00363C                     l13722:
 13322  00363C  501F               	movf	__display_done@cntr,w,c
 13323  00363E  0D01               	mullw	1
 13324  003640  0EB9               	movlw	low _done_line1
 13325  003642  24F3               	addwf	prodl,w,c
 13326  003644  6EF6               	movwf	tblptrl,c
 13327  003646  0E8D               	movlw	high _done_line1
 13328  003648  20F4               	addwfc	prodh,w,c
 13329  00364A  6EF7               	movwf	tblptrh,c
 13330  00364C                     	if	1	;There are 3 active tblptr bytes
 13331  00364C  6AF8               	clrf	tblptru,c
 13332  00364E  0E00               	movlw	low (__mediumconst shr (0+16))
 13333  003650  22F8               	addwfc	tblptru,f,c
 13334  003652                     	endif
 13335  003652  0008               	tblrd		*
 13336  003654  50F5               	movf	tablat,w,c
 13337  003656  0900               	iorlw	0
 13338  003658  A4D8               	btfss	status,2,c
 13339  00365A  D7D9               	goto	l13718
 13340                           
 13341                           ;display.c: 447: cntr = 0;
 13342  00365C  0E00               	movlw	0
 13343  00365E  6E1F               	movwf	__display_done@cntr,c
 13344                           
 13345                           ;display.c: 448: while(done_line2[cntr])
 13346  003660  D017               	goto	l13730
 13347  003662                     l13726:
 13348                           
 13349                           ;display.c: 449: display_content[1][cntr] = done_line2[cntr++];
 13350  003662  501F               	movf	__display_done@cntr,w,c
 13351  003664  0D01               	mullw	1
 13352  003666  0E9F               	movlw	low _done_line2
 13353  003668  24F3               	addwf	prodl,w,c
 13354  00366A  6EF6               	movwf	tblptrl,c
 13355  00366C  0E8E               	movlw	high _done_line2
 13356  00366E  20F4               	addwfc	prodh,w,c
 13357  003670  6EF7               	movwf	tblptrh,c
 13358  003672                     	if	1	;There are 3 active tblptr bytes
 13359  003672  6AF8               	clrf	tblptru,c
 13360  003674  0E00               	movlw	low (__mediumconst shr (0+16))
 13361  003676  22F8               	addwfc	tblptru,f,c
 13362  003678                     	endif
 13363  003678  501F               	movf	__display_done@cntr,w,c
 13364  00367A  0D01               	mullw	1
 13365  00367C  0E78               	movlw	low (_display_content+20)
 13366  00367E  24F3               	addwf	prodl,w,c
 13367  003680  6ED9               	movwf	fsr2l,c
 13368  003682  0E02               	movlw	high (_display_content+20)
 13369  003684  20F4               	addwfc	prodh,w,c
 13370  003686  6EDA               	movwf	fsr2h,c
 13371  003688  0008               	tblrd		*
 13372  00368A  CFF5 FFDF          	movff	tablat,indf2
 13373  00368E  2A1F               	incf	__display_done@cntr,f,c
 13374  003690                     l13730:
 13375  003690  501F               	movf	__display_done@cntr,w,c
 13376  003692  0D01               	mullw	1
 13377  003694  0E9F               	movlw	low _done_line2
 13378  003696  24F3               	addwf	prodl,w,c
 13379  003698  6EF6               	movwf	tblptrl,c
 13380  00369A  0E8E               	movlw	high _done_line2
 13381  00369C  20F4               	addwfc	prodh,w,c
 13382  00369E  6EF7               	movwf	tblptrh,c
 13383  0036A0                     	if	1	;There are 3 active tblptr bytes
 13384  0036A0  6AF8               	clrf	tblptru,c
 13385  0036A2  0E00               	movlw	low (__mediumconst shr (0+16))
 13386  0036A4  22F8               	addwfc	tblptru,f,c
 13387  0036A6                     	endif
 13388  0036A6  0008               	tblrd		*
 13389  0036A8  50F5               	movf	tablat,w,c
 13390  0036AA  0900               	iorlw	0
 13391  0036AC  A4D8               	btfss	status,2,c
 13392  0036AE  D7D9               	goto	l13726
 13393                           
 13394                           ;display.c: 450: cntr = 0;
 13395  0036B0  0E00               	movlw	0
 13396  0036B2  6E1F               	movwf	__display_done@cntr,c
 13397                           
 13398                           ;display.c: 451: while(done_line3[cntr])
 13399  0036B4  D017               	goto	l13738
 13400  0036B6                     l13734:
 13401                           
 13402                           ;display.c: 452: display_content[2][cntr] = done_line3[cntr++];
 13403  0036B6  501F               	movf	__display_done@cntr,w,c
 13404  0036B8  0D01               	mullw	1
 13405  0036BA  0EA9               	movlw	low _done_line3
 13406  0036BC  24F3               	addwf	prodl,w,c
 13407  0036BE  6EF6               	movwf	tblptrl,c
 13408  0036C0  0E8D               	movlw	high _done_line3
 13409  0036C2  20F4               	addwfc	prodh,w,c
 13410  0036C4  6EF7               	movwf	tblptrh,c
 13411  0036C6                     	if	1	;There are 3 active tblptr bytes
 13412  0036C6  6AF8               	clrf	tblptru,c
 13413  0036C8  0E00               	movlw	low (__mediumconst shr (0+16))
 13414  0036CA  22F8               	addwfc	tblptru,f,c
 13415  0036CC                     	endif
 13416  0036CC  501F               	movf	__display_done@cntr,w,c
 13417  0036CE  0D01               	mullw	1
 13418  0036D0  0E8C               	movlw	low (_display_content+40)
 13419  0036D2  24F3               	addwf	prodl,w,c
 13420  0036D4  6ED9               	movwf	fsr2l,c
 13421  0036D6  0E02               	movlw	high (_display_content+40)
 13422  0036D8  20F4               	addwfc	prodh,w,c
 13423  0036DA  6EDA               	movwf	fsr2h,c
 13424  0036DC  0008               	tblrd		*
 13425  0036DE  CFF5 FFDF          	movff	tablat,indf2
 13426  0036E2  2A1F               	incf	__display_done@cntr,f,c
 13427  0036E4                     l13738:
 13428  0036E4  501F               	movf	__display_done@cntr,w,c
 13429  0036E6  0D01               	mullw	1
 13430  0036E8  0EA9               	movlw	low _done_line3
 13431  0036EA  24F3               	addwf	prodl,w,c
 13432  0036EC  6EF6               	movwf	tblptrl,c
 13433  0036EE  0E8D               	movlw	high _done_line3
 13434  0036F0  20F4               	addwfc	prodh,w,c
 13435  0036F2  6EF7               	movwf	tblptrh,c
 13436  0036F4                     	if	1	;There are 3 active tblptr bytes
 13437  0036F4  6AF8               	clrf	tblptru,c
 13438  0036F6  0E00               	movlw	low (__mediumconst shr (0+16))
 13439  0036F8  22F8               	addwfc	tblptru,f,c
 13440  0036FA                     	endif
 13441  0036FA  0008               	tblrd		*
 13442  0036FC  50F5               	movf	tablat,w,c
 13443  0036FE  0900               	iorlw	0
 13444  003700  A4D8               	btfss	status,2,c
 13445  003702  D7D9               	goto	l13734
 13446                           
 13447                           ;display.c: 453: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 13448  003704  ECC5  F03C         	call	_bootloader_get_flashPagesWritten	;wreg free
 13449  003708  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 13450  00370C  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 13451  003710  6A1B               	clrf	__display_itoa_u16@value+2,c
 13452  003712  6A1C               	clrf	__display_itoa_u16@value+3,c
 13453  003714  501F               	movf	__display_done@cntr,w,c
 13454  003716  0D01               	mullw	1
 13455  003718  0E8C               	movlw	low (_display_content+40)
 13456  00371A  24F3               	addwf	prodl,w,c
 13457  00371C  6E1D               	movwf	__display_itoa_u16@text,c
 13458  00371E  0E02               	movlw	high (_display_content+40)
 13459  003720  20F4               	addwfc	prodh,w,c
 13460  003722  6E1E               	movwf	__display_itoa_u16@text+1,c
 13461  003724  EC7C  F029         	call	__display_itoa_u16	;wreg free
 13462                           
 13463                           ;display.c: 454: cntr = 0;
 13464  003728  0E00               	movlw	0
 13465  00372A  6E1F               	movwf	__display_done@cntr,c
 13466                           
 13467                           ;display.c: 455: while(done_line4[cntr])
 13468  00372C  D017               	goto	l13748
 13469  00372E                     l13744:
 13470                           
 13471                           ;display.c: 456: display_content[3][cntr] = done_line4[cntr++];
 13472  00372E  501F               	movf	__display_done@cntr,w,c
 13473  003730  0D01               	mullw	1
 13474  003732  0E99               	movlw	low _done_line4
 13475  003734  24F3               	addwf	prodl,w,c
 13476  003736  6EF6               	movwf	tblptrl,c
 13477  003738  0E8D               	movlw	high _done_line4
 13478  00373A  20F4               	addwfc	prodh,w,c
 13479  00373C  6EF7               	movwf	tblptrh,c
 13480  00373E                     	if	1	;There are 3 active tblptr bytes
 13481  00373E  6AF8               	clrf	tblptru,c
 13482  003740  0E00               	movlw	low (__mediumconst shr (0+16))
 13483  003742  22F8               	addwfc	tblptru,f,c
 13484  003744                     	endif
 13485  003744  501F               	movf	__display_done@cntr,w,c
 13486  003746  0D01               	mullw	1
 13487  003748  0EA0               	movlw	low (_display_content+60)
 13488  00374A  24F3               	addwf	prodl,w,c
 13489  00374C  6ED9               	movwf	fsr2l,c
 13490  00374E  0E02               	movlw	high (_display_content+60)
 13491  003750  20F4               	addwfc	prodh,w,c
 13492  003752  6EDA               	movwf	fsr2h,c
 13493  003754  0008               	tblrd		*
 13494  003756  CFF5 FFDF          	movff	tablat,indf2
 13495  00375A  2A1F               	incf	__display_done@cntr,f,c
 13496  00375C                     l13748:
 13497  00375C  501F               	movf	__display_done@cntr,w,c
 13498  00375E  0D01               	mullw	1
 13499  003760  0E99               	movlw	low _done_line4
 13500  003762  24F3               	addwf	prodl,w,c
 13501  003764  6EF6               	movwf	tblptrl,c
 13502  003766  0E8D               	movlw	high _done_line4
 13503  003768  20F4               	addwfc	prodh,w,c
 13504  00376A  6EF7               	movwf	tblptrh,c
 13505  00376C                     	if	1	;There are 3 active tblptr bytes
 13506  00376C  6AF8               	clrf	tblptru,c
 13507  00376E  0E00               	movlw	low (__mediumconst shr (0+16))
 13508  003770  22F8               	addwfc	tblptru,f,c
 13509  003772                     	endif
 13510  003772  0008               	tblrd		*
 13511  003774  50F5               	movf	tablat,w,c
 13512  003776  0900               	iorlw	0
 13513  003778  B4D8               	btfsc	status,2,c
 13514  00377A  0012               	return	
 13515  00377C  D7D8               	goto	l13744
 13516  00377E                     __end_of__display_done:
 13517                           	opt stack 0
 13518                           tblptru	equ	0xFF8
 13519                           tblptrh	equ	0xFF7
 13520                           tblptrl	equ	0xFF6
 13521                           tablat	equ	0xFF5
 13522                           prodh	equ	0xFF4
 13523                           prodl	equ	0xFF3
 13524                           intcon	equ	0xFF2
 13525                           intcon2	equ	0xFF1
 13526                           intcon3	equ	0xFF0
 13527                           postinc0	equ	0xFEE
 13528                           wreg	equ	0xFE8
 13529                           indf1	equ	0xFE7
 13530                           postdec1	equ	0xFE5
 13531                           plusw1	equ	0xFE3
 13532                           fsr1h	equ	0xFE2
 13533                           fsr1l	equ	0xFE1
 13534                           indf2	equ	0xFDF
 13535                           postinc2	equ	0xFDE
 13536                           postdec2	equ	0xFDD
 13537                           plusw2	equ	0xFDB
 13538                           fsr2h	equ	0xFDA
 13539                           fsr2l	equ	0xFD9
 13540                           status	equ	0xFD8
 13541                           
 13542 ;; *************** function _bootloader_get_flashPagesWritten *****************
 13543 ;; Defined at:
 13544 ;;		line 473 in file "bootloader.c"
 13545 ;; Parameters:    Size  Location     Type
 13546 ;;		None
 13547 ;; Auto vars:     Size  Location     Type
 13548 ;;		None
 13549 ;; Return value:  Size  Location     Type
 13550 ;;                  2    0[COMRAM] unsigned int 
 13551 ;; Registers used:
 13552 ;;		None
 13553 ;; Tracked objects:
 13554 ;;		On entry : 0/0
 13555 ;;		On exit  : 0/0
 13556 ;;		Unchanged: 0/0
 13557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13561 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13562 ;;Total ram usage:        2 bytes
 13563 ;; Hardware stack levels used:    1
 13564 ;; This function calls:
 13565 ;;		Nothing
 13566 ;; This function is called by:
 13567 ;;		__display_programming
 13568 ;;		__display_done
 13569 ;; This function uses a non-reentrant model
 13570 ;;
 13571                           
 13572                           	psect	text58
 13573  00798A                     __ptext58:
 13574                           	opt stack 0
 13575  00798A                     _bootloader_get_flashPagesWritten:
 13576                           	opt stack 28
 13577                           
 13578                           ;bootloader.c: 475: return flash_pages_written;
 13579                           
 13580                           ;incstack = 0
 13581  00798A  C16C  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 13582  00798E  C16D  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 13583  007992  0012               	return		;funcret
 13584  007994                     __end_of_bootloader_get_flashPagesWritten:
 13585                           	opt stack 0
 13586                           tblptru	equ	0xFF8
 13587                           tblptrh	equ	0xFF7
 13588                           tblptrl	equ	0xFF6
 13589                           tablat	equ	0xFF5
 13590                           prodh	equ	0xFF4
 13591                           prodl	equ	0xFF3
 13592                           intcon	equ	0xFF2
 13593                           intcon2	equ	0xFF1
 13594                           intcon3	equ	0xFF0
 13595                           postinc0	equ	0xFEE
 13596                           wreg	equ	0xFE8
 13597                           indf1	equ	0xFE7
 13598                           postdec1	equ	0xFE5
 13599                           plusw1	equ	0xFE3
 13600                           fsr1h	equ	0xFE2
 13601                           fsr1l	equ	0xFE1
 13602                           indf2	equ	0xFDF
 13603                           postinc2	equ	0xFDE
 13604                           postdec2	equ	0xFDD
 13605                           plusw2	equ	0xFDB
 13606                           fsr2h	equ	0xFDA
 13607                           fsr2l	equ	0xFD9
 13608                           status	equ	0xFD8
 13609                           
 13610 ;; *************** function __display_clear *****************
 13611 ;; Defined at:
 13612 ;;		line 66 in file "display.c"
 13613 ;; Parameters:    Size  Location     Type
 13614 ;;		None
 13615 ;; Auto vars:     Size  Location     Type
 13616 ;;  col             1    3[COMRAM] unsigned char 
 13617 ;;  row             1    2[COMRAM] unsigned char 
 13618 ;; Return value:  Size  Location     Type
 13619 ;;                  1    wreg      void 
 13620 ;; Registers used:
 13621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13622 ;; Tracked objects:
 13623 ;;		On entry : 0/0
 13624 ;;		On exit  : 0/0
 13625 ;;		Unchanged: 0/0
 13626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13629 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13630 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13631 ;;Total ram usage:        4 bytes
 13632 ;; Hardware stack levels used:    1
 13633 ;; This function calls:
 13634 ;;		Nothing
 13635 ;; This function is called by:
 13636 ;;		_display_prepare
 13637 ;; This function uses a non-reentrant model
 13638 ;;
 13639                           
 13640                           	psect	text59
 13641  006E74                     __ptext59:
 13642                           	opt stack 0
 13643  006E74                     __display_clear:
 13644                           	opt stack 29
 13645                           
 13646                           ;display.c: 68: uint8_t row;
 13647                           ;display.c: 69: uint8_t col;
 13648                           ;display.c: 70: for(row=0;row<4;++row)
 13649                           
 13650                           ;incstack = 0
 13651  006E74  0E00               	movlw	0
 13652  006E76  6E03               	movwf	__display_clear@row,c
 13653  006E78                     l13454:
 13654  006E78  0E03               	movlw	3
 13655  006E7A  6403               	cpfsgt	__display_clear@row,c
 13656  006E7C  D001               	goto	l13458
 13657  006E7E  0012               	return	
 13658  006E80                     l13458:
 13659                           
 13660                           ;display.c: 71: {
 13661                           ;display.c: 72: for(col=0;col<20;++col)
 13662  006E80  0E00               	movlw	0
 13663  006E82  6E04               	movwf	__display_clear@col,c
 13664  006E84                     l13460:
 13665  006E84  0E13               	movlw	19
 13666  006E86  6404               	cpfsgt	__display_clear@col,c
 13667  006E88  D001               	goto	l13464
 13668  006E8A  D016               	goto	l13470
 13669  006E8C                     l13464:
 13670                           
 13671                           ;display.c: 73: {
 13672                           ;display.c: 74: display_content[row][col] = ' ';
 13673  006E8C  5003               	movf	__display_clear@row,w,c
 13674  006E8E  0D14               	mullw	20
 13675  006E90  0E64               	movlw	low _display_content
 13676  006E92  6E01               	movwf	??__display_clear& (0+255),c
 13677  006E94  0E02               	movlw	high _display_content
 13678  006E96  6E02               	movwf	(??__display_clear+1)& (0+255),c
 13679  006E98  50F3               	movf	prodl,w,c
 13680  006E9A  2601               	addwf	??__display_clear,f,c
 13681  006E9C  50F4               	movf	prodh,w,c
 13682  006E9E  2202               	addwfc	??__display_clear+1,f,c
 13683  006EA0  5004               	movf	__display_clear@col,w,c
 13684  006EA2  0D01               	mullw	1
 13685  006EA4  50F3               	movf	prodl,w,c
 13686  006EA6  2401               	addwf	??__display_clear,w,c
 13687  006EA8  6ED9               	movwf	fsr2l,c
 13688  006EAA  50F4               	movf	prodh,w,c
 13689  006EAC  2002               	addwfc	??__display_clear+1,w,c
 13690  006EAE  6EDA               	movwf	fsr2h,c
 13691  006EB0  0E20               	movlw	32
 13692  006EB2  6EDF               	movwf	indf2,c
 13693  006EB4  2A04               	incf	__display_clear@col,f,c
 13694  006EB6  D7E6               	goto	l13460
 13695  006EB8                     l13470:
 13696  006EB8  2A03               	incf	__display_clear@row,f,c
 13697  006EBA  D7DE               	goto	l13454
 13698  006EBC                     __end_of__display_clear:
 13699                           	opt stack 0
 13700                           tblptru	equ	0xFF8
 13701                           tblptrh	equ	0xFF7
 13702                           tblptrl	equ	0xFF6
 13703                           tablat	equ	0xFF5
 13704                           prodh	equ	0xFF4
 13705                           prodl	equ	0xFF3
 13706                           intcon	equ	0xFF2
 13707                           intcon2	equ	0xFF1
 13708                           intcon3	equ	0xFF0
 13709                           postinc0	equ	0xFEE
 13710                           wreg	equ	0xFE8
 13711                           indf1	equ	0xFE7
 13712                           postdec1	equ	0xFE5
 13713                           plusw1	equ	0xFE3
 13714                           fsr1h	equ	0xFE2
 13715                           fsr1l	equ	0xFE1
 13716                           indf2	equ	0xFDF
 13717                           postinc2	equ	0xFDE
 13718                           postdec2	equ	0xFDD
 13719                           plusw2	equ	0xFDB
 13720                           fsr2h	equ	0xFDA
 13721                           fsr2l	equ	0xFD9
 13722                           status	equ	0xFD8
 13723                           
 13724 ;; *************** function __display_checked *****************
 13725 ;; Defined at:
 13726 ;;		line 345 in file "display.c"
 13727 ;; Parameters:    Size  Location     Type
 13728 ;;		None
 13729 ;; Auto vars:     Size  Location     Type
 13730 ;;  cntr            1   33[COMRAM] unsigned char 
 13731 ;;  start           1   32[COMRAM] unsigned char 
 13732 ;; Return value:  Size  Location     Type
 13733 ;;                  1    wreg      void 
 13734 ;; Registers used:
 13735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13736 ;; Tracked objects:
 13737 ;;		On entry : 0/0
 13738 ;;		On exit  : 0/0
 13739 ;;		Unchanged: 0/0
 13740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13742 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13744 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13745 ;;Total ram usage:        4 bytes
 13746 ;; Hardware stack levels used:    1
 13747 ;; Hardware stack levels required when called:    4
 13748 ;; This function calls:
 13749 ;;		__display_itoa_u16
 13750 ;;		_bootloader_get_total_entries
 13751 ;; This function is called by:
 13752 ;;		_display_prepare
 13753 ;; This function uses a non-reentrant model
 13754 ;;
 13755                           
 13756                           	psect	text60
 13757  00348C                     __ptext60:
 13758                           	opt stack 0
 13759  00348C                     __display_checked:
 13760                           	opt stack 25
 13761                           
 13762                           ;display.c: 347: uint8_t cntr;
 13763                           ;display.c: 348: uint8_t start;
 13764                           ;display.c: 349: cntr = 0;
 13765                           
 13766                           ;incstack = 0
 13767  00348C  0E00               	movlw	0
 13768  00348E  6E22               	movwf	__display_checked@cntr,c
 13769                           
 13770                           ;display.c: 350: while(checked_line1[cntr])
 13771  003490  D017               	goto	l13580
 13772  003492                     l13576:
 13773                           
 13774                           ;display.c: 351: display_content[0][cntr] = checked_line1[cntr++];
 13775  003492  5022               	movf	__display_checked@cntr,w,c
 13776  003494  0D01               	mullw	1
 13777  003496  0EF9               	movlw	low _checked_line1
 13778  003498  24F3               	addwf	prodl,w,c
 13779  00349A  6EF6               	movwf	tblptrl,c
 13780  00349C  0E8D               	movlw	high _checked_line1
 13781  00349E  20F4               	addwfc	prodh,w,c
 13782  0034A0  6EF7               	movwf	tblptrh,c
 13783  0034A2                     	if	1	;There are 3 active tblptr bytes
 13784  0034A2  6AF8               	clrf	tblptru,c
 13785  0034A4  0E00               	movlw	low (__mediumconst shr (0+16))
 13786  0034A6  22F8               	addwfc	tblptru,f,c
 13787  0034A8                     	endif
 13788  0034A8  5022               	movf	__display_checked@cntr,w,c
 13789  0034AA  0D01               	mullw	1
 13790  0034AC  0E64               	movlw	low _display_content
 13791  0034AE  24F3               	addwf	prodl,w,c
 13792  0034B0  6ED9               	movwf	fsr2l,c
 13793  0034B2  0E02               	movlw	high _display_content
 13794  0034B4  20F4               	addwfc	prodh,w,c
 13795  0034B6  6EDA               	movwf	fsr2h,c
 13796  0034B8  0008               	tblrd		*
 13797  0034BA  CFF5 FFDF          	movff	tablat,indf2
 13798  0034BE  2A22               	incf	__display_checked@cntr,f,c
 13799  0034C0                     l13580:
 13800  0034C0  5022               	movf	__display_checked@cntr,w,c
 13801  0034C2  0D01               	mullw	1
 13802  0034C4  0EF9               	movlw	low _checked_line1
 13803  0034C6  24F3               	addwf	prodl,w,c
 13804  0034C8  6EF6               	movwf	tblptrl,c
 13805  0034CA  0E8D               	movlw	high _checked_line1
 13806  0034CC  20F4               	addwfc	prodh,w,c
 13807  0034CE  6EF7               	movwf	tblptrh,c
 13808  0034D0                     	if	1	;There are 3 active tblptr bytes
 13809  0034D0  6AF8               	clrf	tblptru,c
 13810  0034D2  0E00               	movlw	low (__mediumconst shr (0+16))
 13811  0034D4  22F8               	addwfc	tblptru,f,c
 13812  0034D6                     	endif
 13813  0034D6  0008               	tblrd		*
 13814  0034D8  50F5               	movf	tablat,w,c
 13815  0034DA  0900               	iorlw	0
 13816  0034DC  A4D8               	btfss	status,2,c
 13817  0034DE  D7D9               	goto	l13576
 13818                           
 13819                           ;display.c: 352: cntr = 0;
 13820  0034E0  0E00               	movlw	0
 13821  0034E2  6E22               	movwf	__display_checked@cntr,c
 13822                           
 13823                           ;display.c: 353: while(checked_line2[cntr])
 13824  0034E4  D017               	goto	l13588
 13825  0034E6                     l13584:
 13826                           
 13827                           ;display.c: 354: display_content[1][cntr] = checked_line2[cntr++];
 13828  0034E6  5022               	movf	__display_checked@cntr,w,c
 13829  0034E8  0D01               	mullw	1
 13830  0034EA  0ECD               	movlw	low _checked_line2
 13831  0034EC  24F3               	addwf	prodl,w,c
 13832  0034EE  6EF6               	movwf	tblptrl,c
 13833  0034F0  0E8C               	movlw	high _checked_line2
 13834  0034F2  20F4               	addwfc	prodh,w,c
 13835  0034F4  6EF7               	movwf	tblptrh,c
 13836  0034F6                     	if	1	;There are 3 active tblptr bytes
 13837  0034F6  6AF8               	clrf	tblptru,c
 13838  0034F8  0E00               	movlw	low (__mediumconst shr (0+16))
 13839  0034FA  22F8               	addwfc	tblptru,f,c
 13840  0034FC                     	endif
 13841  0034FC  5022               	movf	__display_checked@cntr,w,c
 13842  0034FE  0D01               	mullw	1
 13843  003500  0E78               	movlw	low (_display_content+20)
 13844  003502  24F3               	addwf	prodl,w,c
 13845  003504  6ED9               	movwf	fsr2l,c
 13846  003506  0E02               	movlw	high (_display_content+20)
 13847  003508  20F4               	addwfc	prodh,w,c
 13848  00350A  6EDA               	movwf	fsr2h,c
 13849  00350C  0008               	tblrd		*
 13850  00350E  CFF5 FFDF          	movff	tablat,indf2
 13851  003512  2A22               	incf	__display_checked@cntr,f,c
 13852  003514                     l13588:
 13853  003514  5022               	movf	__display_checked@cntr,w,c
 13854  003516  0D01               	mullw	1
 13855  003518  0ECD               	movlw	low _checked_line2
 13856  00351A  24F3               	addwf	prodl,w,c
 13857  00351C  6EF6               	movwf	tblptrl,c
 13858  00351E  0E8C               	movlw	high _checked_line2
 13859  003520  20F4               	addwfc	prodh,w,c
 13860  003522  6EF7               	movwf	tblptrh,c
 13861  003524                     	if	1	;There are 3 active tblptr bytes
 13862  003524  6AF8               	clrf	tblptru,c
 13863  003526  0E00               	movlw	low (__mediumconst shr (0+16))
 13864  003528  22F8               	addwfc	tblptru,f,c
 13865  00352A                     	endif
 13866  00352A  0008               	tblrd		*
 13867  00352C  50F5               	movf	tablat,w,c
 13868  00352E  0900               	iorlw	0
 13869  003530  A4D8               	btfss	status,2,c
 13870  003532  D7D9               	goto	l13584
 13871                           
 13872                           ;display.c: 356: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 13873  003534  ECCA  F03C         	call	_bootloader_get_total_entries	;wreg free
 13874  003538  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 13875  00353C  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 13876  003540  6A1B               	clrf	__display_itoa_u16@value+2,c
 13877  003542  6A1C               	clrf	__display_itoa_u16@value+3,c
 13878  003544  0E8C               	movlw	low (_display_content+40)
 13879  003546  6E1D               	movwf	__display_itoa_u16@text,c
 13880  003548  0E02               	movlw	high (_display_content+40)
 13881  00354A  6E1E               	movwf	__display_itoa_u16@text+1,c
 13882  00354C  EC7C  F029         	call	__display_itoa_u16	;wreg free
 13883  003550  6E21               	movwf	__display_checked@start,c
 13884                           
 13885                           ;display.c: 357: start++;
 13886  003552  2A21               	incf	__display_checked@start,f,c
 13887                           
 13888                           ;display.c: 358: cntr = 0;
 13889  003554  0E00               	movlw	0
 13890  003556  6E22               	movwf	__display_checked@cntr,c
 13891                           
 13892                           ;display.c: 359: while(checked_line3[cntr])
 13893  003558  D01C               	goto	l13600
 13894  00355A                     l13596:
 13895                           
 13896                           ;display.c: 360: display_content[2][start+cntr] = checked_line3[cntr++];
 13897  00355A  5022               	movf	__display_checked@cntr,w,c
 13898  00355C  0D01               	mullw	1
 13899  00355E  0E73               	movlw	low _checked_line3
 13900  003560  24F3               	addwf	prodl,w,c
 13901  003562  6EF6               	movwf	tblptrl,c
 13902  003564  0E8E               	movlw	high _checked_line3
 13903  003566  20F4               	addwfc	prodh,w,c
 13904  003568  6EF7               	movwf	tblptrh,c
 13905  00356A                     	if	1	;There are 3 active tblptr bytes
 13906  00356A  6AF8               	clrf	tblptru,c
 13907  00356C  0E00               	movlw	low (__mediumconst shr (0+16))
 13908  00356E  22F8               	addwfc	tblptru,f,c
 13909  003570                     	endif
 13910  003570  5022               	movf	__display_checked@cntr,w,c
 13911  003572  C021  F01F         	movff	__display_checked@start,??__display_checked
 13912  003576  6A20               	clrf	(??__display_checked+1)& (0+255),c
 13913  003578  261F               	addwf	??__display_checked,f,c
 13914  00357A  0E00               	movlw	0
 13915  00357C  2220               	addwfc	??__display_checked+1,f,c
 13916  00357E  0E8C               	movlw	low (_display_content+40)
 13917  003580  241F               	addwf	??__display_checked,w,c
 13918  003582  6ED9               	movwf	fsr2l,c
 13919  003584  0E02               	movlw	high (_display_content+40)
 13920  003586  2020               	addwfc	??__display_checked+1,w,c
 13921  003588  6EDA               	movwf	fsr2h,c
 13922  00358A  0008               	tblrd		*
 13923  00358C  CFF5 FFDF          	movff	tablat,indf2
 13924  003590  2A22               	incf	__display_checked@cntr,f,c
 13925  003592                     l13600:
 13926  003592  5022               	movf	__display_checked@cntr,w,c
 13927  003594  0D01               	mullw	1
 13928  003596  0E73               	movlw	low _checked_line3
 13929  003598  24F3               	addwf	prodl,w,c
 13930  00359A  6EF6               	movwf	tblptrl,c
 13931  00359C  0E8E               	movlw	high _checked_line3
 13932  00359E  20F4               	addwfc	prodh,w,c
 13933  0035A0  6EF7               	movwf	tblptrh,c
 13934  0035A2                     	if	1	;There are 3 active tblptr bytes
 13935  0035A2  6AF8               	clrf	tblptru,c
 13936  0035A4  0E00               	movlw	low (__mediumconst shr (0+16))
 13937  0035A6  22F8               	addwfc	tblptru,f,c
 13938  0035A8                     	endif
 13939  0035A8  0008               	tblrd		*
 13940  0035AA  50F5               	movf	tablat,w,c
 13941  0035AC  0900               	iorlw	0
 13942  0035AE  A4D8               	btfss	status,2,c
 13943  0035B0  D7D4               	goto	l13596
 13944                           
 13945                           ;display.c: 362: cntr = 0;
 13946  0035B2  0E00               	movlw	0
 13947  0035B4  6E22               	movwf	__display_checked@cntr,c
 13948                           
 13949                           ;display.c: 363: while(checked_line4[cntr])
 13950  0035B6  D017               	goto	l13608
 13951  0035B8                     l13604:
 13952                           
 13953                           ;display.c: 364: display_content[3][cntr] = checked_line4[cntr++];
 13954  0035B8  5022               	movf	__display_checked@cntr,w,c
 13955  0035BA  0D01               	mullw	1
 13956  0035BC  0E66               	movlw	low _checked_line4
 13957  0035BE  24F3               	addwf	prodl,w,c
 13958  0035C0  6EF6               	movwf	tblptrl,c
 13959  0035C2  0E8D               	movlw	high _checked_line4
 13960  0035C4  20F4               	addwfc	prodh,w,c
 13961  0035C6  6EF7               	movwf	tblptrh,c
 13962  0035C8                     	if	1	;There are 3 active tblptr bytes
 13963  0035C8  6AF8               	clrf	tblptru,c
 13964  0035CA  0E00               	movlw	low (__mediumconst shr (0+16))
 13965  0035CC  22F8               	addwfc	tblptru,f,c
 13966  0035CE                     	endif
 13967  0035CE  5022               	movf	__display_checked@cntr,w,c
 13968  0035D0  0D01               	mullw	1
 13969  0035D2  0EA0               	movlw	low (_display_content+60)
 13970  0035D4  24F3               	addwf	prodl,w,c
 13971  0035D6  6ED9               	movwf	fsr2l,c
 13972  0035D8  0E02               	movlw	high (_display_content+60)
 13973  0035DA  20F4               	addwfc	prodh,w,c
 13974  0035DC  6EDA               	movwf	fsr2h,c
 13975  0035DE  0008               	tblrd		*
 13976  0035E0  CFF5 FFDF          	movff	tablat,indf2
 13977  0035E4  2A22               	incf	__display_checked@cntr,f,c
 13978  0035E6                     l13608:
 13979  0035E6  5022               	movf	__display_checked@cntr,w,c
 13980  0035E8  0D01               	mullw	1
 13981  0035EA  0E66               	movlw	low _checked_line4
 13982  0035EC  24F3               	addwf	prodl,w,c
 13983  0035EE  6EF6               	movwf	tblptrl,c
 13984  0035F0  0E8D               	movlw	high _checked_line4
 13985  0035F2  20F4               	addwfc	prodh,w,c
 13986  0035F4  6EF7               	movwf	tblptrh,c
 13987  0035F6                     	if	1	;There are 3 active tblptr bytes
 13988  0035F6  6AF8               	clrf	tblptru,c
 13989  0035F8  0E00               	movlw	low (__mediumconst shr (0+16))
 13990  0035FA  22F8               	addwfc	tblptru,f,c
 13991  0035FC                     	endif
 13992  0035FC  0008               	tblrd		*
 13993  0035FE  50F5               	movf	tablat,w,c
 13994  003600  0900               	iorlw	0
 13995  003602  B4D8               	btfsc	status,2,c
 13996  003604  0012               	return	
 13997  003606  D7D8               	goto	l13604
 13998  003608                     __end_of__display_checked:
 13999                           	opt stack 0
 14000                           tblptru	equ	0xFF8
 14001                           tblptrh	equ	0xFF7
 14002                           tblptrl	equ	0xFF6
 14003                           tablat	equ	0xFF5
 14004                           prodh	equ	0xFF4
 14005                           prodl	equ	0xFF3
 14006                           intcon	equ	0xFF2
 14007                           intcon2	equ	0xFF1
 14008                           intcon3	equ	0xFF0
 14009                           postinc0	equ	0xFEE
 14010                           wreg	equ	0xFE8
 14011                           indf1	equ	0xFE7
 14012                           postdec1	equ	0xFE5
 14013                           plusw1	equ	0xFE3
 14014                           fsr1h	equ	0xFE2
 14015                           fsr1l	equ	0xFE1
 14016                           indf2	equ	0xFDF
 14017                           postinc2	equ	0xFDE
 14018                           postdec2	equ	0xFDD
 14019                           plusw2	equ	0xFDB
 14020                           fsr2h	equ	0xFDA
 14021                           fsr2l	equ	0xFD9
 14022                           status	equ	0xFD8
 14023                           
 14024 ;; *************** function _bootloader_get_total_entries *****************
 14025 ;; Defined at:
 14026 ;;		line 432 in file "bootloader.c"
 14027 ;; Parameters:    Size  Location     Type
 14028 ;;		None
 14029 ;; Auto vars:     Size  Location     Type
 14030 ;;		None
 14031 ;; Return value:  Size  Location     Type
 14032 ;;                  2    0[COMRAM] unsigned int 
 14033 ;; Registers used:
 14034 ;;		None
 14035 ;; Tracked objects:
 14036 ;;		On entry : 0/0
 14037 ;;		On exit  : 0/0
 14038 ;;		Unchanged: 0/0
 14039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14043 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14044 ;;Total ram usage:        2 bytes
 14045 ;; Hardware stack levels used:    1
 14046 ;; This function calls:
 14047 ;;		Nothing
 14048 ;; This function is called by:
 14049 ;;		__display_checked
 14050 ;;		__display_programming
 14051 ;; This function uses a non-reentrant model
 14052 ;;
 14053                           
 14054                           	psect	text61
 14055  007994                     __ptext61:
 14056                           	opt stack 0
 14057  007994                     _bootloader_get_total_entries:
 14058                           	opt stack 28
 14059                           
 14060                           ;bootloader.c: 434: return total_hex_file_entries;
 14061                           
 14062                           ;incstack = 0
 14063  007994  C16E  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 14064  007998  C16F  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 14065  00799C  0012               	return		;funcret
 14066  00799E                     __end_of_bootloader_get_total_entries:
 14067                           	opt stack 0
 14068                           tblptru	equ	0xFF8
 14069                           tblptrh	equ	0xFF7
 14070                           tblptrl	equ	0xFF6
 14071                           tablat	equ	0xFF5
 14072                           prodh	equ	0xFF4
 14073                           prodl	equ	0xFF3
 14074                           intcon	equ	0xFF2
 14075                           intcon2	equ	0xFF1
 14076                           intcon3	equ	0xFF0
 14077                           postinc0	equ	0xFEE
 14078                           wreg	equ	0xFE8
 14079                           indf1	equ	0xFE7
 14080                           postdec1	equ	0xFE5
 14081                           plusw1	equ	0xFE3
 14082                           fsr1h	equ	0xFE2
 14083                           fsr1l	equ	0xFE1
 14084                           indf2	equ	0xFDF
 14085                           postinc2	equ	0xFDE
 14086                           postdec2	equ	0xFDD
 14087                           plusw2	equ	0xFDB
 14088                           fsr2h	equ	0xFDA
 14089                           fsr2l	equ	0xFD9
 14090                           status	equ	0xFD8
 14091                           
 14092 ;; *************** function __display_itoa_u16 *****************
 14093 ;; Defined at:
 14094 ;;		line 79 in file "display.c"
 14095 ;; Parameters:    Size  Location     Type
 14096 ;;  value           4   24[COMRAM] unsigned long 
 14097 ;;  text            2   28[COMRAM] PTR unsigned char 
 14098 ;;		 -> display_content(80), 
 14099 ;; Auto vars:     Size  Location     Type
 14100 ;;		None
 14101 ;; Return value:  Size  Location     Type
 14102 ;;                  1    wreg      unsigned char 
 14103 ;; Registers used:
 14104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14105 ;; Tracked objects:
 14106 ;;		On entry : 0/0
 14107 ;;		On exit  : 0/0
 14108 ;;		Unchanged: 0/0
 14109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14110 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14113 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14114 ;;Total ram usage:        6 bytes
 14115 ;; Hardware stack levels used:    1
 14116 ;; Hardware stack levels required when called:    3
 14117 ;; This function calls:
 14118 ;;		_itoa
 14119 ;; This function is called by:
 14120 ;;		__display_itoa_u32
 14121 ;;		__display_verify
 14122 ;;		__display_checked
 14123 ;;		__display_failed
 14124 ;;		__display_programming
 14125 ;;		__display_done
 14126 ;; This function uses a non-reentrant model
 14127 ;;
 14128                           
 14129                           	psect	text62
 14130  0052F8                     __ptext62:
 14131                           	opt stack 0
 14132  0052F8                     __display_itoa_u16:
 14133                           	opt stack 25
 14134                           
 14135                           ;display.c: 81: itoa(text, value, 10);
 14136                           
 14137                           ;incstack = 0
 14138  0052F8  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 14139  0052FC  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 14140  005300  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 14141  005304  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 14142  005308  0E00               	movlw	0
 14143  00530A  6E16               	movwf	itoa@base+1,c
 14144  00530C  0E0A               	movlw	10
 14145  00530E  6E15               	movwf	itoa@base,c
 14146  005310  EC0F  F038         	call	_itoa	;wreg free
 14147                           
 14148                           ;display.c: 82: if(value>9999)
 14149  005314  501C               	movf	__display_itoa_u16@value+3,w,c
 14150  005316  101B               	iorwf	__display_itoa_u16@value+2,w,c
 14151  005318  E106               	bnz	u8490
 14152  00531A  0E10               	movlw	16
 14153  00531C  5C19               	subwf	__display_itoa_u16@value,w,c
 14154  00531E  0E27               	movlw	39
 14155  005320  581A               	subwfb	__display_itoa_u16@value+1,w,c
 14156  005322  A0D8               	btfss	status,0,c
 14157  005324  D00A               	goto	l11302
 14158  005326                     u8490:
 14159                           
 14160                           ;display.c: 83: {
 14161                           ;display.c: 84: *(text+5) = ' ';
 14162  005326  EE20 F005          	lfsr	2,5
 14163  00532A  501D               	movf	__display_itoa_u16@text,w,c
 14164  00532C  26D9               	addwf	fsr2l,f,c
 14165  00532E  501E               	movf	__display_itoa_u16@text+1,w,c
 14166  005330  22DA               	addwfc	fsr2h,f,c
 14167  005332  0E20               	movlw	32
 14168  005334  6EDF               	movwf	indf2,c
 14169                           
 14170                           ;display.c: 85: return 5;
 14171  005336  0E05               	movlw	5
 14172                           
 14173                           ;display.c: 86: }
 14174  005338  0012               	return	
 14175  00533A                     l11302:
 14176                           
 14177                           ;display.c: 87: else if (value>999)
 14178  00533A  501C               	movf	__display_itoa_u16@value+3,w,c
 14179  00533C  101B               	iorwf	__display_itoa_u16@value+2,w,c
 14180  00533E  E106               	bnz	u8500
 14181  005340  0EE8               	movlw	232
 14182  005342  5C19               	subwf	__display_itoa_u16@value,w,c
 14183  005344  0E03               	movlw	3
 14184  005346  581A               	subwfb	__display_itoa_u16@value+1,w,c
 14185  005348  A0D8               	btfss	status,0,c
 14186  00534A  D00A               	goto	l11312
 14187  00534C                     u8500:
 14188                           
 14189                           ;display.c: 88: {
 14190                           ;display.c: 89: *(text+4) = ' ';
 14191  00534C  EE20 F004          	lfsr	2,4
 14192  005350  501D               	movf	__display_itoa_u16@text,w,c
 14193  005352  26D9               	addwf	fsr2l,f,c
 14194  005354  501E               	movf	__display_itoa_u16@text+1,w,c
 14195  005356  22DA               	addwfc	fsr2h,f,c
 14196  005358  0E20               	movlw	32
 14197  00535A  6EDF               	movwf	indf2,c
 14198                           
 14199                           ;display.c: 90: return 4;
 14200  00535C  0E04               	movlw	4
 14201                           
 14202                           ;display.c: 91: }
 14203  00535E  0012               	return	
 14204  005360                     l11312:
 14205                           
 14206                           ;display.c: 92: else if (value>99)
 14207  005360  501C               	movf	__display_itoa_u16@value+3,w,c
 14208  005362  101B               	iorwf	__display_itoa_u16@value+2,w,c
 14209  005364  101A               	iorwf	__display_itoa_u16@value+1,w,c
 14210  005366  E104               	bnz	u8510
 14211  005368  0E64               	movlw	100
 14212  00536A  5C19               	subwf	__display_itoa_u16@value,w,c
 14213  00536C  A0D8               	btfss	status,0,c
 14214  00536E  D00A               	goto	l11322
 14215  005370                     u8510:
 14216                           
 14217                           ;display.c: 93: {
 14218                           ;display.c: 94: *(text+3) = ' ';
 14219  005370  EE20 F003          	lfsr	2,3
 14220  005374  501D               	movf	__display_itoa_u16@text,w,c
 14221  005376  26D9               	addwf	fsr2l,f,c
 14222  005378  501E               	movf	__display_itoa_u16@text+1,w,c
 14223  00537A  22DA               	addwfc	fsr2h,f,c
 14224  00537C  0E20               	movlw	32
 14225  00537E  6EDF               	movwf	indf2,c
 14226                           
 14227                           ;display.c: 95: return 3;
 14228  005380  0E03               	movlw	3
 14229                           
 14230                           ;display.c: 96: }
 14231  005382  0012               	return	
 14232  005384                     l11322:
 14233                           
 14234                           ;display.c: 97: else if (value>9)
 14235  005384  501C               	movf	__display_itoa_u16@value+3,w,c
 14236  005386  101B               	iorwf	__display_itoa_u16@value+2,w,c
 14237  005388  101A               	iorwf	__display_itoa_u16@value+1,w,c
 14238  00538A  E104               	bnz	u8520
 14239  00538C  0E0A               	movlw	10
 14240  00538E  5C19               	subwf	__display_itoa_u16@value,w,c
 14241  005390  A0D8               	btfss	status,0,c
 14242  005392  D00A               	goto	l11332
 14243  005394                     u8520:
 14244                           
 14245                           ;display.c: 98: {
 14246                           ;display.c: 99: *(text+2) = ' ';
 14247  005394  EE20 F002          	lfsr	2,2
 14248  005398  501D               	movf	__display_itoa_u16@text,w,c
 14249  00539A  26D9               	addwf	fsr2l,f,c
 14250  00539C  501E               	movf	__display_itoa_u16@text+1,w,c
 14251  00539E  22DA               	addwfc	fsr2h,f,c
 14252  0053A0  0E20               	movlw	32
 14253  0053A2  6EDF               	movwf	indf2,c
 14254                           
 14255                           ;display.c: 100: return 2;
 14256  0053A4  0E02               	movlw	2
 14257                           
 14258                           ;display.c: 101: }
 14259  0053A6  0012               	return	
 14260  0053A8                     l11332:
 14261                           
 14262                           ;display.c: 102: else
 14263                           ;display.c: 103: {
 14264                           ;display.c: 104: *(text+1) = ' ';
 14265  0053A8  EE20 F001          	lfsr	2,1
 14266  0053AC  501D               	movf	__display_itoa_u16@text,w,c
 14267  0053AE  26D9               	addwf	fsr2l,f,c
 14268  0053B0  501E               	movf	__display_itoa_u16@text+1,w,c
 14269  0053B2  22DA               	addwfc	fsr2h,f,c
 14270  0053B4  0E20               	movlw	32
 14271  0053B6  6EDF               	movwf	indf2,c
 14272                           
 14273                           ;display.c: 105: return 1;
 14274  0053B8  0E01               	movlw	1
 14275  0053BA  0012               	return	
 14276  0053BC                     __end_of__display_itoa_u16:
 14277                           	opt stack 0
 14278                           tblptru	equ	0xFF8
 14279                           tblptrh	equ	0xFF7
 14280                           tblptrl	equ	0xFF6
 14281                           tablat	equ	0xFF5
 14282                           prodh	equ	0xFF4
 14283                           prodl	equ	0xFF3
 14284                           intcon	equ	0xFF2
 14285                           intcon2	equ	0xFF1
 14286                           intcon3	equ	0xFF0
 14287                           postinc0	equ	0xFEE
 14288                           wreg	equ	0xFE8
 14289                           indf1	equ	0xFE7
 14290                           postdec1	equ	0xFE5
 14291                           plusw1	equ	0xFE3
 14292                           fsr1h	equ	0xFE2
 14293                           fsr1l	equ	0xFE1
 14294                           indf2	equ	0xFDF
 14295                           postinc2	equ	0xFDE
 14296                           postdec2	equ	0xFDD
 14297                           plusw2	equ	0xFDB
 14298                           fsr2h	equ	0xFDA
 14299                           fsr2l	equ	0xFD9
 14300                           status	equ	0xFD8
 14301                           
 14302 ;; *************** function _itoa *****************
 14303 ;; Defined at:
 14304 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
 14305 ;; Parameters:    Size  Location     Type
 14306 ;;  buf             2   16[COMRAM] PTR unsigned char 
 14307 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 14308 ;;  val             2   18[COMRAM] int 
 14309 ;;  base            2   20[COMRAM] int 
 14310 ;; Auto vars:     Size  Location     Type
 14311 ;;  cp              2   22[COMRAM] PTR unsigned char 
 14312 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 14313 ;; Return value:  Size  Location     Type
 14314 ;;                  2   16[COMRAM] PTR unsigned char 
 14315 ;; Registers used:
 14316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14317 ;; Tracked objects:
 14318 ;;		On entry : 0/0
 14319 ;;		On exit  : 0/0
 14320 ;;		Unchanged: 0/0
 14321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14322 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14323 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14325 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14326 ;;Total ram usage:        8 bytes
 14327 ;; Hardware stack levels used:    1
 14328 ;; Hardware stack levels required when called:    2
 14329 ;; This function calls:
 14330 ;;		_utoa
 14331 ;; This function is called by:
 14332 ;;		__display_itoa_u16
 14333 ;;		__display_itoa_u32
 14334 ;;		__display_itoa
 14335 ;; This function uses a non-reentrant model
 14336 ;;
 14337                           
 14338                           	psect	text63
 14339  00701E                     __ptext63:
 14340                           	opt stack 0
 14341  00701E                     _itoa:
 14342                           	opt stack 25
 14343                           
 14344                           ;incstack = 0
 14345  00701E  C011  F017         	movff	itoa@buf,itoa@cp
 14346  007022  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 14347  007026  AE14               	btfss	itoa@val+1,7,c
 14348  007028  D00C               	goto	l10980
 14349  00702A  C011  FFD9         	movff	itoa@buf,fsr2l
 14350  00702E  C012  FFDA         	movff	itoa@buf+1,fsr2h
 14351  007032  0E2D               	movlw	45
 14352  007034  6EDF               	movwf	indf2,c
 14353  007036  4A11               	infsnz	itoa@buf,f,c
 14354  007038  2A12               	incf	itoa@buf+1,f,c
 14355  00703A  6C13               	negf	itoa@val,c
 14356  00703C  1E14               	comf	itoa@val+1,f,c
 14357  00703E  B0D8               	btfsc	status,0,c
 14358  007040  2A14               	incf	itoa@val+1,f,c
 14359  007042                     l10980:
 14360  007042  C011  F008         	movff	itoa@buf,utoa@buf
 14361  007046  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 14362  00704A  C013  F00A         	movff	itoa@val,utoa@val
 14363  00704E  C014  F00B         	movff	itoa@val+1,utoa@val+1
 14364  007052  C015  F00C         	movff	itoa@base,utoa@base
 14365  007056  C016  F00D         	movff	itoa@base+1,utoa@base+1
 14366  00705A  ECA7  F02C         	call	_utoa	;wreg free
 14367  00705E  0012               	return	
 14368  007060                     __end_of_itoa:
 14369                           	opt stack 0
 14370                           tblptru	equ	0xFF8
 14371                           tblptrh	equ	0xFF7
 14372                           tblptrl	equ	0xFF6
 14373                           tablat	equ	0xFF5
 14374                           prodh	equ	0xFF4
 14375                           prodl	equ	0xFF3
 14376                           intcon	equ	0xFF2
 14377                           intcon2	equ	0xFF1
 14378                           intcon3	equ	0xFF0
 14379                           postinc0	equ	0xFEE
 14380                           wreg	equ	0xFE8
 14381                           indf1	equ	0xFE7
 14382                           postdec1	equ	0xFE5
 14383                           plusw1	equ	0xFE3
 14384                           fsr1h	equ	0xFE2
 14385                           fsr1l	equ	0xFE1
 14386                           indf2	equ	0xFDF
 14387                           postinc2	equ	0xFDE
 14388                           postdec2	equ	0xFDD
 14389                           plusw2	equ	0xFDB
 14390                           fsr2h	equ	0xFDA
 14391                           fsr2l	equ	0xFD9
 14392                           status	equ	0xFD8
 14393                           
 14394 ;; *************** function _utoa *****************
 14395 ;; Defined at:
 14396 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\itoa.c"
 14397 ;; Parameters:    Size  Location     Type
 14398 ;;  buf             2    7[COMRAM] PTR unsigned char 
 14399 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 14400 ;;  val             2    9[COMRAM] unsigned int 
 14401 ;;  base            2   11[COMRAM] int 
 14402 ;; Auto vars:     Size  Location     Type
 14403 ;;  v               2   13[COMRAM] unsigned int 
 14404 ;;  c               1   15[COMRAM] unsigned char 
 14405 ;; Return value:  Size  Location     Type
 14406 ;;                  2    7[COMRAM] PTR unsigned char 
 14407 ;; Registers used:
 14408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14409 ;; Tracked objects:
 14410 ;;		On entry : 0/0
 14411 ;;		On exit  : 0/0
 14412 ;;		Unchanged: 0/0
 14413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14414 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14415 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14417 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14418 ;;Total ram usage:        9 bytes
 14419 ;; Hardware stack levels used:    1
 14420 ;; Hardware stack levels required when called:    1
 14421 ;; This function calls:
 14422 ;;		___lwdiv
 14423 ;;		___lwmod
 14424 ;; This function is called by:
 14425 ;;		_itoa
 14426 ;; This function uses a non-reentrant model
 14427 ;;
 14428                           
 14429                           	psect	text64
 14430  00594E                     __ptext64:
 14431                           	opt stack 0
 14432  00594E                     _utoa:
 14433                           	opt stack 25
 14434                           
 14435                           ;incstack = 0
 14436  00594E  C00A  F00E         	movff	utoa@val,utoa@v
 14437  005952  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 14438  005956                     l10494:
 14439  005956  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 14440  00595A  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 14441  00595E  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 14442  005962  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 14443  005966  ECB3  F035         	call	___lwdiv	;wreg free
 14444  00596A  C001  F00E         	movff	?___lwdiv,utoa@v
 14445  00596E  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 14446  005972  4A08               	infsnz	utoa@buf,f,c
 14447  005974  2A09               	incf	utoa@buf+1,f,c
 14448  005976  500E               	movf	utoa@v,w,c
 14449  005978  100F               	iorwf	utoa@v+1,w,c
 14450  00597A  A4D8               	btfss	status,2,c
 14451  00597C  D7EC               	goto	l10494
 14452  00597E  C008  FFD9         	movff	utoa@buf,fsr2l
 14453  005982  C009  FFDA         	movff	utoa@buf+1,fsr2h
 14454  005986  0E00               	movlw	0
 14455  005988  6EDF               	movwf	indf2,c
 14456  00598A  0608               	decf	utoa@buf,f,c
 14457  00598C  A0D8               	btfss	status,0,c
 14458  00598E  0609               	decf	utoa@buf+1,f,c
 14459  005990                     l10504:
 14460  005990  C00A  F001         	movff	utoa@val,___lwmod@dividend
 14461  005994  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 14462  005998  C00C  F003         	movff	utoa@base,___lwmod@divisor
 14463  00599C  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 14464  0059A0  EC30  F038         	call	___lwmod	;wreg free
 14465  0059A4  5001               	movf	?___lwmod,w,c
 14466  0059A6  6E10               	movwf	utoa@c,c
 14467  0059A8  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 14468  0059AC  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 14469  0059B0  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 14470  0059B4  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 14471  0059B8  ECB3  F035         	call	___lwdiv	;wreg free
 14472  0059BC  C001  F00A         	movff	?___lwdiv,utoa@val
 14473  0059C0  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 14474  0059C4  0E09               	movlw	9
 14475  0059C6  6410               	cpfsgt	utoa@c,c
 14476  0059C8  D002               	goto	l3161
 14477  0059CA  0E07               	movlw	7
 14478  0059CC  2610               	addwf	utoa@c,f,c
 14479  0059CE                     l3161:
 14480  0059CE  0E30               	movlw	48
 14481  0059D0  2610               	addwf	utoa@c,f,c
 14482  0059D2  C008  FFD9         	movff	utoa@buf,fsr2l
 14483  0059D6  C009  FFDA         	movff	utoa@buf+1,fsr2h
 14484  0059DA  C010  FFDF         	movff	utoa@c,indf2
 14485  0059DE  0608               	decf	utoa@buf,f,c
 14486  0059E0  A0D8               	btfss	status,0,c
 14487  0059E2  0609               	decf	utoa@buf+1,f,c
 14488  0059E4  500A               	movf	utoa@val,w,c
 14489  0059E6  100B               	iorwf	utoa@val+1,w,c
 14490  0059E8  A4D8               	btfss	status,2,c
 14491  0059EA  D7D2               	goto	l10504
 14492                           
 14493                           ;	Return value of _utoa is never used
 14494  0059EC  4A08               	infsnz	utoa@buf,f,c
 14495  0059EE  2A09               	incf	utoa@buf+1,f,c
 14496  0059F0  0012               	return	
 14497  0059F2                     __end_of_utoa:
 14498                           	opt stack 0
 14499                           tblptru	equ	0xFF8
 14500                           tblptrh	equ	0xFF7
 14501                           tblptrl	equ	0xFF6
 14502                           tablat	equ	0xFF5
 14503                           prodh	equ	0xFF4
 14504                           prodl	equ	0xFF3
 14505                           intcon	equ	0xFF2
 14506                           intcon2	equ	0xFF1
 14507                           intcon3	equ	0xFF0
 14508                           postinc0	equ	0xFEE
 14509                           wreg	equ	0xFE8
 14510                           indf1	equ	0xFE7
 14511                           postdec1	equ	0xFE5
 14512                           plusw1	equ	0xFE3
 14513                           fsr1h	equ	0xFE2
 14514                           fsr1l	equ	0xFE1
 14515                           indf2	equ	0xFDF
 14516                           postinc2	equ	0xFDE
 14517                           postdec2	equ	0xFDD
 14518                           plusw2	equ	0xFDB
 14519                           fsr2h	equ	0xFDA
 14520                           fsr2l	equ	0xFD9
 14521                           status	equ	0xFD8
 14522                           
 14523 ;; *************** function ___lwmod *****************
 14524 ;; Defined at:
 14525 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwmod.c"
 14526 ;; Parameters:    Size  Location     Type
 14527 ;;  dividend        2    0[COMRAM] unsigned int 
 14528 ;;  divisor         2    2[COMRAM] unsigned int 
 14529 ;; Auto vars:     Size  Location     Type
 14530 ;;  counter         1    4[COMRAM] unsigned char 
 14531 ;; Return value:  Size  Location     Type
 14532 ;;                  2    0[COMRAM] unsigned int 
 14533 ;; Registers used:
 14534 ;;		wreg, status,2, status,0
 14535 ;; Tracked objects:
 14536 ;;		On entry : 0/0
 14537 ;;		On exit  : 0/0
 14538 ;;		Unchanged: 0/0
 14539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14543 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14544 ;;Total ram usage:        5 bytes
 14545 ;; Hardware stack levels used:    1
 14546 ;; This function calls:
 14547 ;;		Nothing
 14548 ;; This function is called by:
 14549 ;;		_utoa
 14550 ;; This function uses a non-reentrant model
 14551 ;;
 14552                           
 14553                           	psect	text65
 14554  007060                     __ptext65:
 14555                           	opt stack 0
 14556  007060                     ___lwmod:
 14557                           	opt stack 25
 14558                           
 14559                           ;incstack = 0
 14560  007060  5003               	movf	___lwmod@divisor,w,c
 14561  007062  1004               	iorwf	___lwmod@divisor+1,w,c
 14562  007064  B4D8               	btfsc	status,2,c
 14563  007066  D018               	goto	l3250
 14564  007068  0E01               	movlw	1
 14565  00706A  6E05               	movwf	___lwmod@counter,c
 14566  00706C  D004               	goto	l10184
 14567  00706E                     l10182:
 14568  00706E  90D8               	bcf	status,0,c
 14569  007070  3603               	rlcf	___lwmod@divisor,f,c
 14570  007072  3604               	rlcf	___lwmod@divisor+1,f,c
 14571  007074  2A05               	incf	___lwmod@counter,f,c
 14572  007076                     l10184:
 14573  007076  AE04               	btfss	___lwmod@divisor+1,7,c
 14574  007078  D7FA               	goto	l10182
 14575  00707A                     l10186:
 14576  00707A  5003               	movf	___lwmod@divisor,w,c
 14577  00707C  5C01               	subwf	___lwmod@dividend,w,c
 14578  00707E  5004               	movf	___lwmod@divisor+1,w,c
 14579  007080  5802               	subwfb	___lwmod@dividend+1,w,c
 14580  007082  A0D8               	btfss	status,0,c
 14581  007084  D004               	goto	l10190
 14582  007086  5003               	movf	___lwmod@divisor,w,c
 14583  007088  5E01               	subwf	___lwmod@dividend,f,c
 14584  00708A  5004               	movf	___lwmod@divisor+1,w,c
 14585  00708C  5A02               	subwfb	___lwmod@dividend+1,f,c
 14586  00708E                     l10190:
 14587  00708E  90D8               	bcf	status,0,c
 14588  007090  3204               	rrcf	___lwmod@divisor+1,f,c
 14589  007092  3203               	rrcf	___lwmod@divisor,f,c
 14590  007094  2E05               	decfsz	___lwmod@counter,f,c
 14591  007096  D7F1               	goto	l10186
 14592  007098                     l3250:
 14593  007098  C001  F001         	movff	___lwmod@dividend,?___lwmod
 14594  00709C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 14595  0070A0  0012               	return		;funcret
 14596  0070A2                     __end_of___lwmod:
 14597                           	opt stack 0
 14598                           tblptru	equ	0xFF8
 14599                           tblptrh	equ	0xFF7
 14600                           tblptrl	equ	0xFF6
 14601                           tablat	equ	0xFF5
 14602                           prodh	equ	0xFF4
 14603                           prodl	equ	0xFF3
 14604                           intcon	equ	0xFF2
 14605                           intcon2	equ	0xFF1
 14606                           intcon3	equ	0xFF0
 14607                           postinc0	equ	0xFEE
 14608                           wreg	equ	0xFE8
 14609                           indf1	equ	0xFE7
 14610                           postdec1	equ	0xFE5
 14611                           plusw1	equ	0xFE3
 14612                           fsr1h	equ	0xFE2
 14613                           fsr1l	equ	0xFE1
 14614                           indf2	equ	0xFDF
 14615                           postinc2	equ	0xFDE
 14616                           postdec2	equ	0xFDD
 14617                           plusw2	equ	0xFDB
 14618                           fsr2h	equ	0xFDA
 14619                           fsr2l	equ	0xFD9
 14620                           status	equ	0xFD8
 14621                           
 14622 ;; *************** function ___lwdiv *****************
 14623 ;; Defined at:
 14624 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
 14625 ;; Parameters:    Size  Location     Type
 14626 ;;  dividend        2    0[COMRAM] unsigned int 
 14627 ;;  divisor         2    2[COMRAM] unsigned int 
 14628 ;; Auto vars:     Size  Location     Type
 14629 ;;  quotient        2    4[COMRAM] unsigned int 
 14630 ;;  counter         1    6[COMRAM] unsigned char 
 14631 ;; Return value:  Size  Location     Type
 14632 ;;                  2    0[COMRAM] unsigned int 
 14633 ;; Registers used:
 14634 ;;		wreg, status,2, status,0
 14635 ;; Tracked objects:
 14636 ;;		On entry : 0/0
 14637 ;;		On exit  : 0/0
 14638 ;;		Unchanged: 0/0
 14639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14641 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14643 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14644 ;;Total ram usage:        7 bytes
 14645 ;; Hardware stack levels used:    1
 14646 ;; This function calls:
 14647 ;;		Nothing
 14648 ;; This function is called by:
 14649 ;;		_utoa
 14650 ;; This function uses a non-reentrant model
 14651 ;;
 14652                           
 14653                           	psect	text66
 14654  006B66                     __ptext66:
 14655                           	opt stack 0
 14656  006B66                     ___lwdiv:
 14657                           	opt stack 25
 14658                           
 14659                           ;incstack = 0
 14660  006B66  0E00               	movlw	0
 14661  006B68  6E06               	movwf	___lwdiv@quotient+1,c
 14662  006B6A  0E00               	movlw	0
 14663  006B6C  6E05               	movwf	___lwdiv@quotient,c
 14664  006B6E  5003               	movf	___lwdiv@divisor,w,c
 14665  006B70  1004               	iorwf	___lwdiv@divisor+1,w,c
 14666  006B72  B4D8               	btfsc	status,2,c
 14667  006B74  D01C               	goto	l3240
 14668  006B76  0E01               	movlw	1
 14669  006B78  6E07               	movwf	___lwdiv@counter,c
 14670  006B7A  D004               	goto	l10164
 14671  006B7C                     l10162:
 14672  006B7C  90D8               	bcf	status,0,c
 14673  006B7E  3603               	rlcf	___lwdiv@divisor,f,c
 14674  006B80  3604               	rlcf	___lwdiv@divisor+1,f,c
 14675  006B82  2A07               	incf	___lwdiv@counter,f,c
 14676  006B84                     l10164:
 14677  006B84  AE04               	btfss	___lwdiv@divisor+1,7,c
 14678  006B86  D7FA               	goto	l10162
 14679  006B88                     l10166:
 14680  006B88  90D8               	bcf	status,0,c
 14681  006B8A  3605               	rlcf	___lwdiv@quotient,f,c
 14682  006B8C  3606               	rlcf	___lwdiv@quotient+1,f,c
 14683  006B8E  5003               	movf	___lwdiv@divisor,w,c
 14684  006B90  5C01               	subwf	___lwdiv@dividend,w,c
 14685  006B92  5004               	movf	___lwdiv@divisor+1,w,c
 14686  006B94  5802               	subwfb	___lwdiv@dividend+1,w,c
 14687  006B96  A0D8               	btfss	status,0,c
 14688  006B98  D005               	goto	l10174
 14689  006B9A  5003               	movf	___lwdiv@divisor,w,c
 14690  006B9C  5E01               	subwf	___lwdiv@dividend,f,c
 14691  006B9E  5004               	movf	___lwdiv@divisor+1,w,c
 14692  006BA0  5A02               	subwfb	___lwdiv@dividend+1,f,c
 14693  006BA2  8005               	bsf	___lwdiv@quotient,0,c
 14694  006BA4                     l10174:
 14695  006BA4  90D8               	bcf	status,0,c
 14696  006BA6  3204               	rrcf	___lwdiv@divisor+1,f,c
 14697  006BA8  3203               	rrcf	___lwdiv@divisor,f,c
 14698  006BAA  2E07               	decfsz	___lwdiv@counter,f,c
 14699  006BAC  D7ED               	goto	l10166
 14700  006BAE                     l3240:
 14701  006BAE  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 14702  006BB2  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14703  006BB6  0012               	return		;funcret
 14704  006BB8                     __end_of___lwdiv:
 14705                           	opt stack 0
 14706                           tblptru	equ	0xFF8
 14707                           tblptrh	equ	0xFF7
 14708                           tblptrl	equ	0xFF6
 14709                           tablat	equ	0xFF5
 14710                           prodh	equ	0xFF4
 14711                           prodl	equ	0xFF3
 14712                           intcon	equ	0xFF2
 14713                           intcon2	equ	0xFF1
 14714                           intcon3	equ	0xFF0
 14715                           postinc0	equ	0xFEE
 14716                           wreg	equ	0xFE8
 14717                           indf1	equ	0xFE7
 14718                           postdec1	equ	0xFE5
 14719                           plusw1	equ	0xFE3
 14720                           fsr1h	equ	0xFE2
 14721                           fsr1l	equ	0xFE1
 14722                           indf2	equ	0xFDF
 14723                           postinc2	equ	0xFDE
 14724                           postdec2	equ	0xFDD
 14725                           plusw2	equ	0xFDB
 14726                           fsr2h	equ	0xFDA
 14727                           fsr2l	equ	0xFD9
 14728                           status	equ	0xFD8
 14729                           
 14730 ;; *************** function _bootloader_run *****************
 14731 ;; Defined at:
 14732 ;;		line 60 in file "bootloader.c"
 14733 ;; Parameters:    Size  Location     Type
 14734 ;;  timeslot        1    wreg     unsigned char 
 14735 ;; Auto vars:     Size  Location     Type
 14736 ;;  timeslot        1   86[COMRAM] unsigned char 
 14737 ;; Return value:  Size  Location     Type
 14738 ;;                  1    wreg      void 
 14739 ;; Registers used:
 14740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14741 ;; Tracked objects:
 14742 ;;		On entry : 0/0
 14743 ;;		On exit  : 0/0
 14744 ;;		Unchanged: 0/0
 14745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14747 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14749 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14750 ;;Total ram usage:        1 bytes
 14751 ;; Hardware stack levels used:    1
 14752 ;; Hardware stack levels required when called:    7
 14753 ;; This function calls:
 14754 ;;		__bootloader_find_file
 14755 ;;		__bootloader_program
 14756 ;;		__bootloader_verify_file
 14757 ;; This function is called by:
 14758 ;;		_main
 14759 ;; This function uses a non-reentrant model
 14760 ;;
 14761                           
 14762                           	psect	text67
 14763  006CF8                     __ptext67:
 14764                           	opt stack 0
 14765  006CF8                     _bootloader_run:
 14766                           	opt stack 23
 14767                           
 14768                           ;incstack = 0
 14769                           ;bootloader_run@timeslot stored from wreg
 14770  006CF8  6E57               	movwf	bootloader_run@timeslot,c
 14771                           
 14772                           ;bootloader.c: 62: switch(os.bootloader_mode)
 14773  006CFA  D00F               	goto	l14464
 14774  006CFC                     l14452:
 14775                           
 14776                           ;bootloader.c: 65: _bootloader_find_file();
 14777  006CFC  EC53  F02B         	call	__bootloader_find_file	;wreg free
 14778                           
 14779                           ;bootloader.c: 66: break;
 14780  006D00  0012               	return	
 14781  006D02                     l14454:
 14782                           
 14783                           ;bootloader.c: 69: _bootloader_find_file();
 14784  006D02  EC53  F02B         	call	__bootloader_find_file	;wreg free
 14785                           
 14786                           ;bootloader.c: 70: break;
 14787  006D06  0012               	return	
 14788  006D08                     l14456:
 14789                           
 14790                           ;bootloader.c: 73: _bootloader_verify_file();
 14791  006D08  EC6B  F00B         	call	__bootloader_verify_file	;wreg free
 14792                           
 14793                           ;bootloader.c: 80: break;
 14794                           
 14795                           ;bootloader.c: 79: case BOOTLOADER_MODE_CHECK_FAILED:
 14796                           
 14797                           ;bootloader.c: 77: break;
 14798                           
 14799                           ;bootloader.c: 76: case BOOTLOADER_MODE_CHECK_COMPLETE:
 14800                           
 14801                           ;bootloader.c: 74: break;
 14802  006D0C  0012               	return	
 14803  006D0E                     l14458:
 14804                           
 14805                           ;bootloader.c: 83: if(timeslot==0)
 14806  006D0E  5057               	movf	bootloader_run@timeslot,w,c
 14807  006D10  A4D8               	btfss	status,2,c
 14808  006D12  0012               	return	
 14809                           
 14810                           ;bootloader.c: 84: {
 14811                           ;bootloader.c: 85: _bootloader_program();
 14812  006D14  EC4E  F002         	call	__bootloader_program	;wreg free
 14813                           
 14814                           ;bootloader.c: 91: }
 14815                           
 14816                           ;bootloader.c: 90: break;
 14817                           
 14818                           ;bootloader.c: 89: case BOOTLOADER_MODE_DONE:
 14819                           
 14820                           ;bootloader.c: 86: }
 14821                           ;bootloader.c: 87: break;
 14822  006D18  0012               	return	
 14823  006D1A                     l14464:
 14824  006D1A  0100               	movlb	0	; () banked
 14825  006D1C  51E6               	movf	(_os+4)& (0+255),w,b	;volatile
 14826                           
 14827                           ; Switch size 1, requested type "space"
 14828                           ; Number of cases is 7, Range of values is 0 to 96
 14829                           ; switch strategies available:
 14830                           ; Name         Instructions Cycles
 14831                           ; simple_byte           22    12 (average)
 14832                           ;	Chosen strategy is simple_byte
 14833  006D1E  0A00               	xorlw	0	; case 0
 14834  006D20  B4D8               	btfsc	status,2,c
 14835  006D22  D7EC               	goto	l14452
 14836  006D24  0A10               	xorlw	16	; case 16
 14837  006D26  B4D8               	btfsc	status,2,c
 14838  006D28  D7EC               	goto	l14454
 14839  006D2A  0A30               	xorlw	48	; case 32
 14840  006D2C  B4D8               	btfsc	status,2,c
 14841  006D2E  D7EC               	goto	l14456
 14842  006D30  0A10               	xorlw	16	; case 48
 14843  006D32  B4D8               	btfsc	status,2,c
 14844  006D34  0012               	return	
 14845  006D36  0A70               	xorlw	112	; case 64
 14846  006D38  B4D8               	btfsc	status,2,c
 14847  006D3A  0012               	return	
 14848  006D3C  0A10               	xorlw	16	; case 80
 14849  006D3E  B4D8               	btfsc	status,2,c
 14850  006D40  D7E6               	goto	l14458
 14851  006D42  0A30               	xorlw	48	; case 96
 14852  006D44  0012               	return	
 14853  006D46                     __end_of_bootloader_run:
 14854                           	opt stack 0
 14855                           tblptru	equ	0xFF8
 14856                           tblptrh	equ	0xFF7
 14857                           tblptrl	equ	0xFF6
 14858                           tablat	equ	0xFF5
 14859                           prodh	equ	0xFF4
 14860                           prodl	equ	0xFF3
 14861                           intcon	equ	0xFF2
 14862                           intcon2	equ	0xFF1
 14863                           intcon3	equ	0xFF0
 14864                           postinc0	equ	0xFEE
 14865                           wreg	equ	0xFE8
 14866                           indf1	equ	0xFE7
 14867                           postdec1	equ	0xFE5
 14868                           plusw1	equ	0xFE3
 14869                           fsr1h	equ	0xFE2
 14870                           fsr1l	equ	0xFE1
 14871                           indf2	equ	0xFDF
 14872                           postinc2	equ	0xFDE
 14873                           postdec2	equ	0xFDD
 14874                           plusw2	equ	0xFDB
 14875                           fsr2h	equ	0xFDA
 14876                           fsr2l	equ	0xFD9
 14877                           status	equ	0xFD8
 14878                           
 14879 ;; *************** function __bootloader_verify_file *****************
 14880 ;; Defined at:
 14881 ;;		line 167 in file "bootloader.c"
 14882 ;; Parameters:    Size  Location     Type
 14883 ;;		None
 14884 ;; Auto vars:     Size  Location     Type
 14885 ;;  address32       4   82[COMRAM] unsigned long 
 14886 ;;  return_value    4   78[COMRAM] unsigned long 
 14887 ;;  rec_counter     1   77[COMRAM] unsigned char 
 14888 ;; Return value:  Size  Location     Type
 14889 ;;                  1    wreg      void 
 14890 ;; Registers used:
 14891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14892 ;; Tracked objects:
 14893 ;;		On entry : 0/0
 14894 ;;		On exit  : 0/0
 14895 ;;		Unchanged: 0/0
 14896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14898 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14899 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14900 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14901 ;;Total ram usage:       17 bytes
 14902 ;; Hardware stack levels used:    1
 14903 ;; Hardware stack levels required when called:    6
 14904 ;; This function calls:
 14905 ;;		__bootloader_check_address
 14906 ;;		_fat_get_file_size
 14907 ;;		_fat_read_from_file
 14908 ;;		_parseHexFileEntry
 14909 ;; This function is called by:
 14910 ;;		_bootloader_run
 14911 ;; This function uses a non-reentrant model
 14912 ;;
 14913                           
 14914                           	psect	text68
 14915  0016D6                     __ptext68:
 14916                           	opt stack 0
 14917  0016D6                     __bootloader_verify_file:
 14918                           	opt stack 23
 14919                           
 14920                           ;bootloader.c: 169: uint8_t rec_counter;
 14921                           ;bootloader.c: 170: uint32_t return_value = 0;
 14922                           
 14923                           ;incstack = 0
 14924  0016D6  0E00               	movlw	0
 14925  0016D8  6E4F               	movwf	__bootloader_verify_file@return_value,c
 14926  0016DA  0E00               	movlw	0
 14927  0016DC  6E50               	movwf	__bootloader_verify_file@return_value+1,c
 14928  0016DE  0E00               	movlw	0
 14929  0016E0  6E51               	movwf	__bootloader_verify_file@return_value+2,c
 14930  0016E2  0E00               	movlw	0
 14931  0016E4  6E52               	movwf	__bootloader_verify_file@return_value+3,c
 14932                           
 14933                           ;bootloader.c: 171: uint32_t address32;
 14934                           ;bootloader.c: 174: hex_file_size = fat_get_file_size(file_number);
 14935  0016E6  0100               	movlb	0	; () banked
 14936  0016E8  51FF               	movf	_file_number& (0+255),w,b
 14937  0016EA  ECC6  F031         	call	_fat_get_file_size
 14938  0016EE  C028  F143         	movff	?_fat_get_file_size,_hex_file_size
 14939  0016F2  C029  F144         	movff	?_fat_get_file_size+1,_hex_file_size+1
 14940  0016F6  C02A  F145         	movff	?_fat_get_file_size+2,_hex_file_size+2
 14941  0016FA  C02B  F146         	movff	?_fat_get_file_size+3,_hex_file_size+3
 14942                           
 14943                           ;bootloader.c: 177: for(rec_counter=0; rec_counter<1; ++rec_counter)
 14944  0016FE  0E00               	movlw	0
 14945  001700  6E4E               	movwf	__bootloader_verify_file@rec_counter,c
 14946  001702                     l13812:
 14947  001702  504E               	movf	__bootloader_verify_file@rec_counter,w,c
 14948  001704  A4D8               	btfss	status,2,c
 14949  001706  0012               	return	
 14950                           
 14951                           ;bootloader.c: 178: {
 14952                           ;bootloader.c: 180: if((hex_file_size-hex_file_offset)>=50)
 14953  001708  C147  F046         	movff	_hex_file_offset,??__bootloader_verify_file
 14954  00170C  C148  F047         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 14955  001710  C149  F048         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 14956  001714  C14A  F049         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 14957  001718  1E46               	comf	??__bootloader_verify_file,f,c
 14958  00171A  1E47               	comf	??__bootloader_verify_file+1,f,c
 14959  00171C  1E48               	comf	??__bootloader_verify_file+2,f,c
 14960  00171E  1E49               	comf	??__bootloader_verify_file+3,f,c
 14961  001720  2A46               	incf	??__bootloader_verify_file,f,c
 14962  001722  0E00               	movlw	0
 14963  001724  2247               	addwfc	??__bootloader_verify_file+1,f,c
 14964  001726  2248               	addwfc	??__bootloader_verify_file+2,f,c
 14965  001728  2249               	addwfc	??__bootloader_verify_file+3,f,c
 14966  00172A  0101               	movlb	1	; () banked
 14967  00172C  5143               	movf	_hex_file_size& (0+255),w,b
 14968  00172E  2446               	addwf	??__bootloader_verify_file,w,c
 14969  001730  6E4A               	movwf	(??__bootloader_verify_file+4)& (0+255),c
 14970  001732  0101               	movlb	1	; () banked
 14971  001734  5144               	movf	(_hex_file_size+1)& (0+255),w,b
 14972  001736  2047               	addwfc	??__bootloader_verify_file+1,w,c
 14973  001738  6E4B               	movwf	(??__bootloader_verify_file+5)& (0+255),c
 14974  00173A  0101               	movlb	1	; () banked
 14975  00173C  5145               	movf	(_hex_file_size+2)& (0+255),w,b
 14976  00173E  2048               	addwfc	??__bootloader_verify_file+2,w,c
 14977  001740  6E4C               	movwf	(??__bootloader_verify_file+6)& (0+255),c
 14978  001742  0101               	movlb	1	; () banked
 14979  001744  5146               	movf	(_hex_file_size+3)& (0+255),w,b
 14980  001746  2049               	addwfc	??__bootloader_verify_file+3,w,c
 14981  001748  6E4D               	movwf	(??__bootloader_verify_file+7)& (0+255),c
 14982  00174A  504D               	movf	??__bootloader_verify_file+7,w,c
 14983  00174C  104C               	iorwf	??__bootloader_verify_file+6,w,c
 14984  00174E  104B               	iorwf	??__bootloader_verify_file+5,w,c
 14985  001750  E104               	bnz	u10720
 14986  001752  0E32               	movlw	50
 14987  001754  5C4A               	subwf	??__bootloader_verify_file+4,w,c
 14988  001756  A0D8               	btfss	status,0,c
 14989  001758  D019               	goto	l13820
 14990  00175A                     u10720:
 14991                           
 14992                           ; BSR set to: 1
 14993                           ;bootloader.c: 181: fat_read_from_file(file_number, hex_file_offset, 50, file_buffer);
 14994  00175A  C147  F030         	movff	_hex_file_offset,fat_read_from_file@start_byte
 14995  00175E  C148  F031         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 14996  001762  C149  F032         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 14997  001766  C14A  F033         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 14998  00176A  0E32               	movlw	50
 14999  00176C  6E34               	movwf	fat_read_from_file@length,c
 15000  00176E  0E00               	movlw	0
 15001  001770  6E35               	movwf	fat_read_from_file@length+1,c
 15002  001772  0E00               	movlw	0
 15003  001774  6E36               	movwf	fat_read_from_file@length+2,c
 15004  001776  0E00               	movlw	0
 15005  001778  6E37               	movwf	fat_read_from_file@length+3,c
 15006  00177A  0E40               	movlw	low _file_buffer
 15007  00177C  6E38               	movwf	fat_read_from_file@data,c
 15008  00177E  0E03               	movlw	high _file_buffer
 15009  001780  6E39               	movwf	fat_read_from_file@data+1,c
 15010  001782  0100               	movlb	0	; () banked
 15011  001784  51FF               	movf	_file_number& (0+255),w,b
 15012  001786  ECAB  F013         	call	_fat_read_from_file
 15013  00178A  D031               	goto	l13822
 15014  00178C                     l13820:
 15015                           
 15016                           ;bootloader.c: 182: else
 15017                           ;bootloader.c: 183: fat_read_from_file(file_number, hex_file_offset, (hex_file_size-hex_
      +                          file_offset), file_buffer);
 15018  00178C  C147  F030         	movff	_hex_file_offset,fat_read_from_file@start_byte
 15019  001790  C148  F031         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 15020  001794  C149  F032         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 15021  001798  C14A  F033         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 15022  00179C  C147  F046         	movff	_hex_file_offset,??__bootloader_verify_file
 15023  0017A0  C148  F047         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 15024  0017A4  C149  F048         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 15025  0017A8  C14A  F049         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 15026  0017AC  1E46               	comf	??__bootloader_verify_file,f,c
 15027  0017AE  1E47               	comf	??__bootloader_verify_file+1,f,c
 15028  0017B0  1E48               	comf	??__bootloader_verify_file+2,f,c
 15029  0017B2  1E49               	comf	??__bootloader_verify_file+3,f,c
 15030  0017B4  2A46               	incf	??__bootloader_verify_file,f,c
 15031  0017B6  0E00               	movlw	0
 15032  0017B8  2247               	addwfc	??__bootloader_verify_file+1,f,c
 15033  0017BA  2248               	addwfc	??__bootloader_verify_file+2,f,c
 15034  0017BC  2249               	addwfc	??__bootloader_verify_file+3,f,c
 15035  0017BE  0101               	movlb	1	; () banked
 15036  0017C0  5143               	movf	_hex_file_size& (0+255),w,b
 15037  0017C2  2446               	addwf	??__bootloader_verify_file,w,c
 15038  0017C4  6E34               	movwf	fat_read_from_file@length,c
 15039  0017C6  0101               	movlb	1	; () banked
 15040  0017C8  5144               	movf	(_hex_file_size+1)& (0+255),w,b
 15041  0017CA  2047               	addwfc	??__bootloader_verify_file+1,w,c
 15042  0017CC  6E35               	movwf	fat_read_from_file@length+1,c
 15043  0017CE  0101               	movlb	1	; () banked
 15044  0017D0  5145               	movf	(_hex_file_size+2)& (0+255),w,b
 15045  0017D2  2048               	addwfc	??__bootloader_verify_file+2,w,c
 15046  0017D4  6E36               	movwf	fat_read_from_file@length+2,c
 15047  0017D6  0101               	movlb	1	; () banked
 15048  0017D8  5146               	movf	(_hex_file_size+3)& (0+255),w,b
 15049  0017DA  2049               	addwfc	??__bootloader_verify_file+3,w,c
 15050  0017DC  6E37               	movwf	fat_read_from_file@length+3,c
 15051  0017DE  0E40               	movlw	low _file_buffer
 15052  0017E0  6E38               	movwf	fat_read_from_file@data,c
 15053  0017E2  0E03               	movlw	high _file_buffer
 15054  0017E4  6E39               	movwf	fat_read_from_file@data+1,c
 15055  0017E6  0100               	movlb	0	; () banked
 15056  0017E8  51FF               	movf	_file_number& (0+255),w,b
 15057  0017EA  ECAB  F013         	call	_fat_read_from_file
 15058  0017EE                     l13822:
 15059                           
 15060                           ;bootloader.c: 185: return_value = parseHexFileEntry(file_buffer, 0, &hex_file_entry);
 15061  0017EE  0E40               	movlw	low _file_buffer
 15062  0017F0  6E0C               	movwf	parseHexFileEntry@data,c
 15063  0017F2  0E03               	movlw	high _file_buffer
 15064  0017F4  6E0D               	movwf	parseHexFileEntry@data+1,c
 15065  0017F6  0E00               	movlw	0
 15066  0017F8  6E0E               	movwf	parseHexFileEntry@offset,c
 15067  0017FA  0E00               	movlw	0
 15068  0017FC  6E0F               	movwf	parseHexFileEntry@offset+1,c
 15069  0017FE  0E00               	movlw	0
 15070  001800  6E10               	movwf	parseHexFileEntry@offset+2,c
 15071  001802  0E00               	movlw	0
 15072  001804  6E11               	movwf	parseHexFileEntry@offset+3,c
 15073  001806  0E99               	movlw	low _hex_file_entry
 15074  001808  6E12               	movwf	parseHexFileEntry@hexEntry,c
 15075  00180A  0E01               	movlw	high _hex_file_entry
 15076  00180C  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 15077  00180E  EC10  F000         	call	_parseHexFileEntry	;wreg free
 15078  001812  C00C  F04F         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
 15079  001816  C00D  F050         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
 15080  00181A  C00E  F051         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
 15081  00181E  C00F  F052         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
 15082                           
 15083                           ;bootloader.c: 188: ++hex_file_entries;
 15084  001822  0101               	movlb	1	; () banked
 15085  001824  4B70               	infsnz	_hex_file_entries& (0+255),f,b
 15086  001826  2B71               	incf	(_hex_file_entries+1)& (0+255),f,b
 15087                           
 15088                           ; BSR set to: 1
 15089                           ;bootloader.c: 191: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
 15090  001828  0E04               	movlw	4
 15091  00182A  0101               	movlb	1	; () banked
 15092  00182C  199D               	xorwf	(_hex_file_entry+4)& (0+255),w,b
 15093  00182E  A4D8               	btfss	status,2,c
 15094  001830  D023               	goto	l13838
 15095                           
 15096                           ; BSR set to: 1
 15097                           ;bootloader.c: 192: {
 15098                           ;bootloader.c: 193: extended_linear_address = hex_file_entry.data[0];
 15099  001832  0101               	movlb	1	; () banked
 15100  001834  519E               	movf	(_hex_file_entry+5)& (0+255),w,b
 15101  001836  0101               	movlb	1	; () banked
 15102  001838  6F3F               	movwf	_extended_linear_address& (0+255),b
 15103  00183A  6B40               	clrf	(_extended_linear_address+1)& (0+255),b
 15104  00183C  6B41               	clrf	(_extended_linear_address+2)& (0+255),b
 15105  00183E  6B42               	clrf	(_extended_linear_address+3)& (0+255),b
 15106                           
 15107                           ; BSR set to: 1
 15108                           ;bootloader.c: 194: extended_linear_address <<= 8;
 15109  001840  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
 15110  001844  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
 15111  001848  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
 15112  00184C  0101               	movlb	1	; () banked
 15113  00184E  6B3F               	clrf	_extended_linear_address& (0+255),b
 15114                           
 15115                           ; BSR set to: 1
 15116                           ;bootloader.c: 195: extended_linear_address |= hex_file_entry.data[1];
 15117  001850  0101               	movlb	1	; () banked
 15118  001852  519F               	movf	(_hex_file_entry+6)& (0+255),w,b
 15119  001854  0101               	movlb	1	; () banked
 15120  001856  133F               	iorwf	_extended_linear_address& (0+255),f,b
 15121                           
 15122                           ; BSR set to: 1
 15123                           ;bootloader.c: 196: extended_linear_address <<= 8;
 15124  001858  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
 15125  00185C  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
 15126  001860  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
 15127  001864  0101               	movlb	1	; () banked
 15128  001866  6B3F               	clrf	_extended_linear_address& (0+255),b
 15129                           
 15130                           ; BSR set to: 1
 15131                           ;bootloader.c: 197: extended_linear_address <<= 8;
 15132  001868  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
 15133  00186C  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
 15134  001870  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
 15135  001874  0101               	movlb	1	; () banked
 15136  001876  6B3F               	clrf	_extended_linear_address& (0+255),b
 15137  001878                     l13838:
 15138                           
 15139                           ; BSR set to: 1
 15140                           ;bootloader.c: 198: }
 15141                           ;bootloader.c: 201: if(hex_file_entry.recordType==RecordTypeData)
 15142  001878  0101               	movlb	1	; () banked
 15143  00187A  519D               	movf	(_hex_file_entry+4)& (0+255),w,b
 15144  00187C  A4D8               	btfss	status,2,c
 15145  00187E  D057               	goto	l13852
 15146                           
 15147                           ; BSR set to: 1
 15148                           ;bootloader.c: 202: {
 15149                           ;bootloader.c: 204: address32 = extended_linear_address + hex_file_entry.address;
 15150  001880  0101               	movlb	1	; () banked
 15151  001882  519B               	movf	(_hex_file_entry+2)& (0+255),w,b
 15152  001884  0101               	movlb	1	; () banked
 15153  001886  253F               	addwf	_extended_linear_address& (0+255),w,b
 15154  001888  6E53               	movwf	__bootloader_verify_file@address32,c
 15155  00188A  0101               	movlb	1	; () banked
 15156  00188C  519C               	movf	(_hex_file_entry+3)& (0+255),w,b
 15157  00188E  0101               	movlb	1	; () banked
 15158  001890  2140               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 15159  001892  6E54               	movwf	__bootloader_verify_file@address32+1,c
 15160  001894  0E00               	movlw	0
 15161  001896  0101               	movlb	1	; () banked
 15162  001898  2141               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 15163  00189A  6E55               	movwf	__bootloader_verify_file@address32+2,c
 15164  00189C  0E00               	movlw	0
 15165  00189E  0101               	movlb	1	; () banked
 15166  0018A0  2142               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 15167  0018A2  6E56               	movwf	__bootloader_verify_file@address32+3,c
 15168                           
 15169                           ;bootloader.c: 207: if(address32<file_minimum_address)
 15170  0018A4  0101               	movlb	1	; () banked
 15171  0018A6  514F               	movf	_file_minimum_address& (0+255),w,b
 15172  0018A8  5C53               	subwf	__bootloader_verify_file@address32,w,c
 15173  0018AA  0101               	movlb	1	; () banked
 15174  0018AC  5150               	movf	(_file_minimum_address+1)& (0+255),w,b
 15175  0018AE  5854               	subwfb	__bootloader_verify_file@address32+1,w,c
 15176  0018B0  0101               	movlb	1	; () banked
 15177  0018B2  5151               	movf	(_file_minimum_address+2)& (0+255),w,b
 15178  0018B4  5855               	subwfb	__bootloader_verify_file@address32+2,w,c
 15179  0018B6  0101               	movlb	1	; () banked
 15180  0018B8  5152               	movf	(_file_minimum_address+3)& (0+255),w,b
 15181  0018BA  5856               	subwfb	__bootloader_verify_file@address32+3,w,c
 15182  0018BC  B0D8               	btfsc	status,0,c
 15183  0018BE  D008               	goto	l13844
 15184                           
 15185                           ; BSR set to: 1
 15186                           ;bootloader.c: 208: {
 15187                           ;bootloader.c: 209: file_minimum_address = address32;
 15188  0018C0  C053  F14F         	movff	__bootloader_verify_file@address32,_file_minimum_address
 15189  0018C4  C054  F150         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
 15190  0018C8  C055  F151         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
 15191  0018CC  C056  F152         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
 15192  0018D0                     l13844:
 15193                           
 15194                           ; BSR set to: 1
 15195                           ;bootloader.c: 210: }
 15196                           ;bootloader.c: 211: if(address32>file_maximum_address)
 15197  0018D0  5053               	movf	__bootloader_verify_file@address32,w,c
 15198  0018D2  0101               	movlb	1	; () banked
 15199  0018D4  5D4B               	subwf	_file_maximum_address& (0+255),w,b
 15200  0018D6  5054               	movf	__bootloader_verify_file@address32+1,w,c
 15201  0018D8  0101               	movlb	1	; () banked
 15202  0018DA  594C               	subwfb	(_file_maximum_address+1)& (0+255),w,b
 15203  0018DC  5055               	movf	__bootloader_verify_file@address32+2,w,c
 15204  0018DE  0101               	movlb	1	; () banked
 15205  0018E0  594D               	subwfb	(_file_maximum_address+2)& (0+255),w,b
 15206  0018E2  5056               	movf	__bootloader_verify_file@address32+3,w,c
 15207  0018E4  0101               	movlb	1	; () banked
 15208  0018E6  594E               	subwfb	(_file_maximum_address+3)& (0+255),w,b
 15209  0018E8  B0D8               	btfsc	status,0,c
 15210  0018EA  D008               	goto	l13848
 15211                           
 15212                           ; BSR set to: 1
 15213                           ;bootloader.c: 212: {
 15214                           ;bootloader.c: 213: file_maximum_address = address32;
 15215  0018EC  C053  F14B         	movff	__bootloader_verify_file@address32,_file_maximum_address
 15216  0018F0  C054  F14C         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
 15217  0018F4  C055  F14D         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
 15218  0018F8  C056  F14E         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
 15219  0018FC                     l13848:
 15220                           
 15221                           ; BSR set to: 1
 15222                           ;bootloader.c: 214: }
 15223                           ;bootloader.c: 217: if(_bootloader_check_address(address32, hex_file_entry.dataLength) =
      +                          = ADDRESS_CHECK_RESULT_ERROR)
 15224  0018FC  C053  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
 15225  001900  C054  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
 15226  001904  C055  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
 15227  001908  C056  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
 15228  00190C  C199  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
 15229  001910  ECD8  F027         	call	__bootloader_check_address	;wreg free
 15230  001914  0AFF               	xorlw	255
 15231  001916  A4D8               	btfss	status,2,c
 15232  001918  D00A               	goto	l13852
 15233                           
 15234                           ;bootloader.c: 218: {
 15235                           ;bootloader.c: 220: last_error = ShortRecordErrorAddressRange;
 15236  00191A  0E0B               	movlw	11
 15237  00191C  0101               	movlb	1	; () banked
 15238  00191E  6F81               	movwf	_last_error& (0+255),b
 15239                           
 15240                           ;bootloader.c: 222: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 15241  001920  0E40               	movlw	64
 15242  001922  0100               	movlb	0	; () banked
 15243  001924  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
 15244                           
 15245                           ;bootloader.c: 223: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 15246  001926  0E40               	movlw	64
 15247  001928  0100               	movlb	0	; () banked
 15248  00192A  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
 15249                           
 15250                           ;bootloader.c: 224: break;
 15251  00192C  0012               	return	
 15252  00192E                     l13852:
 15253                           
 15254                           ;bootloader.c: 225: }
 15255                           ;bootloader.c: 226: }
 15256                           ;bootloader.c: 228: if(return_value==0)
 15257  00192E  504F               	movf	__bootloader_verify_file@return_value,w,c
 15258  001930  1050               	iorwf	__bootloader_verify_file@return_value+1,w,c
 15259  001932  1051               	iorwf	__bootloader_verify_file@return_value+2,w,c
 15260  001934  1052               	iorwf	__bootloader_verify_file@return_value+3,w,c
 15261  001936  A4D8               	btfss	status,2,c
 15262  001938  D02A               	goto	l13860
 15263                           
 15264                           ;bootloader.c: 229: {
 15265                           ;bootloader.c: 232: total_hex_file_entries = hex_file_entries;
 15266  00193A  C170  F16E         	movff	_hex_file_entries,_total_hex_file_entries
 15267  00193E  C171  F16F         	movff	_hex_file_entries+1,_total_hex_file_entries+1
 15268                           
 15269                           ;bootloader.c: 233: hex_file_entries = 0;
 15270  001942  0E00               	movlw	0
 15271  001944  0101               	movlb	1	; () banked
 15272  001946  6F71               	movwf	(_hex_file_entries+1)& (0+255),b
 15273  001948  0E00               	movlw	0
 15274  00194A  6F70               	movwf	_hex_file_entries& (0+255),b
 15275                           
 15276                           ;bootloader.c: 234: hex_file_offset = 0;
 15277  00194C  0E00               	movlw	0
 15278  00194E  0101               	movlb	1	; () banked
 15279  001950  6F47               	movwf	_hex_file_offset& (0+255),b
 15280  001952  0E00               	movlw	0
 15281  001954  6F48               	movwf	(_hex_file_offset+1)& (0+255),b
 15282  001956  0E00               	movlw	0
 15283  001958  6F49               	movwf	(_hex_file_offset+2)& (0+255),b
 15284  00195A  0E00               	movlw	0
 15285  00195C  6F4A               	movwf	(_hex_file_offset+3)& (0+255),b
 15286                           
 15287                           ;bootloader.c: 235: extended_linear_address = 0;
 15288  00195E  0E00               	movlw	0
 15289  001960  0101               	movlb	1	; () banked
 15290  001962  6F3F               	movwf	_extended_linear_address& (0+255),b
 15291  001964  0E00               	movlw	0
 15292  001966  6F40               	movwf	(_extended_linear_address+1)& (0+255),b
 15293  001968  0E00               	movlw	0
 15294  00196A  6F41               	movwf	(_extended_linear_address+2)& (0+255),b
 15295  00196C  0E00               	movlw	0
 15296  00196E  6F42               	movwf	(_extended_linear_address+3)& (0+255),b
 15297                           
 15298                           ;bootloader.c: 236: flash_pages_written = 0;
 15299  001970  0E00               	movlw	0
 15300  001972  0101               	movlb	1	; () banked
 15301  001974  6F6D               	movwf	(_flash_pages_written+1)& (0+255),b
 15302  001976  0E00               	movlw	0
 15303  001978  6F6C               	movwf	_flash_pages_written& (0+255),b
 15304                           
 15305                           ;bootloader.c: 237: start_from_byte_next = 0;
 15306  00197A  0E00               	movlw	0
 15307  00197C  0101               	movlb	1	; () banked
 15308  00197E  6F80               	movwf	_start_from_byte_next& (0+255),b
 15309                           
 15310                           ;bootloader.c: 239: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
 15311  001980  0E30               	movlw	48
 15312  001982  0100               	movlb	0	; () banked
 15313  001984  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
 15314                           
 15315                           ;bootloader.c: 240: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
 15316  001986  0E30               	movlw	48
 15317  001988  0100               	movlb	0	; () banked
 15318  00198A  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
 15319                           
 15320                           ;bootloader.c: 241: break;
 15321  00198C  0012               	return	
 15322  00198E                     l13860:
 15323                           
 15324                           ;bootloader.c: 243: else if(return_value>0xFFFFFFF0)
 15325  00198E  0EF1               	movlw	241
 15326  001990  5C4F               	subwf	__bootloader_verify_file@return_value,w,c
 15327  001992  0EFF               	movlw	255
 15328  001994  5850               	subwfb	__bootloader_verify_file@return_value+1,w,c
 15329  001996  0EFF               	movlw	255
 15330  001998  5851               	subwfb	__bootloader_verify_file@return_value+2,w,c
 15331  00199A  0EFF               	movlw	255
 15332  00199C  5852               	subwfb	__bootloader_verify_file@return_value+3,w,c
 15333  00199E  A0D8               	btfss	status,0,c
 15334  0019A0  D009               	goto	l13870
 15335                           
 15336                           ;bootloader.c: 244: {
 15337                           ;bootloader.c: 246: last_error = return_value & 0xF;
 15338  0019A2  504F               	movf	__bootloader_verify_file@return_value,w,c
 15339  0019A4  0B0F               	andlw	15
 15340  0019A6  0101               	movlb	1	; () banked
 15341  0019A8  6F81               	movwf	_last_error& (0+255),b
 15342                           
 15343                           ; BSR set to: 1
 15344                           ;bootloader.c: 248: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 15345  0019AA  0E40               	movlw	64
 15346  0019AC  0100               	movlb	0	; () banked
 15347  0019AE  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
 15348                           
 15349                           ; BSR set to: 0
 15350                           ;bootloader.c: 249: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 15351  0019B0  0E40               	movlw	64
 15352  0019B2  D7EA               	goto	L1
 15353  0019B4                     l13870:
 15354                           
 15355                           ;bootloader.c: 252: else
 15356                           ;bootloader.c: 253: {
 15357                           ;bootloader.c: 255: hex_file_offset += return_value;
 15358  0019B4  504F               	movf	__bootloader_verify_file@return_value,w,c
 15359  0019B6  0101               	movlb	1	; () banked
 15360  0019B8  2747               	addwf	_hex_file_offset& (0+255),f,b
 15361  0019BA  5050               	movf	__bootloader_verify_file@return_value+1,w,c
 15362  0019BC  0101               	movlb	1	; () banked
 15363  0019BE  2348               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 15364  0019C0  5051               	movf	__bootloader_verify_file@return_value+2,w,c
 15365  0019C2  0101               	movlb	1	; () banked
 15366  0019C4  2349               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 15367  0019C6  5052               	movf	__bootloader_verify_file@return_value+3,w,c
 15368  0019C8  0101               	movlb	1	; () banked
 15369  0019CA  234A               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 15370                           
 15371                           ; BSR set to: 1
 15372                           
 15373                           ; BSR set to: 1
 15374  0019CC  2A4E               	incf	__bootloader_verify_file@rec_counter,f,c
 15375  0019CE  D699               	goto	l13812
 15376  0019D0                     __end_of__bootloader_verify_file:
 15377                           	opt stack 0
 15378                           tblptru	equ	0xFF8
 15379                           tblptrh	equ	0xFF7
 15380                           tblptrl	equ	0xFF6
 15381                           tablat	equ	0xFF5
 15382                           prodh	equ	0xFF4
 15383                           prodl	equ	0xFF3
 15384                           intcon	equ	0xFF2
 15385                           intcon2	equ	0xFF1
 15386                           intcon3	equ	0xFF0
 15387                           postinc0	equ	0xFEE
 15388                           wreg	equ	0xFE8
 15389                           indf1	equ	0xFE7
 15390                           postdec1	equ	0xFE5
 15391                           plusw1	equ	0xFE3
 15392                           fsr1h	equ	0xFE2
 15393                           fsr1l	equ	0xFE1
 15394                           indf2	equ	0xFDF
 15395                           postinc2	equ	0xFDE
 15396                           postdec2	equ	0xFDD
 15397                           plusw2	equ	0xFDB
 15398                           fsr2h	equ	0xFDA
 15399                           fsr2l	equ	0xFD9
 15400                           status	equ	0xFD8
 15401                           
 15402 ;; *************** function __bootloader_program *****************
 15403 ;; Defined at:
 15404 ;;		line 260 in file "bootloader.c"
 15405 ;; Parameters:    Size  Location     Type
 15406 ;;		None
 15407 ;; Auto vars:     Size  Location     Type
 15408 ;;  address32       4   55[BANK0 ] unsigned long 
 15409 ;;  return_value    4   51[BANK0 ] unsigned long 
 15410 ;;  page_to_writ    2   62[BANK0 ] unsigned int 
 15411 ;;  cntr            2   60[BANK0 ] unsigned int 
 15412 ;;  address_with    2   49[BANK0 ] unsigned int 
 15413 ;;  entry_page      2   47[BANK0 ] unsigned int 
 15414 ;;  buffer          2   45[BANK0 ] PTR unsigned char 
 15415 ;;		 -> pageBuffer(1024), 
 15416 ;;  start_from_b    1   59[BANK0 ] unsigned char 
 15417 ;; Return value:  Size  Location     Type
 15418 ;;                  1    wreg      void 
 15419 ;; Registers used:
 15420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15421 ;; Tracked objects:
 15422 ;;		On entry : 0/0
 15423 ;;		On exit  : 0/0
 15424 ;;		Unchanged: 0/0
 15425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15427 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15428 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15429 ;;      Totals:         8      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15430 ;;Total ram usage:       27 bytes
 15431 ;; Hardware stack levels used:    1
 15432 ;; Hardware stack levels required when called:    6
 15433 ;; This function calls:
 15434 ;;		__bootloader_check_address
 15435 ;;		_fat_read_from_file
 15436 ;;		_internalFlash_addressWithinPage
 15437 ;;		_internalFlash_erasePage
 15438 ;;		_internalFlash_getBuffer
 15439 ;;		_internalFlash_pageFromAddress
 15440 ;;		_internalFlash_readPage
 15441 ;;		_internalFlash_writePage
 15442 ;;		_parseHexFileEntry
 15443 ;; This function is called by:
 15444 ;;		_bootloader_run
 15445 ;; This function uses a non-reentrant model
 15446 ;;
 15447                           
 15448                           	psect	text69
 15449  00049C                     __ptext69:
 15450                           	opt stack 0
 15451  00049C                     __bootloader_program:
 15452                           	opt stack 23
 15453                           
 15454                           ;bootloader.c: 262: uint16_t cntr;
 15455                           ;bootloader.c: 263: uint8_t* buffer;
 15456                           ;bootloader.c: 264: uint16_t entry_page;
 15457                           ;bootloader.c: 265: uint16_t page_to_write = 0;
 15458                           
 15459                           ;incstack = 0
 15460  00049C  0E00               	movlw	0
 15461  00049E  0100               	movlb	0	; () banked
 15462  0004A0  6F9F               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
 15463  0004A2  0E00               	movlw	0
 15464  0004A4  6F9E               	movwf	__bootloader_program@page_to_write& (0+255),b
 15465                           
 15466                           ;bootloader.c: 266: uint8_t start_from_byte;
 15467                           ;bootloader.c: 267: uint32_t address32;
 15468                           ;bootloader.c: 268: uint32_t return_value = 0;
 15469  0004A6  0E00               	movlw	0
 15470  0004A8  0100               	movlb	0	; () banked
 15471  0004AA  6F93               	movwf	__bootloader_program@return_value& (0+255),b
 15472  0004AC  0E00               	movlw	0
 15473  0004AE  6F94               	movwf	(__bootloader_program@return_value+1)& (0+255),b
 15474  0004B0  0E00               	movlw	0
 15475  0004B2  6F95               	movwf	(__bootloader_program@return_value+2)& (0+255),b
 15476  0004B4  0E00               	movlw	0
 15477  0004B6  6F96               	movwf	(__bootloader_program@return_value+3)& (0+255),b
 15478  0004B8                     l13878:
 15479                           
 15480                           ;bootloader.c: 274: {
 15481                           ;bootloader.c: 276: if((hex_file_size-hex_file_offset)>=50)
 15482  0004B8  C147  F046         	movff	_hex_file_offset,??__bootloader_program
 15483  0004BC  C148  F047         	movff	_hex_file_offset+1,??__bootloader_program+1
 15484  0004C0  C149  F048         	movff	_hex_file_offset+2,??__bootloader_program+2
 15485  0004C4  C14A  F049         	movff	_hex_file_offset+3,??__bootloader_program+3
 15486  0004C8  1E46               	comf	??__bootloader_program,f,c
 15487  0004CA  1E47               	comf	??__bootloader_program+1,f,c
 15488  0004CC  1E48               	comf	??__bootloader_program+2,f,c
 15489  0004CE  1E49               	comf	??__bootloader_program+3,f,c
 15490  0004D0  2A46               	incf	??__bootloader_program,f,c
 15491  0004D2  0E00               	movlw	0
 15492  0004D4  2247               	addwfc	??__bootloader_program+1,f,c
 15493  0004D6  2248               	addwfc	??__bootloader_program+2,f,c
 15494  0004D8  2249               	addwfc	??__bootloader_program+3,f,c
 15495  0004DA  0101               	movlb	1	; () banked
 15496  0004DC  5143               	movf	_hex_file_size& (0+255),w,b
 15497  0004DE  2446               	addwf	??__bootloader_program,w,c
 15498  0004E0  6E4A               	movwf	(??__bootloader_program+4)& (0+255),c
 15499  0004E2  0101               	movlb	1	; () banked
 15500  0004E4  5144               	movf	(_hex_file_size+1)& (0+255),w,b
 15501  0004E6  2047               	addwfc	??__bootloader_program+1,w,c
 15502  0004E8  6E4B               	movwf	(??__bootloader_program+5)& (0+255),c
 15503  0004EA  0101               	movlb	1	; () banked
 15504  0004EC  5145               	movf	(_hex_file_size+2)& (0+255),w,b
 15505  0004EE  2048               	addwfc	??__bootloader_program+2,w,c
 15506  0004F0  6E4C               	movwf	(??__bootloader_program+6)& (0+255),c
 15507  0004F2  0101               	movlb	1	; () banked
 15508  0004F4  5146               	movf	(_hex_file_size+3)& (0+255),w,b
 15509  0004F6  2049               	addwfc	??__bootloader_program+3,w,c
 15510  0004F8  6E4D               	movwf	(??__bootloader_program+7)& (0+255),c
 15511  0004FA  504D               	movf	??__bootloader_program+7,w,c
 15512  0004FC  104C               	iorwf	??__bootloader_program+6,w,c
 15513  0004FE  104B               	iorwf	??__bootloader_program+5,w,c
 15514  000500  E104               	bnz	u10810
 15515  000502  0E32               	movlw	50
 15516  000504  5C4A               	subwf	??__bootloader_program+4,w,c
 15517  000506  A0D8               	btfss	status,0,c
 15518  000508  D019               	goto	l13882
 15519  00050A                     u10810:
 15520                           
 15521                           ; BSR set to: 1
 15522                           ;bootloader.c: 277: {
 15523                           ;bootloader.c: 278: fat_read_from_file(file_number, hex_file_offset, 50, file_buffer);
 15524  00050A  C147  F030         	movff	_hex_file_offset,fat_read_from_file@start_byte
 15525  00050E  C148  F031         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 15526  000512  C149  F032         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 15527  000516  C14A  F033         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 15528  00051A  0E32               	movlw	50
 15529  00051C  6E34               	movwf	fat_read_from_file@length,c
 15530  00051E  0E00               	movlw	0
 15531  000520  6E35               	movwf	fat_read_from_file@length+1,c
 15532  000522  0E00               	movlw	0
 15533  000524  6E36               	movwf	fat_read_from_file@length+2,c
 15534  000526  0E00               	movlw	0
 15535  000528  6E37               	movwf	fat_read_from_file@length+3,c
 15536  00052A  0E40               	movlw	low _file_buffer
 15537  00052C  6E38               	movwf	fat_read_from_file@data,c
 15538  00052E  0E03               	movlw	high _file_buffer
 15539  000530  6E39               	movwf	fat_read_from_file@data+1,c
 15540  000532  0100               	movlb	0	; () banked
 15541  000534  51FF               	movf	_file_number& (0+255),w,b
 15542  000536  ECAB  F013         	call	_fat_read_from_file
 15543                           
 15544                           ;bootloader.c: 279: }
 15545  00053A  D031               	goto	l13884
 15546  00053C                     l13882:
 15547                           
 15548                           ;bootloader.c: 280: else
 15549                           ;bootloader.c: 281: {
 15550                           ;bootloader.c: 282: fat_read_from_file(file_number, hex_file_offset, (hex_file_size-hex_
      +                          file_offset), file_buffer);
 15551  00053C  C147  F030         	movff	_hex_file_offset,fat_read_from_file@start_byte
 15552  000540  C148  F031         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 15553  000544  C149  F032         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 15554  000548  C14A  F033         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 15555  00054C  C147  F046         	movff	_hex_file_offset,??__bootloader_program
 15556  000550  C148  F047         	movff	_hex_file_offset+1,??__bootloader_program+1
 15557  000554  C149  F048         	movff	_hex_file_offset+2,??__bootloader_program+2
 15558  000558  C14A  F049         	movff	_hex_file_offset+3,??__bootloader_program+3
 15559  00055C  1E46               	comf	??__bootloader_program,f,c
 15560  00055E  1E47               	comf	??__bootloader_program+1,f,c
 15561  000560  1E48               	comf	??__bootloader_program+2,f,c
 15562  000562  1E49               	comf	??__bootloader_program+3,f,c
 15563  000564  2A46               	incf	??__bootloader_program,f,c
 15564  000566  0E00               	movlw	0
 15565  000568  2247               	addwfc	??__bootloader_program+1,f,c
 15566  00056A  2248               	addwfc	??__bootloader_program+2,f,c
 15567  00056C  2249               	addwfc	??__bootloader_program+3,f,c
 15568  00056E  0101               	movlb	1	; () banked
 15569  000570  5143               	movf	_hex_file_size& (0+255),w,b
 15570  000572  2446               	addwf	??__bootloader_program,w,c
 15571  000574  6E34               	movwf	fat_read_from_file@length,c
 15572  000576  0101               	movlb	1	; () banked
 15573  000578  5144               	movf	(_hex_file_size+1)& (0+255),w,b
 15574  00057A  2047               	addwfc	??__bootloader_program+1,w,c
 15575  00057C  6E35               	movwf	fat_read_from_file@length+1,c
 15576  00057E  0101               	movlb	1	; () banked
 15577  000580  5145               	movf	(_hex_file_size+2)& (0+255),w,b
 15578  000582  2048               	addwfc	??__bootloader_program+2,w,c
 15579  000584  6E36               	movwf	fat_read_from_file@length+2,c
 15580  000586  0101               	movlb	1	; () banked
 15581  000588  5146               	movf	(_hex_file_size+3)& (0+255),w,b
 15582  00058A  2049               	addwfc	??__bootloader_program+3,w,c
 15583  00058C  6E37               	movwf	fat_read_from_file@length+3,c
 15584  00058E  0E40               	movlw	low _file_buffer
 15585  000590  6E38               	movwf	fat_read_from_file@data,c
 15586  000592  0E03               	movlw	high _file_buffer
 15587  000594  6E39               	movwf	fat_read_from_file@data+1,c
 15588  000596  0100               	movlb	0	; () banked
 15589  000598  51FF               	movf	_file_number& (0+255),w,b
 15590  00059A  ECAB  F013         	call	_fat_read_from_file
 15591  00059E                     l13884:
 15592                           
 15593                           ;bootloader.c: 283: }
 15594                           ;bootloader.c: 286: return_value = parseHexFileEntry(file_buffer, 0, &hex_file_entry);
 15595  00059E  0E40               	movlw	low _file_buffer
 15596  0005A0  6E0C               	movwf	parseHexFileEntry@data,c
 15597  0005A2  0E03               	movlw	high _file_buffer
 15598  0005A4  6E0D               	movwf	parseHexFileEntry@data+1,c
 15599  0005A6  0E00               	movlw	0
 15600  0005A8  6E0E               	movwf	parseHexFileEntry@offset,c
 15601  0005AA  0E00               	movlw	0
 15602  0005AC  6E0F               	movwf	parseHexFileEntry@offset+1,c
 15603  0005AE  0E00               	movlw	0
 15604  0005B0  6E10               	movwf	parseHexFileEntry@offset+2,c
 15605  0005B2  0E00               	movlw	0
 15606  0005B4  6E11               	movwf	parseHexFileEntry@offset+3,c
 15607  0005B6  0E99               	movlw	low _hex_file_entry
 15608  0005B8  6E12               	movwf	parseHexFileEntry@hexEntry,c
 15609  0005BA  0E01               	movlw	high _hex_file_entry
 15610  0005BC  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 15611  0005BE  EC10  F000         	call	_parseHexFileEntry	;wreg free
 15612  0005C2  C00C  F093         	movff	?_parseHexFileEntry,__bootloader_program@return_value
 15613  0005C6  C00D  F094         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
 15614  0005CA  C00E  F095         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
 15615  0005CE  C00F  F096         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
 15616                           
 15617                           ;bootloader.c: 289: ++hex_file_entries;
 15618  0005D2  0101               	movlb	1	; () banked
 15619  0005D4  4B70               	infsnz	_hex_file_entries& (0+255),f,b
 15620  0005D6  2B71               	incf	(_hex_file_entries+1)& (0+255),f,b
 15621                           
 15622                           ; BSR set to: 1
 15623                           ;bootloader.c: 292: if(return_value>RecordErrorNoError)
 15624  0005D8  0EF1               	movlw	241
 15625  0005DA  0100               	movlb	0	; () banked
 15626  0005DC  5D93               	subwf	__bootloader_program@return_value& (0+255),w,b
 15627  0005DE  0EFF               	movlw	255
 15628  0005E0  0100               	movlb	0	; () banked
 15629  0005E2  5994               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
 15630  0005E4  0EFF               	movlw	255
 15631  0005E6  0100               	movlb	0	; () banked
 15632  0005E8  5995               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
 15633  0005EA  0EFF               	movlw	255
 15634  0005EC  0100               	movlb	0	; () banked
 15635  0005EE  5996               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
 15636  0005F0  A0D8               	btfss	status,0,c
 15637  0005F2  D007               	goto	l13896
 15638                           
 15639                           ; BSR set to: 0
 15640                           ;bootloader.c: 293: {
 15641                           ;bootloader.c: 295: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 15642  0005F4  0E40               	movlw	64
 15643  0005F6  0100               	movlb	0	; () banked
 15644  0005F8  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
 15645                           
 15646                           ;bootloader.c: 296: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 15647  0005FA  0E40               	movlw	64
 15648  0005FC  0100               	movlb	0	; () banked
 15649  0005FE  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
 15650                           
 15651                           ; BSR set to: 0
 15652                           ;bootloader.c: 297: return;
 15653  000600  0012               	return	
 15654  000602                     l13896:
 15655                           
 15656                           ; BSR set to: 0
 15657                           ;bootloader.c: 305: else
 15658                           ;bootloader.c: 306: {
 15659                           ;bootloader.c: 308: hex_file_offset += return_value;
 15660  000602  0100               	movlb	0	; () banked
 15661  000604  5193               	movf	__bootloader_program@return_value& (0+255),w,b
 15662  000606  0101               	movlb	1	; () banked
 15663  000608  2747               	addwf	_hex_file_offset& (0+255),f,b
 15664  00060A  0100               	movlb	0	; () banked
 15665  00060C  5194               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 15666  00060E  0101               	movlb	1	; () banked
 15667  000610  2348               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 15668  000612  0100               	movlb	0	; () banked
 15669  000614  5195               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 15670  000616  0101               	movlb	1	; () banked
 15671  000618  2349               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 15672  00061A  0100               	movlb	0	; () banked
 15673  00061C  5196               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 15674  00061E  0101               	movlb	1	; () banked
 15675  000620  234A               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 15676                           
 15677                           ; BSR set to: 1
 15678                           ;bootloader.c: 309: }
 15679                           ;bootloader.c: 311: switch(hex_file_entry.recordType)
 15680  000622  D12B               	goto	l13972
 15681  000624                     l13898:
 15682                           
 15683                           ; BSR set to: 1
 15684                           ;bootloader.c: 317: extended_linear_address = hex_file_entry.data[0];
 15685  000624  0101               	movlb	1	; () banked
 15686  000626  519E               	movf	(_hex_file_entry+5)& (0+255),w,b
 15687  000628  0101               	movlb	1	; () banked
 15688  00062A  6F3F               	movwf	_extended_linear_address& (0+255),b
 15689  00062C  6B40               	clrf	(_extended_linear_address+1)& (0+255),b
 15690  00062E  6B41               	clrf	(_extended_linear_address+2)& (0+255),b
 15691  000630  6B42               	clrf	(_extended_linear_address+3)& (0+255),b
 15692                           
 15693                           ; BSR set to: 1
 15694                           ;bootloader.c: 318: extended_linear_address <<= 8;
 15695  000632  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
 15696  000636  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
 15697  00063A  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
 15698  00063E  0101               	movlb	1	; () banked
 15699  000640  6B3F               	clrf	_extended_linear_address& (0+255),b
 15700                           
 15701                           ; BSR set to: 1
 15702                           ;bootloader.c: 319: extended_linear_address |= hex_file_entry.data[1];
 15703  000642  0101               	movlb	1	; () banked
 15704  000644  519F               	movf	(_hex_file_entry+6)& (0+255),w,b
 15705  000646  0101               	movlb	1	; () banked
 15706  000648  133F               	iorwf	_extended_linear_address& (0+255),f,b
 15707                           
 15708                           ; BSR set to: 1
 15709                           ;bootloader.c: 320: extended_linear_address <<= 8;
 15710  00064A  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
 15711  00064E  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
 15712  000652  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
 15713  000656  0101               	movlb	1	; () banked
 15714  000658  6B3F               	clrf	_extended_linear_address& (0+255),b
 15715                           
 15716                           ; BSR set to: 1
 15717                           ;bootloader.c: 321: extended_linear_address <<= 8;
 15718  00065A  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
 15719  00065E  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
 15720  000662  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
 15721  000666  0101               	movlb	1	; () banked
 15722  000668  6B3F               	clrf	_extended_linear_address& (0+255),b
 15723                           
 15724                           ; BSR set to: 1
 15725                           ;bootloader.c: 323: break;
 15726                           
 15727                           ;bootloader.c: 322: continue;
 15728  00066A  D726               	goto	l13878
 15729  00066C                     l2706:
 15730                           
 15731                           ; BSR set to: 1
 15732                           ;bootloader.c: 328: start_from_byte = start_from_byte_next;
 15733  00066C  C180  F09B         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
 15734                           
 15735                           ; BSR set to: 1
 15736                           ;bootloader.c: 330: start_from_byte_next = 0;
 15737  000670  0E00               	movlw	0
 15738  000672  0101               	movlb	1	; () banked
 15739  000674  6F80               	movwf	_start_from_byte_next& (0+255),b
 15740                           
 15741                           ; BSR set to: 1
 15742                           ;bootloader.c: 333: address32 = extended_linear_address + hex_file_entry.address;
 15743  000676  0101               	movlb	1	; () banked
 15744  000678  519B               	movf	(_hex_file_entry+2)& (0+255),w,b
 15745  00067A  0101               	movlb	1	; () banked
 15746  00067C  253F               	addwf	_extended_linear_address& (0+255),w,b
 15747  00067E  0100               	movlb	0	; () banked
 15748  000680  6F97               	movwf	__bootloader_program@address32& (0+255),b
 15749  000682  0101               	movlb	1	; () banked
 15750  000684  519C               	movf	(_hex_file_entry+3)& (0+255),w,b
 15751  000686  0101               	movlb	1	; () banked
 15752  000688  2140               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 15753  00068A  0100               	movlb	0	; () banked
 15754  00068C  6F98               	movwf	(__bootloader_program@address32+1)& (0+255),b
 15755  00068E  0E00               	movlw	0
 15756  000690  0101               	movlb	1	; () banked
 15757  000692  2141               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 15758  000694  0100               	movlb	0	; () banked
 15759  000696  6F99               	movwf	(__bootloader_program@address32+2)& (0+255),b
 15760  000698  0E00               	movlw	0
 15761  00069A  0101               	movlb	1	; () banked
 15762  00069C  2142               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 15763  00069E  0100               	movlb	0	; () banked
 15764  0006A0  6F9A               	movwf	(__bootloader_program@address32+3)& (0+255),b
 15765                           
 15766                           ; BSR set to: 0
 15767                           ;bootloader.c: 334: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
 15768  0006A2  0100               	movlb	0	; () banked
 15769  0006A4  519B               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 15770  0006A6  0100               	movlb	0	; () banked
 15771  0006A8  2597               	addwf	__bootloader_program@address32& (0+255),w,b
 15772  0006AA  6E01               	movwf	internalFlash_pageFromAddress@address,c
 15773  0006AC  0E00               	movlw	0
 15774  0006AE  0100               	movlb	0	; () banked
 15775  0006B0  2198               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 15776  0006B2  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 15777  0006B4  0E00               	movlw	0
 15778  0006B6  0100               	movlb	0	; () banked
 15779  0006B8  2199               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 15780  0006BA  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 15781  0006BC  0E00               	movlw	0
 15782  0006BE  0100               	movlb	0	; () banked
 15783  0006C0  219A               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 15784  0006C2  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 15785  0006C4  ECAD  F03B         	call	_internalFlash_pageFromAddress	;wreg free
 15786  0006C8  C001  F08F         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
 15787  0006CC  C002  F090         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
 15788                           
 15789                           ;bootloader.c: 337: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
 15790  0006D0  0100               	movlb	0	; () banked
 15791  0006D2  519B               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 15792  0006D4  0100               	movlb	0	; () banked
 15793  0006D6  2597               	addwf	__bootloader_program@address32& (0+255),w,b
 15794  0006D8  6E01               	movwf	__bootloader_check_address@address,c
 15795  0006DA  0E00               	movlw	0
 15796  0006DC  0100               	movlb	0	; () banked
 15797  0006DE  2198               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 15798  0006E0  6E02               	movwf	__bootloader_check_address@address+1,c
 15799  0006E2  0E00               	movlw	0
 15800  0006E4  0100               	movlb	0	; () banked
 15801  0006E6  2199               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 15802  0006E8  6E03               	movwf	__bootloader_check_address@address+2,c
 15803  0006EA  0E00               	movlw	0
 15804  0006EC  0100               	movlb	0	; () banked
 15805  0006EE  219A               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 15806  0006F0  6E04               	movwf	__bootloader_check_address@address+3,c
 15807  0006F2  0100               	movlb	0	; () banked
 15808  0006F4  519B               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 15809  0006F6  0800               	sublw	0
 15810  0006F8  0101               	movlb	1	; () banked
 15811  0006FA  2599               	addwf	_hex_file_entry& (0+255),w,b
 15812  0006FC  6E05               	movwf	__bootloader_check_address@dataLength,c
 15813  0006FE  ECD8  F027         	call	__bootloader_check_address	;wreg free
 15814  000702  0900               	iorlw	0
 15815  000704  A4D8               	btfss	status,2,c
 15816  000706  D6D8               	goto	l13878
 15817                           
 15818                           ;bootloader.c: 340: }
 15819                           ;bootloader.c: 342: if(page_to_write==0)
 15820                           
 15821                           ;bootloader.c: 338: {
 15822                           ;bootloader.c: 339: break;
 15823  000708  0100               	movlb	0	; () banked
 15824  00070A  519E               	movf	__bootloader_program@page_to_write& (0+255),w,b
 15825  00070C  0100               	movlb	0	; () banked
 15826  00070E  119F               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 15827  000710  A4D8               	btfss	status,2,c
 15828  000712  D010               	goto	l13928
 15829                           
 15830                           ; BSR set to: 0
 15831                           ;bootloader.c: 343: {
 15832                           ;bootloader.c: 347: page_to_write = entry_page;
 15833  000714  C08F  F09E         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
 15834  000718  C090  F09F         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
 15835                           
 15836                           ; BSR set to: 0
 15837                           ;bootloader.c: 348: internalFlash_readPage(page_to_write);
 15838  00071C  C09E  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
 15839  000720  C09F  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
 15840  000724  EC51  F038         	call	_internalFlash_readPage	;wreg free
 15841                           
 15842                           ;bootloader.c: 349: buffer = internalFlash_getBuffer();
 15843  000728  ECCF  F03C         	call	_internalFlash_getBuffer	;wreg free
 15844  00072C  C001  F08D         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
 15845  000730  C002  F08E         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
 15846  000734                     l13928:
 15847                           
 15848                           ;bootloader.c: 350: }
 15849                           ;bootloader.c: 352: for(cntr=start_from_byte; cntr<hex_file_entry.dataLength; ++cntr)
 15850  000734  C09B  F09C         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
 15851  000738  0100               	movlb	0	; () banked
 15852  00073A  6B9D               	clrf	(__bootloader_program@cntr+1)& (0+255),b
 15853  00073C  D077               	goto	l13952
 15854  00073E                     l13930:
 15855                           
 15856                           ; BSR set to: 0
 15857                           ;bootloader.c: 353: {
 15858                           ;bootloader.c: 356: if(internalFlash_pageFromAddress(address32+cntr) == page_to_write)
 15859  00073E  0100               	movlb	0	; () banked
 15860  000740  519C               	movf	__bootloader_program@cntr& (0+255),w,b
 15861  000742  0100               	movlb	0	; () banked
 15862  000744  2597               	addwf	__bootloader_program@address32& (0+255),w,b
 15863  000746  6E01               	movwf	internalFlash_pageFromAddress@address,c
 15864  000748  0100               	movlb	0	; () banked
 15865  00074A  519D               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 15866  00074C  0100               	movlb	0	; () banked
 15867  00074E  2198               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 15868  000750  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 15869  000752  0E00               	movlw	0
 15870  000754  0100               	movlb	0	; () banked
 15871  000756  2199               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 15872  000758  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 15873  00075A  0E00               	movlw	0
 15874  00075C  0100               	movlb	0	; () banked
 15875  00075E  219A               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 15876  000760  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 15877  000762  ECAD  F03B         	call	_internalFlash_pageFromAddress	;wreg free
 15878  000766  0100               	movlb	0	; () banked
 15879  000768  519E               	movf	__bootloader_program@page_to_write& (0+255),w,b
 15880  00076A  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
 15881  00076C  E136               	bnz	l13936
 15882  00076E  0100               	movlb	0	; () banked
 15883  000770  519F               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 15884  000772  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
 15885  000774  A4D8               	btfss	status,2,c
 15886  000776  D031               	goto	l13936
 15887                           
 15888                           ; BSR set to: 0
 15889                           ;bootloader.c: 357: {
 15890                           ;bootloader.c: 358: address_within_page = internalFlash_addressWithinPage(address32+cntr
      +                          , page_to_write);
 15891  000778  0100               	movlb	0	; () banked
 15892  00077A  519C               	movf	__bootloader_program@cntr& (0+255),w,b
 15893  00077C  0100               	movlb	0	; () banked
 15894  00077E  2597               	addwf	__bootloader_program@address32& (0+255),w,b
 15895  000780  6E09               	movwf	internalFlash_addressWithinPage@address,c
 15896  000782  0100               	movlb	0	; () banked
 15897  000784  519D               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 15898  000786  0100               	movlb	0	; () banked
 15899  000788  2198               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 15900  00078A  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 15901  00078C  0E00               	movlw	0
 15902  00078E  0100               	movlb	0	; () banked
 15903  000790  2199               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 15904  000792  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 15905  000794  0E00               	movlw	0
 15906  000796  0100               	movlb	0	; () banked
 15907  000798  219A               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 15908  00079A  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 15909  00079C  C09E  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
 15910  0007A0  C09F  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
 15911  0007A4  ECA3  F033         	call	_internalFlash_addressWithinPage	;wreg free
 15912  0007A8  C009  F091         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
 15913  0007AC  C00A  F092         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
 15914                           
 15915                           ;bootloader.c: 359: buffer[address_within_page] = hex_file_entry.data[cntr];
 15916  0007B0  0E9E               	movlw	low (_hex_file_entry+5)
 15917  0007B2  0100               	movlb	0	; () banked
 15918  0007B4  259C               	addwf	__bootloader_program@cntr& (0+255),w,b
 15919  0007B6  6ED9               	movwf	fsr2l,c
 15920  0007B8  0E01               	movlw	high (_hex_file_entry+5)
 15921  0007BA  0100               	movlb	0	; () banked
 15922  0007BC  219D               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
 15923  0007BE  6EDA               	movwf	fsr2h,c
 15924  0007C0  0100               	movlb	0	; () banked
 15925  0007C2  5191               	movf	__bootloader_program@address_within_page& (0+255),w,b
 15926  0007C4  0100               	movlb	0	; () banked
 15927  0007C6  258D               	addwf	__bootloader_program@buffer& (0+255),w,b
 15928  0007C8  6EE1               	movwf	fsr1l,c
 15929  0007CA  0100               	movlb	0	; () banked
 15930  0007CC  5192               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
 15931  0007CE  0100               	movlb	0	; () banked
 15932  0007D0  218E               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
 15933  0007D2  6EE2               	movwf	fsr1h,c
 15934  0007D4  CFDF FFE7          	movff	indf2,indf1
 15935                           
 15936                           ;bootloader.c: 360: }
 15937  0007D8  D026               	goto	l13950
 15938  0007DA                     l13936:
 15939                           
 15940                           ; BSR set to: 0
 15941                           ;bootloader.c: 361: else
 15942                           ;bootloader.c: 362: {
 15943                           ;bootloader.c: 364: hex_file_offset -= return_value;
 15944  0007DA  0100               	movlb	0	; () banked
 15945  0007DC  5193               	movf	__bootloader_program@return_value& (0+255),w,b
 15946  0007DE  0101               	movlb	1	; () banked
 15947  0007E0  5F47               	subwf	_hex_file_offset& (0+255),f,b
 15948  0007E2  0100               	movlb	0	; () banked
 15949  0007E4  5194               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 15950  0007E6  0101               	movlb	1	; () banked
 15951  0007E8  5B48               	subwfb	(_hex_file_offset+1)& (0+255),f,b
 15952  0007EA  0100               	movlb	0	; () banked
 15953  0007EC  5195               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 15954  0007EE  0101               	movlb	1	; () banked
 15955  0007F0  5B49               	subwfb	(_hex_file_offset+2)& (0+255),f,b
 15956  0007F2  0100               	movlb	0	; () banked
 15957  0007F4  5196               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 15958  0007F6  0101               	movlb	1	; () banked
 15959  0007F8  5B4A               	subwfb	(_hex_file_offset+3)& (0+255),f,b
 15960                           
 15961                           ; BSR set to: 1
 15962                           ;bootloader.c: 365: --hex_file_entries;
 15963  0007FA  0101               	movlb	1	; () banked
 15964  0007FC  0770               	decf	_hex_file_entries& (0+255),f,b
 15965  0007FE  A0D8               	btfss	status,0,c
 15966  000800  0771               	decf	(_hex_file_entries+1)& (0+255),f,b
 15967                           
 15968                           ; BSR set to: 1
 15969                           ;bootloader.c: 367: start_from_byte_next = cntr;
 15970  000802  C09C  F180         	movff	__bootloader_program@cntr,_start_from_byte_next
 15971                           
 15972                           ; BSR set to: 1
 15973                           ;bootloader.c: 369: internalFlash_erasePage(page_to_write);
 15974  000806  C09E  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 15975  00080A  C09F  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 15976  00080E  EC9B  F039         	call	_internalFlash_erasePage	;wreg free
 15977                           
 15978                           ;bootloader.c: 370: internalFlash_writePage(page_to_write);
 15979  000812  C09E  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 15980  000816  C09F  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 15981  00081A  EC56  F030         	call	_internalFlash_writePage	;wreg free
 15982                           
 15983                           ;bootloader.c: 371: ++flash_pages_written;
 15984  00081E  0101               	movlb	1	; () banked
 15985  000820  4B6C               	infsnz	_flash_pages_written& (0+255),f,b
 15986  000822  2B6D               	incf	(_flash_pages_written+1)& (0+255),f,b
 15987                           
 15988                           ; BSR set to: 1
 15989                           ;bootloader.c: 373: return;
 15990  000824  0012               	return	
 15991  000826                     l13950:
 15992  000826  0100               	movlb	0	; () banked
 15993  000828  4B9C               	infsnz	__bootloader_program@cntr& (0+255),f,b
 15994  00082A  2B9D               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
 15995  00082C                     l13952:
 15996                           
 15997                           ; BSR set to: 0
 15998  00082C  0101               	movlb	1	; () banked
 15999  00082E  5199               	movf	_hex_file_entry& (0+255),w,b
 16000  000830  0100               	movlb	0	; () banked
 16001  000832  5D9C               	subwf	__bootloader_program@cntr& (0+255),w,b
 16002  000834  0101               	movlb	1	; () banked
 16003  000836  519A               	movf	(_hex_file_entry+1)& (0+255),w,b
 16004  000838  0100               	movlb	0	; () banked
 16005  00083A  599D               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
 16006  00083C  B0D8               	btfsc	status,0,c
 16007  00083E  D63C               	goto	l13878
 16008  000840  D77E               	goto	l13930
 16009  000842                     l13954:
 16010                           
 16011                           ;bootloader.c: 381: if(page_to_write!=0)
 16012  000842  0100               	movlb	0	; () banked
 16013  000844  519E               	movf	__bootloader_program@page_to_write& (0+255),w,b
 16014  000846  0100               	movlb	0	; () banked
 16015  000848  119F               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 16016  00084A  B4D8               	btfsc	status,2,c
 16017  00084C  0012               	return	
 16018                           
 16019                           ; BSR set to: 0
 16020                           ;bootloader.c: 382: {
 16021                           ;bootloader.c: 384: internalFlash_erasePage(page_to_write);
 16022  00084E  C09E  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 16023  000852  C09F  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 16024  000856  EC9B  F039         	call	_internalFlash_erasePage	;wreg free
 16025                           
 16026                           ;bootloader.c: 385: internalFlash_writePage(page_to_write);
 16027  00085A  C09E  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 16028  00085E  C09F  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 16029  000862  EC56  F030         	call	_internalFlash_writePage	;wreg free
 16030                           
 16031                           ;bootloader.c: 386: ++flash_pages_written;
 16032  000866  0101               	movlb	1	; () banked
 16033  000868  4B6C               	infsnz	_flash_pages_written& (0+255),f,b
 16034  00086A  2B6D               	incf	(_flash_pages_written+1)& (0+255),f,b
 16035                           
 16036                           ; BSR set to: 1
 16037                           ;bootloader.c: 388: os.bootloader_mode = BOOTLOADER_MODE_DONE;
 16038  00086C  0E60               	movlw	96
 16039  00086E  0100               	movlb	0	; () banked
 16040  000870  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
 16041                           
 16042                           ; BSR set to: 0
 16043                           ;bootloader.c: 389: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
 16044  000872  0E60               	movlw	96
 16045  000874  0100               	movlb	0	; () banked
 16046  000876  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
 16047                           
 16048                           ; BSR set to: 0
 16049                           ;bootloader.c: 390: }
 16050                           ;bootloader.c: 392: return;
 16051                           
 16052                           ; BSR set to: 0
 16053  000878  0012               	return	
 16054  00087A                     l13972:
 16055  00087A  0101               	movlb	1	; () banked
 16056  00087C  519D               	movf	(_hex_file_entry+4)& (0+255),w,b
 16057                           
 16058                           ; Switch size 1, requested type "space"
 16059                           ; Number of cases is 3, Range of values is 0 to 4
 16060                           ; switch strategies available:
 16061                           ; Name         Instructions Cycles
 16062                           ; simple_byte           10     6 (average)
 16063                           ;	Chosen strategy is simple_byte
 16064  00087E  0A00               	xorlw	0	; case 0
 16065  000880  B4D8               	btfsc	status,2,c
 16066  000882  D6F4               	goto	l2706
 16067  000884  0A01               	xorlw	1	; case 1
 16068  000886  B4D8               	btfsc	status,2,c
 16069  000888  D7DC               	goto	l13954
 16070  00088A  0A05               	xorlw	5	; case 4
 16071  00088C  B4D8               	btfsc	status,2,c
 16072  00088E  D6CA               	goto	l13898
 16073                           
 16074                           ; BSR set to: 1
 16075                           
 16076                           ; BSR set to: 1
 16077  000890  D613               	goto	l13878
 16078  000892                     __end_of__bootloader_program:
 16079                           	opt stack 0
 16080                           tblptru	equ	0xFF8
 16081                           tblptrh	equ	0xFF7
 16082                           tblptrl	equ	0xFF6
 16083                           tablat	equ	0xFF5
 16084                           prodh	equ	0xFF4
 16085                           prodl	equ	0xFF3
 16086                           intcon	equ	0xFF2
 16087                           intcon2	equ	0xFF1
 16088                           intcon3	equ	0xFF0
 16089                           postinc0	equ	0xFEE
 16090                           wreg	equ	0xFE8
 16091                           indf1	equ	0xFE7
 16092                           postdec1	equ	0xFE5
 16093                           plusw1	equ	0xFE3
 16094                           fsr1h	equ	0xFE2
 16095                           fsr1l	equ	0xFE1
 16096                           indf2	equ	0xFDF
 16097                           postinc2	equ	0xFDE
 16098                           postdec2	equ	0xFDD
 16099                           plusw2	equ	0xFDB
 16100                           fsr2h	equ	0xFDA
 16101                           fsr2l	equ	0xFD9
 16102                           status	equ	0xFD8
 16103                           
 16104 ;; *************** function _parseHexFileEntry *****************
 16105 ;; Defined at:
 16106 ;;		line 59 in file "hex.c"
 16107 ;; Parameters:    Size  Location     Type
 16108 ;;  data            2   11[COMRAM] PTR unsigned char 
 16109 ;;		 -> file_buffer(50), 
 16110 ;;  offset          4   13[COMRAM] unsigned long 
 16111 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
 16112 ;;		 -> hex_file_entry(23), 
 16113 ;; Auto vars:     Size  Location     Type
 16114 ;;  i               1   27[COMRAM] unsigned char 
 16115 ;; Return value:  Size  Location     Type
 16116 ;;                  4   11[COMRAM] unsigned long 
 16117 ;; Registers used:
 16118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16119 ;; Tracked objects:
 16120 ;;		On entry : 0/0
 16121 ;;		On exit  : 0/0
 16122 ;;		Unchanged: 0/0
 16123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16124 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16126 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16127 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16128 ;;Total ram usage:       17 bytes
 16129 ;; Hardware stack levels used:    1
 16130 ;; Hardware stack levels required when called:    2
 16131 ;; This function calls:
 16132 ;;		_hexCharsToUint16
 16133 ;;		_hexCharsToUint8
 16134 ;; This function is called by:
 16135 ;;		__bootloader_verify_file
 16136 ;;		__bootloader_program
 16137 ;; This function uses a non-reentrant model
 16138 ;;
 16139                           
 16140                           	psect	text70
 16141  000020                     __ptext70:
 16142                           	opt stack 0
 16143  000020                     _parseHexFileEntry:
 16144                           	opt stack 26
 16145                           
 16146                           ;hex.c: 61: uint8_t i;
 16147                           ;hex.c: 64: if (data[offset] != ':')
 16148                           
 16149                           ;incstack = 0
 16150  000020  500E               	movf	parseHexFileEntry@offset,w,c
 16151  000022  240C               	addwf	parseHexFileEntry@data,w,c
 16152  000024  6ED9               	movwf	fsr2l,c
 16153  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
 16154  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16155  00002A  6EDA               	movwf	fsr2h,c
 16156  00002C  0E3A               	movlw	58
 16157  00002E  18DE               	xorwf	postinc2,w,c
 16158  000030  B4D8               	btfsc	status,2,c
 16159  000032  D005               	goto	l12616
 16160                           
 16161                           ;hex.c: 65: {
 16162                           ;hex.c: 66: return (uint32_t) RecordErrorStartCode;
 16163  000034  680C               	setf	?_parseHexFileEntry,c
 16164  000036  680D               	setf	?_parseHexFileEntry+1,c
 16165  000038  680E               	setf	?_parseHexFileEntry+2,c
 16166  00003A  680F               	setf	?_parseHexFileEntry+3,c
 16167  00003C  0012               	return	
 16168  00003E                     l12616:
 16169                           
 16170                           ;hex.c: 67: }
 16171                           ;hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[offset + 2]);
 16172  00003E  0E02               	movlw	2
 16173  000040  240E               	addwf	parseHexFileEntry@offset,w,c
 16174  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 16175  000044  0E00               	movlw	0
 16176  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 16177  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 16178  00004A  5014               	movf	??_parseHexFileEntry,w,c
 16179  00004C  240C               	addwf	parseHexFileEntry@data,w,c
 16180  00004E  6ED9               	movwf	fsr2l,c
 16181  000050  5015               	movf	??_parseHexFileEntry+1,w,c
 16182  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16183  000054  6EDA               	movwf	fsr2h,c
 16184  000056  50DF               	movf	indf2,w,c
 16185  000058  6E03               	movwf	hexCharsToUint8@c2,c
 16186  00005A  0E01               	movlw	1
 16187  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
 16188  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 16189  000060  0E00               	movlw	0
 16190  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 16191  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 16192  000066  5016               	movf	??_parseHexFileEntry+2,w,c
 16193  000068  240C               	addwf	parseHexFileEntry@data,w,c
 16194  00006A  6ED9               	movwf	fsr2l,c
 16195  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
 16196  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16197  000070  6EDA               	movwf	fsr2h,c
 16198  000072  50DF               	movf	indf2,w,c
 16199  000074  EC9F  F03B         	call	_hexCharsToUint8
 16200  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 16201  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
 16202  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 16203  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 16204  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
 16205  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
 16206                           
 16207                           ;hex.c: 71: if (hexEntry->dataLength > 16)
 16208  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 16209  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 16210  000094  0E01               	movlw	1
 16211  000096  50DB               	movf	plusw2,w,c
 16212  000098  E104               	bnz	u9460
 16213  00009A  0E11               	movlw	17
 16214  00009C  5CDE               	subwf	postinc2,w,c
 16215  00009E  A0D8               	btfss	status,0,c
 16216  0000A0  D009               	goto	l12624
 16217  0000A2                     u9460:
 16218                           
 16219                           ;hex.c: 72: {
 16220                           ;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
 16221  0000A2  0EFC               	movlw	252
 16222  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
 16223  0000A6  0EFF               	movlw	255
 16224  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
 16225  0000AA  0EFF               	movlw	255
 16226  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
 16227  0000AE  0EFF               	movlw	255
 16228  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
 16229  0000B2  0012               	return	
 16230  0000B4                     l12624:
 16231                           
 16232                           ;hex.c: 74: }
 16233                           ;hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[offset + 4], dat
      +                          a[offset + 5], data[offset + 6]);
 16234  0000B4  0E04               	movlw	4
 16235  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
 16236  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 16237  0000BA  0E00               	movlw	0
 16238  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 16239  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 16240  0000C0  5014               	movf	??_parseHexFileEntry,w,c
 16241  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
 16242  0000C4  6ED9               	movwf	fsr2l,c
 16243  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
 16244  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16245  0000CA  6EDA               	movwf	fsr2h,c
 16246  0000CC  50DF               	movf	indf2,w,c
 16247  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
 16248  0000D0  0E05               	movlw	5
 16249  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
 16250  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 16251  0000D6  0E00               	movlw	0
 16252  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 16253  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 16254  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
 16255  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
 16256  0000E0  6ED9               	movwf	fsr2l,c
 16257  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
 16258  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16259  0000E6  6EDA               	movwf	fsr2h,c
 16260  0000E8  50DF               	movf	indf2,w,c
 16261  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
 16262  0000EC  0E06               	movlw	6
 16263  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
 16264  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 16265  0000F2  0E00               	movlw	0
 16266  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 16267  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 16268  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
 16269  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
 16270  0000FC  6ED9               	movwf	fsr2l,c
 16271  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
 16272  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16273  000102  6EDA               	movwf	fsr2h,c
 16274  000104  50DF               	movf	indf2,w,c
 16275  000106  6E05               	movwf	hexCharsToUint16@c4,c
 16276  000108  0E03               	movlw	3
 16277  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
 16278  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
 16279  00010E  0E00               	movlw	0
 16280  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 16281  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
 16282  000114  501A               	movf	??_parseHexFileEntry+6,w,c
 16283  000116  240C               	addwf	parseHexFileEntry@data,w,c
 16284  000118  6ED9               	movwf	fsr2l,c
 16285  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
 16286  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16287  00011E  6EDA               	movwf	fsr2h,c
 16288  000120  50DF               	movf	indf2,w,c
 16289  000122  EC37  F032         	call	_hexCharsToUint16
 16290  000126  EE20 F002          	lfsr	2,2
 16291  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16292  00012C  26D9               	addwf	fsr2l,f,c
 16293  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16294  000130  22DA               	addwfc	fsr2h,f,c
 16295  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
 16296  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
 16297                           
 16298                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
 16299  00013A  EE20 F004          	lfsr	2,4
 16300  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16301  000140  26D9               	addwf	fsr2l,f,c
 16302  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16303  000144  22DA               	addwfc	fsr2h,f,c
 16304  000146  0E08               	movlw	8
 16305  000148  240E               	addwf	parseHexFileEntry@offset,w,c
 16306  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 16307  00014C  0E00               	movlw	0
 16308  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 16309  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 16310  000152  5014               	movf	??_parseHexFileEntry,w,c
 16311  000154  240C               	addwf	parseHexFileEntry@data,w,c
 16312  000156  6EE1               	movwf	fsr1l,c
 16313  000158  5015               	movf	??_parseHexFileEntry+1,w,c
 16314  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16315  00015C  6EE2               	movwf	fsr1h,c
 16316  00015E  50E7               	movf	indf1,w,c
 16317  000160  6E03               	movwf	hexCharsToUint8@c2,c
 16318  000162  0E07               	movlw	7
 16319  000164  240E               	addwf	parseHexFileEntry@offset,w,c
 16320  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 16321  000168  0E00               	movlw	0
 16322  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 16323  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 16324  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
 16325  000170  240C               	addwf	parseHexFileEntry@data,w,c
 16326  000172  6EE1               	movwf	fsr1l,c
 16327  000174  5017               	movf	??_parseHexFileEntry+3,w,c
 16328  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16329  000178  6EE2               	movwf	fsr1h,c
 16330  00017A  50E7               	movf	indf1,w,c
 16331  00017C  EC9F  F03B         	call	_hexCharsToUint8
 16332  000180  6EDF               	movwf	indf2,c
 16333                           
 16334                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
 16335  000182  0E00               	movlw	0
 16336  000184  6E1C               	movwf	parseHexFileEntry@i,c
 16337  000186  D03D               	goto	l12634
 16338  000188                     l12630:
 16339                           
 16340                           ;hex.c: 84: {
 16341                           ;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], data[offset + 
      +                          10 + i + i]);
 16342  000188  501C               	movf	parseHexFileEntry@i,w,c
 16343  00018A  0D01               	mullw	1
 16344  00018C  0E05               	movlw	5
 16345  00018E  26F3               	addwf	prodl,f,c
 16346  000190  0E00               	movlw	0
 16347  000192  22F4               	addwfc	prodh,f,c
 16348  000194  50F3               	movf	prodl,w,c
 16349  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 16350  000198  6ED9               	movwf	fsr2l,c
 16351  00019A  50F4               	movf	prodh,w,c
 16352  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 16353  00019E  6EDA               	movwf	fsr2h,c
 16354  0001A0  501C               	movf	parseHexFileEntry@i,w,c
 16355  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 16356  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 16357  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
 16358  0001AA  0E00               	movlw	0
 16359  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 16360  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
 16361  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
 16362  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
 16363  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
 16364  0001B6  0E0A               	movlw	10
 16365  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
 16366  0001BA  0E00               	movlw	0
 16367  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 16368  0001BE  5014               	movf	??_parseHexFileEntry,w,c
 16369  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
 16370  0001C2  6EE1               	movwf	fsr1l,c
 16371  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
 16372  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16373  0001C8  6EE2               	movwf	fsr1h,c
 16374  0001CA  50E7               	movf	indf1,w,c
 16375  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
 16376  0001CE  501C               	movf	parseHexFileEntry@i,w,c
 16377  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 16378  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 16379  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
 16380  0001D8  0E00               	movlw	0
 16381  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 16382  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
 16383  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
 16384  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
 16385  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
 16386  0001E4  0E09               	movlw	9
 16387  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
 16388  0001E8  0E00               	movlw	0
 16389  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 16390  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
 16391  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
 16392  0001F0  6EE1               	movwf	fsr1l,c
 16393  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
 16394  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16395  0001F6  6EE2               	movwf	fsr1h,c
 16396  0001F8  50E7               	movf	indf1,w,c
 16397  0001FA  EC9F  F03B         	call	_hexCharsToUint8
 16398  0001FE  6EDF               	movwf	indf2,c
 16399  000200  2A1C               	incf	parseHexFileEntry@i,f,c
 16400  000202                     l12634:
 16401  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 16402  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 16403  00020A  501C               	movf	parseHexFileEntry@i,w,c
 16404  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 16405  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 16406  000210  50DE               	movf	postinc2,w,c
 16407  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
 16408  000214  50DE               	movf	postinc2,w,c
 16409  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
 16410  000218  A0D8               	btfss	status,0,c
 16411  00021A  D7B6               	goto	l12630
 16412                           
 16413                           ;hex.c: 86: }
 16414                           ;hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], data[offset +
      +                           10 + i + i]);
 16415  00021C  EE20 F015          	lfsr	2,21
 16416  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16417  000222  26D9               	addwf	fsr2l,f,c
 16418  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16419  000226  22DA               	addwfc	fsr2h,f,c
 16420  000228  501C               	movf	parseHexFileEntry@i,w,c
 16421  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 16422  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 16423  000230  2614               	addwf	??_parseHexFileEntry,f,c
 16424  000232  0E00               	movlw	0
 16425  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
 16426  000236  500E               	movf	parseHexFileEntry@offset,w,c
 16427  000238  2614               	addwf	??_parseHexFileEntry,f,c
 16428  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
 16429  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
 16430  00023E  0E0A               	movlw	10
 16431  000240  2614               	addwf	??_parseHexFileEntry,f,c
 16432  000242  0E00               	movlw	0
 16433  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
 16434  000246  5014               	movf	??_parseHexFileEntry,w,c
 16435  000248  240C               	addwf	parseHexFileEntry@data,w,c
 16436  00024A  6EE1               	movwf	fsr1l,c
 16437  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
 16438  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16439  000250  6EE2               	movwf	fsr1h,c
 16440  000252  50E7               	movf	indf1,w,c
 16441  000254  6E03               	movwf	hexCharsToUint8@c2,c
 16442  000256  501C               	movf	parseHexFileEntry@i,w,c
 16443  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 16444  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 16445  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
 16446  000260  0E00               	movlw	0
 16447  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
 16448  000264  500E               	movf	parseHexFileEntry@offset,w,c
 16449  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
 16450  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
 16451  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
 16452  00026C  0E09               	movlw	9
 16453  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
 16454  000270  0E00               	movlw	0
 16455  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
 16456  000274  5016               	movf	??_parseHexFileEntry+2,w,c
 16457  000276  240C               	addwf	parseHexFileEntry@data,w,c
 16458  000278  6EE1               	movwf	fsr1l,c
 16459  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
 16460  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16461  00027E  6EE2               	movwf	fsr1h,c
 16462  000280  50E7               	movf	indf1,w,c
 16463  000282  EC9F  F03B         	call	_hexCharsToUint8
 16464  000286  6EDF               	movwf	indf2,c
 16465                           
 16466                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
 16467  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 16468  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 16469  000290  EE10 F016          	lfsr	1,22
 16470  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16471  000296  26E1               	addwf	fsr1l,f,c
 16472  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16473  00029A  22E2               	addwfc	fsr1h,f,c
 16474  00029C  CFDF FFE7          	movff	indf2,indf1
 16475                           
 16476                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
 16477  0002A0  EE20 F002          	lfsr	2,2
 16478  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16479  0002A6  26D9               	addwf	fsr2l,f,c
 16480  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16481  0002AA  22DA               	addwfc	fsr2h,f,c
 16482  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
 16483  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
 16484  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
 16485  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
 16486  0002BA  EE20 F016          	lfsr	2,22
 16487  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16488  0002C0  26D9               	addwf	fsr2l,f,c
 16489  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16490  0002C4  22DA               	addwfc	fsr2h,f,c
 16491  0002C6  5014               	movf	??_parseHexFileEntry,w,c
 16492  0002C8  26DF               	addwf	indf2,f,c
 16493                           
 16494                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
 16495  0002CA  EE20 F002          	lfsr	2,2
 16496  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16497  0002D0  26D9               	addwf	fsr2l,f,c
 16498  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16499  0002D4  22DA               	addwfc	fsr2h,f,c
 16500  0002D6  50DF               	movf	indf2,w,c
 16501  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 16502  0002DA  EE20 F016          	lfsr	2,22
 16503  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16504  0002E0  26D9               	addwf	fsr2l,f,c
 16505  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16506  0002E4  22DA               	addwfc	fsr2h,f,c
 16507  0002E6  5014               	movf	??_parseHexFileEntry,w,c
 16508  0002E8  26DF               	addwf	indf2,f,c
 16509                           
 16510                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
 16511  0002EA  EE20 F004          	lfsr	2,4
 16512  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16513  0002F0  26D9               	addwf	fsr2l,f,c
 16514  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16515  0002F4  22DA               	addwfc	fsr2h,f,c
 16516  0002F6  50DF               	movf	indf2,w,c
 16517  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 16518  0002FA  EE20 F016          	lfsr	2,22
 16519  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16520  000300  26D9               	addwf	fsr2l,f,c
 16521  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16522  000304  22DA               	addwfc	fsr2h,f,c
 16523  000306  5014               	movf	??_parseHexFileEntry,w,c
 16524  000308  26DF               	addwf	indf2,f,c
 16525                           
 16526                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
 16527  00030A  0E00               	movlw	0
 16528  00030C  6E1C               	movwf	parseHexFileEntry@i,c
 16529  00030E  D017               	goto	l12652
 16530  000310                     l12648:
 16531                           
 16532                           ;hex.c: 97: {
 16533                           ;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
 16534  000310  501C               	movf	parseHexFileEntry@i,w,c
 16535  000312  0D01               	mullw	1
 16536  000314  0E05               	movlw	5
 16537  000316  26F3               	addwf	prodl,f,c
 16538  000318  0E00               	movlw	0
 16539  00031A  22F4               	addwfc	prodh,f,c
 16540  00031C  50F3               	movf	prodl,w,c
 16541  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 16542  000320  6ED9               	movwf	fsr2l,c
 16543  000322  50F4               	movf	prodh,w,c
 16544  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 16545  000326  6EDA               	movwf	fsr2h,c
 16546  000328  50DF               	movf	indf2,w,c
 16547  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 16548  00032C  EE20 F016          	lfsr	2,22
 16549  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16550  000332  26D9               	addwf	fsr2l,f,c
 16551  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16552  000336  22DA               	addwfc	fsr2h,f,c
 16553  000338  5014               	movf	??_parseHexFileEntry,w,c
 16554  00033A  26DF               	addwf	indf2,f,c
 16555  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
 16556  00033E                     l12652:
 16557  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 16558  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 16559  000346  501C               	movf	parseHexFileEntry@i,w,c
 16560  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 16561  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 16562  00034C  50DE               	movf	postinc2,w,c
 16563  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
 16564  000350  50DE               	movf	postinc2,w,c
 16565  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
 16566  000354  A0D8               	btfss	status,0,c
 16567  000356  D7DC               	goto	l12648
 16568                           
 16569                           ;hex.c: 99: }
 16570                           ;hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
 16571  000358  EE20 F015          	lfsr	2,21
 16572  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16573  00035E  26D9               	addwf	fsr2l,f,c
 16574  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16575  000362  22DA               	addwfc	fsr2h,f,c
 16576  000364  50DF               	movf	indf2,w,c
 16577  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 16578  000368  EE20 F016          	lfsr	2,22
 16579  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16580  00036E  26D9               	addwf	fsr2l,f,c
 16581  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16582  000372  22DA               	addwfc	fsr2h,f,c
 16583  000374  5014               	movf	??_parseHexFileEntry,w,c
 16584  000376  26DF               	addwf	indf2,f,c
 16585                           
 16586                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
 16587  000378  EE20 F016          	lfsr	2,22
 16588  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16589  00037E  26D9               	addwf	fsr2l,f,c
 16590  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16591  000382  22DA               	addwfc	fsr2h,f,c
 16592  000384  50DF               	movf	indf2,w,c
 16593  000386  B4D8               	btfsc	status,2,c
 16594  000388  D009               	goto	l12660
 16595                           
 16596                           ;hex.c: 104: {
 16597                           ;hex.c: 105: return (uint32_t) RecordErrorChecksum;
 16598  00038A  0EFE               	movlw	254
 16599  00038C  6E0C               	movwf	?_parseHexFileEntry,c
 16600  00038E  0EFF               	movlw	255
 16601  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
 16602  000392  0EFF               	movlw	255
 16603  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
 16604  000396  0EFF               	movlw	255
 16605  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
 16606  00039A  0012               	return	
 16607  00039C                     l12660:
 16608                           
 16609                           ;hex.c: 106: }
 16610                           ;hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
 16611  00039C  EE20 F004          	lfsr	2,4
 16612  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
 16613  0003A2  26D9               	addwf	fsr2l,f,c
 16614  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 16615  0003A6  22DA               	addwfc	fsr2h,f,c
 16616  0003A8  04DE               	decf	postinc2,w,c
 16617  0003AA  A4D8               	btfss	status,2,c
 16618  0003AC  D009               	goto	l12668
 16619                           
 16620                           ;hex.c: 110: {
 16621                           ;hex.c: 112: return 0;
 16622  0003AE  0E00               	movlw	0
 16623  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
 16624  0003B2  0E00               	movlw	0
 16625  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
 16626  0003B6  0E00               	movlw	0
 16627  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
 16628  0003BA  0E00               	movlw	0
 16629  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
 16630                           
 16631                           ;hex.c: 113: }
 16632  0003BE  0012               	return	
 16633  0003C0                     l12668:
 16634                           
 16635                           ;hex.c: 114: else
 16636                           ;hex.c: 115: {
 16637                           ;hex.c: 116: offset += 11 + i + i;
 16638  0003C0  501C               	movf	parseHexFileEntry@i,w,c
 16639  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 16640  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 16641  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
 16642  0003CA  0E00               	movlw	0
 16643  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 16644  0003CE  0E0B               	movlw	11
 16645  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
 16646  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 16647  0003D4  0E00               	movlw	0
 16648  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
 16649  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 16650  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
 16651  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
 16652  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
 16653  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
 16654  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 16655  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
 16656  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
 16657  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
 16658  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 16659  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
 16660  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 16661  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
 16662  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 16663                           
 16664                           ;hex.c: 117: if (data[++offset] == ':')
 16665  0003F4  0E01               	movlw	1
 16666  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
 16667  0003F8  0E00               	movlw	0
 16668  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 16669  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 16670  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 16671  000400  500E               	movf	parseHexFileEntry@offset,w,c
 16672  000402  240C               	addwf	parseHexFileEntry@data,w,c
 16673  000404  6ED9               	movwf	fsr2l,c
 16674  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
 16675  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16676  00040A  6EDA               	movwf	fsr2h,c
 16677  00040C  0E3A               	movlw	58
 16678  00040E  18DE               	xorwf	postinc2,w,c
 16679  000410  A4D8               	btfss	status,2,c
 16680  000412  D009               	goto	l12676
 16681                           
 16682                           ;hex.c: 118: {
 16683                           ;hex.c: 119: return offset;
 16684  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 16685  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 16686  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 16687  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 16688                           
 16689                           ;hex.c: 120: }
 16690  000424  0012               	return	
 16691  000426                     l12676:
 16692                           
 16693                           ;hex.c: 121: else if (data[++offset] == ':')
 16694  000426  0E01               	movlw	1
 16695  000428  260E               	addwf	parseHexFileEntry@offset,f,c
 16696  00042A  0E00               	movlw	0
 16697  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 16698  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 16699  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 16700  000432  500E               	movf	parseHexFileEntry@offset,w,c
 16701  000434  240C               	addwf	parseHexFileEntry@data,w,c
 16702  000436  6ED9               	movwf	fsr2l,c
 16703  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
 16704  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16705  00043C  6EDA               	movwf	fsr2h,c
 16706  00043E  0E3A               	movlw	58
 16707  000440  18DE               	xorwf	postinc2,w,c
 16708  000442  A4D8               	btfss	status,2,c
 16709  000444  D009               	goto	l12682
 16710                           
 16711                           ;hex.c: 122: {
 16712                           ;hex.c: 123: return offset;
 16713  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 16714  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 16715  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 16716  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 16717                           
 16718                           ;hex.c: 124: }
 16719  000456  0012               	return	
 16720  000458                     l12682:
 16721                           
 16722                           ;hex.c: 125: else if (data[++offset] == ':')
 16723  000458  0E01               	movlw	1
 16724  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
 16725  00045C  0E00               	movlw	0
 16726  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 16727  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 16728  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 16729  000464  500E               	movf	parseHexFileEntry@offset,w,c
 16730  000466  240C               	addwf	parseHexFileEntry@data,w,c
 16731  000468  6ED9               	movwf	fsr2l,c
 16732  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
 16733  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 16734  00046E  6EDA               	movwf	fsr2h,c
 16735  000470  0E3A               	movlw	58
 16736  000472  18DE               	xorwf	postinc2,w,c
 16737  000474  A4D8               	btfss	status,2,c
 16738  000476  D009               	goto	l12688
 16739                           
 16740                           ;hex.c: 126: {
 16741                           ;hex.c: 127: return offset;
 16742  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 16743  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 16744  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 16745  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 16746                           
 16747                           ;hex.c: 128: }
 16748  000488  0012               	return	
 16749  00048A                     l12688:
 16750                           
 16751                           ;hex.c: 129: else
 16752                           ;hex.c: 130: {
 16753                           ;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
 16754  00048A  0EFD               	movlw	253
 16755  00048C  6E0C               	movwf	?_parseHexFileEntry,c
 16756  00048E  0EFF               	movlw	255
 16757  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
 16758  000492  0EFF               	movlw	255
 16759  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
 16760  000496  0EFF               	movlw	255
 16761  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
 16762  00049A  0012               	return	
 16763  00049C                     __end_of_parseHexFileEntry:
 16764                           	opt stack 0
 16765                           tblptru	equ	0xFF8
 16766                           tblptrh	equ	0xFF7
 16767                           tblptrl	equ	0xFF6
 16768                           tablat	equ	0xFF5
 16769                           prodh	equ	0xFF4
 16770                           prodl	equ	0xFF3
 16771                           intcon	equ	0xFF2
 16772                           intcon2	equ	0xFF1
 16773                           intcon3	equ	0xFF0
 16774                           postinc0	equ	0xFEE
 16775                           wreg	equ	0xFE8
 16776                           indf1	equ	0xFE7
 16777                           postdec1	equ	0xFE5
 16778                           plusw1	equ	0xFE3
 16779                           fsr1h	equ	0xFE2
 16780                           fsr1l	equ	0xFE1
 16781                           indf2	equ	0xFDF
 16782                           postinc2	equ	0xFDE
 16783                           postdec2	equ	0xFDD
 16784                           plusw2	equ	0xFDB
 16785                           fsr2h	equ	0xFDA
 16786                           fsr2l	equ	0xFD9
 16787                           status	equ	0xFD8
 16788                           
 16789 ;; *************** function _hexCharsToUint8 *****************
 16790 ;; Defined at:
 16791 ;;		line 42 in file "hex.c"
 16792 ;; Parameters:    Size  Location     Type
 16793 ;;  c1              1    wreg     unsigned char 
 16794 ;;  c2              1    2[COMRAM] unsigned char 
 16795 ;; Auto vars:     Size  Location     Type
 16796 ;;  c1              1    4[COMRAM] unsigned char 
 16797 ;;  retVal          1    5[COMRAM] unsigned char 
 16798 ;; Return value:  Size  Location     Type
 16799 ;;                  1    wreg      unsigned char 
 16800 ;; Registers used:
 16801 ;;		wreg, status,2, status,0, cstack
 16802 ;; Tracked objects:
 16803 ;;		On entry : 0/0
 16804 ;;		On exit  : 0/0
 16805 ;;		Unchanged: 0/0
 16806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16807 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16810 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16811 ;;Total ram usage:        4 bytes
 16812 ;; Hardware stack levels used:    1
 16813 ;; Hardware stack levels required when called:    1
 16814 ;; This function calls:
 16815 ;;		_hexCharToUint8
 16816 ;; This function is called by:
 16817 ;;		_parseHexFileEntry
 16818 ;; This function uses a non-reentrant model
 16819 ;;
 16820                           
 16821                           	psect	text71
 16822  00773E                     __ptext71:
 16823                           	opt stack 0
 16824  00773E                     _hexCharsToUint8:
 16825                           	opt stack 26
 16826                           
 16827                           ;incstack = 0
 16828                           ;hexCharsToUint8@c1 stored from wreg
 16829  00773E  6E05               	movwf	hexCharsToUint8@c1,c
 16830                           
 16831                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
 16832  007740  5005               	movf	hexCharsToUint8@c1,w,c
 16833  007742  EC5F  F03A         	call	_hexCharToUint8
 16834  007746  6E04               	movwf	??_hexCharsToUint8& (0+255),c
 16835  007748  3804               	swapf	??_hexCharsToUint8,w,c
 16836  00774A  0BF0               	andlw	240
 16837  00774C  6E06               	movwf	hexCharsToUint8@retVal,c
 16838                           
 16839                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
 16840  00774E  5003               	movf	hexCharsToUint8@c2,w,c
 16841  007750  EC5F  F03A         	call	_hexCharToUint8
 16842  007754  1206               	iorwf	hexCharsToUint8@retVal,f,c
 16843                           
 16844                           ;hex.c: 46: return retVal;
 16845  007756  5006               	movf	hexCharsToUint8@retVal,w,c
 16846  007758  0012               	return	
 16847  00775A                     __end_of_hexCharsToUint8:
 16848                           	opt stack 0
 16849                           tblptru	equ	0xFF8
 16850                           tblptrh	equ	0xFF7
 16851                           tblptrl	equ	0xFF6
 16852                           tablat	equ	0xFF5
 16853                           prodh	equ	0xFF4
 16854                           prodl	equ	0xFF3
 16855                           intcon	equ	0xFF2
 16856                           intcon2	equ	0xFF1
 16857                           intcon3	equ	0xFF0
 16858                           postinc0	equ	0xFEE
 16859                           wreg	equ	0xFE8
 16860                           indf1	equ	0xFE7
 16861                           postdec1	equ	0xFE5
 16862                           plusw1	equ	0xFE3
 16863                           fsr1h	equ	0xFE2
 16864                           fsr1l	equ	0xFE1
 16865                           indf2	equ	0xFDF
 16866                           postinc2	equ	0xFDE
 16867                           postdec2	equ	0xFDD
 16868                           plusw2	equ	0xFDB
 16869                           fsr2h	equ	0xFDA
 16870                           fsr2l	equ	0xFD9
 16871                           status	equ	0xFD8
 16872                           
 16873 ;; *************** function _hexCharsToUint16 *****************
 16874 ;; Defined at:
 16875 ;;		line 49 in file "hex.c"
 16876 ;; Parameters:    Size  Location     Type
 16877 ;;  c1              1    wreg     unsigned char 
 16878 ;;  c2              1    2[COMRAM] unsigned char 
 16879 ;;  c3              1    3[COMRAM] unsigned char 
 16880 ;;  c4              1    4[COMRAM] unsigned char 
 16881 ;; Auto vars:     Size  Location     Type
 16882 ;;  c1              1    8[COMRAM] unsigned char 
 16883 ;;  retVal          2    9[COMRAM] unsigned int 
 16884 ;; Return value:  Size  Location     Type
 16885 ;;                  2    2[COMRAM] unsigned int 
 16886 ;; Registers used:
 16887 ;;		wreg, status,2, status,0, cstack
 16888 ;; Tracked objects:
 16889 ;;		On entry : 0/0
 16890 ;;		On exit  : 0/0
 16891 ;;		Unchanged: 0/0
 16892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16893 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16894 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16895 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16896 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16897 ;;Total ram usage:        9 bytes
 16898 ;; Hardware stack levels used:    1
 16899 ;; Hardware stack levels required when called:    1
 16900 ;; This function calls:
 16901 ;;		_hexCharToUint8
 16902 ;; This function is called by:
 16903 ;;		_parseHexFileEntry
 16904 ;; This function uses a non-reentrant model
 16905 ;;
 16906                           
 16907                           	psect	text72
 16908  00646E                     __ptext72:
 16909                           	opt stack 0
 16910  00646E                     _hexCharsToUint16:
 16911                           	opt stack 26
 16912                           
 16913                           ;incstack = 0
 16914                           ;hexCharsToUint16@c1 stored from wreg
 16915  00646E  6E09               	movwf	hexCharsToUint16@c1,c
 16916                           
 16917                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
 16918  006470  5009               	movf	hexCharsToUint16@c1,w,c
 16919  006472  EC5F  F03A         	call	_hexCharToUint8
 16920  006476  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 16921  006478  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 16922  00647A  0E0C               	movlw	12
 16923  00647C                     u8645:
 16924  00647C  90D8               	bcf	status,0,c
 16925  00647E  3606               	rlcf	??_hexCharsToUint16,f,c
 16926  006480  3607               	rlcf	??_hexCharsToUint16+1,f,c
 16927  006482  2EE8               	decfsz	wreg,f,c
 16928  006484  D7FB               	goto	u8645
 16929  006486  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
 16930  00648A  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
 16931                           
 16932                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
 16933  00648E  5003               	movf	hexCharsToUint16@c2,w,c
 16934  006490  EC5F  F03A         	call	_hexCharToUint8
 16935  006494  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 16936  006496  5006               	movf	??_hexCharsToUint16,w,c
 16937  006498  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
 16938  00649A  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 16939  00649C  5007               	movf	??_hexCharsToUint16+1,w,c
 16940  00649E  120A               	iorwf	hexCharsToUint16@retVal,f,c
 16941  0064A0  5008               	movf	??_hexCharsToUint16+2,w,c
 16942  0064A2  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 16943                           
 16944                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
 16945  0064A4  5004               	movf	hexCharsToUint16@c3,w,c
 16946  0064A6  EC5F  F03A         	call	_hexCharToUint8
 16947  0064AA  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 16948  0064AC  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 16949  0064AE  3A06               	swapf	??_hexCharsToUint16,f,c
 16950  0064B0  3A07               	swapf	??_hexCharsToUint16+1,f,c
 16951  0064B2  0EF0               	movlw	240
 16952  0064B4  1607               	andwf	??_hexCharsToUint16+1,f,c
 16953  0064B6  5006               	movf	??_hexCharsToUint16,w,c
 16954  0064B8  0B0F               	andlw	15
 16955  0064BA  1207               	iorwf	??_hexCharsToUint16+1,f,c
 16956  0064BC  0EF0               	movlw	240
 16957  0064BE  1606               	andwf	??_hexCharsToUint16,f,c
 16958  0064C0  5006               	movf	??_hexCharsToUint16,w,c
 16959  0064C2  120A               	iorwf	hexCharsToUint16@retVal,f,c
 16960  0064C4  5007               	movf	??_hexCharsToUint16+1,w,c
 16961  0064C6  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 16962                           
 16963                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
 16964  0064C8  5005               	movf	hexCharsToUint16@c4,w,c
 16965  0064CA  EC5F  F03A         	call	_hexCharToUint8
 16966  0064CE  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 16967  0064D0  5006               	movf	??_hexCharsToUint16,w,c
 16968  0064D2  120A               	iorwf	hexCharsToUint16@retVal,f,c
 16969                           
 16970                           ;hex.c: 55: return retVal;
 16971  0064D4  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
 16972  0064D8  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
 16973  0064DC  0012               	return	
 16974  0064DE                     __end_of_hexCharsToUint16:
 16975                           	opt stack 0
 16976                           tblptru	equ	0xFF8
 16977                           tblptrh	equ	0xFF7
 16978                           tblptrl	equ	0xFF6
 16979                           tablat	equ	0xFF5
 16980                           prodh	equ	0xFF4
 16981                           prodl	equ	0xFF3
 16982                           intcon	equ	0xFF2
 16983                           intcon2	equ	0xFF1
 16984                           intcon3	equ	0xFF0
 16985                           postinc0	equ	0xFEE
 16986                           wreg	equ	0xFE8
 16987                           indf1	equ	0xFE7
 16988                           postdec1	equ	0xFE5
 16989                           plusw1	equ	0xFE3
 16990                           fsr1h	equ	0xFE2
 16991                           fsr1l	equ	0xFE1
 16992                           indf2	equ	0xFDF
 16993                           postinc2	equ	0xFDE
 16994                           postdec2	equ	0xFDD
 16995                           plusw2	equ	0xFDB
 16996                           fsr2h	equ	0xFDA
 16997                           fsr2l	equ	0xFD9
 16998                           status	equ	0xFD8
 16999                           
 17000 ;; *************** function _hexCharToUint8 *****************
 17001 ;; Defined at:
 17002 ;;		line 11 in file "hex.c"
 17003 ;; Parameters:    Size  Location     Type
 17004 ;;  c               1    wreg     unsigned char 
 17005 ;; Auto vars:     Size  Location     Type
 17006 ;;  c               1    0[COMRAM] unsigned char 
 17007 ;;  ascii           1    1[COMRAM] unsigned char 
 17008 ;; Return value:  Size  Location     Type
 17009 ;;                  1    wreg      unsigned char 
 17010 ;; Registers used:
 17011 ;;		wreg, status,2, status,0
 17012 ;; Tracked objects:
 17013 ;;		On entry : 0/0
 17014 ;;		On exit  : 0/0
 17015 ;;		Unchanged: 0/0
 17016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17020 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17021 ;;Total ram usage:        2 bytes
 17022 ;; Hardware stack levels used:    1
 17023 ;; This function calls:
 17024 ;;		Nothing
 17025 ;; This function is called by:
 17026 ;;		_hexCharsToUint8
 17027 ;;		_hexCharsToUint16
 17028 ;; This function uses a non-reentrant model
 17029 ;;
 17030                           
 17031                           	psect	text73
 17032  0074BE                     __ptext73:
 17033                           	opt stack 0
 17034  0074BE                     _hexCharToUint8:
 17035                           	opt stack 26
 17036                           
 17037                           ;incstack = 0
 17038                           ;hexCharToUint8@c stored from wreg
 17039  0074BE  6E01               	movwf	hexCharToUint8@c,c
 17040                           
 17041                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
 17042  0074C0  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
 17043                           
 17044                           ;hex.c: 16: if (ascii >= 97)
 17045  0074C4  0E60               	movlw	96
 17046  0074C6  6402               	cpfsgt	hexCharToUint8@ascii,c
 17047  0074C8  D002               	goto	l11006
 17048                           
 17049                           ;hex.c: 17: {
 17050                           ;hex.c: 18: ascii -= 87;
 17051  0074CA  0E57               	movlw	87
 17052  0074CC  D006               	goto	L3
 17053  0074CE                     l11006:
 17054                           
 17055                           ;hex.c: 21: else if (ascii >= 65)
 17056  0074CE  0E40               	movlw	64
 17057  0074D0  6402               	cpfsgt	hexCharToUint8@ascii,c
 17058  0074D2  D002               	goto	l11010
 17059                           
 17060                           ;hex.c: 22: {
 17061                           ;hex.c: 23: ascii -= 55;
 17062  0074D4  0E37               	movlw	55
 17063  0074D6  D001               	goto	L3
 17064  0074D8                     l11010:
 17065                           
 17066                           ;hex.c: 26: else
 17067                           ;hex.c: 27: {
 17068                           ;hex.c: 28: ascii -= 48;
 17069  0074D8  0E30               	movlw	48
 17070  0074DA                     L3:
 17071  0074DA  5E02               	subwf	hexCharToUint8@ascii,f,c
 17072                           
 17073                           ;hex.c: 29: }
 17074                           ;hex.c: 31: if (ascii > 15)
 17075  0074DC  0E0F               	movlw	15
 17076  0074DE  6402               	cpfsgt	hexCharToUint8@ascii,c
 17077  0074E0  D002               	goto	l11018
 17078                           
 17079                           ;hex.c: 32: {
 17080                           ;hex.c: 33: return 0;
 17081  0074E2  0E00               	movlw	0
 17082                           
 17083                           ;hex.c: 34: }
 17084  0074E4  0012               	return	
 17085  0074E6                     l11018:
 17086                           
 17087                           ;hex.c: 35: else
 17088                           ;hex.c: 36: {
 17089                           ;hex.c: 37: return ascii;
 17090  0074E6  5002               	movf	hexCharToUint8@ascii,w,c
 17091  0074E8  0012               	return	
 17092  0074EA                     __end_of_hexCharToUint8:
 17093                           	opt stack 0
 17094                           tblptru	equ	0xFF8
 17095                           tblptrh	equ	0xFF7
 17096                           tblptrl	equ	0xFF6
 17097                           tablat	equ	0xFF5
 17098                           prodh	equ	0xFF4
 17099                           prodl	equ	0xFF3
 17100                           intcon	equ	0xFF2
 17101                           intcon2	equ	0xFF1
 17102                           intcon3	equ	0xFF0
 17103                           postinc0	equ	0xFEE
 17104                           wreg	equ	0xFE8
 17105                           indf1	equ	0xFE7
 17106                           postdec1	equ	0xFE5
 17107                           plusw1	equ	0xFE3
 17108                           fsr1h	equ	0xFE2
 17109                           fsr1l	equ	0xFE1
 17110                           indf2	equ	0xFDF
 17111                           postinc2	equ	0xFDE
 17112                           postdec2	equ	0xFDD
 17113                           plusw2	equ	0xFDB
 17114                           fsr2h	equ	0xFDA
 17115                           fsr2l	equ	0xFD9
 17116                           status	equ	0xFD8
 17117                           
 17118 ;; *************** function _internalFlash_writePage *****************
 17119 ;; Defined at:
 17120 ;;		line 63 in file "internal_flash.c"
 17121 ;; Parameters:    Size  Location     Type
 17122 ;;  page            2    2[COMRAM] unsigned int 
 17123 ;; Auto vars:     Size  Location     Type
 17124 ;;  address         4    4[COMRAM] unsigned long 
 17125 ;;  cntr            2    8[COMRAM] unsigned int 
 17126 ;;  byte_cntr       1   11[COMRAM] unsigned char 
 17127 ;;  block_cntr      1   10[COMRAM] unsigned char 
 17128 ;;  i               1    0        unsigned char 
 17129 ;;  gie             1    0        unsigned char 
 17130 ;; Return value:  Size  Location     Type
 17131 ;;                  1    wreg      void 
 17132 ;; Registers used:
 17133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17134 ;; Tracked objects:
 17135 ;;		On entry : 0/0
 17136 ;;		On exit  : 0/0
 17137 ;;		Unchanged: 0/0
 17138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17140 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17142 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17143 ;;Total ram usage:       10 bytes
 17144 ;; Hardware stack levels used:    1
 17145 ;; Hardware stack levels required when called:    1
 17146 ;; This function calls:
 17147 ;;		__internalFlash_unlockAndActivate
 17148 ;; This function is called by:
 17149 ;;		__bootloader_program
 17150 ;; This function uses a non-reentrant model
 17151 ;;
 17152                           
 17153                           	psect	text74
 17154  0060AC                     __ptext74:
 17155                           	opt stack 0
 17156  0060AC                     _internalFlash_writePage:
 17157                           	opt stack 27
 17158                           
 17159                           ;internal_flash.c: 65: uint32_t address;
 17160                           ;internal_flash.c: 66: uint8_t gie;
 17161                           ;internal_flash.c: 67: uint16_t cntr;
 17162                           ;internal_flash.c: 68: uint8_t i;
 17163                           ;internal_flash.c: 69: uint8_t block_cntr;
 17164                           ;internal_flash.c: 70: uint8_t byte_cntr;
 17165                           ;internal_flash.c: 73: address = page;
 17166                           
 17167                           ;incstack = 0
 17168  0060AC  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
 17169  0060B0  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
 17170  0060B4  6A07               	clrf	internalFlash_writePage@address+2,c
 17171  0060B6  6A08               	clrf	internalFlash_writePage@address+3,c
 17172                           
 17173                           ;internal_flash.c: 74: address <<= 10;
 17174  0060B8  0E0A               	movlw	10
 17175  0060BA                     u9635:
 17176  0060BA  90D8               	bcf	status,0,c
 17177  0060BC  3605               	rlcf	internalFlash_writePage@address,f,c
 17178  0060BE  3606               	rlcf	internalFlash_writePage@address+1,f,c
 17179  0060C0  3607               	rlcf	internalFlash_writePage@address+2,f,c
 17180  0060C2  3608               	rlcf	internalFlash_writePage@address+3,f,c
 17181  0060C4  2EE8               	decfsz	wreg,f,c
 17182  0060C6  D7F9               	goto	u9635
 17183                           
 17184                           ;internal_flash.c: 76: TBLPTR = address;
 17185  0060C8  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
 17186  0060CC  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
 17187  0060D0  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
 17188                           
 17189                           ;internal_flash.c: 79: cntr = 0;
 17190  0060D4  0E00               	movlw	0
 17191  0060D6  6E0A               	movwf	internalFlash_writePage@cntr+1,c
 17192  0060D8  0E00               	movlw	0
 17193  0060DA  6E09               	movwf	internalFlash_writePage@cntr,c
 17194                           
 17195                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
 17196  0060DC  0E00               	movlw	0
 17197  0060DE  6E0B               	movwf	internalFlash_writePage@block_cntr,c
 17198  0060E0                     l12768:
 17199  0060E0  0E0F               	movlw	15
 17200  0060E2  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
 17201  0060E4  D001               	goto	l12772
 17202  0060E6  0012               	return	
 17203  0060E8                     l12772:
 17204                           
 17205                           ;internal_flash.c: 81: {
 17206                           ;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cntr)
 17207  0060E8  0E00               	movlw	0
 17208  0060EA  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
 17209  0060EC                     l12774:
 17210  0060EC  0E3F               	movlw	63
 17211  0060EE  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
 17212  0060F0  D001               	goto	l12778
 17213  0060F2  D00D               	goto	l2797
 17214  0060F4                     l12778:
 17215                           
 17216                           ;internal_flash.c: 85: {
 17217                           ;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
 17218  0060F4  0E00               	movlw	low _pageBuffer
 17219  0060F6  2409               	addwf	internalFlash_writePage@cntr,w,c
 17220  0060F8  6ED9               	movwf	fsr2l,c
 17221  0060FA  0E08               	movlw	high _pageBuffer
 17222  0060FC  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
 17223  0060FE  6EDA               	movwf	fsr2h,c
 17224  006100  50DF               	movf	indf2,w,c
 17225  006102  6EF5               	movwf	tablat,c	;volatile
 17226  006104  000D               	tblwt		*+	;# 
 17227                           
 17228                           ;internal_flash.c: 91: ++cntr;
 17229  006106  4A09               	infsnz	internalFlash_writePage@cntr,f,c
 17230  006108  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
 17231  00610A  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
 17232  00610C  D7EF               	goto	l12774
 17233  00610E                     l2797:
 17234  00610E  000A               	tblrd		*-	;# 
 17235                           
 17236                           ;internal_flash.c: 98: EECON1 = 0x84;
 17237  006110  0E84               	movlw	132
 17238  006112  6EA6               	movwf	4006,c	;volatile
 17239                           
 17240                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 17241  006114  0EB5               	movlw	181
 17242  006116  ECCA  F03A         	call	__internalFlash_unlockAndActivate
 17243                           
 17244                           ;internal_flash.c: 100: TBLPTR++;
 17245  00611A  0E01               	movlw	1
 17246  00611C  26F6               	addwf	tblptrl,f,c	;volatile
 17247  00611E  0E00               	movlw	0
 17248  006120  22F7               	addwfc	tblptrh,f,c	;volatile
 17249  006122  0E00               	movlw	0
 17250  006124  22F8               	addwfc	tblptru,f,c	;volatile
 17251  006126  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
 17252  006128  D7DB               	goto	l12768
 17253  00612A                     __end_of_internalFlash_writePage:
 17254                           	opt stack 0
 17255                           tblptru	equ	0xFF8
 17256                           tblptrh	equ	0xFF7
 17257                           tblptrl	equ	0xFF6
 17258                           tablat	equ	0xFF5
 17259                           prodh	equ	0xFF4
 17260                           prodl	equ	0xFF3
 17261                           intcon	equ	0xFF2
 17262                           intcon2	equ	0xFF1
 17263                           intcon3	equ	0xFF0
 17264                           postinc0	equ	0xFEE
 17265                           wreg	equ	0xFE8
 17266                           indf1	equ	0xFE7
 17267                           postdec1	equ	0xFE5
 17268                           plusw1	equ	0xFE3
 17269                           fsr1h	equ	0xFE2
 17270                           fsr1l	equ	0xFE1
 17271                           indf2	equ	0xFDF
 17272                           postinc2	equ	0xFDE
 17273                           postdec2	equ	0xFDD
 17274                           plusw2	equ	0xFDB
 17275                           fsr2h	equ	0xFDA
 17276                           fsr2l	equ	0xFD9
 17277                           status	equ	0xFD8
 17278                           
 17279 ;; *************** function _internalFlash_readPage *****************
 17280 ;; Defined at:
 17281 ;;		line 37 in file "internal_flash.c"
 17282 ;; Parameters:    Size  Location     Type
 17283 ;;  page            2   21[COMRAM] unsigned int 
 17284 ;; Auto vars:     Size  Location     Type
 17285 ;;  address         4   23[COMRAM] unsigned long 
 17286 ;; Return value:  Size  Location     Type
 17287 ;;                  1    wreg      void 
 17288 ;; Registers used:
 17289 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17290 ;; Tracked objects:
 17291 ;;		On entry : 0/0
 17292 ;;		On exit  : 0/0
 17293 ;;		Unchanged: 0/0
 17294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17296 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17298 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17299 ;;Total ram usage:        6 bytes
 17300 ;; Hardware stack levels used:    1
 17301 ;; Hardware stack levels required when called:    2
 17302 ;; This function calls:
 17303 ;;		_internalFlash_addressFromPage
 17304 ;;		_internalFlash_read
 17305 ;; This function is called by:
 17306 ;;		__bootloader_program
 17307 ;; This function uses a non-reentrant model
 17308 ;;
 17309                           
 17310                           	psect	text75
 17311  0070A2                     __ptext75:
 17312                           	opt stack 0
 17313  0070A2                     _internalFlash_readPage:
 17314                           	opt stack 26
 17315                           
 17316                           ;internal_flash.c: 39: uint32_t address;
 17317                           ;internal_flash.c: 40: address = internalFlash_addressFromPage(page);
 17318                           
 17319                           ;incstack = 0
 17320  0070A2  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
 17321  0070A6  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
 17322  0070AA  EC32  F03A         	call	_internalFlash_addressFromPage	;wreg free
 17323  0070AE  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
 17324  0070B2  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
 17325  0070B6  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
 17326  0070BA  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
 17327                           
 17328                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
 17329  0070BE  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
 17330  0070C2  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
 17331  0070C6  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
 17332  0070CA  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
 17333  0070CE  0E04               	movlw	4
 17334  0070D0  6E13               	movwf	internalFlash_read@data_length+1,c
 17335  0070D2  0E00               	movlw	0
 17336  0070D4  6E12               	movwf	internalFlash_read@data_length,c
 17337  0070D6  0E00               	movlw	low _pageBuffer
 17338  0070D8  6E14               	movwf	internalFlash_read@buffer,c
 17339  0070DA  0E08               	movlw	high _pageBuffer
 17340  0070DC  6E15               	movwf	internalFlash_read@buffer+1,c
 17341  0070DE  EC66  F039         	call	_internalFlash_read	;wreg free
 17342  0070E2  0012               	return		;funcret
 17343  0070E4                     __end_of_internalFlash_readPage:
 17344                           	opt stack 0
 17345                           tblptru	equ	0xFF8
 17346                           tblptrh	equ	0xFF7
 17347                           tblptrl	equ	0xFF6
 17348                           tablat	equ	0xFF5
 17349                           prodh	equ	0xFF4
 17350                           prodl	equ	0xFF3
 17351                           intcon	equ	0xFF2
 17352                           intcon2	equ	0xFF1
 17353                           intcon3	equ	0xFF0
 17354                           postinc0	equ	0xFEE
 17355                           wreg	equ	0xFE8
 17356                           indf1	equ	0xFE7
 17357                           postdec1	equ	0xFE5
 17358                           plusw1	equ	0xFE3
 17359                           fsr1h	equ	0xFE2
 17360                           fsr1l	equ	0xFE1
 17361                           indf2	equ	0xFDF
 17362                           postinc2	equ	0xFDE
 17363                           postdec2	equ	0xFDD
 17364                           plusw2	equ	0xFDB
 17365                           fsr2h	equ	0xFDA
 17366                           fsr2l	equ	0xFD9
 17367                           status	equ	0xFD8
 17368                           
 17369 ;; *************** function _internalFlash_read *****************
 17370 ;; Defined at:
 17371 ;;		line 144 in file "internal_flash.c"
 17372 ;; Parameters:    Size  Location     Type
 17373 ;;  address         4   13[COMRAM] unsigned long 
 17374 ;;  data_length     2   17[COMRAM] unsigned int 
 17375 ;;  buffer          2   19[COMRAM] PTR unsigned char 
 17376 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
 17377 ;; Auto vars:     Size  Location     Type
 17378 ;;		None
 17379 ;; Return value:  Size  Location     Type
 17380 ;;                  1    wreg      unsigned char 
 17381 ;; Registers used:
 17382 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17383 ;; Tracked objects:
 17384 ;;		On entry : 0/0
 17385 ;;		On exit  : 0/0
 17386 ;;		Unchanged: 0/0
 17387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17388 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17391 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17392 ;;Total ram usage:        8 bytes
 17393 ;; Hardware stack levels used:    1
 17394 ;; Hardware stack levels required when called:    1
 17395 ;; This function calls:
 17396 ;;		_memcpy
 17397 ;; This function is called by:
 17398 ;;		_internalFlash_readPage
 17399 ;;		__bootloader_verify_program_memory
 17400 ;; This function uses a non-reentrant model
 17401 ;;
 17402                           
 17403                           	psect	text76
 17404  0072CC                     __ptext76:
 17405                           	opt stack 0
 17406  0072CC                     _internalFlash_read:
 17407                           	opt stack 26
 17408                           
 17409                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
 17410                           
 17411                           ;incstack = 0
 17412  0072CC  5011               	movf	internalFlash_read@address+3,w,c
 17413  0072CE  E118               	bnz	l2810
 17414  0072D0  280E               	incf	internalFlash_read@address,w,c
 17415  0072D2  0EFF               	movlw	255
 17416  0072D4  580F               	subwfb	internalFlash_read@address+1,w,c
 17417  0072D6  0E01               	movlw	1
 17418  0072D8  5810               	subwfb	internalFlash_read@address+2,w,c
 17419  0072DA  B0D8               	btfsc	status,0,c
 17420  0072DC  0012               	return	
 17421                           
 17422                           ;internal_flash.c: 152: }
 17423                           ;internal_flash.c: 155: memcpy
 17424                           ;internal_flash.c: 156: (
 17425                           ;internal_flash.c: 157: (void*)buffer,
 17426                           ;internal_flash.c: 158: (const void*)(address),
 17427                           ;internal_flash.c: 159: data_length
 17428                           ;internal_flash.c: 160: );
 17429                           
 17430                           ;internal_flash.c: 150: {
 17431                           ;internal_flash.c: 151: return 0;
 17432                           ;	Return value of _internalFlash_read is never used
 17433  0072DE  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
 17434  0072E2  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
 17435  0072E6  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
 17436  0072EA  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
 17437  0072EE  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
 17438  0072F2  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
 17439  0072F6  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
 17440  0072FA  EC3E  F033         	call	_memcpy	;wreg free
 17441  0072FE  0012               	return	
 17442  007300                     l2810:
 17443  007300  0012               	return		;funcret
 17444  007302                     __end_of_internalFlash_read:
 17445                           	opt stack 0
 17446                           tblptru	equ	0xFF8
 17447                           tblptrh	equ	0xFF7
 17448                           tblptrl	equ	0xFF6
 17449                           tablat	equ	0xFF5
 17450                           prodh	equ	0xFF4
 17451                           prodl	equ	0xFF3
 17452                           intcon	equ	0xFF2
 17453                           intcon2	equ	0xFF1
 17454                           intcon3	equ	0xFF0
 17455                           postinc0	equ	0xFEE
 17456                           wreg	equ	0xFE8
 17457                           indf1	equ	0xFE7
 17458                           postdec1	equ	0xFE5
 17459                           plusw1	equ	0xFE3
 17460                           fsr1h	equ	0xFE2
 17461                           fsr1l	equ	0xFE1
 17462                           indf2	equ	0xFDF
 17463                           postinc2	equ	0xFDE
 17464                           postdec2	equ	0xFDD
 17465                           plusw2	equ	0xFDB
 17466                           fsr2h	equ	0xFDA
 17467                           fsr2l	equ	0xFD9
 17468                           status	equ	0xFD8
 17469                           
 17470 ;; *************** function _internalFlash_pageFromAddress *****************
 17471 ;; Defined at:
 17472 ;;		line 308 in file "internal_flash.c"
 17473 ;; Parameters:    Size  Location     Type
 17474 ;;  address         4    0[COMRAM] unsigned long 
 17475 ;; Auto vars:     Size  Location     Type
 17476 ;;		None
 17477 ;; Return value:  Size  Location     Type
 17478 ;;                  2    0[COMRAM] unsigned int 
 17479 ;; Registers used:
 17480 ;;		wreg, status,2, status,0
 17481 ;; Tracked objects:
 17482 ;;		On entry : 0/0
 17483 ;;		On exit  : 0/0
 17484 ;;		Unchanged: 0/0
 17485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17488 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17489 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17490 ;;Total ram usage:        5 bytes
 17491 ;; Hardware stack levels used:    1
 17492 ;; This function calls:
 17493 ;;		Nothing
 17494 ;; This function is called by:
 17495 ;;		__bootloader_program
 17496 ;; This function uses a non-reentrant model
 17497 ;;
 17498                           
 17499                           	psect	text77
 17500  00775A                     __ptext77:
 17501                           	opt stack 0
 17502  00775A                     _internalFlash_pageFromAddress:
 17503                           	opt stack 28
 17504                           
 17505                           ;internal_flash.c: 310: address >>= 10;
 17506                           
 17507                           ;incstack = 0
 17508  00775A  0E0A               	movlw	10
 17509  00775C  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
 17510  00775E                     u9615:
 17511  00775E  90D8               	bcf	status,0,c
 17512  007760  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
 17513  007762  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
 17514  007764  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
 17515  007766  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
 17516  007768  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
 17517  00776A  D7F9               	goto	u9615
 17518                           
 17519                           ;internal_flash.c: 311: return (uint16_t) address;
 17520  00776C  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
 17521  007770  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
 17522  007774  0012               	return	
 17523  007776                     __end_of_internalFlash_pageFromAddress:
 17524                           	opt stack 0
 17525                           tblptru	equ	0xFF8
 17526                           tblptrh	equ	0xFF7
 17527                           tblptrl	equ	0xFF6
 17528                           tablat	equ	0xFF5
 17529                           prodh	equ	0xFF4
 17530                           prodl	equ	0xFF3
 17531                           intcon	equ	0xFF2
 17532                           intcon2	equ	0xFF1
 17533                           intcon3	equ	0xFF0
 17534                           postinc0	equ	0xFEE
 17535                           wreg	equ	0xFE8
 17536                           indf1	equ	0xFE7
 17537                           postdec1	equ	0xFE5
 17538                           plusw1	equ	0xFE3
 17539                           fsr1h	equ	0xFE2
 17540                           fsr1l	equ	0xFE1
 17541                           indf2	equ	0xFDF
 17542                           postinc2	equ	0xFDE
 17543                           postdec2	equ	0xFDD
 17544                           plusw2	equ	0xFDB
 17545                           fsr2h	equ	0xFDA
 17546                           fsr2l	equ	0xFD9
 17547                           status	equ	0xFD8
 17548                           
 17549 ;; *************** function _internalFlash_getBuffer *****************
 17550 ;; Defined at:
 17551 ;;		line 32 in file "internal_flash.c"
 17552 ;; Parameters:    Size  Location     Type
 17553 ;;		None
 17554 ;; Auto vars:     Size  Location     Type
 17555 ;;		None
 17556 ;; Return value:  Size  Location     Type
 17557 ;;                  2    0[COMRAM] PTR unsigned char 
 17558 ;; Registers used:
 17559 ;;		wreg, status,2, status,0
 17560 ;; Tracked objects:
 17561 ;;		On entry : 0/0
 17562 ;;		On exit  : 0/0
 17563 ;;		Unchanged: 0/0
 17564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17568 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17569 ;;Total ram usage:        2 bytes
 17570 ;; Hardware stack levels used:    1
 17571 ;; This function calls:
 17572 ;;		Nothing
 17573 ;; This function is called by:
 17574 ;;		__bootloader_program
 17575 ;; This function uses a non-reentrant model
 17576 ;;
 17577                           
 17578                           	psect	text78
 17579  00799E                     __ptext78:
 17580                           	opt stack 0
 17581  00799E                     _internalFlash_getBuffer:
 17582                           	opt stack 28
 17583                           
 17584                           ;internal_flash.c: 34: return pageBuffer;
 17585                           
 17586                           ;incstack = 0
 17587  00799E  0E00               	movlw	low _pageBuffer
 17588  0079A0  6E01               	movwf	?_internalFlash_getBuffer,c
 17589  0079A2  0E08               	movlw	high _pageBuffer
 17590  0079A4  6E02               	movwf	?_internalFlash_getBuffer+1,c
 17591  0079A6  0012               	return	
 17592  0079A8                     __end_of_internalFlash_getBuffer:
 17593                           	opt stack 0
 17594                           tblptru	equ	0xFF8
 17595                           tblptrh	equ	0xFF7
 17596                           tblptrl	equ	0xFF6
 17597                           tablat	equ	0xFF5
 17598                           prodh	equ	0xFF4
 17599                           prodl	equ	0xFF3
 17600                           intcon	equ	0xFF2
 17601                           intcon2	equ	0xFF1
 17602                           intcon3	equ	0xFF0
 17603                           postinc0	equ	0xFEE
 17604                           wreg	equ	0xFE8
 17605                           indf1	equ	0xFE7
 17606                           postdec1	equ	0xFE5
 17607                           plusw1	equ	0xFE3
 17608                           fsr1h	equ	0xFE2
 17609                           fsr1l	equ	0xFE1
 17610                           indf2	equ	0xFDF
 17611                           postinc2	equ	0xFDE
 17612                           postdec2	equ	0xFDD
 17613                           plusw2	equ	0xFDB
 17614                           fsr2h	equ	0xFDA
 17615                           fsr2l	equ	0xFD9
 17616                           status	equ	0xFD8
 17617                           
 17618 ;; *************** function _internalFlash_erasePage *****************
 17619 ;; Defined at:
 17620 ;;		line 44 in file "internal_flash.c"
 17621 ;; Parameters:    Size  Location     Type
 17622 ;;  page            2    2[COMRAM] unsigned int 
 17623 ;; Auto vars:     Size  Location     Type
 17624 ;;  address         4    4[COMRAM] unsigned long 
 17625 ;; Return value:  Size  Location     Type
 17626 ;;                  1    wreg      void 
 17627 ;; Registers used:
 17628 ;;		wreg, status,2, status,0, cstack
 17629 ;; Tracked objects:
 17630 ;;		On entry : 0/0
 17631 ;;		On exit  : 0/0
 17632 ;;		Unchanged: 0/0
 17633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17635 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17637 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17638 ;;Total ram usage:        6 bytes
 17639 ;; Hardware stack levels used:    1
 17640 ;; Hardware stack levels required when called:    1
 17641 ;; This function calls:
 17642 ;;		__internalFlash_unlockAndActivate
 17643 ;; This function is called by:
 17644 ;;		__bootloader_program
 17645 ;; This function uses a non-reentrant model
 17646 ;;
 17647                           
 17648                           	psect	text79
 17649  007336                     __ptext79:
 17650                           	opt stack 0
 17651  007336                     _internalFlash_erasePage:
 17652                           	opt stack 27
 17653                           
 17654                           ;internal_flash.c: 46: uint32_t address;
 17655                           ;internal_flash.c: 49: address = page;
 17656                           
 17657                           ;incstack = 0
 17658  007336  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
 17659  00733A  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
 17660  00733E  6A07               	clrf	internalFlash_erasePage@address+2,c
 17661  007340  6A08               	clrf	internalFlash_erasePage@address+3,c
 17662                           
 17663                           ;internal_flash.c: 50: address <<= 10;
 17664  007342  0E0A               	movlw	10
 17665  007344                     u9625:
 17666  007344  90D8               	bcf	status,0,c
 17667  007346  3605               	rlcf	internalFlash_erasePage@address,f,c
 17668  007348  3606               	rlcf	internalFlash_erasePage@address+1,f,c
 17669  00734A  3607               	rlcf	internalFlash_erasePage@address+2,f,c
 17670  00734C  3608               	rlcf	internalFlash_erasePage@address+3,f,c
 17671  00734E  2EE8               	decfsz	wreg,f,c
 17672  007350  D7F9               	goto	u9625
 17673                           
 17674                           ;internal_flash.c: 51: TBLPTR = address;
 17675  007352  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
 17676  007356  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
 17677  00735A  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
 17678                           
 17679                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
 17680  00735E  84A6               	bsf	4006,2,c	;volatile
 17681                           
 17682                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
 17683  007360  88A6               	bsf	4006,4,c	;volatile
 17684                           
 17685                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 17686  007362  0EB5               	movlw	181
 17687  007364  ECCA  F03A         	call	__internalFlash_unlockAndActivate
 17688  007368  0012               	return		;funcret
 17689  00736A                     __end_of_internalFlash_erasePage:
 17690                           	opt stack 0
 17691                           tblptru	equ	0xFF8
 17692                           tblptrh	equ	0xFF7
 17693                           tblptrl	equ	0xFF6
 17694                           tablat	equ	0xFF5
 17695                           prodh	equ	0xFF4
 17696                           prodl	equ	0xFF3
 17697                           intcon	equ	0xFF2
 17698                           intcon2	equ	0xFF1
 17699                           intcon3	equ	0xFF0
 17700                           postinc0	equ	0xFEE
 17701                           wreg	equ	0xFE8
 17702                           indf1	equ	0xFE7
 17703                           postdec1	equ	0xFE5
 17704                           plusw1	equ	0xFE3
 17705                           fsr1h	equ	0xFE2
 17706                           fsr1l	equ	0xFE1
 17707                           indf2	equ	0xFDF
 17708                           postinc2	equ	0xFDE
 17709                           postdec2	equ	0xFDD
 17710                           plusw2	equ	0xFDB
 17711                           fsr2h	equ	0xFDA
 17712                           fsr2l	equ	0xFD9
 17713                           status	equ	0xFD8
 17714                           
 17715 ;; *************** function __internalFlash_unlockAndActivate *****************
 17716 ;; Defined at:
 17717 ;;		line 106 in file "internal_flash.c"
 17718 ;; Parameters:    Size  Location     Type
 17719 ;;  UnlockKey       1    wreg     unsigned char 
 17720 ;; Auto vars:     Size  Location     Type
 17721 ;;  UnlockKey       1    0[COMRAM] unsigned char 
 17722 ;;  InterruptEna    1    1[COMRAM] unsigned char 
 17723 ;; Return value:  Size  Location     Type
 17724 ;;                  1    wreg      void 
 17725 ;; Registers used:
 17726 ;;		wreg, status,2, status,0
 17727 ;; Tracked objects:
 17728 ;;		On entry : 0/0
 17729 ;;		On exit  : 0/0
 17730 ;;		Unchanged: 0/0
 17731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17733 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17735 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17736 ;;Total ram usage:        2 bytes
 17737 ;; Hardware stack levels used:    1
 17738 ;; This function calls:
 17739 ;;		Nothing
 17740 ;; This function is called by:
 17741 ;;		_internalFlash_erasePage
 17742 ;;		_internalFlash_writePage
 17743 ;;		_EraseBlock
 17744 ;; This function uses a non-reentrant model
 17745 ;;
 17746                           
 17747                           	psect	text80
 17748  007594                     __ptext80:
 17749                           	opt stack 0
 17750  007594                     __internalFlash_unlockAndActivate:
 17751                           	opt stack 27
 17752                           
 17753                           ;incstack = 0
 17754                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
 17755  007594  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
 17756                           
 17757                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;
 17758                           ;internal_flash.c: 115: if(UnlockKey != (uint8_t)0xB5)
 17759  007596  0EB5               	movlw	181
 17760  007598  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
 17761  00759A  B4D8               	btfsc	status,2,c
 17762  00759C  D002               	goto	l2801
 17763                           
 17764                           ;internal_flash.c: 116: {
 17765                           ;internal_flash.c: 117: EECON1bits.WREN = 0;
 17766  00759E  94A6               	bcf	4006,2,c	;volatile
 17767                           
 17768                           ;internal_flash.c: 118: return;
 17769  0075A0  0012               	return	
 17770  0075A2                     l2801:
 17771                           
 17772                           ;internal_flash.c: 119: }
 17773                           ;internal_flash.c: 121: InterruptEnableSave = INTCON;
 17774  0075A2  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
 17775                           
 17776                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
 17777  0075A6  9EF2               	bcf	intcon,7,c	;volatile
 17778                           
 17779                           ;internal_flash.c: 123: EECON2 = 0x55;
 17780  0075A8  0E55               	movlw	85
 17781  0075AA  6EA7               	movwf	4007,c	;volatile
 17782                           
 17783                           ;internal_flash.c: 124: EECON2 = 0xAA;
 17784  0075AC  0EAA               	movlw	170
 17785  0075AE  6EA7               	movwf	4007,c	;volatile
 17786                           
 17787                           ;internal_flash.c: 125: EECON1bits.WR = 1;
 17788  0075B0  82A6               	bsf	4006,1,c	;volatile
 17789                           
 17790                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
 17791  0075B2  94A6               	bcf	4006,2,c	;volatile
 17792                           
 17793                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
 17794  0075B4  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
 17795  0075B6  0012               	return	
 17796                           
 17797                           ;internal_flash.c: 129: {
 17798                           ;internal_flash.c: 130: INTCONbits.GIEH = 1;
 17799  0075B8  8EF2               	bsf	intcon,7,c	;volatile
 17800  0075BA  0012               	return	
 17801  0075BC                     __end_of__internalFlash_unlockAndActivate:
 17802                           	opt stack 0
 17803                           tblptru	equ	0xFF8
 17804                           tblptrh	equ	0xFF7
 17805                           tblptrl	equ	0xFF6
 17806                           tablat	equ	0xFF5
 17807                           prodh	equ	0xFF4
 17808                           prodl	equ	0xFF3
 17809                           intcon	equ	0xFF2
 17810                           intcon2	equ	0xFF1
 17811                           intcon3	equ	0xFF0
 17812                           postinc0	equ	0xFEE
 17813                           wreg	equ	0xFE8
 17814                           indf1	equ	0xFE7
 17815                           postdec1	equ	0xFE5
 17816                           plusw1	equ	0xFE3
 17817                           fsr1h	equ	0xFE2
 17818                           fsr1l	equ	0xFE1
 17819                           indf2	equ	0xFDF
 17820                           postinc2	equ	0xFDE
 17821                           postdec2	equ	0xFDD
 17822                           plusw2	equ	0xFDB
 17823                           fsr2h	equ	0xFDA
 17824                           fsr2l	equ	0xFD9
 17825                           status	equ	0xFD8
 17826                           
 17827 ;; *************** function _internalFlash_addressWithinPage *****************
 17828 ;; Defined at:
 17829 ;;		line 322 in file "internal_flash.c"
 17830 ;; Parameters:    Size  Location     Type
 17831 ;;  address         4    8[COMRAM] unsigned long 
 17832 ;;  page            2   12[COMRAM] unsigned int 
 17833 ;; Auto vars:     Size  Location     Type
 17834 ;;  page_start_a    4   18[COMRAM] unsigned long 
 17835 ;; Return value:  Size  Location     Type
 17836 ;;                  2    8[COMRAM] unsigned int 
 17837 ;; Registers used:
 17838 ;;		wreg, status,2, status,0, cstack
 17839 ;; Tracked objects:
 17840 ;;		On entry : 0/0
 17841 ;;		On exit  : 0/0
 17842 ;;		Unchanged: 0/0
 17843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17844 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17845 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17846 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17847 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17848 ;;Total ram usage:       14 bytes
 17849 ;; Hardware stack levels used:    1
 17850 ;; Hardware stack levels required when called:    1
 17851 ;; This function calls:
 17852 ;;		_internalFlash_addressFromPage
 17853 ;; This function is called by:
 17854 ;;		__bootloader_program
 17855 ;; This function uses a non-reentrant model
 17856 ;;
 17857                           
 17858                           	psect	text81
 17859  006746                     __ptext81:
 17860                           	opt stack 0
 17861  006746                     _internalFlash_addressWithinPage:
 17862                           	opt stack 27
 17863                           
 17864                           ;internal_flash.c: 324: uint32_t page_start_address;
 17865                           ;internal_flash.c: 325: page_start_address = internalFlash_addressFromPage(page);
 17866                           
 17867                           ;incstack = 0
 17868  006746  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
 17869  00674A  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
 17870  00674E  EC32  F03A         	call	_internalFlash_addressFromPage	;wreg free
 17871  006752  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
 17872  006756  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
 17873  00675A  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
 17874  00675E  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
 17875                           
 17876                           ;internal_flash.c: 326: address = address - page_start_address;
 17877  006762  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
 17878  006766  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
 17879  00676A  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
 17880  00676E  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
 17881  006772  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
 17882  006774  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
 17883  006776  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
 17884  006778  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
 17885  00677A  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
 17886  00677C  0E00               	movlw	0
 17887  00677E  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
 17888  006780  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
 17889  006782  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
 17890  006784  5009               	movf	internalFlash_addressWithinPage@address,w,c
 17891  006786  240F               	addwf	??_internalFlash_addressWithinPage,w,c
 17892  006788  6E09               	movwf	internalFlash_addressWithinPage@address,c
 17893  00678A  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
 17894  00678C  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
 17895  00678E  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 17896  006790  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
 17897  006792  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
 17898  006794  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 17899  006796  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
 17900  006798  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
 17901  00679A  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 17902                           
 17903                           ;internal_flash.c: 327: return (uint16_t) address;
 17904  00679C  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
 17905  0067A0  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
 17906  0067A4  0012               	return	
 17907  0067A6                     __end_of_internalFlash_addressWithinPage:
 17908                           	opt stack 0
 17909                           tblptru	equ	0xFF8
 17910                           tblptrh	equ	0xFF7
 17911                           tblptrl	equ	0xFF6
 17912                           tablat	equ	0xFF5
 17913                           prodh	equ	0xFF4
 17914                           prodl	equ	0xFF3
 17915                           intcon	equ	0xFF2
 17916                           intcon2	equ	0xFF1
 17917                           intcon3	equ	0xFF0
 17918                           postinc0	equ	0xFEE
 17919                           wreg	equ	0xFE8
 17920                           indf1	equ	0xFE7
 17921                           postdec1	equ	0xFE5
 17922                           plusw1	equ	0xFE3
 17923                           fsr1h	equ	0xFE2
 17924                           fsr1l	equ	0xFE1
 17925                           indf2	equ	0xFDF
 17926                           postinc2	equ	0xFDE
 17927                           postdec2	equ	0xFDD
 17928                           plusw2	equ	0xFDB
 17929                           fsr2h	equ	0xFDA
 17930                           fsr2l	equ	0xFD9
 17931                           status	equ	0xFD8
 17932                           
 17933 ;; *************** function _internalFlash_addressFromPage *****************
 17934 ;; Defined at:
 17935 ;;		line 314 in file "internal_flash.c"
 17936 ;; Parameters:    Size  Location     Type
 17937 ;;  page            2    0[COMRAM] unsigned int 
 17938 ;; Auto vars:     Size  Location     Type
 17939 ;;  address         4    4[COMRAM] unsigned long 
 17940 ;; Return value:  Size  Location     Type
 17941 ;;                  4    0[COMRAM] unsigned long 
 17942 ;; Registers used:
 17943 ;;		wreg, status,2, status,0
 17944 ;; Tracked objects:
 17945 ;;		On entry : 0/0
 17946 ;;		On exit  : 0/0
 17947 ;;		Unchanged: 0/0
 17948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17950 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17952 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17953 ;;Total ram usage:        8 bytes
 17954 ;; Hardware stack levels used:    1
 17955 ;; This function calls:
 17956 ;;		Nothing
 17957 ;; This function is called by:
 17958 ;;		_internalFlash_readPage
 17959 ;;		_internalFlash_addressWithinPage
 17960 ;; This function uses a non-reentrant model
 17961 ;;
 17962                           
 17963                           	psect	text82
 17964  007464                     __ptext82:
 17965                           	opt stack 0
 17966  007464                     _internalFlash_addressFromPage:
 17967                           	opt stack 27
 17968                           
 17969                           ;internal_flash.c: 316: uint32_t address;
 17970                           ;internal_flash.c: 317: address = (uint32_t) page;
 17971                           
 17972                           ;incstack = 0
 17973  007464  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
 17974  007468  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
 17975  00746C  6A07               	clrf	internalFlash_addressFromPage@address+2,c
 17976  00746E  6A08               	clrf	internalFlash_addressFromPage@address+3,c
 17977                           
 17978                           ;internal_flash.c: 318: address <<= 10;
 17979  007470  0E0A               	movlw	10
 17980  007472                     u8665:
 17981  007472  90D8               	bcf	status,0,c
 17982  007474  3605               	rlcf	internalFlash_addressFromPage@address,f,c
 17983  007476  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
 17984  007478  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
 17985  00747A  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
 17986  00747C  2EE8               	decfsz	wreg,f,c
 17987  00747E  D7F9               	goto	u8665
 17988                           
 17989                           ;internal_flash.c: 319: return address;
 17990  007480  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
 17991  007484  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
 17992  007488  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
 17993  00748C  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
 17994  007490  0012               	return	
 17995  007492                     __end_of_internalFlash_addressFromPage:
 17996                           	opt stack 0
 17997                           tblptru	equ	0xFF8
 17998                           tblptrh	equ	0xFF7
 17999                           tblptrl	equ	0xFF6
 18000                           tablat	equ	0xFF5
 18001                           prodh	equ	0xFF4
 18002                           prodl	equ	0xFF3
 18003                           intcon	equ	0xFF2
 18004                           intcon2	equ	0xFF1
 18005                           intcon3	equ	0xFF0
 18006                           postinc0	equ	0xFEE
 18007                           wreg	equ	0xFE8
 18008                           indf1	equ	0xFE7
 18009                           postdec1	equ	0xFE5
 18010                           plusw1	equ	0xFE3
 18011                           fsr1h	equ	0xFE2
 18012                           fsr1l	equ	0xFE1
 18013                           indf2	equ	0xFDF
 18014                           postinc2	equ	0xFDE
 18015                           postdec2	equ	0xFDD
 18016                           plusw2	equ	0xFDB
 18017                           fsr2h	equ	0xFDA
 18018                           fsr2l	equ	0xFD9
 18019                           status	equ	0xFD8
 18020                           
 18021 ;; *************** function _fat_read_from_file *****************
 18022 ;; Defined at:
 18023 ;;		line 571 in file "fat16.c"
 18024 ;; Parameters:    Size  Location     Type
 18025 ;;  file_number     1    wreg     unsigned char 
 18026 ;;  start_byte      4   47[COMRAM] unsigned long 
 18027 ;;  length          4   51[COMRAM] unsigned long 
 18028 ;;  data            2   55[COMRAM] PTR unsigned char 
 18029 ;;		 -> file_buffer(50), 
 18030 ;; Auto vars:     Size  Location     Type
 18031 ;;  file_number     1    2[BANK0 ] unsigned char 
 18032 ;;  root           32    3[BANK0 ] struct .
 18033 ;;  position        4   41[BANK0 ] unsigned long 
 18034 ;;  read_length     2   39[BANK0 ] unsigned int 
 18035 ;;  offset          2   37[BANK0 ] unsigned int 
 18036 ;;  cluster         2   35[BANK0 ] unsigned int 
 18037 ;;  sector          2    0[BANK0 ] unsigned int 
 18038 ;; Return value:  Size  Location     Type
 18039 ;;                  1    wreg      unsigned char 
 18040 ;; Registers used:
 18041 ;;		wreg, status,2, status,0, cstack
 18042 ;; Tracked objects:
 18043 ;;		On entry : 0/0
 18044 ;;		On exit  : 0/0
 18045 ;;		Unchanged: 0/0
 18046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18047 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18048 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18049 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18050 ;;      Totals:        22      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18051 ;;Total ram usage:       67 bytes
 18052 ;; Hardware stack levels used:    1
 18053 ;; Hardware stack levels required when called:    5
 18054 ;; This function calls:
 18055 ;;		__read_fat
 18056 ;;		__read_root
 18057 ;;		__sector_from_cluster
 18058 ;;		_flash_partial_read
 18059 ;; This function is called by:
 18060 ;;		__bootloader_verify_file
 18061 ;;		__bootloader_program
 18062 ;; This function uses a non-reentrant model
 18063 ;;
 18064                           
 18065                           	psect	text83
 18066  002756                     __ptext83:
 18067                           	opt stack 0
 18068  002756                     _fat_read_from_file:
 18069                           	opt stack 23
 18070                           
 18071                           ;incstack = 0
 18072                           ;fat_read_from_file@file_number stored from wreg
 18073  002756  0100               	movlb	0	; () banked
 18074  002758  6F62               	movwf	fat_read_from_file@file_number& (0+255),b
 18075                           
 18076                           ;fat16.c: 573: rootEntry_t root;
 18077                           ;fat16.c: 574: uint32_t position;
 18078                           ;fat16.c: 575: uint16_t cluster;
 18079                           ;fat16.c: 576: uint16_t offset;
 18080                           ;fat16.c: 577: uint16_t sector;
 18081                           ;fat16.c: 578: uint16_t read_length;
 18082                           ;fat16.c: 581: _read_root(file_number, &root);
 18083  00275A  0E63               	movlw	low fat_read_from_file@root
 18084  00275C  6E28               	movwf	__read_root@data,c
 18085  00275E  0E00               	movlw	high fat_read_from_file@root
 18086  002760  6E29               	movwf	__read_root@data+1,c
 18087  002762  0100               	movlb	0	; () banked
 18088  002764  5162               	movf	fat_read_from_file@file_number& (0+255),w,b
 18089  002766  EC2D  F034         	call	__read_root
 18090                           
 18091                           ;fat16.c: 582: cluster = root.firstCluster;
 18092  00276A  C07D  F083         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 18093  00276E  C07E  F084         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 18094                           
 18095                           ;fat16.c: 585: if(start_byte+length > root.fileSize)
 18096  002772  5034               	movf	fat_read_from_file@length,w,c
 18097  002774  2430               	addwf	fat_read_from_file@start_byte,w,c
 18098  002776  6E3A               	movwf	??_fat_read_from_file& (0+255),c
 18099  002778  5035               	movf	fat_read_from_file@length+1,w,c
 18100  00277A  2031               	addwfc	fat_read_from_file@start_byte+1,w,c
 18101  00277C  6E3B               	movwf	(??_fat_read_from_file+1)& (0+255),c
 18102  00277E  5036               	movf	fat_read_from_file@length+2,w,c
 18103  002780  2032               	addwfc	fat_read_from_file@start_byte+2,w,c
 18104  002782  6E3C               	movwf	(??_fat_read_from_file+2)& (0+255),c
 18105  002784  5037               	movf	fat_read_from_file@length+3,w,c
 18106  002786  2033               	addwfc	fat_read_from_file@start_byte+3,w,c
 18107  002788  6E3D               	movwf	(??_fat_read_from_file+3)& (0+255),c
 18108  00278A  503A               	movf	??_fat_read_from_file,w,c
 18109  00278C  0100               	movlb	0	; () banked
 18110  00278E  5D7F               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 18111  002790  503B               	movf	??_fat_read_from_file+1,w,c
 18112  002792  0100               	movlb	0	; () banked
 18113  002794  5980               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 18114  002796  503C               	movf	??_fat_read_from_file+2,w,c
 18115  002798  0100               	movlb	0	; () banked
 18116  00279A  5981               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 18117  00279C  503D               	movf	??_fat_read_from_file+3,w,c
 18118  00279E  0100               	movlb	0	; () banked
 18119  0027A0  5982               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 18120  0027A2  A0D8               	btfss	status,0,c
 18121  0027A4  0012               	return	
 18122                           
 18123                           ; BSR set to: 0
 18124                           ;fat16.c: 589: }
 18125                           ;fat16.c: 592: position = 0;
 18126                           
 18127                           ; BSR set to: 0
 18128                           
 18129                           ; BSR set to: 0
 18130                           ;fat16.c: 586: {
 18131                           ;fat16.c: 588: return 0xFF;
 18132                           ;	Return value of _fat_read_from_file is never used
 18133  0027A6  0E00               	movlw	0
 18134  0027A8  0100               	movlb	0	; () banked
 18135  0027AA  6F89               	movwf	fat_read_from_file@position& (0+255),b
 18136  0027AC  0E00               	movlw	0
 18137  0027AE  6F8A               	movwf	(fat_read_from_file@position+1)& (0+255),b
 18138  0027B0  0E00               	movlw	0
 18139  0027B2  6F8B               	movwf	(fat_read_from_file@position+2)& (0+255),b
 18140  0027B4  0E00               	movlw	0
 18141  0027B6  6F8C               	movwf	(fat_read_from_file@position+3)& (0+255),b
 18142                           
 18143                           ;fat16.c: 593: while((start_byte-position) >= 512)
 18144  0027B8  D013               	goto	l12426
 18145  0027BA                     l12422:
 18146                           
 18147                           ; BSR set to: 0
 18148                           ;fat16.c: 594: {
 18149                           ;fat16.c: 595: cluster = _read_fat(cluster);
 18150  0027BA  C083  F028         	movff	fat_read_from_file@cluster,__read_fat@cluster
 18151  0027BE  C084  F029         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 18152  0027C2  EC5E  F037         	call	__read_fat	;wreg free
 18153  0027C6  C028  F083         	movff	?__read_fat,fat_read_from_file@cluster
 18154  0027CA  C029  F084         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 18155                           
 18156                           ;fat16.c: 596: position += 512;
 18157  0027CE  0E00               	movlw	0
 18158  0027D0  0100               	movlb	0	; () banked
 18159  0027D2  2789               	addwf	fat_read_from_file@position& (0+255),f,b
 18160  0027D4  0E02               	movlw	2
 18161  0027D6  238A               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 18162  0027D8  0E00               	movlw	0
 18163  0027DA  238B               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 18164  0027DC  0E00               	movlw	0
 18165  0027DE  238C               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 18166  0027E0                     l12426:
 18167                           
 18168                           ; BSR set to: 0
 18169  0027E0  C089  F03A         	movff	fat_read_from_file@position,??_fat_read_from_file
 18170  0027E4  C08A  F03B         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 18171  0027E8  C08B  F03C         	movff	fat_read_from_file@position+2,??_fat_read_from_file+2
 18172  0027EC  C08C  F03D         	movff	fat_read_from_file@position+3,??_fat_read_from_file+3
 18173  0027F0  1E3A               	comf	??_fat_read_from_file,f,c
 18174  0027F2  1E3B               	comf	??_fat_read_from_file+1,f,c
 18175  0027F4  1E3C               	comf	??_fat_read_from_file+2,f,c
 18176  0027F6  1E3D               	comf	??_fat_read_from_file+3,f,c
 18177  0027F8  2A3A               	incf	??_fat_read_from_file,f,c
 18178  0027FA  0E00               	movlw	0
 18179  0027FC  223B               	addwfc	??_fat_read_from_file+1,f,c
 18180  0027FE  223C               	addwfc	??_fat_read_from_file+2,f,c
 18181  002800  223D               	addwfc	??_fat_read_from_file+3,f,c
 18182  002802  5030               	movf	fat_read_from_file@start_byte,w,c
 18183  002804  243A               	addwf	??_fat_read_from_file,w,c
 18184  002806  6E3E               	movwf	(??_fat_read_from_file+4)& (0+255),c
 18185  002808  5031               	movf	fat_read_from_file@start_byte+1,w,c
 18186  00280A  203B               	addwfc	??_fat_read_from_file+1,w,c
 18187  00280C  6E3F               	movwf	(??_fat_read_from_file+5)& (0+255),c
 18188  00280E  5032               	movf	fat_read_from_file@start_byte+2,w,c
 18189  002810  203C               	addwfc	??_fat_read_from_file+2,w,c
 18190  002812  6E40               	movwf	(??_fat_read_from_file+6)& (0+255),c
 18191  002814  5033               	movf	fat_read_from_file@start_byte+3,w,c
 18192  002816  203D               	addwfc	??_fat_read_from_file+3,w,c
 18193  002818  6E41               	movwf	(??_fat_read_from_file+7)& (0+255),c
 18194  00281A  5041               	movf	??_fat_read_from_file+7,w,c
 18195  00281C  1040               	iorwf	??_fat_read_from_file+6,w,c
 18196  00281E  E1CD               	bnz	l12422
 18197  002820  0E02               	movlw	2
 18198  002822  5C3F               	subwf	??_fat_read_from_file+5,w,c
 18199  002824  B0D8               	btfsc	status,0,c
 18200  002826  D7C9               	goto	l12422
 18201                           
 18202                           ; BSR set to: 0
 18203                           ;fat16.c: 597: }
 18204                           ;fat16.c: 600: offset = start_byte - position;
 18205                           
 18206                           ; BSR set to: 0
 18207  002828  C089  F03A         	movff	fat_read_from_file@position,??_fat_read_from_file
 18208  00282C  C08A  F03B         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 18209  002830  1E3A               	comf	??_fat_read_from_file,f,c
 18210  002832  1E3B               	comf	??_fat_read_from_file+1,f,c
 18211  002834  4A3A               	infsnz	??_fat_read_from_file,f,c
 18212  002836  2A3B               	incf	??_fat_read_from_file+1,f,c
 18213  002838  5030               	movf	fat_read_from_file@start_byte,w,c
 18214  00283A  243A               	addwf	??_fat_read_from_file,w,c
 18215  00283C  0100               	movlb	0	; () banked
 18216  00283E  6F85               	movwf	fat_read_from_file@offset& (0+255),b
 18217  002840  5031               	movf	fat_read_from_file@start_byte+1,w,c
 18218  002842  203B               	addwfc	??_fat_read_from_file+1,w,c
 18219  002844  0100               	movlb	0	; () banked
 18220  002846  6F86               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;fat16.c: 603: position = 0;
 18224  002848  0E00               	movlw	0
 18225  00284A  0100               	movlb	0	; () banked
 18226  00284C  6F89               	movwf	fat_read_from_file@position& (0+255),b
 18227  00284E  0E00               	movlw	0
 18228  002850  6F8A               	movwf	(fat_read_from_file@position+1)& (0+255),b
 18229  002852  0E00               	movlw	0
 18230  002854  6F8B               	movwf	(fat_read_from_file@position+2)& (0+255),b
 18231  002856  0E00               	movlw	0
 18232  002858  6F8C               	movwf	(fat_read_from_file@position+3)& (0+255),b
 18233                           
 18234                           ;fat16.c: 604: while(position < length)
 18235  00285A  D09B               	goto	l12452
 18236  00285C                     l12432:
 18237                           
 18238                           ; BSR set to: 0
 18239                           ;fat16.c: 605: {
 18240                           ;fat16.c: 607: if(offset==512)
 18241  00285C  0E02               	movlw	2
 18242  00285E  0100               	movlb	0	; () banked
 18243  002860  1986               	xorwf	(fat_read_from_file@offset+1)& (0+255),w,b
 18244  002862  0100               	movlb	0	; () banked
 18245  002864  1185               	iorwf	fat_read_from_file@offset& (0+255),w,b
 18246  002866  A4D8               	btfss	status,2,c
 18247  002868  D00F               	goto	l12438
 18248                           
 18249                           ; BSR set to: 0
 18250                           ;fat16.c: 608: {
 18251                           ;fat16.c: 610: cluster = _read_fat(cluster);
 18252  00286A  C083  F028         	movff	fat_read_from_file@cluster,__read_fat@cluster
 18253  00286E  C084  F029         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 18254  002872  EC5E  F037         	call	__read_fat	;wreg free
 18255  002876  C028  F083         	movff	?__read_fat,fat_read_from_file@cluster
 18256  00287A  C029  F084         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 18257                           
 18258                           ;fat16.c: 611: offset = 0;
 18259  00287E  0E00               	movlw	0
 18260  002880  0100               	movlb	0	; () banked
 18261  002882  6F86               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 18262  002884  0E00               	movlw	0
 18263  002886  6F85               	movwf	fat_read_from_file@offset& (0+255),b
 18264  002888                     l12438:
 18265                           
 18266                           ; BSR set to: 0
 18267                           ;fat16.c: 612: }
 18268                           ;fat16.c: 615: sector = _sector_from_cluster(cluster);
 18269  002888  C083  F001         	movff	fat_read_from_file@cluster,__sector_from_cluster@fat_cluster
 18270  00288C  C084  F002         	movff	fat_read_from_file@cluster+1,__sector_from_cluster@fat_cluster+1
 18271  002890  EC9F  F03C         	call	__sector_from_cluster	;wreg free
 18272  002894  C001  F060         	movff	?__sector_from_cluster,fat_read_from_file@sector
 18273  002898  C002  F061         	movff	?__sector_from_cluster+1,fat_read_from_file@sector+1
 18274                           
 18275                           ;fat16.c: 618: read_length = 512 - offset;
 18276  00289C  C085  F03A         	movff	fat_read_from_file@offset,??_fat_read_from_file
 18277  0028A0  C086  F03B         	movff	fat_read_from_file@offset+1,??_fat_read_from_file+1
 18278  0028A4  1E3A               	comf	??_fat_read_from_file,f,c
 18279  0028A6  1E3B               	comf	??_fat_read_from_file+1,f,c
 18280  0028A8  4A3A               	infsnz	??_fat_read_from_file,f,c
 18281  0028AA  2A3B               	incf	??_fat_read_from_file+1,f,c
 18282  0028AC  0E00               	movlw	0
 18283  0028AE  243A               	addwf	??_fat_read_from_file,w,c
 18284  0028B0  0100               	movlb	0	; () banked
 18285  0028B2  6F87               	movwf	fat_read_from_file@read_length& (0+255),b
 18286  0028B4  0E02               	movlw	2
 18287  0028B6  203B               	addwfc	??_fat_read_from_file+1,w,c
 18288  0028B8  0100               	movlb	0	; () banked
 18289  0028BA  6F88               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 18290                           
 18291                           ; BSR set to: 0
 18292                           ;fat16.c: 619: if(read_length > (length-position))
 18293  0028BC  0100               	movlb	0	; () banked
 18294  0028BE  5187               	movf	fat_read_from_file@read_length& (0+255),w,b
 18295  0028C0  6E3A               	movwf	??_fat_read_from_file& (0+255),c
 18296  0028C2  0100               	movlb	0	; () banked
 18297  0028C4  5188               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 18298  0028C6  6E3B               	movwf	(??_fat_read_from_file+1)& (0+255),c
 18299  0028C8  6A3C               	clrf	(??_fat_read_from_file+2)& (0+255),c
 18300  0028CA  6A3D               	clrf	(??_fat_read_from_file+3)& (0+255),c
 18301  0028CC  C089  F03E         	movff	fat_read_from_file@position,??_fat_read_from_file+4
 18302  0028D0  C08A  F03F         	movff	fat_read_from_file@position+1,??_fat_read_from_file+5
 18303  0028D4  C08B  F040         	movff	fat_read_from_file@position+2,??_fat_read_from_file+6
 18304  0028D8  C08C  F041         	movff	fat_read_from_file@position+3,??_fat_read_from_file+7
 18305  0028DC  1E3E               	comf	??_fat_read_from_file+4,f,c
 18306  0028DE  1E3F               	comf	??_fat_read_from_file+5,f,c
 18307  0028E0  1E40               	comf	??_fat_read_from_file+6,f,c
 18308  0028E2  1E41               	comf	??_fat_read_from_file+7,f,c
 18309  0028E4  2A3E               	incf	??_fat_read_from_file+4,f,c
 18310  0028E6  0E00               	movlw	0
 18311  0028E8  223F               	addwfc	??_fat_read_from_file+5,f,c
 18312  0028EA  2240               	addwfc	??_fat_read_from_file+6,f,c
 18313  0028EC  2241               	addwfc	??_fat_read_from_file+7,f,c
 18314  0028EE  5034               	movf	fat_read_from_file@length,w,c
 18315  0028F0  243E               	addwf	??_fat_read_from_file+4,w,c
 18316  0028F2  6E42               	movwf	(??_fat_read_from_file+8)& (0+255),c
 18317  0028F4  5035               	movf	fat_read_from_file@length+1,w,c
 18318  0028F6  203F               	addwfc	??_fat_read_from_file+5,w,c
 18319  0028F8  6E43               	movwf	(??_fat_read_from_file+9)& (0+255),c
 18320  0028FA  5036               	movf	fat_read_from_file@length+2,w,c
 18321  0028FC  2040               	addwfc	??_fat_read_from_file+6,w,c
 18322  0028FE  6E44               	movwf	(??_fat_read_from_file+10)& (0+255),c
 18323  002900  5037               	movf	fat_read_from_file@length+3,w,c
 18324  002902  2041               	addwfc	??_fat_read_from_file+7,w,c
 18325  002904  6E45               	movwf	(??_fat_read_from_file+11)& (0+255),c
 18326  002906  503A               	movf	??_fat_read_from_file,w,c
 18327  002908  5C42               	subwf	??_fat_read_from_file+8,w,c
 18328  00290A  503B               	movf	??_fat_read_from_file+1,w,c
 18329  00290C  5843               	subwfb	??_fat_read_from_file+9,w,c
 18330  00290E  503C               	movf	??_fat_read_from_file+2,w,c
 18331  002910  5844               	subwfb	??_fat_read_from_file+10,w,c
 18332  002912  503D               	movf	??_fat_read_from_file+3,w,c
 18333  002914  5845               	subwfb	??_fat_read_from_file+11,w,c
 18334  002916  B0D8               	btfsc	status,0,c
 18335  002918  D010               	goto	l12446
 18336                           
 18337                           ; BSR set to: 0
 18338                           ;fat16.c: 620: {
 18339                           ;fat16.c: 622: read_length = length - position;
 18340  00291A  C089  F03A         	movff	fat_read_from_file@position,??_fat_read_from_file
 18341  00291E  C08A  F03B         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 18342  002922  1E3A               	comf	??_fat_read_from_file,f,c
 18343  002924  1E3B               	comf	??_fat_read_from_file+1,f,c
 18344  002926  4A3A               	infsnz	??_fat_read_from_file,f,c
 18345  002928  2A3B               	incf	??_fat_read_from_file+1,f,c
 18346  00292A  5034               	movf	fat_read_from_file@length,w,c
 18347  00292C  243A               	addwf	??_fat_read_from_file,w,c
 18348  00292E  0100               	movlb	0	; () banked
 18349  002930  6F87               	movwf	fat_read_from_file@read_length& (0+255),b
 18350  002932  5035               	movf	fat_read_from_file@length+1,w,c
 18351  002934  203B               	addwfc	??_fat_read_from_file+1,w,c
 18352  002936  0100               	movlb	0	; () banked
 18353  002938  6F88               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 18354  00293A                     l12446:
 18355                           
 18356                           ; BSR set to: 0
 18357                           ;fat16.c: 623: }
 18358                           ;fat16.c: 626: flash_partial_read(sector, offset, read_length, &data[position]);
 18359  00293A  C060  F014         	movff	fat_read_from_file@sector,flash_partial_read@page
 18360  00293E  C061  F015         	movff	fat_read_from_file@sector+1,flash_partial_read@page+1
 18361  002942  C085  F016         	movff	fat_read_from_file@offset,flash_partial_read@start
 18362  002946  C086  F017         	movff	fat_read_from_file@offset+1,flash_partial_read@start+1
 18363  00294A  C087  F018         	movff	fat_read_from_file@read_length,flash_partial_read@length
 18364  00294E  C088  F019         	movff	fat_read_from_file@read_length+1,flash_partial_read@length+1
 18365  002952  0100               	movlb	0	; () banked
 18366  002954  5189               	movf	fat_read_from_file@position& (0+255),w,b
 18367  002956  2438               	addwf	fat_read_from_file@data,w,c
 18368  002958  6E1A               	movwf	flash_partial_read@data,c
 18369  00295A  0100               	movlb	0	; () banked
 18370  00295C  518A               	movf	(fat_read_from_file@position+1)& (0+255),w,b
 18371  00295E  2039               	addwfc	fat_read_from_file@data+1,w,c
 18372  002960  6E1B               	movwf	flash_partial_read@data+1,c
 18373  002962  EC8A  F031         	call	_flash_partial_read	;wreg free
 18374                           
 18375                           ;fat16.c: 629: position += read_length;
 18376  002966  0100               	movlb	0	; () banked
 18377  002968  5187               	movf	fat_read_from_file@read_length& (0+255),w,b
 18378  00296A  0100               	movlb	0	; () banked
 18379  00296C  2789               	addwf	fat_read_from_file@position& (0+255),f,b
 18380  00296E  0100               	movlb	0	; () banked
 18381  002970  5188               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 18382  002972  0100               	movlb	0	; () banked
 18383  002974  238A               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 18384  002976  0E00               	movlw	0
 18385  002978  0100               	movlb	0	; () banked
 18386  00297A  238B               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 18387  00297C  0E00               	movlw	0
 18388  00297E  0100               	movlb	0	; () banked
 18389  002980  238C               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 18390                           
 18391                           ; BSR set to: 0
 18392                           ;fat16.c: 630: offset += read_length;
 18393  002982  0100               	movlb	0	; () banked
 18394  002984  5187               	movf	fat_read_from_file@read_length& (0+255),w,b
 18395  002986  0100               	movlb	0	; () banked
 18396  002988  2785               	addwf	fat_read_from_file@offset& (0+255),f,b
 18397  00298A  0100               	movlb	0	; () banked
 18398  00298C  5188               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 18399  00298E  0100               	movlb	0	; () banked
 18400  002990  2386               	addwfc	(fat_read_from_file@offset+1)& (0+255),f,b
 18401  002992                     l12452:
 18402                           
 18403                           ; BSR set to: 0
 18404  002992  5034               	movf	fat_read_from_file@length,w,c
 18405  002994  0100               	movlb	0	; () banked
 18406  002996  5D89               	subwf	fat_read_from_file@position& (0+255),w,b
 18407  002998  5035               	movf	fat_read_from_file@length+1,w,c
 18408  00299A  0100               	movlb	0	; () banked
 18409  00299C  598A               	subwfb	(fat_read_from_file@position+1)& (0+255),w,b
 18410  00299E  5036               	movf	fat_read_from_file@length+2,w,c
 18411  0029A0  0100               	movlb	0	; () banked
 18412  0029A2  598B               	subwfb	(fat_read_from_file@position+2)& (0+255),w,b
 18413  0029A4  5037               	movf	fat_read_from_file@length+3,w,c
 18414  0029A6  0100               	movlb	0	; () banked
 18415  0029A8  598C               	subwfb	(fat_read_from_file@position+3)& (0+255),w,b
 18416  0029AA  B0D8               	btfsc	status,0,c
 18417  0029AC  0012               	return	
 18418  0029AE  D756               	goto	l12432
 18419  0029B0                     __end_of_fat_read_from_file:
 18420                           	opt stack 0
 18421                           tblptru	equ	0xFF8
 18422                           tblptrh	equ	0xFF7
 18423                           tblptrl	equ	0xFF6
 18424                           tablat	equ	0xFF5
 18425                           prodh	equ	0xFF4
 18426                           prodl	equ	0xFF3
 18427                           intcon	equ	0xFF2
 18428                           intcon2	equ	0xFF1
 18429                           intcon3	equ	0xFF0
 18430                           postinc0	equ	0xFEE
 18431                           wreg	equ	0xFE8
 18432                           indf1	equ	0xFE7
 18433                           postdec1	equ	0xFE5
 18434                           plusw1	equ	0xFE3
 18435                           fsr1h	equ	0xFE2
 18436                           fsr1l	equ	0xFE1
 18437                           indf2	equ	0xFDF
 18438                           postinc2	equ	0xFDE
 18439                           postdec2	equ	0xFDD
 18440                           plusw2	equ	0xFDB
 18441                           fsr2h	equ	0xFDA
 18442                           fsr2l	equ	0xFD9
 18443                           status	equ	0xFD8
 18444                           
 18445 ;; *************** function __sector_from_cluster *****************
 18446 ;; Defined at:
 18447 ;;		line 455 in file "fat16.c"
 18448 ;; Parameters:    Size  Location     Type
 18449 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 18450 ;; Auto vars:     Size  Location     Type
 18451 ;;		None
 18452 ;; Return value:  Size  Location     Type
 18453 ;;                  2    0[COMRAM] unsigned int 
 18454 ;; Registers used:
 18455 ;;		wreg, status,2, status,0
 18456 ;; Tracked objects:
 18457 ;;		On entry : 0/0
 18458 ;;		On exit  : 0/0
 18459 ;;		Unchanged: 0/0
 18460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18461 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18465 ;;Total ram usage:        2 bytes
 18466 ;; Hardware stack levels used:    1
 18467 ;; This function calls:
 18468 ;;		Nothing
 18469 ;; This function is called by:
 18470 ;;		_fat_read_from_file
 18471 ;;		_fat_append_to_file
 18472 ;; This function uses a non-reentrant model
 18473 ;;
 18474                           
 18475                           	psect	text84
 18476  00793E                     __ptext84:
 18477                           	opt stack 0
 18478  00793E                     __sector_from_cluster:
 18479                           	opt stack 27
 18480                           
 18481                           ;fat16.c: 457: return fat_cluster + 22 - 2;
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;incstack = 0
 18485  00793E  0E14               	movlw	20
 18486  007940  2401               	addwf	__sector_from_cluster@fat_cluster,w,c
 18487  007942  6E01               	movwf	?__sector_from_cluster,c
 18488  007944  0E00               	movlw	0
 18489  007946  2002               	addwfc	__sector_from_cluster@fat_cluster+1,w,c
 18490  007948  6E02               	movwf	?__sector_from_cluster+1,c
 18491  00794A  0012               	return	
 18492  00794C                     __end_of__sector_from_cluster:
 18493                           	opt stack 0
 18494                           tblptru	equ	0xFF8
 18495                           tblptrh	equ	0xFF7
 18496                           tblptrl	equ	0xFF6
 18497                           tablat	equ	0xFF5
 18498                           prodh	equ	0xFF4
 18499                           prodl	equ	0xFF3
 18500                           intcon	equ	0xFF2
 18501                           intcon2	equ	0xFF1
 18502                           intcon3	equ	0xFF0
 18503                           postinc0	equ	0xFEE
 18504                           wreg	equ	0xFE8
 18505                           indf1	equ	0xFE7
 18506                           postdec1	equ	0xFE5
 18507                           plusw1	equ	0xFE3
 18508                           fsr1h	equ	0xFE2
 18509                           fsr1l	equ	0xFE1
 18510                           indf2	equ	0xFDF
 18511                           postinc2	equ	0xFDE
 18512                           postdec2	equ	0xFDD
 18513                           plusw2	equ	0xFDB
 18514                           fsr2h	equ	0xFDA
 18515                           fsr2l	equ	0xFD9
 18516                           status	equ	0xFD8
 18517                           
 18518 ;; *************** function __read_root *****************
 18519 ;; Defined at:
 18520 ;;		line 194 in file "fat16.c"
 18521 ;; Parameters:    Size  Location     Type
 18522 ;;  slot            1    wreg     unsigned char 
 18523 ;;  data            2   39[COMRAM] PTR struct .
 18524 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 18525 ;; Auto vars:     Size  Location     Type
 18526 ;;  slot            1   46[COMRAM] unsigned char 
 18527 ;;  offset          2   44[COMRAM] unsigned int 
 18528 ;;  root_sector     2   42[COMRAM] unsigned int 
 18529 ;; Return value:  Size  Location     Type
 18530 ;;                  1    wreg      void 
 18531 ;; Registers used:
 18532 ;;		wreg, status,2, status,0, cstack
 18533 ;; Tracked objects:
 18534 ;;		On entry : 0/0
 18535 ;;		On exit  : 0/0
 18536 ;;		Unchanged: 0/0
 18537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18539 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18540 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18541 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18542 ;;Total ram usage:        8 bytes
 18543 ;; Hardware stack levels used:    1
 18544 ;; Hardware stack levels required when called:    4
 18545 ;; This function calls:
 18546 ;;		_flash_partial_read
 18547 ;; This function is called by:
 18548 ;;		_fat_read_from_file
 18549 ;;		_fat_append_to_file
 18550 ;;		_fat_rename_file
 18551 ;; This function uses a non-reentrant model
 18552 ;;
 18553                           
 18554                           	psect	text85
 18555  00685A                     __ptext85:
 18556                           	opt stack 0
 18557  00685A                     __read_root:
 18558                           	opt stack 23
 18559                           
 18560                           ;incstack = 0
 18561                           ;__read_root@slot stored from wreg
 18562  00685A  6E2F               	movwf	__read_root@slot,c
 18563                           
 18564                           ;fat16.c: 196: uint16_t root_sector;
 18565                           ;fat16.c: 197: uint16_t offset;
 18566                           ;fat16.c: 198: root_sector = (slot >> 4) + 18;
 18567  00685C  C02F  F02A         	movff	__read_root@slot,??__read_root
 18568  006860  3A2A               	swapf	??__read_root,f,c
 18569  006862  0E0F               	movlw	15
 18570  006864  162A               	andwf	??__read_root,f,c
 18571  006866  0E12               	movlw	18
 18572  006868  242A               	addwf	??__read_root,w,c
 18573  00686A  6E2B               	movwf	__read_root@root_sector,c
 18574  00686C  6A2C               	clrf	__read_root@root_sector+1,c
 18575  00686E  0E00               	movlw	0
 18576  006870  222C               	addwfc	__read_root@root_sector+1,f,c
 18577                           
 18578                           ;fat16.c: 199: offset = (slot & 0b1111);
 18579  006872  C02F  F02A         	movff	__read_root@slot,??__read_root
 18580  006876  0E0F               	movlw	15
 18581  006878  162A               	andwf	??__read_root,f,c
 18582  00687A  502A               	movf	??__read_root,w,c
 18583  00687C  6E2D               	movwf	__read_root@offset,c
 18584  00687E  6A2E               	clrf	__read_root@offset+1,c
 18585                           
 18586                           ;fat16.c: 200: offset <<= 5;
 18587  006880  0E05               	movlw	5
 18588  006882                     u8535:
 18589  006882  90D8               	bcf	status,0,c
 18590  006884  362D               	rlcf	__read_root@offset,f,c
 18591  006886  362E               	rlcf	__read_root@offset+1,f,c
 18592  006888  2EE8               	decfsz	wreg,f,c
 18593  00688A  D7FB               	goto	u8535
 18594                           
 18595                           ;fat16.c: 201: flash_partial_read(root_sector, offset, 32, data);
 18596  00688C  C02B  F014         	movff	__read_root@root_sector,flash_partial_read@page
 18597  006890  C02C  F015         	movff	__read_root@root_sector+1,flash_partial_read@page+1
 18598  006894  C02D  F016         	movff	__read_root@offset,flash_partial_read@start
 18599  006898  C02E  F017         	movff	__read_root@offset+1,flash_partial_read@start+1
 18600  00689C  0E00               	movlw	0
 18601  00689E  6E19               	movwf	flash_partial_read@length+1,c
 18602  0068A0  0E20               	movlw	32
 18603  0068A2  6E18               	movwf	flash_partial_read@length,c
 18604  0068A4  C028  F01A         	movff	__read_root@data,flash_partial_read@data
 18605  0068A8  C029  F01B         	movff	__read_root@data+1,flash_partial_read@data+1
 18606  0068AC  EC8A  F031         	call	_flash_partial_read	;wreg free
 18607  0068B0  0012               	return		;funcret
 18608  0068B2                     __end_of__read_root:
 18609                           	opt stack 0
 18610                           tblptru	equ	0xFF8
 18611                           tblptrh	equ	0xFF7
 18612                           tblptrl	equ	0xFF6
 18613                           tablat	equ	0xFF5
 18614                           prodh	equ	0xFF4
 18615                           prodl	equ	0xFF3
 18616                           intcon	equ	0xFF2
 18617                           intcon2	equ	0xFF1
 18618                           intcon3	equ	0xFF0
 18619                           postinc0	equ	0xFEE
 18620                           wreg	equ	0xFE8
 18621                           indf1	equ	0xFE7
 18622                           postdec1	equ	0xFE5
 18623                           plusw1	equ	0xFE3
 18624                           fsr1h	equ	0xFE2
 18625                           fsr1l	equ	0xFE1
 18626                           indf2	equ	0xFDF
 18627                           postinc2	equ	0xFDE
 18628                           postdec2	equ	0xFDD
 18629                           plusw2	equ	0xFDB
 18630                           fsr2h	equ	0xFDA
 18631                           fsr2l	equ	0xFD9
 18632                           status	equ	0xFD8
 18633                           
 18634 ;; *************** function __read_fat *****************
 18635 ;; Defined at:
 18636 ;;		line 171 in file "fat16.c"
 18637 ;; Parameters:    Size  Location     Type
 18638 ;;  cluster         2   39[COMRAM] unsigned int 
 18639 ;; Auto vars:     Size  Location     Type
 18640 ;;  value           2   45[COMRAM] unsigned int 
 18641 ;;  offset          2   43[COMRAM] unsigned int 
 18642 ;;  fat_sector      2   41[COMRAM] unsigned int 
 18643 ;; Return value:  Size  Location     Type
 18644 ;;                  2   39[COMRAM] unsigned int 
 18645 ;; Registers used:
 18646 ;;		wreg, status,2, status,0, cstack
 18647 ;; Tracked objects:
 18648 ;;		On entry : 0/0
 18649 ;;		On exit  : 0/0
 18650 ;;		Unchanged: 0/0
 18651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18653 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18655 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18656 ;;Total ram usage:        8 bytes
 18657 ;; Hardware stack levels used:    1
 18658 ;; Hardware stack levels required when called:    4
 18659 ;; This function calls:
 18660 ;;		_flash_partial_read
 18661 ;; This function is called by:
 18662 ;;		_fat_read_from_file
 18663 ;;		_fat_delete_file
 18664 ;;		_fat_append_to_file
 18665 ;; This function uses a non-reentrant model
 18666 ;;
 18667                           
 18668                           	psect	text86
 18669  006EBC                     __ptext86:
 18670                           	opt stack 0
 18671  006EBC                     __read_fat:
 18672                           	opt stack 23
 18673                           
 18674                           ;fat16.c: 173: uint16_t fat_sector;
 18675                           ;fat16.c: 174: uint16_t offset;
 18676                           ;fat16.c: 175: uint16_t value;
 18677                           ;fat16.c: 176: fat_sector = cluster>>8;
 18678                           
 18679                           ;incstack = 0
 18680  006EBC  5029               	movf	__read_fat@cluster+1,w,c
 18681  006EBE  6E2A               	movwf	__read_fat@fat_sector,c
 18682  006EC0  6A2B               	clrf	__read_fat@fat_sector+1,c
 18683                           
 18684                           ;fat16.c: 177: fat_sector += 2;
 18685  006EC2  0E02               	movlw	2
 18686  006EC4  262A               	addwf	__read_fat@fat_sector,f,c
 18687  006EC6  0E00               	movlw	0
 18688  006EC8  222B               	addwfc	__read_fat@fat_sector+1,f,c
 18689                           
 18690                           ;fat16.c: 178: offset = cluster & 0xFF;
 18691  006ECA  5028               	movf	__read_fat@cluster,w,c
 18692  006ECC  6E2C               	movwf	__read_fat@offset,c
 18693  006ECE  6A2D               	clrf	__read_fat@offset+1,c
 18694                           
 18695                           ;fat16.c: 179: offset <<= 1;
 18696  006ED0  90D8               	bcf	status,0,c
 18697  006ED2  362C               	rlcf	__read_fat@offset,f,c
 18698  006ED4  362D               	rlcf	__read_fat@offset+1,f,c
 18699                           
 18700                           ;fat16.c: 180: flash_partial_read(fat_sector, offset, 2, &value);
 18701  006ED6  C02A  F014         	movff	__read_fat@fat_sector,flash_partial_read@page
 18702  006EDA  C02B  F015         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 18703  006EDE  C02C  F016         	movff	__read_fat@offset,flash_partial_read@start
 18704  006EE2  C02D  F017         	movff	__read_fat@offset+1,flash_partial_read@start+1
 18705  006EE6  0E00               	movlw	0
 18706  006EE8  6E19               	movwf	flash_partial_read@length+1,c
 18707  006EEA  0E02               	movlw	2
 18708  006EEC  6E18               	movwf	flash_partial_read@length,c
 18709  006EEE  0E2E               	movlw	low __read_fat@value
 18710  006EF0  6E1A               	movwf	flash_partial_read@data,c
 18711  006EF2  0E00               	movlw	high __read_fat@value
 18712  006EF4  6E1B               	movwf	flash_partial_read@data+1,c
 18713  006EF6  EC8A  F031         	call	_flash_partial_read	;wreg free
 18714                           
 18715                           ;fat16.c: 181: return value;
 18716  006EFA  C02E  F028         	movff	__read_fat@value,?__read_fat
 18717  006EFE  C02F  F029         	movff	__read_fat@value+1,?__read_fat+1
 18718  006F02  0012               	return	
 18719  006F04                     __end_of__read_fat:
 18720                           	opt stack 0
 18721                           tblptru	equ	0xFF8
 18722                           tblptrh	equ	0xFF7
 18723                           tblptrl	equ	0xFF6
 18724                           tablat	equ	0xFF5
 18725                           prodh	equ	0xFF4
 18726                           prodl	equ	0xFF3
 18727                           intcon	equ	0xFF2
 18728                           intcon2	equ	0xFF1
 18729                           intcon3	equ	0xFF0
 18730                           postinc0	equ	0xFEE
 18731                           wreg	equ	0xFE8
 18732                           indf1	equ	0xFE7
 18733                           postdec1	equ	0xFE5
 18734                           plusw1	equ	0xFE3
 18735                           fsr1h	equ	0xFE2
 18736                           fsr1l	equ	0xFE1
 18737                           indf2	equ	0xFDF
 18738                           postinc2	equ	0xFDE
 18739                           postdec2	equ	0xFDD
 18740                           plusw2	equ	0xFDB
 18741                           fsr2h	equ	0xFDA
 18742                           fsr2l	equ	0xFD9
 18743                           status	equ	0xFD8
 18744                           
 18745 ;; *************** function __bootloader_check_address *****************
 18746 ;; Defined at:
 18747 ;;		line 94 in file "bootloader.c"
 18748 ;; Parameters:    Size  Location     Type
 18749 ;;  address         4    0[COMRAM] unsigned long 
 18750 ;;  dataLength      1    4[COMRAM] unsigned char 
 18751 ;; Auto vars:     Size  Location     Type
 18752 ;;  cntr            1   11[COMRAM] unsigned char 
 18753 ;;  byte_status     1   10[COMRAM] enum E8339
 18754 ;;  worst_case      1    9[COMRAM] enum E8339
 18755 ;; Return value:  Size  Location     Type
 18756 ;;                  1    wreg      enum E8339
 18757 ;; Registers used:
 18758 ;;		wreg, status,2, status,0
 18759 ;; Tracked objects:
 18760 ;;		On entry : 0/0
 18761 ;;		On exit  : 0/0
 18762 ;;		Unchanged: 0/0
 18763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18764 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18765 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18766 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18767 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18768 ;;Total ram usage:       12 bytes
 18769 ;; Hardware stack levels used:    1
 18770 ;; This function calls:
 18771 ;;		Nothing
 18772 ;; This function is called by:
 18773 ;;		__bootloader_verify_file
 18774 ;;		__bootloader_program
 18775 ;; This function uses a non-reentrant model
 18776 ;;
 18777                           
 18778                           	psect	text87
 18779  004FB0                     __ptext87:
 18780                           	opt stack 0
 18781  004FB0                     __bootloader_check_address:
 18782                           	opt stack 28
 18783                           
 18784                           ;bootloader.c: 96: addressCheckResult_t byte_status;
 18785                           ;bootloader.c: 97: addressCheckResult_t worst_case;
 18786                           ;bootloader.c: 98: uint8_t cntr;
 18787                           ;bootloader.c: 100: worst_case = ADDRESS_CHECK_RESULT_OK;
 18788                           
 18789                           ;incstack = 0
 18790  004FB0  0E00               	movlw	0
 18791  004FB2  6E0A               	movwf	__bootloader_check_address@worst_case,c
 18792                           
 18793                           ;bootloader.c: 103: for(cntr=0; cntr<dataLength; ++cntr)
 18794  004FB4  0E00               	movlw	0
 18795  004FB6  6E0C               	movwf	__bootloader_check_address@cntr,c
 18796  004FB8  D062               	goto	l12718
 18797  004FBA                     l12694:
 18798                           
 18799                           ;bootloader.c: 104: {
 18800                           ;bootloader.c: 106: if(((address+cntr)>=0x09000) && ((address+cntr)<=0x1FFF7))
 18801  004FBA  500C               	movf	__bootloader_check_address@cntr,w,c
 18802  004FBC  2401               	addwf	__bootloader_check_address@address,w,c
 18803  004FBE  6E06               	movwf	??__bootloader_check_address& (0+255),c
 18804  004FC0  0E00               	movlw	0
 18805  004FC2  2002               	addwfc	__bootloader_check_address@address+1,w,c
 18806  004FC4  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 18807  004FC6  0E00               	movlw	0
 18808  004FC8  2003               	addwfc	__bootloader_check_address@address+2,w,c
 18809  004FCA  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 18810  004FCC  0E00               	movlw	0
 18811  004FCE  2004               	addwfc	__bootloader_check_address@address+3,w,c
 18812  004FD0  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 18813  004FD2  5009               	movf	??__bootloader_check_address+3,w,c
 18814  004FD4  1008               	iorwf	??__bootloader_check_address+2,w,c
 18815  004FD6  E104               	bnz	u9540
 18816  004FD8  0E90               	movlw	144
 18817  004FDA  5C07               	subwf	??__bootloader_check_address+1,w,c
 18818  004FDC  A0D8               	btfss	status,0,c
 18819  004FDE  D018               	goto	l12700
 18820  004FE0                     u9540:
 18821  004FE0  500C               	movf	__bootloader_check_address@cntr,w,c
 18822  004FE2  2401               	addwf	__bootloader_check_address@address,w,c
 18823  004FE4  6E06               	movwf	??__bootloader_check_address& (0+255),c
 18824  004FE6  0E00               	movlw	0
 18825  004FE8  2002               	addwfc	__bootloader_check_address@address+1,w,c
 18826  004FEA  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 18827  004FEC  0E00               	movlw	0
 18828  004FEE  2003               	addwfc	__bootloader_check_address@address+2,w,c
 18829  004FF0  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 18830  004FF2  0E00               	movlw	0
 18831  004FF4  2004               	addwfc	__bootloader_check_address@address+3,w,c
 18832  004FF6  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 18833  004FF8  5009               	movf	??__bootloader_check_address+3,w,c
 18834  004FFA  E10A               	bnz	l12700
 18835  004FFC  0EF8               	movlw	248
 18836  004FFE  5C06               	subwf	??__bootloader_check_address,w,c
 18837  005000  0EFF               	movlw	255
 18838  005002  5807               	subwfb	??__bootloader_check_address+1,w,c
 18839  005004  0E01               	movlw	1
 18840  005006  5808               	subwfb	??__bootloader_check_address+2,w,c
 18841  005008  B0D8               	btfsc	status,0,c
 18842  00500A  D002               	goto	l12700
 18843                           
 18844                           ;bootloader.c: 107: {
 18845                           ;bootloader.c: 108: byte_status = ADDRESS_CHECK_RESULT_OK;
 18846  00500C  0E00               	movlw	0
 18847  00500E  D029               	goto	L4
 18848  005010                     l12700:
 18849                           
 18850                           ;bootloader.c: 112: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 18851  005010  500C               	movf	__bootloader_check_address@cntr,w,c
 18852  005012  2401               	addwf	__bootloader_check_address@address,w,c
 18853  005014  6E06               	movwf	??__bootloader_check_address& (0+255),c
 18854  005016  0E00               	movlw	0
 18855  005018  2002               	addwfc	__bootloader_check_address@address+1,w,c
 18856  00501A  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 18857  00501C  0E00               	movlw	0
 18858  00501E  2003               	addwfc	__bootloader_check_address@address+2,w,c
 18859  005020  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 18860  005022  0E00               	movlw	0
 18861  005024  2004               	addwfc	__bootloader_check_address@address+3,w,c
 18862  005026  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 18863  005028  5009               	movf	??__bootloader_check_address+3,w,c
 18864  00502A  E108               	bnz	u9560
 18865  00502C  0EF8               	movlw	248
 18866  00502E  5C06               	subwf	??__bootloader_check_address,w,c
 18867  005030  0EFF               	movlw	255
 18868  005032  5807               	subwfb	??__bootloader_check_address+1,w,c
 18869  005034  0E01               	movlw	1
 18870  005036  5808               	subwfb	??__bootloader_check_address+2,w,c
 18871  005038  A0D8               	btfss	status,0,c
 18872  00503A  D015               	goto	l2667
 18873  00503C                     u9560:
 18874  00503C  500C               	movf	__bootloader_check_address@cntr,w,c
 18875  00503E  2401               	addwf	__bootloader_check_address@address,w,c
 18876  005040  6E06               	movwf	??__bootloader_check_address& (0+255),c
 18877  005042  0E00               	movlw	0
 18878  005044  2002               	addwfc	__bootloader_check_address@address+1,w,c
 18879  005046  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 18880  005048  0E00               	movlw	0
 18881  00504A  2003               	addwfc	__bootloader_check_address@address+2,w,c
 18882  00504C  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 18883  00504E  0E00               	movlw	0
 18884  005050  2004               	addwfc	__bootloader_check_address@address+3,w,c
 18885  005052  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 18886  005054  5009               	movf	??__bootloader_check_address+3,w,c
 18887  005056  E107               	bnz	l2667
 18888  005058  0E02               	movlw	2
 18889  00505A  5C08               	subwf	??__bootloader_check_address+2,w,c
 18890  00505C  B0D8               	btfsc	status,0,c
 18891  00505E  D003               	goto	l2667
 18892                           
 18893                           ;bootloader.c: 113: {
 18894                           ;bootloader.c: 114: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATION_BITS;
 18895  005060  0E01               	movlw	1
 18896  005062                     L4:
 18897  005062  6E0B               	movwf	__bootloader_check_address@byte_status,c
 18898                           
 18899                           ;bootloader.c: 115: }
 18900  005064  D001               	goto	l12706
 18901  005066                     l2667:
 18902                           
 18903                           ;bootloader.c: 116: else
 18904                           ;bootloader.c: 117: {
 18905                           ;bootloader.c: 118: byte_status = ADDRESS_CHECK_RESULT_ERROR;
 18906  005066  680B               	setf	__bootloader_check_address@byte_status,c
 18907  005068                     l12706:
 18908                           
 18909                           ;bootloader.c: 119: }
 18910                           ;bootloader.c: 122: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 18911  005068  280B               	incf	__bootloader_check_address@byte_status,w,c
 18912  00506A  A4D8               	btfss	status,2,c
 18913  00506C  D002               	goto	l12712
 18914                           
 18915                           ;bootloader.c: 123: {
 18916                           ;bootloader.c: 124: return ADDRESS_CHECK_RESULT_ERROR;
 18917  00506E  0EFF               	movlw	255
 18918  005070  0012               	return	
 18919  005072                     l12712:
 18920                           
 18921                           ;bootloader.c: 125: }
 18922                           ;bootloader.c: 128: if(byte_status > worst_case)
 18923  005072  500B               	movf	__bootloader_check_address@byte_status,w,c
 18924  005074  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 18925  005076  A0D8               	btfss	status,0,c
 18926                           
 18927                           ;bootloader.c: 129: {
 18928                           ;bootloader.c: 130: worst_case = byte_status;
 18929  005078  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 18930  00507C  2A0C               	incf	__bootloader_check_address@cntr,f,c
 18931  00507E                     l12718:
 18932  00507E  5005               	movf	__bootloader_check_address@dataLength,w,c
 18933  005080  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 18934  005082  A0D8               	btfss	status,0,c
 18935  005084  D79A               	goto	l12694
 18936                           
 18937                           ;bootloader.c: 131: }
 18938                           ;bootloader.c: 132: }
 18939                           ;bootloader.c: 134: return worst_case;
 18940  005086  500A               	movf	__bootloader_check_address@worst_case,w,c
 18941  005088  0012               	return	
 18942  00508A                     __end_of__bootloader_check_address:
 18943                           	opt stack 0
 18944                           tblptru	equ	0xFF8
 18945                           tblptrh	equ	0xFF7
 18946                           tblptrl	equ	0xFF6
 18947                           tablat	equ	0xFF5
 18948                           prodh	equ	0xFF4
 18949                           prodl	equ	0xFF3
 18950                           intcon	equ	0xFF2
 18951                           intcon2	equ	0xFF1
 18952                           intcon3	equ	0xFF0
 18953                           postinc0	equ	0xFEE
 18954                           wreg	equ	0xFE8
 18955                           indf1	equ	0xFE7
 18956                           postdec1	equ	0xFE5
 18957                           plusw1	equ	0xFE3
 18958                           fsr1h	equ	0xFE2
 18959                           fsr1l	equ	0xFE1
 18960                           indf2	equ	0xFDF
 18961                           postinc2	equ	0xFDE
 18962                           postdec2	equ	0xFDD
 18963                           plusw2	equ	0xFDB
 18964                           fsr2h	equ	0xFDA
 18965                           fsr2l	equ	0xFD9
 18966                           status	equ	0xFD8
 18967                           
 18968 ;; *************** function __bootloader_find_file *****************
 18969 ;; Defined at:
 18970 ;;		line 137 in file "bootloader.c"
 18971 ;; Parameters:    Size  Location     Type
 18972 ;;		None
 18973 ;; Auto vars:     Size  Location     Type
 18974 ;;		None
 18975 ;; Return value:  Size  Location     Type
 18976 ;;                  1    wreg      void 
 18977 ;; Registers used:
 18978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18979 ;; Tracked objects:
 18980 ;;		On entry : 0/0
 18981 ;;		On exit  : 0/0
 18982 ;;		Unchanged: 0/0
 18983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18988 ;;Total ram usage:        0 bytes
 18989 ;; Hardware stack levels used:    1
 18990 ;; Hardware stack levels required when called:    5
 18991 ;; This function calls:
 18992 ;;		_fat_find_file
 18993 ;;		_fat_get_file_size
 18994 ;; This function is called by:
 18995 ;;		_bootloader_run
 18996 ;; This function uses a non-reentrant model
 18997 ;;
 18998                           
 18999                           	psect	text88
 19000  0056A6                     __ptext88:
 19001                           	opt stack 0
 19002  0056A6                     __bootloader_find_file:
 19003                           	opt stack 24
 19004                           
 19005                           ;bootloader.c: 140: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 19006                           
 19007                           ;incstack = 0
 19008  0056A6  0EB6               	movlw	low _bootloader_filename
 19009  0056A8  6E28               	movwf	fat_find_file@name,c
 19010  0056AA  0E8F               	movlw	high _bootloader_filename
 19011  0056AC  6E29               	movwf	fat_find_file@name+1,c
 19012  0056AE  0EC7               	movlw	low _bootloader_extension
 19013  0056B0  6E2A               	movwf	fat_find_file@extension,c
 19014  0056B2  0E8F               	movlw	high _bootloader_extension
 19015  0056B4  6E2B               	movwf	fat_find_file@extension+1,c
 19016  0056B6  ECDE  F029         	call	_fat_find_file	;wreg free
 19017  0056BA  0100               	movlb	0	; () banked
 19018  0056BC  6FFF               	movwf	_file_number& (0+255),b
 19019                           
 19020                           ; BSR set to: 0
 19021                           ;bootloader.c: 143: if(file_number!=0xFF)
 19022  0056BE  0100               	movlb	0	; () banked
 19023  0056C0  29FF               	incf	_file_number& (0+255),w,b
 19024  0056C2  B4D8               	btfsc	status,2,c
 19025  0056C4  D038               	goto	l13804
 19026                           
 19027                           ; BSR set to: 0
 19028                           ;bootloader.c: 144: {
 19029                           ;bootloader.c: 146: hex_file_size = fat_get_file_size(file_number);
 19030  0056C6  0100               	movlb	0	; () banked
 19031  0056C8  51FF               	movf	_file_number& (0+255),w,b
 19032  0056CA  ECC6  F031         	call	_fat_get_file_size
 19033  0056CE  C028  F143         	movff	?_fat_get_file_size,_hex_file_size
 19034  0056D2  C029  F144         	movff	?_fat_get_file_size+1,_hex_file_size+1
 19035  0056D6  C02A  F145         	movff	?_fat_get_file_size+2,_hex_file_size+2
 19036  0056DA  C02B  F146         	movff	?_fat_get_file_size+3,_hex_file_size+3
 19037                           
 19038                           ;bootloader.c: 148: hex_file_entries = 0;
 19039  0056DE  0E00               	movlw	0
 19040  0056E0  0101               	movlb	1	; () banked
 19041  0056E2  6F71               	movwf	(_hex_file_entries+1)& (0+255),b
 19042  0056E4  0E00               	movlw	0
 19043  0056E6  6F70               	movwf	_hex_file_entries& (0+255),b
 19044                           
 19045                           ; BSR set to: 1
 19046                           ;bootloader.c: 149: hex_file_offset = 0;
 19047  0056E8  0E00               	movlw	0
 19048  0056EA  0101               	movlb	1	; () banked
 19049  0056EC  6F47               	movwf	_hex_file_offset& (0+255),b
 19050  0056EE  0E00               	movlw	0
 19051  0056F0  6F48               	movwf	(_hex_file_offset+1)& (0+255),b
 19052  0056F2  0E00               	movlw	0
 19053  0056F4  6F49               	movwf	(_hex_file_offset+2)& (0+255),b
 19054  0056F6  0E00               	movlw	0
 19055  0056F8  6F4A               	movwf	(_hex_file_offset+3)& (0+255),b
 19056                           
 19057                           ; BSR set to: 1
 19058                           ;bootloader.c: 150: file_minimum_address = 0xFFFFFFFF;
 19059  0056FA  0101               	movlb	1	; () banked
 19060  0056FC  694F               	setf	_file_minimum_address& (0+255),b
 19061  0056FE  6950               	setf	(_file_minimum_address+1)& (0+255),b
 19062  005700  6951               	setf	(_file_minimum_address+2)& (0+255),b
 19063  005702  6952               	setf	(_file_minimum_address+3)& (0+255),b
 19064                           
 19065                           ; BSR set to: 1
 19066                           ;bootloader.c: 151: file_maximum_address = 0x00000000;
 19067  005704  0E00               	movlw	0
 19068  005706  0101               	movlb	1	; () banked
 19069  005708  6F4B               	movwf	_file_maximum_address& (0+255),b
 19070  00570A  0E00               	movlw	0
 19071  00570C  6F4C               	movwf	(_file_maximum_address+1)& (0+255),b
 19072  00570E  0E00               	movlw	0
 19073  005710  6F4D               	movwf	(_file_maximum_address+2)& (0+255),b
 19074  005712  0E00               	movlw	0
 19075  005714  6F4E               	movwf	(_file_maximum_address+3)& (0+255),b
 19076                           
 19077                           ; BSR set to: 1
 19078                           ;bootloader.c: 152: extended_linear_address = 0x00000000;
 19079  005716  0E00               	movlw	0
 19080  005718  0101               	movlb	1	; () banked
 19081  00571A  6F3F               	movwf	_extended_linear_address& (0+255),b
 19082  00571C  0E00               	movlw	0
 19083  00571E  6F40               	movwf	(_extended_linear_address+1)& (0+255),b
 19084  005720  0E00               	movlw	0
 19085  005722  6F41               	movwf	(_extended_linear_address+2)& (0+255),b
 19086  005724  0E00               	movlw	0
 19087  005726  6F42               	movwf	(_extended_linear_address+3)& (0+255),b
 19088                           
 19089                           ; BSR set to: 1
 19090                           ;bootloader.c: 153: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 19091  005728  0E10               	movlw	16
 19092  00572A  0100               	movlb	0	; () banked
 19093  00572C  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
 19094                           
 19095                           ; BSR set to: 0
 19096                           ;bootloader.c: 154: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 19097  00572E  0E10               	movlw	16
 19098  005730  0100               	movlb	0	; () banked
 19099  005732  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
 19100                           
 19101                           ;bootloader.c: 155: }
 19102  005734  0012               	return	
 19103  005736                     l13804:
 19104                           
 19105                           ; BSR set to: 0
 19106                           ;bootloader.c: 157: else
 19107                           ;bootloader.c: 158: {
 19108                           ;bootloader.c: 160: hex_file_size = 0;
 19109  005736  0E00               	movlw	0
 19110  005738  0101               	movlb	1	; () banked
 19111  00573A  6F43               	movwf	_hex_file_size& (0+255),b
 19112  00573C  0E00               	movlw	0
 19113  00573E  6F44               	movwf	(_hex_file_size+1)& (0+255),b
 19114  005740  0E00               	movlw	0
 19115  005742  6F45               	movwf	(_hex_file_size+2)& (0+255),b
 19116  005744  0E00               	movlw	0
 19117  005746  6F46               	movwf	(_hex_file_size+3)& (0+255),b
 19118                           
 19119                           ;bootloader.c: 162: os.bootloader_mode = BOOTLOADER_MODE_START;
 19120  005748  0E00               	movlw	0
 19121  00574A  0100               	movlb	0	; () banked
 19122  00574C  6FE6               	movwf	(_os+4)& (0+255),b	;volatile
 19123                           
 19124                           ;bootloader.c: 163: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
 19125  00574E  0E00               	movlw	0
 19126  005750  0100               	movlb	0	; () banked
 19127  005752  6FE7               	movwf	(_os+5)& (0+255),b	;volatile
 19128  005754  0012               	return	
 19129  005756                     __end_of__bootloader_find_file:
 19130                           	opt stack 0
 19131                           tblptru	equ	0xFF8
 19132                           tblptrh	equ	0xFF7
 19133                           tblptrl	equ	0xFF6
 19134                           tablat	equ	0xFF5
 19135                           prodh	equ	0xFF4
 19136                           prodl	equ	0xFF3
 19137                           intcon	equ	0xFF2
 19138                           intcon2	equ	0xFF1
 19139                           intcon3	equ	0xFF0
 19140                           postinc0	equ	0xFEE
 19141                           wreg	equ	0xFE8
 19142                           indf1	equ	0xFE7
 19143                           postdec1	equ	0xFE5
 19144                           plusw1	equ	0xFE3
 19145                           fsr1h	equ	0xFE2
 19146                           fsr1l	equ	0xFE1
 19147                           indf2	equ	0xFDF
 19148                           postinc2	equ	0xFDE
 19149                           postdec2	equ	0xFDD
 19150                           plusw2	equ	0xFDB
 19151                           fsr2h	equ	0xFDA
 19152                           fsr2l	equ	0xFD9
 19153                           status	equ	0xFD8
 19154                           
 19155 ;; *************** function _fat_get_file_size *****************
 19156 ;; Defined at:
 19157 ;;		line 306 in file "fat16.c"
 19158 ;; Parameters:    Size  Location     Type
 19159 ;;  file_number     1    wreg     unsigned char 
 19160 ;; Auto vars:     Size  Location     Type
 19161 ;;  file_number     1   52[COMRAM] unsigned char 
 19162 ;;  file_size       4   46[COMRAM] unsigned long 
 19163 ;;  offset          2   50[COMRAM] unsigned int 
 19164 ;;  sector          2   44[COMRAM] unsigned int 
 19165 ;; Return value:  Size  Location     Type
 19166 ;;                  4   39[COMRAM] unsigned long 
 19167 ;; Registers used:
 19168 ;;		wreg, status,2, status,0, cstack
 19169 ;; Tracked objects:
 19170 ;;		On entry : 0/0
 19171 ;;		On exit  : 0/0
 19172 ;;		Unchanged: 0/0
 19173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19174 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19175 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19177 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19178 ;;Total ram usage:       14 bytes
 19179 ;; Hardware stack levels used:    1
 19180 ;; Hardware stack levels required when called:    4
 19181 ;; This function calls:
 19182 ;;		_flash_partial_read
 19183 ;; This function is called by:
 19184 ;;		__bootloader_find_file
 19185 ;;		__bootloader_verify_file
 19186 ;; This function uses a non-reentrant model
 19187 ;;
 19188                           
 19189                           	psect	text89
 19190  00638C                     __ptext89:
 19191                           	opt stack 0
 19192  00638C                     _fat_get_file_size:
 19193                           	opt stack 24
 19194                           
 19195                           ; BSR set to: 0
 19196                           ;incstack = 0
 19197                           ;fat_get_file_size@file_number stored from wreg
 19198  00638C  6E35               	movwf	fat_get_file_size@file_number,c
 19199                           
 19200                           ;fat16.c: 308: uint16_t sector;
 19201                           ;fat16.c: 309: uint16_t offset;
 19202                           ;fat16.c: 310: uint32_t file_size;
 19203                           ;fat16.c: 311: sector = file_number >> 4;
 19204  00638E  C035  F02C         	movff	fat_get_file_size@file_number,??_fat_get_file_size
 19205  006392  3A2C               	swapf	??_fat_get_file_size,f,c
 19206  006394  0E0F               	movlw	15
 19207  006396  162C               	andwf	??_fat_get_file_size,f,c
 19208  006398  502C               	movf	??_fat_get_file_size,w,c
 19209  00639A  6E2D               	movwf	fat_get_file_size@sector,c
 19210  00639C  6A2E               	clrf	fat_get_file_size@sector+1,c
 19211                           
 19212                           ;fat16.c: 312: sector += 18;
 19213  00639E  0E12               	movlw	18
 19214  0063A0  262D               	addwf	fat_get_file_size@sector,f,c
 19215  0063A2  0E00               	movlw	0
 19216  0063A4  222E               	addwfc	fat_get_file_size@sector+1,f,c
 19217                           
 19218                           ;fat16.c: 313: offset = file_number;
 19219  0063A6  C035  F033         	movff	fat_get_file_size@file_number,fat_get_file_size@offset
 19220  0063AA  6A34               	clrf	fat_get_file_size@offset+1,c
 19221                           
 19222                           ;fat16.c: 314: offset <<= 5;
 19223  0063AC  0E05               	movlw	5
 19224  0063AE                     u9155:
 19225  0063AE  90D8               	bcf	status,0,c
 19226  0063B0  3633               	rlcf	fat_get_file_size@offset,f,c
 19227  0063B2  3634               	rlcf	fat_get_file_size@offset+1,f,c
 19228  0063B4  2EE8               	decfsz	wreg,f,c
 19229  0063B6  D7FB               	goto	u9155
 19230                           
 19231                           ;fat16.c: 315: offset &= 0b111111111;
 19232  0063B8  0EFF               	movlw	255
 19233  0063BA  1633               	andwf	fat_get_file_size@offset,f,c
 19234  0063BC  0E01               	movlw	1
 19235  0063BE  1634               	andwf	fat_get_file_size@offset+1,f,c
 19236                           
 19237                           ;fat16.c: 316: offset += 28;
 19238  0063C0  0E1C               	movlw	28
 19239  0063C2  2633               	addwf	fat_get_file_size@offset,f,c
 19240  0063C4  0E00               	movlw	0
 19241  0063C6  2234               	addwfc	fat_get_file_size@offset+1,f,c
 19242                           
 19243                           ;fat16.c: 317: flash_partial_read(sector, offset, 4, &file_size);
 19244  0063C8  C02D  F014         	movff	fat_get_file_size@sector,flash_partial_read@page
 19245  0063CC  C02E  F015         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 19246  0063D0  C033  F016         	movff	fat_get_file_size@offset,flash_partial_read@start
 19247  0063D4  C034  F017         	movff	fat_get_file_size@offset+1,flash_partial_read@start+1
 19248  0063D8  0E00               	movlw	0
 19249  0063DA  6E19               	movwf	flash_partial_read@length+1,c
 19250  0063DC  0E04               	movlw	4
 19251  0063DE  6E18               	movwf	flash_partial_read@length,c
 19252  0063E0  0E2F               	movlw	low fat_get_file_size@file_size
 19253  0063E2  6E1A               	movwf	flash_partial_read@data,c
 19254  0063E4  0E00               	movlw	high fat_get_file_size@file_size
 19255  0063E6  6E1B               	movwf	flash_partial_read@data+1,c
 19256  0063E8  EC8A  F031         	call	_flash_partial_read	;wreg free
 19257                           
 19258                           ;fat16.c: 318: return file_size;
 19259  0063EC  C02F  F028         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 19260  0063F0  C030  F029         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 19261  0063F4  C031  F02A         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 19262  0063F8  C032  F02B         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 19263  0063FC  0012               	return	
 19264  0063FE                     __end_of_fat_get_file_size:
 19265                           	opt stack 0
 19266                           tblptru	equ	0xFF8
 19267                           tblptrh	equ	0xFF7
 19268                           tblptrl	equ	0xFF6
 19269                           tablat	equ	0xFF5
 19270                           prodh	equ	0xFF4
 19271                           prodl	equ	0xFF3
 19272                           intcon	equ	0xFF2
 19273                           intcon2	equ	0xFF1
 19274                           intcon3	equ	0xFF0
 19275                           postinc0	equ	0xFEE
 19276                           wreg	equ	0xFE8
 19277                           indf1	equ	0xFE7
 19278                           postdec1	equ	0xFE5
 19279                           plusw1	equ	0xFE3
 19280                           fsr1h	equ	0xFE2
 19281                           fsr1l	equ	0xFE1
 19282                           indf2	equ	0xFDF
 19283                           postinc2	equ	0xFDE
 19284                           postdec2	equ	0xFDD
 19285                           plusw2	equ	0xFDB
 19286                           fsr2h	equ	0xFDA
 19287                           fsr2l	equ	0xFD9
 19288                           status	equ	0xFD8
 19289                           
 19290 ;; *************** function _fat_find_file *****************
 19291 ;; Defined at:
 19292 ;;		line 262 in file "fat16.c"
 19293 ;; Parameters:    Size  Location     Type
 19294 ;;  name            2   39[COMRAM] PTR unsigned char 
 19295 ;;		 -> bootloader_filename(9), 
 19296 ;;  extension       2   41[COMRAM] PTR unsigned char 
 19297 ;;		 -> bootloader_extension(4), 
 19298 ;; Auto vars:     Size  Location     Type
 19299 ;;  buffer         11   43[COMRAM] unsigned char [11]
 19300 ;;  offset          2   57[COMRAM] unsigned int 
 19301 ;;  sector          2   55[COMRAM] unsigned int 
 19302 ;;  slot            1   54[COMRAM] unsigned char 
 19303 ;; Return value:  Size  Location     Type
 19304 ;;                  1    wreg      unsigned char 
 19305 ;; Registers used:
 19306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19307 ;; Tracked objects:
 19308 ;;		On entry : 0/0
 19309 ;;		On exit  : 0/0
 19310 ;;		Unchanged: 0/0
 19311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19313 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19315 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19316 ;;Total ram usage:       20 bytes
 19317 ;; Hardware stack levels used:    1
 19318 ;; Hardware stack levels required when called:    4
 19319 ;; This function calls:
 19320 ;;		_flash_partial_read
 19321 ;;		_strncmp
 19322 ;; This function is called by:
 19323 ;;		__bootloader_find_file
 19324 ;;		_fat_create_file
 19325 ;; This function uses a non-reentrant model
 19326 ;;
 19327                           
 19328                           	psect	text90
 19329  0053BC                     __ptext90:
 19330                           	opt stack 0
 19331  0053BC                     _fat_find_file:
 19332                           	opt stack 24
 19333                           
 19334                           ;fat16.c: 264: uint8_t slot;
 19335                           ;fat16.c: 265: uint16_t sector;
 19336                           ;fat16.c: 266: uint16_t offset;
 19337                           ;fat16.c: 267: uint8_t buffer[11];
 19338                           ;fat16.c: 268: slot = 0;
 19339                           
 19340                           ;incstack = 0
 19341  0053BC  0E00               	movlw	0
 19342  0053BE  6E37               	movwf	fat_find_file@slot,c
 19343                           
 19344                           ;fat16.c: 269: for(sector = 18; sector <= 21; ++sector)
 19345  0053C0  0E00               	movlw	0
 19346  0053C2  6E39               	movwf	fat_find_file@sector+1,c
 19347  0053C4  0E12               	movlw	18
 19348  0053C6  6E38               	movwf	fat_find_file@sector,c
 19349  0053C8                     l12356:
 19350  0053C8  5039               	movf	fat_find_file@sector+1,w,c
 19351  0053CA  E156               	bnz	l12398
 19352  0053CC  0E16               	movlw	22
 19353  0053CE  5C38               	subwf	fat_find_file@sector,w,c
 19354  0053D0  B0D8               	btfsc	status,0,c
 19355  0053D2  D052               	goto	l12398
 19356                           
 19357                           ;fat16.c: 270: {
 19358                           ;fat16.c: 271: for(offset = 0; offset<512; offset += 32)
 19359  0053D4  0E00               	movlw	0
 19360  0053D6  6E3B               	movwf	fat_find_file@offset+1,c
 19361  0053D8  0E00               	movlw	0
 19362  0053DA  6E3A               	movwf	fat_find_file@offset,c
 19363  0053DC                     l12362:
 19364  0053DC  0E02               	movlw	2
 19365  0053DE  5C3B               	subwf	fat_find_file@offset+1,w,c
 19366  0053E0  B0D8               	btfsc	status,0,c
 19367  0053E2  D047               	goto	l12394
 19368                           
 19369                           ;fat16.c: 272: {
 19370                           ;fat16.c: 273: flash_partial_read(sector, offset, 11, &buffer);
 19371  0053E4  C038  F014         	movff	fat_find_file@sector,flash_partial_read@page
 19372  0053E8  C039  F015         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 19373  0053EC  C03A  F016         	movff	fat_find_file@offset,flash_partial_read@start
 19374  0053F0  C03B  F017         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 19375  0053F4  0E00               	movlw	0
 19376  0053F6  6E19               	movwf	flash_partial_read@length+1,c
 19377  0053F8  0E0B               	movlw	11
 19378  0053FA  6E18               	movwf	flash_partial_read@length,c
 19379  0053FC  0E2C               	movlw	low fat_find_file@buffer
 19380  0053FE  6E1A               	movwf	flash_partial_read@data,c
 19381  005400  0E00               	movlw	high fat_find_file@buffer
 19382  005402  6E1B               	movwf	flash_partial_read@data+1,c
 19383  005404  EC8A  F031         	call	_flash_partial_read	;wreg free
 19384                           
 19385                           ;fat16.c: 274: if(buffer[0]==0x00)
 19386  005408  502C               	movf	fat_find_file@buffer,w,c
 19387  00540A  A4D8               	btfss	status,2,c
 19388  00540C  D002               	goto	l12376
 19389                           
 19390                           ;fat16.c: 275: {
 19391                           ;fat16.c: 278: return 0xFF;
 19392  00540E  0EFF               	movlw	255
 19393  005410  0012               	return	
 19394  005412                     l12376:
 19395                           
 19396                           ;fat16.c: 280: else if(buffer[0]==0xE5)
 19397  005412  0EE5               	movlw	229
 19398  005414  182C               	xorwf	fat_find_file@buffer,w,c
 19399  005416  B4D8               	btfsc	status,2,c
 19400  005418  D026               	goto	l12388
 19401                           
 19402                           ;fat16.c: 286: else
 19403                           ;fat16.c: 287: {
 19404                           ;fat16.c: 289: if(strncmp(name, &buffer[0], 8) == 0)
 19405                           
 19406                           ;fat16.c: 281: {
 19407                           ;fat16.c: 285: }
 19408  00541A  C028  F001         	movff	fat_find_file@name,strncmp@s1
 19409  00541E  C029  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 19410  005422  0E2C               	movlw	low fat_find_file@buffer
 19411  005424  6E03               	movwf	strncmp@s2,c
 19412  005426  0E00               	movlw	high fat_find_file@buffer
 19413  005428  6E04               	movwf	strncmp@s2+1,c
 19414  00542A  0E00               	movlw	0
 19415  00542C  6E06               	movwf	strncmp@len+1,c
 19416  00542E  0E08               	movlw	8
 19417  005430  6E05               	movwf	strncmp@len,c
 19418  005432  ECD3  F02F         	call	_strncmp	;wreg free
 19419  005436  5001               	movf	?_strncmp,w,c
 19420  005438  1002               	iorwf	?_strncmp+1,w,c
 19421  00543A  A4D8               	btfss	status,2,c
 19422  00543C  D014               	goto	l12388
 19423                           
 19424                           ;fat16.c: 290: {
 19425                           ;fat16.c: 292: if(strncmp(extension, &buffer[8], 3) == 0)
 19426  00543E  C02A  F001         	movff	fat_find_file@extension,strncmp@s1
 19427  005442  C02B  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 19428  005446  0E34               	movlw	low (fat_find_file@buffer+8)
 19429  005448  6E03               	movwf	strncmp@s2,c
 19430  00544A  0E00               	movlw	high (fat_find_file@buffer+8)
 19431  00544C  6E04               	movwf	strncmp@s2+1,c
 19432  00544E  0E00               	movlw	0
 19433  005450  6E06               	movwf	strncmp@len+1,c
 19434  005452  0E03               	movlw	3
 19435  005454  6E05               	movwf	strncmp@len,c
 19436  005456  ECD3  F02F         	call	_strncmp	;wreg free
 19437  00545A  5001               	movf	?_strncmp,w,c
 19438  00545C  1002               	iorwf	?_strncmp+1,w,c
 19439  00545E  A4D8               	btfss	status,2,c
 19440  005460  D002               	goto	l12388
 19441                           
 19442                           ;fat16.c: 293: {
 19443                           ;fat16.c: 296: return slot;
 19444  005462  5037               	movf	fat_find_file@slot,w,c
 19445  005464  0012               	return	
 19446  005466                     l12388:
 19447                           
 19448                           ;fat16.c: 297: }
 19449                           ;fat16.c: 298: }
 19450                           ;fat16.c: 299: }
 19451                           ;fat16.c: 300: ++slot;
 19452  005466  2A37               	incf	fat_find_file@slot,f,c
 19453  005468  0E20               	movlw	32
 19454  00546A  263A               	addwf	fat_find_file@offset,f,c
 19455  00546C  0E00               	movlw	0
 19456  00546E  223B               	addwfc	fat_find_file@offset+1,f,c
 19457  005470  D7B5               	goto	l12362
 19458  005472                     l12394:
 19459  005472  4A38               	infsnz	fat_find_file@sector,f,c
 19460  005474  2A39               	incf	fat_find_file@sector+1,f,c
 19461  005476  D7A8               	goto	l12356
 19462  005478                     l12398:
 19463                           
 19464                           ;fat16.c: 301: }
 19465                           ;fat16.c: 302: }
 19466                           ;fat16.c: 303: return 0xFF;
 19467  005478  0EFF               	movlw	255
 19468  00547A  0012               	return	
 19469  00547C                     __end_of_fat_find_file:
 19470                           	opt stack 0
 19471                           tblptru	equ	0xFF8
 19472                           tblptrh	equ	0xFF7
 19473                           tblptrl	equ	0xFF6
 19474                           tablat	equ	0xFF5
 19475                           prodh	equ	0xFF4
 19476                           prodl	equ	0xFF3
 19477                           intcon	equ	0xFF2
 19478                           intcon2	equ	0xFF1
 19479                           intcon3	equ	0xFF0
 19480                           postinc0	equ	0xFEE
 19481                           wreg	equ	0xFE8
 19482                           indf1	equ	0xFE7
 19483                           postdec1	equ	0xFE5
 19484                           plusw1	equ	0xFE3
 19485                           fsr1h	equ	0xFE2
 19486                           fsr1l	equ	0xFE1
 19487                           indf2	equ	0xFDF
 19488                           postinc2	equ	0xFDE
 19489                           postdec2	equ	0xFDD
 19490                           plusw2	equ	0xFDB
 19491                           fsr2h	equ	0xFDA
 19492                           fsr2l	equ	0xFD9
 19493                           status	equ	0xFD8
 19494                           
 19495 ;; *************** function _strncmp *****************
 19496 ;; Defined at:
 19497 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strncmp.c"
 19498 ;; Parameters:    Size  Location     Type
 19499 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 19500 ;;		 -> bootloader_extension(4), bootloader_filename(9), 
 19501 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 19502 ;;		 -> fat_find_file@buffer(11), 
 19503 ;;  len             2    4[COMRAM] unsigned int 
 19504 ;; Auto vars:     Size  Location     Type
 19505 ;;		None
 19506 ;; Return value:  Size  Location     Type
 19507 ;;                  2    0[COMRAM] int 
 19508 ;; Registers used:
 19509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19510 ;; Tracked objects:
 19511 ;;		On entry : 0/0
 19512 ;;		On exit  : 0/0
 19513 ;;		Unchanged: 0/0
 19514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19515 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19517 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19518 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19519 ;;Total ram usage:        8 bytes
 19520 ;; Hardware stack levels used:    1
 19521 ;; This function calls:
 19522 ;;		Nothing
 19523 ;; This function is called by:
 19524 ;;		_fat_find_file
 19525 ;; This function uses a non-reentrant model
 19526 ;;
 19527                           
 19528                           	psect	text91
 19529  005FA6                     __ptext91:
 19530                           	opt stack 0
 19531  005FA6                     _strncmp:
 19532                           	opt stack 27
 19533                           
 19534                           ;incstack = 0
 19535  005FA6  D034               	goto	l11368
 19536  005FA8                     l11358:
 19537  005FA8  C001  FFF6         	movff	strncmp@s1,tblptrl
 19538  005FAC  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 19539  005FB0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19540  005FB0  6AF8               	clrf	tblptru,c
 19541  005FB2                     	endif
 19542  005FB2                     	if	0	;tblptru may be non-zero
 19543  005FB2                     	endif
 19544  005FB2  0008               	tblrd		*
 19545  005FB4  50F5               	movf	tablat,w,c
 19546  005FB6  0900               	iorlw	0
 19547  005FB8  B4D8               	btfsc	status,2,c
 19548  005FBA  D00E               	goto	l11362
 19549  005FBC  C003  FFD9         	movff	strncmp@s2,fsr2l
 19550  005FC0  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 19551  005FC4  C001  FFF6         	movff	strncmp@s1,tblptrl
 19552  005FC8  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 19553  005FCC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19554  005FCC  6AF8               	clrf	tblptru,c
 19555  005FCE                     	endif
 19556  005FCE                     	if	0	;tblptru may be non-zero
 19557  005FCE                     	endif
 19558  005FCE  50DE               	movf	postinc2,w,c
 19559  005FD0  0009               	tblrd		*+
 19560  005FD2  18F5               	xorwf	tablat,w,c
 19561  005FD4  B4D8               	btfsc	status,2,c
 19562  005FD6  D018               	goto	l11366
 19563  005FD8                     l11362:
 19564  005FD8  C003  FFD9         	movff	strncmp@s2,fsr2l
 19565  005FDC  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 19566  005FE0  50DF               	movf	indf2,w,c
 19567  005FE2  6E07               	movwf	??_strncmp& (0+255),c
 19568  005FE4  6A08               	clrf	(??_strncmp+1)& (0+255),c
 19569  005FE6  1E07               	comf	??_strncmp,f,c
 19570  005FE8  1E08               	comf	??_strncmp+1,f,c
 19571  005FEA  4A07               	infsnz	??_strncmp,f,c
 19572  005FEC  2A08               	incf	??_strncmp+1,f,c
 19573  005FEE  C001  FFF6         	movff	strncmp@s1,tblptrl
 19574  005FF2  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 19575  005FF6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 19576  005FF6  6AF8               	clrf	tblptru,c
 19577  005FF8                     	endif
 19578  005FF8                     	if	0	;tblptru may be non-zero
 19579  005FF8                     	endif
 19580  005FF8  0008               	tblrd		*
 19581  005FFA  50F5               	movf	tablat,w,c
 19582  005FFC  2407               	addwf	??_strncmp,w,c
 19583  005FFE  6E01               	movwf	?_strncmp,c
 19584  006000  0E00               	movlw	0
 19585  006002  2008               	addwfc	??_strncmp+1,w,c
 19586  006004  6E02               	movwf	?_strncmp+1,c
 19587  006006  0012               	return	
 19588  006008                     l11366:
 19589  006008  4A01               	infsnz	strncmp@s1,f,c
 19590  00600A  2A02               	incf	strncmp@s1+1,f,c
 19591  00600C  4A03               	infsnz	strncmp@s2,f,c
 19592  00600E  2A04               	incf	strncmp@s2+1,f,c
 19593  006010                     l11368:
 19594  006010  0605               	decf	strncmp@len,f,c
 19595  006012  A0D8               	btfss	status,0,c
 19596  006014  0606               	decf	strncmp@len+1,f,c
 19597  006016  2805               	incf	strncmp@len,w,c
 19598  006018  E1C7               	bnz	l11358
 19599  00601A  2806               	incf	strncmp@len+1,w,c
 19600  00601C  A4D8               	btfss	status,2,c
 19601  00601E  D7C4               	goto	l11358
 19602  006020  0E00               	movlw	0
 19603  006022  6E02               	movwf	?_strncmp+1,c
 19604  006024  0E00               	movlw	0
 19605  006026  6E01               	movwf	?_strncmp,c
 19606  006028  0012               	return	
 19607  00602A                     __end_of_strncmp:
 19608                           	opt stack 0
 19609                           tblptru	equ	0xFF8
 19610                           tblptrh	equ	0xFF7
 19611                           tblptrl	equ	0xFF6
 19612                           tablat	equ	0xFF5
 19613                           prodh	equ	0xFF4
 19614                           prodl	equ	0xFF3
 19615                           intcon	equ	0xFF2
 19616                           intcon2	equ	0xFF1
 19617                           intcon3	equ	0xFF0
 19618                           postinc0	equ	0xFEE
 19619                           wreg	equ	0xFE8
 19620                           indf1	equ	0xFE7
 19621                           postdec1	equ	0xFE5
 19622                           plusw1	equ	0xFE3
 19623                           fsr1h	equ	0xFE2
 19624                           fsr1l	equ	0xFE1
 19625                           indf2	equ	0xFDF
 19626                           postinc2	equ	0xFDE
 19627                           postdec2	equ	0xFDD
 19628                           plusw2	equ	0xFDB
 19629                           fsr2h	equ	0xFDA
 19630                           fsr2l	equ	0xFD9
 19631                           status	equ	0xFD8
 19632                           
 19633 ;; *************** function _USBDeviceTasks *****************
 19634 ;; Defined at:
 19635 ;;		line 477 in file "usb_device.c"
 19636 ;; Parameters:    Size  Location     Type
 19637 ;;		None
 19638 ;; Auto vars:     Size  Location     Type
 19639 ;;  i               1   31[COMRAM] unsigned char 
 19640 ;; Return value:  Size  Location     Type
 19641 ;;                  1    wreg      void 
 19642 ;; Registers used:
 19643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19644 ;; Tracked objects:
 19645 ;;		On entry : 0/0
 19646 ;;		On exit  : 0/0
 19647 ;;		Unchanged: 0/0
 19648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19653 ;;Total ram usage:        1 bytes
 19654 ;; Hardware stack levels used:    1
 19655 ;; Hardware stack levels required when called:    8
 19656 ;; This function calls:
 19657 ;;		_USBCtrlEPAllowStatusStage
 19658 ;;		_USBCtrlEPService
 19659 ;;		_USBDeviceInit
 19660 ;;		_USBIncrement1msInternalTimers
 19661 ;;		_USBStallHandler
 19662 ;;		_USBSuspend
 19663 ;;		_USBWakeFromSuspend
 19664 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19665 ;; This function is called by:
 19666 ;;		_main
 19667 ;; This function uses a non-reentrant model
 19668 ;;
 19669                           
 19670                           	psect	text92
 19671  00315C                     __ptext92:
 19672                           	opt stack 0
 19673  00315C                     _USBDeviceTasks:
 19674                           	opt stack 22
 19675                           
 19676                           ;usb_device.c: 544: }
 19677                           ;usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 19678                           
 19679                           ; BSR set to: 0
 19680                           
 19681                           ; BSR set to: 0
 19682                           ;usb_device.c: 543: return;
 19683                           
 19684                           ; BSR set to: 0
 19685                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 19686                           
 19687                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 19688                           
 19689                           ;usb_device.c: 511: UIE = 0;
 19690                           
 19691                           ;usb_device.c: 506: {
 19692                           ;usb_device.c: 508: UCON = 0;
 19693                           
 19694                           ;usb_device.c: 479: uint8_t i;
 19695                           ;usb_device.c: 505: if (1 != 1)
 19696                           
 19697                           ;incstack = 0
 19698  00315C  0100               	movlb	0	; () banked
 19699  00315E  51FC               	movf	_USBDeviceState& (0+255),w,b
 19700  003160  A4D8               	btfss	status,2,c
 19701  003162  D015               	goto	l13988
 19702                           
 19703                           ; BSR set to: 0
 19704                           ;usb_device.c: 567: {
 19705                           ;usb_device.c: 569: UCON = 0;
 19706  003164  0E00               	movlw	0
 19707  003166  6E65               	movwf	3941,c	;volatile
 19708                           
 19709                           ;usb_device.c: 572: UIE = 0;
 19710  003168  0E00               	movlw	0
 19711  00316A  010F               	movlb	15	; () banked
 19712  00316C  6F36               	movwf	54,b	;volatile
 19713                           
 19714                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 19715  00316E  0E16               	movlw	22
 19716  003170  010F               	movlb	15	; () banked
 19717  003172  6F39               	movwf	57,b	;volatile
 19718  003174  0E9F               	movlw	159
 19719  003176  010F               	movlb	15	; () banked
 19720  003178  6F37               	movwf	55,b	;volatile
 19721  00317A  0E7B               	movlw	123
 19722  00317C  010F               	movlb	15	; () banked
 19723  00317E  6F36               	movwf	54,b	;volatile
 19724                           
 19725                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 19726  003180  D001               	goto	l151
 19727  003182                     l152:
 19728  003182  8665               	bsf	3941,3,c	;volatile
 19729  003184                     l151:
 19730  003184  A665               	btfss	3941,3,c	;volatile
 19731  003186  D7FD               	goto	l152
 19732                           
 19733                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 19734  003188  0E01               	movlw	1
 19735  00318A  0100               	movlb	0	; () banked
 19736  00318C  6FFC               	movwf	_USBDeviceState& (0+255),b
 19737  00318E                     l13988:
 19738                           
 19739                           ; BSR set to: 0
 19740                           ;usb_device.c: 587: }
 19741                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 19742  00318E  0100               	movlb	0	; () banked
 19743  003190  05FC               	decf	_USBDeviceState& (0+255),w,b
 19744  003192  B4D8               	btfsc	status,2,c
 19745                           
 19746                           ; BSR set to: 0
 19747                           ;usb_device.c: 591: {
 19748                           ;usb_device.c: 601: if(!UCONbits.SE0)
 19749  003194  BA65               	btfsc	3941,5,c	;volatile
 19750  003196  D00C               	goto	l13998
 19751                           
 19752                           ; BSR set to: 0
 19753                           ;usb_device.c: 602: {
 19754                           ;usb_device.c: 608: {UIR = 0;};
 19755  003198  0E00               	movlw	0
 19756  00319A  6E62               	movwf	3938,c	;volatile
 19757                           
 19758                           ;usb_device.c: 612: UIE=0;
 19759  00319C  0E00               	movlw	0
 19760  00319E  010F               	movlb	15	; () banked
 19761  0031A0  6F36               	movwf	54,b	;volatile
 19762                           
 19763                           ; BSR set to: 15
 19764                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 19765  0031A2  010F               	movlb	15	; () banked
 19766  0031A4  8136               	bsf	54,0,b	;volatile
 19767                           
 19768                           ; BSR set to: 15
 19769                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 19770  0031A6  010F               	movlb	15	; () banked
 19771  0031A8  8936               	bsf	54,4,b	;volatile
 19772                           
 19773                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 19774  0031AA  0E02               	movlw	2
 19775  0031AC  0100               	movlb	0	; () banked
 19776  0031AE  6FFC               	movwf	_USBDeviceState& (0+255),b
 19777  0031B0                     l13998:
 19778                           
 19779                           ; BSR set to: 0
 19780                           ;usb_device.c: 617: }
 19781                           ;usb_device.c: 618: }
 19782                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 19783  0031B0  A462               	btfss	3938,2,c	;volatile
 19784  0031B2  D006               	goto	l14006
 19785                           
 19786                           ; BSR set to: 0
 19787  0031B4  010F               	movlb	15	; () banked
 19788  0031B6  A536               	btfss	54,2,b	;volatile
 19789  0031B8  D003               	goto	l14006
 19790                           
 19791                           ; BSR set to: 15
 19792                           ;usb_device.c: 635: {
 19793                           ;usb_device.c: 636: (UIR &= 0xFB);
 19794  0031BA  9462               	bcf	3938,2,c	;volatile
 19795                           
 19796                           ; BSR set to: 15
 19797                           ;usb_device.c: 640: USBWakeFromSuspend();
 19798  0031BC  EC2E  F039         	call	_USBWakeFromSuspend	;wreg free
 19799  0031C0                     l14006:
 19800                           
 19801                           ;usb_device.c: 642: }
 19802                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
 19803  0031C0  A265               	btfss	3941,1,c	;volatile
 19804  0031C2  D002               	goto	l157
 19805                           
 19806                           ;usb_device.c: 648: {
 19807                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 19808  0031C4  98A1               	bcf	4001,4,c	;volatile
 19809                           
 19810                           ;usb_device.c: 650: return;
 19811  0031C6  0012               	return	
 19812  0031C8                     l157:
 19813                           
 19814                           ;usb_device.c: 651: }
 19815                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 19816  0031C8  A062               	btfss	3938,0,c	;volatile
 19817  0031CA  D009               	goto	l14018
 19818  0031CC  010F               	movlb	15	; () banked
 19819  0031CE  A136               	btfss	54,0,b	;volatile
 19820  0031D0  D006               	goto	l14018
 19821                           
 19822                           ; BSR set to: 15
 19823                           ;usb_device.c: 664: {
 19824                           ;usb_device.c: 665: USBDeviceInit();
 19825  0031D2  ECBF  F01B         	call	_USBDeviceInit	;wreg free
 19826                           
 19827                           ;usb_device.c: 669: ;
 19828                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 19829  0031D6  0E04               	movlw	4
 19830  0031D8  0100               	movlb	0	; () banked
 19831  0031DA  6FFC               	movwf	_USBDeviceState& (0+255),b
 19832                           
 19833                           ; BSR set to: 0
 19834                           ;usb_device.c: 681: (UIR &= 0xFE);
 19835  0031DC  9062               	bcf	3938,0,c	;volatile
 19836  0031DE                     l14018:
 19837                           
 19838                           ;usb_device.c: 682: }
 19839                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 19840  0031DE  A862               	btfss	3938,4,c	;volatile
 19841  0031E0  D004               	goto	l14024
 19842  0031E2  010F               	movlb	15	; () banked
 19843  0031E4  B936               	btfsc	54,4,b	;volatile
 19844                           
 19845                           ; BSR set to: 15
 19846                           ;usb_device.c: 688: {
 19847                           ;usb_device.c: 694: USBSuspend();
 19848  0031E6  ECB5  F039         	call	_USBSuspend	;wreg free
 19849  0031EA                     l14024:
 19850                           
 19851                           ;usb_device.c: 696: }
 19852                           ;usb_device.c: 708: if(UIRbits.SOFIF)
 19853  0031EA  AC62               	btfss	3938,6,c	;volatile
 19854  0031EC  D01F               	goto	l14042
 19855                           
 19856                           ;usb_device.c: 709: {
 19857                           ;usb_device.c: 711: if(UIEbits.SOFIE)
 19858  0031EE  010F               	movlb	15	; () banked
 19859  0031F0  AD36               	btfss	54,6,b	;volatile
 19860  0031F2  D00E               	goto	l14030
 19861                           
 19862                           ; BSR set to: 15
 19863                           ;usb_device.c: 712: {
 19864                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 19865  0031F4  0E00               	movlw	0
 19866  0031F6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19867  0031F8  0E73               	movlw	115
 19868  0031FA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19869  0031FC  0E00               	movlw	0
 19870  0031FE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19871  003200  0E00               	movlw	0
 19872  003202  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19873  003204  0E00               	movlw	0
 19874  003206  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19875  003208  0E01               	movlw	1
 19876  00320A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19877  00320C  EC4D  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19878  003210                     l14030:
 19879                           
 19880                           ;usb_device.c: 714: }
 19881                           ;usb_device.c: 715: (UIR &= 0xBF);
 19882  003210  9C62               	bcf	3938,6,c	;volatile
 19883                           
 19884                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 19885  003212  ECDE  F03A         	call	_USBIncrement1msInternalTimers	;wreg free
 19886                           
 19887                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 19888  003216  0101               	movlb	1	; () banked
 19889  003218  5193               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 19890  00321A  B4D8               	btfsc	status,2,c
 19891  00321C  D002               	goto	l14038
 19892                           
 19893                           ; BSR set to: 1
 19894                           ;usb_device.c: 736: {
 19895                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 19896  00321E  0101               	movlb	1	; () banked
 19897  003220  0793               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 19898  003222                     l14038:
 19899                           
 19900                           ; BSR set to: 1
 19901                           ;usb_device.c: 738: }
 19902                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 19903  003222  0101               	movlb	1	; () banked
 19904  003224  5193               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 19905  003226  B4D8               	btfsc	status,2,c
 19906                           
 19907                           ; BSR set to: 1
 19908                           ;usb_device.c: 745: {
 19909                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 19910  003228  EC45  F028         	call	_USBCtrlEPAllowStatusStage	;wreg free
 19911  00322C                     l14042:
 19912                           
 19913                           ;usb_device.c: 747: }
 19914                           ;usb_device.c: 749: }
 19915                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 19916  00322C  AA62               	btfss	3938,5,c	;volatile
 19917  00322E  D004               	goto	l14048
 19918  003230  010F               	movlb	15	; () banked
 19919  003232  BB36               	btfsc	54,5,b	;volatile
 19920                           
 19921                           ; BSR set to: 15
 19922                           ;usb_device.c: 752: {
 19923                           ;usb_device.c: 753: USBStallHandler();
 19924  003234  ECCA  F037         	call	_USBStallHandler	;wreg free
 19925  003238                     l14048:
 19926                           
 19927                           ;usb_device.c: 754: }
 19928                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 19929  003238  A262               	btfss	3938,1,c	;volatile
 19930  00323A  D012               	goto	l14056
 19931  00323C  010F               	movlb	15	; () banked
 19932  00323E  A336               	btfss	54,1,b	;volatile
 19933  003240  D00F               	goto	l14056
 19934                           
 19935                           ; BSR set to: 15
 19936                           ;usb_device.c: 757: {
 19937                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 19938  003242  0E7F               	movlw	127
 19939  003244  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19940  003246  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19941  003248  0E00               	movlw	0
 19942  00324A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19943  00324C  0E00               	movlw	0
 19944  00324E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19945  003250  0E00               	movlw	0
 19946  003252  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19947  003254  0E01               	movlw	1
 19948  003256  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19949  003258  EC4D  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19950                           
 19951                           ;usb_device.c: 759: {UEIR = 0;};
 19952  00325C  0E00               	movlw	0
 19953  00325E  6E63               	movwf	3939,c	;volatile
 19954  003260                     l14056:
 19955                           
 19956                           ;usb_device.c: 767: }
 19957                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 19958  003260  0E04               	movlw	4
 19959  003262  0100               	movlb	0	; () banked
 19960  003264  61FC               	cpfslt	_USBDeviceState& (0+255),b
 19961  003266  D002               	goto	l166
 19962                           
 19963                           ; BSR set to: 0
 19964                           ;usb_device.c: 775: {
 19965                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 19966  003268  98A1               	bcf	4001,4,c	;volatile
 19967                           
 19968                           ;usb_device.c: 777: return;
 19969  00326A  0012               	return	
 19970  00326C                     l166:
 19971                           
 19972                           ; BSR set to: 0
 19973                           ;usb_device.c: 778: }
 19974                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 19975  00326C  010F               	movlb	15	; () banked
 19976  00326E  A736               	btfss	54,3,b	;volatile
 19977  003270  D040               	goto	l167
 19978                           
 19979                           ; BSR set to: 15
 19980                           ;usb_device.c: 784: {
 19981                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 19982  003272  0E00               	movlw	0
 19983  003274  6E20               	movwf	USBDeviceTasks@i,c
 19984  003276                     l14062:
 19985                           
 19986                           ; BSR set to: 15
 19987  003276  0E03               	movlw	3
 19988  003278  6420               	cpfsgt	USBDeviceTasks@i,c
 19989  00327A  D001               	goto	l168
 19990  00327C  D03A               	goto	l167
 19991  00327E                     l168:
 19992                           
 19993                           ;usb_device.c: 786: {
 19994                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 19995  00327E  A662               	btfss	3938,3,c	;volatile
 19996  003280  D038               	goto	l167
 19997                           
 19998                           ;usb_device.c: 788: {
 19999                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 20000  003282  CF64 F0FD          	movff	3940,_USTATcopy	;volatile
 20001                           
 20002                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 20003  003286  0100               	movlb	0	; () banked
 20004  003288  31FD               	rrcf	_USTATcopy& (0+255),w,b
 20005  00328A  32E8               	rrcf	wreg,f,c
 20006  00328C  32E8               	rrcf	wreg,f,c
 20007  00328E  0B0F               	andlw	15
 20008  003290  0101               	movlb	1	; () banked
 20009  003292  6F95               	movwf	_endpoint_number& (0+255),b
 20010                           
 20011                           ; BSR set to: 1
 20012                           ;usb_device.c: 793: (UIR &= 0xF7);
 20013  003294  9662               	bcf	3938,3,c	;volatile
 20014                           
 20015                           ; BSR set to: 1
 20016                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 20017  003296  0100               	movlb	0	; () banked
 20018  003298  B5FD               	btfsc	_USTATcopy& (0+255),2,b
 20019  00329A  D008               	goto	l14076
 20020                           
 20021                           ; BSR set to: 0
 20022                           ;usb_device.c: 799: {
 20023                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 20024  00329C  0101               	movlb	1	; () banked
 20025  00329E  5195               	movf	_endpoint_number& (0+255),w,b
 20026  0032A0  0D01               	mullw	1
 20027  0032A2  0E66               	movlw	low _ep_data_out
 20028  0032A4  24F3               	addwf	prodl,w,c
 20029  0032A6  6ED9               	movwf	fsr2l,c
 20030  0032A8  0E01               	movlw	high _ep_data_out
 20031  0032AA  D007               	goto	L5
 20032  0032AC                     l14076:
 20033                           
 20034                           ;usb_device.c: 802: else
 20035                           ;usb_device.c: 803: {
 20036                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 20037  0032AC  0101               	movlb	1	; () banked
 20038  0032AE  5195               	movf	_endpoint_number& (0+255),w,b
 20039  0032B0  0D01               	mullw	1
 20040  0032B2  0E69               	movlw	low _ep_data_in
 20041  0032B4  24F3               	addwf	prodl,w,c
 20042  0032B6  6ED9               	movwf	fsr2l,c
 20043  0032B8  0E01               	movlw	high _ep_data_in
 20044  0032BA                     L5:
 20045  0032BA  20F4               	addwfc	prodh,w,c
 20046  0032BC  6EDA               	movwf	fsr2h,c
 20047  0032BE  0101               	movlb	1	; () banked
 20048  0032C0  70DF               	btg	indf2,0,c
 20049                           
 20050                           ; BSR set to: 1
 20051                           ;usb_device.c: 805: }
 20052                           ;usb_device.c: 810: if(endpoint_number == 0)
 20053                           
 20054                           ; BSR set to: 1
 20055  0032C2  0101               	movlb	1	; () banked
 20056  0032C4  5195               	movf	_endpoint_number& (0+255),w,b
 20057  0032C6  0101               	movlb	1	; () banked
 20058  0032C8  A4D8               	btfss	status,2,c
 20059  0032CA  D003               	goto	l14082
 20060                           
 20061                           ; BSR set to: 1
 20062                           ;usb_device.c: 811: {
 20063                           ;usb_device.c: 812: USBCtrlEPService();
 20064  0032CC  ECAB  F02B         	call	_USBCtrlEPService	;wreg free
 20065                           
 20066                           ;usb_device.c: 813: }
 20067  0032D0  D00E               	goto	l14084
 20068  0032D2                     l14082:
 20069                           
 20070                           ;usb_device.c: 814: else
 20071                           ;usb_device.c: 815: {
 20072                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 20073  0032D2  0E00               	movlw	0
 20074  0032D4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20075  0032D6  0E72               	movlw	114
 20076  0032D8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20077  0032DA  0EFD               	movlw	low _USTATcopy
 20078  0032DC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20079  0032DE  0E00               	movlw	high _USTATcopy
 20080  0032E0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20081  0032E2  0E00               	movlw	0
 20082  0032E4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20083  0032E6  0E00               	movlw	0
 20084  0032E8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20085  0032EA  EC4D  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20086  0032EE                     l14084:
 20087  0032EE  2A20               	incf	USBDeviceTasks@i,f,c
 20088  0032F0  D7C2               	goto	l14062
 20089  0032F2                     l167:
 20090                           
 20091                           ;usb_device.c: 822: }
 20092                           ;usb_device.c: 823: }
 20093                           ;usb_device.c: 824: }
 20094                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 20095  0032F2  98A1               	bcf	4001,4,c	;volatile
 20096  0032F4  0012               	return		;funcret
 20097  0032F6                     __end_of_USBDeviceTasks:
 20098                           	opt stack 0
 20099                           tblptru	equ	0xFF8
 20100                           tblptrh	equ	0xFF7
 20101                           tblptrl	equ	0xFF6
 20102                           tablat	equ	0xFF5
 20103                           prodh	equ	0xFF4
 20104                           prodl	equ	0xFF3
 20105                           intcon	equ	0xFF2
 20106                           intcon2	equ	0xFF1
 20107                           intcon3	equ	0xFF0
 20108                           postinc0	equ	0xFEE
 20109                           wreg	equ	0xFE8
 20110                           indf1	equ	0xFE7
 20111                           postdec1	equ	0xFE5
 20112                           plusw1	equ	0xFE3
 20113                           fsr1h	equ	0xFE2
 20114                           fsr1l	equ	0xFE1
 20115                           indf2	equ	0xFDF
 20116                           postinc2	equ	0xFDE
 20117                           postdec2	equ	0xFDD
 20118                           plusw2	equ	0xFDB
 20119                           fsr2h	equ	0xFDA
 20120                           fsr2l	equ	0xFD9
 20121                           status	equ	0xFD8
 20122                           
 20123 ;; *************** function _USBWakeFromSuspend *****************
 20124 ;; Defined at:
 20125 ;;		line 2305 in file "usb_device.c"
 20126 ;; Parameters:    Size  Location     Type
 20127 ;;		None
 20128 ;; Auto vars:     Size  Location     Type
 20129 ;;		None
 20130 ;; Return value:  Size  Location     Type
 20131 ;;                  1    wreg      void 
 20132 ;; Registers used:
 20133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20134 ;; Tracked objects:
 20135 ;;		On entry : 0/0
 20136 ;;		On exit  : 0/0
 20137 ;;		Unchanged: 0/0
 20138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20143 ;;Total ram usage:        0 bytes
 20144 ;; Hardware stack levels used:    1
 20145 ;; Hardware stack levels required when called:    4
 20146 ;; This function calls:
 20147 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20148 ;; This function is called by:
 20149 ;;		_USBDeviceTasks
 20150 ;; This function uses a non-reentrant model
 20151 ;;
 20152                           
 20153                           	psect	text93
 20154  00725C                     __ptext93:
 20155                           	opt stack 0
 20156  00725C                     _USBWakeFromSuspend:
 20157                           	opt stack 25
 20158                           
 20159                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 20160                           
 20161                           ;incstack = 0
 20162  00725C  0E00               	movlw	0
 20163  00725E  0101               	movlb	1	; () banked
 20164  007260  6F96               	movwf	_USBBusIsSuspended& (0+255),b
 20165                           
 20166                           ; BSR set to: 1
 20167                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 20168  007262  0E00               	movlw	0
 20169  007264  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20170  007266  0E74               	movlw	116
 20171  007268  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20172  00726A  0E00               	movlw	0
 20173  00726C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20174  00726E  0E00               	movlw	0
 20175  007270  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20176  007272  0E00               	movlw	0
 20177  007274  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20178  007276  0E00               	movlw	0
 20179  007278  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20180  00727A  EC4D  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20181                           
 20182                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 20183  00727E  9265               	bcf	3941,1,c	;volatile
 20184                           
 20185                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 20186  007280  010F               	movlb	15	; () banked
 20187  007282  9536               	bcf	54,2,b	;volatile
 20188                           
 20189                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 20190  007284  D001               	goto	l12878
 20191  007286                     l12876:
 20192                           
 20193                           ;usb_device.c: 2345: {
 20194                           ;usb_device.c: 2346: (UIR &= 0xFB);
 20195  007286  9462               	bcf	3938,2,c	;volatile
 20196  007288                     l12878:
 20197  007288  B462               	btfsc	3938,2,c	;volatile
 20198  00728A  D7FD               	goto	l12876
 20199                           
 20200                           ;usb_device.c: 2347: }
 20201                           ;usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 20202  00728C  0E00               	movlw	0
 20203  00728E  0101               	movlb	1	; () banked
 20204  007290  6F8E               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 20205                           
 20206                           ; BSR set to: 1
 20207  007292  0012               	return		;funcret
 20208  007294                     __end_of_USBWakeFromSuspend:
 20209                           	opt stack 0
 20210                           tblptru	equ	0xFF8
 20211                           tblptrh	equ	0xFF7
 20212                           tblptrl	equ	0xFF6
 20213                           tablat	equ	0xFF5
 20214                           prodh	equ	0xFF4
 20215                           prodl	equ	0xFF3
 20216                           intcon	equ	0xFF2
 20217                           intcon2	equ	0xFF1
 20218                           intcon3	equ	0xFF0
 20219                           postinc0	equ	0xFEE
 20220                           wreg	equ	0xFE8
 20221                           indf1	equ	0xFE7
 20222                           postdec1	equ	0xFE5
 20223                           plusw1	equ	0xFE3
 20224                           fsr1h	equ	0xFE2
 20225                           fsr1l	equ	0xFE1
 20226                           indf2	equ	0xFDF
 20227                           postinc2	equ	0xFDE
 20228                           postdec2	equ	0xFDD
 20229                           plusw2	equ	0xFDB
 20230                           fsr2h	equ	0xFDA
 20231                           fsr2l	equ	0xFD9
 20232                           status	equ	0xFD8
 20233                           
 20234 ;; *************** function _USBSuspend *****************
 20235 ;; Defined at:
 20236 ;;		line 2247 in file "usb_device.c"
 20237 ;; Parameters:    Size  Location     Type
 20238 ;;		None
 20239 ;; Auto vars:     Size  Location     Type
 20240 ;;		None
 20241 ;; Return value:  Size  Location     Type
 20242 ;;                  1    wreg      void 
 20243 ;; Registers used:
 20244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20245 ;; Tracked objects:
 20246 ;;		On entry : 0/0
 20247 ;;		On exit  : 0/0
 20248 ;;		Unchanged: 0/0
 20249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20254 ;;Total ram usage:        0 bytes
 20255 ;; Hardware stack levels used:    1
 20256 ;; Hardware stack levels required when called:    4
 20257 ;; This function calls:
 20258 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20259 ;; This function is called by:
 20260 ;;		_USBDeviceTasks
 20261 ;; This function uses a non-reentrant model
 20262 ;;
 20263                           
 20264                           	psect	text94
 20265  00736A                     __ptext94:
 20266                           	opt stack 0
 20267  00736A                     _USBSuspend:
 20268                           	opt stack 25
 20269                           
 20270                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 20271                           
 20272                           ; BSR set to: 1
 20273                           ;incstack = 0
 20274  00736A  010F               	movlb	15	; () banked
 20275  00736C  8536               	bsf	54,2,b	;volatile
 20276                           
 20277                           ; BSR set to: 15
 20278                           ;usb_device.c: 2273: (UIR &= 0xEF);
 20279  00736E  9862               	bcf	3938,4,c	;volatile
 20280                           
 20281                           ; BSR set to: 15
 20282                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 20283  007370  8265               	bsf	3941,1,c	;volatile
 20284                           
 20285                           ; BSR set to: 15
 20286                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 20287  007372  0E01               	movlw	1
 20288  007374  0101               	movlb	1	; () banked
 20289  007376  6F96               	movwf	_USBBusIsSuspended& (0+255),b
 20290                           
 20291                           ; BSR set to: 1
 20292                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 20293  007378  0E00               	movlw	0
 20294  00737A  0101               	movlb	1	; () banked
 20295  00737C  6F8E               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 20296                           
 20297                           ; BSR set to: 1
 20298                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 20299  00737E  0E00               	movlw	0
 20300  007380  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20301  007382  0E75               	movlw	117
 20302  007384  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20303  007386  0E00               	movlw	0
 20304  007388  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20305  00738A  0E00               	movlw	0
 20306  00738C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20307  00738E  0E00               	movlw	0
 20308  007390  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20309  007392  0E00               	movlw	0
 20310  007394  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20311  007396  EC4D  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20312  00739A  0012               	return		;funcret
 20313  00739C                     __end_of_USBSuspend:
 20314                           	opt stack 0
 20315                           tblptru	equ	0xFF8
 20316                           tblptrh	equ	0xFF7
 20317                           tblptrl	equ	0xFF6
 20318                           tablat	equ	0xFF5
 20319                           prodh	equ	0xFF4
 20320                           prodl	equ	0xFF3
 20321                           intcon	equ	0xFF2
 20322                           intcon2	equ	0xFF1
 20323                           intcon3	equ	0xFF0
 20324                           postinc0	equ	0xFEE
 20325                           wreg	equ	0xFE8
 20326                           indf1	equ	0xFE7
 20327                           postdec1	equ	0xFE5
 20328                           plusw1	equ	0xFE3
 20329                           fsr1h	equ	0xFE2
 20330                           fsr1l	equ	0xFE1
 20331                           indf2	equ	0xFDF
 20332                           postinc2	equ	0xFDE
 20333                           postdec2	equ	0xFDD
 20334                           plusw2	equ	0xFDB
 20335                           fsr2h	equ	0xFDA
 20336                           fsr2l	equ	0xFD9
 20337                           status	equ	0xFD8
 20338                           
 20339 ;; *************** function _USBStallHandler *****************
 20340 ;; Defined at:
 20341 ;;		line 2204 in file "usb_device.c"
 20342 ;; Parameters:    Size  Location     Type
 20343 ;;		None
 20344 ;; Auto vars:     Size  Location     Type
 20345 ;;		None
 20346 ;; Return value:  Size  Location     Type
 20347 ;;                  1    wreg      void 
 20348 ;; Registers used:
 20349 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20350 ;; Tracked objects:
 20351 ;;		On entry : 0/0
 20352 ;;		On exit  : 0/0
 20353 ;;		Unchanged: 0/0
 20354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20359 ;;Total ram usage:        1 bytes
 20360 ;; Hardware stack levels used:    1
 20361 ;; This function calls:
 20362 ;;		Nothing
 20363 ;; This function is called by:
 20364 ;;		_USBDeviceTasks
 20365 ;; This function uses a non-reentrant model
 20366 ;;
 20367                           
 20368                           	psect	text95
 20369  006F94                     __ptext95:
 20370                           	opt stack 0
 20371  006F94                     _USBStallHandler:
 20372                           	opt stack 29
 20373                           
 20374                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 20375                           
 20376                           ;incstack = 0
 20377  006F94  010F               	movlb	15	; () banked
 20378  006F96  A126               	btfss	38,0,b	;volatile
 20379  006F98  D01E               	goto	l295
 20380                           
 20381                           ; BSR set to: 15
 20382                           ;usb_device.c: 2217: {
 20383                           ;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 20384  006F9A  C05E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20385  006F9E  C05F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20386  006FA2  0E80               	movlw	128
 20387  006FA4  18DE               	xorwf	postinc2,w,c
 20388  006FA6  A4D8               	btfss	status,2,c
 20389  006FA8  D014               	goto	l12914
 20390                           
 20391                           ; BSR set to: 15
 20392  006FAA  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 20393  006FAE  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20394  006FB2  0E84               	movlw	132
 20395  006FB4  18DE               	xorwf	postinc2,w,c
 20396  006FB6  A4D8               	btfss	status,2,c
 20397  006FB8  D00C               	goto	l12914
 20398                           
 20399                           ; BSR set to: 15
 20400                           ;usb_device.c: 2220: {
 20401                           ;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 20402  006FBA  C05E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20403  006FBE  C05F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20404  006FC2  0E0C               	movlw	12
 20405  006FC4  6EDF               	movwf	indf2,c
 20406                           
 20407                           ; BSR set to: 15
 20408                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 20409  006FC6  C05E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20410  006FCA  C05F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20411  006FCE  0E00               	movlw	0
 20412  006FD0  8EDB               	bsf	plusw2,7,c
 20413  006FD2                     l12914:
 20414                           
 20415                           ; BSR set to: 15
 20416                           ;usb_device.c: 2224: }
 20417                           ;usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 20418  006FD2  010F               	movlb	15	; () banked
 20419  006FD4  9126               	bcf	38,0,b	;volatile
 20420  006FD6                     l295:
 20421                           
 20422                           ; BSR set to: 15
 20423                           ;usb_device.c: 2226: }
 20424                           ;usb_device.c: 2228: (UIR &= 0xDF);
 20425  006FD6  9A62               	bcf	3938,5,c	;volatile
 20426                           
 20427                           ; BSR set to: 15
 20428  006FD8  0012               	return		;funcret
 20429  006FDA                     __end_of_USBStallHandler:
 20430                           	opt stack 0
 20431                           tblptru	equ	0xFF8
 20432                           tblptrh	equ	0xFF7
 20433                           tblptrl	equ	0xFF6
 20434                           tablat	equ	0xFF5
 20435                           prodh	equ	0xFF4
 20436                           prodl	equ	0xFF3
 20437                           intcon	equ	0xFF2
 20438                           intcon2	equ	0xFF1
 20439                           intcon3	equ	0xFF0
 20440                           postinc0	equ	0xFEE
 20441                           wreg	equ	0xFE8
 20442                           indf1	equ	0xFE7
 20443                           postdec1	equ	0xFE5
 20444                           plusw1	equ	0xFE3
 20445                           fsr1h	equ	0xFE2
 20446                           fsr1l	equ	0xFE1
 20447                           indf2	equ	0xFDF
 20448                           postinc2	equ	0xFDE
 20449                           postdec2	equ	0xFDD
 20450                           plusw2	equ	0xFDB
 20451                           fsr2h	equ	0xFDA
 20452                           fsr2l	equ	0xFD9
 20453                           status	equ	0xFD8
 20454                           
 20455 ;; *************** function _USBIncrement1msInternalTimers *****************
 20456 ;; Defined at:
 20457 ;;		line 3027 in file "usb_device.c"
 20458 ;; Parameters:    Size  Location     Type
 20459 ;;		None
 20460 ;; Auto vars:     Size  Location     Type
 20461 ;;		None
 20462 ;; Return value:  Size  Location     Type
 20463 ;;                  1    wreg      void 
 20464 ;; Registers used:
 20465 ;;		wreg, status,2, status,0
 20466 ;; Tracked objects:
 20467 ;;		On entry : 0/0
 20468 ;;		On exit  : 0/0
 20469 ;;		Unchanged: 0/0
 20470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20475 ;;Total ram usage:        0 bytes
 20476 ;; Hardware stack levels used:    1
 20477 ;; This function calls:
 20478 ;;		Nothing
 20479 ;; This function is called by:
 20480 ;;		_USBDeviceTasks
 20481 ;; This function uses a non-reentrant model
 20482 ;;
 20483                           
 20484                           	psect	text96
 20485  0075BC                     __ptext96:
 20486                           	opt stack 0
 20487  0075BC                     _USBIncrement1msInternalTimers:
 20488                           	opt stack 29
 20489                           
 20490                           ;usb_device.c: 3035: USB1msTickCount++;
 20491                           
 20492                           ; BSR set to: 15
 20493                           ;incstack = 0
 20494  0075BC  0E01               	movlw	1
 20495  0075BE  0101               	movlb	1	; () banked
 20496  0075C0  275F               	addwf	_USB1msTickCount& (0+255),f,b
 20497  0075C2  0E00               	movlw	0
 20498  0075C4  2360               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 20499  0075C6  2361               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 20500  0075C8  2362               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 20501                           
 20502                           ; BSR set to: 1
 20503                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 20504  0075CA  0101               	movlb	1	; () banked
 20505  0075CC  5196               	movf	_USBBusIsSuspended& (0+255),w,b
 20506  0075CE  A4D8               	btfss	status,2,c
 20507  0075D0  0012               	return	
 20508                           
 20509                           ; BSR set to: 1
 20510                           ;usb_device.c: 3037: {
 20511                           ;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 20512  0075D2  0101               	movlb	1	; () banked
 20513  0075D4  2B8E               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 20514                           
 20515                           ; BSR set to: 1
 20516                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 20517  0075D6  0101               	movlb	1	; () banked
 20518  0075D8  518E               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 20519  0075DA  A4D8               	btfss	status,2,c
 20520  0075DC  0012               	return	
 20521                           
 20522                           ; BSR set to: 1
 20523                           ;usb_device.c: 3041: {
 20524                           ;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 20525  0075DE  0101               	movlb	1	; () banked
 20526  0075E0  698E               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 20527                           
 20528                           ; BSR set to: 1
 20529  0075E2  0012               	return	
 20530  0075E4                     __end_of_USBIncrement1msInternalTimers:
 20531                           	opt stack 0
 20532                           tblptru	equ	0xFF8
 20533                           tblptrh	equ	0xFF7
 20534                           tblptrl	equ	0xFF6
 20535                           tablat	equ	0xFF5
 20536                           prodh	equ	0xFF4
 20537                           prodl	equ	0xFF3
 20538                           intcon	equ	0xFF2
 20539                           intcon2	equ	0xFF1
 20540                           intcon3	equ	0xFF0
 20541                           postinc0	equ	0xFEE
 20542                           wreg	equ	0xFE8
 20543                           indf1	equ	0xFE7
 20544                           postdec1	equ	0xFE5
 20545                           plusw1	equ	0xFE3
 20546                           fsr1h	equ	0xFE2
 20547                           fsr1l	equ	0xFE1
 20548                           indf2	equ	0xFDF
 20549                           postinc2	equ	0xFDE
 20550                           postdec2	equ	0xFDD
 20551                           plusw2	equ	0xFDB
 20552                           fsr2h	equ	0xFDA
 20553                           fsr2l	equ	0xFD9
 20554                           status	equ	0xFD8
 20555                           
 20556 ;; *************** function _USBDeviceInit *****************
 20557 ;; Defined at:
 20558 ;;		line 277 in file "usb_device.c"
 20559 ;; Parameters:    Size  Location     Type
 20560 ;;		None
 20561 ;; Auto vars:     Size  Location     Type
 20562 ;;  i               1    8[COMRAM] unsigned char 
 20563 ;; Return value:  Size  Location     Type
 20564 ;;                  1    wreg      void 
 20565 ;; Registers used:
 20566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20567 ;; Tracked objects:
 20568 ;;		On entry : 0/0
 20569 ;;		On exit  : 0/0
 20570 ;;		Unchanged: 0/0
 20571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20575 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20576 ;;Total ram usage:        1 bytes
 20577 ;; Hardware stack levels used:    1
 20578 ;; Hardware stack levels required when called:    1
 20579 ;; This function calls:
 20580 ;;		_memset
 20581 ;; This function is called by:
 20582 ;;		_USBDeviceTasks
 20583 ;;		_main
 20584 ;; This function uses a non-reentrant model
 20585 ;;
 20586                           
 20587                           	psect	text97
 20588  00377E                     __ptext97:
 20589                           	opt stack 0
 20590  00377E                     _USBDeviceInit:
 20591                           	opt stack 28
 20592                           
 20593                           ;usb_device.c: 279: uint8_t i;
 20594                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 20595                           
 20596                           ; BSR set to: 1
 20597                           ;incstack = 0
 20598  00377E  98A0               	bcf	4000,4,c	;volatile
 20599                           
 20600                           ;usb_device.c: 285: ;
 20601                           ;usb_device.c: 288: {UEIR = 0;};
 20602  003780  0E00               	movlw	0
 20603  003782  6E63               	movwf	3939,c	;volatile
 20604                           
 20605                           ;usb_device.c: 291: {UIR = 0;};
 20606  003784  0E00               	movlw	0
 20607  003786  6E62               	movwf	3938,c	;volatile
 20608                           
 20609                           ;usb_device.c: 294: UEP0 = 0;
 20610  003788  0E00               	movlw	0
 20611  00378A  010F               	movlb	15	; () banked
 20612  00378C  6F26               	movwf	38,b	;volatile
 20613                           
 20614                           ; BSR set to: 15
 20615                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 20616  00378E  0E27               	movlw	39
 20617  003790  6E01               	movwf	memset@p1,c
 20618  003792  0E0F               	movlw	15
 20619  003794  6E02               	movwf	memset@p1+1,c
 20620  003796  0E00               	movlw	0
 20621  003798  6E04               	movwf	memset@c+1,c
 20622  00379A  0E00               	movlw	0
 20623  00379C  6E03               	movwf	memset@c,c
 20624  00379E  0E00               	movlw	0
 20625  0037A0  6E06               	movwf	memset@n+1,c
 20626  0037A2  0E02               	movlw	2
 20627  0037A4  6E05               	movwf	memset@n,c
 20628  0037A6  EC75  F03A         	call	_memset	;wreg free
 20629                           
 20630                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 20631  0037AA  0E16               	movlw	22
 20632  0037AC  010F               	movlb	15	; () banked
 20633  0037AE  6F39               	movwf	57,b	;volatile
 20634                           
 20635                           ; BSR set to: 15
 20636  0037B0  0E9F               	movlw	159
 20637  0037B2  010F               	movlb	15	; () banked
 20638  0037B4  6F37               	movwf	55,b	;volatile
 20639                           
 20640                           ; BSR set to: 15
 20641  0037B6  0E7B               	movlw	123
 20642  0037B8  010F               	movlb	15	; () banked
 20643  0037BA  6F36               	movwf	54,b	;volatile
 20644                           
 20645                           ; BSR set to: 15
 20646                           ;usb_device.c: 301: ;
 20647                           ;usb_device.c: 304: ;
 20648                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 20649  0037BC  0E00               	movlw	0
 20650  0037BE  6E09               	movwf	USBDeviceInit@i,c
 20651  0037C0                     l12810:
 20652                           
 20653                           ; BSR set to: 15
 20654  0037C0  0E0B               	movlw	11
 20655  0037C2  6409               	cpfsgt	USBDeviceInit@i,c
 20656  0037C4  D001               	goto	l12814
 20657  0037C6  D00E               	goto	l140
 20658  0037C8                     l12814:
 20659                           
 20660                           ;usb_device.c: 308: {
 20661                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 20662  0037C8  5009               	movf	USBDeviceInit@i,w,c
 20663  0037CA  0D04               	mullw	4
 20664  0037CC  0E00               	movlw	0
 20665  0037CE  24F3               	addwf	prodl,w,c
 20666  0037D0  6ED9               	movwf	fsr2l,c
 20667  0037D2  0E0D               	movlw	13
 20668  0037D4  20F4               	addwfc	prodh,w,c
 20669  0037D6  6EDA               	movwf	fsr2h,c
 20670  0037D8  6ADE               	clrf	postinc2,c
 20671  0037DA  6ADE               	clrf	postinc2,c
 20672  0037DC  6ADE               	clrf	postinc2,c
 20673  0037DE  6ADD               	clrf	postdec2,c
 20674  0037E0  2A09               	incf	USBDeviceInit@i,f,c
 20675  0037E2  D7EE               	goto	l12810
 20676  0037E4                     l140:
 20677                           
 20678                           ;usb_device.c: 310: }
 20679                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 20680  0037E4  8C65               	bsf	3941,6,c	;volatile
 20681                           
 20682                           ;usb_device.c: 316: UADDR = 0x00;
 20683  0037E6  0E00               	movlw	0
 20684  0037E8  010F               	movlb	15	; () banked
 20685  0037EA  6F38               	movwf	56,b	;volatile
 20686                           
 20687                           ; BSR set to: 15
 20688                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 20689  0037EC  9865               	bcf	3941,4,c	;volatile
 20690                           
 20691                           ; BSR set to: 15
 20692                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 20693  0037EE  9C65               	bcf	3941,6,c	;volatile
 20694  0037F0                     l12826:
 20695                           
 20696                           ;usb_device.c: 326: {
 20697                           ;usb_device.c: 327: (UIR &= 0xF7);
 20698  0037F0  9662               	bcf	3938,3,c	;volatile
 20699                           
 20700                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 20701  0037F2  0E00               	movlw	0
 20702  0037F4  0100               	movlb	0	; () banked
 20703  0037F6  6FEB               	movwf	(_inPipes+3)& (0+255),b
 20704                           
 20705                           ; BSR set to: 0
 20706                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 20707  0037F8  0E00               	movlw	0
 20708  0037FA  0101               	movlb	1	; () banked
 20709  0037FC  6F34               	movwf	(_outPipes+3)& (0+255),b
 20710                           
 20711                           ; BSR set to: 1
 20712                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 20713  0037FE  0E00               	movlw	0
 20714  003800  0101               	movlb	1	; () banked
 20715  003802  6F36               	movwf	(_outPipes+5)& (0+255),b
 20716  003804  0E00               	movlw	0
 20717  003806  6F35               	movwf	(_outPipes+4)& (0+255),b
 20718                           
 20719                           ; BSR set to: 1
 20720                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 20721  003808  B662               	btfsc	3938,3,c	;volatile
 20722  00380A  D7F2               	goto	l12826
 20723                           
 20724                           ; BSR set to: 1
 20725                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 20726                           
 20727                           ; BSR set to: 1
 20728  00380C  0E01               	movlw	1
 20729  00380E  0101               	movlb	1	; () banked
 20730  003810  6F92               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 20731                           
 20732                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 20733  003812  0E01               	movlw	1
 20734  003814  0101               	movlb	1	; () banked
 20735  003816  6F91               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 20736                           
 20737                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 20738  003818  0E00               	movlw	0
 20739  00381A  0101               	movlb	1	; () banked
 20740  00381C  6F90               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20741                           
 20742                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 20743  00381E  0E00               	movlw	0
 20744  003820  0101               	movlb	1	; () banked
 20745  003822  6F8F               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20746                           
 20747                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 20748  003824  0E00               	movlw	0
 20749  003826  0101               	movlb	1	; () banked
 20750  003828  6F96               	movwf	_USBBusIsSuspended& (0+255),b
 20751                           
 20752                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 20753  00382A  0E00               	movlw	0
 20754  00382C  6E09               	movwf	USBDeviceInit@i,c
 20755  00382E                     l12838:
 20756                           
 20757                           ; BSR set to: 1
 20758  00382E  0E02               	movlw	2
 20759  003830  6409               	cpfsgt	USBDeviceInit@i,c
 20760  003832  D001               	goto	l12842
 20761  003834  D02E               	goto	l12848
 20762  003836                     l12842:
 20763                           
 20764                           ;usb_device.c: 346: {
 20765                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 20766  003836  5009               	movf	USBDeviceInit@i,w,c
 20767  003838  0D02               	mullw	2
 20768  00383A  0EEE               	movlw	low _pBDTEntryIn
 20769  00383C  24F3               	addwf	prodl,w,c
 20770  00383E  6ED9               	movwf	fsr2l,c
 20771  003840  0E00               	movlw	high _pBDTEntryIn
 20772  003842  20F4               	addwfc	prodh,w,c
 20773  003844  6EDA               	movwf	fsr2h,c
 20774  003846  0E00               	movlw	0
 20775  003848  6EDE               	movwf	postinc2,c
 20776  00384A  0E00               	movlw	0
 20777  00384C  6EDD               	movwf	postdec2,c
 20778                           
 20779                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 20780  00384E  5009               	movf	USBDeviceInit@i,w,c
 20781  003850  0D02               	mullw	2
 20782  003852  0E39               	movlw	low _pBDTEntryOut
 20783  003854  24F3               	addwf	prodl,w,c
 20784  003856  6ED9               	movwf	fsr2l,c
 20785  003858  0E01               	movlw	high _pBDTEntryOut
 20786  00385A  20F4               	addwfc	prodh,w,c
 20787  00385C  6EDA               	movwf	fsr2h,c
 20788  00385E  0E00               	movlw	0
 20789  003860  6EDE               	movwf	postinc2,c
 20790  003862  0E00               	movlw	0
 20791  003864  6EDD               	movwf	postdec2,c
 20792                           
 20793                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 20794  003866  5009               	movf	USBDeviceInit@i,w,c
 20795  003868  0D01               	mullw	1
 20796  00386A  0E69               	movlw	low _ep_data_in
 20797  00386C  24F3               	addwf	prodl,w,c
 20798  00386E  6ED9               	movwf	fsr2l,c
 20799  003870  0E01               	movlw	high _ep_data_in
 20800  003872  20F4               	addwfc	prodh,w,c
 20801  003874  6EDA               	movwf	fsr2h,c
 20802  003876  0E00               	movlw	0
 20803  003878  6EDF               	movwf	indf2,c
 20804                           
 20805                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 20806  00387A  5009               	movf	USBDeviceInit@i,w,c
 20807  00387C  0D01               	mullw	1
 20808  00387E  0E66               	movlw	low _ep_data_out
 20809  003880  24F3               	addwf	prodl,w,c
 20810  003882  6ED9               	movwf	fsr2l,c
 20811  003884  0E01               	movlw	high _ep_data_out
 20812  003886  20F4               	addwfc	prodh,w,c
 20813  003888  6EDA               	movwf	fsr2h,c
 20814  00388A  0E00               	movlw	0
 20815  00388C  6EDF               	movwf	indf2,c
 20816  00388E  2A09               	incf	USBDeviceInit@i,f,c
 20817  003890  D7CE               	goto	l12838
 20818  003892                     l12848:
 20819                           
 20820                           ;usb_device.c: 351: }
 20821                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 20822  003892  0E08               	movlw	8
 20823  003894  0100               	movlb	0	; () banked
 20824  003896  6FEE               	movwf	_pBDTEntryIn& (0+255),b
 20825  003898  0E0D               	movlw	13
 20826  00389A  0100               	movlb	0	; () banked
 20827  00389C  6FEF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 20828                           
 20829                           ; BSR set to: 0
 20830                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 20831  00389E  0E16               	movlw	22
 20832  0038A0  010F               	movlb	15	; () banked
 20833  0038A2  6F26               	movwf	38,b	;volatile
 20834                           
 20835                           ; BSR set to: 15
 20836                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 20837  0038A4  0E0D               	movlw	13
 20838  0038A6  010D               	movlb	13	; () banked
 20839  0038A8  6F03               	movwf	3,b	;volatile
 20840  0038AA  0E30               	movlw	48
 20841  0038AC  6F02               	movwf	2,b	;volatile
 20842                           
 20843                           ; BSR set to: 13
 20844                           ;usb_device.c: 359: BDT[0].CNT = 8;
 20845  0038AE  0E08               	movlw	8
 20846  0038B0  010D               	movlb	13	; () banked
 20847  0038B2  6F01               	movwf	1,b	;volatile
 20848                           
 20849                           ; BSR set to: 13
 20850                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 20851  0038B4  0E04               	movlw	4
 20852  0038B6  010D               	movlb	13	; () banked
 20853  0038B8  6F00               	movwf	0,b	;volatile
 20854                           
 20855                           ; BSR set to: 13
 20856                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 20857  0038BA  010D               	movlb	13	; () banked
 20858  0038BC  8F00               	bsf	0,7,b	;volatile
 20859                           
 20860                           ; BSR set to: 13
 20861                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 20862  0038BE  0E00               	movlw	0
 20863  0038C0  0100               	movlb	0	; () banked
 20864  0038C2  6FFE               	movwf	_USBActiveConfiguration& (0+255),b
 20865                           
 20866                           ; BSR set to: 0
 20867                           ;usb_device.c: 366: USB1msTickCount = 0;
 20868  0038C4  0E00               	movlw	0
 20869  0038C6  0101               	movlb	1	; () banked
 20870  0038C8  6F5F               	movwf	_USB1msTickCount& (0+255),b
 20871  0038CA  0E00               	movlw	0
 20872  0038CC  6F60               	movwf	(_USB1msTickCount+1)& (0+255),b
 20873  0038CE  0E00               	movlw	0
 20874  0038D0  6F61               	movwf	(_USB1msTickCount+2)& (0+255),b
 20875  0038D2  0E00               	movlw	0
 20876  0038D4  6F62               	movwf	(_USB1msTickCount+3)& (0+255),b
 20877                           
 20878                           ; BSR set to: 1
 20879                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 20880  0038D6  0E00               	movlw	0
 20881  0038D8  0101               	movlb	1	; () banked
 20882  0038DA  6F8E               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 20883                           
 20884                           ; BSR set to: 1
 20885                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 20886  0038DC  0E00               	movlw	0
 20887  0038DE  0100               	movlb	0	; () banked
 20888  0038E0  6FFC               	movwf	_USBDeviceState& (0+255),b
 20889                           
 20890                           ; BSR set to: 0
 20891  0038E2  0012               	return		;funcret
 20892  0038E4                     __end_of_USBDeviceInit:
 20893                           	opt stack 0
 20894                           tblptru	equ	0xFF8
 20895                           tblptrh	equ	0xFF7
 20896                           tblptrl	equ	0xFF6
 20897                           tablat	equ	0xFF5
 20898                           prodh	equ	0xFF4
 20899                           prodl	equ	0xFF3
 20900                           intcon	equ	0xFF2
 20901                           intcon2	equ	0xFF1
 20902                           intcon3	equ	0xFF0
 20903                           postinc0	equ	0xFEE
 20904                           wreg	equ	0xFE8
 20905                           indf1	equ	0xFE7
 20906                           postdec1	equ	0xFE5
 20907                           plusw1	equ	0xFE3
 20908                           fsr1h	equ	0xFE2
 20909                           fsr1l	equ	0xFE1
 20910                           indf2	equ	0xFDF
 20911                           postinc2	equ	0xFDE
 20912                           postdec2	equ	0xFDD
 20913                           plusw2	equ	0xFDB
 20914                           fsr2h	equ	0xFDA
 20915                           fsr2l	equ	0xFD9
 20916                           status	equ	0xFD8
 20917                           
 20918 ;; *************** function _USBCtrlEPService *****************
 20919 ;; Defined at:
 20920 ;;		line 2374 in file "usb_device.c"
 20921 ;; Parameters:    Size  Location     Type
 20922 ;;		None
 20923 ;; Auto vars:     Size  Location     Type
 20924 ;;		None
 20925 ;; Return value:  Size  Location     Type
 20926 ;;                  1    wreg      void 
 20927 ;; Registers used:
 20928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20929 ;; Tracked objects:
 20930 ;;		On entry : 0/0
 20931 ;;		On exit  : 0/0
 20932 ;;		Unchanged: 0/0
 20933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20938 ;;Total ram usage:        2 bytes
 20939 ;; Hardware stack levels used:    1
 20940 ;; Hardware stack levels required when called:    7
 20941 ;; This function calls:
 20942 ;;		_USBCtrlTrfInHandler
 20943 ;;		_USBCtrlTrfOutHandler
 20944 ;;		_USBCtrlTrfSetupHandler
 20945 ;;		_memcpy
 20946 ;; This function is called by:
 20947 ;;		_USBDeviceTasks
 20948 ;; This function uses a non-reentrant model
 20949 ;;
 20950                           
 20951                           	psect	text98
 20952  005756                     __ptext98:
 20953                           	opt stack 0
 20954  005756                     _USBCtrlEPService:
 20955                           	opt stack 22
 20956                           
 20957                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 20958                           
 20959                           ; BSR set to: 0
 20960                           ;incstack = 0
 20961  005756  0E2D               	movlw	45
 20962  005758  0101               	movlb	1	; () banked
 20963  00575A  6F93               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 20964                           
 20965                           ; BSR set to: 1
 20966                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 20967  00575C  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 20968  005760  0EFD               	movlw	253
 20969  005762  161E               	andwf	??_USBCtrlEPService,f,c
 20970  005764  A4D8               	btfss	status,2,c
 20971  005766  D044               	goto	l12934
 20972                           
 20973                           ; BSR set to: 1
 20974                           ;usb_device.c: 2385: {
 20975                           ;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 20976  005768  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 20977  00576C  90D8               	bcf	status,0,c
 20978  00576E  321E               	rrcf	??_USBCtrlEPService,f,c
 20979  005770  0E3F               	movlw	63
 20980  005772  161E               	andwf	??_USBCtrlEPService,f,c
 20981  005774  501E               	movf	??_USBCtrlEPService,w,c
 20982  005776  0D04               	mullw	4
 20983  005778  0E00               	movlw	0
 20984  00577A  24F3               	addwf	prodl,w,c
 20985  00577C  6E5E               	movwf	_pBDTEntryEP0OutCurrent,c
 20986  00577E  0E0D               	movlw	13
 20987  005780  20F4               	addwfc	prodh,w,c
 20988  005782  6E5F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 20989                           
 20990                           ; BSR set to: 1
 20991                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 20992  005784  C05E  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 20993  005788  C05F  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 20994                           
 20995                           ; BSR set to: 1
 20996                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 20997  00578C  0E04               	movlw	4
 20998  00578E  185C               	xorwf	_pBDTEntryEP0OutNext,w,c
 20999  005790  6E5C               	movwf	_pBDTEntryEP0OutNext,c
 21000  005792  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 21001  005794  6E5D               	movwf	_pBDTEntryEP0OutNext+1,c
 21002                           
 21003                           ; BSR set to: 1
 21004                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 21005  005796  C05E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21006  00579A  C05F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21007  00579E  30DF               	rrcf	indf2,w,c
 21008  0057A0  32E8               	rrcf	wreg,f,c
 21009  0057A2  0B0F               	andlw	15
 21010  0057A4  0A0D               	xorlw	13
 21011  0057A6  A4D8               	btfss	status,2,c
 21012  0057A8  D020               	goto	l12932
 21013                           
 21014                           ; BSR set to: 1
 21015                           ;usb_device.c: 2402: {
 21016                           ;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
 21017  0057AA  0E30               	movlw	48
 21018  0057AC  6E01               	movwf	memcpy@d1,c
 21019  0057AE  0E0D               	movlw	13
 21020  0057B0  6E02               	movwf	memcpy@d1+1,c
 21021  0057B2  EE20 F002          	lfsr	2,2
 21022  0057B6  505E               	movf	_pBDTEntryEP0OutCurrent,w,c
 21023  0057B8  26D9               	addwf	fsr2l,f,c
 21024  0057BA  505F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 21025  0057BC  22DA               	addwfc	fsr2h,f,c
 21026  0057BE  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 21027  0057C2  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 21028  0057C6  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 21029  0057CA  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 21030  0057CE  5003               	movf	memcpy@s1,w,c
 21031  0057D0  1004               	iorwf	memcpy@s1+1,w,c
 21032  0057D2  A4D8               	btfss	status,2,c
 21033  0057D4  0E20               	movlw	32
 21034  0057D6  6E05               	movwf	memcpy@s1+2,c
 21035  0057D8  0E00               	movlw	0
 21036  0057DA  6E07               	movwf	memcpy@n+1,c
 21037  0057DC  0E08               	movlw	8
 21038  0057DE  6E06               	movwf	memcpy@n,c
 21039  0057E0  EC3E  F033         	call	_memcpy	;wreg free
 21040                           
 21041                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 21042  0057E4  ECFA  F02A         	call	_USBCtrlTrfSetupHandler	;wreg free
 21043                           
 21044                           ;usb_device.c: 2411: }
 21045  0057E8  0012               	return	
 21046  0057EA                     l12932:
 21047                           
 21048                           ;usb_device.c: 2412: else
 21049                           ;usb_device.c: 2413: {
 21050                           ;usb_device.c: 2415: USBCtrlTrfOutHandler();
 21051  0057EA  EC71  F033         	call	_USBCtrlTrfOutHandler	;wreg free
 21052                           
 21053                           ;usb_device.c: 2416: }
 21054                           ;usb_device.c: 2417: }
 21055  0057EE  0012               	return	
 21056  0057F0                     l12934:
 21057                           
 21058                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 21059  0057F0  0100               	movlb	0	; () banked
 21060  0057F2  51FD               	movf	_USTATcopy& (0+255),w,b
 21061  0057F4  0BFD               	andlw	253
 21062  0057F6  0A04               	xorlw	4
 21063  0057F8  A4D8               	btfss	status,2,c
 21064  0057FA  0012               	return	
 21065                           
 21066                           ; BSR set to: 0
 21067                           ;usb_device.c: 2419: {
 21068                           ;usb_device.c: 2422: USBCtrlTrfInHandler();
 21069  0057FC  EC6A  F027         	call	_USBCtrlTrfInHandler	;wreg free
 21070  005800  0012               	return	
 21071  005802                     __end_of_USBCtrlEPService:
 21072                           	opt stack 0
 21073                           tblptru	equ	0xFF8
 21074                           tblptrh	equ	0xFF7
 21075                           tblptrl	equ	0xFF6
 21076                           tablat	equ	0xFF5
 21077                           prodh	equ	0xFF4
 21078                           prodl	equ	0xFF3
 21079                           intcon	equ	0xFF2
 21080                           intcon2	equ	0xFF1
 21081                           intcon3	equ	0xFF0
 21082                           postinc0	equ	0xFEE
 21083                           wreg	equ	0xFE8
 21084                           indf1	equ	0xFE7
 21085                           postdec1	equ	0xFE5
 21086                           plusw1	equ	0xFE3
 21087                           fsr1h	equ	0xFE2
 21088                           fsr1l	equ	0xFE1
 21089                           indf2	equ	0xFDF
 21090                           postinc2	equ	0xFDE
 21091                           postdec2	equ	0xFDD
 21092                           plusw2	equ	0xFDB
 21093                           fsr2h	equ	0xFDA
 21094                           fsr2l	equ	0xFD9
 21095                           status	equ	0xFD8
 21096                           
 21097 ;; *************** function _USBCtrlTrfSetupHandler *****************
 21098 ;; Defined at:
 21099 ;;		line 2467 in file "usb_device.c"
 21100 ;; Parameters:    Size  Location     Type
 21101 ;;		None
 21102 ;; Auto vars:     Size  Location     Type
 21103 ;;		None
 21104 ;; Return value:  Size  Location     Type
 21105 ;;                  1    wreg      void 
 21106 ;; Registers used:
 21107 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21108 ;; Tracked objects:
 21109 ;;		On entry : 0/0
 21110 ;;		On exit  : 0/0
 21111 ;;		Unchanged: 0/0
 21112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21117 ;;Total ram usage:        0 bytes
 21118 ;; Hardware stack levels used:    1
 21119 ;; Hardware stack levels required when called:    6
 21120 ;; This function calls:
 21121 ;;		_USBCheckStdRequest
 21122 ;;		_USBCtrlEPServiceComplete
 21123 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21124 ;; This function is called by:
 21125 ;;		_USBCtrlEPService
 21126 ;; This function uses a non-reentrant model
 21127 ;;
 21128                           
 21129                           	psect	text99
 21130  0055F4                     __ptext99:
 21131                           	opt stack 0
 21132  0055F4                     _USBCtrlTrfSetupHandler:
 21133                           	opt stack 22
 21134                           
 21135                           ;usb_device.c: 2472: shortPacketStatus = 0;
 21136                           
 21137                           ;incstack = 0
 21138  0055F4  0E00               	movlw	0
 21139  0055F6  0101               	movlb	1	; () banked
 21140  0055F8  6F98               	movwf	_shortPacketStatus& (0+255),b
 21141                           
 21142                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 21143  0055FA  0E00               	movlw	0
 21144  0055FC  0100               	movlb	0	; () banked
 21145  0055FE  6FFA               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 21146                           
 21147                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 21148  005600  0E00               	movlw	0
 21149  005602  0101               	movlb	1	; () banked
 21150  005604  6F90               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 21151                           
 21152                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 21153  005606  0E00               	movlw	0
 21154  005608  0101               	movlb	1	; () banked
 21155  00560A  6F8F               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 21156                           
 21157                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 21158  00560C  0E00               	movlw	0
 21159  00560E  0101               	movlb	1	; () banked
 21160  005610  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 21161                           
 21162                           ;usb_device.c: 2477: controlTransferState = 0;
 21163  005612  0E00               	movlw	0
 21164  005614  0100               	movlb	0	; () banked
 21165  005616  6FFB               	movwf	_controlTransferState& (0+255),b
 21166                           
 21167                           ; BSR set to: 0
 21168                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 21169  005618  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 21170  00561C  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21171  005620  0E7F               	movlw	127
 21172  005622  16DF               	andwf	indf2,f,c
 21173                           
 21174                           ; BSR set to: 0
 21175                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 21176  005624  0E04               	movlw	4
 21177  005626  0100               	movlb	0	; () banked
 21178  005628  19EE               	xorwf	_pBDTEntryIn& (0+255),w,b
 21179  00562A  0100               	movlb	0	; () banked
 21180  00562C  6FEE               	movwf	_pBDTEntryIn& (0+255),b
 21181  00562E  0100               	movlb	0	; () banked
 21182  005630  51EF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21183  005632  0100               	movlb	0	; () banked
 21184  005634  6FEF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 21185                           
 21186                           ; BSR set to: 0
 21187                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 21188  005636  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 21189  00563A  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21190  00563E  0E7F               	movlw	127
 21191  005640  16DF               	andwf	indf2,f,c
 21192                           
 21193                           ; BSR set to: 0
 21194                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 21195  005642  0E04               	movlw	4
 21196  005644  0100               	movlb	0	; () banked
 21197  005646  19EE               	xorwf	_pBDTEntryIn& (0+255),w,b
 21198  005648  0100               	movlb	0	; () banked
 21199  00564A  6FEE               	movwf	_pBDTEntryIn& (0+255),b
 21200  00564C  0100               	movlb	0	; () banked
 21201  00564E  51EF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21202  005650  0100               	movlb	0	; () banked
 21203  005652  6FEF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 21204                           
 21205                           ; BSR set to: 0
 21206                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 21207  005654  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21208  005658  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21209  00565C  0E7F               	movlw	127
 21210  00565E  16DF               	andwf	indf2,f,c
 21211                           
 21212                           ; BSR set to: 0
 21213                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 21214  005660  0E00               	movlw	0
 21215  005662  0100               	movlb	0	; () banked
 21216  005664  6FEB               	movwf	(_inPipes+3)& (0+255),b
 21217                           
 21218                           ; BSR set to: 0
 21219                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 21220  005666  0E00               	movlw	0
 21221  005668  0100               	movlb	0	; () banked
 21222  00566A  6FED               	movwf	(_inPipes+5)& (0+255),b
 21223  00566C  0E00               	movlw	0
 21224  00566E  6FEC               	movwf	(_inPipes+4)& (0+255),b
 21225                           
 21226                           ; BSR set to: 0
 21227                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 21228  005670  0E00               	movlw	0
 21229  005672  0101               	movlb	1	; () banked
 21230  005674  6F34               	movwf	(_outPipes+3)& (0+255),b
 21231                           
 21232                           ; BSR set to: 1
 21233                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 21234  005676  0E00               	movlw	0
 21235  005678  0101               	movlb	1	; () banked
 21236  00567A  6F36               	movwf	(_outPipes+5)& (0+255),b
 21237  00567C  0E00               	movlw	0
 21238  00567E  6F35               	movwf	(_outPipes+4)& (0+255),b
 21239                           
 21240                           ; BSR set to: 1
 21241                           ;usb_device.c: 2502: USBCheckStdRequest();
 21242  005680  ECB4  F024         	call	_USBCheckStdRequest	;wreg free
 21243                           
 21244                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 21245  005684  0E00               	movlw	0
 21246  005686  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21247  005688  0E03               	movlw	3
 21248  00568A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21249  00568C  0E00               	movlw	0
 21250  00568E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21251  005690  0E00               	movlw	0
 21252  005692  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21253  005694  0E00               	movlw	0
 21254  005696  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21255  005698  0E00               	movlw	0
 21256  00569A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21257  00569C  EC4D  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21258                           
 21259                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 21260  0056A0  ECAD  F021         	call	_USBCtrlEPServiceComplete	;wreg free
 21261  0056A4  0012               	return		;funcret
 21262  0056A6                     __end_of_USBCtrlTrfSetupHandler:
 21263                           	opt stack 0
 21264                           tblptru	equ	0xFF8
 21265                           tblptrh	equ	0xFF7
 21266                           tblptrl	equ	0xFF6
 21267                           tablat	equ	0xFF5
 21268                           prodh	equ	0xFF4
 21269                           prodl	equ	0xFF3
 21270                           intcon	equ	0xFF2
 21271                           intcon2	equ	0xFF1
 21272                           intcon3	equ	0xFF0
 21273                           postinc0	equ	0xFEE
 21274                           wreg	equ	0xFE8
 21275                           indf1	equ	0xFE7
 21276                           postdec1	equ	0xFE5
 21277                           plusw1	equ	0xFE3
 21278                           fsr1h	equ	0xFE2
 21279                           fsr1l	equ	0xFE1
 21280                           indf2	equ	0xFDF
 21281                           postinc2	equ	0xFDE
 21282                           postdec2	equ	0xFDD
 21283                           plusw2	equ	0xFDB
 21284                           fsr2h	equ	0xFDA
 21285                           fsr2l	equ	0xFD9
 21286                           status	equ	0xFD8
 21287                           
 21288 ;; *************** function _USBCtrlEPServiceComplete *****************
 21289 ;; Defined at:
 21290 ;;		line 1618 in file "usb_device.c"
 21291 ;; Parameters:    Size  Location     Type
 21292 ;;		None
 21293 ;; Auto vars:     Size  Location     Type
 21294 ;;		None
 21295 ;; Return value:  Size  Location     Type
 21296 ;;                  1    wreg      void 
 21297 ;; Registers used:
 21298 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21299 ;; Tracked objects:
 21300 ;;		On entry : 0/0
 21301 ;;		On exit  : 0/0
 21302 ;;		Unchanged: 0/0
 21303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21308 ;;Total ram usage:        0 bytes
 21309 ;; Hardware stack levels used:    1
 21310 ;; Hardware stack levels required when called:    2
 21311 ;; This function calls:
 21312 ;;		_USBCtrlEPAllowDataStage
 21313 ;;		_USBCtrlEPAllowStatusStage
 21314 ;; This function is called by:
 21315 ;;		_USBCtrlTrfSetupHandler
 21316 ;; This function uses a non-reentrant model
 21317 ;;
 21318                           
 21319                           	psect	text100
 21320  00435A                     __ptext100:
 21321                           	opt stack 0
 21322  00435A                     _USBCtrlEPServiceComplete:
 21323                           	opt stack 25
 21324                           
 21325                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 21326                           
 21327                           ;incstack = 0
 21328  00435A  9865               	bcf	3941,4,c	;volatile
 21329                           
 21330                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 21331  00435C  0100               	movlb	0	; () banked
 21332  00435E  BFEB               	btfsc	(_inPipes+3)& (0+255),7,b
 21333  004360  D03D               	goto	l219
 21334                           
 21335                           ; BSR set to: 0
 21336                           ;usb_device.c: 1631: {
 21337                           ;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 21338  004362  0101               	movlb	1	; () banked
 21339  004364  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 21340  004366  D00F               	goto	l11034
 21341                           
 21342                           ; BSR set to: 1
 21343                           ;usb_device.c: 1633: {
 21344                           ;usb_device.c: 1634: controlTransferState = 2;
 21345  004368  0E02               	movlw	2
 21346  00436A  0100               	movlb	0	; () banked
 21347  00436C  6FFB               	movwf	_controlTransferState& (0+255),b
 21348                           
 21349                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 21350  00436E  0101               	movlb	1	; () banked
 21351  004370  518F               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 21352  004372  B4D8               	btfsc	status,2,c
 21353                           
 21354                           ; BSR set to: 1
 21355                           ;usb_device.c: 1646: {
 21356                           ;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 21357  004374  ECF9  F02C         	call	_USBCtrlEPAllowDataStage	;wreg free
 21358                           
 21359                           ;usb_device.c: 1648: }
 21360                           ;usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 21361  004378  0E00               	movlw	0
 21362  00437A  0101               	movlb	1	; () banked
 21363  00437C  6F91               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21364                           
 21365                           ; BSR set to: 1
 21366                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 21367  00437E  0E00               	movlw	0
 21368  004380  0101               	movlb	1	; () banked
 21369  004382  6F92               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21370                           
 21371                           ;usb_device.c: 1654: }
 21372  004384  0012               	return	
 21373  004386                     l11034:
 21374                           
 21375                           ; BSR set to: 1
 21376                           ;usb_device.c: 1655: else
 21377                           ;usb_device.c: 1656: {
 21378                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->CNT = 8;
 21379  004386  EE20 F001          	lfsr	2,1
 21380  00438A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 21381  00438C  26D9               	addwf	fsr2l,f,c
 21382  00438E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 21383  004390  22DA               	addwfc	fsr2h,f,c
 21384  004392  0E08               	movlw	8
 21385  004394  6EDF               	movwf	indf2,c
 21386                           
 21387                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21388  004396  EE20 F002          	lfsr	2,2
 21389  00439A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 21390  00439C  26D9               	addwf	fsr2l,f,c
 21391  00439E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 21392  0043A0  22DA               	addwfc	fsr2h,f,c
 21393  0043A2  0E30               	movlw	48
 21394  0043A4  6EDE               	movwf	postinc2,c
 21395  0043A6  0E0D               	movlw	13
 21396  0043A8  6EDD               	movwf	postdec2,c
 21397                           
 21398                           ; BSR set to: 1
 21399                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21400  0043AA  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21401  0043AE  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21402  0043B2  0E0C               	movlw	12
 21403  0043B4  6EDF               	movwf	indf2,c
 21404                           
 21405                           ; BSR set to: 1
 21406                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21407  0043B6  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21408  0043BA  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21409  0043BE  0E00               	movlw	0
 21410  0043C0  8EDB               	bsf	plusw2,7,c
 21411                           
 21412                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 21413  0043C2  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 21414  0043C6  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21415  0043CA  0E04               	movlw	4
 21416  0043CC  6EDF               	movwf	indf2,c
 21417                           
 21418                           ; BSR set to: 1
 21419                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21420  0043CE  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 21421  0043D2  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21422  0043D6  0E00               	movlw	0
 21423  0043D8  8EDB               	bsf	plusw2,7,c
 21424                           
 21425                           ; BSR set to: 1
 21426                           ;usb_device.c: 1667: }
 21427                           ;usb_device.c: 1668: }
 21428  0043DA  0012               	return	
 21429  0043DC                     l219:
 21430                           
 21431                           ; BSR set to: 0
 21432                           ;usb_device.c: 1669: else
 21433                           ;usb_device.c: 1670: {
 21434                           ;usb_device.c: 1671: if(SetupPkt.DataDir == (0x80>>7))
 21435  0043DC  010D               	movlb	13	; () banked
 21436  0043DE  AF30               	btfss	48,7,b	;volatile
 21437  0043E0  D015               	goto	l11054
 21438                           
 21439                           ; BSR set to: 13
 21440                           ;usb_device.c: 1672: {
 21441                           ;usb_device.c: 1673: controlTransferState = 1;
 21442  0043E2  0E01               	movlw	1
 21443  0043E4  0100               	movlb	0	; () banked
 21444  0043E6  6FFB               	movwf	_controlTransferState& (0+255),b
 21445                           
 21446                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 21447  0043E8  0101               	movlb	1	; () banked
 21448  0043EA  5190               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 21449  0043EC  B4D8               	btfsc	status,2,c
 21450                           
 21451                           ; BSR set to: 1
 21452                           ;usb_device.c: 1688: {
 21453                           ;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 21454  0043EE  ECF9  F02C         	call	_USBCtrlEPAllowDataStage	;wreg free
 21455                           
 21456                           ;usb_device.c: 1690: }
 21457                           ;usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 21458  0043F2  0E00               	movlw	0
 21459  0043F4  0101               	movlb	1	; () banked
 21460  0043F6  6F91               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21461                           
 21462                           ; BSR set to: 1
 21463                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 21464  0043F8  0E00               	movlw	0
 21465  0043FA  0101               	movlb	1	; () banked
 21466  0043FC  6F92               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21467                           
 21468                           ; BSR set to: 1
 21469                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 21470  0043FE  0100               	movlb	0	; () banked
 21471  004400  51FA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 21472  004402  A4D8               	btfss	status,2,c
 21473  004404  0012               	return	
 21474                           
 21475                           ; BSR set to: 0
 21476                           ;usb_device.c: 1715: {
 21477                           ;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 21478  004406  EC45  F028         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21479                           
 21480                           ;usb_device.c: 1717: }
 21481                           ;usb_device.c: 1718: }
 21482  00440A  0012               	return	
 21483  00440C                     l11054:
 21484                           
 21485                           ;usb_device.c: 1719: else
 21486                           ;usb_device.c: 1720: {
 21487                           ;usb_device.c: 1731: controlTransferState = 2;
 21488  00440C  0E02               	movlw	2
 21489  00440E  0100               	movlb	0	; () banked
 21490  004410  6FFB               	movwf	_controlTransferState& (0+255),b
 21491                           
 21492                           ; BSR set to: 0
 21493                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 21494  004412  EE20 F001          	lfsr	2,1
 21495  004416  505C               	movf	_pBDTEntryEP0OutNext,w,c
 21496  004418  26D9               	addwf	fsr2l,f,c
 21497  00441A  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 21498  00441C  22DA               	addwfc	fsr2h,f,c
 21499  00441E  0E08               	movlw	8
 21500  004420  6EDF               	movwf	indf2,c
 21501                           
 21502                           ; BSR set to: 0
 21503                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21504  004422  EE20 F002          	lfsr	2,2
 21505  004426  505C               	movf	_pBDTEntryEP0OutNext,w,c
 21506  004428  26D9               	addwf	fsr2l,f,c
 21507  00442A  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 21508  00442C  22DA               	addwfc	fsr2h,f,c
 21509  00442E  0E30               	movlw	48
 21510  004430  6EDE               	movwf	postinc2,c
 21511  004432  0E0D               	movlw	13
 21512  004434  6EDD               	movwf	postdec2,c
 21513                           
 21514                           ; BSR set to: 0
 21515                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 21516  004436  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21517  00443A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21518  00443E  0E04               	movlw	4
 21519  004440  6EDF               	movwf	indf2,c
 21520                           
 21521                           ; BSR set to: 0
 21522                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21523  004442  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21524  004446  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21525  00444A  0E00               	movlw	0
 21526  00444C  8EDB               	bsf	plusw2,7,c
 21527                           
 21528                           ; BSR set to: 0
 21529                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 21530  00444E  0E00               	movlw	0
 21531  004450  0101               	movlb	1	; () banked
 21532  004452  6F91               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21533                           
 21534                           ; BSR set to: 1
 21535                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 21536  004454  0E00               	movlw	0
 21537  004456  0101               	movlb	1	; () banked
 21538  004458  6F92               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21539                           
 21540                           ; BSR set to: 1
 21541                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 21542  00445A  0100               	movlb	0	; () banked
 21543  00445C  51FA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 21544  00445E  A4D8               	btfss	status,2,c
 21545  004460  0012               	return	
 21546                           
 21547                           ; BSR set to: 0
 21548                           ;usb_device.c: 1743: {
 21549                           ;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 21550  004462  EC45  F028         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21551  004466  0012               	return	
 21552  004468                     __end_of_USBCtrlEPServiceComplete:
 21553                           	opt stack 0
 21554                           tblptru	equ	0xFF8
 21555                           tblptrh	equ	0xFF7
 21556                           tblptrl	equ	0xFF6
 21557                           tablat	equ	0xFF5
 21558                           prodh	equ	0xFF4
 21559                           prodl	equ	0xFF3
 21560                           intcon	equ	0xFF2
 21561                           intcon2	equ	0xFF1
 21562                           intcon3	equ	0xFF0
 21563                           postinc0	equ	0xFEE
 21564                           wreg	equ	0xFE8
 21565                           indf1	equ	0xFE7
 21566                           postdec1	equ	0xFE5
 21567                           plusw1	equ	0xFE3
 21568                           fsr1h	equ	0xFE2
 21569                           fsr1l	equ	0xFE1
 21570                           indf2	equ	0xFDF
 21571                           postinc2	equ	0xFDE
 21572                           postdec2	equ	0xFDD
 21573                           plusw2	equ	0xFDB
 21574                           fsr2h	equ	0xFDA
 21575                           fsr2l	equ	0xFD9
 21576                           status	equ	0xFD8
 21577                           
 21578 ;; *************** function _USBCtrlEPAllowDataStage *****************
 21579 ;; Defined at:
 21580 ;;		line 1490 in file "usb_device.c"
 21581 ;; Parameters:    Size  Location     Type
 21582 ;;		None
 21583 ;; Auto vars:     Size  Location     Type
 21584 ;;		None
 21585 ;; Return value:  Size  Location     Type
 21586 ;;                  1    wreg      void 
 21587 ;; Registers used:
 21588 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21589 ;; Tracked objects:
 21590 ;;		On entry : 0/0
 21591 ;;		On exit  : 0/0
 21592 ;;		Unchanged: 0/0
 21593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21598 ;;Total ram usage:        0 bytes
 21599 ;; Hardware stack levels used:    1
 21600 ;; Hardware stack levels required when called:    1
 21601 ;; This function calls:
 21602 ;;		_USBCtrlTrfTxService
 21603 ;; This function is called by:
 21604 ;;		_USBCtrlEPServiceComplete
 21605 ;; This function uses a non-reentrant model
 21606 ;;
 21607                           
 21608                           	psect	text101
 21609  0059F2                     __ptext101:
 21610                           	opt stack 0
 21611  0059F2                     _USBCtrlEPAllowDataStage:
 21612                           	opt stack 25
 21613                           
 21614                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 21615                           
 21616                           ;incstack = 0
 21617  0059F2  0E00               	movlw	0
 21618  0059F4  0101               	movlb	1	; () banked
 21619  0059F6  6F90               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 21620                           
 21621                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 21622  0059F8  0E00               	movlw	0
 21623  0059FA  0101               	movlb	1	; () banked
 21624  0059FC  6F8F               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 21625                           
 21626                           ; BSR set to: 1
 21627                           ;usb_device.c: 1495: if(controlTransferState == 2)
 21628  0059FE  0E02               	movlw	2
 21629  005A00  0100               	movlb	0	; () banked
 21630  005A02  19FB               	xorwf	_controlTransferState& (0+255),w,b
 21631  005A04  A4D8               	btfss	status,2,c
 21632  005A06  D01F               	goto	l10566
 21633                           
 21634                           ; BSR set to: 0
 21635                           ;usb_device.c: 1496: {
 21636                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 21637  005A08  EE20 F001          	lfsr	2,1
 21638  005A0C  505C               	movf	_pBDTEntryEP0OutNext,w,c
 21639  005A0E  26D9               	addwf	fsr2l,f,c
 21640  005A10  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 21641  005A12  22DA               	addwfc	fsr2h,f,c
 21642  005A14  0E08               	movlw	8
 21643  005A16  6EDF               	movwf	indf2,c
 21644                           
 21645                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 21646  005A18  EE20 F002          	lfsr	2,2
 21647  005A1C  505C               	movf	_pBDTEntryEP0OutNext,w,c
 21648  005A1E  26D9               	addwf	fsr2l,f,c
 21649  005A20  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 21650  005A22  22DA               	addwfc	fsr2h,f,c
 21651  005A24  0E38               	movlw	56
 21652  005A26  6EDE               	movwf	postinc2,c
 21653  005A28  0E0D               	movlw	13
 21654  005A2A  6EDD               	movwf	postdec2,c
 21655                           
 21656                           ; BSR set to: 0
 21657                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 21658  005A2C  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21659  005A30  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21660  005A34  0E48               	movlw	72
 21661  005A36  6EDF               	movwf	indf2,c
 21662                           
 21663                           ; BSR set to: 0
 21664                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21665  005A38  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21666  005A3C  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21667  005A40  0E00               	movlw	0
 21668  005A42  8EDB               	bsf	plusw2,7,c
 21669                           
 21670                           ;usb_device.c: 1502: }
 21671  005A44  0012               	return	
 21672  005A46                     l10566:
 21673                           
 21674                           ; BSR set to: 0
 21675                           ;usb_device.c: 1503: else
 21676                           ;usb_device.c: 1504: {
 21677                           ;usb_device.c: 1507: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 21678  005A46  0100               	movlb	0	; () banked
 21679  005A48  51EC               	movf	(_inPipes+4)& (0+255),w,b
 21680  005A4A  010D               	movlb	13	; () banked
 21681  005A4C  5D36               	subwf	54,w,b	;volatile
 21682  005A4E  0100               	movlb	0	; () banked
 21683  005A50  51ED               	movf	(_inPipes+5)& (0+255),w,b
 21684  005A52  010D               	movlb	13	; () banked
 21685  005A54  5937               	subwfb	55,w,b	;volatile
 21686  005A56  B0D8               	btfsc	status,0,c
 21687  005A58  D004               	goto	l10570
 21688                           
 21689                           ; BSR set to: 13
 21690                           ;usb_device.c: 1508: {
 21691                           ;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 21692  005A5A  CD36 F0EC          	movff	3382,_inPipes+4	;volatile
 21693  005A5E  CD37 F0ED          	movff	3383,_inPipes+5	;volatile
 21694  005A62                     l10570:
 21695                           
 21696                           ; BSR set to: 13
 21697                           ;usb_device.c: 1510: }
 21698                           ;usb_device.c: 1511: USBCtrlTrfTxService();
 21699  005A62  EC8B  F026         	call	_USBCtrlTrfTxService	;wreg free
 21700                           
 21701                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 21702  005A66  0100               	movlb	0	; () banked
 21703  005A68  EE20 F002          	lfsr	2,2
 21704  005A6C  51EE               	movf	_pBDTEntryIn& (0+255),w,b
 21705  005A6E  26D9               	addwf	fsr2l,f,c
 21706  005A70  51EF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21707  005A72  22DA               	addwfc	fsr2h,f,c
 21708  005A74  0E38               	movlw	56
 21709  005A76  6EDE               	movwf	postinc2,c
 21710  005A78  0E0D               	movlw	13
 21711  005A7A  6EDD               	movwf	postdec2,c
 21712                           
 21713                           ; BSR set to: 0
 21714                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 21715  005A7C  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 21716  005A80  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21717  005A84  0E48               	movlw	72
 21718  005A86  6EDF               	movwf	indf2,c
 21719                           
 21720                           ; BSR set to: 0
 21721                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21722  005A88  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 21723  005A8C  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21724  005A90  0E00               	movlw	0
 21725  005A92  8EDB               	bsf	plusw2,7,c
 21726  005A94  0012               	return	
 21727  005A96                     __end_of_USBCtrlEPAllowDataStage:
 21728                           	opt stack 0
 21729                           tblptru	equ	0xFF8
 21730                           tblptrh	equ	0xFF7
 21731                           tblptrl	equ	0xFF6
 21732                           tablat	equ	0xFF5
 21733                           prodh	equ	0xFF4
 21734                           prodl	equ	0xFF3
 21735                           intcon	equ	0xFF2
 21736                           intcon2	equ	0xFF1
 21737                           intcon3	equ	0xFF0
 21738                           postinc0	equ	0xFEE
 21739                           wreg	equ	0xFE8
 21740                           indf1	equ	0xFE7
 21741                           postdec1	equ	0xFE5
 21742                           plusw1	equ	0xFE3
 21743                           fsr1h	equ	0xFE2
 21744                           fsr1l	equ	0xFE1
 21745                           indf2	equ	0xFDF
 21746                           postinc2	equ	0xFDE
 21747                           postdec2	equ	0xFDD
 21748                           plusw2	equ	0xFDB
 21749                           fsr2h	equ	0xFDA
 21750                           fsr2l	equ	0xFD9
 21751                           status	equ	0xFD8
 21752                           
 21753 ;; *************** function _USBCheckStdRequest *****************
 21754 ;; Defined at:
 21755 ;;		line 2688 in file "usb_device.c"
 21756 ;; Parameters:    Size  Location     Type
 21757 ;;		None
 21758 ;; Auto vars:     Size  Location     Type
 21759 ;;		None
 21760 ;; Return value:  Size  Location     Type
 21761 ;;                  1    wreg      void 
 21762 ;; Registers used:
 21763 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21764 ;; Tracked objects:
 21765 ;;		On entry : 0/0
 21766 ;;		On exit  : 0/0
 21767 ;;		Unchanged: 0/0
 21768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21773 ;;Total ram usage:        0 bytes
 21774 ;; Hardware stack levels used:    1
 21775 ;; Hardware stack levels required when called:    5
 21776 ;; This function calls:
 21777 ;;		_USBStdFeatureReqHandler
 21778 ;;		_USBStdGetDscHandler
 21779 ;;		_USBStdGetStatusHandler
 21780 ;;		_USBStdSetCfgHandler
 21781 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21782 ;; This function is called by:
 21783 ;;		_USBCtrlTrfSetupHandler
 21784 ;; This function uses a non-reentrant model
 21785 ;;
 21786                           
 21787                           	psect	text102
 21788  004968                     __ptext102:
 21789                           	opt stack 0
 21790  004968                     _USBCheckStdRequest:
 21791                           	opt stack 22
 21792                           
 21793                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 21794                           
 21795                           ; BSR set to: 0
 21796                           ;incstack = 0
 21797  004968  010D               	movlb	13	; () banked
 21798  00496A  3930               	swapf	48,w,b	;volatile
 21799  00496C  32E8               	rrcf	wreg,f,c
 21800  00496E  0B03               	andlw	3
 21801  004970  0900               	iorlw	0
 21802  004972  A4D8               	btfss	status,2,c
 21803  004974  0012               	return	
 21804  004976  D050               	goto	l11152
 21805  004978                     l344:
 21806                           
 21807                           ; BSR set to: 13
 21808                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 21809  004978  0100               	movlb	0	; () banked
 21810  00497A  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 21811                           
 21812                           ; BSR set to: 0
 21813                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 21814  00497C  0E08               	movlw	8
 21815  00497E  0100               	movlb	0	; () banked
 21816  004980  6FFC               	movwf	_USBDeviceState& (0+255),b
 21817                           
 21818                           ;usb_device.c: 2698: break;
 21819  004982  0012               	return	
 21820  004984                     l11122:
 21821                           
 21822                           ;usb_device.c: 2700: USBStdGetDscHandler();
 21823  004984  EC1B  F01D         	call	_USBStdGetDscHandler	;wreg free
 21824                           
 21825                           ;usb_device.c: 2701: break;
 21826  004988  0012               	return	
 21827  00498A                     l11124:
 21828                           
 21829                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 21830  00498A  ECA6  F025         	call	_USBStdSetCfgHandler	;wreg free
 21831                           
 21832                           ;usb_device.c: 2704: break;
 21833  00498E  0012               	return	
 21834  004990                     l11126:
 21835                           
 21836                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 21837  004990  0EFE               	movlw	low _USBActiveConfiguration
 21838  004992  0100               	movlb	0	; () banked
 21839  004994  6FE8               	movwf	_inPipes& (0+255),b
 21840  004996  0E00               	movlw	high _USBActiveConfiguration
 21841  004998  0100               	movlb	0	; () banked
 21842  00499A  6FE9               	movwf	(_inPipes+1)& (0+255),b
 21843                           
 21844                           ; BSR set to: 0
 21845                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21846  00499C  0100               	movlb	0	; () banked
 21847  00499E  81EB               	bsf	(_inPipes+3)& (0+255),0,b
 21848                           
 21849                           ; BSR set to: 0
 21850                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 21851  0049A0  0E01               	movlw	1
 21852  0049A2  0100               	movlb	0	; () banked
 21853  0049A4  6FEC               	movwf	(_inPipes+4)& (0+255),b
 21854                           
 21855                           ; BSR set to: 0
 21856                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 21857  0049A6  0100               	movlb	0	; () banked
 21858  0049A8  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 21859                           
 21860                           ;usb_device.c: 2710: break;
 21861  0049AA  0012               	return	
 21862  0049AC                     l11134:
 21863                           
 21864                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 21865  0049AC  EC9C  F02A         	call	_USBStdGetStatusHandler	;wreg free
 21866                           
 21867                           ;usb_device.c: 2713: break;
 21868  0049B0  0012               	return	
 21869  0049B2                     l11136:
 21870                           
 21871                           ;usb_device.c: 2715: case 3:
 21872                           ;usb_device.c: 2716: USBStdFeatureReqHandler();
 21873  0049B2  ECDD  F00F         	call	_USBStdFeatureReqHandler	;wreg free
 21874                           
 21875                           ;usb_device.c: 2717: break;
 21876  0049B6  0012               	return	
 21877  0049B8                     l11138:
 21878                           
 21879                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 21880  0049B8  010D               	movlb	13	; () banked
 21881  0049BA  5134               	movf	52,w,b	;volatile
 21882  0049BC  0D01               	mullw	1
 21883  0049BE  0EB5               	movlw	low _USBAlternateInterface
 21884  0049C0  24F3               	addwf	prodl,w,c
 21885  0049C2  0100               	movlb	0	; () banked
 21886  0049C4  6FE8               	movwf	_inPipes& (0+255),b
 21887  0049C6  0E01               	movlw	high _USBAlternateInterface
 21888  0049C8  20F4               	addwfc	prodh,w,c
 21889  0049CA  0100               	movlb	0	; () banked
 21890  0049CC  6FE9               	movwf	(_inPipes+1)& (0+255),b
 21891                           
 21892                           ; BSR set to: 0
 21893                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21894  0049CE  0100               	movlb	0	; () banked
 21895  0049D0  81EB               	bsf	(_inPipes+3)& (0+255),0,b
 21896                           
 21897                           ; BSR set to: 0
 21898                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 21899  0049D2  0E01               	movlw	1
 21900  0049D4  0100               	movlb	0	; () banked
 21901  0049D6  6FEC               	movwf	(_inPipes+4)& (0+255),b
 21902                           
 21903                           ; BSR set to: 0
 21904                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 21905  0049D8  0100               	movlb	0	; () banked
 21906  0049DA  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 21907                           
 21908                           ;usb_device.c: 2723: break;
 21909  0049DC  0012               	return	
 21910  0049DE                     l353:
 21911                           
 21912                           ; BSR set to: 13
 21913                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 21914  0049DE  0100               	movlb	0	; () banked
 21915  0049E0  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 21916                           
 21917                           ; BSR set to: 0
 21918                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 21919  0049E2  010D               	movlb	13	; () banked
 21920  0049E4  5134               	movf	52,w,b	;volatile
 21921  0049E6  0D01               	mullw	1
 21922  0049E8  0EB5               	movlw	low _USBAlternateInterface
 21923  0049EA  24F3               	addwf	prodl,w,c
 21924  0049EC  6ED9               	movwf	fsr2l,c
 21925  0049EE  0E01               	movlw	high _USBAlternateInterface
 21926  0049F0  20F4               	addwfc	prodh,w,c
 21927  0049F2  6EDA               	movwf	fsr2h,c
 21928  0049F4  CD32 FFDF          	movff	3378,indf2	;volatile
 21929                           
 21930                           ;usb_device.c: 2727: break;
 21931  0049F8  0012               	return	
 21932  0049FA                     l11148:
 21933                           
 21934                           ; BSR set to: 13
 21935                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 21936  0049FA  0E00               	movlw	0
 21937  0049FC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21938  0049FE  0E02               	movlw	2
 21939  004A00  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21940  004A02  0E00               	movlw	0
 21941  004A04  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21942  004A06  0E00               	movlw	0
 21943  004A08  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21944  004A0A  0E00               	movlw	0
 21945  004A0C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21946  004A0E  0E00               	movlw	0
 21947  004A10  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21948  004A12  EC4D  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21949                           
 21950                           ;usb_device.c: 2734: }
 21951                           
 21952                           ;usb_device.c: 2733: break;
 21953                           
 21954                           ;usb_device.c: 2732: default:
 21955                           
 21956                           ;usb_device.c: 2731: case 12:
 21957                           
 21958                           ;usb_device.c: 2730: break;
 21959  004A16  0012               	return	
 21960  004A18                     l11152:
 21961  004A18  010D               	movlb	13	; () banked
 21962  004A1A  5131               	movf	49,w,b	;volatile
 21963                           
 21964                           ; Switch size 1, requested type "space"
 21965                           ; Number of cases is 11, Range of values is 0 to 12
 21966                           ; switch strategies available:
 21967                           ; Name         Instructions Cycles
 21968                           ; simple_byte           34    18 (average)
 21969                           ;	Chosen strategy is simple_byte
 21970  004A1C  0A00               	xorlw	0	; case 0
 21971  004A1E  B4D8               	btfsc	status,2,c
 21972  004A20  D7C5               	goto	l11134
 21973  004A22  0A01               	xorlw	1	; case 1
 21974  004A24  B4D8               	btfsc	status,2,c
 21975  004A26  D7C5               	goto	l11136
 21976  004A28  0A02               	xorlw	2	; case 3
 21977  004A2A  B4D8               	btfsc	status,2,c
 21978  004A2C  D7C2               	goto	l11136
 21979  004A2E  0A06               	xorlw	6	; case 5
 21980  004A30  B4D8               	btfsc	status,2,c
 21981  004A32  D7A2               	goto	l344
 21982  004A34  0A03               	xorlw	3	; case 6
 21983  004A36  B4D8               	btfsc	status,2,c
 21984  004A38  D7A5               	goto	l11122
 21985  004A3A  0A01               	xorlw	1	; case 7
 21986  004A3C  B4D8               	btfsc	status,2,c
 21987  004A3E  D7DD               	goto	l11148
 21988  004A40  0A0F               	xorlw	15	; case 8
 21989  004A42  B4D8               	btfsc	status,2,c
 21990  004A44  D7A5               	goto	l11126
 21991  004A46  0A01               	xorlw	1	; case 9
 21992  004A48  B4D8               	btfsc	status,2,c
 21993  004A4A  D79F               	goto	l11124
 21994  004A4C  0A03               	xorlw	3	; case 10
 21995  004A4E  B4D8               	btfsc	status,2,c
 21996  004A50  D7B3               	goto	l11138
 21997  004A52  0A01               	xorlw	1	; case 11
 21998  004A54  B4D8               	btfsc	status,2,c
 21999  004A56  D7C3               	goto	l353
 22000  004A58  0A07               	xorlw	7	; case 12
 22001  004A5A  0012               	return	
 22002  004A5C                     __end_of_USBCheckStdRequest:
 22003                           	opt stack 0
 22004                           tblptru	equ	0xFF8
 22005                           tblptrh	equ	0xFF7
 22006                           tblptrl	equ	0xFF6
 22007                           tablat	equ	0xFF5
 22008                           prodh	equ	0xFF4
 22009                           prodl	equ	0xFF3
 22010                           intcon	equ	0xFF2
 22011                           intcon2	equ	0xFF1
 22012                           intcon3	equ	0xFF0
 22013                           postinc0	equ	0xFEE
 22014                           wreg	equ	0xFE8
 22015                           indf1	equ	0xFE7
 22016                           postdec1	equ	0xFE5
 22017                           plusw1	equ	0xFE3
 22018                           fsr1h	equ	0xFE2
 22019                           fsr1l	equ	0xFE1
 22020                           indf2	equ	0xFDF
 22021                           postinc2	equ	0xFDE
 22022                           postdec2	equ	0xFDD
 22023                           plusw2	equ	0xFDB
 22024                           fsr2h	equ	0xFDA
 22025                           fsr2l	equ	0xFD9
 22026                           status	equ	0xFD8
 22027                           
 22028 ;; *************** function _USBStdSetCfgHandler *****************
 22029 ;; Defined at:
 22030 ;;		line 1970 in file "usb_device.c"
 22031 ;; Parameters:    Size  Location     Type
 22032 ;;		None
 22033 ;; Auto vars:     Size  Location     Type
 22034 ;;  i               1   23[COMRAM] unsigned char 
 22035 ;; Return value:  Size  Location     Type
 22036 ;;                  1    wreg      void 
 22037 ;; Registers used:
 22038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 22039 ;; Tracked objects:
 22040 ;;		On entry : 0/0
 22041 ;;		On exit  : 0/0
 22042 ;;		Unchanged: 0/0
 22043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22047 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22048 ;;Total ram usage:        1 bytes
 22049 ;; Hardware stack levels used:    1
 22050 ;; Hardware stack levels required when called:    4
 22051 ;; This function calls:
 22052 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22053 ;;		_memset
 22054 ;; This function is called by:
 22055 ;;		_USBCheckStdRequest
 22056 ;; This function uses a non-reentrant model
 22057 ;;
 22058                           
 22059                           	psect	text103
 22060  004B4C                     __ptext103:
 22061                           	opt stack 0
 22062  004B4C                     _USBStdSetCfgHandler:
 22063                           	opt stack 22
 22064                           
 22065                           ;usb_device.c: 1972: uint8_t i;
 22066                           ;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 22067                           
 22068                           ;incstack = 0
 22069  004B4C  0100               	movlb	0	; () banked
 22070  004B4E  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 22071                           
 22072                           ; BSR set to: 0
 22073                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 22074  004B50  0E27               	movlw	39
 22075  004B52  6E01               	movwf	memset@p1,c
 22076  004B54  0E0F               	movlw	15
 22077  004B56  6E02               	movwf	memset@p1+1,c
 22078  004B58  0E00               	movlw	0
 22079  004B5A  6E04               	movwf	memset@c+1,c
 22080  004B5C  0E00               	movlw	0
 22081  004B5E  6E03               	movwf	memset@c,c
 22082  004B60  0E00               	movlw	0
 22083  004B62  6E06               	movwf	memset@n+1,c
 22084  004B64  0E02               	movlw	2
 22085  004B66  6E05               	movwf	memset@n,c
 22086  004B68  EC75  F03A         	call	_memset	;wreg free
 22087                           
 22088                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 22089  004B6C  0E00               	movlw	0
 22090  004B6E  6E01               	movwf	memset@p1,c
 22091  004B70  0E0D               	movlw	13
 22092  004B72  6E02               	movwf	memset@p1+1,c
 22093  004B74  0E00               	movlw	0
 22094  004B76  6E04               	movwf	memset@c+1,c
 22095  004B78  0E00               	movlw	0
 22096  004B7A  6E03               	movwf	memset@c,c
 22097  004B7C  0E00               	movlw	0
 22098  004B7E  6E06               	movwf	memset@n+1,c
 22099  004B80  0E30               	movlw	48
 22100  004B82  6E05               	movwf	memset@n,c
 22101  004B84  EC75  F03A         	call	_memset	;wreg free
 22102                           
 22103                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 22104  004B88  8C65               	bsf	3941,6,c	;volatile
 22105                           
 22106                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 22107  004B8A  0E00               	movlw	0
 22108  004B8C  6E18               	movwf	USBStdSetCfgHandler@i,c
 22109  004B8E                     l10586:
 22110  004B8E  0E02               	movlw	2
 22111  004B90  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 22112  004B92  D001               	goto	l10590
 22113  004B94  D016               	goto	l10596
 22114  004B96                     l10590:
 22115                           
 22116                           ;usb_device.c: 1990: {
 22117                           ;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 22118  004B96  5018               	movf	USBStdSetCfgHandler@i,w,c
 22119  004B98  0D01               	mullw	1
 22120  004B9A  0E69               	movlw	low _ep_data_in
 22121  004B9C  24F3               	addwf	prodl,w,c
 22122  004B9E  6ED9               	movwf	fsr2l,c
 22123  004BA0  0E01               	movlw	high _ep_data_in
 22124  004BA2  20F4               	addwfc	prodh,w,c
 22125  004BA4  6EDA               	movwf	fsr2h,c
 22126  004BA6  0E00               	movlw	0
 22127  004BA8  6EDF               	movwf	indf2,c
 22128                           
 22129                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 22130  004BAA  5018               	movf	USBStdSetCfgHandler@i,w,c
 22131  004BAC  0D01               	mullw	1
 22132  004BAE  0E66               	movlw	low _ep_data_out
 22133  004BB0  24F3               	addwf	prodl,w,c
 22134  004BB2  6ED9               	movwf	fsr2l,c
 22135  004BB4  0E01               	movlw	high _ep_data_out
 22136  004BB6  20F4               	addwfc	prodh,w,c
 22137  004BB8  6EDA               	movwf	fsr2h,c
 22138  004BBA  0E00               	movlw	0
 22139  004BBC  6EDF               	movwf	indf2,c
 22140  004BBE  2A18               	incf	USBStdSetCfgHandler@i,f,c
 22141  004BC0  D7E6               	goto	l10586
 22142  004BC2                     l10596:
 22143                           
 22144                           ;usb_device.c: 1993: }
 22145                           ;usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 22146  004BC2  0EB5               	movlw	low _USBAlternateInterface
 22147  004BC4  6E01               	movwf	memset@p1,c
 22148  004BC6  0E01               	movlw	high _USBAlternateInterface
 22149  004BC8  6E02               	movwf	memset@p1+1,c
 22150  004BCA  0E00               	movlw	0
 22151  004BCC  6E04               	movwf	memset@c+1,c
 22152  004BCE  0E00               	movlw	0
 22153  004BD0  6E03               	movwf	memset@c,c
 22154  004BD2  0E00               	movlw	0
 22155  004BD4  6E06               	movwf	memset@n+1,c
 22156  004BD6  0E02               	movlw	2
 22157  004BD8  6E05               	movwf	memset@n,c
 22158  004BDA  EC75  F03A         	call	_memset	;wreg free
 22159                           
 22160                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 22161  004BDE  9C65               	bcf	3941,6,c	;volatile
 22162                           
 22163                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 22164  004BE0  0E08               	movlw	8
 22165  004BE2  0100               	movlb	0	; () banked
 22166  004BE4  6FEE               	movwf	_pBDTEntryIn& (0+255),b
 22167  004BE6  0E0D               	movlw	13
 22168  004BE8  0100               	movlb	0	; () banked
 22169  004BEA  6FEF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 22170                           
 22171                           ; BSR set to: 0
 22172                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 22173  004BEC  0E00               	movlw	0
 22174  004BEE  6E5E               	movwf	_pBDTEntryEP0OutCurrent,c
 22175  004BF0  0E0D               	movlw	13
 22176  004BF2  6E5F               	movwf	_pBDTEntryEP0OutCurrent+1,c
 22177                           
 22178                           ; BSR set to: 0
 22179                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 22180  004BF4  C05E  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 22181  004BF8  C05F  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 22182                           
 22183                           ; BSR set to: 0
 22184                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 22185  004BFC  CD32 F0FE          	movff	3378,_USBActiveConfiguration	;volatile
 22186                           
 22187                           ; BSR set to: 0
 22188                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 22189  004C00  0100               	movlb	0	; () banked
 22190  004C02  51FE               	movf	_USBActiveConfiguration& (0+255),w,b
 22191  004C04  A4D8               	btfss	status,2,c
 22192  004C06  D004               	goto	l10612
 22193                           
 22194                           ; BSR set to: 0
 22195                           ;usb_device.c: 2012: {
 22196                           ;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 22197  004C08  0E10               	movlw	16
 22198  004C0A  0100               	movlb	0	; () banked
 22199  004C0C  6FFC               	movwf	_USBDeviceState& (0+255),b
 22200                           
 22201                           ;usb_device.c: 2015: }
 22202  004C0E  0012               	return	
 22203  004C10                     l10612:
 22204                           
 22205                           ; BSR set to: 0
 22206                           ;usb_device.c: 2016: else
 22207                           ;usb_device.c: 2017: {
 22208                           ;usb_device.c: 2019: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 22209  004C10  0E00               	movlw	0
 22210  004C12  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22211  004C14  0E01               	movlw	1
 22212  004C16  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22213  004C18  0EFE               	movlw	low _USBActiveConfiguration
 22214  004C1A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22215  004C1C  0E00               	movlw	high _USBActiveConfiguration
 22216  004C1E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22217  004C20  0E00               	movlw	0
 22218  004C22  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22219  004C24  0E01               	movlw	1
 22220  004C26  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22221  004C28  EC4D  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22222                           
 22223                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 22224  004C2C  0E20               	movlw	32
 22225  004C2E  0100               	movlb	0	; () banked
 22226  004C30  6FFC               	movwf	_USBDeviceState& (0+255),b
 22227  004C32  0012               	return	
 22228  004C34                     __end_of_USBStdSetCfgHandler:
 22229                           	opt stack 0
 22230                           tblptru	equ	0xFF8
 22231                           tblptrh	equ	0xFF7
 22232                           tblptrl	equ	0xFF6
 22233                           tablat	equ	0xFF5
 22234                           prodh	equ	0xFF4
 22235                           prodl	equ	0xFF3
 22236                           intcon	equ	0xFF2
 22237                           intcon2	equ	0xFF1
 22238                           intcon3	equ	0xFF0
 22239                           postinc0	equ	0xFEE
 22240                           wreg	equ	0xFE8
 22241                           indf1	equ	0xFE7
 22242                           postdec1	equ	0xFE5
 22243                           plusw1	equ	0xFE3
 22244                           fsr1h	equ	0xFE2
 22245                           fsr1l	equ	0xFE1
 22246                           indf2	equ	0xFDF
 22247                           postinc2	equ	0xFDE
 22248                           postdec2	equ	0xFDD
 22249                           plusw2	equ	0xFDB
 22250                           fsr2h	equ	0xFDA
 22251                           fsr2l	equ	0xFD9
 22252                           status	equ	0xFD8
 22253                           
 22254 ;; *************** function _memset *****************
 22255 ;; Defined at:
 22256 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memset.c"
 22257 ;; Parameters:    Size  Location     Type
 22258 ;;  p1              2    0[COMRAM] PTR void 
 22259 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22260 ;;  c               2    2[COMRAM] int 
 22261 ;;  n               2    4[COMRAM] unsigned int 
 22262 ;; Auto vars:     Size  Location     Type
 22263 ;;  p               2    6[COMRAM] PTR unsigned char 
 22264 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22265 ;; Return value:  Size  Location     Type
 22266 ;;                  2    0[COMRAM] PTR void 
 22267 ;; Registers used:
 22268 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22269 ;; Tracked objects:
 22270 ;;		On entry : 0/0
 22271 ;;		On exit  : 0/0
 22272 ;;		Unchanged: 0/0
 22273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22274 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22277 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22278 ;;Total ram usage:        8 bytes
 22279 ;; Hardware stack levels used:    1
 22280 ;; This function calls:
 22281 ;;		Nothing
 22282 ;; This function is called by:
 22283 ;;		_USBDeviceInit
 22284 ;;		_USBStdSetCfgHandler
 22285 ;; This function uses a non-reentrant model
 22286 ;;
 22287                           
 22288                           	psect	text104
 22289  0074EA                     __ptext104:
 22290                           	opt stack 0
 22291  0074EA                     _memset:
 22292                           	opt stack 28
 22293                           
 22294                           ; BSR set to: 0
 22295                           ;incstack = 0
 22296  0074EA  C001  F007         	movff	memset@p1,memset@p
 22297  0074EE  C002  F008         	movff	memset@p1+1,memset@p+1
 22298  0074F2  D008               	goto	l10200
 22299  0074F4                     l10196:
 22300  0074F4  C007  FFD9         	movff	memset@p,fsr2l
 22301  0074F8  C008  FFDA         	movff	memset@p+1,fsr2h
 22302  0074FC  C003  FFDF         	movff	memset@c,indf2
 22303  007500  4A07               	infsnz	memset@p,f,c
 22304  007502  2A08               	incf	memset@p+1,f,c
 22305  007504                     l10200:
 22306  007504  0605               	decf	memset@n,f,c
 22307  007506  A0D8               	btfss	status,0,c
 22308  007508  0606               	decf	memset@n+1,f,c
 22309  00750A  2805               	incf	memset@n,w,c
 22310  00750C  E1F3               	bnz	l10196
 22311  00750E  2806               	incf	memset@n+1,w,c
 22312  007510  B4D8               	btfsc	status,2,c
 22313  007512  0012               	return	
 22314  007514  D7EF               	goto	l10196
 22315  007516                     __end_of_memset:
 22316                           	opt stack 0
 22317                           tblptru	equ	0xFF8
 22318                           tblptrh	equ	0xFF7
 22319                           tblptrl	equ	0xFF6
 22320                           tablat	equ	0xFF5
 22321                           prodh	equ	0xFF4
 22322                           prodl	equ	0xFF3
 22323                           intcon	equ	0xFF2
 22324                           intcon2	equ	0xFF1
 22325                           intcon3	equ	0xFF0
 22326                           postinc0	equ	0xFEE
 22327                           wreg	equ	0xFE8
 22328                           indf1	equ	0xFE7
 22329                           postdec1	equ	0xFE5
 22330                           plusw1	equ	0xFE3
 22331                           fsr1h	equ	0xFE2
 22332                           fsr1l	equ	0xFE1
 22333                           indf2	equ	0xFDF
 22334                           postinc2	equ	0xFDE
 22335                           postdec2	equ	0xFDD
 22336                           plusw2	equ	0xFDB
 22337                           fsr2h	equ	0xFDA
 22338                           fsr2l	equ	0xFD9
 22339                           status	equ	0xFD8
 22340                           
 22341 ;; *************** function _USBStdGetStatusHandler *****************
 22342 ;; Defined at:
 22343 ;;		line 2131 in file "usb_device.c"
 22344 ;; Parameters:    Size  Location     Type
 22345 ;;		None
 22346 ;; Auto vars:     Size  Location     Type
 22347 ;;  p               2    1[COMRAM] PTR struct __BDT
 22348 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 22349 ;; Return value:  Size  Location     Type
 22350 ;;                  1    wreg      void 
 22351 ;; Registers used:
 22352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22353 ;; Tracked objects:
 22354 ;;		On entry : 0/0
 22355 ;;		On exit  : 0/0
 22356 ;;		Unchanged: 0/0
 22357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22361 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22362 ;;Total ram usage:        3 bytes
 22363 ;; Hardware stack levels used:    1
 22364 ;; This function calls:
 22365 ;;		Nothing
 22366 ;; This function is called by:
 22367 ;;		_USBCheckStdRequest
 22368 ;; This function uses a non-reentrant model
 22369 ;;
 22370                           
 22371                           	psect	text105
 22372  005538                     __ptext105:
 22373                           	opt stack 0
 22374  005538                     _USBStdGetStatusHandler:
 22375                           	opt stack 26
 22376                           
 22377                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 22378                           
 22379                           ;incstack = 0
 22380  005538  0E00               	movlw	0
 22381  00553A  010D               	movlb	13	; () banked
 22382  00553C  6F38               	movwf	56,b	;volatile
 22383                           
 22384                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 22385  00553E  0E00               	movlw	0
 22386  005540  010D               	movlb	13	; () banked
 22387  005542  6F39               	movwf	57,b	;volatile
 22388                           
 22389                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 22390  005544  D03C               	goto	l10668
 22391  005546                     l282:
 22392                           
 22393                           ; BSR set to: 13
 22394                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 22395  005546  0100               	movlb	0	; () banked
 22396  005548  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 22397                           
 22398                           ;usb_device.c: 2147: }
 22399                           ;usb_device.c: 2149: if(RemoteWakeup == 1)
 22400                           
 22401                           ; BSR set to: 13
 22402                           
 22403                           ; BSR set to: 0
 22404                           ;usb_device.c: 2145: {
 22405                           ;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 22406                           
 22407                           ;usb_device.c: 2144: if(0 == 1)
 22408  00554A  0101               	movlb	1	; () banked
 22409  00554C  0597               	decf	_RemoteWakeup& (0+255),w,b
 22410  00554E  A4D8               	btfss	status,2,c
 22411  005550  D042               	goto	l285
 22412                           
 22413                           ; BSR set to: 1
 22414                           ;usb_device.c: 2150: {
 22415                           ;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 22416  005552  010D               	movlb	13	; () banked
 22417  005554  8338               	bsf	56,1,b	;volatile
 22418                           
 22419                           ; BSR set to: 13
 22420                           ;usb_device.c: 2152: }
 22421                           ;usb_device.c: 2153: break;
 22422  005556  D03F               	goto	l285
 22423  005558                     l286:
 22424                           
 22425                           ; BSR set to: 13
 22426                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 22427  005558  0100               	movlb	0	; () banked
 22428  00555A  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 22429                           
 22430                           ;usb_device.c: 2156: break;
 22431  00555C  D03C               	goto	l285
 22432  00555E                     l287:
 22433                           
 22434                           ; BSR set to: 13
 22435                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 22436  00555E  0100               	movlb	0	; () banked
 22437  005560  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 22438                           
 22439                           ;usb_device.c: 2162: {
 22440                           ;usb_device.c: 2163: BDT_ENTRY *p;
 22441                           ;usb_device.c: 2165: if(SetupPkt.EPDir == 0)
 22442  005562  010D               	movlb	13	; () banked
 22443  005564  BF34               	btfsc	52,7,b	;volatile
 22444  005566  D00B               	goto	l10658
 22445                           
 22446                           ; BSR set to: 13
 22447                           ;usb_device.c: 2166: {
 22448                           ;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 22449  005568  010D               	movlb	13	; () banked
 22450  00556A  5134               	movf	52,w,b	;volatile
 22451  00556C  0B0F               	andlw	15
 22452  00556E  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 22453  005570  5001               	movf	??_USBStdGetStatusHandler,w,c
 22454  005572  0D02               	mullw	2
 22455  005574  0E39               	movlw	low _pBDTEntryOut
 22456  005576  24F3               	addwf	prodl,w,c
 22457  005578  6ED9               	movwf	fsr2l,c
 22458  00557A  0E01               	movlw	high _pBDTEntryOut
 22459  00557C  D00A               	goto	L6
 22460  00557E                     l10658:
 22461                           
 22462                           ; BSR set to: 13
 22463                           ;usb_device.c: 2169: else
 22464                           ;usb_device.c: 2170: {
 22465                           ;usb_device.c: 2171: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 22466  00557E  010D               	movlb	13	; () banked
 22467  005580  5134               	movf	52,w,b	;volatile
 22468  005582  0B0F               	andlw	15
 22469  005584  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 22470  005586  5001               	movf	??_USBStdGetStatusHandler,w,c
 22471  005588  0D02               	mullw	2
 22472  00558A  0EEE               	movlw	low _pBDTEntryIn
 22473  00558C  24F3               	addwf	prodl,w,c
 22474  00558E  6ED9               	movwf	fsr2l,c
 22475  005590  0E00               	movlw	high _pBDTEntryIn
 22476  005592                     L6:
 22477  005592  20F4               	addwfc	prodh,w,c
 22478  005594  6EDA               	movwf	fsr2h,c
 22479  005596  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 22480  00559A  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 22481                           
 22482                           ; BSR set to: 13
 22483                           ;usb_device.c: 2172: }
 22484                           ;usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 22485                           
 22486                           ; BSR set to: 13
 22487  00559E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 22488  0055A2  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 22489  0055A6  AEDF               	btfss	indf2,7,c
 22490  0055A8  D016               	goto	l285
 22491                           
 22492                           ; BSR set to: 13
 22493  0055AA  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 22494  0055AE  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 22495  0055B2  A4DF               	btfss	indf2,2,c
 22496  0055B4  D010               	goto	l285
 22497                           
 22498                           ; BSR set to: 13
 22499                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 22500  0055B6  0E01               	movlw	1
 22501  0055B8  010D               	movlb	13	; () banked
 22502  0055BA  6F38               	movwf	56,b	;volatile
 22503                           
 22504                           ; BSR set to: 13
 22505                           ;usb_device.c: 2177: }
 22506                           ;usb_device.c: 2178: }
 22507                           
 22508                           ; BSR set to: 13
 22509                           ;usb_device.c: 2176: break;
 22510  0055BC  D00C               	goto	l285
 22511  0055BE                     l10668:
 22512                           
 22513                           ; BSR set to: 13
 22514  0055BE  010D               	movlb	13	; () banked
 22515  0055C0  5130               	movf	48,w,b	;volatile
 22516  0055C2  0B1F               	andlw	31
 22517                           
 22518                           ; Switch size 1, requested type "space"
 22519                           ; Number of cases is 3, Range of values is 0 to 2
 22520                           ; switch strategies available:
 22521                           ; Name         Instructions Cycles
 22522                           ; simple_byte           10     6 (average)
 22523                           ;	Chosen strategy is simple_byte
 22524  0055C4  0A00               	xorlw	0	; case 0
 22525  0055C6  B4D8               	btfsc	status,2,c
 22526  0055C8  D7BE               	goto	l282
 22527  0055CA  0A01               	xorlw	1	; case 1
 22528  0055CC  B4D8               	btfsc	status,2,c
 22529  0055CE  D7C4               	goto	l286
 22530  0055D0  0A03               	xorlw	3	; case 2
 22531  0055D2  B4D8               	btfsc	status,2,c
 22532  0055D4  D7C4               	goto	l287
 22533  0055D6                     l285:
 22534                           
 22535                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 22536  0055D6  0100               	movlb	0	; () banked
 22537  0055D8  AFEB               	btfss	(_inPipes+3)& (0+255),7,b
 22538  0055DA  0012               	return	
 22539                           
 22540                           ; BSR set to: 0
 22541                           ;usb_device.c: 2181: {
 22542                           ;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 22543  0055DC  0E38               	movlw	56
 22544  0055DE  0100               	movlb	0	; () banked
 22545  0055E0  6FE8               	movwf	_inPipes& (0+255),b
 22546  0055E2  0E0D               	movlw	13
 22547  0055E4  0100               	movlb	0	; () banked
 22548  0055E6  6FE9               	movwf	(_inPipes+1)& (0+255),b
 22549                           
 22550                           ; BSR set to: 0
 22551                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22552  0055E8  0100               	movlb	0	; () banked
 22553  0055EA  81EB               	bsf	(_inPipes+3)& (0+255),0,b
 22554                           
 22555                           ; BSR set to: 0
 22556                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 22557  0055EC  0E02               	movlw	2
 22558  0055EE  0100               	movlb	0	; () banked
 22559  0055F0  6FEC               	movwf	(_inPipes+4)& (0+255),b
 22560  0055F2  0012               	return	
 22561  0055F4                     __end_of_USBStdGetStatusHandler:
 22562                           	opt stack 0
 22563                           tblptru	equ	0xFF8
 22564                           tblptrh	equ	0xFF7
 22565                           tblptrl	equ	0xFF6
 22566                           tablat	equ	0xFF5
 22567                           prodh	equ	0xFF4
 22568                           prodl	equ	0xFF3
 22569                           intcon	equ	0xFF2
 22570                           intcon2	equ	0xFF1
 22571                           intcon3	equ	0xFF0
 22572                           postinc0	equ	0xFEE
 22573                           wreg	equ	0xFE8
 22574                           indf1	equ	0xFE7
 22575                           postdec1	equ	0xFE5
 22576                           plusw1	equ	0xFE3
 22577                           fsr1h	equ	0xFE2
 22578                           fsr1l	equ	0xFE1
 22579                           indf2	equ	0xFDF
 22580                           postinc2	equ	0xFDE
 22581                           postdec2	equ	0xFDD
 22582                           plusw2	equ	0xFDB
 22583                           fsr2h	equ	0xFDA
 22584                           fsr2l	equ	0xFD9
 22585                           status	equ	0xFD8
 22586                           
 22587 ;; *************** function _USBStdGetDscHandler *****************
 22588 ;; Defined at:
 22589 ;;		line 2045 in file "usb_device.c"
 22590 ;; Parameters:    Size  Location     Type
 22591 ;;		None
 22592 ;; Auto vars:     Size  Location     Type
 22593 ;;		None
 22594 ;; Return value:  Size  Location     Type
 22595 ;;                  1    wreg      void 
 22596 ;; Registers used:
 22597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 22598 ;; Tracked objects:
 22599 ;;		On entry : 0/0
 22600 ;;		On exit  : 0/0
 22601 ;;		Unchanged: 0/0
 22602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22606 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22607 ;;Total ram usage:        2 bytes
 22608 ;; Hardware stack levels used:    1
 22609 ;; This function calls:
 22610 ;;		Nothing
 22611 ;; This function is called by:
 22612 ;;		_USBCheckStdRequest
 22613 ;; This function uses a non-reentrant model
 22614 ;;
 22615                           
 22616                           	psect	text106
 22617  003A36                     __ptext106:
 22618                           	opt stack 0
 22619  003A36                     _USBStdGetDscHandler:
 22620                           	opt stack 26
 22621                           
 22622                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 22623                           
 22624                           ; BSR set to: 0
 22625                           ;incstack = 0
 22626  003A36  0E80               	movlw	128
 22627  003A38  010D               	movlb	13	; () banked
 22628  003A3A  1930               	xorwf	48,w,b	;volatile
 22629  003A3C  A4D8               	btfss	status,2,c
 22630  003A3E  0012               	return	
 22631                           
 22632                           ; BSR set to: 13
 22633                           ;usb_device.c: 2048: {
 22634                           ;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 22635  003A40  0EC0               	movlw	192
 22636  003A42  0100               	movlb	0	; () banked
 22637  003A44  6FEB               	movwf	(_inPipes+3)& (0+255),b
 22638                           
 22639                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 22640  003A46  D08F               	goto	l10646
 22641  003A48                     l10620:
 22642                           
 22643                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 22644  003A48  0EA4               	movlw	low _device_dsc
 22645  003A4A  0100               	movlb	0	; () banked
 22646  003A4C  6FE8               	movwf	_inPipes& (0+255),b
 22647  003A4E  0E8F               	movlw	high _device_dsc
 22648  003A50  0100               	movlb	0	; () banked
 22649  003A52  6FE9               	movwf	(_inPipes+1)& (0+255),b
 22650                           
 22651                           ; BSR set to: 0
 22652                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 22653  003A54  0E00               	movlw	0
 22654  003A56  0100               	movlb	0	; () banked
 22655  003A58  6FED               	movwf	(_inPipes+5)& (0+255),b
 22656  003A5A  0E12               	movlw	18
 22657  003A5C  6FEC               	movwf	(_inPipes+4)& (0+255),b
 22658                           
 22659                           ;usb_device.c: 2060: break;
 22660  003A5E  0012               	return	
 22661  003A60                     l10624:
 22662                           
 22663                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 22664  003A60  010D               	movlb	13	; () banked
 22665  003A62  5132               	movf	50,w,b	;volatile
 22666  003A64  A4D8               	btfss	status,2,c
 22667  003A66  D047               	goto	l10632
 22668                           
 22669                           ; BSR set to: 13
 22670                           ;usb_device.c: 2066: {
 22671                           ;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 22672  003A68  010D               	movlb	13	; () banked
 22673  003A6A  5132               	movf	50,w,b	;volatile
 22674  003A6C  0D02               	mullw	2
 22675  003A6E  0EA5               	movlw	low _USB_CD_Ptr
 22676  003A70  24F3               	addwf	prodl,w,c
 22677  003A72  6EF6               	movwf	tblptrl,c
 22678  003A74  0E8E               	movlw	high _USB_CD_Ptr
 22679  003A76  20F4               	addwfc	prodh,w,c
 22680  003A78  6EF7               	movwf	tblptrh,c
 22681  003A7A                     	if	1	;There are 3 active tblptr bytes
 22682  003A7A  6AF8               	clrf	tblptru,c
 22683  003A7C  0E00               	movlw	low (__mediumconst shr (0+16))
 22684  003A7E  22F8               	addwfc	tblptru,f,c
 22685  003A80                     	endif
 22686  003A80  0009               	tblrd		*+
 22687  003A82  CFF5 F0E8          	movff	tablat,_inPipes
 22688  003A86  000A               	tblrd		*-
 22689  003A88  CFF5 F0E9          	movff	tablat,_inPipes+1
 22690                           
 22691                           ; BSR set to: 13
 22692                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 22693  003A8C  0E02               	movlw	2
 22694  003A8E  0100               	movlb	0	; () banked
 22695  003A90  25E8               	addwf	_inPipes& (0+255),w,b
 22696  003A92  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 22697  003A94  0E00               	movlw	0
 22698  003A96  0100               	movlb	0	; () banked
 22699  003A98  21E9               	addwfc	(_inPipes+1)& (0+255),w,b
 22700  003A9A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 22701  003A9C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 22702  003AA0  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 22703  003AA4  6AF8               	clrf	tblptru,c
 22704  003AA6  0E0E               	movlw	(high __ramtop+-1)
 22705  003AA8  64F7               	cpfsgt	tblptrh,c
 22706  003AAA  D003               	bra	u7717
 22707  003AAC  0008               	tblrd		*
 22708  003AAE  50F5               	movf	tablat,w,c
 22709  003AB0  D005               	bra	u7710
 22710  003AB2                     u7717:
 22711  003AB2  CFF6 FFE9          	movff	tblptrl,fsr0l
 22712  003AB6  CFF7 FFEA          	movff	tblptrh,fsr0h
 22713  003ABA  50EF               	movf	indf0,w,c
 22714  003ABC                     u7710:
 22715  003ABC  0100               	movlb	0	; () banked
 22716  003ABE  6FEC               	movwf	(_inPipes+4)& (0+255),b
 22717                           
 22718                           ; BSR set to: 0
 22719                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 22720  003AC0  0E03               	movlw	3
 22721  003AC2  0100               	movlb	0	; () banked
 22722  003AC4  25E8               	addwf	_inPipes& (0+255),w,b
 22723  003AC6  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 22724  003AC8  0E00               	movlw	0
 22725  003ACA  0100               	movlb	0	; () banked
 22726  003ACC  21E9               	addwfc	(_inPipes+1)& (0+255),w,b
 22727  003ACE  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 22728  003AD0  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 22729  003AD4  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 22730  003AD8  6AF8               	clrf	tblptru,c
 22731  003ADA  0E0E               	movlw	(high __ramtop+-1)
 22732  003ADC  64F7               	cpfsgt	tblptrh,c
 22733  003ADE  D003               	bra	u7727
 22734  003AE0  0008               	tblrd		*
 22735  003AE2  50F5               	movf	tablat,w,c
 22736  003AE4  D005               	bra	u7720
 22737  003AE6                     u7727:
 22738  003AE6  CFF6 FFE9          	movff	tblptrl,fsr0l
 22739  003AEA  CFF7 FFEA          	movff	tblptrh,fsr0h
 22740  003AEE  50EF               	movf	indf0,w,c
 22741  003AF0                     u7720:
 22742  003AF0  0100               	movlb	0	; () banked
 22743  003AF2  6FED               	movwf	(_inPipes+5)& (0+255),b
 22744                           
 22745                           ;usb_device.c: 2078: }
 22746  003AF4  0012               	return	
 22747  003AF6                     l10632:
 22748                           
 22749                           ;usb_device.c: 2079: else
 22750                           ;usb_device.c: 2080: {
 22751                           ;usb_device.c: 2081: inPipes[0].info.Val = 0;
 22752  003AF6  0E00               	movlw	0
 22753  003AF8  0100               	movlb	0	; () banked
 22754  003AFA  6FEB               	movwf	(_inPipes+3)& (0+255),b
 22755                           
 22756                           ; BSR set to: 0
 22757                           ;usb_device.c: 2082: }
 22758                           ;usb_device.c: 2083: break;
 22759  003AFC  0012               	return	
 22760  003AFE                     l10634:
 22761                           
 22762                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 22763  003AFE  0E04               	movlw	4
 22764  003B00  010D               	movlb	13	; () banked
 22765  003B02  6132               	cpfslt	50,b	;volatile
 22766  003B04  D028               	goto	l10640
 22767                           
 22768                           ; BSR set to: 13
 22769                           ;usb_device.c: 2089: {
 22770                           ;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 22771  003B06  010D               	movlb	13	; () banked
 22772  003B08  5132               	movf	50,w,b	;volatile
 22773  003B0A  0D02               	mullw	2
 22774  003B0C  0E7B               	movlw	low _USB_SD_Ptr
 22775  003B0E  24F3               	addwf	prodl,w,c
 22776  003B10  6EF6               	movwf	tblptrl,c
 22777  003B12  0E8E               	movlw	high _USB_SD_Ptr
 22778  003B14  20F4               	addwfc	prodh,w,c
 22779  003B16  6EF7               	movwf	tblptrh,c
 22780  003B18                     	if	1	;There are 3 active tblptr bytes
 22781  003B18  6AF8               	clrf	tblptru,c
 22782  003B1A  0E00               	movlw	low (__mediumconst shr (0+16))
 22783  003B1C  22F8               	addwfc	tblptru,f,c
 22784  003B1E                     	endif
 22785  003B1E  0009               	tblrd		*+
 22786  003B20  CFF5 F0E8          	movff	tablat,_inPipes
 22787  003B24  000A               	tblrd		*-
 22788  003B26  CFF5 F0E9          	movff	tablat,_inPipes+1
 22789                           
 22790                           ; BSR set to: 13
 22791                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 22792  003B2A  C0E8  FFF6         	movff	_inPipes,tblptrl
 22793  003B2E  C0E9  FFF7         	movff	_inPipes+1,tblptrh
 22794  003B32  6AF8               	clrf	tblptru,c
 22795  003B34  0E0E               	movlw	(high __ramtop+-1)
 22796  003B36  64F7               	cpfsgt	tblptrh,c
 22797  003B38  D003               	bra	u7747
 22798  003B3A  0008               	tblrd		*
 22799  003B3C  50F5               	movf	tablat,w,c
 22800  003B3E  D005               	bra	u7740
 22801  003B40                     u7747:
 22802  003B40  CFF6 FFE9          	movff	tblptrl,fsr0l
 22803  003B44  CFF7 FFEA          	movff	tblptrh,fsr0h
 22804  003B48  50EF               	movf	indf0,w,c
 22805  003B4A                     u7740:
 22806  003B4A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 22807  003B4C  5001               	movf	??_USBStdGetDscHandler,w,c
 22808  003B4E  0100               	movlb	0	; () banked
 22809  003B50  6FEC               	movwf	(_inPipes+4)& (0+255),b
 22810  003B52  6BED               	clrf	(_inPipes+5)& (0+255),b
 22811                           
 22812                           ;usb_device.c: 2094: }
 22813  003B54  0012               	return	
 22814  003B56                     l10640:
 22815                           
 22816                           ;usb_device.c: 2104: else
 22817                           ;usb_device.c: 2105: {
 22818                           ;usb_device.c: 2106: inPipes[0].info.Val = 0;
 22819  003B56  0E00               	movlw	0
 22820  003B58  0100               	movlb	0	; () banked
 22821  003B5A  6FEB               	movwf	(_inPipes+3)& (0+255),b
 22822                           
 22823                           ; BSR set to: 0
 22824                           ;usb_device.c: 2107: }
 22825                           ;usb_device.c: 2108: break;
 22826  003B5C  0012               	return	
 22827  003B5E                     l10642:
 22828                           
 22829                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 22830  003B5E  0E00               	movlw	0
 22831  003B60  0100               	movlb	0	; () banked
 22832  003B62  6FEB               	movwf	(_inPipes+3)& (0+255),b
 22833                           
 22834                           ; BSR set to: 0
 22835                           ;usb_device.c: 2112: }
 22836                           
 22837                           ;usb_device.c: 2111: break;
 22838  003B64  0012               	return	
 22839  003B66                     l10646:
 22840                           
 22841                           ; BSR set to: 0
 22842  003B66  010D               	movlb	13	; () banked
 22843  003B68  5133               	movf	51,w,b	;volatile
 22844                           
 22845                           ; Switch size 1, requested type "space"
 22846                           ; Number of cases is 3, Range of values is 1 to 3
 22847                           ; switch strategies available:
 22848                           ; Name         Instructions Cycles
 22849                           ; simple_byte           10     6 (average)
 22850                           ;	Chosen strategy is simple_byte
 22851  003B6A  0A01               	xorlw	1	; case 1
 22852  003B6C  B4D8               	btfsc	status,2,c
 22853  003B6E  D76C               	goto	l10620
 22854  003B70  0A03               	xorlw	3	; case 2
 22855  003B72  B4D8               	btfsc	status,2,c
 22856  003B74  D775               	goto	l10624
 22857  003B76  0A01               	xorlw	1	; case 3
 22858  003B78  B4D8               	btfsc	status,2,c
 22859  003B7A  D7C1               	goto	l10634
 22860  003B7C  D7F0               	goto	l10642
 22861  003B7E                     __end_of_USBStdGetDscHandler:
 22862                           	opt stack 0
 22863                           tblptru	equ	0xFF8
 22864                           tblptrh	equ	0xFF7
 22865                           tblptrl	equ	0xFF6
 22866                           tablat	equ	0xFF5
 22867                           prodh	equ	0xFF4
 22868                           prodl	equ	0xFF3
 22869                           intcon	equ	0xFF2
 22870                           intcon2	equ	0xFF1
 22871                           intcon3	equ	0xFF0
 22872                           indf0	equ	0xFEF
 22873                           postinc0	equ	0xFEE
 22874                           fsr0h	equ	0xFEA
 22875                           fsr0l	equ	0xFE9
 22876                           wreg	equ	0xFE8
 22877                           indf1	equ	0xFE7
 22878                           postdec1	equ	0xFE5
 22879                           plusw1	equ	0xFE3
 22880                           fsr1h	equ	0xFE2
 22881                           fsr1l	equ	0xFE1
 22882                           indf2	equ	0xFDF
 22883                           postinc2	equ	0xFDE
 22884                           postdec2	equ	0xFDD
 22885                           plusw2	equ	0xFDB
 22886                           fsr2h	equ	0xFDA
 22887                           fsr2l	equ	0xFD9
 22888                           status	equ	0xFD8
 22889                           
 22890 ;; *************** function _USBStdFeatureReqHandler *****************
 22891 ;; Defined at:
 22892 ;;		line 2756 in file "usb_device.c"
 22893 ;; Parameters:    Size  Location     Type
 22894 ;;		None
 22895 ;; Auto vars:     Size  Location     Type
 22896 ;;  p               2   27[COMRAM] PTR struct __BDT
 22897 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 22898 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 22899 ;;		 -> UEP0(1), 
 22900 ;;  current_ep_d    1   26[COMRAM] struct .
 22901 ;; Return value:  Size  Location     Type
 22902 ;;                  1    wreg      void 
 22903 ;; Registers used:
 22904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 22905 ;; Tracked objects:
 22906 ;;		On entry : 0/0
 22907 ;;		On exit  : 0/0
 22908 ;;		Unchanged: 0/0
 22909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22911 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22913 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22914 ;;Total ram usage:        6 bytes
 22915 ;; Hardware stack levels used:    1
 22916 ;; Hardware stack levels required when called:    4
 22917 ;; This function calls:
 22918 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22919 ;; This function is called by:
 22920 ;;		_USBCheckStdRequest
 22921 ;; This function uses a non-reentrant model
 22922 ;;
 22923                           
 22924                           	psect	text107
 22925  001FBA                     __ptext107:
 22926                           	opt stack 0
 22927  001FBA                     _USBStdFeatureReqHandler:
 22928                           	opt stack 22
 22929                           
 22930                           ;usb_device.c: 2758: BDT_ENTRY *p;
 22931                           ;usb_device.c: 2759: EP_STATUS current_ep_data;
 22932                           ;usb_device.c: 2763: unsigned char* pUEP;
 22933                           ;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&
 22934                           ;usb_device.c: 2802: (SetupPkt.Recipient == (0x00)))
 22935                           
 22936                           ;incstack = 0
 22937  001FBA  010D               	movlb	13	; () banked
 22938  001FBC  0532               	decf	50,w,b	;volatile
 22939  001FBE  A4D8               	btfss	status,2,c
 22940  001FC0  D012               	goto	l359
 22941                           
 22942                           ; BSR set to: 13
 22943  001FC2  010D               	movlb	13	; () banked
 22944  001FC4  5130               	movf	48,w,b	;volatile
 22945  001FC6  0B1F               	andlw	31
 22946  001FC8  0900               	iorlw	0
 22947  001FCA  A4D8               	btfss	status,2,c
 22948  001FCC  D00C               	goto	l359
 22949                           
 22950                           ; BSR set to: 13
 22951                           ;usb_device.c: 2803: {
 22952                           ;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 22953  001FCE  0100               	movlb	0	; () banked
 22954  001FD0  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 22955                           
 22956                           ; BSR set to: 0
 22957                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 22958  001FD2  0E03               	movlw	3
 22959  001FD4  010D               	movlb	13	; () banked
 22960  001FD6  1931               	xorwf	49,w,b	;volatile
 22961  001FD8  A4D8               	btfss	status,2,c
 22962  001FDA  D002               	goto	l10686
 22963                           
 22964                           ; BSR set to: 13
 22965                           ;usb_device.c: 2806: RemoteWakeup = 1;
 22966  001FDC  0E01               	movlw	1
 22967  001FDE  D001               	goto	L7
 22968  001FE0                     l10686:
 22969                           
 22970                           ;usb_device.c: 2807: else
 22971                           ;usb_device.c: 2808: RemoteWakeup = 0;
 22972  001FE0  0E00               	movlw	0
 22973  001FE2                     L7:
 22974  001FE2  0101               	movlb	1	; () banked
 22975  001FE4  6F97               	movwf	_RemoteWakeup& (0+255),b
 22976  001FE6                     l359:
 22977                           
 22978                           ;usb_device.c: 2809: }
 22979                           ;usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&
 22980                           ;usb_device.c: 2813: (SetupPkt.Recipient == (0x02))&&
 22981                           ;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 22982                           ;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 22983  001FE6  010D               	movlb	13	; () banked
 22984  001FE8  5132               	movf	50,w,b	;volatile
 22985  001FEA  A4D8               	btfss	status,2,c
 22986  001FEC  0012               	return	
 22987                           
 22988                           ; BSR set to: 13
 22989  001FEE  010D               	movlb	13	; () banked
 22990  001FF0  5130               	movf	48,w,b	;volatile
 22991  001FF2  0B1F               	andlw	31
 22992  001FF4  0A02               	xorlw	2
 22993  001FF6  A4D8               	btfss	status,2,c
 22994  001FF8  0012               	return	
 22995                           
 22996                           ; BSR set to: 13
 22997  001FFA  010D               	movlb	13	; () banked
 22998  001FFC  5134               	movf	52,w,b	;volatile
 22999  001FFE  0B0F               	andlw	15
 23000  002000  0900               	iorlw	0
 23001  002002  B4D8               	btfsc	status,2,c
 23002  002004  0012               	return	
 23003                           
 23004                           ; BSR set to: 13
 23005  002006  010D               	movlb	13	; () banked
 23006  002008  5134               	movf	52,w,b	;volatile
 23007  00200A  0B0F               	andlw	15
 23008  00200C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23009  00200E  0E03               	movlw	3
 23010  002010  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 23011  002012  0012               	return	
 23012                           
 23013                           ; BSR set to: 13
 23014  002014  0E20               	movlw	32
 23015  002016  0100               	movlb	0	; () banked
 23016  002018  19FC               	xorwf	_USBDeviceState& (0+255),w,b
 23017  00201A  A4D8               	btfss	status,2,c
 23018  00201C  0012               	return	
 23019                           
 23020                           ; BSR set to: 0
 23021                           ;usb_device.c: 2816: {
 23022                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 23023  00201E  0100               	movlb	0	; () banked
 23024  002020  8FEB               	bsf	(_inPipes+3)& (0+255),7,b
 23025                           
 23026                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 23027  002022  010D               	movlb	13	; () banked
 23028  002024  BF34               	btfsc	52,7,b	;volatile
 23029  002026  D01B               	goto	l10700
 23030                           
 23031                           ; BSR set to: 13
 23032                           ;usb_device.c: 2823: {
 23033                           ;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 23034  002028  010D               	movlb	13	; () banked
 23035  00202A  5134               	movf	52,w,b	;volatile
 23036  00202C  0B0F               	andlw	15
 23037  00202E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23038  002030  5018               	movf	??_USBStdFeatureReqHandler,w,c
 23039  002032  0D02               	mullw	2
 23040  002034  0E39               	movlw	low _pBDTEntryOut
 23041  002036  24F3               	addwf	prodl,w,c
 23042  002038  6ED9               	movwf	fsr2l,c
 23043  00203A  0E01               	movlw	high _pBDTEntryOut
 23044  00203C  20F4               	addwfc	prodh,w,c
 23045  00203E  6EDA               	movwf	fsr2h,c
 23046  002040  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 23047  002044  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 23048                           
 23049                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 23050  002048  010D               	movlb	13	; () banked
 23051  00204A  5134               	movf	52,w,b	;volatile
 23052  00204C  0B0F               	andlw	15
 23053  00204E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23054  002050  5018               	movf	??_USBStdFeatureReqHandler,w,c
 23055  002052  0D01               	mullw	1
 23056  002054  0E66               	movlw	low _ep_data_out
 23057  002056  24F3               	addwf	prodl,w,c
 23058  002058  6ED9               	movwf	fsr2l,c
 23059  00205A  0E01               	movlw	high _ep_data_out
 23060  00205C  D01A               	goto	L8
 23061  00205E                     l10700:
 23062                           
 23063                           ; BSR set to: 13
 23064                           ;usb_device.c: 2827: else
 23065                           ;usb_device.c: 2828: {
 23066                           ;usb_device.c: 2829: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 23067  00205E  010D               	movlb	13	; () banked
 23068  002060  5134               	movf	52,w,b	;volatile
 23069  002062  0B0F               	andlw	15
 23070  002064  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23071  002066  5018               	movf	??_USBStdFeatureReqHandler,w,c
 23072  002068  0D02               	mullw	2
 23073  00206A  0EEE               	movlw	low _pBDTEntryIn
 23074  00206C  24F3               	addwf	prodl,w,c
 23075  00206E  6ED9               	movwf	fsr2l,c
 23076  002070  0E00               	movlw	high _pBDTEntryIn
 23077  002072  20F4               	addwfc	prodh,w,c
 23078  002074  6EDA               	movwf	fsr2h,c
 23079  002076  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 23080  00207A  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 23081                           
 23082                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 23083  00207E  010D               	movlb	13	; () banked
 23084  002080  5134               	movf	52,w,b	;volatile
 23085  002082  0B0F               	andlw	15
 23086  002084  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23087  002086  5018               	movf	??_USBStdFeatureReqHandler,w,c
 23088  002088  0D01               	mullw	1
 23089  00208A  0E69               	movlw	low _ep_data_in
 23090  00208C  24F3               	addwf	prodl,w,c
 23091  00208E  6ED9               	movwf	fsr2l,c
 23092  002090  0E01               	movlw	high _ep_data_in
 23093  002092                     L8:
 23094  002092  20F4               	addwfc	prodh,w,c
 23095  002094  6EDA               	movwf	fsr2h,c
 23096  002096  50DF               	movf	indf2,w,c
 23097  002098  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 23098                           
 23099                           ; BSR set to: 13
 23100                           ;usb_device.c: 2831: }
 23101                           ;usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 23102                           
 23103                           ; BSR set to: 13
 23104  00209A  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 23105  00209C  D006               	goto	l10706
 23106                           
 23107                           ; BSR set to: 13
 23108                           ;usb_device.c: 2838: {
 23109                           ;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 23110  00209E  0EFB               	movlw	251
 23111  0020A0  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 23112  0020A2  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 23113  0020A4  0EFF               	movlw	255
 23114  0020A6  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 23115  0020A8  D004               	goto	L9
 23116  0020AA                     l10706:
 23117                           
 23118                           ; BSR set to: 13
 23119                           ;usb_device.c: 2841: else
 23120                           ;usb_device.c: 2842: {
 23121                           ;usb_device.c: 2843: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
 23122  0020AA  0E04               	movlw	4
 23123  0020AC  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 23124  0020AE  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 23125  0020B0  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 23126  0020B2                     L9:
 23127  0020B2  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 23128                           
 23129                           ; BSR set to: 13
 23130                           ;usb_device.c: 2844: }
 23131                           ;usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 23132                           
 23133                           ; BSR set to: 13
 23134  0020B4  010D               	movlb	13	; () banked
 23135  0020B6  BF34               	btfsc	52,7,b	;volatile
 23136  0020B8  D00B               	goto	l10712
 23137                           
 23138                           ; BSR set to: 13
 23139                           ;usb_device.c: 2850: {
 23140                           ;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 23141  0020BA  010D               	movlb	13	; () banked
 23142  0020BC  5134               	movf	52,w,b	;volatile
 23143  0020BE  0B0F               	andlw	15
 23144  0020C0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23145  0020C2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 23146  0020C4  0D02               	mullw	2
 23147  0020C6  0E39               	movlw	low _pBDTEntryOut
 23148  0020C8  24F3               	addwf	prodl,w,c
 23149  0020CA  6ED9               	movwf	fsr2l,c
 23150  0020CC  0E01               	movlw	high _pBDTEntryOut
 23151  0020CE  D00A               	goto	L10
 23152  0020D0                     l10712:
 23153                           
 23154                           ; BSR set to: 13
 23155                           ;usb_device.c: 2853: else
 23156                           ;usb_device.c: 2854: {
 23157                           ;usb_device.c: 2855: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 23158  0020D0  010D               	movlb	13	; () banked
 23159  0020D2  5134               	movf	52,w,b	;volatile
 23160  0020D4  0B0F               	andlw	15
 23161  0020D6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23162  0020D8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 23163  0020DA  0D02               	mullw	2
 23164  0020DC  0EEE               	movlw	low _pBDTEntryIn
 23165  0020DE  24F3               	addwf	prodl,w,c
 23166  0020E0  6ED9               	movwf	fsr2l,c
 23167  0020E2  0E00               	movlw	high _pBDTEntryIn
 23168  0020E4                     L10:
 23169  0020E4  20F4               	addwfc	prodh,w,c
 23170  0020E6  6EDA               	movwf	fsr2h,c
 23171  0020E8  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 23172  0020EC  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 23173                           
 23174                           ; BSR set to: 13
 23175                           ;usb_device.c: 2856: }
 23176                           ;usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 23177                           
 23178                           ; BSR set to: 13
 23179  0020F0  0E03               	movlw	3
 23180  0020F2  010D               	movlb	13	; () banked
 23181  0020F4  1931               	xorwf	49,w,b	;volatile
 23182  0020F6  A4D8               	btfss	status,2,c
 23183  0020F8  D02F               	goto	l10728
 23184                           
 23185                           ; BSR set to: 13
 23186                           ;usb_device.c: 2860: {
 23187                           ;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 23188  0020FA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23189  0020FE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23190  002102  AEDF               	btfss	indf2,7,c
 23191  002104  D01C               	goto	l10724
 23192                           
 23193                           ; BSR set to: 13
 23194                           ;usb_device.c: 2862: {
 23195                           ;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 23196  002106  010D               	movlb	13	; () banked
 23197  002108  BF34               	btfsc	52,7,b	;volatile
 23198  00210A  D00B               	goto	l10722
 23199                           
 23200                           ; BSR set to: 13
 23201                           ;usb_device.c: 2866: {
 23202                           ;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 23203  00210C  010D               	movlb	13	; () banked
 23204  00210E  5134               	movf	52,w,b	;volatile
 23205  002110  0B0F               	andlw	15
 23206  002112  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23207  002114  5018               	movf	??_USBStdFeatureReqHandler,w,c
 23208  002116  0D01               	mullw	1
 23209  002118  0E66               	movlw	low _ep_data_out
 23210  00211A  24F3               	addwf	prodl,w,c
 23211  00211C  6ED9               	movwf	fsr2l,c
 23212  00211E  0E01               	movlw	high _ep_data_out
 23213  002120  D00A               	goto	L11
 23214  002122                     l10722:
 23215                           
 23216                           ;usb_device.c: 2869: else
 23217                           ;usb_device.c: 2870: {
 23218                           ;usb_device.c: 2871: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 23219  002122  010D               	movlb	13	; () banked
 23220  002124  5134               	movf	52,w,b	;volatile
 23221  002126  0B0F               	andlw	15
 23222  002128  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23223  00212A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 23224  00212C  0D01               	mullw	1
 23225  00212E  0E69               	movlw	low _ep_data_in
 23226  002130  24F3               	addwf	prodl,w,c
 23227  002132  6ED9               	movwf	fsr2l,c
 23228  002134  0E01               	movlw	high _ep_data_in
 23229  002136                     L11:
 23230  002136  20F4               	addwfc	prodh,w,c
 23231  002138  6EDA               	movwf	fsr2h,c
 23232  00213A  0101               	movlb	1	; () banked
 23233  00213C  82DF               	bsf	indf2,1,c
 23234  00213E                     l10724:
 23235                           
 23236                           ;usb_device.c: 2872: }
 23237                           ;usb_device.c: 2873: }
 23238                           ;usb_device.c: 2876: p->STAT.Val |= 0x04;
 23239  00213E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23240  002142  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23241  002146  0E00               	movlw	0
 23242  002148  84DB               	bsf	plusw2,2,c
 23243                           
 23244                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 23245  00214A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23246  00214E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23247  002152  0E00               	movlw	0
 23248  002154  8EDB               	bsf	plusw2,7,c
 23249                           
 23250                           ;usb_device.c: 2878: }
 23251  002156  0012               	return	
 23252  002158                     l10728:
 23253                           
 23254                           ;usb_device.c: 2879: else
 23255                           ;usb_device.c: 2880: {
 23256                           ;usb_device.c: 2884: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 23257  002158  0E04               	movlw	4
 23258  00215A  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 23259  00215C  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 23260  00215E  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 23261  002160  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 23262                           
 23263                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 23264  002162  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23265  002166  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23266  00216A  AEDF               	btfss	indf2,7,c
 23267  00216C  D01B               	goto	l10738
 23268                           
 23269                           ;usb_device.c: 2887: {
 23270                           ;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 23271  00216E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23272  002172  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23273  002176  0E7F               	movlw	127
 23274  002178  16DF               	andwf	indf2,f,c
 23275                           
 23276                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 23277  00217A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23278  00217E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23279  002182  0E00               	movlw	0
 23280  002184  8CDB               	bsf	plusw2,6,c
 23281                           
 23282                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 23283  002186  0E00               	movlw	0
 23284  002188  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23285  00218A  0E05               	movlw	5
 23286  00218C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23287  00218E  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 23288  002192  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 23289  002196  0E00               	movlw	0
 23290  002198  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23291  00219A  0E02               	movlw	2
 23292  00219C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23293  00219E  EC4D  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23294                           
 23295                           ;usb_device.c: 2893: }
 23296  0021A2  D006               	goto	l10740
 23297  0021A4                     l10738:
 23298                           
 23299                           ;usb_device.c: 2894: else
 23300                           ;usb_device.c: 2895: {
 23301                           ;usb_device.c: 2897: p->STAT.Val |= 0x40;
 23302  0021A4  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23303  0021A8  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23304  0021AC  0E00               	movlw	0
 23305  0021AE  8CDB               	bsf	plusw2,6,c
 23306  0021B0                     l10740:
 23307                           
 23308                           ;usb_device.c: 2898: }
 23309                           ;usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 23310  0021B0  0E04               	movlw	4
 23311  0021B2  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 23312  0021B4  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 23313  0021B6  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 23314  0021B8  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 23315                           
 23316                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 23317  0021BA  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 23318  0021BC  D006               	goto	l378
 23319  0021BE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23320  0021C2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23321  0021C6  AEDF               	btfss	indf2,7,c
 23322  0021C8  D031               	goto	l10754
 23323  0021CA                     l378:
 23324                           
 23325                           ;usb_device.c: 2909: {
 23326                           ;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 23327  0021CA  010D               	movlb	13	; () banked
 23328  0021CC  BF34               	btfsc	52,7,b	;volatile
 23329  0021CE  D00B               	goto	l10748
 23330                           
 23331                           ; BSR set to: 13
 23332                           ;usb_device.c: 2911: {
 23333                           ;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 23334  0021D0  010D               	movlb	13	; () banked
 23335  0021D2  5134               	movf	52,w,b	;volatile
 23336  0021D4  0B0F               	andlw	15
 23337  0021D6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23338  0021D8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 23339  0021DA  0D01               	mullw	1
 23340  0021DC  0E66               	movlw	low _ep_data_out
 23341  0021DE  24F3               	addwf	prodl,w,c
 23342  0021E0  6ED9               	movwf	fsr2l,c
 23343  0021E2  0E01               	movlw	high _ep_data_out
 23344  0021E4  D00A               	goto	L12
 23345  0021E6                     l10748:
 23346                           
 23347                           ;usb_device.c: 2914: else
 23348                           ;usb_device.c: 2915: {
 23349                           ;usb_device.c: 2916: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 23350  0021E6  010D               	movlb	13	; () banked
 23351  0021E8  5134               	movf	52,w,b	;volatile
 23352  0021EA  0B0F               	andlw	15
 23353  0021EC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23354  0021EE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 23355  0021F0  0D01               	mullw	1
 23356  0021F2  0E69               	movlw	low _ep_data_in
 23357  0021F4  24F3               	addwf	prodl,w,c
 23358  0021F6  6ED9               	movwf	fsr2l,c
 23359  0021F8  0E01               	movlw	high _ep_data_in
 23360  0021FA                     L12:
 23361  0021FA  20F4               	addwfc	prodh,w,c
 23362  0021FC  6EDA               	movwf	fsr2h,c
 23363  0021FE  0101               	movlb	1	; () banked
 23364  002200  92DF               	bcf	indf2,1,c
 23365                           
 23366                           ; BSR set to: 1
 23367                           ;usb_device.c: 2917: }
 23368                           ;usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 23369                           
 23370                           ; BSR set to: 1
 23371  002202  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23372  002206  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23373  00220A  0E3B               	movlw	59
 23374  00220C  16DF               	andwf	indf2,f,c
 23375                           
 23376                           ; BSR set to: 1
 23377                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 23378  00220E  0E00               	movlw	0
 23379  002210  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23380  002212  0E05               	movlw	5
 23381  002214  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23382  002216  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 23383  00221A  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 23384  00221E  0E00               	movlw	0
 23385  002220  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23386  002222  0E02               	movlw	2
 23387  002224  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23388  002226  EC4D  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23389                           
 23390                           ;usb_device.c: 2923: }
 23391  00222A  D006               	goto	l10756
 23392  00222C                     l10754:
 23393                           
 23394                           ;usb_device.c: 2924: else
 23395                           ;usb_device.c: 2925: {
 23396                           ;usb_device.c: 2927: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 23397  00222C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23398  002230  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23399  002234  0E3B               	movlw	59
 23400  002236  16DF               	andwf	indf2,f,c
 23401  002238                     l10756:
 23402                           
 23403                           ;usb_device.c: 2928: }
 23404                           ;usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 23405  002238  010D               	movlb	13	; () banked
 23406  00223A  5134               	movf	52,w,b	;volatile
 23407  00223C  0B0F               	andlw	15
 23408  00223E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23409  002240  5018               	movf	??_USBStdFeatureReqHandler,w,c
 23410  002242  0D01               	mullw	1
 23411  002244  0E26               	movlw	38
 23412  002246  24F3               	addwf	prodl,w,c
 23413  002248  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 23414  00224A  0E0F               	movlw	15
 23415  00224C  20F4               	addwfc	prodh,w,c
 23416  00224E  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 23417                           
 23418                           ; BSR set to: 13
 23419                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 23420  002250  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 23421  002254  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 23422  002258  0EFE               	movlw	254
 23423  00225A  16DF               	andwf	indf2,f,c
 23424                           
 23425                           ; BSR set to: 13
 23426  00225C  0012               	return	
 23427  00225E                     __end_of_USBStdFeatureReqHandler:
 23428                           	opt stack 0
 23429                           tblptru	equ	0xFF8
 23430                           tblptrh	equ	0xFF7
 23431                           tblptrl	equ	0xFF6
 23432                           tablat	equ	0xFF5
 23433                           prodh	equ	0xFF4
 23434                           prodl	equ	0xFF3
 23435                           intcon	equ	0xFF2
 23436                           intcon2	equ	0xFF1
 23437                           intcon3	equ	0xFF0
 23438                           indf0	equ	0xFEF
 23439                           postinc0	equ	0xFEE
 23440                           fsr0h	equ	0xFEA
 23441                           fsr0l	equ	0xFE9
 23442                           wreg	equ	0xFE8
 23443                           indf1	equ	0xFE7
 23444                           postdec1	equ	0xFE5
 23445                           plusw1	equ	0xFE3
 23446                           fsr1h	equ	0xFE2
 23447                           fsr1l	equ	0xFE1
 23448                           indf2	equ	0xFDF
 23449                           postinc2	equ	0xFDE
 23450                           postdec2	equ	0xFDD
 23451                           plusw2	equ	0xFDB
 23452                           fsr2h	equ	0xFDA
 23453                           fsr2l	equ	0xFD9
 23454                           status	equ	0xFD8
 23455                           
 23456 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 23457 ;; Defined at:
 23458 ;;		line 54 in file "usb_events.c"
 23459 ;; Parameters:    Size  Location     Type
 23460 ;;  event           2   15[COMRAM] enum E8309
 23461 ;;  pdata           2   17[COMRAM] PTR void 
 23462 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 23463 ;;		 -> BDT(48), 
 23464 ;;  size            2   19[COMRAM] unsigned int 
 23465 ;; Auto vars:     Size  Location     Type
 23466 ;;		None
 23467 ;; Return value:  Size  Location     Type
 23468 ;;                  1    wreg      unsigned char 
 23469 ;; Registers used:
 23470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 23471 ;; Tracked objects:
 23472 ;;		On entry : 0/0
 23473 ;;		On exit  : 0/0
 23474 ;;		Unchanged: 0/0
 23475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23476 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23478 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23479 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23480 ;;Total ram usage:        8 bytes
 23481 ;; Hardware stack levels used:    1
 23482 ;; Hardware stack levels required when called:    3
 23483 ;; This function calls:
 23484 ;;		_APP_DeviceCustomHIDInitialize
 23485 ;;		_APP_DeviceMSDInitialize
 23486 ;;		_MSDTransferTerminated
 23487 ;;		_SYSTEM_Initialize
 23488 ;;		_USBCheckHIDRequest
 23489 ;;		_USBCheckMSDRequest
 23490 ;; This function is called by:
 23491 ;;		_USBDeviceTasks
 23492 ;;		_USBStdSetCfgHandler
 23493 ;;		_USBSuspend
 23494 ;;		_USBWakeFromSuspend
 23495 ;;		_USBCtrlTrfSetupHandler
 23496 ;;		_USBCheckStdRequest
 23497 ;;		_USBStdFeatureReqHandler
 23498 ;; This function uses a non-reentrant model
 23499 ;;
 23500                           
 23501                           	psect	text108
 23502  005E9A                     __ptext108:
 23503                           	opt stack 0
 23504  005E9A                     _USER_USB_CALLBACK_EVENT_HANDLER:
 23505                           	opt stack 26
 23506                           
 23507                           ;usb_events.c: 56: switch((int)event)
 23508                           
 23509                           ;incstack = 0
 23510  005E9A  D019               	goto	l10220
 23511  005E9C                     l10204:
 23512                           
 23513                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 23514  005E9C  0E01               	movlw	1
 23515  005E9E  EC89  F035         	call	_SYSTEM_Initialize
 23516                           
 23517                           ;usb_events.c: 79: break;
 23518  005EA2  0012               	return	
 23519  005EA4                     l10206:
 23520                           
 23521                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 23522  005EA4  0E02               	movlw	2
 23523  005EA6  EC89  F035         	call	_SYSTEM_Initialize
 23524                           
 23525                           ;usb_events.c: 90: break;
 23526  005EAA  0012               	return	
 23527  005EAC                     l10208:
 23528                           
 23529                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 23530  005EAC  ECCE  F039         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 23531                           
 23532                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 23533  005EB0  EC97  F03C         	call	_APP_DeviceMSDInitialize	;wreg free
 23534                           
 23535                           ;usb_events.c: 100: break;
 23536                           
 23537                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 23538                           
 23539                           ;usb_events.c: 97: break;
 23540  005EB4  0012               	return	
 23541  005EB6                     l10212:
 23542                           
 23543                           ;usb_events.c: 105: USBCheckHIDRequest();
 23544  005EB6  ECB8  F023         	call	_USBCheckHIDRequest	;wreg free
 23545                           
 23546                           ;usb_events.c: 108: USBCheckMSDRequest();
 23547  005EBA  EC1A  F026         	call	_USBCheckMSDRequest	;wreg free
 23548                           
 23549                           ;usb_events.c: 112: break;
 23550                           
 23551                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 23552                           
 23553                           ;usb_events.c: 109: break;
 23554  005EBE  0012               	return	
 23555  005EC0                     l10216:
 23556                           
 23557                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 23558  005EC0  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 23559  005EC4  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 23560  005EC8  EC33  F035         	call	_MSDTransferTerminated	;wreg free
 23561                           
 23562                           ;usb_events.c: 129: }
 23563                           
 23564                           ;usb_events.c: 128: break;
 23565                           
 23566                           ;usb_events.c: 127: default:
 23567                           
 23568                           ;usb_events.c: 125: break;
 23569  005ECC  0012               	return	
 23570  005ECE                     l10220:
 23571  005ECE  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 23572  005ED2  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 23573                           
 23574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 23575                           ; Switch size 1, requested type "space"
 23576                           ; Number of cases is 2, Range of values is 0 to 127
 23577                           ; switch strategies available:
 23578                           ; Name         Instructions Cycles
 23579                           ; simple_byte            7     4 (average)
 23580                           ;	Chosen strategy is simple_byte
 23581  005ED6  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 23582  005ED8  0A00               	xorlw	0	; case 0
 23583  005EDA  B4D8               	btfsc	status,2,c
 23584  005EDC  D004               	goto	l15488
 23585  005EDE  0A7F               	xorlw	127	; case 127
 23586  005EE0  A4D8               	btfss	status,2,c
 23587  005EE2  0012               	return	
 23588  005EE4  D01A               	goto	l15490
 23589  005EE6                     l15488:
 23590                           
 23591                           ; Switch size 1, requested type "space"
 23592                           ; Number of cases is 8, Range of values is 1 to 117
 23593                           ; switch strategies available:
 23594                           ; Name         Instructions Cycles
 23595                           ; simple_byte           25    13 (average)
 23596                           ;	Chosen strategy is simple_byte
 23597  005EE6  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 23598  005EE8  0A01               	xorlw	1	; case 1
 23599  005EEA  B4D8               	btfsc	status,2,c
 23600  005EEC  D7DF               	goto	l10208
 23601  005EEE  0A03               	xorlw	3	; case 2
 23602  005EF0  B4D8               	btfsc	status,2,c
 23603  005EF2  0012               	return	
 23604  005EF4  0A01               	xorlw	1	; case 3
 23605  005EF6  B4D8               	btfsc	status,2,c
 23606  005EF8  D7DE               	goto	l10212
 23607  005EFA  0A06               	xorlw	6	; case 5
 23608  005EFC  B4D8               	btfsc	status,2,c
 23609  005EFE  D7E0               	goto	l10216
 23610  005F00  0A77               	xorlw	119	; case 114
 23611  005F02  B4D8               	btfsc	status,2,c
 23612  005F04  0012               	return	
 23613  005F06  0A01               	xorlw	1	; case 115
 23614  005F08  B4D8               	btfsc	status,2,c
 23615  005F0A  0012               	return	
 23616  005F0C  0A07               	xorlw	7	; case 116
 23617  005F0E  B4D8               	btfsc	status,2,c
 23618  005F10  D7C9               	goto	l10206
 23619  005F12  0A01               	xorlw	1	; case 117
 23620  005F14  A4D8               	btfss	status,2,c
 23621  005F16  0012               	return	
 23622  005F18  D7C1               	goto	l10204
 23623  005F1A                     l15490:
 23624                           
 23625                           ; Switch size 1, requested type "space"
 23626                           ; Number of cases is 1, Range of values is 255 to 255
 23627                           ; switch strategies available:
 23628                           ; Name         Instructions Cycles
 23629                           ; simple_byte            4     3 (average)
 23630                           ;	Chosen strategy is simple_byte
 23631  005F1A  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 23632  005F1C  0AFF               	xorlw	255	; case 255
 23633  005F1E  0012               	return	
 23634  005F20                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 23635                           	opt stack 0
 23636                           tblptru	equ	0xFF8
 23637                           tblptrh	equ	0xFF7
 23638                           tblptrl	equ	0xFF6
 23639                           tablat	equ	0xFF5
 23640                           prodh	equ	0xFF4
 23641                           prodl	equ	0xFF3
 23642                           intcon	equ	0xFF2
 23643                           intcon2	equ	0xFF1
 23644                           intcon3	equ	0xFF0
 23645                           indf0	equ	0xFEF
 23646                           postinc0	equ	0xFEE
 23647                           fsr0h	equ	0xFEA
 23648                           fsr0l	equ	0xFE9
 23649                           wreg	equ	0xFE8
 23650                           indf1	equ	0xFE7
 23651                           postdec1	equ	0xFE5
 23652                           plusw1	equ	0xFE3
 23653                           fsr1h	equ	0xFE2
 23654                           fsr1l	equ	0xFE1
 23655                           indf2	equ	0xFDF
 23656                           postinc2	equ	0xFDE
 23657                           postdec2	equ	0xFDD
 23658                           plusw2	equ	0xFDB
 23659                           fsr2h	equ	0xFDA
 23660                           fsr2l	equ	0xFD9
 23661                           status	equ	0xFD8
 23662                           
 23663 ;; *************** function _USBCheckMSDRequest *****************
 23664 ;; Defined at:
 23665 ;;		line 218 in file "usb_device_msd.c"
 23666 ;; Parameters:    Size  Location     Type
 23667 ;;		None
 23668 ;; Auto vars:     Size  Location     Type
 23669 ;;		None
 23670 ;; Return value:  Size  Location     Type
 23671 ;;                  1    wreg      void 
 23672 ;; Registers used:
 23673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23674 ;; Tracked objects:
 23675 ;;		On entry : 0/0
 23676 ;;		On exit  : 0/0
 23677 ;;		Unchanged: 0/0
 23678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23680 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23682 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23683 ;;Total ram usage:        4 bytes
 23684 ;; Hardware stack levels used:    1
 23685 ;; Hardware stack levels required when called:    1
 23686 ;; This function calls:
 23687 ;;		_USBTransferOnePacket
 23688 ;; This function is called by:
 23689 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23690 ;; This function uses a non-reentrant model
 23691 ;;
 23692                           
 23693                           	psect	text109
 23694  004C34                     __ptext109:
 23695                           	opt stack 0
 23696  004C34                     _USBCheckMSDRequest:
 23697                           	opt stack 27
 23698                           
 23699                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 23700                           
 23701                           ;incstack = 0
 23702  004C34  010D               	movlb	13	; () banked
 23703  004C36  5130               	movf	48,w,b	;volatile
 23704  004C38  0B1F               	andlw	31
 23705  004C3A  06E8               	decf	wreg,f,c
 23706  004C3C  A4D8               	btfss	status,2,c
 23707  004C3E  0012               	return	
 23708                           
 23709                           ; BSR set to: 13
 23710                           ;usb_device_msd.c: 223: }
 23711                           ;usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 23712                           
 23713                           ; BSR set to: 13
 23714                           
 23715                           ; BSR set to: 13
 23716                           ;usb_device_msd.c: 221: {
 23717                           ;usb_device_msd.c: 222: return;
 23718  004C40  010D               	movlb	13	; () banked
 23719  004C42  5134               	movf	52,w,b	;volatile
 23720  004C44  A4D8               	btfss	status,2,c
 23721  004C46  0012               	return	
 23722  004C48  D05D               	goto	l10004
 23723  004C4A                     l9966:
 23724                           
 23725                           ; BSR set to: 13
 23726                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 23727  004C4A  010D               	movlb	13	; () banked
 23728  004C4C  5132               	movf	50,w,b	;volatile
 23729  004C4E  010D               	movlb	13	; () banked
 23730  004C50  1133               	iorwf	51,w,b	;volatile
 23731  004C52  A4D8               	btfss	status,2,c
 23732  004C54  0012               	return	
 23733                           
 23734                           ; BSR set to: 13
 23735  004C56  010D               	movlb	13	; () banked
 23736  004C58  5136               	movf	54,w,b	;volatile
 23737  004C5A  010D               	movlb	13	; () banked
 23738  004C5C  1137               	iorwf	55,w,b	;volatile
 23739  004C5E  A4D8               	btfss	status,2,c
 23740  004C60  0012               	return	
 23741                           
 23742                           ; BSR set to: 13
 23743                           ;usb_device_msd.c: 238: }
 23744                           ;usb_device_msd.c: 246: MSD_State = 0x00;
 23745                           
 23746                           ; BSR set to: 13
 23747                           
 23748                           ; BSR set to: 13
 23749                           ;usb_device_msd.c: 236: {
 23750                           ;usb_device_msd.c: 237: return;
 23751  004C62  0E00               	movlw	0
 23752  004C64  0101               	movlb	1	; () banked
 23753  004C66  6F8D               	movwf	_MSD_State& (0+255),b
 23754                           
 23755                           ; BSR set to: 1
 23756                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 23757  004C68  0100               	movlb	0	; () banked
 23758  004C6A  69F9               	setf	_MSDCommandState& (0+255),b
 23759                           
 23760                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 23761  004C6C  0E00               	movlw	0
 23762  004C6E  0101               	movlb	1	; () banked
 23763  004C70  6F8C               	movwf	_MSDReadState& (0+255),b
 23764                           
 23765                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 23766  004C72  0E00               	movlw	0
 23767  004C74  0101               	movlb	1	; () banked
 23768  004C76  6F8B               	movwf	_MSDWriteState& (0+255),b
 23769                           
 23770                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 23771  004C78  0E01               	movlw	1
 23772  004C7A  0101               	movlb	1	; () banked
 23773  004C7C  6F87               	movwf	_MSDCBWValid& (0+255),b
 23774                           
 23775                           ; BSR set to: 1
 23776                           
 23777                           ; BSR set to: 1
 23778                           
 23779                           ; BSR set to: 1
 23780                           
 23781                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 23782  004C7E  C13D  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2316
 23783  004C82  C13E  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2316+1
 23784                           
 23785                           ; BSR set to: 1
 23786  004C86  500C               	movf	_USBCheckMSDRequest$2316,w,c
 23787  004C88  100D               	iorwf	_USBCheckMSDRequest$2316+1,w,c
 23788  004C8A  B4D8               	btfsc	status,2,c
 23789  004C8C  D00A               	goto	l9986
 23790                           
 23791                           ; BSR set to: 1
 23792                           
 23793                           ; BSR set to: 1
 23794                           
 23795                           ; BSR set to: 1
 23796                           
 23797                           ; BSR set to: 1
 23798  004C8E  C13D  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2317
 23799  004C92  C13E  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2317+1
 23800                           
 23801                           ; BSR set to: 1
 23802                           
 23803                           ; BSR set to: 1
 23804  004C96  C00E  FFD9         	movff	_USBCheckMSDRequest$2317,fsr2l
 23805  004C9A  C00F  FFDA         	movff	_USBCheckMSDRequest$2317+1,fsr2h
 23806  004C9E  BEDF               	btfsc	indf2,7,c
 23807  004CA0  D00F               	goto	l9988
 23808  004CA2                     l9986:
 23809                           
 23810                           ; BSR set to: 1
 23811                           ;usb_device_msd.c: 256: {
 23812                           ;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,6
      +                          4u);
 23813  004CA2  0E00               	movlw	0
 23814  004CA4  6E01               	movwf	USBTransferOnePacket@dir,c
 23815  004CA6  0E40               	movlw	64
 23816  004CA8  6E02               	movwf	USBTransferOnePacket@data,c
 23817  004CAA  0E0D               	movlw	13
 23818  004CAC  6E03               	movwf	USBTransferOnePacket@data+1,c
 23819  004CAE  0E40               	movlw	64
 23820  004CB0  6E04               	movwf	USBTransferOnePacket@len,c
 23821  004CB2  0E02               	movlw	2
 23822  004CB4  ECB7  F022         	call	_USBTransferOnePacket
 23823  004CB8  C001  F0F6         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 23824  004CBC  C002  F0F7         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 23825  004CC0                     l9988:
 23826                           
 23827                           ;usb_device_msd.c: 258: }
 23828                           ;usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 23829  004CC0  0E80               	movlw	128
 23830  004CC2  0100               	movlb	0	; () banked
 23831  004CC4  6FEB               	movwf	(_inPipes+3)& (0+255),b
 23832                           
 23833                           ;usb_device_msd.c: 263: break;
 23834  004CC6  0012               	return	
 23835  004CC8                     l9990:
 23836                           
 23837                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 23838  004CC8  010D               	movlb	13	; () banked
 23839  004CCA  5132               	movf	50,w,b	;volatile
 23840  004CCC  010D               	movlb	13	; () banked
 23841  004CCE  1133               	iorwf	51,w,b	;volatile
 23842  004CD0  A4D8               	btfss	status,2,c
 23843  004CD2  0012               	return	
 23844                           
 23845                           ; BSR set to: 13
 23846  004CD4  010D               	movlb	13	; () banked
 23847  004CD6  0536               	decf	54,w,b	;volatile
 23848  004CD8  010D               	movlb	13	; () banked
 23849  004CDA  1137               	iorwf	55,w,b	;volatile
 23850  004CDC  A4D8               	btfss	status,2,c
 23851  004CDE  0012               	return	
 23852                           
 23853                           ; BSR set to: 13
 23854                           ;usb_device_msd.c: 271: }
 23855                           ;usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 23856                           
 23857                           ; BSR set to: 13
 23858                           
 23859                           ; BSR set to: 13
 23860                           ;usb_device_msd.c: 269: {
 23861                           ;usb_device_msd.c: 270: break;
 23862  004CE0  0E00               	movlw	0
 23863  004CE2  010D               	movlb	13	; () banked
 23864  004CE4  6F38               	movwf	56,b	;volatile
 23865                           
 23866                           ; BSR set to: 13
 23867                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 23868  004CE6  0E38               	movlw	56
 23869  004CE8  0100               	movlb	0	; () banked
 23870  004CEA  6FE8               	movwf	_inPipes& (0+255),b
 23871  004CEC  0E0D               	movlw	13
 23872  004CEE  0100               	movlb	0	; () banked
 23873  004CF0  6FE9               	movwf	(_inPipes+1)& (0+255),b
 23874                           
 23875                           ; BSR set to: 0
 23876  004CF2  0E00               	movlw	0
 23877  004CF4  0100               	movlb	0	; () banked
 23878  004CF6  6FED               	movwf	(_inPipes+5)& (0+255),b
 23879  004CF8  0E01               	movlw	1
 23880  004CFA  6FEC               	movwf	(_inPipes+4)& (0+255),b
 23881                           
 23882                           ; BSR set to: 0
 23883  004CFC  0EC1               	movlw	193
 23884  004CFE  0100               	movlb	0	; () banked
 23885  004D00  6FEB               	movwf	(_inPipes+3)& (0+255),b
 23886                           
 23887                           ; BSR set to: 0
 23888                           ;usb_device_msd.c: 278: }
 23889                           
 23890                           ;usb_device_msd.c: 277: break;
 23891  004D02  0012               	return	
 23892  004D04                     l10004:
 23893  004D04  010D               	movlb	13	; () banked
 23894  004D06  5131               	movf	49,w,b	;volatile
 23895                           
 23896                           ; Switch size 1, requested type "space"
 23897                           ; Number of cases is 2, Range of values is 254 to 255
 23898                           ; switch strategies available:
 23899                           ; Name         Instructions Cycles
 23900                           ; simple_byte            7     4 (average)
 23901                           ;	Chosen strategy is simple_byte
 23902  004D08  0AFE               	xorlw	254	; case 254
 23903  004D0A  B4D8               	btfsc	status,2,c
 23904  004D0C  D7DD               	goto	l9990
 23905  004D0E  0A01               	xorlw	1	; case 255
 23906  004D10  A4D8               	btfss	status,2,c
 23907  004D12  0012               	return	
 23908  004D14  D79A               	goto	l9966
 23909  004D16                     __end_of_USBCheckMSDRequest:
 23910                           	opt stack 0
 23911                           tblptru	equ	0xFF8
 23912                           tblptrh	equ	0xFF7
 23913                           tblptrl	equ	0xFF6
 23914                           tablat	equ	0xFF5
 23915                           prodh	equ	0xFF4
 23916                           prodl	equ	0xFF3
 23917                           intcon	equ	0xFF2
 23918                           intcon2	equ	0xFF1
 23919                           intcon3	equ	0xFF0
 23920                           indf0	equ	0xFEF
 23921                           postinc0	equ	0xFEE
 23922                           fsr0h	equ	0xFEA
 23923                           fsr0l	equ	0xFE9
 23924                           wreg	equ	0xFE8
 23925                           indf1	equ	0xFE7
 23926                           postdec1	equ	0xFE5
 23927                           plusw1	equ	0xFE3
 23928                           fsr1h	equ	0xFE2
 23929                           fsr1l	equ	0xFE1
 23930                           indf2	equ	0xFDF
 23931                           postinc2	equ	0xFDE
 23932                           postdec2	equ	0xFDD
 23933                           plusw2	equ	0xFDB
 23934                           fsr2h	equ	0xFDA
 23935                           fsr2l	equ	0xFD9
 23936                           status	equ	0xFD8
 23937                           
 23938 ;; *************** function _USBCheckHIDRequest *****************
 23939 ;; Defined at:
 23940 ;;		line 153 in file "usb_device_hid.c"
 23941 ;; Parameters:    Size  Location     Type
 23942 ;;		None
 23943 ;; Auto vars:     Size  Location     Type
 23944 ;;		None
 23945 ;; Return value:  Size  Location     Type
 23946 ;;                  1    wreg      void 
 23947 ;; Registers used:
 23948 ;;		wreg, status,2, status,0
 23949 ;; Tracked objects:
 23950 ;;		On entry : 0/0
 23951 ;;		On exit  : 0/0
 23952 ;;		Unchanged: 0/0
 23953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23958 ;;Total ram usage:        0 bytes
 23959 ;; Hardware stack levels used:    1
 23960 ;; This function calls:
 23961 ;;		Nothing
 23962 ;; This function is called by:
 23963 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23964 ;; This function uses a non-reentrant model
 23965 ;;
 23966                           
 23967                           	psect	text110
 23968  004770                     __ptext110:
 23969                           	opt stack 0
 23970  004770                     _USBCheckHIDRequest:
 23971                           	opt stack 28
 23972                           
 23973                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 23974                           
 23975                           ;incstack = 0
 23976  004770  010D               	movlb	13	; () banked
 23977  004772  5130               	movf	48,w,b	;volatile
 23978  004774  0B1F               	andlw	31
 23979  004776  06E8               	decf	wreg,f,c
 23980  004778  A4D8               	btfss	status,2,c
 23981  00477A  0012               	return	
 23982                           
 23983                           ; BSR set to: 13
 23984                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 23985                           
 23986                           ; BSR set to: 13
 23987                           
 23988                           ; BSR set to: 13
 23989  00477C  010D               	movlb	13	; () banked
 23990  00477E  5134               	movf	52,w,b	;volatile
 23991  004780  A4D8               	btfss	status,2,c
 23992  004782  0012               	return	
 23993                           
 23994                           ; BSR set to: 13
 23995                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 23996                           
 23997                           ; BSR set to: 13
 23998                           
 23999                           ; BSR set to: 13
 24000  004784  0E06               	movlw	6
 24001  004786  010D               	movlb	13	; () banked
 24002  004788  1931               	xorwf	49,w,b	;volatile
 24003  00478A  B4D8               	btfsc	status,2,c
 24004  00478C  D020               	goto	l9928
 24005  00478E  D028               	goto	l9930
 24006  004790                     l9912:
 24007                           
 24008                           ; BSR set to: 13
 24009                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 24010  004790  0100               	movlb	0	; () banked
 24011  004792  05FE               	decf	_USBActiveConfiguration& (0+255),w,b
 24012  004794  A4D8               	btfss	status,2,c
 24013  004796  D024               	goto	l9930
 24014                           
 24015                           ; BSR set to: 0
 24016                           ;usb_device_hid.c: 169: {
 24017                           ;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
 24018  004798  0EB9               	movlw	low (_configDescriptor1+18)
 24019  00479A  0100               	movlb	0	; () banked
 24020  00479C  6FE8               	movwf	_inPipes& (0+255),b
 24021  00479E  0E8E               	movlw	high (_configDescriptor1+18)
 24022  0047A0  0100               	movlb	0	; () banked
 24023  0047A2  6FE9               	movwf	(_inPipes+1)& (0+255),b
 24024                           
 24025                           ; BSR set to: 0
 24026  0047A4  0E00               	movlw	0
 24027  0047A6  0100               	movlb	0	; () banked
 24028  0047A8  6FED               	movwf	(_inPipes+5)& (0+255),b
 24029  0047AA  0E09               	movlw	9
 24030  0047AC  D00E               	goto	L13
 24031  0047AE                     l9918:
 24032                           
 24033                           ; BSR set to: 0
 24034  0047AE  0EC0               	movlw	192
 24035  0047B0  0100               	movlb	0	; () banked
 24036  0047B2  6FEB               	movwf	(_inPipes+3)& (0+255),b
 24037                           
 24038                           ; BSR set to: 0
 24039                           ;usb_device_hid.c: 174: }
 24040                           ;usb_device_hid.c: 175: break;
 24041  0047B4  D015               	goto	l9930
 24042  0047B6                     l9920:
 24043                           
 24044                           ;usb_device_hid.c: 178: {
 24045                           ;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 24046  0047B6  0E6D               	movlw	low _hid_rpt01
 24047  0047B8  0100               	movlb	0	; () banked
 24048  0047BA  6FE8               	movwf	_inPipes& (0+255),b
 24049  0047BC  0E8F               	movlw	high _hid_rpt01
 24050  0047BE  0100               	movlb	0	; () banked
 24051  0047C0  6FE9               	movwf	(_inPipes+1)& (0+255),b
 24052                           
 24053                           ; BSR set to: 0
 24054  0047C2  0E00               	movlw	0
 24055  0047C4  0100               	movlb	0	; () banked
 24056  0047C6  6FED               	movwf	(_inPipes+5)& (0+255),b
 24057  0047C8  0E1D               	movlw	29
 24058  0047CA                     L13:
 24059  0047CA  6FEC               	movwf	(_inPipes+4)& (0+255),b
 24060  0047CC  D7F0               	goto	l9918
 24061  0047CE                     l9928:
 24062  0047CE  010D               	movlb	13	; () banked
 24063  0047D0  5133               	movf	51,w,b	;volatile
 24064                           
 24065                           ; Switch size 1, requested type "space"
 24066                           ; Number of cases is 3, Range of values is 33 to 35
 24067                           ; switch strategies available:
 24068                           ; Name         Instructions Cycles
 24069                           ; simple_byte           10     6 (average)
 24070                           ;	Chosen strategy is simple_byte
 24071  0047D2  0A21               	xorlw	33	; case 33
 24072  0047D4  B4D8               	btfsc	status,2,c
 24073  0047D6  D7DC               	goto	l9912
 24074  0047D8  0A03               	xorlw	3	; case 34
 24075  0047DA  B4D8               	btfsc	status,2,c
 24076  0047DC  D7EC               	goto	l9920
 24077  0047DE  0A01               	xorlw	1	; case 35
 24078  0047E0                     l9930:
 24079                           
 24080                           ;usb_device_hid.c: 199: }
 24081                           ;usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 24082  0047E0  010D               	movlb	13	; () banked
 24083  0047E2  3930               	swapf	48,w,b	;volatile
 24084  0047E4  32E8               	rrcf	wreg,f,c
 24085  0047E6  0B03               	andlw	3
 24086  0047E8  06E8               	decf	wreg,f,c
 24087  0047EA  A4D8               	btfss	status,2,c
 24088  0047EC  0012               	return	
 24089  0047EE  D02A               	goto	l9956
 24090  0047F0                     l9934:
 24091                           
 24092                           ; BSR set to: 13
 24093                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 24094  0047F0  0EB8               	movlw	low _idle_rate
 24095  0047F2  0100               	movlb	0	; () banked
 24096  0047F4  6FE8               	movwf	_inPipes& (0+255),b
 24097  0047F6  0E01               	movlw	high _idle_rate
 24098  0047F8  0100               	movlb	0	; () banked
 24099  0047FA  6FE9               	movwf	(_inPipes+1)& (0+255),b
 24100                           
 24101                           ; BSR set to: 0
 24102  0047FC  0E00               	movlw	0
 24103  0047FE  0100               	movlb	0	; () banked
 24104  004800  6FED               	movwf	(_inPipes+5)& (0+255),b
 24105  004802  0E01               	movlw	1
 24106  004804  6FEC               	movwf	(_inPipes+4)& (0+255),b
 24107                           
 24108                           ; BSR set to: 0
 24109  004806  0EC1               	movlw	193
 24110  004808  0100               	movlb	0	; () banked
 24111  00480A  6FEB               	movwf	(_inPipes+3)& (0+255),b
 24112                           
 24113                           ;usb_device_hid.c: 223: break;
 24114  00480C  0012               	return	
 24115  00480E                     l9940:
 24116                           
 24117                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 24118  00480E  0E80               	movlw	128
 24119  004810  0100               	movlb	0	; () banked
 24120  004812  6FEB               	movwf	(_inPipes+3)& (0+255),b
 24121                           
 24122                           ; BSR set to: 0
 24123                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 24124  004814  CD33 F1B8          	movff	3379,_idle_rate	;volatile
 24125                           
 24126                           ;usb_device_hid.c: 227: ;
 24127                           ;usb_device_hid.c: 228: break;
 24128  004818  0012               	return	
 24129  00481A                     l9944:
 24130                           
 24131                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 24132  00481A  0EB7               	movlw	low _active_protocol
 24133  00481C  0100               	movlb	0	; () banked
 24134  00481E  6FE8               	movwf	_inPipes& (0+255),b
 24135  004820  0E01               	movlw	high _active_protocol
 24136  004822  0100               	movlb	0	; () banked
 24137  004824  6FE9               	movwf	(_inPipes+1)& (0+255),b
 24138                           
 24139                           ; BSR set to: 0
 24140  004826  0E00               	movlw	0
 24141  004828  0100               	movlb	0	; () banked
 24142  00482A  6FED               	movwf	(_inPipes+5)& (0+255),b
 24143  00482C  0E01               	movlw	1
 24144  00482E  6FEC               	movwf	(_inPipes+4)& (0+255),b
 24145                           
 24146                           ; BSR set to: 0
 24147  004830  0E81               	movlw	129
 24148  004832  0100               	movlb	0	; () banked
 24149  004834  6FEB               	movwf	(_inPipes+3)& (0+255),b
 24150                           
 24151                           ;usb_device_hid.c: 234: break;
 24152  004836  0012               	return	
 24153  004838                     l9950:
 24154                           
 24155                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 24156  004838  0E80               	movlw	128
 24157  00483A  0100               	movlb	0	; () banked
 24158  00483C  6FEB               	movwf	(_inPipes+3)& (0+255),b
 24159                           
 24160                           ; BSR set to: 0
 24161                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 24162  00483E  CD32 F1B7          	movff	3378,_active_protocol	;volatile
 24163                           
 24164                           ; BSR set to: 0
 24165                           ;usb_device_hid.c: 239: }
 24166                           
 24167                           ;usb_device_hid.c: 238: break;
 24168  004842  0012               	return	
 24169  004844                     l9956:
 24170  004844  010D               	movlb	13	; () banked
 24171  004846  5131               	movf	49,w,b	;volatile
 24172                           
 24173                           ; Switch size 1, requested type "space"
 24174                           ; Number of cases is 6, Range of values is 1 to 11
 24175                           ; switch strategies available:
 24176                           ; Name         Instructions Cycles
 24177                           ; simple_byte           19    10 (average)
 24178                           ;	Chosen strategy is simple_byte
 24179  004848  0A01               	xorlw	1	; case 1
 24180  00484A  B4D8               	btfsc	status,2,c
 24181  00484C  0012               	return	
 24182  00484E  0A03               	xorlw	3	; case 2
 24183  004850  B4D8               	btfsc	status,2,c
 24184  004852  D7CE               	goto	l9934
 24185  004854  0A01               	xorlw	1	; case 3
 24186  004856  B4D8               	btfsc	status,2,c
 24187  004858  D7E0               	goto	l9944
 24188  00485A  0A0A               	xorlw	10	; case 9
 24189  00485C  B4D8               	btfsc	status,2,c
 24190  00485E  0012               	return	
 24191  004860  0A03               	xorlw	3	; case 10
 24192  004862  B4D8               	btfsc	status,2,c
 24193  004864  D7D4               	goto	l9940
 24194  004866  0A01               	xorlw	1	; case 11
 24195  004868  A4D8               	btfss	status,2,c
 24196  00486A  0012               	return	
 24197  00486C  D7E5               	goto	l9950
 24198  00486E                     __end_of_USBCheckHIDRequest:
 24199                           	opt stack 0
 24200                           tblptru	equ	0xFF8
 24201                           tblptrh	equ	0xFF7
 24202                           tblptrl	equ	0xFF6
 24203                           tablat	equ	0xFF5
 24204                           prodh	equ	0xFF4
 24205                           prodl	equ	0xFF3
 24206                           intcon	equ	0xFF2
 24207                           intcon2	equ	0xFF1
 24208                           intcon3	equ	0xFF0
 24209                           indf0	equ	0xFEF
 24210                           postinc0	equ	0xFEE
 24211                           fsr0h	equ	0xFEA
 24212                           fsr0l	equ	0xFE9
 24213                           wreg	equ	0xFE8
 24214                           indf1	equ	0xFE7
 24215                           postdec1	equ	0xFE5
 24216                           plusw1	equ	0xFE3
 24217                           fsr1h	equ	0xFE2
 24218                           fsr1l	equ	0xFE1
 24219                           indf2	equ	0xFDF
 24220                           postinc2	equ	0xFDE
 24221                           postdec2	equ	0xFDD
 24222                           plusw2	equ	0xFDB
 24223                           fsr2h	equ	0xFDA
 24224                           fsr2l	equ	0xFD9
 24225                           status	equ	0xFD8
 24226                           
 24227 ;; *************** function _SYSTEM_Initialize *****************
 24228 ;; Defined at:
 24229 ;;		line 147 in file "system.c"
 24230 ;; Parameters:    Size  Location     Type
 24231 ;;  state           1    wreg     enum E8100
 24232 ;; Auto vars:     Size  Location     Type
 24233 ;;  state           1    4[COMRAM] enum E8100
 24234 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 24235 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 24236 ;; Return value:  Size  Location     Type
 24237 ;;                  1    wreg      void 
 24238 ;; Registers used:
 24239 ;;		wreg, status,2, status,0
 24240 ;; Tracked objects:
 24241 ;;		On entry : 0/0
 24242 ;;		On exit  : 0/0
 24243 ;;		Unchanged: 0/0
 24244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24246 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24248 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24249 ;;Total ram usage:        5 bytes
 24250 ;; Hardware stack levels used:    1
 24251 ;; This function calls:
 24252 ;;		Nothing
 24253 ;; This function is called by:
 24254 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24255 ;;		_main
 24256 ;; This function uses a non-reentrant model
 24257 ;;
 24258                           
 24259                           	psect	text111
 24260  006B12                     __ptext111:
 24261                           	opt stack 0
 24262  006B12                     _SYSTEM_Initialize:
 24263                           	opt stack 28
 24264                           
 24265                           ;incstack = 0
 24266                           ;SYSTEM_Initialize@state stored from wreg
 24267  006B12  6E05               	movwf	SYSTEM_Initialize@state,c
 24268                           
 24269                           ;system.c: 149: switch(state)
 24270  006B14  D01D               	goto	l10112
 24271  006B16                     l10100:
 24272                           
 24273                           ;system.c: 158: {
 24274                           ;system.c: 159: unsigned int pll_startup_counter = 600;
 24275  006B16  0E02               	movlw	2
 24276  006B18  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 24277  006B1A  0E58               	movlw	88
 24278  006B1C  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 24279                           
 24280                           ;system.c: 160: OSCTUNEbits.PLLEN = 1;
 24281  006B1E  8C9B               	bsf	3995,6,c	;volatile
 24282  006B20                     l10104:
 24283  006B20  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 24284  006B22  A0D8               	btfss	status,0,c
 24285  006B24  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 24286  006B26  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 24287  006B28  E1FB               	bnz	l10104
 24288  006B2A  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 24289  006B2C  B4D8               	btfsc	status,2,c
 24290  006B2E  0012               	return	
 24291  006B30  D7F7               	goto	l10104
 24292  006B32                     l10106:
 24293                           
 24294                           ;system.c: 186: OSCCON = 0x70;
 24295  006B32  0E70               	movlw	112
 24296  006B34  6ED3               	movwf	4051,c	;volatile
 24297                           
 24298                           ;system.c: 192: {
 24299                           ;system.c: 193: unsigned int pll_startup_counter = 800;
 24300  006B36  0E03               	movlw	3
 24301  006B38  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_2822+1,c
 24302  006B3A  0E20               	movlw	32
 24303  006B3C  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_2822,c
 24304  006B3E                     l10108:
 24305  006B3E  0603               	decf	SYSTEM_Initialize@pll_startup_counter_2822,f,c
 24306  006B40  A0D8               	btfss	status,0,c
 24307  006B42  0604               	decf	SYSTEM_Initialize@pll_startup_counter_2822+1,f,c
 24308  006B44  2803               	incf	SYSTEM_Initialize@pll_startup_counter_2822,w,c
 24309  006B46  E1FB               	bnz	l10108
 24310  006B48  2804               	incf	SYSTEM_Initialize@pll_startup_counter_2822+1,w,c
 24311  006B4A  B4D8               	btfsc	status,2,c
 24312  006B4C  0012               	return	
 24313  006B4E  D7F7               	goto	l10108
 24314  006B50                     l10112:
 24315  006B50  5005               	movf	SYSTEM_Initialize@state,w,c
 24316                           
 24317                           ; Switch size 1, requested type "space"
 24318                           ; Number of cases is 3, Range of values is 0 to 2
 24319                           ; switch strategies available:
 24320                           ; Name         Instructions Cycles
 24321                           ; simple_byte           10     6 (average)
 24322                           ;	Chosen strategy is simple_byte
 24323  006B52  0A00               	xorlw	0	; case 0
 24324  006B54  B4D8               	btfsc	status,2,c
 24325  006B56  D7DF               	goto	l10100
 24326  006B58  0A01               	xorlw	1	; case 1
 24327  006B5A  B4D8               	btfsc	status,2,c
 24328  006B5C  0012               	return	
 24329  006B5E  0A03               	xorlw	3	; case 2
 24330  006B60  A4D8               	btfss	status,2,c
 24331  006B62  0012               	return	
 24332  006B64  D7E6               	goto	l10106
 24333  006B66                     __end_of_SYSTEM_Initialize:
 24334                           	opt stack 0
 24335                           tblptru	equ	0xFF8
 24336                           tblptrh	equ	0xFF7
 24337                           tblptrl	equ	0xFF6
 24338                           tablat	equ	0xFF5
 24339                           prodh	equ	0xFF4
 24340                           prodl	equ	0xFF3
 24341                           intcon	equ	0xFF2
 24342                           intcon2	equ	0xFF1
 24343                           intcon3	equ	0xFF0
 24344                           indf0	equ	0xFEF
 24345                           postinc0	equ	0xFEE
 24346                           fsr0h	equ	0xFEA
 24347                           fsr0l	equ	0xFE9
 24348                           wreg	equ	0xFE8
 24349                           indf1	equ	0xFE7
 24350                           postdec1	equ	0xFE5
 24351                           plusw1	equ	0xFE3
 24352                           fsr1h	equ	0xFE2
 24353                           fsr1l	equ	0xFE1
 24354                           indf2	equ	0xFDF
 24355                           postinc2	equ	0xFDE
 24356                           postdec2	equ	0xFDD
 24357                           plusw2	equ	0xFDB
 24358                           fsr2h	equ	0xFDA
 24359                           fsr2l	equ	0xFD9
 24360                           status	equ	0xFD8
 24361                           
 24362 ;; *************** function _MSDTransferTerminated *****************
 24363 ;; Defined at:
 24364 ;;		line 1674 in file "usb_device_msd.c"
 24365 ;; Parameters:    Size  Location     Type
 24366 ;;  handle          2   11[COMRAM] PTR void 
 24367 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 24368 ;;		 -> BDT(48), 
 24369 ;; Auto vars:     Size  Location     Type
 24370 ;;		None
 24371 ;; Return value:  Size  Location     Type
 24372 ;;                  1    wreg      void 
 24373 ;; Registers used:
 24374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24375 ;; Tracked objects:
 24376 ;;		On entry : 0/0
 24377 ;;		On exit  : 0/0
 24378 ;;		Unchanged: 0/0
 24379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24381 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24383 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24384 ;;Total ram usage:        4 bytes
 24385 ;; Hardware stack levels used:    1
 24386 ;; Hardware stack levels required when called:    1
 24387 ;; This function calls:
 24388 ;;		_USBStallEndpoint
 24389 ;;		_USBTransferOnePacket
 24390 ;; This function is called by:
 24391 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24392 ;; This function uses a non-reentrant model
 24393 ;;
 24394                           
 24395                           	psect	text112
 24396  006A66                     __ptext112:
 24397                           	opt stack 0
 24398  006A66                     _MSDTransferTerminated:
 24399                           	opt stack 27
 24400                           
 24401                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 24402                           
 24403                           ;incstack = 0
 24404  006A66  0101               	movlb	1	; () banked
 24405  006A68  5187               	movf	_MSDCBWValid& (0+255),w,b
 24406  006A6A  A4D8               	btfss	status,2,c
 24407  006A6C  D00B               	goto	l10094
 24408                           
 24409                           ; BSR set to: 1
 24410                           ;usb_device_msd.c: 1677: {
 24411                           ;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 24412  006A6E  0E01               	movlw	1
 24413  006A70  6E01               	movwf	USBStallEndpoint@dir,c
 24414  006A72  0E02               	movlw	2
 24415  006A74  EC34  F022         	call	_USBStallEndpoint
 24416                           
 24417                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 24418  006A78  0E00               	movlw	0
 24419  006A7A  6E01               	movwf	USBStallEndpoint@dir,c
 24420  006A7C  0E02               	movlw	2
 24421  006A7E  EC34  F022         	call	_USBStallEndpoint
 24422                           
 24423                           ;usb_device_msd.c: 1681: }
 24424  006A82  0012               	return	
 24425  006A84                     l10094:
 24426  006A84  C13D  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2404
 24427  006A88  C13E  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2404+1
 24428  006A8C  500E               	movf	_MSDTransferTerminated$2404,w,c
 24429  006A8E  180C               	xorwf	MSDTransferTerminated@handle,w,c
 24430  006A90  E114               	bnz	l767
 24431  006A92  500F               	movf	_MSDTransferTerminated$2404+1,w,c
 24432  006A94  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 24433  006A96  A4D8               	btfss	status,2,c
 24434  006A98  0012               	return	
 24435                           
 24436                           ;usb_device_msd.c: 1687: {
 24437                           ;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,
      +                          64u);
 24438  006A9A  0E00               	movlw	0
 24439  006A9C  6E01               	movwf	USBTransferOnePacket@dir,c
 24440  006A9E  0E40               	movlw	64
 24441  006AA0  6E02               	movwf	USBTransferOnePacket@data,c
 24442  006AA2  0E0D               	movlw	13
 24443  006AA4  6E03               	movwf	USBTransferOnePacket@data+1,c
 24444  006AA6  0E40               	movlw	64
 24445  006AA8  6E04               	movwf	USBTransferOnePacket@len,c
 24446  006AAA  0E02               	movlw	2
 24447  006AAC  ECB7  F022         	call	_USBTransferOnePacket
 24448  006AB0  C001  F0F6         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 24449  006AB4  C002  F0F7         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 24450  006AB8  0012               	return	
 24451  006ABA                     l767:
 24452  006ABA  0012               	return		;funcret
 24453  006ABC                     __end_of_MSDTransferTerminated:
 24454                           	opt stack 0
 24455                           tblptru	equ	0xFF8
 24456                           tblptrh	equ	0xFF7
 24457                           tblptrl	equ	0xFF6
 24458                           tablat	equ	0xFF5
 24459                           prodh	equ	0xFF4
 24460                           prodl	equ	0xFF3
 24461                           intcon	equ	0xFF2
 24462                           intcon2	equ	0xFF1
 24463                           intcon3	equ	0xFF0
 24464                           indf0	equ	0xFEF
 24465                           postinc0	equ	0xFEE
 24466                           fsr0h	equ	0xFEA
 24467                           fsr0l	equ	0xFE9
 24468                           wreg	equ	0xFE8
 24469                           indf1	equ	0xFE7
 24470                           postdec1	equ	0xFE5
 24471                           plusw1	equ	0xFE3
 24472                           fsr1h	equ	0xFE2
 24473                           fsr1l	equ	0xFE1
 24474                           indf2	equ	0xFDF
 24475                           postinc2	equ	0xFDE
 24476                           postdec2	equ	0xFDD
 24477                           plusw2	equ	0xFDB
 24478                           fsr2h	equ	0xFDA
 24479                           fsr2l	equ	0xFD9
 24480                           status	equ	0xFD8
 24481                           
 24482 ;; *************** function _APP_DeviceMSDInitialize *****************
 24483 ;; Defined at:
 24484 ;;		line 84 in file "app_device_msd.c"
 24485 ;; Parameters:    Size  Location     Type
 24486 ;;		None
 24487 ;; Auto vars:     Size  Location     Type
 24488 ;;		None
 24489 ;; Return value:  Size  Location     Type
 24490 ;;                  1    wreg      void 
 24491 ;; Registers used:
 24492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24493 ;; Tracked objects:
 24494 ;;		On entry : 0/0
 24495 ;;		On exit  : 0/0
 24496 ;;		Unchanged: 0/0
 24497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24502 ;;Total ram usage:        0 bytes
 24503 ;; Hardware stack levels used:    1
 24504 ;; Hardware stack levels required when called:    2
 24505 ;; This function calls:
 24506 ;;		_USBEnableEndpoint
 24507 ;;		_USBMSDInit
 24508 ;; This function is called by:
 24509 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24510 ;; This function uses a non-reentrant model
 24511 ;;
 24512                           
 24513                           	psect	text113
 24514  00792E                     __ptext113:
 24515                           	opt stack 0
 24516  00792E                     _APP_DeviceMSDInitialize:
 24517                           	opt stack 26
 24518                           
 24519                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 24520                           
 24521                           ;incstack = 0
 24522  00792E  0E1E               	movlw	30
 24523  007930  6E09               	movwf	USBEnableEndpoint@options,c
 24524  007932  0E02               	movlw	2
 24525  007934  EC10  F039         	call	_USBEnableEndpoint
 24526                           
 24527                           ;app_device_msd.c: 93: USBMSDInit();
 24528  007938  EC09  F020         	call	_USBMSDInit	;wreg free
 24529  00793C  0012               	return		;funcret
 24530  00793E                     __end_of_APP_DeviceMSDInitialize:
 24531                           	opt stack 0
 24532                           tblptru	equ	0xFF8
 24533                           tblptrh	equ	0xFF7
 24534                           tblptrl	equ	0xFF6
 24535                           tablat	equ	0xFF5
 24536                           prodh	equ	0xFF4
 24537                           prodl	equ	0xFF3
 24538                           intcon	equ	0xFF2
 24539                           intcon2	equ	0xFF1
 24540                           intcon3	equ	0xFF0
 24541                           indf0	equ	0xFEF
 24542                           postinc0	equ	0xFEE
 24543                           fsr0h	equ	0xFEA
 24544                           fsr0l	equ	0xFE9
 24545                           wreg	equ	0xFE8
 24546                           indf1	equ	0xFE7
 24547                           postdec1	equ	0xFE5
 24548                           plusw1	equ	0xFE3
 24549                           fsr1h	equ	0xFE2
 24550                           fsr1l	equ	0xFE1
 24551                           indf2	equ	0xFDF
 24552                           postinc2	equ	0xFDE
 24553                           postdec2	equ	0xFDD
 24554                           plusw2	equ	0xFDB
 24555                           fsr2h	equ	0xFDA
 24556                           fsr2l	equ	0xFD9
 24557                           status	equ	0xFD8
 24558                           
 24559 ;; *************** function _USBMSDInit *****************
 24560 ;; Defined at:
 24561 ;;		line 142 in file "usb_device_msd.c"
 24562 ;; Parameters:    Size  Location     Type
 24563 ;;		None
 24564 ;; Auto vars:     Size  Location     Type
 24565 ;;		None
 24566 ;; Return value:  Size  Location     Type
 24567 ;;                  1    wreg      void 
 24568 ;; Registers used:
 24569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24570 ;; Tracked objects:
 24571 ;;		On entry : 0/0
 24572 ;;		On exit  : 0/0
 24573 ;;		Unchanged: 0/0
 24574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24577 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24578 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24579 ;;Total ram usage:        3 bytes
 24580 ;; Hardware stack levels used:    1
 24581 ;; Hardware stack levels required when called:    1
 24582 ;; This function calls:
 24583 ;;		_ExternalFlash_MediaDetect
 24584 ;;		_ExternalFlash_MediaInitialize
 24585 ;;		_ResetSenseData
 24586 ;;		_USBTransferOnePacket
 24587 ;; This function is called by:
 24588 ;;		_APP_DeviceMSDInitialize
 24589 ;; This function uses a non-reentrant model
 24590 ;;
 24591                           
 24592                           	psect	text114
 24593  004012                     __ptext114:
 24594                           	opt stack 0
 24595  004012                     _USBMSDInit:
 24596                           	opt stack 26
 24597                           
 24598                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 24599                           
 24600                           ;incstack = 0
 24601  004012  0E00               	movlw	0
 24602  004014  6E01               	movwf	USBTransferOnePacket@dir,c
 24603  004016  0E40               	movlw	64
 24604  004018  6E02               	movwf	USBTransferOnePacket@data,c
 24605  00401A  0E0D               	movlw	13
 24606  00401C  6E03               	movwf	USBTransferOnePacket@data+1,c
 24607  00401E  0E40               	movlw	64
 24608  004020  6E04               	movwf	USBTransferOnePacket@len,c
 24609  004022  0E02               	movlw	2
 24610  004024  ECB7  F022         	call	_USBTransferOnePacket
 24611  004028  C001  F0F6         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 24612  00402C  C002  F0F7         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 24613  004030  C0F2  F0F4         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 24614  004034  C0F3  F0F5         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 24615                           
 24616                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 24617  004038  0E00               	movlw	0
 24618  00403A  0101               	movlb	1	; () banked
 24619  00403C  6F8D               	movwf	_MSD_State& (0+255),b
 24620                           
 24621                           ; BSR set to: 1
 24622                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 24623  00403E  0100               	movlb	0	; () banked
 24624  004040  69F9               	setf	_MSDCommandState& (0+255),b
 24625                           
 24626                           ; BSR set to: 0
 24627                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 24628  004042  0E00               	movlw	0
 24629  004044  0101               	movlb	1	; () banked
 24630  004046  6F8C               	movwf	_MSDReadState& (0+255),b
 24631                           
 24632                           ; BSR set to: 1
 24633                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 24634  004048  0E00               	movlw	0
 24635  00404A  0101               	movlb	1	; () banked
 24636  00404C  6F8B               	movwf	_MSDWriteState& (0+255),b
 24637                           
 24638                           ; BSR set to: 1
 24639                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 24640  00404E  0E00               	movlw	0
 24641  004050  0100               	movlb	0	; () banked
 24642  004052  6FF8               	movwf	_MSDHostNoData& (0+255),b
 24643                           
 24644                           ; BSR set to: 0
 24645                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 24646  004054  0E00               	movlw	0
 24647  004056  0101               	movlb	1	; () banked
 24648  004058  6F57               	movwf	_gblNumBLKS& (0+255),b
 24649  00405A  0E00               	movlw	0
 24650  00405C  6F58               	movwf	(_gblNumBLKS+1)& (0+255),b
 24651  00405E  0E00               	movlw	0
 24652  004060  6F59               	movwf	(_gblNumBLKS+2)& (0+255),b
 24653  004062  0E00               	movlw	0
 24654  004064  6F5A               	movwf	(_gblNumBLKS+3)& (0+255),b
 24655                           
 24656                           ; BSR set to: 1
 24657                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 24658  004066  0E00               	movlw	0
 24659  004068  0101               	movlb	1	; () banked
 24660  00406A  6F53               	movwf	_gblBLKLen& (0+255),b
 24661  00406C  0E00               	movlw	0
 24662  00406E  6F54               	movwf	(_gblBLKLen+1)& (0+255),b
 24663  004070  0E00               	movlw	0
 24664  004072  6F55               	movwf	(_gblBLKLen+2)& (0+255),b
 24665  004074  0E00               	movlw	0
 24666  004076  6F56               	movwf	(_gblBLKLen+3)& (0+255),b
 24667                           
 24668                           ; BSR set to: 1
 24669                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 24670  004078  0E01               	movlw	1
 24671  00407A  0101               	movlb	1	; () banked
 24672  00407C  6F87               	movwf	_MSDCBWValid& (0+255),b
 24673                           
 24674                           ; BSR set to: 1
 24675                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 24676  00407E  0E00               	movlw	0
 24677  004080  0101               	movlb	1	; () banked
 24678  004082  6F79               	movwf	(_gblMediaPresent+1)& (0+255),b
 24679  004084  0E00               	movlw	0
 24680  004086  6F78               	movwf	_gblMediaPresent& (0+255),b
 24681                           
 24682                           ; BSR set to: 1
 24683                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 24684  004088  0E00               	movlw	0
 24685  00408A  0101               	movlb	1	; () banked
 24686  00408C  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 24687  00408E  D049               	goto	l9844
 24688  004090                     l9832:
 24689                           
 24690                           ; BSR set to: 1
 24691                           ;usb_device_msd.c: 161: {
 24692                           ;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 24693  004090  0101               	movlb	1	; () banked
 24694  004092  510D               	movf	(_gblCBW+13)& (0+255),w,b
 24695  004094  0D01               	mullw	1
 24696  004096  0E88               	movlw	low _SoftDetach
 24697  004098  24F3               	addwf	prodl,w,c
 24698  00409A  6ED9               	movwf	fsr2l,c
 24699  00409C  0E01               	movlw	high _SoftDetach
 24700  00409E  20F4               	addwfc	prodh,w,c
 24701  0040A0  6EDA               	movwf	fsr2h,c
 24702  0040A2  0E00               	movlw	0
 24703  0040A4  6EDF               	movwf	indf2,c
 24704                           
 24705                           ; BSR set to: 1
 24706                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 24707  0040A6  C1C7  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 24708  0040AA  C1C8  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 24709  0040AE  D801               	call	u6478
 24710  0040B0  D00A               	goto	u6479
 24711  0040B2                     u6478:
 24712  0040B2  0005               	push	
 24713  0040B4  6EFA               	movwf	pclath,c
 24714  0040B6  0101               	movlb	1	; () banked
 24715  0040B8  51BF               	movf	(_LUN+6)& (0+255),w,b
 24716  0040BA  6EFD               	movwf	tosl,c
 24717  0040BC  51C0               	movf	(_LUN+7)& (0+255),w,b
 24718  0040BE  6EFE               	movwf	tosh,c
 24719  0040C0  6AFF               	clrf	tosu,c
 24720  0040C2  50FA               	movf	pclath,w,c
 24721  0040C4  0012               	return		;indir
 24722  0040C6                     u6479:
 24723  0040C6  0900               	iorlw	0
 24724  0040C8  B4D8               	btfsc	status,2,c
 24725  0040CA  D027               	goto	l9840
 24726                           
 24727                           ;usb_device_msd.c: 167: {
 24728                           ;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaParameters))
 24729  0040CC  C1C7  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 24730  0040D0  C1C8  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 24731  0040D4  D801               	call	u6498
 24732  0040D6  D00A               	goto	u6499
 24733  0040D8                     u6498:
 24734  0040D8  0005               	push	
 24735  0040DA  6EFA               	movwf	pclath,c
 24736  0040DC  0101               	movlb	1	; () banked
 24737  0040DE  51B9               	movf	_LUN& (0+255),w,b
 24738  0040E0  6EFD               	movwf	tosl,c
 24739  0040E2  51BA               	movf	(_LUN+1)& (0+255),w,b
 24740  0040E4  6EFE               	movwf	tosh,c
 24741  0040E6  6AFF               	clrf	tosu,c
 24742  0040E8  50FA               	movf	pclath,w,c
 24743  0040EA  0012               	return		;indir
 24744  0040EC                     u6499:
 24745  0040EC  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 24746  0040EE  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 24747  0040F0  B4D8               	btfsc	status,2,c
 24748  0040F2  D013               	goto	l9840
 24749                           
 24750                           ;usb_device_msd.c: 170: {
 24751                           ;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW.bCBWLUN);
 24752  0040F4  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 24753  0040F8  0E01               	movlw	1
 24754  0040FA  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 24755  0040FC  0E00               	movlw	0
 24756  0040FE  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 24757  004100  2A0C               	incf	??_USBMSDInit,f,c
 24758  004102  D003               	goto	u6514
 24759  004104                     u6515:
 24760  004104  90D8               	bcf	status,0,c
 24761  004106  360D               	rlcf	??_USBMSDInit+1,f,c
 24762  004108  360E               	rlcf	??_USBMSDInit+2,f,c
 24763  00410A                     u6514:
 24764  00410A  2E0C               	decfsz	??_USBMSDInit,f,c
 24765  00410C  D7FB               	goto	u6515
 24766  00410E  500D               	movf	??_USBMSDInit+1,w,c
 24767  004110  0101               	movlb	1	; () banked
 24768  004112  1378               	iorwf	_gblMediaPresent& (0+255),f,b
 24769  004114  500E               	movf	??_USBMSDInit+2,w,c
 24770  004116  0101               	movlb	1	; () banked
 24771  004118  1379               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 24772  00411A                     l9840:
 24773                           
 24774                           ;usb_device_msd.c: 174: }
 24775                           ;usb_device_msd.c: 175: }
 24776                           ;usb_device_msd.c: 176: ResetSenseData();
 24777  00411A  EC90  F02F         	call	_ResetSenseData	;wreg free
 24778  00411E  0101               	movlb	1	; () banked
 24779  004120  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 24780  004122                     l9844:
 24781                           
 24782                           ; BSR set to: 1
 24783  004122  0101               	movlb	1	; () banked
 24784  004124  510D               	movf	(_gblCBW+13)& (0+255),w,b
 24785  004126  A4D8               	btfss	status,2,c
 24786  004128  0012               	return	
 24787  00412A  D7B2               	goto	l9832
 24788  00412C                     __end_of_USBMSDInit:
 24789                           	opt stack 0
 24790                           tosu	equ	0xFFF
 24791                           tosh	equ	0xFFE
 24792                           tosl	equ	0xFFD
 24793                           pclath	equ	0xFFA
 24794                           tblptru	equ	0xFF8
 24795                           tblptrh	equ	0xFF7
 24796                           tblptrl	equ	0xFF6
 24797                           tablat	equ	0xFF5
 24798                           prodh	equ	0xFF4
 24799                           prodl	equ	0xFF3
 24800                           intcon	equ	0xFF2
 24801                           intcon2	equ	0xFF1
 24802                           intcon3	equ	0xFF0
 24803                           indf0	equ	0xFEF
 24804                           postinc0	equ	0xFEE
 24805                           fsr0h	equ	0xFEA
 24806                           fsr0l	equ	0xFE9
 24807                           wreg	equ	0xFE8
 24808                           indf1	equ	0xFE7
 24809                           postdec1	equ	0xFE5
 24810                           plusw1	equ	0xFE3
 24811                           fsr1h	equ	0xFE2
 24812                           fsr1l	equ	0xFE1
 24813                           indf2	equ	0xFDF
 24814                           postinc2	equ	0xFDE
 24815                           postdec2	equ	0xFDD
 24816                           plusw2	equ	0xFDB
 24817                           fsr2h	equ	0xFDA
 24818                           fsr2l	equ	0xFD9
 24819                           status	equ	0xFD8
 24820                           
 24821 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 24822 ;; Defined at:
 24823 ;;		line 80 in file "app_device_custom_hid.c"
 24824 ;; Parameters:    Size  Location     Type
 24825 ;;		None
 24826 ;; Auto vars:     Size  Location     Type
 24827 ;;		None
 24828 ;; Return value:  Size  Location     Type
 24829 ;;                  1    wreg      void 
 24830 ;; Registers used:
 24831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24832 ;; Tracked objects:
 24833 ;;		On entry : 0/0
 24834 ;;		On exit  : 0/0
 24835 ;;		Unchanged: 0/0
 24836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24841 ;;Total ram usage:        0 bytes
 24842 ;; Hardware stack levels used:    1
 24843 ;; Hardware stack levels required when called:    2
 24844 ;; This function calls:
 24845 ;;		_USBEnableEndpoint
 24846 ;;		_USBTransferOnePacket
 24847 ;; This function is called by:
 24848 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24849 ;; This function uses a non-reentrant model
 24850 ;;
 24851                           
 24852                           	psect	text115
 24853  00739C                     __ptext115:
 24854                           	opt stack 0
 24855  00739C                     _APP_DeviceCustomHIDInitialize:
 24856                           	opt stack 26
 24857                           
 24858                           ;app_device_custom_hid.c: 84: USBInHandle = 0;
 24859                           
 24860                           ; BSR set to: 1
 24861                           ;incstack = 0
 24862  00739C  0E00               	movlw	0
 24863  00739E  6E5A               	movwf	_USBInHandle,c
 24864  0073A0  0E00               	movlw	0
 24865  0073A2  6E5B               	movwf	_USBInHandle+1,c
 24866                           
 24867                           ;app_device_custom_hid.c: 87: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 24868  0073A4  0E1E               	movlw	30
 24869  0073A6  6E09               	movwf	USBEnableEndpoint@options,c
 24870  0073A8  0E01               	movlw	1
 24871  0073AA  EC10  F039         	call	_USBEnableEndpoint
 24872                           
 24873                           ;app_device_custom_hid.c: 90: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 24874  0073AE  0E00               	movlw	0
 24875  0073B0  6E01               	movwf	USBTransferOnePacket@dir,c
 24876  0073B2  0E00               	movlw	low _ReceivedDataBuffer
 24877  0073B4  6E02               	movwf	USBTransferOnePacket@data,c
 24878  0073B6  0E03               	movlw	high _ReceivedDataBuffer
 24879  0073B8  6E03               	movwf	USBTransferOnePacket@data+1,c
 24880  0073BA  0E40               	movlw	64
 24881  0073BC  6E04               	movwf	USBTransferOnePacket@len,c
 24882  0073BE  0E01               	movlw	1
 24883  0073C0  ECB7  F022         	call	_USBTransferOnePacket
 24884  0073C4  C001  F174         	movff	?_USBTransferOnePacket,_USBOutHandle
 24885  0073C8  C002  F175         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 24886  0073CC  0012               	return		;funcret
 24887  0073CE                     __end_of_APP_DeviceCustomHIDInitialize:
 24888                           	opt stack 0
 24889                           tosu	equ	0xFFF
 24890                           tosh	equ	0xFFE
 24891                           tosl	equ	0xFFD
 24892                           pclath	equ	0xFFA
 24893                           tblptru	equ	0xFF8
 24894                           tblptrh	equ	0xFF7
 24895                           tblptrl	equ	0xFF6
 24896                           tablat	equ	0xFF5
 24897                           prodh	equ	0xFF4
 24898                           prodl	equ	0xFF3
 24899                           intcon	equ	0xFF2
 24900                           intcon2	equ	0xFF1
 24901                           intcon3	equ	0xFF0
 24902                           indf0	equ	0xFEF
 24903                           postinc0	equ	0xFEE
 24904                           fsr0h	equ	0xFEA
 24905                           fsr0l	equ	0xFE9
 24906                           wreg	equ	0xFE8
 24907                           indf1	equ	0xFE7
 24908                           postdec1	equ	0xFE5
 24909                           plusw1	equ	0xFE3
 24910                           fsr1h	equ	0xFE2
 24911                           fsr1l	equ	0xFE1
 24912                           indf2	equ	0xFDF
 24913                           postinc2	equ	0xFDE
 24914                           postdec2	equ	0xFDD
 24915                           plusw2	equ	0xFDB
 24916                           fsr2h	equ	0xFDA
 24917                           fsr2l	equ	0xFD9
 24918                           status	equ	0xFD8
 24919                           
 24920 ;; *************** function _USBEnableEndpoint *****************
 24921 ;; Defined at:
 24922 ;;		line 878 in file "usb_device.c"
 24923 ;; Parameters:    Size  Location     Type
 24924 ;;  ep              1    wreg     unsigned char 
 24925 ;;  options         1    8[COMRAM] unsigned char 
 24926 ;; Auto vars:     Size  Location     Type
 24927 ;;  ep              1   11[COMRAM] unsigned char 
 24928 ;;  p               2    9[COMRAM] PTR unsigned char 
 24929 ;;		 -> UEP0(1), 
 24930 ;; Return value:  Size  Location     Type
 24931 ;;                  1    wreg      void 
 24932 ;; Registers used:
 24933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24934 ;; Tracked objects:
 24935 ;;		On entry : 0/0
 24936 ;;		On exit  : 0/0
 24937 ;;		Unchanged: 0/0
 24938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24939 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24940 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24942 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24943 ;;Total ram usage:        4 bytes
 24944 ;; Hardware stack levels used:    1
 24945 ;; Hardware stack levels required when called:    1
 24946 ;; This function calls:
 24947 ;;		_USBConfigureEndpoint
 24948 ;; This function is called by:
 24949 ;;		_APP_DeviceCustomHIDInitialize
 24950 ;;		_APP_DeviceMSDInitialize
 24951 ;; This function uses a non-reentrant model
 24952 ;;
 24953                           
 24954                           	psect	text116
 24955  007220                     __ptext116:
 24956                           	opt stack 0
 24957  007220                     _USBEnableEndpoint:
 24958                           	opt stack 26
 24959                           
 24960                           ;incstack = 0
 24961                           ;USBEnableEndpoint@ep stored from wreg
 24962  007220  6E0C               	movwf	USBEnableEndpoint@ep,c
 24963                           
 24964                           ;usb_device.c: 880: unsigned char* p;
 24965                           ;usb_device.c: 884: if(options & 0x04)
 24966  007222  A409               	btfss	USBEnableEndpoint@options,2,c
 24967  007224  D005               	goto	l9798
 24968                           
 24969                           ;usb_device.c: 885: {
 24970                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 24971  007226  0E00               	movlw	0
 24972  007228  6E01               	movwf	USBConfigureEndpoint@direction,c
 24973  00722A  500C               	movf	USBEnableEndpoint@ep,w,c
 24974  00722C  ECE5  F02D         	call	_USBConfigureEndpoint
 24975  007230                     l9798:
 24976                           
 24977                           ;usb_device.c: 887: }
 24978                           ;usb_device.c: 888: if(options & 0x02)
 24979  007230  A209               	btfss	USBEnableEndpoint@options,1,c
 24980  007232  D005               	goto	l9802
 24981                           
 24982                           ;usb_device.c: 889: {
 24983                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 24984  007234  0E01               	movlw	1
 24985  007236  6E01               	movwf	USBConfigureEndpoint@direction,c
 24986  007238  500C               	movf	USBEnableEndpoint@ep,w,c
 24987  00723A  ECE5  F02D         	call	_USBConfigureEndpoint
 24988  00723E                     l9802:
 24989                           
 24990                           ;usb_device.c: 891: }
 24991                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 24992  00723E  500C               	movf	USBEnableEndpoint@ep,w,c
 24993  007240  0D01               	mullw	1
 24994  007242  0E26               	movlw	38
 24995  007244  24F3               	addwf	prodl,w,c
 24996  007246  6E0A               	movwf	USBEnableEndpoint@p,c
 24997  007248  0E0F               	movlw	15
 24998  00724A  20F4               	addwfc	prodh,w,c
 24999  00724C  6E0B               	movwf	USBEnableEndpoint@p+1,c
 25000                           
 25001                           ;usb_device.c: 901: *p = options;
 25002  00724E  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 25003  007252  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 25004  007256  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 25005  00725A  0012               	return		;funcret
 25006  00725C                     __end_of_USBEnableEndpoint:
 25007                           	opt stack 0
 25008                           tosu	equ	0xFFF
 25009                           tosh	equ	0xFFE
 25010                           tosl	equ	0xFFD
 25011                           pclath	equ	0xFFA
 25012                           tblptru	equ	0xFF8
 25013                           tblptrh	equ	0xFF7
 25014                           tblptrl	equ	0xFF6
 25015                           tablat	equ	0xFF5
 25016                           prodh	equ	0xFF4
 25017                           prodl	equ	0xFF3
 25018                           intcon	equ	0xFF2
 25019                           intcon2	equ	0xFF1
 25020                           intcon3	equ	0xFF0
 25021                           indf0	equ	0xFEF
 25022                           postinc0	equ	0xFEE
 25023                           fsr0h	equ	0xFEA
 25024                           fsr0l	equ	0xFE9
 25025                           wreg	equ	0xFE8
 25026                           indf1	equ	0xFE7
 25027                           postdec1	equ	0xFE5
 25028                           plusw1	equ	0xFE3
 25029                           fsr1h	equ	0xFE2
 25030                           fsr1l	equ	0xFE1
 25031                           indf2	equ	0xFDF
 25032                           postinc2	equ	0xFDE
 25033                           postdec2	equ	0xFDD
 25034                           plusw2	equ	0xFDB
 25035                           fsr2h	equ	0xFDA
 25036                           fsr2l	equ	0xFD9
 25037                           status	equ	0xFD8
 25038                           
 25039 ;; *************** function _USBConfigureEndpoint *****************
 25040 ;; Defined at:
 25041 ;;		line 1545 in file "usb_device.c"
 25042 ;; Parameters:    Size  Location     Type
 25043 ;;  EPNum           1    wreg     unsigned char 
 25044 ;;  direction       1    0[COMRAM] unsigned char 
 25045 ;; Auto vars:     Size  Location     Type
 25046 ;;  EPNum           1    5[COMRAM] unsigned char 
 25047 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 25048 ;;		 -> BDT(48), 
 25049 ;; Return value:  Size  Location     Type
 25050 ;;                  1    wreg      void 
 25051 ;; Registers used:
 25052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25053 ;; Tracked objects:
 25054 ;;		On entry : 0/0
 25055 ;;		On exit  : 0/0
 25056 ;;		Unchanged: 0/0
 25057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25058 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25059 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25060 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25061 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25062 ;;Total ram usage:        8 bytes
 25063 ;; Hardware stack levels used:    1
 25064 ;; This function calls:
 25065 ;;		Nothing
 25066 ;; This function is called by:
 25067 ;;		_USBEnableEndpoint
 25068 ;; This function uses a non-reentrant model
 25069 ;;
 25070                           
 25071                           	psect	text117
 25072  005BCA                     __ptext117:
 25073                           	opt stack 0
 25074  005BCA                     _USBConfigureEndpoint:
 25075                           	opt stack 26
 25076                           
 25077                           ;incstack = 0
 25078                           ;USBConfigureEndpoint@EPNum stored from wreg
 25079  005BCA  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 25080                           
 25081                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;
 25082                           ;usb_device.c: 1551: handle = (volatile BDT_ENTRY*)&BDT[0];
 25083  005BCC  0E00               	movlw	0
 25084  005BCE  6E07               	movwf	USBConfigureEndpoint@handle,c
 25085  005BD0  0E0D               	movlw	13
 25086  005BD2  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 25087                           
 25088                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 25089  005BD4  5001               	movf	USBConfigureEndpoint@direction,w,c
 25090  005BD6  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 25091  005BD8  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 25092  005BDA  90D8               	bcf	status,0,c
 25093  005BDC  3602               	rlcf	??_USBConfigureEndpoint,f,c
 25094  005BDE  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 25095  005BE0  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 25096  005BE2  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 25097  005BE4  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 25098  005BE6  90D8               	bcf	status,0,c
 25099  005BE8  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 25100  005BEA  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 25101  005BEC  90D8               	bcf	status,0,c
 25102  005BEE  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 25103  005BF0  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 25104  005BF2  5002               	movf	??_USBConfigureEndpoint,w,c
 25105  005BF4  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 25106  005BF6  5003               	movf	??_USBConfigureEndpoint+1,w,c
 25107  005BF8  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 25108  005BFA  90D8               	bcf	status,0,c
 25109  005BFC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 25110  005BFE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 25111  005C00  90D8               	bcf	status,0,c
 25112  005C02  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 25113  005C04  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 25114  005C06  5004               	movf	??_USBConfigureEndpoint+2,w,c
 25115  005C08  2607               	addwf	USBConfigureEndpoint@handle,f,c
 25116  005C0A  5005               	movf	??_USBConfigureEndpoint+3,w,c
 25117  005C0C  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 25118                           
 25119                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 25120  005C0E  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 25121  005C12  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 25122  005C16  9EDF               	bcf	indf2,7,c
 25123                           
 25124                           ;usb_device.c: 1559: if(direction == 0)
 25125  005C18  5001               	movf	USBConfigureEndpoint@direction,w,c
 25126  005C1A  A4D8               	btfss	status,2,c
 25127  005C1C  D007               	goto	l9624
 25128                           
 25129                           ;usb_device.c: 1560: {
 25130                           ;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 25131  005C1E  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 25132  005C20  0D02               	mullw	2
 25133  005C22  0E39               	movlw	low _pBDTEntryOut
 25134  005C24  24F3               	addwf	prodl,w,c
 25135  005C26  6ED9               	movwf	fsr2l,c
 25136  005C28  0E01               	movlw	high _pBDTEntryOut
 25137  005C2A  D006               	goto	L14
 25138  005C2C                     l9624:
 25139                           
 25140                           ;usb_device.c: 1563: else
 25141                           ;usb_device.c: 1564: {
 25142                           ;usb_device.c: 1565: pBDTEntryIn[EPNum] = handle;
 25143  005C2C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 25144  005C2E  0D02               	mullw	2
 25145  005C30  0EEE               	movlw	low _pBDTEntryIn
 25146  005C32  24F3               	addwf	prodl,w,c
 25147  005C34  6ED9               	movwf	fsr2l,c
 25148  005C36  0E00               	movlw	high _pBDTEntryIn
 25149  005C38                     L14:
 25150  005C38  20F4               	addwfc	prodh,w,c
 25151  005C3A  6EDA               	movwf	fsr2h,c
 25152  005C3C  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 25153  005C40  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 25154                           
 25155                           ;usb_device.c: 1566: }
 25156                           ;usb_device.c: 1569: handle->STAT.DTS = 0;
 25157  005C44  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 25158  005C48  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 25159  005C4C  9CDF               	bcf	indf2,6,c
 25160                           
 25161                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 25162  005C4E  EE20 F004          	lfsr	2,4
 25163  005C52  5007               	movf	USBConfigureEndpoint@handle,w,c
 25164  005C54  26D9               	addwf	fsr2l,f,c
 25165  005C56  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 25166  005C58  22DA               	addwfc	fsr2h,f,c
 25167  005C5A  8CDF               	bsf	indf2,6,c
 25168  005C5C  0012               	return		;funcret
 25169  005C5E                     __end_of_USBConfigureEndpoint:
 25170                           	opt stack 0
 25171                           tosu	equ	0xFFF
 25172                           tosh	equ	0xFFE
 25173                           tosl	equ	0xFFD
 25174                           pclath	equ	0xFFA
 25175                           tblptru	equ	0xFF8
 25176                           tblptrh	equ	0xFF7
 25177                           tblptrl	equ	0xFF6
 25178                           tablat	equ	0xFF5
 25179                           prodh	equ	0xFF4
 25180                           prodl	equ	0xFF3
 25181                           intcon	equ	0xFF2
 25182                           intcon2	equ	0xFF1
 25183                           intcon3	equ	0xFF0
 25184                           indf0	equ	0xFEF
 25185                           postinc0	equ	0xFEE
 25186                           fsr0h	equ	0xFEA
 25187                           fsr0l	equ	0xFE9
 25188                           wreg	equ	0xFE8
 25189                           indf1	equ	0xFE7
 25190                           postdec1	equ	0xFE5
 25191                           plusw1	equ	0xFE3
 25192                           fsr1h	equ	0xFE2
 25193                           fsr1l	equ	0xFE1
 25194                           indf2	equ	0xFDF
 25195                           postinc2	equ	0xFDE
 25196                           postdec2	equ	0xFDD
 25197                           plusw2	equ	0xFDB
 25198                           fsr2h	equ	0xFDA
 25199                           fsr2l	equ	0xFD9
 25200                           status	equ	0xFD8
 25201                           
 25202 ;; *************** function _USBCtrlTrfOutHandler *****************
 25203 ;; Defined at:
 25204 ;;		line 2540 in file "usb_device.c"
 25205 ;; Parameters:    Size  Location     Type
 25206 ;;		None
 25207 ;; Auto vars:     Size  Location     Type
 25208 ;;		None
 25209 ;; Return value:  Size  Location     Type
 25210 ;;                  1    wreg      void 
 25211 ;; Registers used:
 25212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25213 ;; Tracked objects:
 25214 ;;		On entry : 0/0
 25215 ;;		On exit  : 0/0
 25216 ;;		Unchanged: 0/0
 25217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25222 ;;Total ram usage:        0 bytes
 25223 ;; Hardware stack levels used:    1
 25224 ;; Hardware stack levels required when called:    2
 25225 ;; This function calls:
 25226 ;;		_USBCtrlTrfRxService
 25227 ;; This function is called by:
 25228 ;;		_USBCtrlEPService
 25229 ;; This function uses a non-reentrant model
 25230 ;;
 25231                           
 25232                           	psect	text118
 25233  0066E2                     __ptext118:
 25234                           	opt stack 0
 25235  0066E2                     _USBCtrlTrfOutHandler:
 25236                           	opt stack 26
 25237                           
 25238                           ;usb_device.c: 2542: if(controlTransferState == 2)
 25239                           
 25240                           ;incstack = 0
 25241  0066E2  0E02               	movlw	2
 25242  0066E4  0100               	movlb	0	; () banked
 25243  0066E6  19FB               	xorwf	_controlTransferState& (0+255),w,b
 25244  0066E8  A4D8               	btfss	status,2,c
 25245  0066EA  D003               	goto	l11956
 25246                           
 25247                           ; BSR set to: 0
 25248                           ;usb_device.c: 2543: {
 25249                           ;usb_device.c: 2544: USBCtrlTrfRxService();
 25250  0066EC  EC96  F020         	call	_USBCtrlTrfRxService	;wreg free
 25251                           
 25252                           ;usb_device.c: 2545: }
 25253  0066F0  0012               	return	
 25254  0066F2                     l11956:
 25255                           
 25256                           ;usb_device.c: 2546: else
 25257                           ;usb_device.c: 2547: {
 25258                           ;usb_device.c: 2550: controlTransferState = 0;
 25259  0066F2  0E00               	movlw	0
 25260  0066F4  0100               	movlb	0	; () banked
 25261  0066F6  6FFB               	movwf	_controlTransferState& (0+255),b
 25262                           
 25263                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 25264  0066F8  0101               	movlb	1	; () banked
 25265  0066FA  5194               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 25266  0066FC  A4D8               	btfss	status,2,c
 25267  0066FE  D01F               	goto	l11964
 25268                           
 25269                           ; BSR set to: 1
 25270                           ;usb_device.c: 2558: {
 25271                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 25272  006700  EE20 F001          	lfsr	2,1
 25273  006704  505C               	movf	_pBDTEntryEP0OutNext,w,c
 25274  006706  26D9               	addwf	fsr2l,f,c
 25275  006708  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 25276  00670A  22DA               	addwfc	fsr2h,f,c
 25277  00670C  0E08               	movlw	8
 25278  00670E  6EDF               	movwf	indf2,c
 25279                           
 25280                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25281  006710  EE20 F002          	lfsr	2,2
 25282  006714  505C               	movf	_pBDTEntryEP0OutNext,w,c
 25283  006716  26D9               	addwf	fsr2l,f,c
 25284  006718  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 25285  00671A  22DA               	addwfc	fsr2h,f,c
 25286  00671C  0E30               	movlw	48
 25287  00671E  6EDE               	movwf	postinc2,c
 25288  006720  0E0D               	movlw	13
 25289  006722  6EDD               	movwf	postdec2,c
 25290                           
 25291                           ; BSR set to: 1
 25292                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25293  006724  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25294  006728  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25295  00672C  0E0C               	movlw	12
 25296  00672E  6EDF               	movwf	indf2,c
 25297                           
 25298                           ; BSR set to: 1
 25299                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25300  006730  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25301  006734  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25302  006738  0E00               	movlw	0
 25303  00673A  8EDB               	bsf	plusw2,7,c
 25304                           
 25305                           ;usb_device.c: 2563: }
 25306  00673C  0012               	return	
 25307  00673E                     l11964:
 25308                           
 25309                           ; BSR set to: 1
 25310                           ;usb_device.c: 2564: else
 25311                           ;usb_device.c: 2565: {
 25312                           ;usb_device.c: 2566: BothEP0OutUOWNsSet = 0;
 25313  00673E  0E00               	movlw	0
 25314  006740  0101               	movlb	1	; () banked
 25315  006742  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 25316                           
 25317                           ; BSR set to: 1
 25318  006744  0012               	return	
 25319  006746                     __end_of_USBCtrlTrfOutHandler:
 25320                           	opt stack 0
 25321                           tosu	equ	0xFFF
 25322                           tosh	equ	0xFFE
 25323                           tosl	equ	0xFFD
 25324                           pclath	equ	0xFFA
 25325                           tblptru	equ	0xFF8
 25326                           tblptrh	equ	0xFF7
 25327                           tblptrl	equ	0xFF6
 25328                           tablat	equ	0xFF5
 25329                           prodh	equ	0xFF4
 25330                           prodl	equ	0xFF3
 25331                           intcon	equ	0xFF2
 25332                           intcon2	equ	0xFF1
 25333                           intcon3	equ	0xFF0
 25334                           indf0	equ	0xFEF
 25335                           postinc0	equ	0xFEE
 25336                           fsr0h	equ	0xFEA
 25337                           fsr0l	equ	0xFE9
 25338                           wreg	equ	0xFE8
 25339                           indf1	equ	0xFE7
 25340                           postdec1	equ	0xFE5
 25341                           plusw1	equ	0xFE3
 25342                           fsr1h	equ	0xFE2
 25343                           fsr1l	equ	0xFE1
 25344                           indf2	equ	0xFDF
 25345                           postinc2	equ	0xFDE
 25346                           postdec2	equ	0xFDD
 25347                           plusw2	equ	0xFDB
 25348                           fsr2h	equ	0xFDA
 25349                           fsr2l	equ	0xFD9
 25350                           status	equ	0xFD8
 25351                           
 25352 ;; *************** function _USBCtrlTrfRxService *****************
 25353 ;; Defined at:
 25354 ;;		line 1854 in file "usb_device.c"
 25355 ;; Parameters:    Size  Location     Type
 25356 ;;		None
 25357 ;; Auto vars:     Size  Location     Type
 25358 ;;  byteToRead      1    1[COMRAM] unsigned char 
 25359 ;;  i               1    0[COMRAM] unsigned char 
 25360 ;; Return value:  Size  Location     Type
 25361 ;;                  1    wreg      void 
 25362 ;; Registers used:
 25363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25364 ;; Tracked objects:
 25365 ;;		On entry : 0/0
 25366 ;;		On exit  : 0/0
 25367 ;;		Unchanged: 0/0
 25368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25370 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25372 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25373 ;;Total ram usage:        2 bytes
 25374 ;; Hardware stack levels used:    1
 25375 ;; Hardware stack levels required when called:    1
 25376 ;; This function calls:
 25377 ;;		_USBCtrlEPAllowStatusStage
 25378 ;; This function is called by:
 25379 ;;		_USBCtrlTrfOutHandler
 25380 ;; This function uses a non-reentrant model
 25381 ;;
 25382                           
 25383                           	psect	text119
 25384  00412C                     __ptext119:
 25385                           	opt stack 0
 25386  00412C                     _USBCtrlTrfRxService:
 25387                           	opt stack 26
 25388                           
 25389                           ;usb_device.c: 1856: uint8_t byteToRead;
 25390                           ;usb_device.c: 1857: uint8_t i;
 25391                           ;usb_device.c: 1861: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 25392                           
 25393                           ;incstack = 0
 25394  00412C  EE20 F001          	lfsr	2,1
 25395  004130  505E               	movf	_pBDTEntryEP0OutCurrent,w,c
 25396  004132  26D9               	addwf	fsr2l,f,c
 25397  004134  505F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25398  004136  22DA               	addwfc	fsr2h,f,c
 25399  004138  50DF               	movf	indf2,w,c
 25400  00413A  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 25401                           
 25402                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 25403  00413C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 25404  00413E  0101               	movlb	1	; () banked
 25405  004140  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 25406  004142  0E00               	movlw	0
 25407  004144  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 25408  004146  A0D8               	btfss	status,0,c
 25409                           
 25410                           ; BSR set to: 1
 25411                           ;usb_device.c: 1868: {
 25412                           ;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 25413  004148  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 25414                           
 25415                           ; BSR set to: 1
 25416                           ;usb_device.c: 1870: }
 25417                           ;usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 25418                           
 25419                           ; BSR set to: 1
 25420  00414C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 25421  00414E  0101               	movlb	1	; () banked
 25422  004150  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 25423  004152  0E00               	movlw	0
 25424  004154  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 25425                           
 25426                           ; BSR set to: 1
 25427                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 25428  004156  0E00               	movlw	0
 25429  004158  6E01               	movwf	USBCtrlTrfRxService@i,c
 25430  00415A  D012               	goto	l11088
 25431  00415C                     l11082:
 25432                           
 25433                           ; BSR set to: 1
 25434                           ;usb_device.c: 1877: {
 25435                           ;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 25436  00415C  5001               	movf	USBCtrlTrfRxService@i,w,c
 25437  00415E  0D01               	mullw	1
 25438  004160  0E38               	movlw	56
 25439  004162  24F3               	addwf	prodl,w,c
 25440  004164  6ED9               	movwf	fsr2l,c
 25441  004166  0E0D               	movlw	13
 25442  004168  20F4               	addwfc	prodh,w,c
 25443  00416A  6EDA               	movwf	fsr2h,c
 25444  00416C  C131  FFE1         	movff	_outPipes,fsr1l
 25445  004170  C132  FFE2         	movff	_outPipes+1,fsr1h
 25446  004174  CFDF FFE7          	movff	indf2,indf1
 25447                           
 25448                           ; BSR set to: 1
 25449  004178  0101               	movlb	1	; () banked
 25450  00417A  4B31               	infsnz	_outPipes& (0+255),f,b
 25451  00417C  2B32               	incf	(_outPipes+1)& (0+255),f,b
 25452                           
 25453                           ; BSR set to: 1
 25454  00417E  2A01               	incf	USBCtrlTrfRxService@i,f,c
 25455  004180                     l11088:
 25456                           
 25457                           ; BSR set to: 1
 25458  004180  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 25459  004182  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 25460  004184  A0D8               	btfss	status,0,c
 25461  004186  D7EA               	goto	l11082
 25462                           
 25463                           ; BSR set to: 1
 25464                           ;usb_device.c: 1879: }
 25465                           ;usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 25466                           
 25467                           ; BSR set to: 1
 25468  004188  0101               	movlb	1	; () banked
 25469  00418A  5135               	movf	(_outPipes+4)& (0+255),w,b
 25470  00418C  0101               	movlb	1	; () banked
 25471  00418E  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 25472  004190  B4D8               	btfsc	status,2,c
 25473  004192  D032               	goto	l11104
 25474                           
 25475                           ; BSR set to: 1
 25476                           ;usb_device.c: 1884: {
 25477                           ;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 25478  004194  EE20 F001          	lfsr	2,1
 25479  004198  505C               	movf	_pBDTEntryEP0OutNext,w,c
 25480  00419A  26D9               	addwf	fsr2l,f,c
 25481  00419C  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 25482  00419E  22DA               	addwfc	fsr2h,f,c
 25483  0041A0  0E08               	movlw	8
 25484  0041A2  6EDF               	movwf	indf2,c
 25485                           
 25486                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 25487  0041A4  EE20 F002          	lfsr	2,2
 25488  0041A8  505C               	movf	_pBDTEntryEP0OutNext,w,c
 25489  0041AA  26D9               	addwf	fsr2l,f,c
 25490  0041AC  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 25491  0041AE  22DA               	addwfc	fsr2h,f,c
 25492  0041B0  0E38               	movlw	56
 25493  0041B2  6EDE               	movwf	postinc2,c
 25494  0041B4  0E0D               	movlw	13
 25495  0041B6  6EDD               	movwf	postdec2,c
 25496                           
 25497                           ; BSR set to: 1
 25498                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 25499  0041B8  C05E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25500  0041BC  C05F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25501  0041C0  BCDF               	btfsc	indf2,6,c
 25502  0041C2  D00D               	goto	l11100
 25503                           
 25504                           ; BSR set to: 1
 25505                           ;usb_device.c: 1888: {
 25506                           ;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25507  0041C4  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25508  0041C8  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25509  0041CC  0E48               	movlw	72
 25510  0041CE  6EDF               	movwf	indf2,c
 25511                           
 25512                           ; BSR set to: 1
 25513                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25514  0041D0  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25515  0041D4  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25516  0041D8  0E00               	movlw	0
 25517  0041DA  8EDB               	bsf	plusw2,7,c
 25518                           
 25519                           ;usb_device.c: 1891: }
 25520  0041DC  0012               	return	
 25521  0041DE                     l11100:
 25522                           
 25523                           ; BSR set to: 1
 25524                           ;usb_device.c: 1892: else
 25525                           ;usb_device.c: 1893: {
 25526                           ;usb_device.c: 1894: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 25527  0041DE  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25528  0041E2  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25529  0041E6  0E08               	movlw	8
 25530  0041E8  6EDF               	movwf	indf2,c
 25531                           
 25532                           ; BSR set to: 1
 25533                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25534  0041EA  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25535  0041EE  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25536  0041F2  0E00               	movlw	0
 25537  0041F4  8EDB               	bsf	plusw2,7,c
 25538                           
 25539                           ; BSR set to: 1
 25540                           ;usb_device.c: 1896: }
 25541                           ;usb_device.c: 1897: }
 25542  0041F6  0012               	return	
 25543  0041F8                     l11104:
 25544                           
 25545                           ; BSR set to: 1
 25546                           ;usb_device.c: 1898: else
 25547                           ;usb_device.c: 1899: {
 25548                           ;usb_device.c: 1903: pBDTEntryEP0OutNext->CNT = 8;
 25549  0041F8  EE20 F001          	lfsr	2,1
 25550  0041FC  505C               	movf	_pBDTEntryEP0OutNext,w,c
 25551  0041FE  26D9               	addwf	fsr2l,f,c
 25552  004200  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 25553  004202  22DA               	addwfc	fsr2h,f,c
 25554  004204  0E08               	movlw	8
 25555  004206  6EDF               	movwf	indf2,c
 25556                           
 25557                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25558  004208  EE20 F002          	lfsr	2,2
 25559  00420C  505C               	movf	_pBDTEntryEP0OutNext,w,c
 25560  00420E  26D9               	addwf	fsr2l,f,c
 25561  004210  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 25562  004212  22DA               	addwfc	fsr2h,f,c
 25563  004214  0E30               	movlw	48
 25564  004216  6EDE               	movwf	postinc2,c
 25565  004218  0E0D               	movlw	13
 25566  00421A  6EDD               	movwf	postdec2,c
 25567                           
 25568                           ; BSR set to: 1
 25569                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25570  00421C  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25571  004220  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25572  004224  0E04               	movlw	4
 25573  004226  6EDF               	movwf	indf2,c
 25574                           
 25575                           ; BSR set to: 1
 25576                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25577  004228  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25578  00422C  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25579  004230  0E00               	movlw	0
 25580  004232  8EDB               	bsf	plusw2,7,c
 25581                           
 25582                           ; BSR set to: 1
 25583                           ;usb_device.c: 1928: }
 25584                           ;usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 25585                           
 25586                           ; BSR set to: 1
 25587  004234  0101               	movlb	1	; () banked
 25588  004236  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 25589                           
 25590                           ; BSR set to: 1
 25591                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 25592  004238  0100               	movlb	0	; () banked
 25593  00423A  51FA               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 25594  00423C  A4D8               	btfss	status,2,c
 25595  00423E  0012               	return	
 25596                           
 25597                           ; BSR set to: 0
 25598                           ;usb_device.c: 1944: {
 25599                           ;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 25600  004240  EC45  F028         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25601  004244  0012               	return	
 25602  004246                     __end_of_USBCtrlTrfRxService:
 25603                           	opt stack 0
 25604                           tosu	equ	0xFFF
 25605                           tosh	equ	0xFFE
 25606                           tosl	equ	0xFFD
 25607                           pclath	equ	0xFFA
 25608                           tblptru	equ	0xFF8
 25609                           tblptrh	equ	0xFF7
 25610                           tblptrl	equ	0xFF6
 25611                           tablat	equ	0xFF5
 25612                           prodh	equ	0xFF4
 25613                           prodl	equ	0xFF3
 25614                           intcon	equ	0xFF2
 25615                           intcon2	equ	0xFF1
 25616                           intcon3	equ	0xFF0
 25617                           indf0	equ	0xFEF
 25618                           postinc0	equ	0xFEE
 25619                           fsr0h	equ	0xFEA
 25620                           fsr0l	equ	0xFE9
 25621                           wreg	equ	0xFE8
 25622                           indf1	equ	0xFE7
 25623                           postdec1	equ	0xFE5
 25624                           plusw1	equ	0xFE3
 25625                           fsr1h	equ	0xFE2
 25626                           fsr1l	equ	0xFE1
 25627                           indf2	equ	0xFDF
 25628                           postinc2	equ	0xFDE
 25629                           postdec2	equ	0xFDD
 25630                           plusw2	equ	0xFDB
 25631                           fsr2h	equ	0xFDA
 25632                           fsr2l	equ	0xFD9
 25633                           status	equ	0xFD8
 25634                           
 25635 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 25636 ;; Defined at:
 25637 ;;		line 1418 in file "usb_device.c"
 25638 ;; Parameters:    Size  Location     Type
 25639 ;;		None
 25640 ;; Auto vars:     Size  Location     Type
 25641 ;;		None
 25642 ;; Return value:  Size  Location     Type
 25643 ;;                  1    wreg      void 
 25644 ;; Registers used:
 25645 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25646 ;; Tracked objects:
 25647 ;;		On entry : 0/0
 25648 ;;		On exit  : 0/0
 25649 ;;		Unchanged: 0/0
 25650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25655 ;;Total ram usage:        0 bytes
 25656 ;; Hardware stack levels used:    1
 25657 ;; This function calls:
 25658 ;;		Nothing
 25659 ;; This function is called by:
 25660 ;;		_USBDeviceTasks
 25661 ;;		_USBCtrlEPServiceComplete
 25662 ;;		_USBCtrlTrfRxService
 25663 ;; This function uses a non-reentrant model
 25664 ;;
 25665                           
 25666                           	psect	text120
 25667  00508A                     __ptext120:
 25668                           	opt stack 0
 25669  00508A                     _USBCtrlEPAllowStatusStage:
 25670                           	opt stack 26
 25671                           
 25672                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 25673                           
 25674                           ;incstack = 0
 25675  00508A  0101               	movlb	1	; () banked
 25676  00508C  5192               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 25677  00508E  A4D8               	btfss	status,2,c
 25678  005090  0012               	return	
 25679                           
 25680                           ; BSR set to: 1
 25681                           ;usb_device.c: 1426: {
 25682                           ;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 25683  005092  0E01               	movlw	1
 25684  005094  0101               	movlb	1	; () banked
 25685  005096  6F92               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25686                           
 25687                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 25688  005098  0101               	movlb	1	; () banked
 25689  00509A  5191               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 25690  00509C  A4D8               	btfss	status,2,c
 25691  00509E  0012               	return	
 25692                           
 25693                           ; BSR set to: 1
 25694                           ;usb_device.c: 1429: {
 25695                           ;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 25696  0050A0  0E01               	movlw	1
 25697  0050A2  0101               	movlb	1	; () banked
 25698  0050A4  6F91               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25699                           
 25700                           ; BSR set to: 1
 25701                           ;usb_device.c: 1434: if(controlTransferState == 2)
 25702  0050A6  0E02               	movlw	2
 25703  0050A8  0100               	movlb	0	; () banked
 25704  0050AA  19FB               	xorwf	_controlTransferState& (0+255),w,b
 25705  0050AC  A4D8               	btfss	status,2,c
 25706  0050AE  D016               	goto	l10536
 25707                           
 25708                           ; BSR set to: 0
 25709                           ;usb_device.c: 1435: {
 25710                           ;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 25711  0050B0  0100               	movlb	0	; () banked
 25712  0050B2  EE20 F001          	lfsr	2,1
 25713  0050B6  51EE               	movf	_pBDTEntryIn& (0+255),w,b
 25714  0050B8  26D9               	addwf	fsr2l,f,c
 25715  0050BA  51EF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25716  0050BC  22DA               	addwfc	fsr2h,f,c
 25717  0050BE  0E00               	movlw	0
 25718  0050C0  6EDF               	movwf	indf2,c
 25719                           
 25720                           ; BSR set to: 0
 25721                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25722  0050C2  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 25723  0050C6  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25724  0050CA  0E48               	movlw	72
 25725  0050CC  6EDF               	movwf	indf2,c
 25726                           
 25727                           ; BSR set to: 0
 25728                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25729  0050CE  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 25730  0050D2  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25731  0050D6  0E00               	movlw	0
 25732  0050D8  8EDB               	bsf	plusw2,7,c
 25733                           
 25734                           ;usb_device.c: 1439: }
 25735  0050DA  0012               	return	
 25736  0050DC                     l10536:
 25737                           
 25738                           ; BSR set to: 0
 25739                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 25740  0050DC  0100               	movlb	0	; () banked
 25741  0050DE  05FB               	decf	_controlTransferState& (0+255),w,b
 25742  0050E0  A4D8               	btfss	status,2,c
 25743  0050E2  0012               	return	
 25744                           
 25745                           ; BSR set to: 0
 25746                           ;usb_device.c: 1441: {
 25747                           ;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 25748  0050E4  0E00               	movlw	0
 25749  0050E6  0101               	movlb	1	; () banked
 25750  0050E8  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 25751                           
 25752                           ; BSR set to: 1
 25753                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 25754  0050EA  EE20 F001          	lfsr	2,1
 25755  0050EE  505E               	movf	_pBDTEntryEP0OutCurrent,w,c
 25756  0050F0  26D9               	addwf	fsr2l,f,c
 25757  0050F2  505F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25758  0050F4  22DA               	addwfc	fsr2h,f,c
 25759  0050F6  0E08               	movlw	8
 25760  0050F8  6EDF               	movwf	indf2,c
 25761                           
 25762                           ; BSR set to: 1
 25763                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 25764  0050FA  EE20 F002          	lfsr	2,2
 25765  0050FE  505E               	movf	_pBDTEntryEP0OutCurrent,w,c
 25766  005100  26D9               	addwf	fsr2l,f,c
 25767  005102  505F               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 25768  005104  22DA               	addwfc	fsr2h,f,c
 25769  005106  0E30               	movlw	48
 25770  005108  6EDE               	movwf	postinc2,c
 25771  00510A  0E0D               	movlw	13
 25772  00510C  6EDD               	movwf	postdec2,c
 25773                           
 25774                           ; BSR set to: 1
 25775                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 25776  00510E  C05E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25777  005112  C05F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25778  005116  0E04               	movlw	4
 25779  005118  6EDF               	movwf	indf2,c
 25780                           
 25781                           ; BSR set to: 1
 25782                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 25783  00511A  C05E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25784  00511E  C05F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25785  005122  0E00               	movlw	0
 25786  005124  8EDB               	bsf	plusw2,7,c
 25787                           
 25788                           ; BSR set to: 1
 25789                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 25790  005126  0E01               	movlw	1
 25791  005128  0101               	movlb	1	; () banked
 25792  00512A  6F94               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 25793                           
 25794                           ; BSR set to: 1
 25795                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 25796  00512C  EE20 F001          	lfsr	2,1
 25797  005130  505C               	movf	_pBDTEntryEP0OutNext,w,c
 25798  005132  26D9               	addwf	fsr2l,f,c
 25799  005134  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 25800  005136  22DA               	addwfc	fsr2h,f,c
 25801  005138  0E08               	movlw	8
 25802  00513A  6EDF               	movwf	indf2,c
 25803                           
 25804                           ; BSR set to: 1
 25805                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25806  00513C  EE20 F002          	lfsr	2,2
 25807  005140  505C               	movf	_pBDTEntryEP0OutNext,w,c
 25808  005142  26D9               	addwf	fsr2l,f,c
 25809  005144  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 25810  005146  22DA               	addwfc	fsr2h,f,c
 25811  005148  0E30               	movlw	48
 25812  00514A  6EDE               	movwf	postinc2,c
 25813  00514C  0E0D               	movlw	13
 25814  00514E  6EDD               	movwf	postdec2,c
 25815                           
 25816                           ; BSR set to: 1
 25817                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 25818  005150  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25819  005154  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25820  005158  0E80               	movlw	128
 25821  00515A  6EDF               	movwf	indf2,c
 25822                           
 25823                           ; BSR set to: 1
 25824                           
 25825                           ; BSR set to: 1
 25826                           
 25827                           ; BSR set to: 1
 25828  00515C  0012               	return	
 25829  00515E                     __end_of_USBCtrlEPAllowStatusStage:
 25830                           	opt stack 0
 25831                           tosu	equ	0xFFF
 25832                           tosh	equ	0xFFE
 25833                           tosl	equ	0xFFD
 25834                           pclath	equ	0xFFA
 25835                           tblptru	equ	0xFF8
 25836                           tblptrh	equ	0xFF7
 25837                           tblptrl	equ	0xFF6
 25838                           tablat	equ	0xFF5
 25839                           prodh	equ	0xFF4
 25840                           prodl	equ	0xFF3
 25841                           intcon	equ	0xFF2
 25842                           intcon2	equ	0xFF1
 25843                           intcon3	equ	0xFF0
 25844                           indf0	equ	0xFEF
 25845                           postinc0	equ	0xFEE
 25846                           fsr0h	equ	0xFEA
 25847                           fsr0l	equ	0xFE9
 25848                           wreg	equ	0xFE8
 25849                           indf1	equ	0xFE7
 25850                           postdec1	equ	0xFE5
 25851                           plusw1	equ	0xFE3
 25852                           fsr1h	equ	0xFE2
 25853                           fsr1l	equ	0xFE1
 25854                           indf2	equ	0xFDF
 25855                           postinc2	equ	0xFDE
 25856                           postdec2	equ	0xFDD
 25857                           plusw2	equ	0xFDB
 25858                           fsr2h	equ	0xFDA
 25859                           fsr2l	equ	0xFD9
 25860                           status	equ	0xFD8
 25861                           
 25862 ;; *************** function _USBCtrlTrfInHandler *****************
 25863 ;; Defined at:
 25864 ;;		line 2594 in file "usb_device.c"
 25865 ;; Parameters:    Size  Location     Type
 25866 ;;		None
 25867 ;; Auto vars:     Size  Location     Type
 25868 ;;  lastDTS         1    1[COMRAM] unsigned char 
 25869 ;; Return value:  Size  Location     Type
 25870 ;;                  1    wreg      void 
 25871 ;; Registers used:
 25872 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25873 ;; Tracked objects:
 25874 ;;		On entry : 0/0
 25875 ;;		On exit  : 0/0
 25876 ;;		Unchanged: 0/0
 25877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25882 ;;Total ram usage:        1 bytes
 25883 ;; Hardware stack levels used:    1
 25884 ;; Hardware stack levels required when called:    1
 25885 ;; This function calls:
 25886 ;;		_USBCtrlTrfTxService
 25887 ;; This function is called by:
 25888 ;;		_USBCtrlEPService
 25889 ;; This function uses a non-reentrant model
 25890 ;;
 25891                           
 25892                           	psect	text121
 25893  004ED4                     __ptext121:
 25894                           	opt stack 0
 25895  004ED4                     _USBCtrlTrfInHandler:
 25896                           	opt stack 27
 25897                           
 25898                           ;usb_device.c: 2596: uint8_t lastDTS;
 25899                           ;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 25900                           
 25901                           ;incstack = 0
 25902  004ED4  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 25903  004ED8  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25904  004EDC  0100               	movlb	0	; () banked
 25905  004EDE  0E00               	movlw	0
 25906  004EE0  BCDF               	btfsc	indf2,6,c
 25907  004EE2  0E01               	movlw	1
 25908  004EE4  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 25909                           
 25910                           ; BSR set to: 0
 25911                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 25912  004EE6  0E04               	movlw	4
 25913  004EE8  0100               	movlb	0	; () banked
 25914  004EEA  19EE               	xorwf	_pBDTEntryIn& (0+255),w,b
 25915  004EEC  0100               	movlb	0	; () banked
 25916  004EEE  6FEE               	movwf	_pBDTEntryIn& (0+255),b
 25917  004EF0  0100               	movlb	0	; () banked
 25918  004EF2  51EF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25919  004EF4  0100               	movlb	0	; () banked
 25920  004EF6  6FEF               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25921                           
 25922                           ; BSR set to: 0
 25923                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 25924  004EF8  0E08               	movlw	8
 25925  004EFA  0100               	movlb	0	; () banked
 25926  004EFC  19FC               	xorwf	_USBDeviceState& (0+255),w,b
 25927  004EFE  A4D8               	btfss	status,2,c
 25928  004F00  D00E               	goto	l11980
 25929                           
 25930                           ; BSR set to: 0
 25931                           ;usb_device.c: 2607: {
 25932                           ;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 25933  004F02  010D               	movlb	13	; () banked
 25934  004F04  5132               	movf	50,w,b	;volatile
 25935  004F06  0B7F               	andlw	127
 25936  004F08  010F               	movlb	15	; () banked
 25937  004F0A  6F38               	movwf	56,b	;volatile
 25938                           
 25939                           ; BSR set to: 15
 25940                           ;usb_device.c: 2609: if(UADDR != 0u)
 25941  004F0C  010F               	movlb	15	; () banked
 25942  004F0E  5138               	movf	56,w,b	;volatile
 25943  004F10  B4D8               	btfsc	status,2,c
 25944  004F12  D002               	goto	l11978
 25945                           
 25946                           ; BSR set to: 15
 25947                           ;usb_device.c: 2610: {
 25948                           ;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 25949  004F14  0E10               	movlw	16
 25950  004F16  D001               	goto	L15
 25951  004F18                     l11978:
 25952                           
 25953                           ;usb_device.c: 2613: else
 25954                           ;usb_device.c: 2614: {
 25955                           ;usb_device.c: 2615: USBDeviceState=DEFAULT_STATE;
 25956  004F18  0E04               	movlw	4
 25957  004F1A                     L15:
 25958  004F1A  0100               	movlb	0	; () banked
 25959  004F1C  6FFC               	movwf	_USBDeviceState& (0+255),b
 25960  004F1E                     l11980:
 25961                           
 25962                           ; BSR set to: 0
 25963                           ;usb_device.c: 2616: }
 25964                           ;usb_device.c: 2617: }
 25965                           ;usb_device.c: 2620: if(controlTransferState == 1)
 25966  004F1E  0100               	movlb	0	; () banked
 25967  004F20  05FB               	decf	_controlTransferState& (0+255),w,b
 25968  004F22  A4D8               	btfss	status,2,c
 25969  004F24  D03C               	goto	l330
 25970                           
 25971                           ; BSR set to: 0
 25972                           ;usb_device.c: 2621: {
 25973                           ;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 25974  004F26  0100               	movlb	0	; () banked
 25975  004F28  EE20 F002          	lfsr	2,2
 25976  004F2C  51EE               	movf	_pBDTEntryIn& (0+255),w,b
 25977  004F2E  26D9               	addwf	fsr2l,f,c
 25978  004F30  51EF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25979  004F32  22DA               	addwfc	fsr2h,f,c
 25980  004F34  0E38               	movlw	56
 25981  004F36  6EDE               	movwf	postinc2,c
 25982  004F38  0E0D               	movlw	13
 25983  004F3A  6EDD               	movwf	postdec2,c
 25984                           
 25985                           ; BSR set to: 0
 25986                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 25987  004F3C  EC8B  F026         	call	_USBCtrlTrfTxService	;wreg free
 25988                           
 25989                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 25990  004F40  0E02               	movlw	2
 25991  004F42  0101               	movlb	1	; () banked
 25992  004F44  1998               	xorwf	_shortPacketStatus& (0+255),w,b
 25993  004F46  A4D8               	btfss	status,2,c
 25994  004F48  D00D               	goto	l11992
 25995                           
 25996                           ; BSR set to: 1
 25997                           ;usb_device.c: 2630: {
 25998                           ;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 25999  004F4A  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 26000  004F4E  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26001  004F52  0E04               	movlw	4
 26002  004F54  6EDF               	movwf	indf2,c
 26003                           
 26004                           ; BSR set to: 1
 26005                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26006  004F56  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 26007  004F5A  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26008  004F5E  0E00               	movlw	0
 26009  004F60  8EDB               	bsf	plusw2,7,c
 26010                           
 26011                           ;usb_device.c: 2635: }
 26012  004F62  0012               	return	
 26013  004F64                     l11992:
 26014                           
 26015                           ; BSR set to: 1
 26016                           ;usb_device.c: 2636: else
 26017                           ;usb_device.c: 2637: {
 26018                           ;usb_device.c: 2638: if(lastDTS == 0)
 26019  004F64  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 26020  004F66  A4D8               	btfss	status,2,c
 26021  004F68  D00D               	goto	l11998
 26022                           
 26023                           ; BSR set to: 1
 26024                           ;usb_device.c: 2639: {
 26025                           ;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26026  004F6A  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 26027  004F6E  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26028  004F72  0E48               	movlw	72
 26029  004F74  6EDF               	movwf	indf2,c
 26030                           
 26031                           ; BSR set to: 1
 26032                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26033  004F76  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 26034  004F7A  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26035  004F7E  0E00               	movlw	0
 26036  004F80  8EDB               	bsf	plusw2,7,c
 26037                           
 26038                           ;usb_device.c: 2642: }
 26039  004F82  0012               	return	
 26040  004F84                     l11998:
 26041                           
 26042                           ; BSR set to: 1
 26043                           ;usb_device.c: 2643: else
 26044                           ;usb_device.c: 2644: {
 26045                           ;usb_device.c: 2645: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 26046  004F84  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 26047  004F88  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26048  004F8C  0E08               	movlw	8
 26049  004F8E  6EDF               	movwf	indf2,c
 26050                           
 26051                           ; BSR set to: 1
 26052                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26053  004F90  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 26054  004F94  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26055  004F98  0E00               	movlw	0
 26056  004F9A  8EDB               	bsf	plusw2,7,c
 26057                           
 26058                           ; BSR set to: 1
 26059                           ;usb_device.c: 2647: }
 26060                           ;usb_device.c: 2648: }
 26061                           ;usb_device.c: 2649: }
 26062                           
 26063                           ; BSR set to: 1
 26064  004F9C  0012               	return	
 26065  004F9E                     l330:
 26066                           
 26067                           ; BSR set to: 0
 26068                           ;usb_device.c: 2650: else
 26069                           ;usb_device.c: 2651: {
 26070                           ;usb_device.c: 2655: if(outPipes[0].info.bits.busy == 1)
 26071  004F9E  0101               	movlb	1	; () banked
 26072  004FA0  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 26073  004FA2  D002               	goto	l12004
 26074                           
 26075                           ; BSR set to: 1
 26076                           ;usb_device.c: 2660: }
 26077                           ;usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 26078                           
 26079                           ; BSR set to: 1
 26080  004FA4  0101               	movlb	1	; () banked
 26081  004FA6  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 26082  004FA8                     l12004:
 26083                           
 26084                           ; BSR set to: 1
 26085                           ;usb_device.c: 2662: }
 26086                           ;usb_device.c: 2664: controlTransferState = 0;
 26087  004FA8  0E00               	movlw	0
 26088  004FAA  0100               	movlb	0	; () banked
 26089  004FAC  6FFB               	movwf	_controlTransferState& (0+255),b
 26090  004FAE  0012               	return	
 26091  004FB0                     __end_of_USBCtrlTrfInHandler:
 26092                           	opt stack 0
 26093                           tosu	equ	0xFFF
 26094                           tosh	equ	0xFFE
 26095                           tosl	equ	0xFFD
 26096                           pclath	equ	0xFFA
 26097                           tblptru	equ	0xFF8
 26098                           tblptrh	equ	0xFF7
 26099                           tblptrl	equ	0xFF6
 26100                           tablat	equ	0xFF5
 26101                           prodh	equ	0xFF4
 26102                           prodl	equ	0xFF3
 26103                           intcon	equ	0xFF2
 26104                           intcon2	equ	0xFF1
 26105                           intcon3	equ	0xFF0
 26106                           indf0	equ	0xFEF
 26107                           postinc0	equ	0xFEE
 26108                           fsr0h	equ	0xFEA
 26109                           fsr0l	equ	0xFE9
 26110                           wreg	equ	0xFE8
 26111                           indf1	equ	0xFE7
 26112                           postdec1	equ	0xFE5
 26113                           plusw1	equ	0xFE3
 26114                           fsr1h	equ	0xFE2
 26115                           fsr1l	equ	0xFE1
 26116                           indf2	equ	0xFDF
 26117                           postinc2	equ	0xFDE
 26118                           postdec2	equ	0xFDD
 26119                           plusw2	equ	0xFDB
 26120                           fsr2h	equ	0xFDA
 26121                           fsr2l	equ	0xFD9
 26122                           status	equ	0xFD8
 26123                           
 26124 ;; *************** function _USBCtrlTrfTxService *****************
 26125 ;; Defined at:
 26126 ;;		line 1773 in file "usb_device.c"
 26127 ;; Parameters:    Size  Location     Type
 26128 ;;		None
 26129 ;; Auto vars:     Size  Location     Type
 26130 ;;  byteToSend      1    0[COMRAM] unsigned char 
 26131 ;; Return value:  Size  Location     Type
 26132 ;;                  1    wreg      void 
 26133 ;; Registers used:
 26134 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26135 ;; Tracked objects:
 26136 ;;		On entry : 0/0
 26137 ;;		On exit  : 0/0
 26138 ;;		Unchanged: 0/0
 26139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26143 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26144 ;;Total ram usage:        1 bytes
 26145 ;; Hardware stack levels used:    1
 26146 ;; This function calls:
 26147 ;;		Nothing
 26148 ;; This function is called by:
 26149 ;;		_USBCtrlEPAllowDataStage
 26150 ;;		_USBCtrlTrfInHandler
 26151 ;; This function uses a non-reentrant model
 26152 ;;
 26153                           
 26154                           	psect	text122
 26155  004D16                     __ptext122:
 26156                           	opt stack 0
 26157  004D16                     _USBCtrlTrfTxService:
 26158                           	opt stack 25
 26159                           
 26160                           ;usb_device.c: 1775: uint8_t byteToSend;
 26161                           ;usb_device.c: 1779: byteToSend = 8;
 26162                           
 26163                           ;incstack = 0
 26164  004D16  0E08               	movlw	8
 26165  004D18  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 26166                           
 26167                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 26168  004D1A  0100               	movlb	0	; () banked
 26169  004D1C  51ED               	movf	(_inPipes+5)& (0+255),w,b
 26170  004D1E  E114               	bnz	l10244
 26171  004D20  0E08               	movlw	8
 26172  004D22  0100               	movlb	0	; () banked
 26173  004D24  5DEC               	subwf	(_inPipes+4)& (0+255),w,b
 26174  004D26  B0D8               	btfsc	status,0,c
 26175  004D28  D00F               	goto	l10244
 26176                           
 26177                           ; BSR set to: 0
 26178                           ;usb_device.c: 1781: {
 26179                           ;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 26180  004D2A  C0EC  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 26181                           
 26182                           ; BSR set to: 0
 26183                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 26184  004D2E  0101               	movlb	1	; () banked
 26185  004D30  5198               	movf	_shortPacketStatus& (0+255),w,b
 26186  004D32  A4D8               	btfss	status,2,c
 26187  004D34  D002               	goto	l10240
 26188                           
 26189                           ; BSR set to: 1
 26190                           ;usb_device.c: 1790: {
 26191                           ;usb_device.c: 1791: shortPacketStatus = 1;
 26192  004D36  0E01               	movlw	1
 26193  004D38  D005               	goto	L16
 26194  004D3A                     l10240:
 26195                           
 26196                           ; BSR set to: 1
 26197                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 26198  004D3A  0101               	movlb	1	; () banked
 26199  004D3C  0598               	decf	_shortPacketStatus& (0+255),w,b
 26200  004D3E  A4D8               	btfss	status,2,c
 26201  004D40  D003               	goto	l10244
 26202                           
 26203                           ; BSR set to: 1
 26204                           ;usb_device.c: 1794: {
 26205                           ;usb_device.c: 1795: shortPacketStatus = 2;
 26206  004D42  0E02               	movlw	2
 26207  004D44                     L16:
 26208  004D44  0101               	movlb	1	; () banked
 26209  004D46  6F98               	movwf	_shortPacketStatus& (0+255),b
 26210  004D48                     l10244:
 26211                           
 26212                           ;usb_device.c: 1796: }
 26213                           ;usb_device.c: 1797: }
 26214                           ;usb_device.c: 1801: inPipes[0].wCount.Val -= byteToSend;
 26215  004D48  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 26216  004D4A  0100               	movlb	0	; () banked
 26217  004D4C  5FEC               	subwf	(_inPipes+4)& (0+255),f,b
 26218  004D4E  0E00               	movlw	0
 26219  004D50  5BED               	subwfb	(_inPipes+5)& (0+255),f,b
 26220                           
 26221                           ; BSR set to: 0
 26222                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 26223  004D52  0100               	movlb	0	; () banked
 26224  004D54  EE20 F001          	lfsr	2,1
 26225  004D58  51EE               	movf	_pBDTEntryIn& (0+255),w,b
 26226  004D5A  26D9               	addwf	fsr2l,f,c
 26227  004D5C  51EF               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 26228  004D5E  22DA               	addwfc	fsr2h,f,c
 26229  004D60  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 26230                           
 26231                           ; BSR set to: 0
 26232                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 26233  004D64  0E38               	movlw	56
 26234  004D66  0101               	movlb	1	; () banked
 26235  004D68  6F7E               	movwf	_pDst& (0+255),b
 26236  004D6A  0E0D               	movlw	13
 26237  004D6C  0101               	movlb	1	; () banked
 26238  004D6E  6F7F               	movwf	(_pDst+1)& (0+255),b
 26239                           
 26240                           ; BSR set to: 1
 26241                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 26242  004D70  0100               	movlb	0	; () banked
 26243  004D72  A1EB               	btfss	(_inPipes+3)& (0+255),0,b
 26244  004D74  D01D               	goto	l10262
 26245  004D76  D03C               	goto	l10272
 26246  004D78                     l10254:
 26247                           
 26248                           ;usb_device.c: 1814: {
 26249                           ;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 26250  004D78  C0E8  FFF6         	movff	_inPipes,tblptrl
 26251  004D7C  C0E9  FFF7         	movff	_inPipes+1,tblptrh
 26252  004D80  6AF8               	clrf	tblptru,c
 26253  004D82  C17E  FFD9         	movff	_pDst,fsr2l
 26254  004D86  C17F  FFDA         	movff	_pDst+1,fsr2h
 26255  004D8A  0E0E               	movlw	(high __ramtop+-1)
 26256  004D8C  64F7               	cpfsgt	tblptrh,c
 26257  004D8E  D003               	bra	u7087
 26258  004D90  0008               	tblrd		*
 26259  004D92  50F5               	movf	tablat,w,c
 26260  004D94  D005               	bra	u7080
 26261  004D96                     u7087:
 26262  004D96  CFF6 FFE9          	movff	tblptrl,fsr0l
 26263  004D9A  CFF7 FFEA          	movff	tblptrh,fsr0h
 26264  004D9E  50EF               	movf	indf0,w,c
 26265  004DA0                     u7080:
 26266  004DA0  6EDF               	movwf	indf2,c
 26267  004DA2  0100               	movlb	0	; () banked
 26268  004DA4  4BE8               	infsnz	_inPipes& (0+255),f,b
 26269  004DA6  2BE9               	incf	(_inPipes+1)& (0+255),f,b
 26270                           
 26271                           ; BSR set to: 0
 26272  004DA8  0101               	movlb	1	; () banked
 26273  004DAA  4B7E               	infsnz	_pDst& (0+255),f,b
 26274  004DAC  2B7F               	incf	(_pDst+1)& (0+255),f,b
 26275                           
 26276                           ; BSR set to: 1
 26277                           ;usb_device.c: 1816: byteToSend--;
 26278  004DAE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 26279  004DB0                     l10262:
 26280  004DB0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 26281  004DB2  B4D8               	btfsc	status,2,c
 26282  004DB4  0012               	return	
 26283  004DB6  D7E0               	goto	l10254
 26284  004DB8                     l10264:
 26285                           
 26286                           ;usb_device.c: 1822: {
 26287                           ;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 26288  004DB8  C0E8  FFF6         	movff	_inPipes,tblptrl
 26289  004DBC  C0E9  FFF7         	movff	_inPipes+1,tblptrh
 26290  004DC0  6AF8               	clrf	tblptru,c
 26291  004DC2  C17E  FFD9         	movff	_pDst,fsr2l
 26292  004DC6  C17F  FFDA         	movff	_pDst+1,fsr2h
 26293  004DCA  0E0E               	movlw	(high __ramtop+-1)
 26294  004DCC  64F7               	cpfsgt	tblptrh,c
 26295  004DCE  D003               	bra	u7107
 26296  004DD0  0008               	tblrd		*
 26297  004DD2  50F5               	movf	tablat,w,c
 26298  004DD4  D005               	bra	u7100
 26299  004DD6                     u7107:
 26300  004DD6  CFF6 FFE9          	movff	tblptrl,fsr0l
 26301  004DDA  CFF7 FFEA          	movff	tblptrh,fsr0h
 26302  004DDE  50EF               	movf	indf0,w,c
 26303  004DE0                     u7100:
 26304  004DE0  6EDF               	movwf	indf2,c
 26305  004DE2  0100               	movlb	0	; () banked
 26306  004DE4  4BE8               	infsnz	_inPipes& (0+255),f,b
 26307  004DE6  2BE9               	incf	(_inPipes+1)& (0+255),f,b
 26308                           
 26309                           ; BSR set to: 0
 26310  004DE8  0101               	movlb	1	; () banked
 26311  004DEA  4B7E               	infsnz	_pDst& (0+255),f,b
 26312  004DEC  2B7F               	incf	(_pDst+1)& (0+255),f,b
 26313                           
 26314                           ; BSR set to: 1
 26315                           ;usb_device.c: 1824: byteToSend--;
 26316  004DEE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 26317  004DF0                     l10272:
 26318  004DF0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 26319  004DF2  B4D8               	btfsc	status,2,c
 26320  004DF4  0012               	return	
 26321  004DF6  D7E0               	goto	l10264
 26322  004DF8                     __end_of_USBCtrlTrfTxService:
 26323                           	opt stack 0
 26324                           tosu	equ	0xFFF
 26325                           tosh	equ	0xFFE
 26326                           tosl	equ	0xFFD
 26327                           pclath	equ	0xFFA
 26328                           tblptru	equ	0xFF8
 26329                           tblptrh	equ	0xFF7
 26330                           tblptrl	equ	0xFF6
 26331                           tablat	equ	0xFF5
 26332                           prodh	equ	0xFF4
 26333                           prodl	equ	0xFF3
 26334                           intcon	equ	0xFF2
 26335                           intcon2	equ	0xFF1
 26336                           intcon3	equ	0xFF0
 26337                           indf0	equ	0xFEF
 26338                           postinc0	equ	0xFEE
 26339                           fsr0h	equ	0xFEA
 26340                           fsr0l	equ	0xFE9
 26341                           wreg	equ	0xFE8
 26342                           indf1	equ	0xFE7
 26343                           postdec1	equ	0xFE5
 26344                           plusw1	equ	0xFE3
 26345                           fsr1h	equ	0xFE2
 26346                           fsr1l	equ	0xFE1
 26347                           indf2	equ	0xFDF
 26348                           postinc2	equ	0xFDE
 26349                           postdec2	equ	0xFDD
 26350                           plusw2	equ	0xFDB
 26351                           fsr2h	equ	0xFDA
 26352                           fsr2l	equ	0xFD9
 26353                           status	equ	0xFD8
 26354                           
 26355 ;; *************** function _APP_DeviceMSDTasks *****************
 26356 ;; Defined at:
 26357 ;;		line 110 in file "app_device_msd.c"
 26358 ;; Parameters:    Size  Location     Type
 26359 ;;		None
 26360 ;; Auto vars:     Size  Location     Type
 26361 ;;		None
 26362 ;; Return value:  Size  Location     Type
 26363 ;;                  1    wreg      void 
 26364 ;; Registers used:
 26365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 26366 ;; Tracked objects:
 26367 ;;		On entry : 0/0
 26368 ;;		On exit  : 0/0
 26369 ;;		Unchanged: 0/0
 26370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26375 ;;Total ram usage:        0 bytes
 26376 ;; Hardware stack levels used:    1
 26377 ;; Hardware stack levels required when called:   11
 26378 ;; This function calls:
 26379 ;;		_MSDTasks
 26380 ;; This function is called by:
 26381 ;;		_main
 26382 ;; This function uses a non-reentrant model
 26383 ;;
 26384                           
 26385                           	psect	text123
 26386  00785E                     __ptext123:
 26387                           	opt stack 0
 26388  00785E                     _APP_DeviceMSDTasks:
 26389                           	opt stack 19
 26390                           
 26391                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 26392                           
 26393                           ;incstack = 0
 26394  00785E  0E20               	movlw	32
 26395  007860  0100               	movlb	0	; () banked
 26396  007862  61FC               	cpfslt	_USBDeviceState& (0+255),b
 26397  007864  D001               	goto	l1124
 26398  007866  0012               	return	
 26399  007868                     l1124:
 26400                           
 26401                           ; BSR set to: 0
 26402                           ;app_device_msd.c: 118: }
 26403                           ;app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 26404  007868  B265               	btfsc	3941,1,c	;volatile
 26405  00786A  0012               	return	
 26406                           
 26407                           ; BSR set to: 0
 26408                           ;app_device_msd.c: 127: }
 26409                           ;app_device_msd.c: 129: MSDTasks();
 26410                           
 26411                           ; BSR set to: 0
 26412                           
 26413                           ; BSR set to: 0
 26414                           ;app_device_msd.c: 125: {
 26415                           ;app_device_msd.c: 126: return;
 26416  00786C  EC2F  F011         	call	_MSDTasks	;wreg free
 26417  007870  0012               	return		;funcret
 26418  007872                     __end_of_APP_DeviceMSDTasks:
 26419                           	opt stack 0
 26420                           tosu	equ	0xFFF
 26421                           tosh	equ	0xFFE
 26422                           tosl	equ	0xFFD
 26423                           pclath	equ	0xFFA
 26424                           tblptru	equ	0xFF8
 26425                           tblptrh	equ	0xFF7
 26426                           tblptrl	equ	0xFF6
 26427                           tablat	equ	0xFF5
 26428                           prodh	equ	0xFF4
 26429                           prodl	equ	0xFF3
 26430                           intcon	equ	0xFF2
 26431                           intcon2	equ	0xFF1
 26432                           intcon3	equ	0xFF0
 26433                           indf0	equ	0xFEF
 26434                           postinc0	equ	0xFEE
 26435                           fsr0h	equ	0xFEA
 26436                           fsr0l	equ	0xFE9
 26437                           wreg	equ	0xFE8
 26438                           indf1	equ	0xFE7
 26439                           postdec1	equ	0xFE5
 26440                           plusw1	equ	0xFE3
 26441                           fsr1h	equ	0xFE2
 26442                           fsr1l	equ	0xFE1
 26443                           indf2	equ	0xFDF
 26444                           postinc2	equ	0xFDE
 26445                           postdec2	equ	0xFDD
 26446                           plusw2	equ	0xFDB
 26447                           fsr2h	equ	0xFDA
 26448                           fsr2l	equ	0xFD9
 26449                           status	equ	0xFD8
 26450                           
 26451 ;; *************** function _MSDTasks *****************
 26452 ;; Defined at:
 26453 ;;		line 335 in file "usb_device_msd.c"
 26454 ;; Parameters:    Size  Location     Type
 26455 ;;		None
 26456 ;; Auto vars:     Size  Location     Type
 26457 ;;  i               1   81[COMRAM] unsigned char 
 26458 ;; Return value:  Size  Location     Type
 26459 ;;                  1    wreg      unsigned char 
 26460 ;; Registers used:
 26461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 26462 ;; Tracked objects:
 26463 ;;		On entry : 0/0
 26464 ;;		On exit  : 0/0
 26465 ;;		Unchanged: 0/0
 26466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26468 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26470 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26471 ;;Total ram usage:        6 bytes
 26472 ;; Hardware stack levels used:    1
 26473 ;; Hardware stack levels required when called:   10
 26474 ;; This function calls:
 26475 ;;		_MSDProcessCommand
 26476 ;;		_USBStallEndpoint
 26477 ;;		_USBTransferOnePacket
 26478 ;; This function is called by:
 26479 ;;		_APP_DeviceMSDTasks
 26480 ;; This function uses a non-reentrant model
 26481 ;;
 26482                           
 26483                           	psect	text124
 26484  00225E                     __ptext124:
 26485                           	opt stack 0
 26486  00225E                     _MSDTasks:
 26487                           	opt stack 19
 26488                           
 26489                           ;usb_device_msd.c: 337: uint8_t i;
 26490                           ;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURED_STATE)
 26491                           
 26492                           ;incstack = 0
 26493  00225E  0E20               	movlw	32
 26494  002260  0100               	movlb	0	; () banked
 26495  002262  19FC               	xorwf	_USBDeviceState& (0+255),w,b
 26496  002264  A4D8               	btfss	status,2,c
 26497  002266  0012               	return	
 26498  002268  D133               	goto	l13040
 26499  00226A                     l12942:
 26500                           
 26501                           ;usb_device_msd.c: 360: {
 26502                           ;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 26503  00226A  0100               	movlb	0	; () banked
 26504  00226C  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 26505  00226E  0100               	movlb	0	; () banked
 26506  002270  11F7               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 26507  002272  B4D8               	btfsc	status,2,c
 26508  002274  D007               	goto	l12946
 26509                           
 26510                           ; BSR set to: 0
 26511  002276  C0F6  FFD9         	movff	_USBMSDOutHandle,fsr2l
 26512  00227A  C0F7  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 26513  00227E  0100               	movlb	0	; () banked
 26514  002280  BEDF               	btfsc	indf2,7,c
 26515  002282  0012               	return	
 26516  002284                     l12946:
 26517                           
 26518                           ; BSR set to: 0
 26519                           ;usb_device_msd.c: 363: {
 26520                           ;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 26521  002284  0E00               	movlw	0
 26522  002286  6E52               	movwf	MSDTasks@i,c
 26523  002288                     l12948:
 26524                           
 26525                           ; BSR set to: 0
 26526  002288  0E1E               	movlw	30
 26527  00228A  6452               	cpfsgt	MSDTasks@i,c
 26528  00228C  D001               	goto	l12952
 26529  00228E  D014               	goto	l12958
 26530  002290                     l12952:
 26531                           
 26532                           ;usb_device_msd.c: 372: {
 26533                           ;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) = *((uint8_t*)&msd_cbw.dC
      +                          BWSignature + i);
 26534  002290  5052               	movf	MSDTasks@i,w,c
 26535  002292  0D01               	mullw	1
 26536  002294  0E40               	movlw	64
 26537  002296  24F3               	addwf	prodl,w,c
 26538  002298  6ED9               	movwf	fsr2l,c
 26539  00229A  0E0D               	movlw	13
 26540  00229C  20F4               	addwfc	prodh,w,c
 26541  00229E  6EDA               	movwf	fsr2h,c
 26542  0022A0  5052               	movf	MSDTasks@i,w,c
 26543  0022A2  0D01               	mullw	1
 26544  0022A4  0E00               	movlw	low _gblCBW
 26545  0022A6  24F3               	addwf	prodl,w,c
 26546  0022A8  6EE1               	movwf	fsr1l,c
 26547  0022AA  0E01               	movlw	high _gblCBW
 26548  0022AC  20F4               	addwfc	prodh,w,c
 26549  0022AE  6EE2               	movwf	fsr1h,c
 26550  0022B0  CFDF FFE7          	movff	indf2,indf1
 26551  0022B4  2A52               	incf	MSDTasks@i,f,c
 26552  0022B6  D7E8               	goto	l12948
 26553  0022B8                     l12958:
 26554                           
 26555                           ;usb_device_msd.c: 374: }
 26556                           ;usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHandle)->CNT) == 0x1f) && (g
      +                          blCBW.dCBWSignature == (uint32_t)0x43425355))
 26557  0022B8  0100               	movlb	0	; () banked
 26558  0022BA  EE20 F001          	lfsr	2,1
 26559  0022BE  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 26560  0022C0  26D9               	addwf	fsr2l,f,c
 26561  0022C2  51F7               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 26562  0022C4  22DA               	addwfc	fsr2h,f,c
 26563  0022C6  0E1F               	movlw	31
 26564  0022C8  18DE               	xorwf	postinc2,w,c
 26565  0022CA  A4D8               	btfss	status,2,c
 26566  0022CC  D083               	goto	l12998
 26567                           
 26568                           ; BSR set to: 0
 26569  0022CE  0E55               	movlw	85
 26570  0022D0  0101               	movlb	1	; () banked
 26571  0022D2  1900               	xorwf	_gblCBW& (0+255),w,b
 26572  0022D4  E17F               	bnz	l12998
 26573  0022D6  0E53               	movlw	83
 26574  0022D8  0101               	movlb	1	; () banked
 26575  0022DA  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 26576  0022DC  E17B               	bnz	l12998
 26577  0022DE  0E42               	movlw	66
 26578  0022E0  0101               	movlb	1	; () banked
 26579  0022E2  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 26580  0022E4  E177               	bnz	l12998
 26581  0022E6  0E43               	movlw	67
 26582  0022E8  0101               	movlb	1	; () banked
 26583  0022EA  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 26584  0022EC  A4D8               	btfss	status,2,c
 26585  0022EE  D072               	goto	l12998
 26586                           
 26587                           ; BSR set to: 1
 26588                           ;usb_device_msd.c: 378: {
 26589                           ;usb_device_msd.c: 381: MSDCBWValid = 1;
 26590  0022F0  0E01               	movlw	1
 26591  0022F2  0101               	movlb	1	; () banked
 26592  0022F4  6F87               	movwf	_MSDCBWValid& (0+255),b
 26593                           
 26594                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u)
 26595                           ;usb_device_msd.c: 385: &&(gblCBW.bCBWCBLength <= 0x10)
 26596                           ;usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01)
 26597                           ;usb_device_msd.c: 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 26598  0022F6  0101               	movlb	1	; () banked
 26599  0022F8  510D               	movf	(_gblCBW+13)& (0+255),w,b
 26600  0022FA  A4D8               	btfss	status,2,c
 26601  0022FC  D060               	goto	l12996
 26602                           
 26603                           ; BSR set to: 1
 26604  0022FE  0E11               	movlw	17
 26605  002300  0101               	movlb	1	; () banked
 26606  002302  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 26607  002304  D05C               	goto	l12996
 26608                           
 26609                           ; BSR set to: 1
 26610  002306  0101               	movlb	1	; () banked
 26611  002308  510E               	movf	(_gblCBW+14)& (0+255),w,b
 26612  00230A  B4D8               	btfsc	status,2,c
 26613  00230C  D058               	goto	l12996
 26614                           
 26615                           ; BSR set to: 1
 26616  00230E  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 26617  002312  0E3F               	movlw	63
 26618  002314  164D               	andwf	??_MSDTasks,f,c
 26619  002316  A4D8               	btfss	status,2,c
 26620  002318  D052               	goto	l12996
 26621                           
 26622                           ; BSR set to: 1
 26623                           ;usb_device_msd.c: 388: {
 26624                           ;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x53425355;
 26625  00231A  0E55               	movlw	85
 26626  00231C  010D               	movlb	13	; () banked
 26627  00231E  6F80               	movwf	128,b	;volatile
 26628  002320  0E53               	movlw	83
 26629  002322  6F81               	movwf	129,b	;volatile
 26630  002324  0E42               	movlw	66
 26631  002326  6F82               	movwf	130,b	;volatile
 26632  002328  0E53               	movlw	83
 26633  00232A  6F83               	movwf	131,b	;volatile
 26634                           
 26635                           ; BSR set to: 13
 26636                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 26637  00232C  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 26638  002330  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 26639  002334  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 26640  002338  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 26641                           
 26642                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 26643  00233C  0E00               	movlw	0
 26644  00233E  010D               	movlb	13	; () banked
 26645  002340  6F88               	movwf	136,b	;volatile
 26646  002342  0E00               	movlw	0
 26647  002344  6F89               	movwf	137,b	;volatile
 26648  002346  0E00               	movlw	0
 26649  002348  6F8A               	movwf	138,b	;volatile
 26650  00234A  0E00               	movlw	0
 26651  00234C  6F8B               	movwf	139,b	;volatile
 26652                           
 26653                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 26654  00234E  0E00               	movlw	0
 26655  002350  010D               	movlb	13	; () banked
 26656  002352  6F8C               	movwf	140,b	;volatile
 26657                           
 26658                           ; BSR set to: 13
 26659                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 26660  002354  0100               	movlb	0	; () banked
 26661  002356  69F9               	setf	_MSDCommandState& (0+255),b
 26662                           
 26663                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 26664  002358  0E00               	movlw	0
 26665  00235A  0101               	movlb	1	; () banked
 26666  00235C  6F8C               	movwf	_MSDReadState& (0+255),b
 26667                           
 26668                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 26669  00235E  0E00               	movlw	0
 26670  002360  0101               	movlb	1	; () banked
 26671  002362  6F8B               	movwf	_MSDWriteState& (0+255),b
 26672                           
 26673                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 26674  002364  0E00               	movlw	0
 26675  002366  0101               	movlb	1	; () banked
 26676  002368  6F8A               	movwf	_MSDRetryAttempt& (0+255),b
 26677                           
 26678                           ; BSR set to: 1
 26679                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 26680  00236A  0E03               	movlw	3
 26681  00236C  0101               	movlb	1	; () banked
 26682  00236E  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 26683  002370  B4D8               	btfsc	status,2,c
 26684  002372  D00B               	goto	l12982
 26685                           
 26686                           ; BSR set to: 1
 26687                           ;usb_device_msd.c: 421: {
 26688                           ;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 26689  002374  0101               	movlb	1	; () banked
 26690  002376  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 26691  002378  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 26692  00237A  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 26693  00237C  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 26694                           
 26695                           ; BSR set to: 1
 26696                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 26697  00237E  0E00               	movlw	0
 26698  002380  0101               	movlb	1	; () banked
 26699  002382  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26700                           
 26701                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 26702  002384  0E00               	movlw	0
 26703  002386  0101               	movlb	1	; () banked
 26704  002388  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26705  00238A                     l12982:
 26706                           
 26707                           ; BSR set to: 1
 26708                           ;usb_device_msd.c: 425: }
 26709                           ;usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 26710  00238A  0101               	movlb	1	; () banked
 26711  00238C  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 26712  00238E  D002               	goto	l12986
 26713                           
 26714                           ; BSR set to: 1
 26715                           ;usb_device_msd.c: 432: {
 26716                           ;usb_device_msd.c: 433: MSD_State = 0x01;
 26717  002390  0E01               	movlw	1
 26718  002392  D001               	goto	L17
 26719  002394                     l12986:
 26720                           
 26721                           ; BSR set to: 1
 26722                           ;usb_device_msd.c: 435: else
 26723                           ;usb_device_msd.c: 436: {
 26724                           ;usb_device_msd.c: 437: MSD_State = 0x02;
 26725  002394  0E02               	movlw	2
 26726  002396                     L17:
 26727  002396  0101               	movlb	1	; () banked
 26728  002398  6F8D               	movwf	_MSD_State& (0+255),b
 26729                           
 26730                           ; BSR set to: 1
 26731                           ;usb_device_msd.c: 438: }
 26732                           ;usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 26733                           
 26734                           ; BSR set to: 1
 26735  00239A  0101               	movlb	1	; () banked
 26736  00239C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 26737  00239E  0101               	movlb	1	; () banked
 26738  0023A0  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 26739  0023A2  0101               	movlb	1	; () banked
 26740  0023A4  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 26741  0023A6  0101               	movlb	1	; () banked
 26742  0023A8  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 26743  0023AA  B4D8               	btfsc	status,2,c
 26744  0023AC  D002               	goto	l12992
 26745                           
 26746                           ; BSR set to: 1
 26747                           ;usb_device_msd.c: 443: {
 26748                           ;usb_device_msd.c: 444: MSDHostNoData = 0;
 26749  0023AE  0E00               	movlw	0
 26750  0023B0  D001               	goto	L18
 26751  0023B2                     l12992:
 26752                           
 26753                           ;usb_device_msd.c: 446: else
 26754                           ;usb_device_msd.c: 447: {
 26755                           ;usb_device_msd.c: 448: MSDHostNoData = 1;
 26756  0023B2  0E01               	movlw	1
 26757  0023B4                     L18:
 26758  0023B4  0100               	movlb	0	; () banked
 26759  0023B6  6FF8               	movwf	_MSDHostNoData& (0+255),b
 26760                           
 26761                           ; BSR set to: 0
 26762                           ;usb_device_msd.c: 449: }
 26763                           ;usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 26764                           
 26765                           ; BSR set to: 0
 26766  0023B8  C10F  F0F9         	movff	_gblCBW+15,_MSDCommandState
 26767                           
 26768                           ;usb_device_msd.c: 454: }
 26769  0023BC  0012               	return	
 26770  0023BE                     l12996:
 26771                           
 26772                           ;usb_device_msd.c: 455: else
 26773                           ;usb_device_msd.c: 456: {
 26774                           ;usb_device_msd.c: 460: USBStallEndpoint(2u, 1);
 26775  0023BE  0E01               	movlw	1
 26776  0023C0  6E01               	movwf	USBStallEndpoint@dir,c
 26777  0023C2  0E02               	movlw	2
 26778  0023C4  EC34  F022         	call	_USBStallEndpoint
 26779                           
 26780                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 26781  0023C8  0E00               	movlw	0
 26782  0023CA  6E01               	movwf	USBStallEndpoint@dir,c
 26783  0023CC  0E02               	movlw	2
 26784  0023CE  EC34  F022         	call	_USBStallEndpoint
 26785                           
 26786                           ;usb_device_msd.c: 462: }
 26787                           ;usb_device_msd.c: 463: }
 26788  0023D2  0012               	return	
 26789  0023D4                     l12998:
 26790                           
 26791                           ;usb_device_msd.c: 464: else
 26792                           ;usb_device_msd.c: 465: {
 26793                           ;usb_device_msd.c: 469: USBStallEndpoint(2u, 1);
 26794  0023D4  0E01               	movlw	1
 26795  0023D6  6E01               	movwf	USBStallEndpoint@dir,c
 26796  0023D8  0E02               	movlw	2
 26797  0023DA  EC34  F022         	call	_USBStallEndpoint
 26798                           
 26799                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 26800  0023DE  0E00               	movlw	0
 26801  0023E0  6E01               	movwf	USBStallEndpoint@dir,c
 26802  0023E2  0E02               	movlw	2
 26803  0023E4  EC34  F022         	call	_USBStallEndpoint
 26804                           
 26805                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 26806  0023E8  0E00               	movlw	0
 26807  0023EA  0101               	movlb	1	; () banked
 26808  0023EC  6F87               	movwf	_MSDCBWValid& (0+255),b
 26809                           
 26810                           ; BSR set to: 1
 26811                           ;usb_device_msd.c: 474: }
 26812                           ;usb_device_msd.c: 475: }
 26813                           ;usb_device_msd.c: 476: break;
 26814                           
 26815                           ; BSR set to: 1
 26816  0023EE  0012               	return	
 26817  0023F0                     l13002:
 26818                           
 26819                           ; BSR set to: 1
 26820                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 26821  0023F0  EC79  F01F         	call	_MSDProcessCommand	;wreg free
 26822  0023F4  0AFF               	xorlw	255
 26823  0023F6  A4D8               	btfss	status,2,c
 26824  0023F8  0012               	return	
 26825                           
 26826                           ;usb_device_msd.c: 480: {
 26827                           ;usb_device_msd.c: 482: MSD_State = 0x03;
 26828  0023FA  0E03               	movlw	3
 26829  0023FC  0101               	movlb	1	; () banked
 26830  0023FE  6F8D               	movwf	_MSD_State& (0+255),b
 26831                           
 26832                           ; BSR set to: 1
 26833                           ;usb_device_msd.c: 483: }
 26834                           ;usb_device_msd.c: 484: break;
 26835  002400  0012               	return	
 26836  002402                     l13006:
 26837                           
 26838                           ; BSR set to: 1
 26839                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 26840  002402  EC79  F01F         	call	_MSDProcessCommand	;wreg free
 26841  002406  0AFF               	xorlw	255
 26842  002408  A4D8               	btfss	status,2,c
 26843  00240A  0012               	return	
 26844                           
 26845                           ;usb_device_msd.c: 487: {
 26846                           ;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_csw.dCSWDataResidue!=0))
 26847  00240C  010D               	movlb	13	; () banked
 26848  00240E  518C               	movf	140,w,b	;volatile
 26849  002410  A4D8               	btfss	status,2,c
 26850  002412  D00D               	goto	l575
 26851                           
 26852                           ; BSR set to: 13
 26853  002414  010D               	movlb	13	; () banked
 26854  002416  5188               	movf	136,w,b	;volatile
 26855  002418  010D               	movlb	13	; () banked
 26856  00241A  1189               	iorwf	137,w,b	;volatile
 26857  00241C  010D               	movlb	13	; () banked
 26858  00241E  118A               	iorwf	138,w,b	;volatile
 26859  002420  010D               	movlb	13	; () banked
 26860  002422  118B               	iorwf	139,w,b	;volatile
 26861  002424  B4D8               	btfsc	status,2,c
 26862  002426  D003               	goto	l575
 26863                           
 26864                           ; BSR set to: 13
 26865                           ;usb_device_msd.c: 490: {
 26866                           ;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 26867  002428  0E02               	movlw	2
 26868  00242A  010D               	movlb	13	; () banked
 26869  00242C  6F8C               	movwf	140,b	;volatile
 26870  00242E                     l575:
 26871                           
 26872                           ; BSR set to: 13
 26873                           ;usb_device_msd.c: 492: }
 26874                           ;usb_device_msd.c: 493: MSD_State = 0x03;
 26875  00242E  0E03               	movlw	3
 26876  002430  0101               	movlb	1	; () banked
 26877  002432  6F8D               	movwf	_MSD_State& (0+255),b
 26878                           
 26879                           ; BSR set to: 1
 26880                           ;usb_device_msd.c: 494: }
 26881                           ;usb_device_msd.c: 495: break;
 26882  002434  0012               	return	
 26883  002436                     l13014:
 26884                           
 26885                           ; BSR set to: 1
 26886  002436  C0F2  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2369
 26887  00243A  C0F3  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2369+1
 26888                           
 26889                           ; BSR set to: 1
 26890                           
 26891                           ; BSR set to: 1
 26892                           
 26893                           ; BSR set to: 1
 26894  00243E  504E               	movf	_MSDTasks$2369,w,c
 26895  002440  104F               	iorwf	_MSDTasks$2369+1,w,c
 26896  002442  B4D8               	btfsc	status,2,c
 26897  002444  D00A               	goto	l13026
 26898                           
 26899                           ; BSR set to: 1
 26900  002446  C0F2  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2370
 26901  00244A  C0F3  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2370+1
 26902                           
 26903                           ; BSR set to: 1
 26904                           
 26905                           ; BSR set to: 1
 26906                           
 26907                           ; BSR set to: 1
 26908                           
 26909                           ; BSR set to: 1
 26910  00244E  C050  FFD9         	movff	_MSDTasks$2370,fsr2l
 26911  002452  C051  FFDA         	movff	_MSDTasks$2370+1,fsr2h
 26912  002456  BEDF               	btfsc	indf2,7,c
 26913  002458  0012               	return	
 26914  00245A                     l13026:
 26915                           
 26916                           ; BSR set to: 1
 26917                           ;usb_device_msd.c: 502: }
 26918                           ;usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_csw,0x
      +                          0d);
 26919  00245A  0E01               	movlw	1
 26920  00245C  6E01               	movwf	USBTransferOnePacket@dir,c
 26921  00245E  0E80               	movlw	128
 26922  002460  6E02               	movwf	USBTransferOnePacket@data,c
 26923  002462  0E0D               	movlw	13
 26924  002464  6E03               	movwf	USBTransferOnePacket@data+1,c
 26925  002466  0E0D               	movlw	13
 26926  002468  6E04               	movwf	USBTransferOnePacket@len,c
 26927  00246A  0E02               	movlw	2
 26928  00246C  ECB7  F022         	call	_USBTransferOnePacket
 26929  002470  C001  F0F4         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 26930  002474  C002  F0F5         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 26931                           
 26932                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 26933  002478  0100               	movlb	0	; () banked
 26934  00247A  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 26935  00247C  0100               	movlb	0	; () banked
 26936  00247E  11F7               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 26937  002480  B4D8               	btfsc	status,2,c
 26938  002482  D007               	goto	l13032
 26939                           
 26940                           ; BSR set to: 0
 26941  002484  C0F6  FFD9         	movff	_USBMSDOutHandle,fsr2l
 26942  002488  C0F7  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 26943  00248C  0100               	movlb	0	; () banked
 26944  00248E  BEDF               	btfsc	indf2,7,c
 26945  002490  D00F               	goto	l13034
 26946  002492                     l13032:
 26947                           
 26948                           ; BSR set to: 0
 26949                           ;usb_device_msd.c: 509: {
 26950                           ;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(2u,0,(uint8_t*)&msd_cbw,6
      +                          4u);
 26951  002492  0E00               	movlw	0
 26952  002494  6E01               	movwf	USBTransferOnePacket@dir,c
 26953  002496  0E40               	movlw	64
 26954  002498  6E02               	movwf	USBTransferOnePacket@data,c
 26955  00249A  0E0D               	movlw	13
 26956  00249C  6E03               	movwf	USBTransferOnePacket@data+1,c
 26957  00249E  0E40               	movlw	64
 26958  0024A0  6E04               	movwf	USBTransferOnePacket@len,c
 26959  0024A2  0E02               	movlw	2
 26960  0024A4  ECB7  F022         	call	_USBTransferOnePacket
 26961  0024A8  C001  F0F6         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 26962  0024AC  C002  F0F7         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 26963  0024B0                     l13034:
 26964                           
 26965                           ;usb_device_msd.c: 511: }
 26966                           ;usb_device_msd.c: 512: MSD_State=0x00;
 26967  0024B0  0E00               	movlw	0
 26968  0024B2  0101               	movlb	1	; () banked
 26969  0024B4  6F8D               	movwf	_MSD_State& (0+255),b
 26970                           
 26971                           ;usb_device_msd.c: 513: break;
 26972  0024B6  0012               	return	
 26973  0024B8                     l13036:
 26974                           
 26975                           ; BSR set to: 1
 26976                           ;usb_device_msd.c: 518: MSD_State=0x00;
 26977  0024B8  0E00               	movlw	0
 26978  0024BA  0101               	movlb	1	; () banked
 26979  0024BC  6F8D               	movwf	_MSD_State& (0+255),b
 26980                           
 26981                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 26982  0024BE  0E02               	movlw	2
 26983  0024C0  010D               	movlb	13	; () banked
 26984  0024C2  6F8C               	movwf	140,b	;volatile
 26985                           
 26986                           ; BSR set to: 13
 26987                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 26988  0024C4  0E00               	movlw	0
 26989  0024C6  6E01               	movwf	USBStallEndpoint@dir,c
 26990  0024C8  0E02               	movlw	2
 26991  0024CA  EC34  F022         	call	_USBStallEndpoint
 26992                           
 26993                           ;usb_device_msd.c: 521: }
 26994  0024CE  0012               	return	
 26995  0024D0                     l13040:
 26996  0024D0  0101               	movlb	1	; () banked
 26997  0024D2  518D               	movf	_MSD_State& (0+255),w,b
 26998                           
 26999                           ; Switch size 1, requested type "space"
 27000                           ; Number of cases is 4, Range of values is 0 to 3
 27001                           ; switch strategies available:
 27002                           ; Name         Instructions Cycles
 27003                           ; simple_byte           13     7 (average)
 27004                           ;	Chosen strategy is simple_byte
 27005  0024D4  0A00               	xorlw	0	; case 0
 27006  0024D6  B4D8               	btfsc	status,2,c
 27007  0024D8  D6C8               	goto	l12942
 27008  0024DA  0A01               	xorlw	1	; case 1
 27009  0024DC  B4D8               	btfsc	status,2,c
 27010  0024DE  D788               	goto	l13002
 27011  0024E0  0A03               	xorlw	3	; case 2
 27012  0024E2  B4D8               	btfsc	status,2,c
 27013  0024E4  D78E               	goto	l13006
 27014  0024E6  0A01               	xorlw	1	; case 3
 27015  0024E8  B4D8               	btfsc	status,2,c
 27016  0024EA  D7A5               	goto	l13014
 27017  0024EC  D7E5               	goto	l13036
 27018  0024EE                     __end_of_MSDTasks:
 27019                           	opt stack 0
 27020                           tosu	equ	0xFFF
 27021                           tosh	equ	0xFFE
 27022                           tosl	equ	0xFFD
 27023                           pclath	equ	0xFFA
 27024                           tblptru	equ	0xFF8
 27025                           tblptrh	equ	0xFF7
 27026                           tblptrl	equ	0xFF6
 27027                           tablat	equ	0xFF5
 27028                           prodh	equ	0xFF4
 27029                           prodl	equ	0xFF3
 27030                           intcon	equ	0xFF2
 27031                           intcon2	equ	0xFF1
 27032                           intcon3	equ	0xFF0
 27033                           indf0	equ	0xFEF
 27034                           postinc0	equ	0xFEE
 27035                           fsr0h	equ	0xFEA
 27036                           fsr0l	equ	0xFE9
 27037                           wreg	equ	0xFE8
 27038                           indf1	equ	0xFE7
 27039                           postdec1	equ	0xFE5
 27040                           plusw1	equ	0xFE3
 27041                           fsr1h	equ	0xFE2
 27042                           fsr1l	equ	0xFE1
 27043                           indf2	equ	0xFDF
 27044                           postinc2	equ	0xFDE
 27045                           postdec2	equ	0xFDD
 27046                           plusw2	equ	0xFDB
 27047                           fsr2h	equ	0xFDA
 27048                           fsr2l	equ	0xFD9
 27049                           status	equ	0xFD8
 27050                           
 27051 ;; *************** function _MSDProcessCommand *****************
 27052 ;; Defined at:
 27053 ;;		line 553 in file "usb_device_msd.c"
 27054 ;; Parameters:    Size  Location     Type
 27055 ;;		None
 27056 ;; Auto vars:     Size  Location     Type
 27057 ;;		None
 27058 ;; Return value:  Size  Location     Type
 27059 ;;                  1    wreg      unsigned char 
 27060 ;; Registers used:
 27061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 27062 ;; Tracked objects:
 27063 ;;		On entry : 0/0
 27064 ;;		On exit  : 0/0
 27065 ;;		Unchanged: 0/0
 27066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27069 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27070 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27071 ;;Total ram usage:        5 bytes
 27072 ;; Hardware stack levels used:    1
 27073 ;; Hardware stack levels required when called:    9
 27074 ;; This function calls:
 27075 ;;		_ExternalFlash_MediaDetect
 27076 ;;		_ExternalFlash_MediaInitialize
 27077 ;;		_MSDProcessCommandMediaAbsent
 27078 ;;		_MSDProcessCommandMediaPresent
 27079 ;; This function is called by:
 27080 ;;		_MSDTasks
 27081 ;; This function uses a non-reentrant model
 27082 ;;
 27083                           
 27084                           	psect	text125
 27085  003EF2                     __ptext125:
 27086                           	opt stack 0
 27087  003EF2                     _MSDProcessCommand:
 27088                           	opt stack 19
 27089                           
 27090                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 27091                           
 27092                           ;incstack = 0
 27093  003EF2  C1C7  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 27094  003EF6  C1C8  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 27095  003EFA  D801               	call	u8838
 27096  003EFC  D00A               	goto	u8839
 27097  003EFE                     u8838:
 27098  003EFE  0005               	push	
 27099  003F00  6EFA               	movwf	pclath,c
 27100  003F02  0101               	movlb	1	; () banked
 27101  003F04  51BF               	movf	(_LUN+6)& (0+255),w,b
 27102  003F06  6EFD               	movwf	tosl,c
 27103  003F08  51C0               	movf	(_LUN+7)& (0+255),w,b
 27104  003F0A  6EFE               	movwf	tosh,c
 27105  003F0C  6AFF               	clrf	tosu,c
 27106  003F0E  50FA               	movf	pclath,w,c
 27107  003F10  0012               	return		;indir
 27108  003F12                     u8839:
 27109  003F12  0900               	iorlw	0
 27110  003F14  B4D8               	btfsc	status,2,c
 27111  003F16  D00C               	goto	l12010
 27112  003F18  0101               	movlb	1	; () banked
 27113  003F1A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 27114  003F1C  0D01               	mullw	1
 27115  003F1E  0E88               	movlw	low _SoftDetach
 27116  003F20  24F3               	addwf	prodl,w,c
 27117  003F22  6ED9               	movwf	fsr2l,c
 27118  003F24  0E01               	movlw	high _SoftDetach
 27119  003F26  20F4               	addwfc	prodh,w,c
 27120  003F28  6EDA               	movwf	fsr2h,c
 27121  003F2A  04DE               	decf	postinc2,w,c
 27122  003F2C  A4D8               	btfss	status,2,c
 27123  003F2E  D01A               	goto	l12014
 27124  003F30                     l12010:
 27125                           
 27126                           ;usb_device_msd.c: 558: {
 27127                           ;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCBW.bCBWLUN);
 27128  003F30  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 27129  003F34  0E01               	movlw	1
 27130  003F36  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 27131  003F38  0E00               	movlw	0
 27132  003F3A  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 27133  003F3C  2A48               	incf	??_MSDProcessCommand,f,c
 27134  003F3E  D003               	goto	u8864
 27135  003F40                     u8865:
 27136  003F40  90D8               	bcf	status,0,c
 27137  003F42  3649               	rlcf	??_MSDProcessCommand+1,f,c
 27138  003F44  364A               	rlcf	??_MSDProcessCommand+2,f,c
 27139  003F46                     u8864:
 27140  003F46  2E48               	decfsz	??_MSDProcessCommand,f,c
 27141  003F48  D7FB               	goto	u8865
 27142  003F4A  1C49               	comf	??_MSDProcessCommand+1,w,c
 27143  003F4C  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 27144  003F4E  1C4A               	comf	??_MSDProcessCommand+2,w,c
 27145  003F50  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 27146  003F52  504B               	movf	??_MSDProcessCommand+3,w,c
 27147  003F54  0101               	movlb	1	; () banked
 27148  003F56  1778               	andwf	_gblMediaPresent& (0+255),f,b
 27149  003F58  504C               	movf	??_MSDProcessCommand+4,w,c
 27150  003F5A  0101               	movlb	1	; () banked
 27151  003F5C  1779               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 27152                           
 27153                           ; BSR set to: 1
 27154                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 27155  003F5E  EC0B  F033         	call	_MSDProcessCommandMediaAbsent	;wreg free
 27156                           
 27157                           ;usb_device_msd.c: 563: }
 27158  003F62  D054               	goto	l12034
 27159  003F64                     l12014:
 27160                           
 27161                           ;usb_device_msd.c: 564: else
 27162                           ;usb_device_msd.c: 565: {
 27163                           ;usb_device_msd.c: 567: if((gblMediaPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 27164  003F64  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 27165  003F68  0E01               	movlw	1
 27166  003F6A  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 27167  003F6C  0E00               	movlw	0
 27168  003F6E  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 27169  003F70  2A48               	incf	??_MSDProcessCommand,f,c
 27170  003F72  D003               	goto	u8874
 27171  003F74                     u8875:
 27172  003F74  90D8               	bcf	status,0,c
 27173  003F76  3649               	rlcf	??_MSDProcessCommand+1,f,c
 27174  003F78  364A               	rlcf	??_MSDProcessCommand+2,f,c
 27175  003F7A                     u8874:
 27176  003F7A  2E48               	decfsz	??_MSDProcessCommand,f,c
 27177  003F7C  D7FB               	goto	u8875
 27178  003F7E  0101               	movlb	1	; () banked
 27179  003F80  5178               	movf	_gblMediaPresent& (0+255),w,b
 27180  003F82  1649               	andwf	??_MSDProcessCommand+1,f,c
 27181  003F84  0101               	movlb	1	; () banked
 27182  003F86  5179               	movf	(_gblMediaPresent+1)& (0+255),w,b
 27183  003F88  164A               	andwf	??_MSDProcessCommand+2,f,c
 27184  003F8A  5049               	movf	??_MSDProcessCommand+1,w,c
 27185  003F8C  104A               	iorwf	??_MSDProcessCommand+2,w,c
 27186  003F8E  A4D8               	btfss	status,2,c
 27187  003F90  D03B               	goto	l12032
 27188                           
 27189                           ; BSR set to: 1
 27190                           ;usb_device_msd.c: 568: {
 27191                           ;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaParameters))
 27192  003F92  C1C7  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 27193  003F96  C1C8  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 27194  003F9A  D801               	call	u8898
 27195  003F9C  D00A               	goto	u8899
 27196  003F9E                     u8898:
 27197  003F9E  0005               	push	
 27198  003FA0  6EFA               	movwf	pclath,c
 27199  003FA2  0101               	movlb	1	; () banked
 27200  003FA4  51B9               	movf	_LUN& (0+255),w,b
 27201  003FA6  6EFD               	movwf	tosl,c
 27202  003FA8  51BA               	movf	(_LUN+1)& (0+255),w,b
 27203  003FAA  6EFE               	movwf	tosh,c
 27204  003FAC  6AFF               	clrf	tosu,c
 27205  003FAE  50FA               	movf	pclath,w,c
 27206  003FB0  0012               	return		;indir
 27207  003FB2                     u8899:
 27208  003FB2  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 27209  003FB4  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 27210  003FB6  B4D8               	btfsc	status,2,c
 27211  003FB8  D024               	goto	l12030
 27212                           
 27213                           ;usb_device_msd.c: 571: {
 27214                           ;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW.bCBWLUN);
 27215  003FBA  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 27216  003FBE  0E01               	movlw	1
 27217  003FC0  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 27218  003FC2  0E00               	movlw	0
 27219  003FC4  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 27220  003FC6  2A48               	incf	??_MSDProcessCommand,f,c
 27221  003FC8  D003               	goto	u8914
 27222  003FCA                     u8915:
 27223  003FCA  90D8               	bcf	status,0,c
 27224  003FCC  3649               	rlcf	??_MSDProcessCommand+1,f,c
 27225  003FCE  364A               	rlcf	??_MSDProcessCommand+2,f,c
 27226  003FD0                     u8914:
 27227  003FD0  2E48               	decfsz	??_MSDProcessCommand,f,c
 27228  003FD2  D7FB               	goto	u8915
 27229  003FD4  5049               	movf	??_MSDProcessCommand+1,w,c
 27230  003FD6  0101               	movlb	1	; () banked
 27231  003FD8  1378               	iorwf	_gblMediaPresent& (0+255),f,b
 27232  003FDA  504A               	movf	??_MSDProcessCommand+2,w,c
 27233  003FDC  0101               	movlb	1	; () banked
 27234  003FDE  1379               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 27235                           
 27236                           ; BSR set to: 1
 27237                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 27238  003FE0  0101               	movlb	1	; () banked
 27239  003FE2  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 27240  003FE4  0BF0               	andlw	-16
 27241  003FE6  0906               	iorlw	6
 27242  003FE8  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 27243                           
 27244                           ; BSR set to: 1
 27245                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 27246  003FEA  0E28               	movlw	40
 27247  003FEC  0101               	movlb	1	; () banked
 27248  003FEE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 27249                           
 27250                           ; BSR set to: 1
 27251                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 27252  003FF0  0E00               	movlw	0
 27253  003FF2  0101               	movlb	1	; () banked
 27254  003FF4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 27255                           
 27256                           ; BSR set to: 1
 27257                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 27258  003FF6  0E01               	movlw	1
 27259  003FF8  010D               	movlb	13	; () banked
 27260  003FFA  6F8C               	movwf	140,b	;volatile
 27261                           
 27262                           ; BSR set to: 13
 27263                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 27264  003FFC  EC49  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 27265                           
 27266                           ;usb_device_msd.c: 589: }
 27267  004000  D005               	goto	l12034
 27268  004002                     l12030:
 27269                           
 27270                           ;usb_device_msd.c: 590: else
 27271                           ;usb_device_msd.c: 591: {
 27272                           ;usb_device_msd.c: 593: MSDProcessCommandMediaAbsent();
 27273  004002  EC0B  F033         	call	_MSDProcessCommandMediaAbsent	;wreg free
 27274                           
 27275                           ;usb_device_msd.c: 594: }
 27276                           ;usb_device_msd.c: 595: }
 27277  004006  D002               	goto	l12034
 27278  004008                     l12032:
 27279                           
 27280                           ;usb_device_msd.c: 596: else
 27281                           ;usb_device_msd.c: 597: {
 27282                           ;usb_device_msd.c: 600: MSDProcessCommandMediaPresent();
 27283  004008  EC49  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 27284  00400C                     l12034:
 27285                           
 27286                           ;usb_device_msd.c: 601: }
 27287                           ;usb_device_msd.c: 602: }
 27288                           ;usb_device_msd.c: 604: return MSDCommandState;
 27289  00400C  0100               	movlb	0	; () banked
 27290  00400E  51F9               	movf	_MSDCommandState& (0+255),w,b
 27291  004010  0012               	return	
 27292  004012                     __end_of_MSDProcessCommand:
 27293                           	opt stack 0
 27294                           tosu	equ	0xFFF
 27295                           tosh	equ	0xFFE
 27296                           tosl	equ	0xFFD
 27297                           pclath	equ	0xFFA
 27298                           tblptru	equ	0xFF8
 27299                           tblptrh	equ	0xFF7
 27300                           tblptrl	equ	0xFF6
 27301                           tablat	equ	0xFF5
 27302                           prodh	equ	0xFF4
 27303                           prodl	equ	0xFF3
 27304                           intcon	equ	0xFF2
 27305                           intcon2	equ	0xFF1
 27306                           intcon3	equ	0xFF0
 27307                           indf0	equ	0xFEF
 27308                           postinc0	equ	0xFEE
 27309                           fsr0h	equ	0xFEA
 27310                           fsr0l	equ	0xFE9
 27311                           wreg	equ	0xFE8
 27312                           indf1	equ	0xFE7
 27313                           postdec1	equ	0xFE5
 27314                           plusw1	equ	0xFE3
 27315                           fsr1h	equ	0xFE2
 27316                           fsr1l	equ	0xFE1
 27317                           indf2	equ	0xFDF
 27318                           postinc2	equ	0xFDE
 27319                           postdec2	equ	0xFDD
 27320                           plusw2	equ	0xFDB
 27321                           fsr2h	equ	0xFDA
 27322                           fsr2l	equ	0xFD9
 27323                           status	equ	0xFD8
 27324                           
 27325 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 27326 ;; Defined at:
 27327 ;;		line 635 in file "usb_device_msd.c"
 27328 ;; Parameters:    Size  Location     Type
 27329 ;;		None
 27330 ;; Auto vars:     Size  Location     Type
 27331 ;;		None
 27332 ;; Return value:  Size  Location     Type
 27333 ;;                  1    wreg      void 
 27334 ;; Registers used:
 27335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 27336 ;; Tracked objects:
 27337 ;;		On entry : 0/0
 27338 ;;		On exit  : 0/0
 27339 ;;		Unchanged: 0/0
 27340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27345 ;;Total ram usage:        0 bytes
 27346 ;; Hardware stack levels used:    1
 27347 ;; Hardware stack levels required when called:    8
 27348 ;; This function calls:
 27349 ;;		_MSDErrorHandler
 27350 ;;		_MSDProcessCommandMediaPresent
 27351 ;;		_ResetSenseData
 27352 ;; This function is called by:
 27353 ;;		_MSDProcessCommand
 27354 ;; This function uses a non-reentrant model
 27355 ;;
 27356                           
 27357                           	psect	text126
 27358  006616                     __ptext126:
 27359                           	opt stack 0
 27360  006616                     _MSDProcessCommandMediaAbsent:
 27361                           	opt stack 19
 27362                           
 27363                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 27364                           
 27365                           ; BSR set to: 0
 27366                           ;incstack = 0
 27367  006616  D020               	goto	l11178
 27368  006618                     l11156:
 27369                           
 27370                           ;usb_device_msd.c: 646: ResetSenseData();
 27371  006618  EC90  F02F         	call	_ResetSenseData	;wreg free
 27372                           
 27373                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 27374  00661C  0101               	movlb	1	; () banked
 27375  00661E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 27376  006620  0BF0               	andlw	-16
 27377  006622  0902               	iorlw	2
 27378  006624  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 27379                           
 27380                           ; BSR set to: 1
 27381                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 27382  006626  0E3A               	movlw	58
 27383  006628  0101               	movlb	1	; () banked
 27384  00662A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 27385                           
 27386                           ; BSR set to: 1
 27387                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 27388  00662C  0E00               	movlw	0
 27389  00662E  0101               	movlb	1	; () banked
 27390  006630  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 27391                           
 27392                           ; BSR set to: 1
 27393                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 27394  006632  EC49  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 27395                           
 27396                           ;usb_device_msd.c: 655: break;
 27397  006636  0012               	return	
 27398  006638                     l11166:
 27399                           
 27400                           ;usb_device_msd.c: 658: case 0x00:
 27401                           ;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 27402  006638  0E01               	movlw	1
 27403  00663A  010D               	movlb	13	; () banked
 27404  00663C  6F8C               	movwf	140,b	;volatile
 27405                           
 27406                           ; BSR set to: 13
 27407                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 27408  00663E  0100               	movlb	0	; () banked
 27409  006640  69F9               	setf	_MSDCommandState& (0+255),b
 27410                           
 27411                           ;usb_device_msd.c: 665: break;
 27412  006642  0012               	return	
 27413  006644                     l11170:
 27414                           
 27415                           ; BSR set to: 0
 27416                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 27417  006644  EC49  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 27418                           
 27419                           ;usb_device_msd.c: 671: break;
 27420  006648  0012               	return	
 27421  00664A                     l11172:
 27422                           
 27423                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 27424  00664A  EC49  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 27425                           
 27426                           ;usb_device_msd.c: 677: break;
 27427  00664E  0012               	return	
 27428  006650                     l11174:
 27429                           
 27430                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 27431  006650  0E7F               	movlw	127
 27432  006652  ECE8  F01E         	call	_MSDErrorHandler
 27433                           
 27434                           ;usb_device_msd.c: 685: }
 27435                           
 27436                           ;usb_device_msd.c: 684: break;
 27437  006656  0012               	return	
 27438  006658                     l11178:
 27439  006658  0100               	movlb	0	; () banked
 27440  00665A  51F9               	movf	_MSDCommandState& (0+255),w,b
 27441                           
 27442                           ; Switch size 1, requested type "space"
 27443                           ; Number of cases is 5, Range of values is 0 to 253
 27444                           ; switch strategies available:
 27445                           ; Name         Instructions Cycles
 27446                           ; simple_byte           16     9 (average)
 27447                           ;	Chosen strategy is simple_byte
 27448  00665C  0A00               	xorlw	0	; case 0
 27449  00665E  B4D8               	btfsc	status,2,c
 27450  006660  D7EB               	goto	l11166
 27451  006662  0A03               	xorlw	3	; case 3
 27452  006664  B4D8               	btfsc	status,2,c
 27453  006666  D7D8               	goto	l11156
 27454  006668  0A11               	xorlw	17	; case 18
 27455  00666A  B4D8               	btfsc	status,2,c
 27456  00666C  D7EB               	goto	l11170
 27457  00666E  0A0C               	xorlw	12	; case 30
 27458  006670  B4D8               	btfsc	status,2,c
 27459  006672  D7E2               	goto	l11166
 27460  006674  0AE3               	xorlw	227	; case 253
 27461  006676  B4D8               	btfsc	status,2,c
 27462  006678  D7E8               	goto	l11172
 27463  00667A  D7EA               	goto	l11174
 27464  00667C                     __end_of_MSDProcessCommandMediaAbsent:
 27465                           	opt stack 0
 27466                           tosu	equ	0xFFF
 27467                           tosh	equ	0xFFE
 27468                           tosl	equ	0xFFD
 27469                           pclath	equ	0xFFA
 27470                           tblptru	equ	0xFF8
 27471                           tblptrh	equ	0xFF7
 27472                           tblptrl	equ	0xFF6
 27473                           tablat	equ	0xFF5
 27474                           prodh	equ	0xFF4
 27475                           prodl	equ	0xFF3
 27476                           intcon	equ	0xFF2
 27477                           intcon2	equ	0xFF1
 27478                           intcon3	equ	0xFF0
 27479                           indf0	equ	0xFEF
 27480                           postinc0	equ	0xFEE
 27481                           fsr0h	equ	0xFEA
 27482                           fsr0l	equ	0xFE9
 27483                           wreg	equ	0xFE8
 27484                           indf1	equ	0xFE7
 27485                           postdec1	equ	0xFE5
 27486                           plusw1	equ	0xFE3
 27487                           fsr1h	equ	0xFE2
 27488                           fsr1l	equ	0xFE1
 27489                           indf2	equ	0xFDF
 27490                           postinc2	equ	0xFDE
 27491                           postdec2	equ	0xFDD
 27492                           plusw2	equ	0xFDB
 27493                           fsr2h	equ	0xFDA
 27494                           fsr2l	equ	0xFD9
 27495                           status	equ	0xFD8
 27496                           
 27497 ;; *************** function _MSDProcessCommandMediaPresent *****************
 27498 ;; Defined at:
 27499 ;;		line 712 in file "usb_device_msd.c"
 27500 ;; Parameters:    Size  Location     Type
 27501 ;;		None
 27502 ;; Auto vars:     Size  Location     Type
 27503 ;;  capacity        4   66[COMRAM] struct .
 27504 ;;  sectorSize      4   62[COMRAM] struct .
 27505 ;;  i               1   70[COMRAM] unsigned char 
 27506 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 27507 ;; Return value:  Size  Location     Type
 27508 ;;                  1    wreg      void 
 27509 ;; Registers used:
 27510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 27511 ;; Tracked objects:
 27512 ;;		On entry : 0/0
 27513 ;;		On exit  : 0/0
 27514 ;;		Unchanged: 0/0
 27515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27517 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27518 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27519 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27520 ;;Total ram usage:       14 bytes
 27521 ;; Hardware stack levels used:    1
 27522 ;; Hardware stack levels required when called:    7
 27523 ;; This function calls:
 27524 ;;		_ExternalFlash_CapacityRead
 27525 ;;		_ExternalFlash_SectorSizeRead
 27526 ;;		_ExternalFlash_WriteProtectStateGet
 27527 ;;		_MSDCheckForErrorCases
 27528 ;;		_MSDComputeDeviceInAndResidue
 27529 ;;		_MSDErrorHandler
 27530 ;;		_MSDReadHandler
 27531 ;;		_MSDWriteHandler
 27532 ;;		_ResetSenseData
 27533 ;;		_USBTransferOnePacket
 27534 ;;		_memcpy
 27535 ;; This function is called by:
 27536 ;;		_MSDProcessCommand
 27537 ;;		_MSDProcessCommandMediaAbsent
 27538 ;; This function uses a non-reentrant model
 27539 ;;
 27540                           
 27541                           	psect	text127
 27542  000892                     __ptext127:
 27543                           	opt stack 0
 27544  000892                     _MSDProcessCommandMediaPresent:
 27545                           	opt stack 20
 27546                           
 27547                           ;usb_device_msd.c: 714: uint8_t i;
 27548                           ;usb_device_msd.c: 715: uint8_t NumBytesInPacket;
 27549                           ;usb_device_msd.c: 718: switch(MSDCommandState)
 27550                           
 27551                           ;incstack = 0
 27552  000892  D1D1               	goto	l10908
 27553  000894                     l10762:
 27554                           
 27555                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 27556  000894  ECD7  F015         	call	_MSDReadHandler	;wreg free
 27557  000898  0900               	iorlw	0
 27558  00089A  A4D8               	btfss	status,2,c
 27559  00089C  0012               	return	
 27560                           
 27561                           ;usb_device_msd.c: 726: {
 27562                           ;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 27563  00089E  0100               	movlb	0	; () banked
 27564  0008A0  69F9               	setf	_MSDCommandState& (0+255),b
 27565                           
 27566                           ; BSR set to: 0
 27567                           ;usb_device_msd.c: 728: }
 27568                           ;usb_device_msd.c: 729: break;
 27569  0008A2  0012               	return	
 27570  0008A4                     l10766:
 27571                           
 27572                           ; BSR set to: 0
 27573                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 27574  0008A4  EC63  F00E         	call	_MSDWriteHandler	;wreg free
 27575  0008A8  0900               	iorlw	0
 27576  0008AA  A4D8               	btfss	status,2,c
 27577  0008AC  0012               	return	
 27578                           
 27579                           ;usb_device_msd.c: 737: {
 27580                           ;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 27581  0008AE  0100               	movlb	0	; () banked
 27582  0008B0  69F9               	setf	_MSDCommandState& (0+255),b
 27583                           
 27584                           ; BSR set to: 0
 27585                           ;usb_device_msd.c: 739: }
 27586                           ;usb_device_msd.c: 740: break;
 27587  0008B2  0012               	return	
 27588  0008B4                     l10770:
 27589                           
 27590                           ; BSR set to: 0
 27591                           ;usb_device_msd.c: 743: {
 27592                           ;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 27593  0008B4  0100               	movlb	0	; () banked
 27594  0008B6  05F8               	decf	_MSDHostNoData& (0+255),w,b
 27595  0008B8  A4D8               	btfss	status,2,c
 27596  0008BA  D003               	goto	l621
 27597                           
 27598                           ; BSR set to: 0
 27599                           ;usb_device_msd.c: 749: {
 27600                           ;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 27601  0008BC  0100               	movlb	0	; () banked
 27602  0008BE  69F9               	setf	_MSDCommandState& (0+255),b
 27603                           
 27604                           ;usb_device_msd.c: 751: break;
 27605  0008C0  0012               	return	
 27606  0008C2                     l621:
 27607                           
 27608                           ; BSR set to: 0
 27609                           ;usb_device_msd.c: 752: }
 27610                           ;usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3];
 27611  0008C2  C112  F177         	movff	_gblCBW+18,_TransferLength+1
 27612                           
 27613                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 27614  0008C6  C113  F176         	movff	_gblCBW+19,_TransferLength
 27615                           
 27616                           ; BSR set to: 0
 27617                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 27618  0008CA  C176  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 27619  0008CE  C177  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 27620  0008D2  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 27621  0008D4  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 27622  0008D6  EC38  F023         	call	_MSDCheckForErrorCases	;wreg free
 27623  0008DA  0900               	iorlw	0
 27624  0008DC  A4D8               	btfss	status,2,c
 27625  0008DE  0012               	return	
 27626                           
 27627                           ;usb_device_msd.c: 762: }
 27628                           ;usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(InquiryResponse));
 27629                           
 27630                           ;usb_device_msd.c: 760: {
 27631                           ;usb_device_msd.c: 761: break;
 27632  0008E0  0E00               	movlw	0
 27633  0008E2  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 27634  0008E4  0E24               	movlw	36
 27635  0008E6  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 27636  0008E8  EC01  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 27637                           
 27638                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 27639  0008EC  0E00               	movlw	0
 27640  0008EE  6E01               	movwf	memcpy@d1,c
 27641  0008F0  0E06               	movlw	6
 27642  0008F2  6E02               	movwf	memcpy@d1+1,c
 27643  0008F4  0E49               	movlw	low _inq_resp
 27644  0008F6  6E03               	movwf	memcpy@s1,c
 27645  0008F8  0E8F               	movlw	high _inq_resp
 27646  0008FA  6E04               	movwf	memcpy@s1+1,c
 27647  0008FC  5003               	movf	memcpy@s1,w,c
 27648  0008FE  1004               	iorwf	memcpy@s1+1,w,c
 27649  000900  A4D8               	btfss	status,2,c
 27650  000902  0E00               	movlw	low (__mediumconst shr (0+16))
 27651  000904  6E05               	movwf	memcpy@s1+2,c
 27652  000906  0E00               	movlw	0
 27653  000908  6E07               	movwf	memcpy@n+1,c
 27654  00090A  0E24               	movlw	36
 27655  00090C  6E06               	movwf	memcpy@n,c
 27656  00090E  EC3E  F033         	call	_memcpy	;wreg free
 27657                           
 27658                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 27659  000912  0EFD               	movlw	253
 27660  000914  0100               	movlb	0	; () banked
 27661  000916  6FF9               	movwf	_MSDCommandState& (0+255),b
 27662                           
 27663                           ;usb_device_msd.c: 773: break;
 27664  000918  0012               	return	
 27665  00091A                     l10784:
 27666                           
 27667                           ; BSR set to: 0
 27668                           ;usb_device_msd.c: 776: {
 27669                           ;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;
 27670                           ;usb_device_msd.c: 780: USB_MSD_CAPACITY capacity;
 27671                           ;usb_device_msd.c: 783: capacity.Val = LUN[0].ReadCapacity(LUN[0].mediaParameters);
 27672  00091A  C1C7  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 27673  00091E  C1C8  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 27674  000922  D801               	call	u8028
 27675  000924  D00A               	goto	u8029
 27676  000926                     u8028:
 27677  000926  0005               	push	
 27678  000928  6EFA               	movwf	pclath,c
 27679  00092A  0101               	movlb	1	; () banked
 27680  00092C  51BB               	movf	(_LUN+2)& (0+255),w,b
 27681  00092E  6EFD               	movwf	tosl,c
 27682  000930  51BC               	movf	(_LUN+3)& (0+255),w,b
 27683  000932  6EFE               	movwf	tosh,c
 27684  000934  6AFF               	clrf	tosu,c
 27685  000936  50FA               	movf	pclath,w,c
 27686  000938  0012               	return		;indir
 27687  00093A                     u8029:
 27688  00093A  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 27689  00093E  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 27690  000942  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 27691  000946  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 27692                           
 27693                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 27694  00094A  C1C7  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 27695  00094E  C1C8  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 27696  000952  D801               	call	u8038
 27697  000954  D00A               	goto	u8039
 27698  000956                     u8038:
 27699  000956  0005               	push	
 27700  000958  6EFA               	movwf	pclath,c
 27701  00095A  0101               	movlb	1	; () banked
 27702  00095C  51BD               	movf	(_LUN+4)& (0+255),w,b
 27703  00095E  6EFD               	movwf	tosl,c
 27704  000960  51BE               	movf	(_LUN+5)& (0+255),w,b
 27705  000962  6EFE               	movwf	tosh,c
 27706  000964  6AFF               	clrf	tosu,c
 27707  000966  50FA               	movf	pclath,w,c
 27708  000968  0012               	return		;indir
 27709  00096A                     u8039:
 27710  00096A  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 27711  00096E  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 27712  000972  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 27713  000974  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 27714                           
 27715                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 27716  000976  EE26 F000          	lfsr	2,1536
 27717  00097A  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 27718                           
 27719                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 27720  00097E  EE26 F001          	lfsr	2,1537	;volatile
 27721  000982  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 27722                           
 27723                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 27724  000986  EE26 F002          	lfsr	2,1538	;volatile
 27725  00098A  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 27726                           
 27727                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 27728  00098E  EE26 F003          	lfsr	2,1539	;volatile
 27729  000992  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 27730                           
 27731                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 27732  000996  EE26 F004          	lfsr	2,1540	;volatile
 27733  00099A  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 27734                           
 27735                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 27736  00099E  EE26 F005          	lfsr	2,1541	;volatile
 27737  0009A2  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 27738                           
 27739                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 27740  0009A6  EE26 F006          	lfsr	2,1542	;volatile
 27741  0009AA  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 27742                           
 27743                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 27744  0009AE  EE26 F007          	lfsr	2,1543	;volatile
 27745  0009B2  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 27746                           
 27747                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 27748  0009B6  0E00               	movlw	0
 27749  0009B8  0101               	movlb	1	; () banked
 27750  0009BA  6F77               	movwf	(_TransferLength+1)& (0+255),b
 27751  0009BC  0E08               	movlw	8
 27752  0009BE  6F76               	movwf	_TransferLength& (0+255),b
 27753                           
 27754                           ; BSR set to: 1
 27755                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 27756  0009C0  0E00               	movlw	0
 27757  0009C2  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 27758  0009C4  0E08               	movlw	8
 27759  0009C6  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 27760  0009C8  EC01  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 27761                           
 27762                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 27763  0009CC  0EFD               	movlw	253
 27764  0009CE  0100               	movlb	0	; () banked
 27765  0009D0  6FF9               	movwf	_MSDCommandState& (0+255),b
 27766                           
 27767                           ;usb_device_msd.c: 802: break;
 27768  0009D2  0012               	return	
 27769  0009D4                     l10808:
 27770                           
 27771                           ; BSR set to: 0
 27772                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 27773  0009D4  0100               	movlb	0	; () banked
 27774  0009D6  05F8               	decf	_MSDHostNoData& (0+255),w,b
 27775  0009D8  A4D8               	btfss	status,2,c
 27776  0009DA  D003               	goto	l10812
 27777                           
 27778                           ; BSR set to: 0
 27779                           ;usb_device_msd.c: 812: {
 27780                           ;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 27781  0009DC  0100               	movlb	0	; () banked
 27782  0009DE  69F9               	setf	_MSDCommandState& (0+255),b
 27783                           
 27784                           ;usb_device_msd.c: 814: break;
 27785  0009E0  0012               	return	
 27786  0009E2                     l10812:
 27787                           
 27788                           ; BSR set to: 0
 27789                           ;usb_device_msd.c: 815: }
 27790                           ;usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSenseResponse);
 27791  0009E2  0E00               	movlw	0
 27792  0009E4  0101               	movlb	1	; () banked
 27793  0009E6  6F77               	movwf	(_TransferLength+1)& (0+255),b
 27794  0009E8  0E12               	movlw	18
 27795  0009EA  6F76               	movwf	_TransferLength& (0+255),b
 27796                           
 27797                           ; BSR set to: 1
 27798                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 27799  0009EC  0E00               	movlw	0
 27800  0009EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 27801  0009F0  0E12               	movlw	18
 27802  0009F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 27803  0009F4  EC01  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 27804                           
 27805                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 27806  0009F8  0E00               	movlw	0
 27807  0009FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 27808  0009FC                     l10818:
 27809  0009FC  0E11               	movlw	17
 27810  0009FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 27811  000A00  D001               	goto	l10822
 27812  000A02  D014               	goto	l10828
 27813  000A04                     l10822:
 27814                           
 27815                           ;usb_device_msd.c: 823: {
 27816                           ;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 27817  000A04  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 27818  000A06  0D01               	mullw	1
 27819  000A08  0E1F               	movlw	low _gblSenseData
 27820  000A0A  24F3               	addwf	prodl,w,c
 27821  000A0C  6ED9               	movwf	fsr2l,c
 27822  000A0E  0E01               	movlw	high _gblSenseData
 27823  000A10  20F4               	addwfc	prodh,w,c
 27824  000A12  6EDA               	movwf	fsr2h,c
 27825  000A14  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 27826  000A16  0D01               	mullw	1
 27827  000A18  0E00               	movlw	0
 27828  000A1A  24F3               	addwf	prodl,w,c
 27829  000A1C  6EE1               	movwf	fsr1l,c
 27830  000A1E  0E06               	movlw	6
 27831  000A20  20F4               	addwfc	prodh,w,c
 27832  000A22  6EE2               	movwf	fsr1h,c
 27833  000A24  CFDF FFE7          	movff	indf2,indf1
 27834  000A28  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 27835  000A2A  D7E8               	goto	l10818
 27836  000A2C                     l10828:
 27837                           
 27838                           ;usb_device_msd.c: 825: }
 27839                           ;usb_device_msd.c: 826: MSDCommandState = 0xFD;
 27840  000A2C  0EFD               	movlw	253
 27841  000A2E  0100               	movlb	0	; () banked
 27842  000A30  6FF9               	movwf	_MSDCommandState& (0+255),b
 27843                           
 27844                           ;usb_device_msd.c: 827: break;
 27845  000A32  0012               	return	
 27846  000A34                     l628:
 27847                           
 27848                           ; BSR set to: 0
 27849                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 27850  000A34  0E03               	movlw	3
 27851  000A36  CFE8 F600          	movff	wreg,1536
 27852                           
 27853                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 27854  000A3A  0E00               	movlw	0
 27855  000A3C  CFE8 F601          	movff	wreg,1537	;volatile
 27856                           
 27857                           ; BSR set to: 0
 27858                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 27859  000A40  C1C7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 27860  000A44  C1C8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 27861  000A48  D801               	call	u8078
 27862  000A4A  D00A               	goto	u8079
 27863  000A4C                     u8078:
 27864  000A4C  0005               	push	
 27865  000A4E  6EFA               	movwf	pclath,c
 27866  000A50  0101               	movlb	1	; () banked
 27867  000A52  51C3               	movf	(_LUN+10)& (0+255),w,b
 27868  000A54  6EFD               	movwf	tosl,c
 27869  000A56  51C4               	movf	(_LUN+11)& (0+255),w,b
 27870  000A58  6EFE               	movwf	tosh,c
 27871  000A5A  6AFF               	clrf	tosu,c
 27872  000A5C  50FA               	movf	pclath,w,c
 27873  000A5E  0012               	return		;indir
 27874  000A60                     u8079:
 27875  000A60  0900               	iorlw	0
 27876  000A62  A4D8               	btfss	status,2,c
 27877  000A64  D004               	goto	l10834
 27878  000A66  0E00               	movlw	0
 27879  000A68  6E3D               	movwf	_MSDProcessCommandMediaPresent$2387+1,c
 27880  000A6A  0E00               	movlw	0
 27881  000A6C  D003               	goto	L19
 27882  000A6E                     l10834:
 27883  000A6E  0E00               	movlw	0
 27884  000A70  6E3D               	movwf	_MSDProcessCommandMediaPresent$2387+1,c
 27885  000A72  0E80               	movlw	128
 27886  000A74                     L19:
 27887  000A74  6E3C               	movwf	_MSDProcessCommandMediaPresent$2387,c
 27888  000A76  EE26 F002          	lfsr	2,1538	;volatile
 27889  000A7A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2387,indf2
 27890                           
 27891                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 27892  000A7E  0E00               	movlw	0
 27893  000A80  CFE8 F603          	movff	wreg,1539	;volatile
 27894                           
 27895                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 27896  000A84  0E00               	movlw	0
 27897  000A86  0101               	movlb	1	; () banked
 27898  000A88  6F77               	movwf	(_TransferLength+1)& (0+255),b
 27899  000A8A  0E04               	movlw	4
 27900  000A8C  6F76               	movwf	_TransferLength& (0+255),b
 27901                           
 27902                           ; BSR set to: 1
 27903                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 27904  000A8E  0E00               	movlw	0
 27905  000A90  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 27906  000A92  0E04               	movlw	4
 27907  000A94  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 27908  000A96  EC01  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 27909                           
 27910                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 27911  000A9A  0EFD               	movlw	253
 27912  000A9C  0100               	movlb	0	; () banked
 27913  000A9E  6FF9               	movwf	_MSDCommandState& (0+255),b
 27914                           
 27915                           ;usb_device_msd.c: 839: break;
 27916  000AA0  0012               	return	
 27917  000AA2                     l10846:
 27918                           
 27919                           ; BSR set to: 0
 27920                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 27921  000AA2  0101               	movlb	1	; () banked
 27922  000AA4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 27923  000AA6  0BF0               	andlw	-16
 27924  000AA8  0905               	iorlw	5
 27925  000AAA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 27926                           
 27927                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 27928  000AAC  0E20               	movlw	32
 27929  000AAE  0101               	movlb	1	; () banked
 27930  000AB0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 27931                           
 27932                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 27933  000AB2  0E00               	movlw	0
 27934  000AB4  0101               	movlb	1	; () banked
 27935  000AB6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 27936                           
 27937                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 27938  000AB8  0E01               	movlw	1
 27939  000ABA  010D               	movlb	13	; () banked
 27940  000ABC  6F8C               	movwf	140,b	;volatile
 27941                           
 27942                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 27943  000ABE  0E00               	movlw	0
 27944  000AC0  010D               	movlb	13	; () banked
 27945  000AC2  6F88               	movwf	136,b	;volatile
 27946  000AC4  0E00               	movlw	0
 27947  000AC6  6F89               	movwf	137,b	;volatile
 27948  000AC8  0E00               	movlw	0
 27949  000ACA  6F8A               	movwf	138,b	;volatile
 27950  000ACC  0E00               	movlw	0
 27951  000ACE  6F8B               	movwf	139,b	;volatile
 27952                           
 27953                           ; BSR set to: 13
 27954                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 27955  000AD0  0100               	movlb	0	; () banked
 27956  000AD2  69F9               	setf	_MSDCommandState& (0+255),b
 27957                           
 27958                           ;usb_device_msd.c: 848: break;
 27959  000AD4  0012               	return	
 27960  000AD6                     l10850:
 27961                           
 27962                           ; BSR set to: 0
 27963                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 27964  000AD6  0E00               	movlw	0
 27965  000AD8  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 27966  000ADA  0E00               	movlw	0
 27967  000ADC  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 27968  000ADE  0E00               	movlw	0
 27969  000AE0  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 27970  000AE2  0E00               	movlw	0
 27971  000AE4  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 27972  000AE6  EC38  F023         	call	_MSDCheckForErrorCases	;wreg free
 27973  000AEA  0900               	iorlw	0
 27974  000AEC  A4D8               	btfss	status,2,c
 27975  000AEE  0012               	return	
 27976                           
 27977                           ;usb_device_msd.c: 861: }
 27978                           ;usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (msd_csw.bCSWStatus==0x01)
      +                          )
 27979                           
 27980                           ;usb_device_msd.c: 859: {
 27981                           ;usb_device_msd.c: 860: break;
 27982  000AF0  0101               	movlb	1	; () banked
 27983  000AF2  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 27984  000AF4  0B0F               	andlw	15
 27985  000AF6  0A06               	xorlw	6
 27986  000AF8  A4D8               	btfss	status,2,c
 27987  000AFA  D007               	goto	l10860
 27988                           
 27989                           ; BSR set to: 1
 27990  000AFC  010D               	movlb	13	; () banked
 27991  000AFE  058C               	decf	140,w,b	;volatile
 27992  000B00  A4D8               	btfss	status,2,c
 27993  000B02  D003               	goto	l10860
 27994                           
 27995                           ; BSR set to: 13
 27996                           ;usb_device_msd.c: 868: {
 27997                           ;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 27998  000B04  0100               	movlb	0	; () banked
 27999  000B06  69F9               	setf	_MSDCommandState& (0+255),b
 28000                           
 28001                           ;usb_device_msd.c: 870: }
 28002  000B08  0012               	return	
 28003  000B0A                     l10860:
 28004                           
 28005                           ;usb_device_msd.c: 871: else
 28006                           ;usb_device_msd.c: 872: {
 28007                           ;usb_device_msd.c: 873: ResetSenseData();
 28008  000B0A  EC90  F02F         	call	_ResetSenseData	;wreg free
 28009                           
 28010                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 28011  000B0E  0E00               	movlw	0
 28012  000B10  010D               	movlb	13	; () banked
 28013  000B12  6F88               	movwf	136,b	;volatile
 28014  000B14  0E00               	movlw	0
 28015  000B16  6F89               	movwf	137,b	;volatile
 28016  000B18  0E00               	movlw	0
 28017  000B1A  6F8A               	movwf	138,b	;volatile
 28018  000B1C  0E00               	movlw	0
 28019  000B1E  6F8B               	movwf	139,b	;volatile
 28020                           
 28021                           ; BSR set to: 13
 28022                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 28023  000B20  0100               	movlb	0	; () banked
 28024  000B22  69F9               	setf	_MSDCommandState& (0+255),b
 28025                           
 28026                           ; BSR set to: 0
 28027                           ;usb_device_msd.c: 876: }
 28028                           ;usb_device_msd.c: 877: break;
 28029  000B24  0012               	return	
 28030  000B26                     l10866:
 28031                           
 28032                           ; BSR set to: 0
 28033                           ;usb_device_msd.c: 882: case 0x1b:
 28034                           ;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 28035  000B26  0E00               	movlw	0
 28036  000B28  010D               	movlb	13	; () banked
 28037  000B2A  6F88               	movwf	136,b	;volatile
 28038  000B2C  0E00               	movlw	0
 28039  000B2E  6F89               	movwf	137,b	;volatile
 28040  000B30  0E00               	movlw	0
 28041  000B32  6F8A               	movwf	138,b	;volatile
 28042  000B34  0E00               	movlw	0
 28043  000B36  6F8B               	movwf	139,b	;volatile
 28044                           
 28045                           ; BSR set to: 13
 28046                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 28047  000B38  0100               	movlb	0	; () banked
 28048  000B3A  69F9               	setf	_MSDCommandState& (0+255),b
 28049                           
 28050                           ;usb_device_msd.c: 885: break;
 28051  000B3C  0012               	return	
 28052  000B3E                     l10870:
 28053                           
 28054                           ; BSR set to: 0
 28055                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 28056  000B3E  0100               	movlb	0	; () banked
 28057  000B40  51F4               	movf	_USBMSDInHandle& (0+255),w,b
 28058  000B42  0100               	movlb	0	; () banked
 28059  000B44  11F5               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 28060  000B46  B4D8               	btfsc	status,2,c
 28061  000B48  D007               	goto	l10874
 28062                           
 28063                           ; BSR set to: 0
 28064  000B4A  C0F4  FFD9         	movff	_USBMSDInHandle,fsr2l
 28065  000B4E  C0F5  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 28066  000B52  0100               	movlb	0	; () banked
 28067  000B54  BEDF               	btfsc	indf2,7,c
 28068  000B56  0012               	return	
 28069  000B58                     l10874:
 28070                           
 28071                           ; BSR set to: 0
 28072                           ;usb_device_msd.c: 893: {
 28073                           ;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u)
 28074  000B58  0101               	movlb	1	; () banked
 28075  000B5A  510B               	movf	(_gblCBW+11)& (0+255),w,b
 28076  000B5C  0101               	movlb	1	; () banked
 28077  000B5E  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 28078  000B60  0101               	movlb	1	; () banked
 28079  000B62  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 28080  000B64  E105               	bnz	u8140
 28081  000B66  0E40               	movlw	64
 28082  000B68  0101               	movlb	1	; () banked
 28083  000B6A  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 28084  000B6C  A0D8               	btfss	status,0,c
 28085  000B6E  D00A               	goto	l644
 28086  000B70                     u8140:
 28087                           
 28088                           ; BSR set to: 1
 28089                           ;usb_device_msd.c: 897: {
 28090                           ;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 28091  000B70  0E40               	movlw	64
 28092  000B72  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 28093                           
 28094                           ; BSR set to: 1
 28095                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 28096  000B74  0E40               	movlw	64
 28097  000B76  0101               	movlb	1	; () banked
 28098  000B78  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 28099  000B7A  0E00               	movlw	0
 28100  000B7C  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 28101  000B7E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 28102  000B80  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 28103                           
 28104                           ;usb_device_msd.c: 900: }
 28105  000B82  D00B               	goto	l10882
 28106  000B84                     l644:
 28107                           
 28108                           ; BSR set to: 1
 28109                           ;usb_device_msd.c: 901: else
 28110                           ;usb_device_msd.c: 902: {
 28111                           ;usb_device_msd.c: 905: NumBytesInPacket = gblCBW.dCBWDataTransferLength;
 28112  000B84  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 28113                           
 28114                           ; BSR set to: 1
 28115                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 28116  000B88  0E00               	movlw	0
 28117  000B8A  0101               	movlb	1	; () banked
 28118  000B8C  6F08               	movwf	(_gblCBW+8)& (0+255),b
 28119  000B8E  0E00               	movlw	0
 28120  000B90  6F09               	movwf	(_gblCBW+9)& (0+255),b
 28121  000B92  0E00               	movlw	0
 28122  000B94  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 28123  000B96  0E00               	movlw	0
 28124  000B98  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 28125  000B9A                     l10882:
 28126                           
 28127                           ; BSR set to: 1
 28128                           ;usb_device_msd.c: 907: }
 28129                           ;usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPacket)
 28130  000B9A  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 28131  000B9C  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 28132  000B9E  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 28133  000BA0  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 28134  000BA2  0101               	movlb	1	; () banked
 28135  000BA4  5D76               	subwf	_TransferLength& (0+255),w,b
 28136  000BA6  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 28137  000BA8  0101               	movlb	1	; () banked
 28138  000BAA  5977               	subwfb	(_TransferLength+1)& (0+255),w,b
 28139  000BAC  A0D8               	btfss	status,0,c
 28140  000BAE  D006               	goto	l10886
 28141                           
 28142                           ; BSR set to: 1
 28143                           ;usb_device_msd.c: 915: {
 28144                           ;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 28145  000BB0  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 28146  000BB2  0101               	movlb	1	; () banked
 28147  000BB4  5F76               	subwf	_TransferLength& (0+255),f,b
 28148  000BB6  0E00               	movlw	0
 28149  000BB8  5B77               	subwfb	(_TransferLength+1)& (0+255),f,b
 28150                           
 28151                           ;usb_device_msd.c: 918: }
 28152  000BBA  D01D               	goto	l10898
 28153  000BBC                     l10886:
 28154                           
 28155                           ; BSR set to: 1
 28156                           ;usb_device_msd.c: 919: else
 28157                           ;usb_device_msd.c: 920: {
 28158                           ;usb_device_msd.c: 927: for(i = 0; i < NumBytesInPacket; i++)
 28159  000BBC  0E00               	movlw	0
 28160  000BBE  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 28161  000BC0  D016               	goto	l10896
 28162  000BC2                     l10888:
 28163                           
 28164                           ; BSR set to: 1
 28165                           ;usb_device_msd.c: 928: {
 28166                           ;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 28167  000BC2  0101               	movlb	1	; () banked
 28168  000BC4  5176               	movf	_TransferLength& (0+255),w,b
 28169  000BC6  0101               	movlb	1	; () banked
 28170  000BC8  1177               	iorwf	(_TransferLength+1)& (0+255),w,b
 28171  000BCA  B4D8               	btfsc	status,2,c
 28172  000BCC  D005               	goto	l10892
 28173                           
 28174                           ; BSR set to: 1
 28175                           ;usb_device_msd.c: 930: {
 28176                           ;usb_device_msd.c: 931: TransferLength.Val--;
 28177  000BCE  0101               	movlb	1	; () banked
 28178  000BD0  0776               	decf	_TransferLength& (0+255),f,b
 28179  000BD2  A0D8               	btfss	status,0,c
 28180  000BD4  0777               	decf	(_TransferLength+1)& (0+255),f,b
 28181                           
 28182                           ;usb_device_msd.c: 932: }
 28183  000BD6  D00A               	goto	l10894
 28184  000BD8                     l10892:
 28185                           
 28186                           ; BSR set to: 1
 28187                           ;usb_device_msd.c: 933: else
 28188                           ;usb_device_msd.c: 934: {
 28189                           ;usb_device_msd.c: 935: msd_buffer[i] = 0x00;
 28190  000BD8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 28191  000BDA  0D01               	mullw	1
 28192  000BDC  0E00               	movlw	0
 28193  000BDE  24F3               	addwf	prodl,w,c
 28194  000BE0  6ED9               	movwf	fsr2l,c
 28195  000BE2  0E06               	movlw	6
 28196  000BE4  20F4               	addwfc	prodh,w,c
 28197  000BE6  6EDA               	movwf	fsr2h,c
 28198  000BE8  0E00               	movlw	0
 28199  000BEA  6EDF               	movwf	indf2,c
 28200  000BEC                     l10894:
 28201                           
 28202                           ; BSR set to: 1
 28203  000BEC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 28204  000BEE                     l10896:
 28205                           
 28206                           ; BSR set to: 1
 28207  000BEE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 28208  000BF0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 28209  000BF2  A0D8               	btfss	status,0,c
 28210  000BF4  D7E6               	goto	l10888
 28211  000BF6                     l10898:
 28212                           
 28213                           ; BSR set to: 1
 28214                           ;usb_device_msd.c: 936: }
 28215                           ;usb_device_msd.c: 937: }
 28216                           ;usb_device_msd.c: 938: }
 28217                           ;usb_device_msd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer
      +                          [0],NumBytesInPacket);
 28218  000BF6  0E01               	movlw	1
 28219  000BF8  6E01               	movwf	USBTransferOnePacket@dir,c
 28220  000BFA  0E00               	movlw	0
 28221  000BFC  6E02               	movwf	USBTransferOnePacket@data,c
 28222  000BFE  0E06               	movlw	6
 28223  000C00  6E03               	movwf	USBTransferOnePacket@data+1,c
 28224  000C02  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 28225  000C06  0E02               	movlw	2
 28226  000C08  ECB7  F022         	call	_USBTransferOnePacket
 28227  000C0C  C001  F0F4         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 28228  000C10  C002  F0F5         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 28229                           
 28230                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 28231  000C14  0101               	movlb	1	; () banked
 28232  000C16  5108               	movf	(_gblCBW+8)& (0+255),w,b
 28233  000C18  0101               	movlb	1	; () banked
 28234  000C1A  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 28235  000C1C  0101               	movlb	1	; () banked
 28236  000C1E  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 28237  000C20  0101               	movlb	1	; () banked
 28238  000C22  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 28239  000C24  A4D8               	btfss	status,2,c
 28240  000C26  0012               	return	
 28241                           
 28242                           ; BSR set to: 1
 28243                           ;usb_device_msd.c: 945: {
 28244                           ;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 28245  000C28  0100               	movlb	0	; () banked
 28246  000C2A  69F9               	setf	_MSDCommandState& (0+255),b
 28247                           
 28248                           ; BSR set to: 0
 28249                           ;usb_device_msd.c: 950: }
 28250                           ;usb_device_msd.c: 951: }
 28251                           ;usb_device_msd.c: 952: break;
 28252                           
 28253                           ; BSR set to: 0
 28254                           
 28255                           ;usb_device_msd.c: 949: break;
 28256  000C2C  0012               	return	
 28257  000C2E                     l10904:
 28258                           
 28259                           ; BSR set to: 0
 28260                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 28261  000C2E  0E7F               	movlw	127
 28262  000C30  ECE8  F01E         	call	_MSDErrorHandler
 28263                           
 28264                           ;usb_device_msd.c: 960: }
 28265                           
 28266                           ;usb_device_msd.c: 959: break;
 28267  000C34  0012               	return	
 28268  000C36                     l10908:
 28269  000C36  0100               	movlb	0	; () banked
 28270  000C38  51F9               	movf	_MSDCommandState& (0+255),w,b
 28271                           
 28272                           ; Switch size 1, requested type "space"
 28273                           ; Number of cases is 12, Range of values is 0 to 254
 28274                           ; switch strategies available:
 28275                           ; Name         Instructions Cycles
 28276                           ; simple_byte           37    19 (average)
 28277                           ;	Chosen strategy is simple_byte
 28278  000C3A  0A00               	xorlw	0	; case 0
 28279  000C3C  B4D8               	btfsc	status,2,c
 28280  000C3E  D74B               	goto	l10850
 28281  000C40  0A03               	xorlw	3	; case 3
 28282  000C42  B4D8               	btfsc	status,2,c
 28283  000C44  D6C7               	goto	l10808
 28284  000C46  0A11               	xorlw	17	; case 18
 28285  000C48  B4D8               	btfsc	status,2,c
 28286  000C4A  D634               	goto	l10770
 28287  000C4C  0A08               	xorlw	8	; case 26
 28288  000C4E  B4D8               	btfsc	status,2,c
 28289  000C50  D6F1               	goto	l628
 28290  000C52  0A01               	xorlw	1	; case 27
 28291  000C54  B4D8               	btfsc	status,2,c
 28292  000C56  D767               	goto	l10866
 28293  000C58  0A05               	xorlw	5	; case 30
 28294  000C5A  B4D8               	btfsc	status,2,c
 28295  000C5C  D722               	goto	l10846
 28296  000C5E  0A3B               	xorlw	59	; case 37
 28297  000C60  B4D8               	btfsc	status,2,c
 28298  000C62  D65B               	goto	l10784
 28299  000C64  0A0D               	xorlw	13	; case 40
 28300  000C66  B4D8               	btfsc	status,2,c
 28301  000C68  D615               	goto	l10762
 28302  000C6A  0A02               	xorlw	2	; case 42
 28303  000C6C  B4D8               	btfsc	status,2,c
 28304  000C6E  D61A               	goto	l10766
 28305  000C70  0A05               	xorlw	5	; case 47
 28306  000C72  B4D8               	btfsc	status,2,c
 28307  000C74  D758               	goto	l10866
 28308  000C76  0AD2               	xorlw	210	; case 253
 28309  000C78  B4D8               	btfsc	status,2,c
 28310  000C7A  D761               	goto	l10870
 28311  000C7C  0A03               	xorlw	3	; case 254
 28312  000C7E  D7D7               	goto	l10904
 28313  000C80                     __end_of_MSDProcessCommandMediaPresent:
 28314                           	opt stack 0
 28315                           tosu	equ	0xFFF
 28316                           tosh	equ	0xFFE
 28317                           tosl	equ	0xFFD
 28318                           pclath	equ	0xFFA
 28319                           tblptru	equ	0xFF8
 28320                           tblptrh	equ	0xFF7
 28321                           tblptrl	equ	0xFF6
 28322                           tablat	equ	0xFF5
 28323                           prodh	equ	0xFF4
 28324                           prodl	equ	0xFF3
 28325                           intcon	equ	0xFF2
 28326                           intcon2	equ	0xFF1
 28327                           intcon3	equ	0xFF0
 28328                           indf0	equ	0xFEF
 28329                           postinc0	equ	0xFEE
 28330                           fsr0h	equ	0xFEA
 28331                           fsr0l	equ	0xFE9
 28332                           wreg	equ	0xFE8
 28333                           indf1	equ	0xFE7
 28334                           postdec1	equ	0xFE5
 28335                           plusw1	equ	0xFE3
 28336                           fsr1h	equ	0xFE2
 28337                           fsr1l	equ	0xFE1
 28338                           indf2	equ	0xFDF
 28339                           postinc2	equ	0xFDE
 28340                           postdec2	equ	0xFDD
 28341                           plusw2	equ	0xFDB
 28342                           fsr2h	equ	0xFDA
 28343                           fsr2l	equ	0xFD9
 28344                           status	equ	0xFD8
 28345                           
 28346 ;; *************** function _MSDWriteHandler *****************
 28347 ;; Defined at:
 28348 ;;		line 1188 in file "usb_device_msd.c"
 28349 ;; Parameters:    Size  Location     Type
 28350 ;;		None
 28351 ;; Auto vars:     Size  Location     Type
 28352 ;;		None
 28353 ;; Return value:  Size  Location     Type
 28354 ;;                  1    wreg      unsigned char 
 28355 ;; Registers used:
 28356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 28357 ;; Tracked objects:
 28358 ;;		On entry : 0/0
 28359 ;;		On exit  : 0/0
 28360 ;;		Unchanged: 0/0
 28361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28364 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28365 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28366 ;;Total ram usage:        5 bytes
 28367 ;; Hardware stack levels used:    1
 28368 ;; Hardware stack levels required when called:    6
 28369 ;; This function calls:
 28370 ;;		_ExternalFlash_SectorWrite
 28371 ;;		_ExternalFlash_WriteProtectStateGet
 28372 ;;		_MSDCheckForErrorCases
 28373 ;;		_USBStallEndpoint
 28374 ;;		_USBTransferOnePacket
 28375 ;; This function is called by:
 28376 ;;		_MSDProcessCommandMediaPresent
 28377 ;; This function uses a non-reentrant model
 28378 ;;
 28379                           
 28380                           	psect	text128
 28381  001CC6                     __ptext128:
 28382                           	opt stack 0
 28383  001CC6                     _MSDWriteHandler:
 28384                           	opt stack 20
 28385                           
 28386                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 28387                           
 28388                           ;incstack = 0
 28389  001CC6  D164               	goto	l10446
 28390  001CC8                     l685:
 28391                           
 28392                           ; BSR set to: 1
 28393                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 28394  001CC8  C111  F15E         	movff	_gblCBW+17,_LBA+3
 28395                           
 28396                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 28397  001CCC  C112  F15D         	movff	_gblCBW+18,_LBA+2
 28398                           
 28399                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 28400  001CD0  C113  F15C         	movff	_gblCBW+19,_LBA+1
 28401                           
 28402                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 28403  001CD4  C114  F15B         	movff	_gblCBW+20,_LBA
 28404                           
 28405                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 28406  001CD8  C116  F177         	movff	_gblCBW+22,_TransferLength+1
 28407                           
 28408                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 28409  001CDC  C117  F176         	movff	_gblCBW+23,_TransferLength
 28410                           
 28411                           ; BSR set to: 1
 28412                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 28413  001CE0  0101               	movlb	1	; () banked
 28414  001CE2  5176               	movf	_TransferLength& (0+255),w,b
 28415  001CE4  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 28416  001CE6  0101               	movlb	1	; () banked
 28417  001CE8  5177               	movf	(_TransferLength+1)& (0+255),w,b
 28418  001CEA  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 28419  001CEC  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 28420  001CEE  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 28421  001CF0  0E09               	movlw	9
 28422  001CF2                     u7255:
 28423  001CF2  90D8               	bcf	status,0,c
 28424  001CF4  3630               	rlcf	??_MSDWriteHandler,f,c
 28425  001CF6  3631               	rlcf	??_MSDWriteHandler+1,f,c
 28426  001CF8  3632               	rlcf	??_MSDWriteHandler+2,f,c
 28427  001CFA  3633               	rlcf	??_MSDWriteHandler+3,f,c
 28428  001CFC  2EE8               	decfsz	wreg,f,c
 28429  001CFE  D7F9               	goto	u7255
 28430  001D00  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 28431  001D04  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 28432  001D08  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 28433  001D0C  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 28434  001D10  EC38  F023         	call	_MSDCheckForErrorCases	;wreg free
 28435  001D14  0900               	iorlw	0
 28436  001D16  A4D8               	btfss	status,2,c
 28437  001D18  D14D               	goto	l10448
 28438                           
 28439                           ;usb_device_msd.c: 1208: }
 28440                           ;usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].mediaParameters))
 28441                           
 28442                           ;usb_device_msd.c: 1204: {
 28443                           ;usb_device_msd.c: 1207: break;
 28444  001D1A  C1C7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 28445  001D1E  C1C8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 28446  001D22  D801               	call	u7278
 28447  001D24  D00A               	goto	u7279
 28448  001D26                     u7278:
 28449  001D26  0005               	push	
 28450  001D28  6EFA               	movwf	pclath,c
 28451  001D2A  0101               	movlb	1	; () banked
 28452  001D2C  51C3               	movf	(_LUN+10)& (0+255),w,b
 28453  001D2E  6EFD               	movwf	tosl,c
 28454  001D30  51C4               	movf	(_LUN+11)& (0+255),w,b
 28455  001D32  6EFE               	movwf	tosh,c
 28456  001D34  6AFF               	clrf	tosu,c
 28457  001D36  50FA               	movf	pclath,w,c
 28458  001D38  0012               	return		;indir
 28459  001D3A                     u7279:
 28460  001D3A  0900               	iorlw	0
 28461  001D3C  B4D8               	btfsc	status,2,c
 28462  001D3E  D019               	goto	l10382
 28463                           
 28464                           ;usb_device_msd.c: 1213: {
 28465                           ;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 28466  001D40  0E01               	movlw	1
 28467  001D42  010D               	movlb	13	; () banked
 28468  001D44  6F8C               	movwf	140,b	;volatile
 28469                           
 28470                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 28471  001D46  0101               	movlb	1	; () banked
 28472  001D48  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 28473  001D4A  0BF0               	andlw	-16
 28474  001D4C  0907               	iorlw	7
 28475  001D4E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 28476                           
 28477                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 28478  001D50  0E27               	movlw	39
 28479  001D52  0101               	movlb	1	; () banked
 28480  001D54  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 28481                           
 28482                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 28483  001D56  0E00               	movlw	0
 28484  001D58  0101               	movlb	1	; () banked
 28485  001D5A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 28486                           
 28487                           ; BSR set to: 1
 28488                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 28489  001D5C  0E00               	movlw	0
 28490  001D5E  6E01               	movwf	USBStallEndpoint@dir,c
 28491  001D60  0E02               	movlw	2
 28492  001D62  EC34  F022         	call	_USBStallEndpoint
 28493                           
 28494                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 28495  001D66  0E00               	movlw	0
 28496  001D68  0101               	movlb	1	; () banked
 28497  001D6A  6F8B               	movwf	_MSDWriteState& (0+255),b
 28498                           
 28499                           ; BSR set to: 1
 28500                           ;usb_device_msd.c: 1228: return MSDWriteState;
 28501  001D6C  0101               	movlb	1	; () banked
 28502  001D6E  518B               	movf	_MSDWriteState& (0+255),w,b
 28503                           
 28504                           ; BSR set to: 1
 28505  001D70  0012               	return	
 28506  001D72                     l10382:
 28507                           
 28508                           ;usb_device_msd.c: 1229: }
 28509                           ;usb_device_msd.c: 1231: MSD_State = 0x01;
 28510  001D72  0E01               	movlw	1
 28511  001D74  0101               	movlb	1	; () banked
 28512  001D76  6F8D               	movwf	_MSD_State& (0+255),b
 28513  001D78                     l10384:
 28514                           
 28515                           ; BSR set to: 1
 28516                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 28517  001D78  0101               	movlb	1	; () banked
 28518  001D7A  5176               	movf	_TransferLength& (0+255),w,b
 28519  001D7C  0101               	movlb	1	; () banked
 28520  001D7E  1177               	iorwf	(_TransferLength+1)& (0+255),w,b
 28521  001D80  B4D8               	btfsc	status,2,c
 28522  001D82  D102               	goto	l10442
 28523                           
 28524                           ; BSR set to: 1
 28525                           ;usb_device_msd.c: 1239: }
 28526                           ;usb_device_msd.c: 1241: MSDWriteState = 0x03;
 28527                           
 28528                           ; BSR set to: 1
 28529                           
 28530                           ;usb_device_msd.c: 1238: break;
 28531                           
 28532                           ; BSR set to: 1
 28533                           ;usb_device_msd.c: 1236: {
 28534                           ;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 28535  001D84  0E03               	movlw	3
 28536  001D86  0101               	movlb	1	; () banked
 28537  001D88  6F8B               	movwf	_MSDWriteState& (0+255),b
 28538                           
 28539                           ; BSR set to: 1
 28540                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 28541  001D8A  0E00               	movlw	0
 28542  001D8C  0101               	movlb	1	; () banked
 28543  001D8E  6F7C               	movwf	_ptrNextData& (0+255),b
 28544  001D90  0E06               	movlw	6
 28545  001D92  0101               	movlb	1	; () banked
 28546  001D94  6F7D               	movwf	(_ptrNextData+1)& (0+255),b
 28547                           
 28548                           ; BSR set to: 1
 28549                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 28550  001D96  0E00               	movlw	0
 28551  001D98  010D               	movlb	13	; () banked
 28552  001D9A  6F88               	movwf	136,b	;volatile
 28553  001D9C  0E02               	movlw	2
 28554  001D9E  6F89               	movwf	137,b	;volatile
 28555  001DA0  0E00               	movlw	0
 28556  001DA2  6F8A               	movwf	138,b	;volatile
 28557  001DA4  0E00               	movlw	0
 28558  001DA6  6F8B               	movwf	139,b	;volatile
 28559  001DA8                     l692:
 28560                           
 28561                           ;usb_device_msd.c: 1248: {
 28562                           ;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 28563  001DA8  010D               	movlb	13	; () banked
 28564  001DAA  5188               	movf	136,w,b	;volatile
 28565  001DAC  010D               	movlb	13	; () banked
 28566  001DAE  1189               	iorwf	137,w,b	;volatile
 28567  001DB0  010D               	movlb	13	; () banked
 28568  001DB2  118A               	iorwf	138,w,b	;volatile
 28569  001DB4  010D               	movlb	13	; () banked
 28570  001DB6  118B               	iorwf	139,w,b	;volatile
 28571  001DB8  B4D8               	btfsc	status,2,c
 28572  001DBA  D020               	goto	l10404
 28573                           
 28574                           ; BSR set to: 13
 28575                           ;usb_device_msd.c: 1251: {
 28576                           ;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 28577  001DBC  0100               	movlb	0	; () banked
 28578  001DBE  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 28579  001DC0  0100               	movlb	0	; () banked
 28580  001DC2  11F7               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 28581  001DC4  B4D8               	btfsc	status,2,c
 28582  001DC6  D007               	goto	l10400
 28583                           
 28584                           ; BSR set to: 0
 28585  001DC8  C0F6  FFD9         	movff	_USBMSDOutHandle,fsr2l
 28586  001DCC  C0F7  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 28587  001DD0  0100               	movlb	0	; () banked
 28588  001DD2  BEDF               	btfsc	indf2,7,c
 28589  001DD4  D0EF               	goto	l10448
 28590  001DD6                     l10400:
 28591                           
 28592                           ; BSR set to: 0
 28593                           ;usb_device_msd.c: 1255: }
 28594                           ;usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacket(2u,0,ptrNextData,64u);
 28595  001DD6  0E00               	movlw	0
 28596  001DD8  6E01               	movwf	USBTransferOnePacket@dir,c
 28597  001DDA  C17C  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 28598  001DDE  C17D  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 28599  001DE2  0E40               	movlw	64
 28600  001DE4  6E04               	movwf	USBTransferOnePacket@len,c
 28601  001DE6  0E02               	movlw	2
 28602  001DE8  ECB7  F022         	call	_USBTransferOnePacket
 28603  001DEC  C001  F0F6         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 28604  001DF0  C002  F0F7         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 28605                           
 28606                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 28607  001DF4  0E04               	movlw	4
 28608  001DF6  0101               	movlb	1	; () banked
 28609  001DF8  6F8B               	movwf	_MSDWriteState& (0+255),b
 28610                           
 28611                           ;usb_device_msd.c: 1260: }
 28612  001DFA  D023               	goto	l10408
 28613  001DFC                     l10404:
 28614                           
 28615                           ;usb_device_msd.c: 1261: else
 28616                           ;usb_device_msd.c: 1262: {
 28617                           ;usb_device_msd.c: 1266: if(LUN[0].WriteProtectState(LUN[0].mediaParameters))
 28618  001DFC  C1C7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 28619  001E00  C1C8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 28620  001E04  D801               	call	u7338
 28621  001E06  D00A               	goto	u7339
 28622  001E08                     u7338:
 28623  001E08  0005               	push	
 28624  001E0A  6EFA               	movwf	pclath,c
 28625  001E0C  0101               	movlb	1	; () banked
 28626  001E0E  51C3               	movf	(_LUN+10)& (0+255),w,b
 28627  001E10  6EFD               	movwf	tosl,c
 28628  001E12  51C4               	movf	(_LUN+11)& (0+255),w,b
 28629  001E14  6EFE               	movwf	tosh,c
 28630  001E16  6AFF               	clrf	tosu,c
 28631  001E18  50FA               	movf	pclath,w,c
 28632  001E1A  0012               	return		;indir
 28633  001E1C                     u7339:
 28634  001E1C  0900               	iorlw	0
 28635  001E1E  B4D8               	btfsc	status,2,c
 28636  001E20  D00E               	goto	l696
 28637                           
 28638                           ;usb_device_msd.c: 1267: {
 28639                           ;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 28640  001E22  0E01               	movlw	1
 28641  001E24  010D               	movlb	13	; () banked
 28642  001E26  6F8C               	movwf	140,b	;volatile
 28643                           
 28644                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 28645  001E28  0101               	movlb	1	; () banked
 28646  001E2A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 28647  001E2C  0BF0               	andlw	-16
 28648  001E2E  0902               	iorlw	2
 28649  001E30  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 28650                           
 28651                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 28652  001E32  0E27               	movlw	39
 28653  001E34  0101               	movlb	1	; () banked
 28654  001E36  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 28655                           
 28656                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 28657  001E38  0E00               	movlw	0
 28658  001E3A  0101               	movlb	1	; () banked
 28659  001E3C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 28660  001E3E                     l696:
 28661                           
 28662                           ;usb_device_msd.c: 1277: }
 28663                           ;usb_device_msd.c: 1279: MSDWriteState = 0x02;
 28664  001E3E  0E02               	movlw	2
 28665  001E40  D0A4               	goto	L23
 28666  001E42                     l10408:
 28667                           
 28668                           ; BSR set to: 1
 28669                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 28670  001E42  0100               	movlb	0	; () banked
 28671  001E44  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 28672  001E46  0100               	movlb	0	; () banked
 28673  001E48  11F7               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 28674  001E4A  B4D8               	btfsc	status,2,c
 28675  001E4C  D007               	goto	l10414
 28676                           
 28677                           ; BSR set to: 0
 28678  001E4E  C0F6  FFD9         	movff	_USBMSDOutHandle,fsr2l
 28679  001E52  C0F7  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 28680  001E56  0100               	movlb	0	; () banked
 28681  001E58  BEDF               	btfsc	indf2,7,c
 28682  001E5A  D0AC               	goto	l10448
 28683  001E5C                     l10414:
 28684                           
 28685                           ; BSR set to: 0
 28686                           ;usb_device_msd.c: 1288: }
 28687                           ;usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((volatile BDT_ENTRY*)USBMSDOut
      +                          Handle)->CNT);
 28688  001E5C  0100               	movlb	0	; () banked
 28689  001E5E  EE20 F001          	lfsr	2,1
 28690  001E62  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 28691  001E64  26D9               	addwf	fsr2l,f,c
 28692  001E66  51F7               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 28693  001E68  22DA               	addwfc	fsr2h,f,c
 28694  001E6A  50DF               	movf	indf2,w,c
 28695  001E6C  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 28696  001E6E  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 28697  001E72  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 28698  001E74  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 28699  001E76  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 28700  001E78  5031               	movf	??_MSDWriteHandler+1,w,c
 28701  001E7A  0101               	movlb	1	; () banked
 28702  001E7C  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 28703  001E7E  5032               	movf	??_MSDWriteHandler+2,w,c
 28704  001E80  0101               	movlb	1	; () banked
 28705  001E82  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 28706  001E84  5033               	movf	??_MSDWriteHandler+3,w,c
 28707  001E86  0101               	movlb	1	; () banked
 28708  001E88  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 28709  001E8A  5034               	movf	??_MSDWriteHandler+4,w,c
 28710  001E8C  0101               	movlb	1	; () banked
 28711  001E8E  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 28712                           
 28713                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 28714  001E90  0100               	movlb	0	; () banked
 28715  001E92  EE20 F001          	lfsr	2,1
 28716  001E96  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 28717  001E98  26D9               	addwf	fsr2l,f,c
 28718  001E9A  51F7               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 28719  001E9C  22DA               	addwfc	fsr2h,f,c
 28720  001E9E  50DF               	movf	indf2,w,c
 28721  001EA0  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 28722  001EA2  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 28723  001EA6  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 28724  001EA8  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 28725  001EAA  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 28726  001EAC  5031               	movf	??_MSDWriteHandler+1,w,c
 28727  001EAE  010D               	movlb	13	; () banked
 28728  001EB0  5F88               	subwf	136,f,b	;volatile
 28729  001EB2  5032               	movf	??_MSDWriteHandler+2,w,c
 28730  001EB4  010D               	movlb	13	; () banked
 28731  001EB6  5B89               	subwfb	137,f,b	;volatile
 28732  001EB8  5033               	movf	??_MSDWriteHandler+3,w,c
 28733  001EBA  010D               	movlb	13	; () banked
 28734  001EBC  5B8A               	subwfb	138,f,b	;volatile
 28735  001EBE  5034               	movf	??_MSDWriteHandler+4,w,c
 28736  001EC0  010D               	movlb	13	; () banked
 28737  001EC2  5B8B               	subwfb	139,f,b	;volatile
 28738                           
 28739                           ; BSR set to: 13
 28740                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 28741  001EC4  0E40               	movlw	64
 28742  001EC6  0101               	movlb	1	; () banked
 28743  001EC8  277C               	addwf	_ptrNextData& (0+255),f,b
 28744  001ECA  0E00               	movlw	0
 28745  001ECC  237D               	addwfc	(_ptrNextData+1)& (0+255),f,b
 28746                           
 28747                           ; BSR set to: 1
 28748                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 28749  001ECE  0E03               	movlw	3
 28750  001ED0  D05C               	goto	L23
 28751  001ED2                     l10420:
 28752                           
 28753                           ; BSR set to: 1
 28754                           ;usb_device_msd.c: 1298: {
 28755                           ;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 28756  001ED2  010D               	movlb	13	; () banked
 28757  001ED4  518C               	movf	140,w,b	;volatile
 28758  001ED6  A4D8               	btfss	status,2,c
 28759  001ED8  D042               	goto	l10432
 28760                           
 28761                           ; BSR set to: 13
 28762                           ;usb_device_msd.c: 1306: {
 28763                           ;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaParameters, LBA.Val, (uint8_t
      +                          *)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 28764  001EDA  C1C7  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 28765  001EDE  C1C8  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 28766  001EE2  C15B  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 28767  001EE6  C15C  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 28768  001EEA  C15D  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 28769  001EEE  C15E  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 28770  001EF2  0E00               	movlw	0
 28771  001EF4  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 28772  001EF6  0E06               	movlw	6
 28773  001EF8  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 28774  001EFA  0101               	movlb	1	; () banked
 28775  001EFC  515B               	movf	_LBA& (0+255),w,b
 28776  001EFE  0101               	movlb	1	; () banked
 28777  001F00  115C               	iorwf	(_LBA+1)& (0+255),w,b
 28778  001F02  0101               	movlb	1	; () banked
 28779  001F04  115D               	iorwf	(_LBA+2)& (0+255),w,b
 28780  001F06  0101               	movlb	1	; () banked
 28781  001F08  115E               	iorwf	(_LBA+3)& (0+255),w,b
 28782  001F0A  A4D8               	btfss	status,2,c
 28783  001F0C  D002               	goto	u7380
 28784  001F0E  0E01               	movlw	1
 28785  001F10  D001               	goto	u7390
 28786  001F12                     u7380:
 28787  001F12  0E00               	movlw	0
 28788  001F14                     u7390:
 28789  001F14  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 28790  001F16  D801               	call	u7408
 28791  001F18  D00A               	goto	u7409
 28792  001F1A                     u7408:
 28793  001F1A  0005               	push	
 28794  001F1C  6EFA               	movwf	pclath,c
 28795  001F1E  0101               	movlb	1	; () banked
 28796  001F20  51C5               	movf	(_LUN+12)& (0+255),w,b
 28797  001F22  6EFD               	movwf	tosl,c
 28798  001F24  51C6               	movf	(_LUN+13)& (0+255),w,b
 28799  001F26  6EFE               	movwf	tosh,c
 28800  001F28  6AFF               	clrf	tosu,c
 28801  001F2A  50FA               	movf	pclath,w,c
 28802  001F2C  0012               	return		;indir
 28803  001F2E                     u7409:
 28804  001F2E  06E8               	decf	wreg,f,c
 28805  001F30  B4D8               	btfsc	status,2,c
 28806  001F32  D015               	goto	l10432
 28807                           
 28808                           ;usb_device_msd.c: 1308: {
 28809                           ;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 28810  001F34  0E64               	movlw	100
 28811  001F36  0101               	movlb	1	; () banked
 28812  001F38  618A               	cpfslt	_MSDRetryAttempt& (0+255),b
 28813  001F3A  D003               	goto	l10430
 28814                           
 28815                           ; BSR set to: 1
 28816                           ;usb_device_msd.c: 1312: {
 28817                           ;usb_device_msd.c: 1313: MSDRetryAttempt++;
 28818  001F3C  0101               	movlb	1	; () banked
 28819  001F3E  2B8A               	incf	_MSDRetryAttempt& (0+255),f,b
 28820                           
 28821                           ;usb_device_msd.c: 1314: break;
 28822  001F40  D039               	goto	l10448
 28823  001F42                     l10430:
 28824                           
 28825                           ; BSR set to: 1
 28826                           ;usb_device_msd.c: 1316: else
 28827                           ;usb_device_msd.c: 1317: {
 28828                           ;usb_device_msd.c: 1320: msd_csw.bCSWStatus = 0x01;
 28829  001F42  0E01               	movlw	1
 28830  001F44  010D               	movlb	13	; () banked
 28831  001F46  6F8C               	movwf	140,b	;volatile
 28832                           
 28833                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 28834  001F48  0101               	movlb	1	; () banked
 28835  001F4A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 28836  001F4C  0BF0               	andlw	-16
 28837  001F4E  0903               	iorlw	3
 28838  001F50  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 28839                           
 28840                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 28841  001F52  0E00               	movlw	0
 28842  001F54  0101               	movlb	1	; () banked
 28843  001F56  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 28844                           
 28845                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 28846  001F58  0E00               	movlw	0
 28847  001F5A  0101               	movlb	1	; () banked
 28848  001F5C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 28849  001F5E                     l10432:
 28850                           
 28851                           ;usb_device_msd.c: 1326: }
 28852                           ;usb_device_msd.c: 1327: }
 28853                           ;usb_device_msd.c: 1328: }
 28854                           ;usb_device_msd.c: 1332: LBA.Val++;
 28855  001F5E  0E01               	movlw	1
 28856  001F60  0101               	movlb	1	; () banked
 28857  001F62  275B               	addwf	_LBA& (0+255),f,b
 28858  001F64  0E00               	movlw	0
 28859  001F66  235C               	addwfc	(_LBA+1)& (0+255),f,b
 28860  001F68  235D               	addwfc	(_LBA+2)& (0+255),f,b
 28861  001F6A  235E               	addwfc	(_LBA+3)& (0+255),f,b
 28862                           
 28863                           ; BSR set to: 1
 28864                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 28865  001F6C  0101               	movlb	1	; () banked
 28866  001F6E  0776               	decf	_TransferLength& (0+255),f,b
 28867  001F70  A0D8               	btfss	status,0,c
 28868  001F72  0777               	decf	(_TransferLength+1)& (0+255),f,b
 28869                           
 28870                           ; BSR set to: 1
 28871                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 28872  001F74  0E01               	movlw	1
 28873  001F76  D009               	goto	L23
 28874  001F78                     l10438:
 28875                           
 28876                           ; BSR set to: 1
 28877                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 28878  001F78  0E02               	movlw	2
 28879  001F7A  010D               	movlb	13	; () banked
 28880  001F7C  6F8C               	movwf	140,b	;volatile
 28881                           
 28882                           ; BSR set to: 13
 28883                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 28884  001F7E  0E00               	movlw	0
 28885  001F80  6E01               	movwf	USBStallEndpoint@dir,c
 28886  001F82  0E02               	movlw	2
 28887  001F84  EC34  F022         	call	_USBStallEndpoint
 28888  001F88                     l10442:
 28889                           
 28890                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 28891  001F88  0E00               	movlw	0
 28892  001F8A                     L23:
 28893  001F8A  0101               	movlb	1	; () banked
 28894  001F8C  6F8B               	movwf	_MSDWriteState& (0+255),b
 28895                           
 28896                           ; BSR set to: 1
 28897                           ;usb_device_msd.c: 1345: }
 28898                           
 28899                           ;usb_device_msd.c: 1344: break;
 28900  001F8E  D012               	goto	l10448
 28901  001F90                     l10446:
 28902  001F90  0101               	movlb	1	; () banked
 28903  001F92  518B               	movf	_MSDWriteState& (0+255),w,b
 28904                           
 28905                           ; Switch size 1, requested type "space"
 28906                           ; Number of cases is 5, Range of values is 0 to 4
 28907                           ; switch strategies available:
 28908                           ; Name         Instructions Cycles
 28909                           ; simple_byte           16     9 (average)
 28910                           ;	Chosen strategy is simple_byte
 28911  001F94  0A00               	xorlw	0	; case 0
 28912  001F96  B4D8               	btfsc	status,2,c
 28913  001F98  D697               	goto	l685
 28914  001F9A  0A01               	xorlw	1	; case 1
 28915  001F9C  B4D8               	btfsc	status,2,c
 28916  001F9E  D6EC               	goto	l10384
 28917  001FA0  0A03               	xorlw	3	; case 2
 28918  001FA2  B4D8               	btfsc	status,2,c
 28919  001FA4  D796               	goto	l10420
 28920  001FA6  0A01               	xorlw	1	; case 3
 28921  001FA8  B4D8               	btfsc	status,2,c
 28922  001FAA  D6FE               	goto	l692
 28923  001FAC  0A07               	xorlw	7	; case 4
 28924  001FAE  B4D8               	btfsc	status,2,c
 28925  001FB0  D748               	goto	l10408
 28926  001FB2  D7E2               	goto	l10438
 28927  001FB4                     l10448:
 28928                           
 28929                           ;usb_device_msd.c: 1347: return MSDWriteState;
 28930  001FB4  0101               	movlb	1	; () banked
 28931  001FB6  518B               	movf	_MSDWriteState& (0+255),w,b
 28932  001FB8  0012               	return	
 28933  001FBA                     __end_of_MSDWriteHandler:
 28934                           	opt stack 0
 28935                           tosu	equ	0xFFF
 28936                           tosh	equ	0xFFE
 28937                           tosl	equ	0xFFD
 28938                           pclath	equ	0xFFA
 28939                           tblptru	equ	0xFF8
 28940                           tblptrh	equ	0xFF7
 28941                           tblptrl	equ	0xFF6
 28942                           tablat	equ	0xFF5
 28943                           prodh	equ	0xFF4
 28944                           prodl	equ	0xFF3
 28945                           intcon	equ	0xFF2
 28946                           intcon2	equ	0xFF1
 28947                           intcon3	equ	0xFF0
 28948                           indf0	equ	0xFEF
 28949                           postinc0	equ	0xFEE
 28950                           fsr0h	equ	0xFEA
 28951                           fsr0l	equ	0xFE9
 28952                           wreg	equ	0xFE8
 28953                           indf1	equ	0xFE7
 28954                           postdec1	equ	0xFE5
 28955                           plusw1	equ	0xFE3
 28956                           fsr1h	equ	0xFE2
 28957                           fsr1l	equ	0xFE1
 28958                           indf2	equ	0xFDF
 28959                           postinc2	equ	0xFDE
 28960                           postdec2	equ	0xFDD
 28961                           plusw2	equ	0xFDB
 28962                           fsr2h	equ	0xFDA
 28963                           fsr2l	equ	0xFD9
 28964                           status	equ	0xFD8
 28965                           
 28966 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 28967 ;; Defined at:
 28968 ;;		line 34 in file "external_flash.c"
 28969 ;; Parameters:    Size  Location     Type
 28970 ;;  config          2    0[COMRAM] PTR void 
 28971 ;;		 -> NULL(0), 
 28972 ;; Auto vars:     Size  Location     Type
 28973 ;;		None
 28974 ;; Return value:  Size  Location     Type
 28975 ;;                  1    wreg      unsigned char 
 28976 ;; Registers used:
 28977 ;;		wreg
 28978 ;; Tracked objects:
 28979 ;;		On entry : 0/0
 28980 ;;		On exit  : 0/0
 28981 ;;		Unchanged: 0/0
 28982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28987 ;;Total ram usage:        2 bytes
 28988 ;; Hardware stack levels used:    1
 28989 ;; This function calls:
 28990 ;;		Nothing
 28991 ;; This function is called by:
 28992 ;;		_MSDWriteHandler
 28993 ;;		_MSDProcessCommandMediaPresent
 28994 ;; This function uses a non-reentrant model
 28995 ;;
 28996                           
 28997                           	psect	text129
 28998  0079D6                     __ptext129:
 28999                           	opt stack 0
 29000  0079D6                     _ExternalFlash_WriteProtectStateGet:
 29001                           	opt stack 25
 29002                           
 29003                           ;external_flash.c: 37: return 0;
 29004                           
 29005                           ; BSR set to: 1
 29006                           ;incstack = 0
 29007  0079D6  0E00               	movlw	0
 29008  0079D8  0012               	return	
 29009  0079DA                     __end_of_ExternalFlash_WriteProtectStateGet:
 29010                           	opt stack 0
 29011                           tosu	equ	0xFFF
 29012                           tosh	equ	0xFFE
 29013                           tosl	equ	0xFFD
 29014                           pclath	equ	0xFFA
 29015                           tblptru	equ	0xFF8
 29016                           tblptrh	equ	0xFF7
 29017                           tblptrl	equ	0xFF6
 29018                           tablat	equ	0xFF5
 29019                           prodh	equ	0xFF4
 29020                           prodl	equ	0xFF3
 29021                           intcon	equ	0xFF2
 29022                           intcon2	equ	0xFF1
 29023                           intcon3	equ	0xFF0
 29024                           indf0	equ	0xFEF
 29025                           postinc0	equ	0xFEE
 29026                           fsr0h	equ	0xFEA
 29027                           fsr0l	equ	0xFE9
 29028                           wreg	equ	0xFE8
 29029                           indf1	equ	0xFE7
 29030                           postdec1	equ	0xFE5
 29031                           plusw1	equ	0xFE3
 29032                           fsr1h	equ	0xFE2
 29033                           fsr1l	equ	0xFE1
 29034                           indf2	equ	0xFDF
 29035                           postinc2	equ	0xFDE
 29036                           postdec2	equ	0xFDD
 29037                           plusw2	equ	0xFDB
 29038                           fsr2h	equ	0xFDA
 29039                           fsr2l	equ	0xFD9
 29040                           status	equ	0xFD8
 29041                           
 29042 ;; *************** function _ExternalFlash_SectorWrite *****************
 29043 ;; Defined at:
 29044 ;;		line 104 in file "external_flash.c"
 29045 ;; Parameters:    Size  Location     Type
 29046 ;;  config          2   36[COMRAM] PTR void 
 29047 ;;		 -> NULL(0), 
 29048 ;;  sector_addr     4   38[COMRAM] unsigned long 
 29049 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 29050 ;;		 -> msd_buffer(512), 
 29051 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 29052 ;; Auto vars:     Size  Location     Type
 29053 ;;  page            2   45[COMRAM] unsigned int 
 29054 ;; Return value:  Size  Location     Type
 29055 ;;                  1    wreg      unsigned char 
 29056 ;; Registers used:
 29057 ;;		wreg, status,2, status,0, cstack
 29058 ;; Tracked objects:
 29059 ;;		On entry : 0/0
 29060 ;;		On exit  : 0/0
 29061 ;;		Unchanged: 0/0
 29062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29063 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29064 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29066 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29067 ;;Total ram usage:       11 bytes
 29068 ;; Hardware stack levels used:    1
 29069 ;; Hardware stack levels required when called:    5
 29070 ;; This function calls:
 29071 ;;		_flash_page_write
 29072 ;; This function is called by:
 29073 ;;		_MSDWriteHandler
 29074 ;; This function uses a non-reentrant model
 29075 ;;
 29076                           
 29077                           	psect	text130
 29078  0073CE                     __ptext130:
 29079                           	opt stack 0
 29080  0073CE                     _ExternalFlash_SectorWrite:
 29081                           	opt stack 20
 29082                           
 29083                           ;external_flash.c: 106: uint16_t page = (uint16_t) sector_addr;
 29084                           
 29085                           ;incstack = 0
 29086  0073CE  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 29087  0073D2  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 29088                           
 29089                           ;external_flash.c: 110: if(sector_addr >= 4096)
 29090  0073D6  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 29091  0073D8  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 29092  0073DA  E104               	bnz	u6960
 29093  0073DC  0E10               	movlw	16
 29094  0073DE  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 29095  0073E0  A0D8               	btfss	status,0,c
 29096  0073E2  D002               	goto	l10150
 29097  0073E4                     u6960:
 29098                           
 29099                           ;external_flash.c: 111: {
 29100                           ;external_flash.c: 112: return 0;
 29101  0073E4  0E00               	movlw	0
 29102  0073E6  0012               	return	
 29103  0073E8                     l10150:
 29104                           
 29105                           ;external_flash.c: 113: }
 29106                           ;external_flash.c: 141: flash_page_write(page, buffer);
 29107  0073E8  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 29108  0073EC  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 29109  0073F0  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 29110  0073F4  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 29111  0073F8  EC15  F037         	call	_flash_page_write	;wreg free
 29112                           
 29113                           ;external_flash.c: 143: return 1;
 29114  0073FC  0E01               	movlw	1
 29115  0073FE  0012               	return	
 29116  007400                     __end_of_ExternalFlash_SectorWrite:
 29117                           	opt stack 0
 29118                           tosu	equ	0xFFF
 29119                           tosh	equ	0xFFE
 29120                           tosl	equ	0xFFD
 29121                           pclath	equ	0xFFA
 29122                           tblptru	equ	0xFF8
 29123                           tblptrh	equ	0xFF7
 29124                           tblptrl	equ	0xFF6
 29125                           tablat	equ	0xFF5
 29126                           prodh	equ	0xFF4
 29127                           prodl	equ	0xFF3
 29128                           intcon	equ	0xFF2
 29129                           intcon2	equ	0xFF1
 29130                           intcon3	equ	0xFF0
 29131                           indf0	equ	0xFEF
 29132                           postinc0	equ	0xFEE
 29133                           fsr0h	equ	0xFEA
 29134                           fsr0l	equ	0xFE9
 29135                           wreg	equ	0xFE8
 29136                           indf1	equ	0xFE7
 29137                           postdec1	equ	0xFE5
 29138                           plusw1	equ	0xFE3
 29139                           fsr1h	equ	0xFE2
 29140                           fsr1l	equ	0xFE1
 29141                           indf2	equ	0xFDF
 29142                           postinc2	equ	0xFDE
 29143                           postdec2	equ	0xFDD
 29144                           plusw2	equ	0xFDB
 29145                           fsr2h	equ	0xFDA
 29146                           fsr2l	equ	0xFD9
 29147                           status	equ	0xFD8
 29148                           
 29149 ;; *************** function _flash_page_write *****************
 29150 ;; Defined at:
 29151 ;;		line 547 in file "flash.c"
 29152 ;; Parameters:    Size  Location     Type
 29153 ;;  page            2   31[COMRAM] unsigned int 
 29154 ;;  data            2   33[COMRAM] PTR unsigned char 
 29155 ;;		 -> buffer(512), msd_buffer(512), 
 29156 ;; Auto vars:     Size  Location     Type
 29157 ;;  match           1   35[COMRAM] enum E8301
 29158 ;; Return value:  Size  Location     Type
 29159 ;;                  1    wreg      void 
 29160 ;; Registers used:
 29161 ;;		wreg, status,2, status,0, cstack
 29162 ;; Tracked objects:
 29163 ;;		On entry : 0/0
 29164 ;;		On exit  : 0/0
 29165 ;;		Unchanged: 0/0
 29166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29167 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29170 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29171 ;;Total ram usage:        5 bytes
 29172 ;; Hardware stack levels used:    1
 29173 ;; Hardware stack levels required when called:    4
 29174 ;; This function calls:
 29175 ;;		__flash_compare_page_to_buffer
 29176 ;;		__flash_write_page_from_buffer
 29177 ;;		__flash_write_to_buffer
 29178 ;; This function is called by:
 29179 ;;		_ExternalFlash_SectorWrite
 29180 ;;		_fat_format
 29181 ;; This function uses a non-reentrant model
 29182 ;;
 29183                           
 29184                           	psect	text131
 29185  006E2A                     __ptext131:
 29186                           	opt stack 0
 29187  006E2A                     _flash_page_write:
 29188                           	opt stack 23
 29189                           
 29190                           ;flash.c: 549: flashMatchResult_t match;
 29191                           ;flash.c: 552: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 29192                           
 29193                           ;incstack = 0
 29194  006E2A  0E00               	movlw	0
 29195  006E2C  6E15               	movwf	__flash_write_to_buffer@start+1,c
 29196  006E2E  0E00               	movlw	0
 29197  006E30  6E14               	movwf	__flash_write_to_buffer@start,c
 29198  006E32  C022  F016         	movff	flash_page_write@data,__flash_write_to_buffer@data
 29199  006E36  C023  F017         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 29200  006E3A  0E02               	movlw	2
 29201  006E3C  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 29202  006E3E  0E00               	movlw	0
 29203  006E40  6E18               	movwf	__flash_write_to_buffer@data_length,c
 29204  006E42  0E00               	movlw	0
 29205  006E44  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 29206  006E46  EC2D  F036         	call	__flash_write_to_buffer	;wreg free
 29207                           
 29208                           ;flash.c: 555: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 29209  006E4A  C020  F014         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 29210  006E4E  C021  F015         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 29211  006E52  0E00               	movlw	0
 29212  006E54  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 29213  006E56  EC4E  F031         	call	__flash_compare_page_to_buffer	;wreg free
 29214  006E5A  6E24               	movwf	flash_page_write@match,c
 29215                           
 29216                           ;flash.c: 558: if(match==DATA_DOES_NOT_MATCH)
 29217  006E5C  0424               	decf	flash_page_write@match,w,c
 29218  006E5E  A4D8               	btfss	status,2,c
 29219  006E60  0012               	return	
 29220                           
 29221                           ;flash.c: 559: {
 29222                           ;flash.c: 560: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 29223  006E62  C020  F014         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 29224  006E66  C021  F015         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 29225  006E6A  0E00               	movlw	0
 29226  006E6C  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 29227  006E6E  EC59  F034         	call	__flash_write_page_from_buffer	;wreg free
 29228  006E72  0012               	return	
 29229  006E74                     __end_of_flash_page_write:
 29230                           	opt stack 0
 29231                           tosu	equ	0xFFF
 29232                           tosh	equ	0xFFE
 29233                           tosl	equ	0xFFD
 29234                           pclath	equ	0xFFA
 29235                           tblptru	equ	0xFF8
 29236                           tblptrh	equ	0xFF7
 29237                           tblptrl	equ	0xFF6
 29238                           tablat	equ	0xFF5
 29239                           prodh	equ	0xFF4
 29240                           prodl	equ	0xFF3
 29241                           intcon	equ	0xFF2
 29242                           intcon2	equ	0xFF1
 29243                           intcon3	equ	0xFF0
 29244                           indf0	equ	0xFEF
 29245                           postinc0	equ	0xFEE
 29246                           fsr0h	equ	0xFEA
 29247                           fsr0l	equ	0xFE9
 29248                           wreg	equ	0xFE8
 29249                           indf1	equ	0xFE7
 29250                           postdec1	equ	0xFE5
 29251                           plusw1	equ	0xFE3
 29252                           fsr1h	equ	0xFE2
 29253                           fsr1l	equ	0xFE1
 29254                           indf2	equ	0xFDF
 29255                           postinc2	equ	0xFDE
 29256                           postdec2	equ	0xFDD
 29257                           plusw2	equ	0xFDB
 29258                           fsr2h	equ	0xFDA
 29259                           fsr2l	equ	0xFD9
 29260                           status	equ	0xFD8
 29261                           
 29262 ;; *************** function __flash_write_to_buffer *****************
 29263 ;; Defined at:
 29264 ;;		line 397 in file "flash.c"
 29265 ;; Parameters:    Size  Location     Type
 29266 ;;  start           2   19[COMRAM] unsigned int 
 29267 ;;  data            2   21[COMRAM] PTR unsigned char 
 29268 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 29269 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 29270 ;;  data_length     2   23[COMRAM] unsigned int 
 29271 ;;  buffer          1   25[COMRAM] enum E8297
 29272 ;; Auto vars:     Size  Location     Type
 29273 ;;  command         4   26[COMRAM] unsigned char [4]
 29274 ;; Return value:  Size  Location     Type
 29275 ;;                  1    wreg      void 
 29276 ;; Registers used:
 29277 ;;		wreg, status,2, status,0, cstack
 29278 ;; Tracked objects:
 29279 ;;		On entry : 0/0
 29280 ;;		On exit  : 0/0
 29281 ;;		Unchanged: 0/0
 29282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29283 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29284 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29286 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29287 ;;Total ram usage:       11 bytes
 29288 ;; Hardware stack levels used:    1
 29289 ;; Hardware stack levels required when called:    3
 29290 ;; This function calls:
 29291 ;;		__flash_spi_tx_tx
 29292 ;;		_flash_is_busy
 29293 ;; This function is called by:
 29294 ;;		_flash_page_write
 29295 ;;		_flash_partial_write
 29296 ;; This function uses a non-reentrant model
 29297 ;;
 29298                           
 29299                           	psect	text132
 29300  006C5A                     __ptext132:
 29301                           	opt stack 0
 29302  006C5A                     __flash_write_to_buffer:
 29303                           	opt stack 23
 29304  006C5A                     l9730:
 29305  006C5A  EC5F  F03B         	call	_flash_is_busy	;wreg free
 29306  006C5E  0900               	iorlw	0
 29307  006C60  A4D8               	btfss	status,2,c
 29308  006C62  D7FB               	goto	l9730
 29309                           
 29310                           ;flash.c: 405: if(buffer==FLASH_BUFFER_1)
 29311  006C64  501A               	movf	__flash_write_to_buffer@buffer,w,c
 29312  006C66  A4D8               	btfss	status,2,c
 29313  006C68  D002               	goto	l9736
 29314                           
 29315                           ;flash.c: 406: command[0] = 0x84;
 29316  006C6A  0E84               	movlw	132
 29317  006C6C  6E1B               	movwf	__flash_write_to_buffer@command,c
 29318  006C6E                     l9736:
 29319                           
 29320                           ;flash.c: 407: if(buffer==FLASH_BUFFER_2)
 29321  006C6E  041A               	decf	__flash_write_to_buffer@buffer,w,c
 29322  006C70  A4D8               	btfss	status,2,c
 29323  006C72  D002               	goto	l2146
 29324                           
 29325                           ;flash.c: 408: command[0] = 0x87;
 29326  006C74  0E87               	movlw	135
 29327  006C76  6E1B               	movwf	__flash_write_to_buffer@command,c
 29328  006C78                     l2146:
 29329                           
 29330                           ;flash.c: 410: command[1] = 0x00;
 29331  006C78  0E00               	movlw	0
 29332  006C7A  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 29333                           
 29334                           ;flash.c: 411: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 29335  006C7C  5015               	movf	__flash_write_to_buffer@start+1,w,c
 29336  006C7E  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 29337                           
 29338                           ;flash.c: 412: command[3] = ((unsigned char)((start)&0xFF));
 29339  006C80  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 29340                           
 29341                           ;flash.c: 415: _flash_spi_tx_tx(command, 4, data, data_length);
 29342  006C84  0E1B               	movlw	low __flash_write_to_buffer@command
 29343  006C86  6E01               	movwf	__flash_spi_tx_tx@command,c
 29344  006C88  0E00               	movlw	high __flash_write_to_buffer@command
 29345  006C8A  6E02               	movwf	__flash_spi_tx_tx@command+1,c
 29346  006C8C  0E00               	movlw	0
 29347  006C8E  6E04               	movwf	__flash_spi_tx_tx@command_length+1,c
 29348  006C90  0E04               	movlw	4
 29349  006C92  6E03               	movwf	__flash_spi_tx_tx@command_length,c
 29350  006C94  C016  F005         	movff	__flash_write_to_buffer@data,__flash_spi_tx_tx@data
 29351  006C98  C017  F006         	movff	__flash_write_to_buffer@data+1,__flash_spi_tx_tx@data+1
 29352  006C9C  C018  F007         	movff	__flash_write_to_buffer@data_length,__flash_spi_tx_tx@data_length
 29353  006CA0  C019  F008         	movff	__flash_write_to_buffer@data_length+1,__flash_spi_tx_tx@data_length+1
 29354  006CA4  EC07  F02F         	call	__flash_spi_tx_tx	;wreg free
 29355  006CA8  0012               	return		;funcret
 29356  006CAA                     __end_of__flash_write_to_buffer:
 29357                           	opt stack 0
 29358                           tosu	equ	0xFFF
 29359                           tosh	equ	0xFFE
 29360                           tosl	equ	0xFFD
 29361                           pclath	equ	0xFFA
 29362                           tblptru	equ	0xFF8
 29363                           tblptrh	equ	0xFF7
 29364                           tblptrl	equ	0xFF6
 29365                           tablat	equ	0xFF5
 29366                           prodh	equ	0xFF4
 29367                           prodl	equ	0xFF3
 29368                           intcon	equ	0xFF2
 29369                           intcon2	equ	0xFF1
 29370                           intcon3	equ	0xFF0
 29371                           indf0	equ	0xFEF
 29372                           postinc0	equ	0xFEE
 29373                           fsr0h	equ	0xFEA
 29374                           fsr0l	equ	0xFE9
 29375                           wreg	equ	0xFE8
 29376                           indf1	equ	0xFE7
 29377                           postdec1	equ	0xFE5
 29378                           plusw1	equ	0xFE3
 29379                           fsr1h	equ	0xFE2
 29380                           fsr1l	equ	0xFE1
 29381                           indf2	equ	0xFDF
 29382                           postinc2	equ	0xFDE
 29383                           postdec2	equ	0xFDD
 29384                           plusw2	equ	0xFDB
 29385                           fsr2h	equ	0xFDA
 29386                           fsr2l	equ	0xFD9
 29387                           status	equ	0xFD8
 29388                           
 29389 ;; *************** function __flash_spi_tx_tx *****************
 29390 ;; Defined at:
 29391 ;;		line 141 in file "flash.c"
 29392 ;; Parameters:    Size  Location     Type
 29393 ;;  command         2    0[COMRAM] PTR unsigned char 
 29394 ;;		 -> _flash_write_to_buffer@command(4), 
 29395 ;;  command_leng    2    2[COMRAM] unsigned int 
 29396 ;;  data            2    4[COMRAM] PTR unsigned char 
 29397 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 29398 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 29399 ;;  data_length     2    6[COMRAM] unsigned int 
 29400 ;; Auto vars:     Size  Location     Type
 29401 ;;		None
 29402 ;; Return value:  Size  Location     Type
 29403 ;;                  1    wreg      void 
 29404 ;; Registers used:
 29405 ;;		wreg, status,2, status,0
 29406 ;; Tracked objects:
 29407 ;;		On entry : 0/0
 29408 ;;		On exit  : 0/0
 29409 ;;		Unchanged: 0/0
 29410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29411 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29413 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29414 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29415 ;;Total ram usage:       12 bytes
 29416 ;; Hardware stack levels used:    1
 29417 ;; This function calls:
 29418 ;;		Nothing
 29419 ;; This function is called by:
 29420 ;;		__flash_write_to_buffer
 29421 ;; This function uses a non-reentrant model
 29422 ;;
 29423                           
 29424                           	psect	text133
 29425  005E0E                     __ptext133:
 29426                           	opt stack 0
 29427  005E0E                     __flash_spi_tx_tx:
 29428                           	opt stack 25
 29429                           
 29430                           ;flash.c: 144: DMACON1bits.SSCON1 = 0;
 29431                           
 29432                           ;incstack = 0
 29433  005E0E  9E88               	bcf	3976,7,c	;volatile
 29434                           
 29435                           ;flash.c: 145: DMACON1bits.SSCON0 = 0;
 29436  005E10  9C88               	bcf	3976,6,c	;volatile
 29437                           
 29438                           ;flash.c: 147: DMACON1bits.TXINC = 1;
 29439  005E12  8A88               	bsf	3976,5,c	;volatile
 29440                           
 29441                           ;flash.c: 149: DMACON1bits.RXINC = 0;
 29442  005E14  9888               	bcf	3976,4,c	;volatile
 29443                           
 29444                           ;flash.c: 151: DMACON1bits.DUPLEX1 = 0;
 29445  005E16  9688               	bcf	3976,3,c	;volatile
 29446                           
 29447                           ;flash.c: 152: DMACON1bits.DUPLEX0 = 1;
 29448  005E18  8488               	bsf	3976,2,c	;volatile
 29449                           
 29450                           ;flash.c: 154: DMACON1bits.DLYINTEN = 0;
 29451  005E1A  9288               	bcf	3976,1,c	;volatile
 29452                           
 29453                           ;flash.c: 156: DMACON2bits.DLYCYC = 0b0000;
 29454  005E1C  9886               	bcf	3974,4,c	;volatile
 29455  005E1E  9A86               	bcf	3974,5,c	;volatile
 29456  005E20  9C86               	bcf	3974,6,c	;volatile
 29457  005E22  9E86               	bcf	3974,7,c	;volatile
 29458                           
 29459                           ;flash.c: 158: DMACON2bits.INTLVL = 0b0000;
 29460  005E24  9086               	bcf	3974,0,c	;volatile
 29461  005E26  9286               	bcf	3974,1,c	;volatile
 29462  005E28  9486               	bcf	3974,2,c	;volatile
 29463  005E2A  9686               	bcf	3974,3,c	;volatile
 29464                           
 29465                           ;flash.c: 161: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 29466  005E2C  5002               	movf	__flash_spi_tx_tx@command+1,w,c
 29467  005E2E  6E6A               	movwf	3946,c	;volatile
 29468                           
 29469                           ;flash.c: 162: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 29470  005E30  C001  FF6B         	movff	__flash_spi_tx_tx@command,3947	;volatile
 29471                           
 29472                           ;flash.c: 165: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 29473  005E34  0EFF               	movlw	255
 29474  005E36  6E09               	movwf	??__flash_spi_tx_tx& (0+255),c
 29475  005E38  0EFF               	movlw	255
 29476  005E3A  6E0A               	movwf	(??__flash_spi_tx_tx+1)& (0+255),c
 29477  005E3C  C003  F00B         	movff	__flash_spi_tx_tx@command_length,??__flash_spi_tx_tx+2
 29478  005E40  C004  F00C         	movff	__flash_spi_tx_tx@command_length+1,??__flash_spi_tx_tx+3
 29479  005E44  5009               	movf	??__flash_spi_tx_tx,w,c
 29480  005E46  260B               	addwf	??__flash_spi_tx_tx+2,f,c
 29481  005E48  500A               	movf	??__flash_spi_tx_tx+1,w,c
 29482  005E4A  220C               	addwfc	??__flash_spi_tx_tx+3,f,c
 29483  005E4C  C00C  F00B         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 29484  005E50  6A0C               	clrf	??__flash_spi_tx_tx+3,c
 29485  005E52  500B               	movf	??__flash_spi_tx_tx+2,w,c
 29486  005E54  6E66               	movwf	3942,c	;volatile
 29487                           
 29488                           ;flash.c: 166: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 29489  005E56  0403               	decf	__flash_spi_tx_tx@command_length,w,c
 29490  005E58  6E67               	movwf	3943,c	;volatile
 29491                           
 29492                           ;flash.c: 169: LATDbits.LD7 = 0;
 29493  005E5A  9E8C               	bcf	3980,7,c	;volatile
 29494                           
 29495                           ;flash.c: 172: DMACON1bits.DMAEN = 1;
 29496  005E5C  8088               	bsf	3976,0,c	;volatile
 29497  005E5E                     l2079:
 29498  005E5E  B088               	btfsc	3976,0,c	;volatile
 29499  005E60  D7FE               	goto	l2079
 29500                           
 29501                           ;flash.c: 176: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 29502  005E62  5006               	movf	__flash_spi_tx_tx@data+1,w,c
 29503  005E64  6E6A               	movwf	3946,c	;volatile
 29504                           
 29505                           ;flash.c: 177: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 29506  005E66  C005  FF6B         	movff	__flash_spi_tx_tx@data,3947	;volatile
 29507                           
 29508                           ;flash.c: 180: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 29509  005E6A  0EFF               	movlw	255
 29510  005E6C  6E09               	movwf	??__flash_spi_tx_tx& (0+255),c
 29511  005E6E  0EFF               	movlw	255
 29512  005E70  6E0A               	movwf	(??__flash_spi_tx_tx+1)& (0+255),c
 29513  005E72  C007  F00B         	movff	__flash_spi_tx_tx@data_length,??__flash_spi_tx_tx+2
 29514  005E76  C008  F00C         	movff	__flash_spi_tx_tx@data_length+1,??__flash_spi_tx_tx+3
 29515  005E7A  5009               	movf	??__flash_spi_tx_tx,w,c
 29516  005E7C  260B               	addwf	??__flash_spi_tx_tx+2,f,c
 29517  005E7E  500A               	movf	??__flash_spi_tx_tx+1,w,c
 29518  005E80  220C               	addwfc	??__flash_spi_tx_tx+3,f,c
 29519  005E82  C00C  F00B         	movff	??__flash_spi_tx_tx+3,??__flash_spi_tx_tx+2
 29520  005E86  6A0C               	clrf	??__flash_spi_tx_tx+3,c
 29521  005E88  500B               	movf	??__flash_spi_tx_tx+2,w,c
 29522  005E8A  6E66               	movwf	3942,c	;volatile
 29523                           
 29524                           ;flash.c: 181: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 29525  005E8C  0407               	decf	__flash_spi_tx_tx@data_length,w,c
 29526  005E8E  6E67               	movwf	3943,c	;volatile
 29527                           
 29528                           ;flash.c: 184: DMACON1bits.DMAEN = 1;
 29529  005E90  8088               	bsf	3976,0,c	;volatile
 29530  005E92                     l2082:
 29531  005E92  B088               	btfsc	3976,0,c	;volatile
 29532  005E94  D7FE               	goto	l2082
 29533                           
 29534                           ;flash.c: 188: LATDbits.LD7 = 1;
 29535  005E96  8E8C               	bsf	3980,7,c	;volatile
 29536  005E98  0012               	return		;funcret
 29537  005E9A                     __end_of__flash_spi_tx_tx:
 29538                           	opt stack 0
 29539                           tosu	equ	0xFFF
 29540                           tosh	equ	0xFFE
 29541                           tosl	equ	0xFFD
 29542                           pclath	equ	0xFFA
 29543                           tblptru	equ	0xFF8
 29544                           tblptrh	equ	0xFF7
 29545                           tblptrl	equ	0xFF6
 29546                           tablat	equ	0xFF5
 29547                           prodh	equ	0xFF4
 29548                           prodl	equ	0xFF3
 29549                           intcon	equ	0xFF2
 29550                           intcon2	equ	0xFF1
 29551                           intcon3	equ	0xFF0
 29552                           indf0	equ	0xFEF
 29553                           postinc0	equ	0xFEE
 29554                           fsr0h	equ	0xFEA
 29555                           fsr0l	equ	0xFE9
 29556                           wreg	equ	0xFE8
 29557                           indf1	equ	0xFE7
 29558                           postdec1	equ	0xFE5
 29559                           plusw1	equ	0xFE3
 29560                           fsr1h	equ	0xFE2
 29561                           fsr1l	equ	0xFE1
 29562                           indf2	equ	0xFDF
 29563                           postinc2	equ	0xFDE
 29564                           postdec2	equ	0xFDD
 29565                           plusw2	equ	0xFDB
 29566                           fsr2h	equ	0xFDA
 29567                           fsr2l	equ	0xFD9
 29568                           status	equ	0xFD8
 29569                           
 29570 ;; *************** function __flash_write_page_from_buffer *****************
 29571 ;; Defined at:
 29572 ;;		line 419 in file "flash.c"
 29573 ;; Parameters:    Size  Location     Type
 29574 ;;  page            2   19[COMRAM] unsigned int 
 29575 ;;  buffer          1   21[COMRAM] enum E8297
 29576 ;; Auto vars:     Size  Location     Type
 29577 ;;  command         4   25[COMRAM] unsigned char [4]
 29578 ;; Return value:  Size  Location     Type
 29579 ;;                  1    wreg      void 
 29580 ;; Registers used:
 29581 ;;		wreg, status,2, status,0, cstack
 29582 ;; Tracked objects:
 29583 ;;		On entry : 0/0
 29584 ;;		On exit  : 0/0
 29585 ;;		Unchanged: 0/0
 29586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29587 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29588 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29589 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29590 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29591 ;;Total ram usage:       10 bytes
 29592 ;; Hardware stack levels used:    1
 29593 ;; Hardware stack levels required when called:    3
 29594 ;; This function calls:
 29595 ;;		__flash_spi_tx
 29596 ;;		_flash_is_busy
 29597 ;; This function is called by:
 29598 ;;		_flash_page_write
 29599 ;;		_flash_partial_write
 29600 ;; This function uses a non-reentrant model
 29601 ;;
 29602                           
 29603                           	psect	text134
 29604  0068B2                     __ptext134:
 29605                           	opt stack 0
 29606  0068B2                     __flash_write_page_from_buffer:
 29607                           	opt stack 23
 29608  0068B2                     l9746:
 29609  0068B2  EC5F  F03B         	call	_flash_is_busy	;wreg free
 29610  0068B6  0900               	iorlw	0
 29611  0068B8  A4D8               	btfss	status,2,c
 29612  0068BA  D7FB               	goto	l9746
 29613                           
 29614                           ;flash.c: 427: if(buffer==FLASH_BUFFER_1)
 29615  0068BC  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 29616  0068BE  A4D8               	btfss	status,2,c
 29617  0068C0  D002               	goto	l9752
 29618                           
 29619                           ;flash.c: 428: command[0] = 0x83;
 29620  0068C2  0E83               	movlw	131
 29621  0068C4  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 29622  0068C6                     l9752:
 29623                           
 29624                           ;flash.c: 429: if(buffer==FLASH_BUFFER_2)
 29625  0068C6  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 29626  0068C8  A4D8               	btfss	status,2,c
 29627  0068CA  D002               	goto	l9756
 29628                           
 29629                           ;flash.c: 430: command[0] = 0x86;
 29630  0068CC  0E86               	movlw	134
 29631  0068CE  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 29632  0068D0                     l9756:
 29633                           
 29634                           ;flash.c: 432: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 29635  0068D0  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 29636  0068D4  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 29637  0068D8  0E07               	movlw	7
 29638  0068DA  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 29639  0068DC                     u6425:
 29640  0068DC  90D8               	bcf	status,0,c
 29641  0068DE  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 29642  0068E0  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 29643  0068E2  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 29644  0068E4  D7FB               	goto	u6425
 29645  0068E6  5017               	movf	??__flash_write_page_from_buffer,w,c
 29646  0068E8  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 29647                           
 29648                           ;flash.c: 433: command[2] = ((unsigned char)((page<<1)&0xFF));
 29649  0068EA  5014               	movf	__flash_write_page_from_buffer@page,w,c
 29650  0068EC  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 29651  0068EE  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 29652                           
 29653                           ;flash.c: 434: command[3] = 0x00;
 29654  0068F0  0E00               	movlw	0
 29655  0068F2  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 29656                           
 29657                           ;flash.c: 437: _flash_spi_tx(command, 4);
 29658  0068F4  0E1A               	movlw	low __flash_write_page_from_buffer@command
 29659  0068F6  6E01               	movwf	__flash_spi_tx@data,c
 29660  0068F8  0E00               	movlw	high __flash_write_page_from_buffer@command
 29661  0068FA  6E02               	movwf	__flash_spi_tx@data+1,c
 29662  0068FC  0E00               	movlw	0
 29663  0068FE  6E04               	movwf	__flash_spi_tx@length+1,c
 29664  006900  0E04               	movlw	4
 29665  006902  6E03               	movwf	__flash_spi_tx@length,c
 29666  006904  EC85  F034         	call	__flash_spi_tx	;wreg free
 29667  006908  0012               	return		;funcret
 29668  00690A                     __end_of__flash_write_page_from_buffer:
 29669                           	opt stack 0
 29670                           tosu	equ	0xFFF
 29671                           tosh	equ	0xFFE
 29672                           tosl	equ	0xFFD
 29673                           pclath	equ	0xFFA
 29674                           tblptru	equ	0xFF8
 29675                           tblptrh	equ	0xFF7
 29676                           tblptrl	equ	0xFF6
 29677                           tablat	equ	0xFF5
 29678                           prodh	equ	0xFF4
 29679                           prodl	equ	0xFF3
 29680                           intcon	equ	0xFF2
 29681                           intcon2	equ	0xFF1
 29682                           intcon3	equ	0xFF0
 29683                           indf0	equ	0xFEF
 29684                           postinc0	equ	0xFEE
 29685                           fsr0h	equ	0xFEA
 29686                           fsr0l	equ	0xFE9
 29687                           wreg	equ	0xFE8
 29688                           indf1	equ	0xFE7
 29689                           postdec1	equ	0xFE5
 29690                           plusw1	equ	0xFE3
 29691                           fsr1h	equ	0xFE2
 29692                           fsr1l	equ	0xFE1
 29693                           indf2	equ	0xFDF
 29694                           postinc2	equ	0xFDE
 29695                           postdec2	equ	0xFDD
 29696                           plusw2	equ	0xFDB
 29697                           fsr2h	equ	0xFDA
 29698                           fsr2l	equ	0xFD9
 29699                           status	equ	0xFD8
 29700                           
 29701 ;; *************** function __flash_compare_page_to_buffer *****************
 29702 ;; Defined at:
 29703 ;;		line 337 in file "flash.c"
 29704 ;; Parameters:    Size  Location     Type
 29705 ;;  page            2   19[COMRAM] unsigned int 
 29706 ;;  buffer          1   21[COMRAM] enum E8297
 29707 ;; Auto vars:     Size  Location     Type
 29708 ;;  command         4   27[COMRAM] unsigned char [4]
 29709 ;;  status          2   25[COMRAM] unsigned int 
 29710 ;; Return value:  Size  Location     Type
 29711 ;;                  1    wreg      enum E8301
 29712 ;; Registers used:
 29713 ;;		wreg, status,2, status,0, cstack
 29714 ;; Tracked objects:
 29715 ;;		On entry : 0/0
 29716 ;;		On exit  : 0/0
 29717 ;;		Unchanged: 0/0
 29718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29719 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29720 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29721 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29722 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29723 ;;Total ram usage:       12 bytes
 29724 ;; Hardware stack levels used:    1
 29725 ;; Hardware stack levels required when called:    3
 29726 ;; This function calls:
 29727 ;;		__flash_get_status
 29728 ;;		__flash_spi_tx
 29729 ;;		_flash_is_busy
 29730 ;; This function is called by:
 29731 ;;		_flash_page_write
 29732 ;;		_flash_partial_write
 29733 ;; This function uses a non-reentrant model
 29734 ;;
 29735                           
 29736                           	psect	text135
 29737  00629C                     __ptext135:
 29738                           	opt stack 0
 29739  00629C                     __flash_compare_page_to_buffer:
 29740                           	opt stack 23
 29741  00629C                     l9696:
 29742  00629C  EC5F  F03B         	call	_flash_is_busy	;wreg free
 29743  0062A0  0900               	iorlw	0
 29744  0062A2  A4D8               	btfss	status,2,c
 29745  0062A4  D7FB               	goto	l9696
 29746                           
 29747                           ;flash.c: 346: if(buffer==FLASH_BUFFER_1)
 29748  0062A6  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 29749  0062A8  A4D8               	btfss	status,2,c
 29750  0062AA  D002               	goto	l9702
 29751                           
 29752                           ;flash.c: 347: command[0] = 0x60;
 29753  0062AC  0E60               	movlw	96
 29754  0062AE  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 29755  0062B0                     l9702:
 29756                           
 29757                           ;flash.c: 348: if(buffer==FLASH_BUFFER_2)
 29758  0062B0  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 29759  0062B2  A4D8               	btfss	status,2,c
 29760  0062B4  D002               	goto	l9706
 29761                           
 29762                           ;flash.c: 349: command[0] = 0x60;
 29763  0062B6  0E60               	movlw	96
 29764  0062B8  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 29765  0062BA                     l9706:
 29766                           
 29767                           ;flash.c: 351: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 29768  0062BA  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 29769  0062BE  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 29770  0062C2  0E07               	movlw	7
 29771  0062C4  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 29772  0062C6                     u6335:
 29773  0062C6  90D8               	bcf	status,0,c
 29774  0062C8  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 29775  0062CA  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 29776  0062CC  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 29777  0062CE  D7FB               	goto	u6335
 29778  0062D0  5017               	movf	??__flash_compare_page_to_buffer,w,c
 29779  0062D2  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 29780                           
 29781                           ;flash.c: 352: command[2] = ((unsigned char)((page<<1)&0xFF));
 29782  0062D4  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 29783  0062D6  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 29784  0062D8  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 29785                           
 29786                           ;flash.c: 353: command[3] = 0x00;
 29787  0062DA  0E00               	movlw	0
 29788  0062DC  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 29789                           
 29790                           ;flash.c: 356: _flash_spi_tx(command, 4);
 29791  0062DE  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 29792  0062E0  6E01               	movwf	__flash_spi_tx@data,c
 29793  0062E2  0E00               	movlw	high __flash_compare_page_to_buffer@command
 29794  0062E4  6E02               	movwf	__flash_spi_tx@data+1,c
 29795  0062E6  0E00               	movlw	0
 29796  0062E8  6E04               	movwf	__flash_spi_tx@length+1,c
 29797  0062EA  0E04               	movlw	4
 29798  0062EC  6E03               	movwf	__flash_spi_tx@length,c
 29799  0062EE  EC85  F034         	call	__flash_spi_tx	;wreg free
 29800  0062F2                     l9712:
 29801  0062F2  EC5F  F03B         	call	_flash_is_busy	;wreg free
 29802  0062F6  0900               	iorlw	0
 29803  0062F8  A4D8               	btfss	status,2,c
 29804  0062FA  D7FB               	goto	l9712
 29805                           
 29806                           ;flash.c: 362: status = _flash_get_status();
 29807  0062FC  EC19  F03A         	call	__flash_get_status	;wreg free
 29808  006300  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 29809  006304  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 29810                           
 29811                           ;flash.c: 365: if(status & 0b0000000001000000)
 29812  006308  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 29813  00630A  D002               	goto	l9724
 29814                           
 29815                           ;flash.c: 366: {
 29816                           ;flash.c: 368: return DATA_DOES_NOT_MATCH;
 29817  00630C  0E01               	movlw	1
 29818                           
 29819                           ;flash.c: 369: }
 29820  00630E  0012               	return	
 29821  006310                     l9724:
 29822                           
 29823                           ;flash.c: 370: else
 29824                           ;flash.c: 371: {
 29825                           ;flash.c: 373: return DATA_DOES_MATCH;
 29826  006310  0E00               	movlw	0
 29827  006312  0012               	return	
 29828  006314                     __end_of__flash_compare_page_to_buffer:
 29829                           	opt stack 0
 29830                           tosu	equ	0xFFF
 29831                           tosh	equ	0xFFE
 29832                           tosl	equ	0xFFD
 29833                           pclath	equ	0xFFA
 29834                           tblptru	equ	0xFF8
 29835                           tblptrh	equ	0xFF7
 29836                           tblptrl	equ	0xFF6
 29837                           tablat	equ	0xFF5
 29838                           prodh	equ	0xFF4
 29839                           prodl	equ	0xFF3
 29840                           intcon	equ	0xFF2
 29841                           intcon2	equ	0xFF1
 29842                           intcon3	equ	0xFF0
 29843                           indf0	equ	0xFEF
 29844                           postinc0	equ	0xFEE
 29845                           fsr0h	equ	0xFEA
 29846                           fsr0l	equ	0xFE9
 29847                           wreg	equ	0xFE8
 29848                           indf1	equ	0xFE7
 29849                           postdec1	equ	0xFE5
 29850                           plusw1	equ	0xFE3
 29851                           fsr1h	equ	0xFE2
 29852                           fsr1l	equ	0xFE1
 29853                           indf2	equ	0xFDF
 29854                           postinc2	equ	0xFDE
 29855                           postdec2	equ	0xFDD
 29856                           plusw2	equ	0xFDB
 29857                           fsr2h	equ	0xFDA
 29858                           fsr2l	equ	0xFD9
 29859                           status	equ	0xFD8
 29860                           
 29861 ;; *************** function _MSDReadHandler *****************
 29862 ;; Defined at:
 29863 ;;		line 1038 in file "usb_device_msd.c"
 29864 ;; Parameters:    Size  Location     Type
 29865 ;;		None
 29866 ;; Auto vars:     Size  Location     Type
 29867 ;;		None
 29868 ;; Return value:  Size  Location     Type
 29869 ;;                  1    wreg      unsigned char 
 29870 ;; Registers used:
 29871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 29872 ;; Tracked objects:
 29873 ;;		On entry : 0/0
 29874 ;;		On exit  : 0/0
 29875 ;;		Unchanged: 0/0
 29876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29879 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29880 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29881 ;;Total ram usage:        4 bytes
 29882 ;; Hardware stack levels used:    1
 29883 ;; Hardware stack levels required when called:    6
 29884 ;; This function calls:
 29885 ;;		_ExternalFlash_SectorRead
 29886 ;;		_MSDCheckForErrorCases
 29887 ;;		_USBStallEndpoint
 29888 ;;		_USBTransferOnePacket
 29889 ;; This function is called by:
 29890 ;;		_MSDProcessCommandMediaPresent
 29891 ;; This function uses a non-reentrant model
 29892 ;;
 29893                           
 29894                           	psect	text136
 29895  002BAE                     __ptext136:
 29896                           	opt stack 0
 29897  002BAE                     _MSDReadHandler:
 29898                           	opt stack 20
 29899                           
 29900                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 29901                           
 29902                           ;incstack = 0
 29903  002BAE  D0E7               	goto	l10358
 29904  002BB0                     l666:
 29905                           
 29906                           ; BSR set to: 1
 29907                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 29908  002BB0  C111  F15E         	movff	_gblCBW+17,_LBA+3
 29909                           
 29910                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 29911  002BB4  C112  F15D         	movff	_gblCBW+18,_LBA+2
 29912                           
 29913                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 29914  002BB8  C113  F15C         	movff	_gblCBW+19,_LBA+1
 29915                           
 29916                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 29917  002BBC  C114  F15B         	movff	_gblCBW+20,_LBA
 29918                           
 29919                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 29920  002BC0  C116  F177         	movff	_gblCBW+22,_TransferLength+1
 29921                           
 29922                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 29923  002BC4  C117  F176         	movff	_gblCBW+23,_TransferLength
 29924                           
 29925                           ; BSR set to: 1
 29926                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 29927  002BC8  0101               	movlb	1	; () banked
 29928  002BCA  5176               	movf	_TransferLength& (0+255),w,b
 29929  002BCC  6E36               	movwf	??_MSDReadHandler& (0+255),c
 29930  002BCE  0101               	movlb	1	; () banked
 29931  002BD0  5177               	movf	(_TransferLength+1)& (0+255),w,b
 29932  002BD2  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 29933  002BD4  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 29934  002BD6  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 29935  002BD8  0E09               	movlw	9
 29936  002BDA                     u7145:
 29937  002BDA  90D8               	bcf	status,0,c
 29938  002BDC  3636               	rlcf	??_MSDReadHandler,f,c
 29939  002BDE  3637               	rlcf	??_MSDReadHandler+1,f,c
 29940  002BE0  3638               	rlcf	??_MSDReadHandler+2,f,c
 29941  002BE2  3639               	rlcf	??_MSDReadHandler+3,f,c
 29942  002BE4  2EE8               	decfsz	wreg,f,c
 29943  002BE6  D7F9               	goto	u7145
 29944  002BE8  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 29945  002BEC  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 29946  002BF0  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 29947  002BF4  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 29948  002BF8  EC38  F023         	call	_MSDCheckForErrorCases	;wreg free
 29949  002BFC  0900               	iorlw	0
 29950  002BFE  A4D8               	btfss	status,2,c
 29951  002C00  D0D0               	goto	l10360
 29952                           
 29953                           ;usb_device_msd.c: 1058: }
 29954                           ;usb_device_msd.c: 1060: MSDReadState = 0x01;
 29955                           
 29956                           ;usb_device_msd.c: 1056: {
 29957                           ;usb_device_msd.c: 1057: break;
 29958  002C02  0E01               	movlw	1
 29959  002C04  0101               	movlb	1	; () banked
 29960  002C06  6F8C               	movwf	_MSDReadState& (0+255),b
 29961  002C08                     l10294:
 29962                           
 29963                           ; BSR set to: 1
 29964                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 29965  002C08  0101               	movlb	1	; () banked
 29966  002C0A  5176               	movf	_TransferLength& (0+255),w,b
 29967  002C0C  0101               	movlb	1	; () banked
 29968  002C0E  1177               	iorwf	(_TransferLength+1)& (0+255),w,b
 29969  002C10  B4D8               	btfsc	status,2,c
 29970  002C12  D0B1               	goto	l10354
 29971                           
 29972                           ; BSR set to: 1
 29973                           ;usb_device_msd.c: 1068: }
 29974                           ;usb_device_msd.c: 1070: TransferLength.Val--;
 29975                           
 29976                           ; BSR set to: 1
 29977                           
 29978                           ;usb_device_msd.c: 1067: break;
 29979                           
 29980                           ; BSR set to: 1
 29981                           ;usb_device_msd.c: 1065: {
 29982                           ;usb_device_msd.c: 1066: MSDReadState = 0x00;
 29983  002C14  0101               	movlb	1	; () banked
 29984  002C16  0776               	decf	_TransferLength& (0+255),f,b
 29985  002C18  A0D8               	btfss	status,0,c
 29986  002C1A  0777               	decf	(_TransferLength+1)& (0+255),f,b
 29987                           
 29988                           ; BSR set to: 1
 29989                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 29990  002C1C  0E02               	movlw	2
 29991  002C1E  0101               	movlb	1	; () banked
 29992  002C20  6F8C               	movwf	_MSDReadState& (0+255),b
 29993  002C22                     l10302:
 29994                           
 29995                           ; BSR set to: 1
 29996                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 29997  002C22  0100               	movlb	0	; () banked
 29998  002C24  51F4               	movf	_USBMSDInHandle& (0+255),w,b
 29999  002C26  0100               	movlb	0	; () banked
 30000  002C28  11F5               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 30001  002C2A  B4D8               	btfsc	status,2,c
 30002  002C2C  D007               	goto	l10308
 30003                           
 30004                           ; BSR set to: 0
 30005  002C2E  C0F4  FFD9         	movff	_USBMSDInHandle,fsr2l
 30006  002C32  C0F5  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 30007  002C36  0100               	movlb	0	; () banked
 30008  002C38  BEDF               	btfsc	indf2,7,c
 30009  002C3A  D0B3               	goto	l10360
 30010  002C3C                     l10308:
 30011                           
 30012                           ; BSR set to: 0
 30013                           ;usb_device_msd.c: 1079: }
 30014                           ;usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaParameters, LBA.Val, (uint8_t*
      +                          )&msd_buffer[0]) != 1)
 30015  002C3C  C1C7  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 30016  002C40  C1C8  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 30017  002C44  C15B  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 30018  002C48  C15C  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 30019  002C4C  C15D  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 30020  002C50  C15E  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 30021  002C54  0E00               	movlw	0
 30022  002C56  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 30023  002C58  0E06               	movlw	6
 30024  002C5A  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 30025  002C5C  D801               	call	u7198
 30026  002C5E  D00A               	goto	u7199
 30027  002C60                     u7198:
 30028  002C60  0005               	push	
 30029  002C62  6EFA               	movwf	pclath,c
 30030  002C64  0101               	movlb	1	; () banked
 30031  002C66  51C1               	movf	(_LUN+8)& (0+255),w,b
 30032  002C68  6EFD               	movwf	tosl,c
 30033  002C6A  51C2               	movf	(_LUN+9)& (0+255),w,b
 30034  002C6C  6EFE               	movwf	tosh,c
 30035  002C6E  6AFF               	clrf	tosu,c
 30036  002C70  50FA               	movf	pclath,w,c
 30037  002C72  0012               	return		;indir
 30038  002C74                     u7199:
 30039  002C74  06E8               	decf	wreg,f,c
 30040  002C76  B4D8               	btfsc	status,2,c
 30041  002C78  D01B               	goto	l10322
 30042                           
 30043                           ;usb_device_msd.c: 1084: {
 30044                           ;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 30045  002C7A  0E64               	movlw	100
 30046  002C7C  0101               	movlb	1	; () banked
 30047  002C7E  618A               	cpfslt	_MSDRetryAttempt& (0+255),b
 30048  002C80  D003               	goto	l10316
 30049                           
 30050                           ; BSR set to: 1
 30051                           ;usb_device_msd.c: 1086: {
 30052                           ;usb_device_msd.c: 1087: MSDRetryAttempt++;
 30053  002C82  0101               	movlb	1	; () banked
 30054  002C84  2B8A               	incf	_MSDRetryAttempt& (0+255),f,b
 30055                           
 30056                           ;usb_device_msd.c: 1088: break;
 30057  002C86  D08D               	goto	l10360
 30058  002C88                     l10316:
 30059                           
 30060                           ; BSR set to: 1
 30061                           ;usb_device_msd.c: 1090: else
 30062                           ;usb_device_msd.c: 1091: {
 30063                           ;usb_device_msd.c: 1100: msd_csw.bCSWStatus=0x02;
 30064  002C88  0E02               	movlw	2
 30065  002C8A  010D               	movlb	13	; () banked
 30066  002C8C  6F8C               	movwf	140,b	;volatile
 30067                           
 30068                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 30069  002C8E  0101               	movlb	1	; () banked
 30070  002C90  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 30071  002C92  0BF0               	andlw	-16
 30072  002C94  0903               	iorlw	3
 30073  002C96  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 30074                           
 30075                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 30076  002C98  0E00               	movlw	0
 30077  002C9A  0101               	movlb	1	; () banked
 30078  002C9C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 30079                           
 30080                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 30081  002C9E  0E00               	movlw	0
 30082  002CA0  0101               	movlb	1	; () banked
 30083  002CA2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 30084                           
 30085                           ; BSR set to: 1
 30086                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 30087  002CA4  0E01               	movlw	1
 30088  002CA6  6E01               	movwf	USBStallEndpoint@dir,c
 30089  002CA8  0E02               	movlw	2
 30090  002CAA  EC34  F022         	call	_USBStallEndpoint
 30091  002CAE  D063               	goto	l10354
 30092  002CB0                     l10322:
 30093                           
 30094                           ;usb_device_msd.c: 1110: }
 30095                           ;usb_device_msd.c: 1111: }
 30096                           ;usb_device_msd.c: 1113: LBA.Val++;
 30097  002CB0  0E01               	movlw	1
 30098  002CB2  0101               	movlb	1	; () banked
 30099  002CB4  275B               	addwf	_LBA& (0+255),f,b
 30100  002CB6  0E00               	movlw	0
 30101  002CB8  235C               	addwfc	(_LBA+1)& (0+255),f,b
 30102  002CBA  235D               	addwfc	(_LBA+2)& (0+255),f,b
 30103  002CBC  235E               	addwfc	(_LBA+3)& (0+255),f,b
 30104                           
 30105                           ; BSR set to: 1
 30106                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 30107  002CBE  0E00               	movlw	0
 30108  002CC0  010D               	movlb	13	; () banked
 30109  002CC2  6F88               	movwf	136,b	;volatile
 30110  002CC4  0E02               	movlw	2
 30111  002CC6  6F89               	movwf	137,b	;volatile
 30112  002CC8  0E00               	movlw	0
 30113  002CCA  6F8A               	movwf	138,b	;volatile
 30114  002CCC  0E00               	movlw	0
 30115  002CCE  6F8B               	movwf	139,b	;volatile
 30116                           
 30117                           ; BSR set to: 13
 30118                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 30119  002CD0  0E00               	movlw	0
 30120  002CD2  0101               	movlb	1	; () banked
 30121  002CD4  6F7C               	movwf	_ptrNextData& (0+255),b
 30122  002CD6  0E06               	movlw	6
 30123  002CD8  0101               	movlb	1	; () banked
 30124  002CDA  6F7D               	movwf	(_ptrNextData+1)& (0+255),b
 30125                           
 30126                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 30127  002CDC  0E03               	movlw	3
 30128  002CDE  0101               	movlb	1	; () banked
 30129  002CE0  6F8C               	movwf	_MSDReadState& (0+255),b
 30130  002CE2                     l10328:
 30131                           
 30132                           ; BSR set to: 1
 30133                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 30134  002CE2  010D               	movlb	13	; () banked
 30135  002CE4  5188               	movf	136,w,b	;volatile
 30136  002CE6  010D               	movlb	13	; () banked
 30137  002CE8  1189               	iorwf	137,w,b	;volatile
 30138  002CEA  010D               	movlb	13	; () banked
 30139  002CEC  118A               	iorwf	138,w,b	;volatile
 30140  002CEE  010D               	movlb	13	; () banked
 30141  002CF0  118B               	iorwf	139,w,b	;volatile
 30142  002CF2  A4D8               	btfss	status,2,c
 30143  002CF4  D002               	goto	l10332
 30144                           
 30145                           ; BSR set to: 13
 30146                           ;usb_device_msd.c: 1124: {
 30147                           ;usb_device_msd.c: 1125: MSDReadState = 0x01;
 30148  002CF6  0E01               	movlw	1
 30149  002CF8  D03F               	goto	L25
 30150  002CFA                     l10332:
 30151                           
 30152                           ;usb_device_msd.c: 1127: }
 30153                           ;usb_device_msd.c: 1129: MSDReadState = 0x04;
 30154  002CFA  0E04               	movlw	4
 30155  002CFC  0101               	movlb	1	; () banked
 30156  002CFE  6F8C               	movwf	_MSDReadState& (0+255),b
 30157  002D00                     l10334:
 30158                           
 30159                           ; BSR set to: 1
 30160                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 30161  002D00  0100               	movlb	0	; () banked
 30162  002D02  51F4               	movf	_USBMSDInHandle& (0+255),w,b
 30163  002D04  0100               	movlb	0	; () banked
 30164  002D06  11F5               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 30165  002D08  B4D8               	btfsc	status,2,c
 30166  002D0A  D007               	goto	l10340
 30167                           
 30168                           ; BSR set to: 0
 30169  002D0C  C0F4  FFD9         	movff	_USBMSDInHandle,fsr2l
 30170  002D10  C0F5  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 30171  002D14  0100               	movlb	0	; () banked
 30172  002D16  BEDF               	btfsc	indf2,7,c
 30173  002D18  D044               	goto	l10360
 30174  002D1A                     l10340:
 30175                           
 30176                           ; BSR set to: 0
 30177                           ;usb_device_msd.c: 1139: }
 30178                           ;usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket(2u,1,ptrNextData,64u);
 30179  002D1A  0E01               	movlw	1
 30180  002D1C  6E01               	movwf	USBTransferOnePacket@dir,c
 30181  002D1E  C17C  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 30182  002D22  C17D  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 30183  002D26  0E40               	movlw	64
 30184  002D28  6E04               	movwf	USBTransferOnePacket@len,c
 30185  002D2A  0E02               	movlw	2
 30186  002D2C  ECB7  F022         	call	_USBTransferOnePacket
 30187  002D30  C001  F0F4         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 30188  002D34  C002  F0F5         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 30189                           
 30190                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 30191  002D38  0E03               	movlw	3
 30192  002D3A  0101               	movlb	1	; () banked
 30193  002D3C  6F8C               	movwf	_MSDReadState& (0+255),b
 30194                           
 30195                           ; BSR set to: 1
 30196                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 30197  002D3E  0E40               	movlw	64
 30198  002D40  0101               	movlb	1	; () banked
 30199  002D42  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 30200  002D44  0E00               	movlw	0
 30201  002D46  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 30202  002D48  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 30203  002D4A  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 30204                           
 30205                           ; BSR set to: 1
 30206                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 30207  002D4C  0E40               	movlw	64
 30208  002D4E  010D               	movlb	13	; () banked
 30209  002D50  5F88               	subwf	136,f,b	;volatile
 30210  002D52  0E00               	movlw	0
 30211  002D54  5B89               	subwfb	137,f,b	;volatile
 30212  002D56  5B8A               	subwfb	138,f,b	;volatile
 30213  002D58  5B8B               	subwfb	139,f,b	;volatile
 30214                           
 30215                           ; BSR set to: 13
 30216                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 30217  002D5A  0E40               	movlw	64
 30218  002D5C  0101               	movlb	1	; () banked
 30219  002D5E  277C               	addwf	_ptrNextData& (0+255),f,b
 30220  002D60  0E00               	movlw	0
 30221  002D62  237D               	addwfc	(_ptrNextData+1)& (0+255),f,b
 30222                           
 30223                           ;usb_device_msd.c: 1149: break;
 30224  002D64  D01E               	goto	l10360
 30225  002D66                     l10350:
 30226                           
 30227                           ; BSR set to: 1
 30228                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 30229  002D66  0E02               	movlw	2
 30230  002D68  010D               	movlb	13	; () banked
 30231  002D6A  6F8C               	movwf	140,b	;volatile
 30232                           
 30233                           ; BSR set to: 13
 30234                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 30235  002D6C  0E01               	movlw	1
 30236  002D6E  6E01               	movwf	USBStallEndpoint@dir,c
 30237  002D70  0E02               	movlw	2
 30238  002D72  EC34  F022         	call	_USBStallEndpoint
 30239  002D76                     l10354:
 30240                           
 30241                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 30242  002D76  0E00               	movlw	0
 30243  002D78                     L25:
 30244  002D78  0101               	movlb	1	; () banked
 30245  002D7A  6F8C               	movwf	_MSDReadState& (0+255),b
 30246                           
 30247                           ; BSR set to: 1
 30248                           ;usb_device_msd.c: 1159: }
 30249                           
 30250                           ;usb_device_msd.c: 1158: break;
 30251  002D7C  D012               	goto	l10360
 30252  002D7E                     l10358:
 30253  002D7E  0101               	movlb	1	; () banked
 30254  002D80  518C               	movf	_MSDReadState& (0+255),w,b
 30255                           
 30256                           ; Switch size 1, requested type "space"
 30257                           ; Number of cases is 5, Range of values is 0 to 4
 30258                           ; switch strategies available:
 30259                           ; Name         Instructions Cycles
 30260                           ; simple_byte           16     9 (average)
 30261                           ;	Chosen strategy is simple_byte
 30262  002D82  0A00               	xorlw	0	; case 0
 30263  002D84  B4D8               	btfsc	status,2,c
 30264  002D86  D714               	goto	l666
 30265  002D88  0A01               	xorlw	1	; case 1
 30266  002D8A  B4D8               	btfsc	status,2,c
 30267  002D8C  D73D               	goto	l10294
 30268  002D8E  0A03               	xorlw	3	; case 2
 30269  002D90  B4D8               	btfsc	status,2,c
 30270  002D92  D747               	goto	l10302
 30271  002D94  0A01               	xorlw	1	; case 3
 30272  002D96  B4D8               	btfsc	status,2,c
 30273  002D98  D7A4               	goto	l10328
 30274  002D9A  0A07               	xorlw	7	; case 4
 30275  002D9C  B4D8               	btfsc	status,2,c
 30276  002D9E  D7B0               	goto	l10334
 30277  002DA0  D7E2               	goto	l10350
 30278  002DA2                     l10360:
 30279                           
 30280                           ;usb_device_msd.c: 1161: return MSDReadState;
 30281  002DA2  0101               	movlb	1	; () banked
 30282  002DA4  518C               	movf	_MSDReadState& (0+255),w,b
 30283  002DA6  0012               	return	
 30284  002DA8                     __end_of_MSDReadHandler:
 30285                           	opt stack 0
 30286                           tosu	equ	0xFFF
 30287                           tosh	equ	0xFFE
 30288                           tosl	equ	0xFFD
 30289                           pclath	equ	0xFFA
 30290                           tblptru	equ	0xFF8
 30291                           tblptrh	equ	0xFF7
 30292                           tblptrl	equ	0xFF6
 30293                           tablat	equ	0xFF5
 30294                           prodh	equ	0xFF4
 30295                           prodl	equ	0xFF3
 30296                           intcon	equ	0xFF2
 30297                           intcon2	equ	0xFF1
 30298                           intcon3	equ	0xFF0
 30299                           indf0	equ	0xFEF
 30300                           postinc0	equ	0xFEE
 30301                           fsr0h	equ	0xFEA
 30302                           fsr0l	equ	0xFE9
 30303                           wreg	equ	0xFE8
 30304                           indf1	equ	0xFE7
 30305                           postdec1	equ	0xFE5
 30306                           plusw1	equ	0xFE3
 30307                           fsr1h	equ	0xFE2
 30308                           fsr1l	equ	0xFE1
 30309                           indf2	equ	0xFDF
 30310                           postinc2	equ	0xFDE
 30311                           postdec2	equ	0xFDD
 30312                           plusw2	equ	0xFDB
 30313                           fsr2h	equ	0xFDA
 30314                           fsr2l	equ	0xFD9
 30315                           status	equ	0xFD8
 30316                           
 30317 ;; *************** function _MSDCheckForErrorCases *****************
 30318 ;; Defined at:
 30319 ;;		line 1434 in file "usb_device_msd.c"
 30320 ;; Parameters:    Size  Location     Type
 30321 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 30322 ;; Auto vars:     Size  Location     Type
 30323 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 30324 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 30325 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 30326 ;; Return value:  Size  Location     Type
 30327 ;;                  1    wreg      unsigned char 
 30328 ;; Registers used:
 30329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30330 ;; Tracked objects:
 30331 ;;		On entry : 0/0
 30332 ;;		On exit  : 0/0
 30333 ;;		Unchanged: 0/0
 30334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30336 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30338 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30339 ;;Total ram usage:        7 bytes
 30340 ;; Hardware stack levels used:    1
 30341 ;; Hardware stack levels required when called:    2
 30342 ;; This function calls:
 30343 ;;		_MSDErrorHandler
 30344 ;; This function is called by:
 30345 ;;		_MSDProcessCommandMediaPresent
 30346 ;;		_MSDReadHandler
 30347 ;;		_MSDWriteHandler
 30348 ;; This function uses a non-reentrant model
 30349 ;;
 30350                           
 30351                           	psect	text137
 30352  004670                     __ptext137:
 30353                           	opt stack 0
 30354  004670                     _MSDCheckForErrorCases:
 30355                           	opt stack 23
 30356                           
 30357                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;
 30358                           ;usb_device_msd.c: 1437: bool HostMoreDataThanDevice;
 30359                           ;usb_device_msd.c: 1438: bool DeviceNoData;
 30360                           ;usb_device_msd.c: 1441: if(DeviceBytes == 0)
 30361                           
 30362                           ; BSR set to: 1
 30363                           ;incstack = 0
 30364  004670  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 30365  004672  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 30366  004674  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 30367  004676  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 30368  004678  A4D8               	btfss	status,2,c
 30369  00467A  D002               	goto	l10010
 30370                           
 30371                           ;usb_device_msd.c: 1442: {
 30372                           ;usb_device_msd.c: 1443: DeviceNoData = 1;
 30373  00467C  0E01               	movlw	1
 30374  00467E  D001               	goto	L26
 30375  004680                     l10010:
 30376                           
 30377                           ;usb_device_msd.c: 1445: else
 30378                           ;usb_device_msd.c: 1446: {
 30379                           ;usb_device_msd.c: 1447: DeviceNoData = 0;
 30380  004680  0E00               	movlw	0
 30381  004682                     L26:
 30382  004682  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 30383                           
 30384                           ;usb_device_msd.c: 1448: }
 30385                           ;usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoData == 1))
 30386  004684  0100               	movlb	0	; () banked
 30387  004686  05F8               	decf	_MSDHostNoData& (0+255),w,b
 30388  004688  A4D8               	btfss	status,2,c
 30389  00468A  D005               	goto	l10020
 30390                           
 30391                           ; BSR set to: 0
 30392  00468C  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 30393  00468E  A4D8               	btfss	status,2,c
 30394  004690  D002               	goto	l10020
 30395                           
 30396                           ; BSR set to: 0
 30397                           ;usb_device_msd.c: 1454: {
 30398                           ;usb_device_msd.c: 1455: return 0x00;
 30399  004692  0E00               	movlw	0
 30400                           
 30401                           ; BSR set to: 0
 30402  004694  0012               	return	
 30403  004696                     l10020:
 30404                           
 30405                           ; BSR set to: 0
 30406                           ;usb_device_msd.c: 1456: }
 30407                           ;usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == DeviceBytes)
 30408  004696  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 30409  004698  0101               	movlb	1	; () banked
 30410  00469A  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 30411  00469C  E11F               	bnz	l10036
 30412  00469E  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 30413  0046A0  0101               	movlb	1	; () banked
 30414  0046A2  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 30415  0046A4  E11B               	bnz	l10036
 30416  0046A6  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 30417  0046A8  0101               	movlb	1	; () banked
 30418  0046AA  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 30419  0046AC  E117               	bnz	l10036
 30420  0046AE  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 30421  0046B0  0101               	movlb	1	; () banked
 30422  0046B2  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 30423  0046B4  A4D8               	btfss	status,2,c
 30424  0046B6  D012               	goto	l10036
 30425                           
 30426                           ; BSR set to: 1
 30427                           ;usb_device_msd.c: 1460: {
 30428                           ;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 30429  0046B8  0101               	movlb	1	; () banked
 30430  0046BA  058D               	decf	_MSD_State& (0+255),w,b
 30431  0046BC  A4D8               	btfss	status,2,c
 30432  0046BE  D007               	goto	l10030
 30433                           
 30434                           ; BSR set to: 1
 30435                           ;usb_device_msd.c: 1463: {
 30436                           ;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 30437  0046C0  0E2A               	movlw	42
 30438  0046C2  0100               	movlb	0	; () banked
 30439  0046C4  19F9               	xorwf	_MSDCommandState& (0+255),w,b
 30440  0046C6  B4D8               	btfsc	status,2,c
 30441  0046C8  D009               	goto	l10036
 30442                           
 30443                           ; BSR set to: 0
 30444                           ;usb_device_msd.c: 1466: {
 30445                           ;usb_device_msd.c: 1467: return 0x00;
 30446  0046CA  0E00               	movlw	0
 30447                           
 30448                           ; BSR set to: 0
 30449  0046CC  0012               	return	
 30450  0046CE                     l10030:
 30451                           
 30452                           ;usb_device_msd.c: 1470: else
 30453                           ;usb_device_msd.c: 1471: {
 30454                           ;usb_device_msd.c: 1474: if(MSDCommandState == 0x2a)
 30455  0046CE  0E2A               	movlw	42
 30456  0046D0  0100               	movlb	0	; () banked
 30457  0046D2  19F9               	xorwf	_MSDCommandState& (0+255),w,b
 30458  0046D4  A4D8               	btfss	status,2,c
 30459  0046D6  D002               	goto	l10036
 30460                           
 30461                           ; BSR set to: 0
 30462                           ;usb_device_msd.c: 1475: {
 30463                           ;usb_device_msd.c: 1476: return 0x00;
 30464  0046D8  0E00               	movlw	0
 30465                           
 30466                           ; BSR set to: 0
 30467  0046DA  0012               	return	
 30468  0046DC                     l10036:
 30469                           
 30470                           ;usb_device_msd.c: 1477: }
 30471                           ;usb_device_msd.c: 1478: }
 30472                           ;usb_device_msd.c: 1479: }
 30473                           ;usb_device_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 30474  0046DC  0101               	movlb	1	; () banked
 30475  0046DE  5108               	movf	(_gblCBW+8)& (0+255),w,b
 30476  0046E0  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 30477  0046E2  0101               	movlb	1	; () banked
 30478  0046E4  5109               	movf	(_gblCBW+9)& (0+255),w,b
 30479  0046E6  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 30480  0046E8  0101               	movlb	1	; () banked
 30481  0046EA  510A               	movf	(_gblCBW+10)& (0+255),w,b
 30482  0046EC  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 30483  0046EE  0101               	movlb	1	; () banked
 30484  0046F0  510B               	movf	(_gblCBW+11)& (0+255),w,b
 30485  0046F2  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 30486  0046F4  B0D8               	btfsc	status,0,c
 30487  0046F6  D002               	goto	l10040
 30488                           
 30489                           ; BSR set to: 1
 30490                           ;usb_device_msd.c: 1486: {
 30491                           ;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 30492  0046F8  0E01               	movlw	1
 30493  0046FA  D001               	goto	L27
 30494  0046FC                     l10040:
 30495                           
 30496                           ; BSR set to: 1
 30497                           ;usb_device_msd.c: 1489: else
 30498                           ;usb_device_msd.c: 1490: {
 30499                           ;usb_device_msd.c: 1491: HostMoreDataThanDevice = 0;
 30500  0046FC  0E00               	movlw	0
 30501  0046FE                     L27:
 30502  0046FE  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 30503                           
 30504                           ; BSR set to: 1
 30505                           ;usb_device_msd.c: 1492: }
 30506                           ;usb_device_msd.c: 1495: if(MSD_State == 0x02)
 30507                           
 30508                           ; BSR set to: 1
 30509  004700  0E02               	movlw	2
 30510  004702  0101               	movlb	1	; () banked
 30511  004704  198D               	xorwf	_MSD_State& (0+255),w,b
 30512  004706  A4D8               	btfss	status,2,c
 30513  004708  D019               	goto	l10064
 30514                           
 30515                           ; BSR set to: 1
 30516                           ;usb_device_msd.c: 1496: {
 30517                           ;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (DeviceNoData == 0))
 30518  00470A  0E2A               	movlw	42
 30519  00470C  0100               	movlb	0	; () banked
 30520  00470E  19F9               	xorwf	_MSDCommandState& (0+255),w,b
 30521  004710  B4D8               	btfsc	status,2,c
 30522  004712  D005               	goto	l10050
 30523                           
 30524                           ; BSR set to: 0
 30525  004714  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 30526  004716  A4D8               	btfss	status,2,c
 30527  004718  D002               	goto	l10050
 30528  00471A                     l10048:
 30529                           
 30530                           ; BSR set to: 0
 30531                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 30532  00471A  0E05               	movlw	5
 30533  00471C  D008               	goto	L29
 30534  00471E                     l10050:
 30535                           
 30536                           ; BSR set to: 0
 30537                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 30538  00471E  0100               	movlb	0	; () banked
 30539  004720  05F8               	decf	_MSDHostNoData& (0+255),w,b
 30540  004722  B4D8               	btfsc	status,2,c
 30541  004724  D014               	goto	l10070
 30542                           
 30543                           ; BSR set to: 0
 30544                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 30545                           
 30546                           ; BSR set to: 0
 30547                           
 30548                           ; BSR set to: 0
 30549                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 30550  004726  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 30551  004728  A4D8               	btfss	status,2,c
 30552  00472A  D003               	goto	l10058
 30553  00472C  D005               	goto	l10060
 30554  00472E                     L29:
 30555  00472E  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 30556  004730  D01A               	goto	l10082
 30557  004732                     l10058:
 30558                           
 30559                           ; BSR set to: 0
 30560                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 30561  004732  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 30562  004734  A4D8               	btfss	status,2,c
 30563  004736  D7F1               	goto	l10048
 30564  004738                     l10060:
 30565                           
 30566                           ; BSR set to: 0
 30567                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 30568  004738  0E04               	movlw	4
 30569  00473A  D7F9               	goto	L29
 30570  00473C                     l10064:
 30571                           
 30572                           ;usb_device_msd.c: 1513: else
 30573                           ;usb_device_msd.c: 1514: {
 30574                           ;usb_device_msd.c: 1516: if(MSDCommandState == 0x2a)
 30575  00473C  0E2A               	movlw	42
 30576  00473E  0100               	movlb	0	; () banked
 30577  004740  19F9               	xorwf	_MSDCommandState& (0+255),w,b
 30578  004742  B4D8               	btfsc	status,2,c
 30579  004744  D00E               	goto	l10080
 30580                           
 30581                           ; BSR set to: 0
 30582                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 30583                           
 30584                           ; BSR set to: 0
 30585                           
 30586                           ; BSR set to: 0
 30587                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 30588  004746  0100               	movlb	0	; () banked
 30589  004748  05F8               	decf	_MSDHostNoData& (0+255),w,b
 30590  00474A  A4D8               	btfss	status,2,c
 30591  00474C  D002               	goto	l10072
 30592  00474E                     l10070:
 30593                           
 30594                           ; BSR set to: 0
 30595                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 30596  00474E  0E01               	movlw	1
 30597  004750  D7EE               	goto	L29
 30598  004752                     l10072:
 30599                           
 30600                           ; BSR set to: 0
 30601                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 30602  004752  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 30603  004754  B4D8               	btfsc	status,2,c
 30604  004756  D003               	goto	l10078
 30605                           
 30606                           ; BSR set to: 0
 30607                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 30608                           
 30609                           ; BSR set to: 0
 30610                           
 30611                           ; BSR set to: 0
 30612                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 30613  004758  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 30614  00475A  A4D8               	btfss	status,2,c
 30615  00475C  D002               	goto	l10080
 30616  00475E                     l10078:
 30617                           
 30618                           ; BSR set to: 0
 30619                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 30620  00475E  0E02               	movlw	2
 30621  004760  D7E6               	goto	L29
 30622  004762                     l10080:
 30623                           
 30624                           ; BSR set to: 0
 30625                           ;usb_device_msd.c: 1528: else
 30626                           ;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 30627  004762  0E03               	movlw	3
 30628  004764  D7E4               	goto	L29
 30629  004766                     l10082:
 30630                           
 30631                           ; BSR set to: 0
 30632                           ;usb_device_msd.c: 1530: }
 30633                           ;usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 30634  004766  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 30635  004768  ECE8  F01E         	call	_MSDErrorHandler
 30636                           
 30637                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 30638  00476C  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 30639  00476E  0012               	return	
 30640  004770                     __end_of_MSDCheckForErrorCases:
 30641                           	opt stack 0
 30642                           tosu	equ	0xFFF
 30643                           tosh	equ	0xFFE
 30644                           tosl	equ	0xFFD
 30645                           pclath	equ	0xFFA
 30646                           tblptru	equ	0xFF8
 30647                           tblptrh	equ	0xFF7
 30648                           tblptrl	equ	0xFF6
 30649                           tablat	equ	0xFF5
 30650                           prodh	equ	0xFF4
 30651                           prodl	equ	0xFF3
 30652                           intcon	equ	0xFF2
 30653                           intcon2	equ	0xFF1
 30654                           intcon3	equ	0xFF0
 30655                           indf0	equ	0xFEF
 30656                           postinc0	equ	0xFEE
 30657                           fsr0h	equ	0xFEA
 30658                           fsr0l	equ	0xFE9
 30659                           wreg	equ	0xFE8
 30660                           indf1	equ	0xFE7
 30661                           postdec1	equ	0xFE5
 30662                           plusw1	equ	0xFE3
 30663                           fsr1h	equ	0xFE2
 30664                           fsr1l	equ	0xFE1
 30665                           indf2	equ	0xFDF
 30666                           postinc2	equ	0xFDE
 30667                           postdec2	equ	0xFDD
 30668                           plusw2	equ	0xFDB
 30669                           fsr2h	equ	0xFDA
 30670                           fsr2l	equ	0xFD9
 30671                           status	equ	0xFD8
 30672                           
 30673 ;; *************** function _MSDErrorHandler *****************
 30674 ;; Defined at:
 30675 ;;		line 1577 in file "usb_device_msd.c"
 30676 ;; Parameters:    Size  Location     Type
 30677 ;;  ErrorCase       1    wreg     unsigned char 
 30678 ;; Auto vars:     Size  Location     Type
 30679 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 30680 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 30681 ;; Return value:  Size  Location     Type
 30682 ;;                  1    wreg      void 
 30683 ;; Registers used:
 30684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30685 ;; Tracked objects:
 30686 ;;		On entry : 0/0
 30687 ;;		On exit  : 0/0
 30688 ;;		Unchanged: 0/0
 30689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30694 ;;Total ram usage:        2 bytes
 30695 ;; Hardware stack levels used:    1
 30696 ;; Hardware stack levels required when called:    1
 30697 ;; This function calls:
 30698 ;;		_ResetSenseData
 30699 ;;		_USBStallEndpoint
 30700 ;; This function is called by:
 30701 ;;		_MSDProcessCommandMediaAbsent
 30702 ;;		_MSDProcessCommandMediaPresent
 30703 ;;		_MSDCheckForErrorCases
 30704 ;; This function uses a non-reentrant model
 30705 ;;
 30706                           
 30707                           	psect	text138
 30708  003DD0                     __ptext138:
 30709                           	opt stack 0
 30710  003DD0                     _MSDErrorHandler:
 30711                           	opt stack 23
 30712                           
 30713                           ;incstack = 0
 30714                           ;MSDErrorHandler@ErrorCase stored from wreg
 30715  003DD0  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 30716                           
 30717                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;
 30718                           ;usb_device_msd.c: 1583: if((((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          InHandle & 0x80) != 0x00))) || (((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)US
      +                          BMSDOutHandle & 0x80) != 0x00))))
 30719  003DD2  0100               	movlb	0	; () banked
 30720  003DD4  51F4               	movf	_USBMSDInHandle& (0+255),w,b
 30721  003DD6  0100               	movlb	0	; () banked
 30722  003DD8  11F5               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 30723  003DDA  B4D8               	btfsc	status,2,c
 30724  003DDC  D007               	goto	l9850
 30725                           
 30726                           ; BSR set to: 0
 30727  003DDE  C0F4  FFD9         	movff	_USBMSDInHandle,fsr2l
 30728  003DE2  C0F5  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 30729  003DE6  0100               	movlb	0	; () banked
 30730  003DE8  BEDF               	btfsc	indf2,7,c
 30731  003DEA  0012               	return	
 30732  003DEC                     l9850:
 30733                           
 30734                           ; BSR set to: 0
 30735  003DEC  0100               	movlb	0	; () banked
 30736  003DEE  51F6               	movf	_USBMSDOutHandle& (0+255),w,b
 30737  003DF0  0100               	movlb	0	; () banked
 30738  003DF2  11F7               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 30739  003DF4  B4D8               	btfsc	status,2,c
 30740  003DF6  D007               	goto	l741
 30741                           
 30742                           ; BSR set to: 0
 30743  003DF8  C0F6  FFD9         	movff	_USBMSDOutHandle,fsr2l
 30744  003DFC  C0F7  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 30745  003E00  0100               	movlb	0	; () banked
 30746  003E02  BEDF               	btfsc	indf2,7,c
 30747  003E04  0012               	return	
 30748  003E06                     l741:
 30749                           
 30750                           ; BSR set to: 0
 30751                           ;usb_device_msd.c: 1586: }
 30752                           ;usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 30753  003E06  C18D  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 30754                           
 30755                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 30756  003E0A  0100               	movlb	0	; () banked
 30757  003E0C  69F9               	setf	_MSDCommandState& (0+255),b
 30758                           
 30759                           ; BSR set to: 0
 30760                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 30761  003E0E  0E00               	movlw	0
 30762  003E10  0101               	movlb	1	; () banked
 30763  003E12  6F8C               	movwf	_MSDReadState& (0+255),b
 30764                           
 30765                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 30766  003E14  0E00               	movlw	0
 30767  003E16  0101               	movlb	1	; () banked
 30768  003E18  6F8B               	movwf	_MSDWriteState& (0+255),b
 30769                           
 30770                           ; BSR set to: 1
 30771                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 30772  003E1A  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 30773  003E1E  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 30774  003E22  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 30775  003E26  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 30776                           
 30777                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 30778  003E2A  0E01               	movlw	1
 30779  003E2C  010D               	movlb	13	; () banked
 30780  003E2E  6F8C               	movwf	140,b	;volatile
 30781                           
 30782                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 30783  003E30  0E03               	movlw	3
 30784  003E32  0101               	movlb	1	; () banked
 30785  003E34  6F8D               	movwf	_MSD_State& (0+255),b
 30786                           
 30787                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 30788  003E36  D049               	goto	l9890
 30789  003E38                     l9858:
 30790                           
 30791                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 30792  003E38  0E02               	movlw	2
 30793  003E3A  010D               	movlb	13	; () banked
 30794  003E3C  6F8C               	movwf	140,b	;volatile
 30795                           
 30796                           ;usb_device_msd.c: 1607: break;
 30797  003E3E  0012               	return	
 30798  003E40                     l9860:
 30799                           
 30800                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 30801  003E40  0E01               	movlw	1
 30802  003E42  6E01               	movwf	USBStallEndpoint@dir,c
 30803  003E44  0E02               	movlw	2
 30804  003E46  EC34  F022         	call	_USBStallEndpoint
 30805                           
 30806                           ;usb_device_msd.c: 1611: break;
 30807  003E4A  0012               	return	
 30808  003E4C                     l9862:
 30809                           
 30810                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 30811  003E4C  0E02               	movlw	2
 30812  003E4E  010D               	movlb	13	; () banked
 30813  003E50  6F8C               	movwf	140,b	;volatile
 30814                           
 30815                           ; BSR set to: 13
 30816                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 30817  003E52  0E01               	movlw	1
 30818  003E54  6E01               	movwf	USBStallEndpoint@dir,c
 30819  003E56  0E02               	movlw	2
 30820  003E58  EC34  F022         	call	_USBStallEndpoint
 30821                           
 30822                           ;usb_device_msd.c: 1616: break;
 30823  003E5C  0012               	return	
 30824  003E5E                     l9866:
 30825                           
 30826                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 30827  003E5E  0E00               	movlw	0
 30828  003E60  6E01               	movwf	USBStallEndpoint@dir,c
 30829  003E62  0E02               	movlw	2
 30830  003E64  EC34  F022         	call	_USBStallEndpoint
 30831                           
 30832                           ;usb_device_msd.c: 1620: break;
 30833  003E68  0012               	return	
 30834  003E6A                     l9868:
 30835                           
 30836                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 30837  003E6A  0E02               	movlw	2
 30838  003E6C  010D               	movlb	13	; () banked
 30839  003E6E  6F8C               	movwf	140,b	;volatile
 30840                           
 30841                           ; BSR set to: 13
 30842                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 30843  003E70  0E00               	movlw	0
 30844  003E72  6E01               	movwf	USBStallEndpoint@dir,c
 30845  003E74  0E02               	movlw	2
 30846  003E76  EC34  F022         	call	_USBStallEndpoint
 30847                           
 30848                           ;usb_device_msd.c: 1625: break;
 30849  003E7A  0012               	return	
 30850  003E7C                     l9872:
 30851                           
 30852                           ;usb_device_msd.c: 1628: ResetSenseData();
 30853  003E7C  EC90  F02F         	call	_ResetSenseData	;wreg free
 30854                           
 30855                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 30856  003E80  0101               	movlb	1	; () banked
 30857  003E82  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 30858  003E84  0BF0               	andlw	-16
 30859  003E86  0905               	iorlw	5
 30860  003E88  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 30861                           
 30862                           ; BSR set to: 1
 30863                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 30864  003E8A  0E20               	movlw	32
 30865  003E8C  0101               	movlb	1	; () banked
 30866  003E8E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 30867                           
 30868                           ; BSR set to: 1
 30869                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 30870  003E90  0E00               	movlw	0
 30871  003E92  0101               	movlb	1	; () banked
 30872  003E94  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 30873                           
 30874                           ; BSR set to: 1
 30875                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 30876  003E96  0E02               	movlw	2
 30877  003E98  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 30878  003E9A  A4D8               	btfss	status,2,c
 30879  003E9C  D010               	goto	l9886
 30880                           
 30881                           ; BSR set to: 1
 30882  003E9E  0101               	movlb	1	; () banked
 30883  003EA0  5108               	movf	(_gblCBW+8)& (0+255),w,b
 30884  003EA2  0101               	movlb	1	; () banked
 30885  003EA4  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 30886  003EA6  0101               	movlb	1	; () banked
 30887  003EA8  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 30888  003EAA  0101               	movlb	1	; () banked
 30889  003EAC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 30890  003EAE  B4D8               	btfsc	status,2,c
 30891  003EB0  D006               	goto	l9886
 30892                           
 30893                           ; BSR set to: 1
 30894                           ;usb_device_msd.c: 1634: {
 30895                           ;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 30896  003EB2  0E00               	movlw	0
 30897  003EB4  6E01               	movwf	USBStallEndpoint@dir,c
 30898  003EB6  0E02               	movlw	2
 30899  003EB8  EC34  F022         	call	_USBStallEndpoint
 30900                           
 30901                           ;usb_device_msd.c: 1636: }
 30902  003EBC  0012               	return	
 30903  003EBE                     l9886:
 30904                           
 30905                           ;usb_device_msd.c: 1637: else
 30906                           ;usb_device_msd.c: 1638: {
 30907                           ;usb_device_msd.c: 1639: USBStallEndpoint(2u, 1);
 30908  003EBE  0E01               	movlw	1
 30909  003EC0  6E01               	movwf	USBStallEndpoint@dir,c
 30910  003EC2  0E02               	movlw	2
 30911  003EC4  EC34  F022         	call	_USBStallEndpoint
 30912                           
 30913                           ;usb_device_msd.c: 1644: }
 30914                           
 30915                           ;usb_device_msd.c: 1643: break;
 30916                           
 30917                           ;usb_device_msd.c: 1642: default:
 30918                           
 30919                           ;usb_device_msd.c: 1640: }
 30920                           ;usb_device_msd.c: 1641: break;
 30921  003EC8  0012               	return	
 30922  003ECA                     l9890:
 30923  003ECA  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 30924                           
 30925                           ; Switch size 1, requested type "space"
 30926                           ; Number of cases is 6, Range of values is 1 to 127
 30927                           ; switch strategies available:
 30928                           ; Name         Instructions Cycles
 30929                           ; simple_byte           19    10 (average)
 30930                           ;	Chosen strategy is simple_byte
 30931  003ECC  0A01               	xorlw	1	; case 1
 30932  003ECE  B4D8               	btfsc	status,2,c
 30933  003ED0  D7B3               	goto	l9858
 30934  003ED2  0A03               	xorlw	3	; case 2
 30935  003ED4  B4D8               	btfsc	status,2,c
 30936  003ED6  D7B4               	goto	l9860
 30937  003ED8  0A01               	xorlw	1	; case 3
 30938  003EDA  B4D8               	btfsc	status,2,c
 30939  003EDC  D7B7               	goto	l9862
 30940  003EDE  0A07               	xorlw	7	; case 4
 30941  003EE0  B4D8               	btfsc	status,2,c
 30942  003EE2  D7BD               	goto	l9866
 30943  003EE4  0A01               	xorlw	1	; case 5
 30944  003EE6  B4D8               	btfsc	status,2,c
 30945  003EE8  D7C0               	goto	l9868
 30946  003EEA  0A7A               	xorlw	122	; case 127
 30947  003EEC  A4D8               	btfss	status,2,c
 30948  003EEE  0012               	return	
 30949  003EF0  D7C5               	goto	l9872
 30950  003EF2                     __end_of_MSDErrorHandler:
 30951                           	opt stack 0
 30952                           tosu	equ	0xFFF
 30953                           tosh	equ	0xFFE
 30954                           tosl	equ	0xFFD
 30955                           pclath	equ	0xFFA
 30956                           tblptru	equ	0xFF8
 30957                           tblptrh	equ	0xFF7
 30958                           tblptrl	equ	0xFF6
 30959                           tablat	equ	0xFF5
 30960                           prodh	equ	0xFF4
 30961                           prodl	equ	0xFF3
 30962                           intcon	equ	0xFF2
 30963                           intcon2	equ	0xFF1
 30964                           intcon3	equ	0xFF0
 30965                           indf0	equ	0xFEF
 30966                           postinc0	equ	0xFEE
 30967                           fsr0h	equ	0xFEA
 30968                           fsr0l	equ	0xFE9
 30969                           wreg	equ	0xFE8
 30970                           indf1	equ	0xFE7
 30971                           postdec1	equ	0xFE5
 30972                           plusw1	equ	0xFE3
 30973                           fsr1h	equ	0xFE2
 30974                           fsr1l	equ	0xFE1
 30975                           indf2	equ	0xFDF
 30976                           postinc2	equ	0xFDE
 30977                           postdec2	equ	0xFDD
 30978                           plusw2	equ	0xFDB
 30979                           fsr2h	equ	0xFDA
 30980                           fsr2l	equ	0xFD9
 30981                           status	equ	0xFD8
 30982                           
 30983 ;; *************** function _USBStallEndpoint *****************
 30984 ;; Defined at:
 30985 ;;		line 1073 in file "usb_device.c"
 30986 ;; Parameters:    Size  Location     Type
 30987 ;;  ep              1    wreg     unsigned char 
 30988 ;;  dir             1    0[COMRAM] unsigned char 
 30989 ;; Auto vars:     Size  Location     Type
 30990 ;;  ep              1    5[COMRAM] unsigned char 
 30991 ;;  p               2    6[COMRAM] PTR struct __BDT
 30992 ;;		 -> BDT(48), 
 30993 ;; Return value:  Size  Location     Type
 30994 ;;                  1    wreg      void 
 30995 ;; Registers used:
 30996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30997 ;; Tracked objects:
 30998 ;;		On entry : 0/0
 30999 ;;		On exit  : 0/0
 31000 ;;		Unchanged: 0/0
 31001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31002 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31003 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31004 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31005 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31006 ;;Total ram usage:        8 bytes
 31007 ;; Hardware stack levels used:    1
 31008 ;; This function calls:
 31009 ;;		Nothing
 31010 ;; This function is called by:
 31011 ;;		_MSDTasks
 31012 ;;		_MSDReadHandler
 31013 ;;		_MSDWriteHandler
 31014 ;;		_MSDErrorHandler
 31015 ;;		_MSDTransferTerminated
 31016 ;; This function uses a non-reentrant model
 31017 ;;
 31018                           
 31019                           	psect	text139
 31020  004468                     __ptext139:
 31021                           	opt stack 0
 31022  004468                     _USBStallEndpoint:
 31023                           	opt stack 27
 31024                           
 31025                           ;incstack = 0
 31026                           ;USBStallEndpoint@ep stored from wreg
 31027  004468  6E06               	movwf	USBStallEndpoint@ep,c
 31028                           
 31029                           ;usb_device.c: 1075: BDT_ENTRY *p;
 31030                           ;usb_device.c: 1077: if(ep == 0)
 31031  00446A  5006               	movf	USBStallEndpoint@ep,w,c
 31032  00446C  A4D8               	btfss	status,2,c
 31033  00446E  D02B               	goto	l9670
 31034                           
 31035                           ;usb_device.c: 1078: {
 31036                           ;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 31037  004470  EE20 F001          	lfsr	2,1
 31038  004474  505C               	movf	_pBDTEntryEP0OutNext,w,c
 31039  004476  26D9               	addwf	fsr2l,f,c
 31040  004478  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 31041  00447A  22DA               	addwfc	fsr2h,f,c
 31042  00447C  0E08               	movlw	8
 31043  00447E  6EDF               	movwf	indf2,c
 31044                           
 31045                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 31046  004480  EE20 F002          	lfsr	2,2
 31047  004484  505C               	movf	_pBDTEntryEP0OutNext,w,c
 31048  004486  26D9               	addwf	fsr2l,f,c
 31049  004488  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 31050  00448A  22DA               	addwfc	fsr2h,f,c
 31051  00448C  0E30               	movlw	48
 31052  00448E  6EDE               	movwf	postinc2,c
 31053  004490  0E0D               	movlw	13
 31054  004492  6EDD               	movwf	postdec2,c
 31055                           
 31056                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 31057  004494  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31058  004498  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31059  00449C  0E0C               	movlw	12
 31060  00449E  6EDF               	movwf	indf2,c
 31061                           
 31062                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 31063  0044A0  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31064  0044A4  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31065  0044A8  0E00               	movlw	0
 31066  0044AA  8EDB               	bsf	plusw2,7,c
 31067                           
 31068                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 31069  0044AC  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 31070  0044B0  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31071  0044B4  0E04               	movlw	4
 31072  0044B6  6EDF               	movwf	indf2,c
 31073                           
 31074                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 31075  0044B8  C0EE  FFD9         	movff	_pBDTEntryIn,fsr2l
 31076  0044BC  C0EF  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31077  0044C0  0E00               	movlw	0
 31078  0044C2  8EDB               	bsf	plusw2,7,c
 31079                           
 31080                           ;usb_device.c: 1089: }
 31081  0044C4  0012               	return	
 31082  0044C6                     l9670:
 31083                           
 31084                           ;usb_device.c: 1090: else
 31085                           ;usb_device.c: 1091: {
 31086                           ;usb_device.c: 1092: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+0)]);
 31087  0044C6  5001               	movf	USBStallEndpoint@dir,w,c
 31088  0044C8  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 31089  0044CA  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 31090  0044CC  90D8               	bcf	status,0,c
 31091  0044CE  3602               	rlcf	??_USBStallEndpoint,f,c
 31092  0044D0  3603               	rlcf	??_USBStallEndpoint+1,f,c
 31093  0044D2  5006               	movf	USBStallEndpoint@ep,w,c
 31094  0044D4  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 31095  0044D6  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 31096  0044D8  90D8               	bcf	status,0,c
 31097  0044DA  3604               	rlcf	??_USBStallEndpoint+2,f,c
 31098  0044DC  3605               	rlcf	??_USBStallEndpoint+3,f,c
 31099  0044DE  90D8               	bcf	status,0,c
 31100  0044E0  3604               	rlcf	??_USBStallEndpoint+2,f,c
 31101  0044E2  3605               	rlcf	??_USBStallEndpoint+3,f,c
 31102  0044E4  5002               	movf	??_USBStallEndpoint,w,c
 31103  0044E6  2604               	addwf	??_USBStallEndpoint+2,f,c
 31104  0044E8  5003               	movf	??_USBStallEndpoint+1,w,c
 31105  0044EA  2205               	addwfc	??_USBStallEndpoint+3,f,c
 31106  0044EC  90D8               	bcf	status,0,c
 31107  0044EE  3604               	rlcf	??_USBStallEndpoint+2,f,c
 31108  0044F0  3605               	rlcf	??_USBStallEndpoint+3,f,c
 31109  0044F2  90D8               	bcf	status,0,c
 31110  0044F4  3604               	rlcf	??_USBStallEndpoint+2,f,c
 31111  0044F6  3605               	rlcf	??_USBStallEndpoint+3,f,c
 31112  0044F8  0E00               	movlw	0
 31113  0044FA  2404               	addwf	??_USBStallEndpoint+2,w,c
 31114  0044FC  6E07               	movwf	USBStallEndpoint@p,c
 31115  0044FE  0E0D               	movlw	13
 31116  004500  2005               	addwfc	??_USBStallEndpoint+3,w,c
 31117  004502  6E08               	movwf	USBStallEndpoint@p+1,c
 31118                           
 31119                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 31120  004504  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 31121  004508  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 31122  00450C  0E00               	movlw	0
 31123  00450E  84DB               	bsf	plusw2,2,c
 31124                           
 31125                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 31126  004510  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 31127  004514  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 31128  004518  0E00               	movlw	0
 31129  00451A  8EDB               	bsf	plusw2,7,c
 31130                           
 31131                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 31132  00451C  5006               	movf	USBStallEndpoint@ep,w,c
 31133  00451E  0D04               	mullw	4
 31134  004520  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 31135  004524  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 31136  004528  5001               	movf	USBStallEndpoint@dir,w,c
 31137  00452A  0D02               	mullw	2
 31138  00452C  50F3               	movf	prodl,w,c
 31139  00452E  2602               	addwf	??_USBStallEndpoint,f,c
 31140  004530  50F4               	movf	prodh,w,c
 31141  004532  2203               	addwfc	??_USBStallEndpoint+1,f,c
 31142  004534  90D8               	bcf	status,0,c
 31143  004536  3602               	rlcf	??_USBStallEndpoint,f,c
 31144  004538  3603               	rlcf	??_USBStallEndpoint+1,f,c
 31145  00453A  90D8               	bcf	status,0,c
 31146  00453C  3602               	rlcf	??_USBStallEndpoint,f,c
 31147  00453E  3603               	rlcf	??_USBStallEndpoint+1,f,c
 31148  004540  0E04               	movlw	4
 31149  004542  2602               	addwf	??_USBStallEndpoint,f,c
 31150  004544  0E00               	movlw	0
 31151  004546  2203               	addwfc	??_USBStallEndpoint+1,f,c
 31152  004548  0E00               	movlw	0
 31153  00454A  2402               	addwf	??_USBStallEndpoint,w,c
 31154  00454C  6E07               	movwf	USBStallEndpoint@p,c
 31155  00454E  0E0D               	movlw	13
 31156  004550  2003               	addwfc	??_USBStallEndpoint+1,w,c
 31157  004552  6E08               	movwf	USBStallEndpoint@p+1,c
 31158                           
 31159                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 31160  004554  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 31161  004558  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 31162  00455C  0E00               	movlw	0
 31163  00455E  84DB               	bsf	plusw2,2,c
 31164                           
 31165                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 31166  004560  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 31167  004564  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 31168  004568  0E00               	movlw	0
 31169  00456A  8EDB               	bsf	plusw2,7,c
 31170  00456C  0012               	return	
 31171  00456E                     __end_of_USBStallEndpoint:
 31172                           	opt stack 0
 31173                           tosu	equ	0xFFF
 31174                           tosh	equ	0xFFE
 31175                           tosl	equ	0xFFD
 31176                           pclath	equ	0xFFA
 31177                           tblptru	equ	0xFF8
 31178                           tblptrh	equ	0xFF7
 31179                           tblptrl	equ	0xFF6
 31180                           tablat	equ	0xFF5
 31181                           prodh	equ	0xFF4
 31182                           prodl	equ	0xFF3
 31183                           intcon	equ	0xFF2
 31184                           intcon2	equ	0xFF1
 31185                           intcon3	equ	0xFF0
 31186                           indf0	equ	0xFEF
 31187                           postinc0	equ	0xFEE
 31188                           fsr0h	equ	0xFEA
 31189                           fsr0l	equ	0xFE9
 31190                           wreg	equ	0xFE8
 31191                           indf1	equ	0xFE7
 31192                           postdec1	equ	0xFE5
 31193                           plusw1	equ	0xFE3
 31194                           fsr1h	equ	0xFE2
 31195                           fsr1l	equ	0xFE1
 31196                           indf2	equ	0xFDF
 31197                           postinc2	equ	0xFDE
 31198                           postdec2	equ	0xFDD
 31199                           plusw2	equ	0xFDB
 31200                           fsr2h	equ	0xFDA
 31201                           fsr2l	equ	0xFD9
 31202                           status	equ	0xFD8
 31203                           
 31204 ;; *************** function _ResetSenseData *****************
 31205 ;; Defined at:
 31206 ;;		line 1373 in file "usb_device_msd.c"
 31207 ;; Parameters:    Size  Location     Type
 31208 ;;		None
 31209 ;; Auto vars:     Size  Location     Type
 31210 ;;		None
 31211 ;; Return value:  Size  Location     Type
 31212 ;;                  1    wreg      void 
 31213 ;; Registers used:
 31214 ;;		wreg, status,2
 31215 ;; Tracked objects:
 31216 ;;		On entry : 0/0
 31217 ;;		On exit  : 0/0
 31218 ;;		Unchanged: 0/0
 31219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31224 ;;Total ram usage:        0 bytes
 31225 ;; Hardware stack levels used:    1
 31226 ;; This function calls:
 31227 ;;		Nothing
 31228 ;; This function is called by:
 31229 ;;		_USBMSDInit
 31230 ;;		_MSDProcessCommandMediaAbsent
 31231 ;;		_MSDProcessCommandMediaPresent
 31232 ;;		_MSDErrorHandler
 31233 ;; This function uses a non-reentrant model
 31234 ;;
 31235                           
 31236                           	psect	text140
 31237  005F20                     __ptext140:
 31238                           	opt stack 0
 31239  005F20                     _ResetSenseData:
 31240                           	opt stack 26
 31241                           
 31242                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 31243                           
 31244                           ;incstack = 0
 31245  005F20  0101               	movlb	1	; () banked
 31246  005F22  911F               	bcf	_gblSenseData& (0+255),0,b
 31247  005F24  931F               	bcf	_gblSenseData& (0+255),1,b
 31248  005F26  951F               	bcf	_gblSenseData& (0+255),2,b
 31249  005F28  971F               	bcf	_gblSenseData& (0+255),3,b
 31250  005F2A  891F               	bsf	_gblSenseData& (0+255),4,b
 31251  005F2C  8B1F               	bsf	_gblSenseData& (0+255),5,b
 31252  005F2E  8D1F               	bsf	_gblSenseData& (0+255),6,b
 31253                           
 31254                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 31255  005F30  0101               	movlb	1	; () banked
 31256  005F32  9F1F               	bcf	_gblSenseData& (0+255),7,b
 31257                           
 31258                           ; BSR set to: 1
 31259                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 31260  005F34  0E00               	movlw	0
 31261  005F36  0101               	movlb	1	; () banked
 31262  005F38  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 31263                           
 31264                           ; BSR set to: 1
 31265                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 31266  005F3A  0101               	movlb	1	; () banked
 31267  005F3C  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 31268  005F3E  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 31269  005F40  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 31270  005F42  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 31271                           
 31272                           ; BSR set to: 1
 31273                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 31274  005F44  0101               	movlb	1	; () banked
 31275  005F46  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 31276                           
 31277                           ; BSR set to: 1
 31278                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 31279  005F48  0101               	movlb	1	; () banked
 31280  005F4A  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 31281                           
 31282                           ; BSR set to: 1
 31283                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 31284  005F4C  0101               	movlb	1	; () banked
 31285  005F4E  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 31286                           
 31287                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 31288  005F50  0E00               	movlw	0
 31289  005F52  0101               	movlb	1	; () banked
 31290  005F54  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 31291                           
 31292                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 31293  005F56  0E00               	movlw	0
 31294  005F58  0101               	movlb	1	; () banked
 31295  005F5A  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 31296                           
 31297                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 31298  005F5C  0E00               	movlw	0
 31299  005F5E  0101               	movlb	1	; () banked
 31300  005F60  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 31301                           
 31302                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 31303  005F62  0E00               	movlw	0
 31304  005F64  0101               	movlb	1	; () banked
 31305  005F66  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 31306                           
 31307                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 31308  005F68  0E0A               	movlw	10
 31309  005F6A  0101               	movlb	1	; () banked
 31310  005F6C  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 31311                           
 31312                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 31313  005F6E  0E00               	movlw	0
 31314  005F70  0101               	movlb	1	; () banked
 31315  005F72  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 31316  005F74  0E00               	movlw	0
 31317  005F76  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 31318  005F78  0E00               	movlw	0
 31319  005F7A  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 31320  005F7C  0E00               	movlw	0
 31321  005F7E  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 31322                           
 31323                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 31324  005F80  0E00               	movlw	0
 31325  005F82  0101               	movlb	1	; () banked
 31326  005F84  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 31327                           
 31328                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 31329  005F86  0E00               	movlw	0
 31330  005F88  0101               	movlb	1	; () banked
 31331  005F8A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 31332                           
 31333                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 31334  005F8C  0E00               	movlw	0
 31335  005F8E  0101               	movlb	1	; () banked
 31336  005F90  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 31337                           
 31338                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 31339  005F92  0E00               	movlw	0
 31340  005F94  0101               	movlb	1	; () banked
 31341  005F96  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 31342                           
 31343                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 31344  005F98  0E00               	movlw	0
 31345  005F9A  0101               	movlb	1	; () banked
 31346  005F9C  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 31347                           
 31348                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 31349  005F9E  0E00               	movlw	0
 31350  005FA0  0101               	movlb	1	; () banked
 31351  005FA2  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 31352                           
 31353                           ; BSR set to: 1
 31354  005FA4  0012               	return		;funcret
 31355  005FA6                     __end_of_ResetSenseData:
 31356                           	opt stack 0
 31357                           tosu	equ	0xFFF
 31358                           tosh	equ	0xFFE
 31359                           tosl	equ	0xFFD
 31360                           pclath	equ	0xFFA
 31361                           tblptru	equ	0xFF8
 31362                           tblptrh	equ	0xFF7
 31363                           tblptrl	equ	0xFF6
 31364                           tablat	equ	0xFF5
 31365                           prodh	equ	0xFF4
 31366                           prodl	equ	0xFF3
 31367                           intcon	equ	0xFF2
 31368                           intcon2	equ	0xFF1
 31369                           intcon3	equ	0xFF0
 31370                           indf0	equ	0xFEF
 31371                           postinc0	equ	0xFEE
 31372                           fsr0h	equ	0xFEA
 31373                           fsr0l	equ	0xFE9
 31374                           wreg	equ	0xFE8
 31375                           indf1	equ	0xFE7
 31376                           postdec1	equ	0xFE5
 31377                           plusw1	equ	0xFE3
 31378                           fsr1h	equ	0xFE2
 31379                           fsr1l	equ	0xFE1
 31380                           indf2	equ	0xFDF
 31381                           postinc2	equ	0xFDE
 31382                           postdec2	equ	0xFDD
 31383                           plusw2	equ	0xFDB
 31384                           fsr2h	equ	0xFDA
 31385                           fsr2l	equ	0xFD9
 31386                           status	equ	0xFD8
 31387                           
 31388 ;; *************** function _ExternalFlash_SectorRead *****************
 31389 ;; Defined at:
 31390 ;;		line 64 in file "external_flash.c"
 31391 ;; Parameters:    Size  Location     Type
 31392 ;;  config          2   43[COMRAM] PTR void 
 31393 ;;		 -> NULL(0), 
 31394 ;;  sector_addr     4   45[COMRAM] unsigned long 
 31395 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 31396 ;;		 -> msd_buffer(512), 
 31397 ;; Auto vars:     Size  Location     Type
 31398 ;;  page            2   51[COMRAM] unsigned int 
 31399 ;; Return value:  Size  Location     Type
 31400 ;;                  1    wreg      unsigned char 
 31401 ;; Registers used:
 31402 ;;		wreg, status,2, status,0, cstack
 31403 ;; Tracked objects:
 31404 ;;		On entry : 0/0
 31405 ;;		On exit  : 0/0
 31406 ;;		Unchanged: 0/0
 31407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31408 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31409 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31411 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31412 ;;Total ram usage:       10 bytes
 31413 ;; Hardware stack levels used:    1
 31414 ;; Hardware stack levels required when called:    5
 31415 ;; This function calls:
 31416 ;;		_flash_page_read
 31417 ;; This function is called by:
 31418 ;;		_MSDReadHandler
 31419 ;; This function uses a non-reentrant model
 31420 ;;
 31421                           
 31422                           	psect	text141
 31423  007400                     __ptext141:
 31424                           	opt stack 0
 31425  007400                     _ExternalFlash_SectorRead:
 31426                           	opt stack 20
 31427                           
 31428                           ;external_flash.c: 66: uint16_t page = (uint16_t) sector_addr;
 31429                           
 31430                           ; BSR set to: 1
 31431                           ;incstack = 0
 31432  007400  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 31433  007404  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 31434                           
 31435                           ;external_flash.c: 70: if(sector_addr >= 4096)
 31436  007408  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 31437  00740A  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 31438  00740C  E104               	bnz	u6950
 31439  00740E  0E10               	movlw	16
 31440  007410  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 31441  007412  A0D8               	btfss	status,0,c
 31442  007414  D002               	goto	l10136
 31443  007416                     u6950:
 31444                           
 31445                           ;external_flash.c: 71: {
 31446                           ;external_flash.c: 72: return 0;
 31447  007416  0E00               	movlw	0
 31448  007418  0012               	return	
 31449  00741A                     l10136:
 31450                           
 31451                           ;external_flash.c: 73: }
 31452                           ;external_flash.c: 76: flash_page_read(page, buffer);
 31453  00741A  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 31454  00741E  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 31455  007422  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 31456  007426  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 31457  00742A  EC18  F03B         	call	_flash_page_read	;wreg free
 31458                           
 31459                           ;external_flash.c: 78: return 1;
 31460  00742E  0E01               	movlw	1
 31461  007430  0012               	return	
 31462  007432                     __end_of_ExternalFlash_SectorRead:
 31463                           	opt stack 0
 31464                           tosu	equ	0xFFF
 31465                           tosh	equ	0xFFE
 31466                           tosl	equ	0xFFD
 31467                           pclath	equ	0xFFA
 31468                           tblptru	equ	0xFF8
 31469                           tblptrh	equ	0xFF7
 31470                           tblptrl	equ	0xFF6
 31471                           tablat	equ	0xFF5
 31472                           prodh	equ	0xFF4
 31473                           prodl	equ	0xFF3
 31474                           intcon	equ	0xFF2
 31475                           intcon2	equ	0xFF1
 31476                           intcon3	equ	0xFF0
 31477                           indf0	equ	0xFEF
 31478                           postinc0	equ	0xFEE
 31479                           fsr0h	equ	0xFEA
 31480                           fsr0l	equ	0xFE9
 31481                           wreg	equ	0xFE8
 31482                           indf1	equ	0xFE7
 31483                           postdec1	equ	0xFE5
 31484                           plusw1	equ	0xFE3
 31485                           fsr1h	equ	0xFE2
 31486                           fsr1l	equ	0xFE1
 31487                           indf2	equ	0xFDF
 31488                           postinc2	equ	0xFDE
 31489                           postdec2	equ	0xFDD
 31490                           plusw2	equ	0xFDB
 31491                           fsr2h	equ	0xFDA
 31492                           fsr2l	equ	0xFD9
 31493                           status	equ	0xFD8
 31494                           
 31495 ;; *************** function _flash_page_read *****************
 31496 ;; Defined at:
 31497 ;;		line 539 in file "flash.c"
 31498 ;; Parameters:    Size  Location     Type
 31499 ;;  page            2   39[COMRAM] unsigned int 
 31500 ;;  data            2   41[COMRAM] PTR unsigned char 
 31501 ;;		 -> buffer(512), msd_buffer(512), 
 31502 ;; Auto vars:     Size  Location     Type
 31503 ;;		None
 31504 ;; Return value:  Size  Location     Type
 31505 ;;                  1    wreg      void 
 31506 ;; Registers used:
 31507 ;;		wreg, status,2, status,0, cstack
 31508 ;; Tracked objects:
 31509 ;;		On entry : 0/0
 31510 ;;		On exit  : 0/0
 31511 ;;		Unchanged: 0/0
 31512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31513 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31516 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31517 ;;Total ram usage:        4 bytes
 31518 ;; Hardware stack levels used:    1
 31519 ;; Hardware stack levels required when called:    4
 31520 ;; This function calls:
 31521 ;;		_flash_partial_read
 31522 ;; This function is called by:
 31523 ;;		_ExternalFlash_SectorRead
 31524 ;;		_fat_get_format_status
 31525 ;; This function uses a non-reentrant model
 31526 ;;
 31527                           
 31528                           	psect	text142
 31529  007630                     __ptext142:
 31530                           	opt stack 0
 31531  007630                     _flash_page_read:
 31532                           	opt stack 23
 31533                           
 31534                           ;flash.c: 542: flash_partial_read(page, 0, 512, data);
 31535                           
 31536                           ;incstack = 0
 31537  007630  C028  F014         	movff	flash_page_read@page,flash_partial_read@page
 31538  007634  C029  F015         	movff	flash_page_read@page+1,flash_partial_read@page+1
 31539  007638  0E00               	movlw	0
 31540  00763A  6E17               	movwf	flash_partial_read@start+1,c
 31541  00763C  0E00               	movlw	0
 31542  00763E  6E16               	movwf	flash_partial_read@start,c
 31543  007640  0E02               	movlw	2
 31544  007642  6E19               	movwf	flash_partial_read@length+1,c
 31545  007644  0E00               	movlw	0
 31546  007646  6E18               	movwf	flash_partial_read@length,c
 31547  007648  C02A  F01A         	movff	flash_page_read@data,flash_partial_read@data
 31548  00764C  C02B  F01B         	movff	flash_page_read@data+1,flash_partial_read@data+1
 31549  007650  EC8A  F031         	call	_flash_partial_read	;wreg free
 31550  007654  0012               	return		;funcret
 31551  007656                     __end_of_flash_page_read:
 31552                           	opt stack 0
 31553                           tosu	equ	0xFFF
 31554                           tosh	equ	0xFFE
 31555                           tosl	equ	0xFFD
 31556                           pclath	equ	0xFFA
 31557                           tblptru	equ	0xFF8
 31558                           tblptrh	equ	0xFF7
 31559                           tblptrl	equ	0xFF6
 31560                           tablat	equ	0xFF5
 31561                           prodh	equ	0xFF4
 31562                           prodl	equ	0xFF3
 31563                           intcon	equ	0xFF2
 31564                           intcon2	equ	0xFF1
 31565                           intcon3	equ	0xFF0
 31566                           indf0	equ	0xFEF
 31567                           postinc0	equ	0xFEE
 31568                           fsr0h	equ	0xFEA
 31569                           fsr0l	equ	0xFE9
 31570                           wreg	equ	0xFE8
 31571                           indf1	equ	0xFE7
 31572                           postdec1	equ	0xFE5
 31573                           plusw1	equ	0xFE3
 31574                           fsr1h	equ	0xFE2
 31575                           fsr1l	equ	0xFE1
 31576                           indf2	equ	0xFDF
 31577                           postinc2	equ	0xFDE
 31578                           postdec2	equ	0xFDD
 31579                           plusw2	equ	0xFDB
 31580                           fsr2h	equ	0xFDA
 31581                           fsr2l	equ	0xFD9
 31582                           status	equ	0xFD8
 31583                           
 31584 ;; *************** function _flash_partial_read *****************
 31585 ;; Defined at:
 31586 ;;		line 565 in file "flash.c"
 31587 ;; Parameters:    Size  Location     Type
 31588 ;;  page            2   19[COMRAM] unsigned int 
 31589 ;;  start           2   21[COMRAM] unsigned int 
 31590 ;;  length          2   23[COMRAM] unsigned int 
 31591 ;;  data            2   25[COMRAM] PTR unsigned char 
 31592 ;;		 -> file_buffer(50), buffer(512), fat_read_from_file@root(32), fat_rename_file@root(32), 
 31593 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 31594 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 31595 ;;		 -> _root_is_available@first_byte(1), msd_buffer(512), 
 31596 ;; Auto vars:     Size  Location     Type
 31597 ;;  command         4   31[COMRAM] unsigned char [4]
 31598 ;;  address         4   35[COMRAM] unsigned long 
 31599 ;; Return value:  Size  Location     Type
 31600 ;;                  1    wreg      void 
 31601 ;; Registers used:
 31602 ;;		wreg, status,2, status,0, cstack
 31603 ;; Tracked objects:
 31604 ;;		On entry : 0/0
 31605 ;;		On exit  : 0/0
 31606 ;;		Unchanged: 0/0
 31607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31608 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31609 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31610 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31611 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31612 ;;Total ram usage:       20 bytes
 31613 ;; Hardware stack levels used:    1
 31614 ;; Hardware stack levels required when called:    3
 31615 ;; This function calls:
 31616 ;;		__flash_spi_tx_rx
 31617 ;;		_flash_is_busy
 31618 ;; This function is called by:
 31619 ;;		_flash_page_read
 31620 ;;		__read_fat
 31621 ;;		__read_root
 31622 ;;		_fat_find_file
 31623 ;;		_fat_get_file_size
 31624 ;;		_fat_read_from_file
 31625 ;;		__root_is_available
 31626 ;;		__get_empty_cluster
 31627 ;;		_fat_get_empty_clusters
 31628 ;;		__get_first_cluster
 31629 ;;		__get_file_size
 31630 ;; This function uses a non-reentrant model
 31631 ;;
 31632                           
 31633                           	psect	text143
 31634  006314                     __ptext143:
 31635                           	opt stack 0
 31636  006314                     _flash_partial_read:
 31637                           	opt stack 23
 31638  006314                     l9764:
 31639  006314  EC5F  F03B         	call	_flash_is_busy	;wreg free
 31640  006318  0900               	iorlw	0
 31641  00631A  A4D8               	btfss	status,2,c
 31642  00631C  D7FB               	goto	l9764
 31643                           
 31644                           ;flash.c: 574: address = page;
 31645  00631E  C014  F024         	movff	flash_partial_read@page,flash_partial_read@address
 31646  006322  C015  F025         	movff	flash_partial_read@page+1,flash_partial_read@address+1
 31647  006326  6A26               	clrf	flash_partial_read@address+2,c
 31648  006328  6A27               	clrf	flash_partial_read@address+3,c
 31649                           
 31650                           ;flash.c: 575: address <<= 9;
 31651  00632A  0E09               	movlw	9
 31652  00632C                     u6445:
 31653  00632C  90D8               	bcf	status,0,c
 31654  00632E  3624               	rlcf	flash_partial_read@address,f,c
 31655  006330  3625               	rlcf	flash_partial_read@address+1,f,c
 31656  006332  3626               	rlcf	flash_partial_read@address+2,f,c
 31657  006334  3627               	rlcf	flash_partial_read@address+3,f,c
 31658  006336  2EE8               	decfsz	wreg,f,c
 31659  006338  D7F9               	goto	u6445
 31660                           
 31661                           ;flash.c: 576: address |= start;
 31662  00633A  5016               	movf	flash_partial_read@start,w,c
 31663  00633C  6E1C               	movwf	??_flash_partial_read& (0+255),c
 31664  00633E  5017               	movf	flash_partial_read@start+1,w,c
 31665  006340  6E1D               	movwf	(??_flash_partial_read+1)& (0+255),c
 31666  006342  6A1E               	clrf	(??_flash_partial_read+2)& (0+255),c
 31667  006344  6A1F               	clrf	(??_flash_partial_read+3)& (0+255),c
 31668  006346  501C               	movf	??_flash_partial_read,w,c
 31669  006348  1224               	iorwf	flash_partial_read@address,f,c
 31670  00634A  501D               	movf	??_flash_partial_read+1,w,c
 31671  00634C  1225               	iorwf	flash_partial_read@address+1,f,c
 31672  00634E  501E               	movf	??_flash_partial_read+2,w,c
 31673  006350  1226               	iorwf	flash_partial_read@address+2,f,c
 31674  006352  501F               	movf	??_flash_partial_read+3,w,c
 31675  006354  1227               	iorwf	flash_partial_read@address+3,f,c
 31676                           
 31677                           ;flash.c: 579: command[0] = 0x03;
 31678  006356  0E03               	movlw	3
 31679  006358  6E20               	movwf	flash_partial_read@command,c
 31680                           
 31681                           ;flash.c: 580: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 31682  00635A  C026  F021         	movff	flash_partial_read@address+2,flash_partial_read@command+1
 31683                           
 31684                           ;flash.c: 581: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 31685  00635E  5025               	movf	flash_partial_read@address+1,w,c
 31686  006360  6E22               	movwf	flash_partial_read@command+2,c
 31687                           
 31688                           ;flash.c: 582: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 31689  006362  C024  F023         	movff	flash_partial_read@address,flash_partial_read@command+3
 31690                           
 31691                           ;flash.c: 585: _flash_spi_tx_rx(command, 4, data, length);
 31692  006366  0E20               	movlw	low flash_partial_read@command
 31693  006368  6E01               	movwf	__flash_spi_tx_rx@command,c
 31694  00636A  0E00               	movlw	high flash_partial_read@command
 31695  00636C  6E02               	movwf	__flash_spi_tx_rx@command+1,c
 31696  00636E  0E00               	movlw	0
 31697  006370  6E04               	movwf	__flash_spi_tx_rx@command_length+1,c
 31698  006372  0E04               	movlw	4
 31699  006374  6E03               	movwf	__flash_spi_tx_rx@command_length,c
 31700  006376  C01A  F005         	movff	flash_partial_read@data,__flash_spi_tx_rx@data
 31701  00637A  C01B  F006         	movff	flash_partial_read@data+1,__flash_spi_tx_rx@data+1
 31702  00637E  C018  F007         	movff	flash_partial_read@length,__flash_spi_tx_rx@data_length
 31703  006382  C019  F008         	movff	flash_partial_read@length+1,__flash_spi_tx_rx@data_length+1
 31704  006386  EC2F  F02E         	call	__flash_spi_tx_rx	;wreg free
 31705  00638A  0012               	return		;funcret
 31706  00638C                     __end_of_flash_partial_read:
 31707                           	opt stack 0
 31708                           tosu	equ	0xFFF
 31709                           tosh	equ	0xFFE
 31710                           tosl	equ	0xFFD
 31711                           pclath	equ	0xFFA
 31712                           tblptru	equ	0xFF8
 31713                           tblptrh	equ	0xFF7
 31714                           tblptrl	equ	0xFF6
 31715                           tablat	equ	0xFF5
 31716                           prodh	equ	0xFF4
 31717                           prodl	equ	0xFF3
 31718                           intcon	equ	0xFF2
 31719                           intcon2	equ	0xFF1
 31720                           intcon3	equ	0xFF0
 31721                           indf0	equ	0xFEF
 31722                           postinc0	equ	0xFEE
 31723                           fsr0h	equ	0xFEA
 31724                           fsr0l	equ	0xFE9
 31725                           wreg	equ	0xFE8
 31726                           indf1	equ	0xFE7
 31727                           postdec1	equ	0xFE5
 31728                           plusw1	equ	0xFE3
 31729                           fsr1h	equ	0xFE2
 31730                           fsr1l	equ	0xFE1
 31731                           indf2	equ	0xFDF
 31732                           postinc2	equ	0xFDE
 31733                           postdec2	equ	0xFDD
 31734                           plusw2	equ	0xFDB
 31735                           fsr2h	equ	0xFDA
 31736                           fsr2l	equ	0xFD9
 31737                           status	equ	0xFD8
 31738                           
 31739 ;; *************** function _flash_is_busy *****************
 31740 ;; Defined at:
 31741 ;;		line 476 in file "flash.c"
 31742 ;; Parameters:    Size  Location     Type
 31743 ;;		None
 31744 ;; Auto vars:     Size  Location     Type
 31745 ;;  status          2   17[COMRAM] unsigned int 
 31746 ;; Return value:  Size  Location     Type
 31747 ;;                  1    wreg      unsigned char 
 31748 ;; Registers used:
 31749 ;;		wreg, status,2, status,0, cstack
 31750 ;; Tracked objects:
 31751 ;;		On entry : 0/0
 31752 ;;		On exit  : 0/0
 31753 ;;		Unchanged: 0/0
 31754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31759 ;;Total ram usage:        2 bytes
 31760 ;; Hardware stack levels used:    1
 31761 ;; Hardware stack levels required when called:    2
 31762 ;; This function calls:
 31763 ;;		__flash_get_status
 31764 ;;		__flash_wakeup
 31765 ;; This function is called by:
 31766 ;;		__flash_set_page_size
 31767 ;;		__flash_compare_page_to_buffer
 31768 ;;		__flash_write_to_buffer
 31769 ;;		__flash_write_page_from_buffer
 31770 ;;		_flash_partial_read
 31771 ;;		__flash_copy_page_to_buffer
 31772 ;;		__flash_erase_page
 31773 ;;		_flash_set_power_state
 31774 ;;		_flash_partial_write
 31775 ;; This function uses a non-reentrant model
 31776 ;;
 31777                           
 31778                           	psect	text144
 31779  0076BE                     __ptext144:
 31780                           	opt stack 0
 31781  0076BE                     _flash_is_busy:
 31782                           	opt stack 25
 31783                           
 31784                           ;flash.c: 479: if(power_state!=FLASH_POWER_STATE_NORMAL)
 31785                           
 31786                           ;incstack = 0
 31787  0076BE  0101               	movlb	1	; () banked
 31788  0076C0  5182               	movf	_power_state& (0+255),w,b
 31789  0076C2  A4D8               	btfss	status,2,c
 31790                           
 31791                           ; BSR set to: 1
 31792                           ;flash.c: 480: {
 31793                           ;flash.c: 481: _flash_wakeup();
 31794  0076C4  EC5E  F035         	call	__flash_wakeup	;wreg free
 31795                           
 31796                           ;flash.c: 482: }
 31797                           ;flash.c: 485: uint16_t status = _flash_get_status();
 31798  0076C8  EC19  F03A         	call	__flash_get_status	;wreg free
 31799  0076CC  C00D  F012         	movff	?__flash_get_status,flash_is_busy@status
 31800  0076D0  C00E  F013         	movff	?__flash_get_status+1,flash_is_busy@status+1
 31801                           
 31802                           ;flash.c: 486: if(status & 0b0000000010000000)
 31803  0076D4  AE12               	btfss	flash_is_busy@status,7,c
 31804  0076D6  D002               	goto	l9610
 31805                           
 31806                           ;flash.c: 487: {
 31807                           ;flash.c: 489: return 0;
 31808  0076D8  0E00               	movlw	0
 31809                           
 31810                           ;flash.c: 490: }
 31811  0076DA  0012               	return	
 31812  0076DC                     l9610:
 31813                           
 31814                           ;flash.c: 491: else
 31815                           ;flash.c: 492: {
 31816                           ;flash.c: 494: return 1;
 31817  0076DC  0E01               	movlw	1
 31818  0076DE  0012               	return	
 31819  0076E0                     __end_of_flash_is_busy:
 31820                           	opt stack 0
 31821                           tosu	equ	0xFFF
 31822                           tosh	equ	0xFFE
 31823                           tosl	equ	0xFFD
 31824                           pclath	equ	0xFFA
 31825                           tblptru	equ	0xFF8
 31826                           tblptrh	equ	0xFF7
 31827                           tblptrl	equ	0xFF6
 31828                           tablat	equ	0xFF5
 31829                           prodh	equ	0xFF4
 31830                           prodl	equ	0xFF3
 31831                           intcon	equ	0xFF2
 31832                           intcon2	equ	0xFF1
 31833                           intcon3	equ	0xFF0
 31834                           indf0	equ	0xFEF
 31835                           postinc0	equ	0xFEE
 31836                           fsr0h	equ	0xFEA
 31837                           fsr0l	equ	0xFE9
 31838                           wreg	equ	0xFE8
 31839                           indf1	equ	0xFE7
 31840                           postdec1	equ	0xFE5
 31841                           plusw1	equ	0xFE3
 31842                           fsr1h	equ	0xFE2
 31843                           fsr1l	equ	0xFE1
 31844                           indf2	equ	0xFDF
 31845                           postinc2	equ	0xFDE
 31846                           postdec2	equ	0xFDD
 31847                           plusw2	equ	0xFDB
 31848                           fsr2h	equ	0xFDA
 31849                           fsr2l	equ	0xFD9
 31850                           status	equ	0xFD8
 31851                           
 31852 ;; *************** function __flash_wakeup *****************
 31853 ;; Defined at:
 31854 ;;		line 289 in file "flash.c"
 31855 ;; Parameters:    Size  Location     Type
 31856 ;;		None
 31857 ;; Auto vars:     Size  Location     Type
 31858 ;;  command         1    8[COMRAM] unsigned char 
 31859 ;; Return value:  Size  Location     Type
 31860 ;;                  1    wreg      void 
 31861 ;; Registers used:
 31862 ;;		wreg, status,2, status,0, cstack
 31863 ;; Tracked objects:
 31864 ;;		On entry : 0/0
 31865 ;;		On exit  : 0/0
 31866 ;;		Unchanged: 0/0
 31867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31871 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31872 ;;Total ram usage:        1 bytes
 31873 ;; Hardware stack levels used:    1
 31874 ;; Hardware stack levels required when called:    1
 31875 ;; This function calls:
 31876 ;;		__flash_spi_tx
 31877 ;; This function is called by:
 31878 ;;		_flash_is_busy
 31879 ;;		_flash_set_power_state
 31880 ;; This function uses a non-reentrant model
 31881 ;;
 31882                           
 31883                           	psect	text145
 31884  006ABC                     __ptext145:
 31885                           	opt stack 0
 31886  006ABC                     __flash_wakeup:
 31887                           	opt stack 25
 31888                           
 31889                           ;flash.c: 291: uint8_t command;
 31890                           ;flash.c: 293: switch(power_state)
 31891                           
 31892                           ;incstack = 0
 31893  006ABC  D021               	goto	l9572
 31894  006ABE                     l9556:
 31895                           
 31896                           ;flash.c: 296: command = 0xAB;
 31897  006ABE  0EAB               	movlw	171
 31898  006AC0  6E09               	movwf	__flash_wakeup@command,c
 31899                           
 31900                           ;flash.c: 297: _flash_spi_tx(&command, 1);
 31901  006AC2  0E09               	movlw	low __flash_wakeup@command
 31902  006AC4  6E01               	movwf	__flash_spi_tx@data,c
 31903  006AC6  0E00               	movlw	high __flash_wakeup@command
 31904  006AC8  6E02               	movwf	__flash_spi_tx@data+1,c
 31905  006ACA  0E00               	movlw	0
 31906  006ACC  6E04               	movwf	__flash_spi_tx@length+1,c
 31907  006ACE  0E01               	movlw	1
 31908  006AD0  6E03               	movwf	__flash_spi_tx@length,c
 31909  006AD2  EC85  F034         	call	__flash_spi_tx	;wreg free
 31910                           
 31911                           ;flash.c: 298: _delay((unsigned long)((35)*(8000000/4000000.0)));
 31912  006AD6  0E17               	movlw	23
 31913  006AD8                     u12307:
 31914  006AD8  2EE8               	decfsz	wreg,f,c
 31915  006ADA  D7FE               	bra	u12307
 31916  006ADC  F000               	nop	
 31917                           
 31918                           ;flash.c: 299: power_state = FLASH_POWER_STATE_NORMAL;
 31919  006ADE  0E00               	movlw	0
 31920  006AE0  0101               	movlb	1	; () banked
 31921  006AE2  6F82               	movwf	_power_state& (0+255),b
 31922                           
 31923                           ;flash.c: 300: break;
 31924  006AE4  0012               	return	
 31925  006AE6                     l2111:
 31926                           
 31927                           ; BSR set to: 1
 31928                           ;flash.c: 305: LATDbits.LD7 = 0;
 31929  006AE6  9E8C               	bcf	3980,7,c	;volatile
 31930                           
 31931                           ; BSR set to: 1
 31932                           ;flash.c: 306: _delay((unsigned long)((20)*(8000000/4000000.0)));
 31933  006AE8  0E0D               	movlw	13
 31934  006AEA                     u12317:
 31935  006AEA  2EE8               	decfsz	wreg,f,c
 31936  006AEC  D7FE               	bra	u12317
 31937  006AEE  F000               	nop	
 31938                           
 31939                           ;flash.c: 307: LATDbits.LD7 = 1;
 31940  006AF0  8E8C               	bsf	3980,7,c	;volatile
 31941                           
 31942                           ;flash.c: 308: _delay((unsigned long)((120)*(8000000/4000000.0)));
 31943  006AF2  0E50               	movlw	80
 31944  006AF4                     u12327:
 31945  006AF4  2EE8               	decfsz	wreg,f,c
 31946  006AF6  D7FE               	bra	u12327
 31947                           
 31948                           ;flash.c: 309: power_state = FLASH_POWER_STATE_NORMAL;
 31949  006AF8  0E00               	movlw	0
 31950  006AFA  0101               	movlb	1	; () banked
 31951  006AFC  6F82               	movwf	_power_state& (0+255),b
 31952                           
 31953                           ; BSR set to: 1
 31954                           ;flash.c: 311: }
 31955                           
 31956                           ;flash.c: 310: break;
 31957  006AFE  0012               	return	
 31958  006B00                     l9572:
 31959  006B00  0101               	movlb	1	; () banked
 31960  006B02  5182               	movf	_power_state& (0+255),w,b
 31961                           
 31962                           ; Switch size 1, requested type "space"
 31963                           ; Number of cases is 2, Range of values is 1 to 2
 31964                           ; switch strategies available:
 31965                           ; Name         Instructions Cycles
 31966                           ; simple_byte            7     4 (average)
 31967                           ;	Chosen strategy is simple_byte
 31968  006B04  0A01               	xorlw	1	; case 1
 31969  006B06  B4D8               	btfsc	status,2,c
 31970  006B08  D7DA               	goto	l9556
 31971  006B0A  0A03               	xorlw	3	; case 2
 31972  006B0C  A4D8               	btfss	status,2,c
 31973  006B0E  0012               	return	
 31974  006B10  D7EA               	goto	l2111
 31975  006B12                     __end_of__flash_wakeup:
 31976                           	opt stack 0
 31977                           tosu	equ	0xFFF
 31978                           tosh	equ	0xFFE
 31979                           tosl	equ	0xFFD
 31980                           pclath	equ	0xFFA
 31981                           tblptru	equ	0xFF8
 31982                           tblptrh	equ	0xFF7
 31983                           tblptrl	equ	0xFF6
 31984                           tablat	equ	0xFF5
 31985                           prodh	equ	0xFF4
 31986                           prodl	equ	0xFF3
 31987                           intcon	equ	0xFF2
 31988                           intcon2	equ	0xFF1
 31989                           intcon3	equ	0xFF0
 31990                           indf0	equ	0xFEF
 31991                           postinc0	equ	0xFEE
 31992                           fsr0h	equ	0xFEA
 31993                           fsr0l	equ	0xFE9
 31994                           wreg	equ	0xFE8
 31995                           indf1	equ	0xFE7
 31996                           postdec1	equ	0xFE5
 31997                           plusw1	equ	0xFE3
 31998                           fsr1h	equ	0xFE2
 31999                           fsr1l	equ	0xFE1
 32000                           indf2	equ	0xFDF
 32001                           postinc2	equ	0xFDE
 32002                           postdec2	equ	0xFDD
 32003                           plusw2	equ	0xFDB
 32004                           fsr2h	equ	0xFDA
 32005                           fsr2l	equ	0xFD9
 32006                           status	equ	0xFD8
 32007                           
 32008 ;; *************** function __flash_spi_tx *****************
 32009 ;; Defined at:
 32010 ;;		line 103 in file "flash.c"
 32011 ;; Parameters:    Size  Location     Type
 32012 ;;  data            2    0[COMRAM] PTR unsigned char 
 32013 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 32014 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 32015 ;;  length          2    2[COMRAM] unsigned int 
 32016 ;; Auto vars:     Size  Location     Type
 32017 ;;		None
 32018 ;; Return value:  Size  Location     Type
 32019 ;;                  1    wreg      void 
 32020 ;; Registers used:
 32021 ;;		wreg, status,2, status,0
 32022 ;; Tracked objects:
 32023 ;;		On entry : 0/0
 32024 ;;		On exit  : 0/0
 32025 ;;		Unchanged: 0/0
 32026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32029 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32030 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32031 ;;Total ram usage:        8 bytes
 32032 ;; Hardware stack levels used:    1
 32033 ;; This function calls:
 32034 ;;		Nothing
 32035 ;; This function is called by:
 32036 ;;		__flash_set_page_size
 32037 ;;		__flash_wakeup
 32038 ;;		__flash_compare_page_to_buffer
 32039 ;;		__flash_write_page_from_buffer
 32040 ;;		__flash_copy_page_to_buffer
 32041 ;;		__flash_erase_page
 32042 ;;		_flash_set_power_state
 32043 ;; This function uses a non-reentrant model
 32044 ;;
 32045                           
 32046                           	psect	text146
 32047  00690A                     __ptext146:
 32048                           	opt stack 0
 32049  00690A                     __flash_spi_tx:
 32050                           	opt stack 25
 32051                           
 32052                           ;flash.c: 106: DMACON1bits.SSCON1 = 0;
 32053                           
 32054                           ; BSR set to: 1
 32055                           ;incstack = 0
 32056  00690A  9E88               	bcf	3976,7,c	;volatile
 32057                           
 32058                           ;flash.c: 107: DMACON1bits.SSCON0 = 0;
 32059  00690C  9C88               	bcf	3976,6,c	;volatile
 32060                           
 32061                           ;flash.c: 109: DMACON1bits.TXINC = 1;
 32062  00690E  8A88               	bsf	3976,5,c	;volatile
 32063                           
 32064                           ;flash.c: 111: DMACON1bits.RXINC = 0;
 32065  006910  9888               	bcf	3976,4,c	;volatile
 32066                           
 32067                           ;flash.c: 113: DMACON1bits.DUPLEX1 = 0;
 32068  006912  9688               	bcf	3976,3,c	;volatile
 32069                           
 32070                           ;flash.c: 114: DMACON1bits.DUPLEX0 = 1;
 32071  006914  8488               	bsf	3976,2,c	;volatile
 32072                           
 32073                           ;flash.c: 116: DMACON1bits.DLYINTEN = 0;
 32074  006916  9288               	bcf	3976,1,c	;volatile
 32075                           
 32076                           ;flash.c: 118: DMACON2bits.DLYCYC = 0b0000;
 32077  006918  9886               	bcf	3974,4,c	;volatile
 32078  00691A  9A86               	bcf	3974,5,c	;volatile
 32079  00691C  9C86               	bcf	3974,6,c	;volatile
 32080  00691E  9E86               	bcf	3974,7,c	;volatile
 32081                           
 32082                           ;flash.c: 120: DMACON2bits.INTLVL = 0b0000;
 32083  006920  9086               	bcf	3974,0,c	;volatile
 32084  006922  9286               	bcf	3974,1,c	;volatile
 32085  006924  9486               	bcf	3974,2,c	;volatile
 32086  006926  9686               	bcf	3974,3,c	;volatile
 32087                           
 32088                           ;flash.c: 123: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 32089  006928  5002               	movf	__flash_spi_tx@data+1,w,c
 32090  00692A  6E6A               	movwf	3946,c	;volatile
 32091                           
 32092                           ;flash.c: 124: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 32093  00692C  C001  FF6B         	movff	__flash_spi_tx@data,3947	;volatile
 32094                           
 32095                           ;flash.c: 127: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 32096  006930  0EFF               	movlw	255
 32097  006932  6E05               	movwf	??__flash_spi_tx& (0+255),c
 32098  006934  0EFF               	movlw	255
 32099  006936  6E06               	movwf	(??__flash_spi_tx+1)& (0+255),c
 32100  006938  C003  F007         	movff	__flash_spi_tx@length,??__flash_spi_tx+2
 32101  00693C  C004  F008         	movff	__flash_spi_tx@length+1,??__flash_spi_tx+3
 32102  006940  5005               	movf	??__flash_spi_tx,w,c
 32103  006942  2607               	addwf	??__flash_spi_tx+2,f,c
 32104  006944  5006               	movf	??__flash_spi_tx+1,w,c
 32105  006946  2208               	addwfc	??__flash_spi_tx+3,f,c
 32106  006948  C008  F007         	movff	??__flash_spi_tx+3,??__flash_spi_tx+2
 32107  00694C  6A08               	clrf	??__flash_spi_tx+3,c
 32108  00694E  5007               	movf	??__flash_spi_tx+2,w,c
 32109  006950  6E66               	movwf	3942,c	;volatile
 32110                           
 32111                           ;flash.c: 128: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 32112  006952  0403               	decf	__flash_spi_tx@length,w,c
 32113  006954  6E67               	movwf	3943,c	;volatile
 32114                           
 32115                           ;flash.c: 131: LATDbits.LD7 = 0;
 32116  006956  9E8C               	bcf	3980,7,c	;volatile
 32117                           
 32118                           ;flash.c: 132: DMACON1bits.DMAEN = 1;
 32119  006958  8088               	bsf	3976,0,c	;volatile
 32120  00695A                     l2073:
 32121  00695A  B088               	btfsc	3976,0,c	;volatile
 32122  00695C  D7FE               	goto	l2073
 32123                           
 32124                           ;flash.c: 134: LATDbits.LD7 = 1;
 32125  00695E  8E8C               	bsf	3980,7,c	;volatile
 32126  006960  0012               	return		;funcret
 32127  006962                     __end_of__flash_spi_tx:
 32128                           	opt stack 0
 32129                           tosu	equ	0xFFF
 32130                           tosh	equ	0xFFE
 32131                           tosl	equ	0xFFD
 32132                           pclath	equ	0xFFA
 32133                           tblptru	equ	0xFF8
 32134                           tblptrh	equ	0xFF7
 32135                           tblptrl	equ	0xFF6
 32136                           tablat	equ	0xFF5
 32137                           prodh	equ	0xFF4
 32138                           prodl	equ	0xFF3
 32139                           intcon	equ	0xFF2
 32140                           intcon2	equ	0xFF1
 32141                           intcon3	equ	0xFF0
 32142                           indf0	equ	0xFEF
 32143                           postinc0	equ	0xFEE
 32144                           fsr0h	equ	0xFEA
 32145                           fsr0l	equ	0xFE9
 32146                           wreg	equ	0xFE8
 32147                           indf1	equ	0xFE7
 32148                           postdec1	equ	0xFE5
 32149                           plusw1	equ	0xFE3
 32150                           fsr1h	equ	0xFE2
 32151                           fsr1l	equ	0xFE1
 32152                           indf2	equ	0xFDF
 32153                           postinc2	equ	0xFDE
 32154                           postdec2	equ	0xFDD
 32155                           plusw2	equ	0xFDB
 32156                           fsr2h	equ	0xFDA
 32157                           fsr2l	equ	0xFD9
 32158                           status	equ	0xFD8
 32159                           
 32160 ;; *************** function __flash_get_status *****************
 32161 ;; Defined at:
 32162 ;;		line 278 in file "flash.c"
 32163 ;; Parameters:    Size  Location     Type
 32164 ;;		None
 32165 ;; Auto vars:     Size  Location     Type
 32166 ;;  status          2   15[COMRAM] unsigned int 
 32167 ;;  command         1   14[COMRAM] unsigned char 
 32168 ;; Return value:  Size  Location     Type
 32169 ;;                  2   12[COMRAM] unsigned int 
 32170 ;; Registers used:
 32171 ;;		wreg, status,2, status,0, cstack
 32172 ;; Tracked objects:
 32173 ;;		On entry : 0/0
 32174 ;;		On exit  : 0/0
 32175 ;;		Unchanged: 0/0
 32176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32178 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32180 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32181 ;;Total ram usage:        5 bytes
 32182 ;; Hardware stack levels used:    1
 32183 ;; Hardware stack levels required when called:    1
 32184 ;; This function calls:
 32185 ;;		__flash_spi_tx_rx
 32186 ;; This function is called by:
 32187 ;;		__flash_compare_page_to_buffer
 32188 ;;		_flash_is_busy
 32189 ;; This function uses a non-reentrant model
 32190 ;;
 32191                           
 32192                           	psect	text147
 32193  007432                     __ptext147:
 32194                           	opt stack 0
 32195  007432                     __flash_get_status:
 32196                           	opt stack 25
 32197                           
 32198                           ;flash.c: 282: uint8_t command = 0xD7;
 32199                           
 32200                           ;incstack = 0
 32201  007432  0ED7               	movlw	215
 32202  007434  6E0F               	movwf	__flash_get_status@command,c
 32203                           
 32204                           ;flash.c: 283: uint16_t status;
 32205                           ;flash.c: 284: _flash_spi_tx_rx(&command, 1, (uint8_t*) &status, 2);
 32206  007436  0E0F               	movlw	low __flash_get_status@command
 32207  007438  6E01               	movwf	__flash_spi_tx_rx@command,c
 32208  00743A  0E00               	movlw	high __flash_get_status@command
 32209  00743C  6E02               	movwf	__flash_spi_tx_rx@command+1,c
 32210  00743E  0E00               	movlw	0
 32211  007440  6E04               	movwf	__flash_spi_tx_rx@command_length+1,c
 32212  007442  0E01               	movlw	1
 32213  007444  6E03               	movwf	__flash_spi_tx_rx@command_length,c
 32214  007446  0E10               	movlw	low __flash_get_status@status
 32215  007448  6E05               	movwf	__flash_spi_tx_rx@data,c
 32216  00744A  0E00               	movlw	high __flash_get_status@status
 32217  00744C  6E06               	movwf	__flash_spi_tx_rx@data+1,c
 32218  00744E  0E00               	movlw	0
 32219  007450  6E08               	movwf	__flash_spi_tx_rx@data_length+1,c
 32220  007452  0E02               	movlw	2
 32221  007454  6E07               	movwf	__flash_spi_tx_rx@data_length,c
 32222  007456  EC2F  F02E         	call	__flash_spi_tx_rx	;wreg free
 32223                           
 32224                           ;flash.c: 285: return status;
 32225  00745A  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 32226  00745E  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 32227  007462  0012               	return	
 32228  007464                     __end_of__flash_get_status:
 32229                           	opt stack 0
 32230                           tosu	equ	0xFFF
 32231                           tosh	equ	0xFFE
 32232                           tosl	equ	0xFFD
 32233                           pclath	equ	0xFFA
 32234                           tblptru	equ	0xFF8
 32235                           tblptrh	equ	0xFF7
 32236                           tblptrl	equ	0xFF6
 32237                           tablat	equ	0xFF5
 32238                           prodh	equ	0xFF4
 32239                           prodl	equ	0xFF3
 32240                           intcon	equ	0xFF2
 32241                           intcon2	equ	0xFF1
 32242                           intcon3	equ	0xFF0
 32243                           indf0	equ	0xFEF
 32244                           postinc0	equ	0xFEE
 32245                           fsr0h	equ	0xFEA
 32246                           fsr0l	equ	0xFE9
 32247                           wreg	equ	0xFE8
 32248                           indf1	equ	0xFE7
 32249                           postdec1	equ	0xFE5
 32250                           plusw1	equ	0xFE3
 32251                           fsr1h	equ	0xFE2
 32252                           fsr1l	equ	0xFE1
 32253                           indf2	equ	0xFDF
 32254                           postinc2	equ	0xFDE
 32255                           postdec2	equ	0xFDD
 32256                           plusw2	equ	0xFDB
 32257                           fsr2h	equ	0xFDA
 32258                           fsr2l	equ	0xFD9
 32259                           status	equ	0xFD8
 32260                           
 32261 ;; *************** function __flash_spi_tx_rx *****************
 32262 ;; Defined at:
 32263 ;;		line 194 in file "flash.c"
 32264 ;; Parameters:    Size  Location     Type
 32265 ;;  command         2    0[COMRAM] PTR unsigned char 
 32266 ;;		 -> flash_partial_read@command(4), _flash_get_status@command(1), 
 32267 ;;  command_leng    2    2[COMRAM] unsigned int 
 32268 ;;  data            2    4[COMRAM] PTR unsigned char 
 32269 ;;		 -> file_buffer(50), buffer(512), fat_read_from_file@root(32), fat_rename_file@root(32), 
 32270 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 32271 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 32272 ;;		 -> _root_is_available@first_byte(1), _flash_get_status@status(2), msd_buffer(512), 
 32273 ;;  data_length     2    6[COMRAM] unsigned int 
 32274 ;; Auto vars:     Size  Location     Type
 32275 ;;		None
 32276 ;; Return value:  Size  Location     Type
 32277 ;;                  1    wreg      void 
 32278 ;; Registers used:
 32279 ;;		wreg, status,2, status,0
 32280 ;; Tracked objects:
 32281 ;;		On entry : 0/0
 32282 ;;		On exit  : 0/0
 32283 ;;		Unchanged: 0/0
 32284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32285 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32287 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32288 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32289 ;;Total ram usage:       12 bytes
 32290 ;; Hardware stack levels used:    1
 32291 ;; This function calls:
 32292 ;;		Nothing
 32293 ;; This function is called by:
 32294 ;;		__flash_get_status
 32295 ;;		_flash_partial_read
 32296 ;; This function uses a non-reentrant model
 32297 ;;
 32298                           
 32299                           	psect	text148
 32300  005C5E                     __ptext148:
 32301                           	opt stack 0
 32302  005C5E                     __flash_spi_tx_rx:
 32303                           	opt stack 25
 32304                           
 32305                           ;flash.c: 197: DMACON1bits.SSCON1 = 0;
 32306                           
 32307                           ;incstack = 0
 32308  005C5E  9E88               	bcf	3976,7,c	;volatile
 32309                           
 32310                           ;flash.c: 198: DMACON1bits.SSCON0 = 0;
 32311  005C60  9C88               	bcf	3976,6,c	;volatile
 32312                           
 32313                           ;flash.c: 200: DMACON1bits.TXINC = 1;
 32314  005C62  8A88               	bsf	3976,5,c	;volatile
 32315                           
 32316                           ;flash.c: 202: DMACON1bits.RXINC = 0;
 32317  005C64  9888               	bcf	3976,4,c	;volatile
 32318                           
 32319                           ;flash.c: 204: DMACON1bits.DUPLEX1 = 0;
 32320  005C66  9688               	bcf	3976,3,c	;volatile
 32321                           
 32322                           ;flash.c: 205: DMACON1bits.DUPLEX0 = 1;
 32323  005C68  8488               	bsf	3976,2,c	;volatile
 32324                           
 32325                           ;flash.c: 207: DMACON1bits.DLYINTEN = 0;
 32326  005C6A  9288               	bcf	3976,1,c	;volatile
 32327                           
 32328                           ;flash.c: 209: DMACON2bits.DLYCYC = 0b0000;
 32329  005C6C  9886               	bcf	3974,4,c	;volatile
 32330  005C6E  9A86               	bcf	3974,5,c	;volatile
 32331  005C70  9C86               	bcf	3974,6,c	;volatile
 32332  005C72  9E86               	bcf	3974,7,c	;volatile
 32333                           
 32334                           ;flash.c: 211: DMACON2bits.INTLVL = 0b0000;
 32335  005C74  9086               	bcf	3974,0,c	;volatile
 32336  005C76  9286               	bcf	3974,1,c	;volatile
 32337  005C78  9486               	bcf	3974,2,c	;volatile
 32338  005C7A  9686               	bcf	3974,3,c	;volatile
 32339                           
 32340                           ;flash.c: 214: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 32341  005C7C  5002               	movf	__flash_spi_tx_rx@command+1,w,c
 32342  005C7E  6E6A               	movwf	3946,c	;volatile
 32343                           
 32344                           ;flash.c: 215: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 32345  005C80  C001  FF6B         	movff	__flash_spi_tx_rx@command,3947	;volatile
 32346                           
 32347                           ;flash.c: 218: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 32348  005C84  0EFF               	movlw	255
 32349  005C86  6E09               	movwf	??__flash_spi_tx_rx& (0+255),c
 32350  005C88  0EFF               	movlw	255
 32351  005C8A  6E0A               	movwf	(??__flash_spi_tx_rx+1)& (0+255),c
 32352  005C8C  C003  F00B         	movff	__flash_spi_tx_rx@command_length,??__flash_spi_tx_rx+2
 32353  005C90  C004  F00C         	movff	__flash_spi_tx_rx@command_length+1,??__flash_spi_tx_rx+3
 32354  005C94  5009               	movf	??__flash_spi_tx_rx,w,c
 32355  005C96  260B               	addwf	??__flash_spi_tx_rx+2,f,c
 32356  005C98  500A               	movf	??__flash_spi_tx_rx+1,w,c
 32357  005C9A  220C               	addwfc	??__flash_spi_tx_rx+3,f,c
 32358  005C9C  C00C  F00B         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 32359  005CA0  6A0C               	clrf	??__flash_spi_tx_rx+3,c
 32360  005CA2  500B               	movf	??__flash_spi_tx_rx+2,w,c
 32361  005CA4  6E66               	movwf	3942,c	;volatile
 32362                           
 32363                           ;flash.c: 219: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 32364  005CA6  0403               	decf	__flash_spi_tx_rx@command_length,w,c
 32365  005CA8  6E67               	movwf	3943,c	;volatile
 32366                           
 32367                           ;flash.c: 222: LATDbits.LD7 = 0;
 32368  005CAA  9E8C               	bcf	3980,7,c	;volatile
 32369                           
 32370                           ;flash.c: 225: DMACON1bits.DMAEN = 1;
 32371  005CAC  8088               	bsf	3976,0,c	;volatile
 32372  005CAE                     l2088:
 32373  005CAE  B088               	btfsc	3976,0,c	;volatile
 32374  005CB0  D7FE               	goto	l2088
 32375                           
 32376                           ;flash.c: 229: DMACON1bits.TXINC = 0;
 32377  005CB2  9A88               	bcf	3976,5,c	;volatile
 32378                           
 32379                           ;flash.c: 231: DMACON1bits.RXINC = 1;
 32380  005CB4  8888               	bsf	3976,4,c	;volatile
 32381                           
 32382                           ;flash.c: 233: DMACON1bits.DUPLEX1 = 0;
 32383  005CB6  9688               	bcf	3976,3,c	;volatile
 32384                           
 32385                           ;flash.c: 234: DMACON1bits.DUPLEX0 = 0;
 32386  005CB8  9488               	bcf	3976,2,c	;volatile
 32387                           
 32388                           ;flash.c: 237: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 32389  005CBA  5006               	movf	__flash_spi_tx_rx@data+1,w,c
 32390  005CBC  6E68               	movwf	3944,c	;volatile
 32391                           
 32392                           ;flash.c: 238: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 32393  005CBE  C005  FF69         	movff	__flash_spi_tx_rx@data,3945	;volatile
 32394                           
 32395                           ;flash.c: 241: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 32396  005CC2  0EFF               	movlw	255
 32397  005CC4  6E09               	movwf	??__flash_spi_tx_rx& (0+255),c
 32398  005CC6  0EFF               	movlw	255
 32399  005CC8  6E0A               	movwf	(??__flash_spi_tx_rx+1)& (0+255),c
 32400  005CCA  C007  F00B         	movff	__flash_spi_tx_rx@data_length,??__flash_spi_tx_rx+2
 32401  005CCE  C008  F00C         	movff	__flash_spi_tx_rx@data_length+1,??__flash_spi_tx_rx+3
 32402  005CD2  5009               	movf	??__flash_spi_tx_rx,w,c
 32403  005CD4  260B               	addwf	??__flash_spi_tx_rx+2,f,c
 32404  005CD6  500A               	movf	??__flash_spi_tx_rx+1,w,c
 32405  005CD8  220C               	addwfc	??__flash_spi_tx_rx+3,f,c
 32406  005CDA  C00C  F00B         	movff	??__flash_spi_tx_rx+3,??__flash_spi_tx_rx+2
 32407  005CDE  6A0C               	clrf	??__flash_spi_tx_rx+3,c
 32408  005CE0  500B               	movf	??__flash_spi_tx_rx+2,w,c
 32409  005CE2  6E66               	movwf	3942,c	;volatile
 32410                           
 32411                           ;flash.c: 242: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 32412  005CE4  0407               	decf	__flash_spi_tx_rx@data_length,w,c
 32413  005CE6  6E67               	movwf	3943,c	;volatile
 32414                           
 32415                           ;flash.c: 245: DMACON1bits.DMAEN = 1;
 32416  005CE8  8088               	bsf	3976,0,c	;volatile
 32417  005CEA                     l2091:
 32418  005CEA  B088               	btfsc	3976,0,c	;volatile
 32419  005CEC  D7FE               	goto	l2091
 32420                           
 32421                           ;flash.c: 249: LATDbits.LD7 = 1;
 32422  005CEE  8E8C               	bsf	3980,7,c	;volatile
 32423  005CF0  0012               	return		;funcret
 32424  005CF2                     __end_of__flash_spi_tx_rx:
 32425                           	opt stack 0
 32426                           tosu	equ	0xFFF
 32427                           tosh	equ	0xFFE
 32428                           tosl	equ	0xFFD
 32429                           pclath	equ	0xFFA
 32430                           tblptru	equ	0xFF8
 32431                           tblptrh	equ	0xFF7
 32432                           tblptrl	equ	0xFF6
 32433                           tablat	equ	0xFF5
 32434                           prodh	equ	0xFF4
 32435                           prodl	equ	0xFF3
 32436                           intcon	equ	0xFF2
 32437                           intcon2	equ	0xFF1
 32438                           intcon3	equ	0xFF0
 32439                           indf0	equ	0xFEF
 32440                           postinc0	equ	0xFEE
 32441                           fsr0h	equ	0xFEA
 32442                           fsr0l	equ	0xFE9
 32443                           wreg	equ	0xFE8
 32444                           indf1	equ	0xFE7
 32445                           postdec1	equ	0xFE5
 32446                           plusw1	equ	0xFE3
 32447                           fsr1h	equ	0xFE2
 32448                           fsr1l	equ	0xFE1
 32449                           indf2	equ	0xFDF
 32450                           postinc2	equ	0xFDE
 32451                           postdec2	equ	0xFDD
 32452                           plusw2	equ	0xFDB
 32453                           fsr2h	equ	0xFDA
 32454                           fsr2l	equ	0xFD9
 32455                           status	equ	0xFD8
 32456                           
 32457 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 32458 ;; Defined at:
 32459 ;;		line 993 in file "usb_device_msd.c"
 32460 ;; Parameters:    Size  Location     Type
 32461 ;;  DiExpected      2    0[COMRAM] unsigned int 
 32462 ;; Auto vars:     Size  Location     Type
 32463 ;;		None
 32464 ;; Return value:  Size  Location     Type
 32465 ;;                  1    wreg      void 
 32466 ;; Registers used:
 32467 ;;		wreg, status,2, status,0
 32468 ;; Tracked objects:
 32469 ;;		On entry : 0/0
 32470 ;;		On exit  : 0/0
 32471 ;;		Unchanged: 0/0
 32472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32475 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32476 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32477 ;;Total ram usage:        6 bytes
 32478 ;; Hardware stack levels used:    1
 32479 ;; This function calls:
 32480 ;;		Nothing
 32481 ;; This function is called by:
 32482 ;;		_MSDProcessCommandMediaPresent
 32483 ;; This function uses a non-reentrant model
 32484 ;;
 32485                           
 32486                           	psect	text149
 32487  005802                     __ptext149:
 32488                           	opt stack 0
 32489  005802                     _MSDComputeDeviceInAndResidue:
 32490                           	opt stack 26
 32491                           
 32492                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 32493                           
 32494                           ;incstack = 0
 32495  005802  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 32496  005804  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 32497  005806  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 32498  005808  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 32499  00580A  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 32500  00580C  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 32501  00580E  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 32502  005810  0101               	movlb	1	; () banked
 32503  005812  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 32504  005814  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 32505  005816  0101               	movlb	1	; () banked
 32506  005818  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 32507  00581A  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 32508  00581C  0101               	movlb	1	; () banked
 32509  00581E  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 32510  005820  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 32511  005822  0101               	movlb	1	; () banked
 32512  005824  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 32513  005826  B0D8               	btfsc	status,0,c
 32514  005828  D00E               	goto	l10458
 32515                           
 32516                           ; BSR set to: 1
 32517                           ;usb_device_msd.c: 997: {
 32518                           ;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 32519  00582A  0E00               	movlw	0
 32520  00582C  010D               	movlb	13	; () banked
 32521  00582E  6F88               	movwf	136,b	;volatile
 32522  005830  0E00               	movlw	0
 32523  005832  6F89               	movwf	137,b	;volatile
 32524  005834  0E00               	movlw	0
 32525  005836  6F8A               	movwf	138,b	;volatile
 32526  005838  0E00               	movlw	0
 32527  00583A  6F8B               	movwf	139,b	;volatile
 32528                           
 32529                           ; BSR set to: 13
 32530                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 32531  00583C  C108  F176         	movff	_gblCBW+8,_TransferLength
 32532  005840  C109  F177         	movff	_gblCBW+9,_TransferLength+1
 32533                           
 32534                           ;usb_device_msd.c: 1002: }
 32535  005844  0012               	return	
 32536  005846                     l10458:
 32537                           
 32538                           ;usb_device_msd.c: 1003: else
 32539                           ;usb_device_msd.c: 1004: {
 32540                           ;usb_device_msd.c: 1006: if(DiExpected < TransferLength.Val)
 32541  005846  0101               	movlb	1	; () banked
 32542  005848  5176               	movf	_TransferLength& (0+255),w,b
 32543  00584A  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 32544  00584C  0101               	movlb	1	; () banked
 32545  00584E  5177               	movf	(_TransferLength+1)& (0+255),w,b
 32546  005850  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 32547  005852  B0D8               	btfsc	status,0,c
 32548  005854  D004               	goto	l10462
 32549                           
 32550                           ; BSR set to: 1
 32551                           ;usb_device_msd.c: 1007: {
 32552                           ;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 32553  005856  C001  F176         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 32554  00585A  C002  F177         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 32555  00585E                     l10462:
 32556                           
 32557                           ; BSR set to: 1
 32558                           ;usb_device_msd.c: 1009: }
 32559                           ;usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength - Trans
      +                          ferLength.Val;
 32560  00585E  0101               	movlb	1	; () banked
 32561  005860  5176               	movf	_TransferLength& (0+255),w,b
 32562  005862  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 32563  005864  0101               	movlb	1	; () banked
 32564  005866  5177               	movf	(_TransferLength+1)& (0+255),w,b
 32565  005868  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 32566  00586A  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 32567  00586C  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 32568  00586E  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 32569  005870  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 32570  005872  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 32571  005874  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 32572  005876  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 32573  005878  0E00               	movlw	0
 32574  00587A  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 32575  00587C  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 32576  00587E  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 32577  005880  0101               	movlb	1	; () banked
 32578  005882  5108               	movf	(_gblCBW+8)& (0+255),w,b
 32579  005884  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 32580  005886  010D               	movlb	13	; () banked
 32581  005888  6F88               	movwf	136,b	;volatile
 32582  00588A  0101               	movlb	1	; () banked
 32583  00588C  5109               	movf	(_gblCBW+9)& (0+255),w,b
 32584  00588E  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 32585  005890  010D               	movlb	13	; () banked
 32586  005892  6F89               	movwf	137,b	;volatile
 32587  005894  0101               	movlb	1	; () banked
 32588  005896  510A               	movf	(_gblCBW+10)& (0+255),w,b
 32589  005898  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 32590  00589A  010D               	movlb	13	; () banked
 32591  00589C  6F8A               	movwf	138,b	;volatile
 32592  00589E  0101               	movlb	1	; () banked
 32593  0058A0  510B               	movf	(_gblCBW+11)& (0+255),w,b
 32594  0058A2  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 32595  0058A4  010D               	movlb	13	; () banked
 32596  0058A6  6F8B               	movwf	139,b	;volatile
 32597  0058A8  0012               	return	
 32598  0058AA                     __end_of_MSDComputeDeviceInAndResidue:
 32599                           	opt stack 0
 32600                           tosu	equ	0xFFF
 32601                           tosh	equ	0xFFE
 32602                           tosl	equ	0xFFD
 32603                           pclath	equ	0xFFA
 32604                           tblptru	equ	0xFF8
 32605                           tblptrh	equ	0xFF7
 32606                           tblptrl	equ	0xFF6
 32607                           tablat	equ	0xFF5
 32608                           prodh	equ	0xFF4
 32609                           prodl	equ	0xFF3
 32610                           intcon	equ	0xFF2
 32611                           intcon2	equ	0xFF1
 32612                           intcon3	equ	0xFF0
 32613                           indf0	equ	0xFEF
 32614                           postinc0	equ	0xFEE
 32615                           fsr0h	equ	0xFEA
 32616                           fsr0l	equ	0xFE9
 32617                           wreg	equ	0xFE8
 32618                           indf1	equ	0xFE7
 32619                           postdec1	equ	0xFE5
 32620                           plusw1	equ	0xFE3
 32621                           fsr1h	equ	0xFE2
 32622                           fsr1l	equ	0xFE1
 32623                           indf2	equ	0xFDF
 32624                           postinc2	equ	0xFDE
 32625                           postdec2	equ	0xFDD
 32626                           plusw2	equ	0xFDB
 32627                           fsr2h	equ	0xFDA
 32628                           fsr2l	equ	0xFD9
 32629                           status	equ	0xFD8
 32630                           
 32631 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 32632 ;; Defined at:
 32633 ;;		line 18 in file "external_flash.c"
 32634 ;; Parameters:    Size  Location     Type
 32635 ;;  config          2    0[COMRAM] PTR void 
 32636 ;;		 -> NULL(0), 
 32637 ;; Auto vars:     Size  Location     Type
 32638 ;;		None
 32639 ;; Return value:  Size  Location     Type
 32640 ;;                  2    0[COMRAM] unsigned int 
 32641 ;; Registers used:
 32642 ;;		wreg, status,2
 32643 ;; Tracked objects:
 32644 ;;		On entry : 0/0
 32645 ;;		On exit  : 0/0
 32646 ;;		Unchanged: 0/0
 32647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32651 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32652 ;;Total ram usage:        2 bytes
 32653 ;; Hardware stack levels used:    1
 32654 ;; This function calls:
 32655 ;;		Nothing
 32656 ;; This function is called by:
 32657 ;;		_MSDProcessCommandMediaPresent
 32658 ;; This function uses a non-reentrant model
 32659 ;;
 32660                           
 32661                           	psect	text150
 32662  0079A8                     __ptext150:
 32663                           	opt stack 0
 32664  0079A8                     _ExternalFlash_SectorSizeRead:
 32665                           	opt stack 26
 32666                           
 32667                           ;external_flash.c: 21: return 512;
 32668                           
 32669                           ; BSR set to: 13
 32670                           ;incstack = 0
 32671  0079A8  0E02               	movlw	2
 32672  0079AA  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 32673  0079AC  0E00               	movlw	0
 32674  0079AE  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 32675  0079B0  0012               	return	
 32676  0079B2                     __end_of_ExternalFlash_SectorSizeRead:
 32677                           	opt stack 0
 32678                           tosu	equ	0xFFF
 32679                           tosh	equ	0xFFE
 32680                           tosl	equ	0xFFD
 32681                           pclath	equ	0xFFA
 32682                           tblptru	equ	0xFF8
 32683                           tblptrh	equ	0xFF7
 32684                           tblptrl	equ	0xFF6
 32685                           tablat	equ	0xFF5
 32686                           prodh	equ	0xFF4
 32687                           prodl	equ	0xFF3
 32688                           intcon	equ	0xFF2
 32689                           intcon2	equ	0xFF1
 32690                           intcon3	equ	0xFF0
 32691                           indf0	equ	0xFEF
 32692                           postinc0	equ	0xFEE
 32693                           fsr0h	equ	0xFEA
 32694                           fsr0l	equ	0xFE9
 32695                           wreg	equ	0xFE8
 32696                           indf1	equ	0xFE7
 32697                           postdec1	equ	0xFE5
 32698                           plusw1	equ	0xFE3
 32699                           fsr1h	equ	0xFE2
 32700                           fsr1l	equ	0xFE1
 32701                           indf2	equ	0xFDF
 32702                           postinc2	equ	0xFDE
 32703                           postdec2	equ	0xFDD
 32704                           plusw2	equ	0xFDB
 32705                           fsr2h	equ	0xFDA
 32706                           fsr2l	equ	0xFD9
 32707                           status	equ	0xFD8
 32708                           
 32709 ;; *************** function _ExternalFlash_CapacityRead *****************
 32710 ;; Defined at:
 32711 ;;		line 24 in file "external_flash.c"
 32712 ;; Parameters:    Size  Location     Type
 32713 ;;  config          2    0[COMRAM] PTR void 
 32714 ;;		 -> NULL(0), 
 32715 ;; Auto vars:     Size  Location     Type
 32716 ;;		None
 32717 ;; Return value:  Size  Location     Type
 32718 ;;                  4    0[COMRAM] unsigned long 
 32719 ;; Registers used:
 32720 ;;		wreg, status,2
 32721 ;; Tracked objects:
 32722 ;;		On entry : 0/0
 32723 ;;		On exit  : 0/0
 32724 ;;		Unchanged: 0/0
 32725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32729 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32730 ;;Total ram usage:        4 bytes
 32731 ;; Hardware stack levels used:    1
 32732 ;; This function calls:
 32733 ;;		Nothing
 32734 ;; This function is called by:
 32735 ;;		_MSDProcessCommandMediaPresent
 32736 ;; This function uses a non-reentrant model
 32737 ;;
 32738                           
 32739                           	psect	text151
 32740  0078FC                     __ptext151:
 32741                           	opt stack 0
 32742  0078FC                     _ExternalFlash_CapacityRead:
 32743                           	opt stack 26
 32744                           
 32745                           ;external_flash.c: 26: return ((uint32_t) 4114 - 1);
 32746                           
 32747                           ;incstack = 0
 32748  0078FC  0E11               	movlw	17
 32749  0078FE  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 32750  007900  0E10               	movlw	16
 32751  007902  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 32752  007904  0E00               	movlw	0
 32753  007906  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 32754  007908  0E00               	movlw	0
 32755  00790A  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 32756  00790C  0012               	return	
 32757  00790E                     __end_of_ExternalFlash_CapacityRead:
 32758                           	opt stack 0
 32759                           tosu	equ	0xFFF
 32760                           tosh	equ	0xFFE
 32761                           tosl	equ	0xFFD
 32762                           pclath	equ	0xFFA
 32763                           tblptru	equ	0xFF8
 32764                           tblptrh	equ	0xFF7
 32765                           tblptrl	equ	0xFF6
 32766                           tablat	equ	0xFF5
 32767                           prodh	equ	0xFF4
 32768                           prodl	equ	0xFF3
 32769                           intcon	equ	0xFF2
 32770                           intcon2	equ	0xFF1
 32771                           intcon3	equ	0xFF0
 32772                           indf0	equ	0xFEF
 32773                           postinc0	equ	0xFEE
 32774                           fsr0h	equ	0xFEA
 32775                           fsr0l	equ	0xFE9
 32776                           wreg	equ	0xFE8
 32777                           indf1	equ	0xFE7
 32778                           postdec1	equ	0xFE5
 32779                           plusw1	equ	0xFE3
 32780                           fsr1h	equ	0xFE2
 32781                           fsr1l	equ	0xFE1
 32782                           indf2	equ	0xFDF
 32783                           postinc2	equ	0xFDE
 32784                           postdec2	equ	0xFDD
 32785                           plusw2	equ	0xFDB
 32786                           fsr2h	equ	0xFDA
 32787                           fsr2l	equ	0xFD9
 32788                           status	equ	0xFD8
 32789                           
 32790 ;; *************** function _ExternalFlash_MediaInitialize *****************
 32791 ;; Defined at:
 32792 ;;		line 10 in file "external_flash.c"
 32793 ;; Parameters:    Size  Location     Type
 32794 ;;  config          2    0[COMRAM] PTR void 
 32795 ;;		 -> NULL(0), 
 32796 ;; Auto vars:     Size  Location     Type
 32797 ;;		None
 32798 ;; Return value:  Size  Location     Type
 32799 ;;                  2    0[COMRAM] PTR struct .
 32800 ;; Registers used:
 32801 ;;		wreg, status,2, status,0
 32802 ;; Tracked objects:
 32803 ;;		On entry : 0/0
 32804 ;;		On exit  : 0/0
 32805 ;;		Unchanged: 0/0
 32806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32811 ;;Total ram usage:        2 bytes
 32812 ;; Hardware stack levels used:    1
 32813 ;; This function calls:
 32814 ;;		Nothing
 32815 ;; This function is called by:
 32816 ;;		_USBMSDInit
 32817 ;;		_MSDProcessCommand
 32818 ;; This function uses a non-reentrant model
 32819 ;;
 32820                           
 32821                           	psect	text152
 32822  007720                     __ptext152:
 32823                           	opt stack 0
 32824  007720                     _ExternalFlash_MediaInitialize:
 32825                           	opt stack 26
 32826                           
 32827                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 32828                           
 32829                           ;incstack = 0
 32830  007720  0101               	movlb	1	; () banked
 32831  007722  81B1               	bsf	(_mediaInformation+1)& (0+255),0,b
 32832                           
 32833                           ; BSR set to: 1
 32834                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 32835  007724  0E02               	movlw	2
 32836  007726  0101               	movlb	1	; () banked
 32837  007728  6FB3               	movwf	(_mediaInformation+3)& (0+255),b
 32838  00772A  0E00               	movlw	0
 32839  00772C  6FB2               	movwf	(_mediaInformation+2)& (0+255),b
 32840                           
 32841                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 32842  00772E  0E00               	movlw	0
 32843  007730  0101               	movlb	1	; () banked
 32844  007732  6FB0               	movwf	_mediaInformation& (0+255),b
 32845                           
 32846                           ; BSR set to: 1
 32847                           ;external_flash.c: 15: return &mediaInformation;
 32848  007734  0EB0               	movlw	low _mediaInformation
 32849  007736  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 32850  007738  0E01               	movlw	high _mediaInformation
 32851  00773A  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 32852  00773C  0012               	return	
 32853  00773E                     __end_of_ExternalFlash_MediaInitialize:
 32854                           	opt stack 0
 32855                           tosu	equ	0xFFF
 32856                           tosh	equ	0xFFE
 32857                           tosl	equ	0xFFD
 32858                           pclath	equ	0xFFA
 32859                           tblptru	equ	0xFF8
 32860                           tblptrh	equ	0xFF7
 32861                           tblptrl	equ	0xFF6
 32862                           tablat	equ	0xFF5
 32863                           prodh	equ	0xFF4
 32864                           prodl	equ	0xFF3
 32865                           intcon	equ	0xFF2
 32866                           intcon2	equ	0xFF1
 32867                           intcon3	equ	0xFF0
 32868                           indf0	equ	0xFEF
 32869                           postinc0	equ	0xFEE
 32870                           fsr0h	equ	0xFEA
 32871                           fsr0l	equ	0xFE9
 32872                           wreg	equ	0xFE8
 32873                           indf1	equ	0xFE7
 32874                           postdec1	equ	0xFE5
 32875                           plusw1	equ	0xFE3
 32876                           fsr1h	equ	0xFE2
 32877                           fsr1l	equ	0xFE1
 32878                           indf2	equ	0xFDF
 32879                           postinc2	equ	0xFDE
 32880                           postdec2	equ	0xFDD
 32881                           plusw2	equ	0xFDB
 32882                           fsr2h	equ	0xFDA
 32883                           fsr2l	equ	0xFD9
 32884                           status	equ	0xFD8
 32885                           
 32886 ;; *************** function _ExternalFlash_MediaDetect *****************
 32887 ;; Defined at:
 32888 ;;		line 29 in file "external_flash.c"
 32889 ;; Parameters:    Size  Location     Type
 32890 ;;  config          2    0[COMRAM] PTR void 
 32891 ;;		 -> NULL(0), 
 32892 ;; Auto vars:     Size  Location     Type
 32893 ;;		None
 32894 ;; Return value:  Size  Location     Type
 32895 ;;                  1    wreg      unsigned char 
 32896 ;; Registers used:
 32897 ;;		wreg
 32898 ;; Tracked objects:
 32899 ;;		On entry : 0/0
 32900 ;;		On exit  : 0/0
 32901 ;;		Unchanged: 0/0
 32902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32907 ;;Total ram usage:        2 bytes
 32908 ;; Hardware stack levels used:    1
 32909 ;; This function calls:
 32910 ;;		Nothing
 32911 ;; This function is called by:
 32912 ;;		_USBMSDInit
 32913 ;;		_MSDProcessCommand
 32914 ;; This function uses a non-reentrant model
 32915 ;;
 32916                           
 32917                           	psect	text153
 32918  0079DA                     __ptext153:
 32919                           	opt stack 0
 32920  0079DA                     _ExternalFlash_MediaDetect:
 32921                           	opt stack 26
 32922                           
 32923                           ;external_flash.c: 31: return 1;
 32924                           
 32925                           ; BSR set to: 1
 32926                           ;incstack = 0
 32927  0079DA  0E01               	movlw	1
 32928  0079DC  0012               	return	
 32929  0079DE                     __end_of_ExternalFlash_MediaDetect:
 32930                           	opt stack 0
 32931                           tosu	equ	0xFFF
 32932                           tosh	equ	0xFFE
 32933                           tosl	equ	0xFFD
 32934                           pclath	equ	0xFFA
 32935                           tblptru	equ	0xFF8
 32936                           tblptrh	equ	0xFF7
 32937                           tblptrl	equ	0xFF6
 32938                           tablat	equ	0xFF5
 32939                           prodh	equ	0xFF4
 32940                           prodl	equ	0xFF3
 32941                           intcon	equ	0xFF2
 32942                           intcon2	equ	0xFF1
 32943                           intcon3	equ	0xFF0
 32944                           indf0	equ	0xFEF
 32945                           postinc0	equ	0xFEE
 32946                           fsr0h	equ	0xFEA
 32947                           fsr0l	equ	0xFE9
 32948                           wreg	equ	0xFE8
 32949                           indf1	equ	0xFE7
 32950                           postdec1	equ	0xFE5
 32951                           plusw1	equ	0xFE3
 32952                           fsr1h	equ	0xFE2
 32953                           fsr1l	equ	0xFE1
 32954                           indf2	equ	0xFDF
 32955                           postinc2	equ	0xFDE
 32956                           postdec2	equ	0xFDD
 32957                           plusw2	equ	0xFDB
 32958                           fsr2h	equ	0xFDA
 32959                           fsr2l	equ	0xFD9
 32960                           status	equ	0xFD8
 32961                           
 32962 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 32963 ;; Defined at:
 32964 ;;		line 107 in file "app_device_custom_hid.c"
 32965 ;; Parameters:    Size  Location     Type
 32966 ;;		None
 32967 ;; Auto vars:     Size  Location     Type
 32968 ;;  return_value    2   52[COMRAM] unsigned int 
 32969 ;;  idx             1   54[COMRAM] unsigned char 
 32970 ;; Return value:  Size  Location     Type
 32971 ;;                  1    wreg      void 
 32972 ;; Registers used:
 32973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32974 ;; Tracked objects:
 32975 ;;		On entry : 0/0
 32976 ;;		On exit  : 0/0
 32977 ;;		Unchanged: 0/0
 32978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32980 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32981 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32982 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32983 ;;Total ram usage:       11 bytes
 32984 ;; Hardware stack levels used:    1
 32985 ;; Hardware stack levels required when called:    5
 32986 ;; This function calls:
 32987 ;;		_USBTransferOnePacket
 32988 ;;		__fill_buffer_get_calibration1
 32989 ;;		__fill_buffer_get_calibration2
 32990 ;;		__fill_buffer_get_display1
 32991 ;;		__fill_buffer_get_display2
 32992 ;;		__fill_buffer_get_status
 32993 ;;		__parse_command_calibration
 32994 ;;		__parse_command_long
 32995 ;;		__parse_command_short
 32996 ;; This function is called by:
 32997 ;;		_main
 32998 ;; This function uses a non-reentrant model
 32999 ;;
 33000                           
 33001                           	psect	text154
 33002  0013AC                     __ptext154:
 33003                           	opt stack 0
 33004  0013AC                     _APP_DeviceCustomHIDTasks:
 33005                           	opt stack 25
 33006                           
 33007                           ;app_device_custom_hid.c: 109: uint8_t idx;
 33008                           ;app_device_custom_hid.c: 114: if( USBDeviceState < CONFIGURED_STATE )
 33009                           
 33010                           ;incstack = 0
 33011  0013AC  0E20               	movlw	32
 33012  0013AE  0100               	movlb	0	; () banked
 33013  0013B0  61FC               	cpfslt	_USBDeviceState& (0+255),b
 33014  0013B2  D001               	goto	l984
 33015  0013B4  0012               	return	
 33016  0013B6                     l984:
 33017                           
 33018                           ; BSR set to: 0
 33019                           ;app_device_custom_hid.c: 117: }
 33020                           ;app_device_custom_hid.c: 123: if( UCONbits.SUSPND== 1 )
 33021  0013B6  B265               	btfsc	3941,1,c	;volatile
 33022  0013B8  0012               	return	
 33023                           
 33024                           ; BSR set to: 0
 33025                           ;app_device_custom_hid.c: 126: }
 33026                           ;app_device_custom_hid.c: 129: if(((USBOutHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          OutHandle & 0x80) != 0x00)) == 0)
 33027                           
 33028                           ; BSR set to: 0
 33029                           
 33030                           ; BSR set to: 0
 33031                           ;app_device_custom_hid.c: 124: {
 33032                           ;app_device_custom_hid.c: 125: return;
 33033  0013BA  0101               	movlb	1	; () banked
 33034  0013BC  5174               	movf	_USBOutHandle& (0+255),w,b
 33035  0013BE  0101               	movlb	1	; () banked
 33036  0013C0  1175               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 33037  0013C2  B4D8               	btfsc	status,2,c
 33038  0013C4  D0C8               	goto	l14314
 33039                           
 33040                           ; BSR set to: 1
 33041  0013C6  C174  FFD9         	movff	_USBOutHandle,fsr2l
 33042  0013CA  C175  FFDA         	movff	_USBOutHandle+1,fsr2h
 33043  0013CE  0101               	movlb	1	; () banked
 33044  0013D0  BEDF               	btfsc	indf2,7,c
 33045  0013D2  0012               	return	
 33046  0013D4  D0C0               	goto	l14314
 33047  0013D6                     l14250:
 33048                           
 33049                           ;app_device_custom_hid.c: 139: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 33050  0013D6  505A               	movf	_USBInHandle,w,c
 33051  0013D8  105B               	iorwf	_USBInHandle+1,w,c
 33052  0013DA  B4D8               	btfsc	status,2,c
 33053  0013DC  D006               	goto	l14254
 33054  0013DE  C05A  FFD9         	movff	_USBInHandle,fsr2l
 33055  0013E2  C05B  FFDA         	movff	_USBInHandle+1,fsr2h
 33056  0013E6  BEDF               	btfsc	indf2,7,c
 33057  0013E8  D0D0               	goto	l14316
 33058  0013EA                     l14254:
 33059                           
 33060                           ;app_device_custom_hid.c: 140: {
 33061                           ;app_device_custom_hid.c: 142: _fill_buffer_get_status();
 33062  0013EA  ECA6  F037         	call	__fill_buffer_get_status	;wreg free
 33063                           
 33064                           ;app_device_custom_hid.c: 144: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 33065  0013EE  0E01               	movlw	1
 33066  0013F0  6E01               	movwf	USBTransferOnePacket@dir,c
 33067  0013F2  0EB4               	movlw	low _ToSendDataBuffer
 33068  0013F4  6E02               	movwf	USBTransferOnePacket@data,c
 33069  0013F6  0E02               	movlw	high _ToSendDataBuffer
 33070  0013F8  6E03               	movwf	USBTransferOnePacket@data+1,c
 33071  0013FA  0E40               	movlw	64
 33072  0013FC  6E04               	movwf	USBTransferOnePacket@len,c
 33073  0013FE  0E01               	movlw	1
 33074  001400  ECB7  F022         	call	_USBTransferOnePacket
 33075  001404  D0A3               	goto	L36
 33076  001406                     l14258:
 33077                           
 33078                           ;app_device_custom_hid.c: 150: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 33079  001406  505A               	movf	_USBInHandle,w,c
 33080  001408  105B               	iorwf	_USBInHandle+1,w,c
 33081  00140A  B4D8               	btfsc	status,2,c
 33082  00140C  D006               	goto	l14262
 33083  00140E  C05A  FFD9         	movff	_USBInHandle,fsr2l
 33084  001412  C05B  FFDA         	movff	_USBInHandle+1,fsr2h
 33085  001416  BEDF               	btfsc	indf2,7,c
 33086  001418  D0B8               	goto	l14316
 33087  00141A                     l14262:
 33088                           
 33089                           ;app_device_custom_hid.c: 151: {
 33090                           ;app_device_custom_hid.c: 153: _fill_buffer_get_display1();
 33091  00141A  ECEF  F036         	call	__fill_buffer_get_display1	;wreg free
 33092                           
 33093                           ;app_device_custom_hid.c: 155: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 33094  00141E  0E01               	movlw	1
 33095  001420  6E01               	movwf	USBTransferOnePacket@dir,c
 33096  001422  0EB4               	movlw	low _ToSendDataBuffer
 33097  001424  6E02               	movwf	USBTransferOnePacket@data,c
 33098  001426  0E02               	movlw	high _ToSendDataBuffer
 33099  001428  6E03               	movwf	USBTransferOnePacket@data+1,c
 33100  00142A  0E40               	movlw	64
 33101  00142C  6E04               	movwf	USBTransferOnePacket@len,c
 33102  00142E  0E01               	movlw	1
 33103  001430  ECB7  F022         	call	_USBTransferOnePacket
 33104  001434  D08B               	goto	L36
 33105  001436                     l14264:
 33106                           
 33107                           ;app_device_custom_hid.c: 161: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 33108  001436  505A               	movf	_USBInHandle,w,c
 33109  001438  105B               	iorwf	_USBInHandle+1,w,c
 33110  00143A  B4D8               	btfsc	status,2,c
 33111  00143C  D006               	goto	l14268
 33112  00143E  C05A  FFD9         	movff	_USBInHandle,fsr2l
 33113  001442  C05B  FFDA         	movff	_USBInHandle+1,fsr2h
 33114  001446  BEDF               	btfsc	indf2,7,c
 33115  001448  D0A0               	goto	l14316
 33116  00144A                     l14268:
 33117                           
 33118                           ;app_device_custom_hid.c: 162: {
 33119                           ;app_device_custom_hid.c: 164: _fill_buffer_get_display2();
 33120  00144A  ECC9  F036         	call	__fill_buffer_get_display2	;wreg free
 33121                           
 33122                           ;app_device_custom_hid.c: 166: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 33123  00144E  0E01               	movlw	1
 33124  001450  6E01               	movwf	USBTransferOnePacket@dir,c
 33125  001452  0EB4               	movlw	low _ToSendDataBuffer
 33126  001454  6E02               	movwf	USBTransferOnePacket@data,c
 33127  001456  0E02               	movlw	high _ToSendDataBuffer
 33128  001458  6E03               	movwf	USBTransferOnePacket@data+1,c
 33129  00145A  0E40               	movlw	64
 33130  00145C  6E04               	movwf	USBTransferOnePacket@len,c
 33131  00145E  0E01               	movlw	1
 33132  001460  ECB7  F022         	call	_USBTransferOnePacket
 33133  001464  D073               	goto	L36
 33134  001466                     l14270:
 33135                           
 33136                           ;app_device_custom_hid.c: 172: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 33137  001466  505A               	movf	_USBInHandle,w,c
 33138  001468  105B               	iorwf	_USBInHandle+1,w,c
 33139  00146A  B4D8               	btfsc	status,2,c
 33140  00146C  D006               	goto	l14274
 33141  00146E  C05A  FFD9         	movff	_USBInHandle,fsr2l
 33142  001472  C05B  FFDA         	movff	_USBInHandle+1,fsr2h
 33143  001476  BEDF               	btfsc	indf2,7,c
 33144  001478  D088               	goto	l14316
 33145  00147A                     l14274:
 33146                           
 33147                           ;app_device_custom_hid.c: 173: {
 33148                           ;app_device_custom_hid.c: 175: _fill_buffer_get_calibration1();
 33149  00147A  EC4B  F02D         	call	__fill_buffer_get_calibration1	;wreg free
 33150                           
 33151                           ;app_device_custom_hid.c: 177: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 33152  00147E  0E01               	movlw	1
 33153  001480  6E01               	movwf	USBTransferOnePacket@dir,c
 33154  001482  0EB4               	movlw	low _ToSendDataBuffer
 33155  001484  6E02               	movwf	USBTransferOnePacket@data,c
 33156  001486  0E02               	movlw	high _ToSendDataBuffer
 33157  001488  6E03               	movwf	USBTransferOnePacket@data+1,c
 33158  00148A  0E40               	movlw	64
 33159  00148C  6E04               	movwf	USBTransferOnePacket@len,c
 33160  00148E  0E01               	movlw	1
 33161  001490  ECB7  F022         	call	_USBTransferOnePacket
 33162  001494  D05B               	goto	L36
 33163  001496                     l14278:
 33164                           
 33165                           ;app_device_custom_hid.c: 183: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 33166  001496  505A               	movf	_USBInHandle,w,c
 33167  001498  105B               	iorwf	_USBInHandle+1,w,c
 33168  00149A  B4D8               	btfsc	status,2,c
 33169  00149C  D006               	goto	l14282
 33170  00149E  C05A  FFD9         	movff	_USBInHandle,fsr2l
 33171  0014A2  C05B  FFDA         	movff	_USBInHandle+1,fsr2h
 33172  0014A6  BEDF               	btfsc	indf2,7,c
 33173  0014A8  D070               	goto	l14316
 33174  0014AA                     l14282:
 33175                           
 33176                           ;app_device_custom_hid.c: 184: {
 33177                           ;app_device_custom_hid.c: 186: _fill_buffer_get_calibration2();
 33178  0014AA  EC11  F031         	call	__fill_buffer_get_calibration2	;wreg free
 33179                           
 33180                           ;app_device_custom_hid.c: 188: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 33181  0014AE  0E01               	movlw	1
 33182  0014B0  6E01               	movwf	USBTransferOnePacket@dir,c
 33183  0014B2  0EB4               	movlw	low _ToSendDataBuffer
 33184  0014B4  6E02               	movwf	USBTransferOnePacket@data,c
 33185  0014B6  0E02               	movlw	high _ToSendDataBuffer
 33186  0014B8  6E03               	movwf	USBTransferOnePacket@data+1,c
 33187  0014BA  0E40               	movlw	64
 33188  0014BC  6E04               	movwf	USBTransferOnePacket@len,c
 33189  0014BE  0E01               	movlw	1
 33190  0014C0  ECB7  F022         	call	_USBTransferOnePacket
 33191  0014C4  D043               	goto	L36
 33192  0014C6                     l14286:
 33193                           
 33194                           ;app_device_custom_hid.c: 194: LATDbits.LD2 ^= 1;
 33195  0014C6  748C               	btg	3980,2,c	;volatile
 33196                           
 33197                           ;app_device_custom_hid.c: 195: break;
 33198  0014C8  D060               	goto	l14316
 33199  0014CA                     l14288:
 33200                           
 33201                           ;app_device_custom_hid.c: 199: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 33202  0014CA  505A               	movf	_USBInHandle,w,c
 33203  0014CC  105B               	iorwf	_USBInHandle+1,w,c
 33204  0014CE  B4D8               	btfsc	status,2,c
 33205  0014D0  D006               	goto	l14292
 33206  0014D2  C05A  FFD9         	movff	_USBInHandle,fsr2l
 33207  0014D6  C05B  FFDA         	movff	_USBInHandle+1,fsr2h
 33208  0014DA  BEDF               	btfsc	indf2,7,c
 33209  0014DC  D056               	goto	l14316
 33210  0014DE                     l14292:
 33211                           
 33212                           ;app_device_custom_hid.c: 200: {
 33213                           ;app_device_custom_hid.c: 202: ToSendDataBuffer[0] = COMMAND_GET_BUTTON_STATUS;
 33214  0014DE  0E81               	movlw	129
 33215  0014E0  0102               	movlb	2	; () banked
 33216  0014E2  6FB4               	movwf	_ToSendDataBuffer& (0+255),b
 33217                           
 33218                           ; BSR set to: 2
 33219                           ;app_device_custom_hid.c: 203: if(PORTAbits.RA0)
 33220  0014E4  A080               	btfss	3968,0,c	;volatile
 33221  0014E6  D002               	goto	l14298
 33222                           
 33223                           ; BSR set to: 2
 33224                           ;app_device_custom_hid.c: 204: {
 33225                           ;app_device_custom_hid.c: 206: ToSendDataBuffer[1] = 0x01;
 33226  0014E8  0E01               	movlw	1
 33227  0014EA  D001               	goto	L35
 33228  0014EC                     l14298:
 33229                           
 33230                           ; BSR set to: 2
 33231                           ;app_device_custom_hid.c: 208: else
 33232                           ;app_device_custom_hid.c: 209: {
 33233                           ;app_device_custom_hid.c: 211: ToSendDataBuffer[1] = 0x00;
 33234  0014EC  0E00               	movlw	0
 33235  0014EE                     L35:
 33236  0014EE  0102               	movlb	2	; () banked
 33237  0014F0  6FB5               	movwf	(_ToSendDataBuffer+1)& (0+255),b
 33238                           
 33239                           ; BSR set to: 2
 33240                           ;app_device_custom_hid.c: 212: }
 33241                           ;app_device_custom_hid.c: 214: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 33242                           
 33243                           ; BSR set to: 2
 33244  0014F2  0E01               	movlw	1
 33245  0014F4  6E01               	movwf	USBTransferOnePacket@dir,c
 33246  0014F6  0EB4               	movlw	low _ToSendDataBuffer
 33247  0014F8  6E02               	movwf	USBTransferOnePacket@data,c
 33248  0014FA  0E02               	movlw	high _ToSendDataBuffer
 33249  0014FC  6E03               	movwf	USBTransferOnePacket@data+1,c
 33250  0014FE  0E40               	movlw	64
 33251  001500  6E04               	movwf	USBTransferOnePacket@len,c
 33252  001502  0E01               	movlw	1
 33253  001504  ECB7  F022         	call	_USBTransferOnePacket
 33254  001508  D021               	goto	L36
 33255  00150A                     l14302:
 33256                           
 33257                           ;app_device_custom_hid.c: 219: {
 33258                           ;app_device_custom_hid.c: 220: uint16_t return_value;
 33259                           ;app_device_custom_hid.c: 222: if(!((USBInHandle != 0x0000) && ((*(volatile uint8_t*)USB
      +                          InHandle & 0x80) != 0x00)))
 33260  00150A  505A               	movf	_USBInHandle,w,c
 33261  00150C  105B               	iorwf	_USBInHandle+1,w,c
 33262  00150E  B4D8               	btfsc	status,2,c
 33263  001510  D006               	goto	l14306
 33264  001512  C05A  FFD9         	movff	_USBInHandle,fsr2l
 33265  001516  C05B  FFDA         	movff	_USBInHandle+1,fsr2h
 33266  00151A  BEDF               	btfsc	indf2,7,c
 33267  00151C  D036               	goto	l14316
 33268  00151E                     l14306:
 33269                           
 33270                           ;app_device_custom_hid.c: 223: {
 33271                           ;app_device_custom_hid.c: 225: ToSendDataBuffer[0] = COMMAND_READ_POTENTIOMETER;
 33272  00151E  0E37               	movlw	55
 33273  001520  0102               	movlb	2	; () banked
 33274  001522  6FB4               	movwf	_ToSendDataBuffer& (0+255),b
 33275                           
 33276                           ;app_device_custom_hid.c: 227: return_value = 0x1234;
 33277  001524  0E12               	movlw	18
 33278  001526  6E36               	movwf	APP_DeviceCustomHIDTasks@return_value+1,c
 33279  001528  0E34               	movlw	52
 33280  00152A  6E35               	movwf	APP_DeviceCustomHIDTasks@return_value,c
 33281                           
 33282                           ; BSR set to: 2
 33283                           ;app_device_custom_hid.c: 228: ToSendDataBuffer[1] = (uint8_t) return_value;
 33284  00152C  C035  F2B5         	movff	APP_DeviceCustomHIDTasks@return_value,_ToSendDataBuffer+1
 33285                           
 33286                           ;app_device_custom_hid.c: 229: ToSendDataBuffer[2] = return_value >> 8;
 33287  001530  5036               	movf	APP_DeviceCustomHIDTasks@return_value+1,w,c
 33288  001532  0102               	movlb	2	; () banked
 33289  001534  6FB6               	movwf	(_ToSendDataBuffer+2)& (0+255),b
 33290                           
 33291                           ; BSR set to: 2
 33292                           ;app_device_custom_hid.c: 231: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 33293  001536  0E01               	movlw	1
 33294  001538  6E01               	movwf	USBTransferOnePacket@dir,c
 33295  00153A  0EB4               	movlw	low _ToSendDataBuffer
 33296  00153C  6E02               	movwf	USBTransferOnePacket@data,c
 33297  00153E  0E02               	movlw	high _ToSendDataBuffer
 33298  001540  6E03               	movwf	USBTransferOnePacket@data+1,c
 33299  001542  0E40               	movlw	64
 33300  001544  6E04               	movwf	USBTransferOnePacket@len,c
 33301  001546  0E01               	movlw	1
 33302  001548  ECB7  F022         	call	_USBTransferOnePacket
 33303  00154C                     L36:
 33304  00154C  C001  F05A         	movff	?_USBTransferOnePacket,_USBInHandle
 33305  001550  C002  F05B         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 33306                           
 33307                           ;app_device_custom_hid.c: 235: }
 33308                           
 33309                           ;app_device_custom_hid.c: 232: }
 33310                           ;app_device_custom_hid.c: 233: }
 33311                           ;app_device_custom_hid.c: 234: break;
 33312  001554  D01A               	goto	l14316
 33313  001556                     l14314:
 33314  001556  0103               	movlb	3	; () banked
 33315  001558  5100               	movf	_ReceivedDataBuffer& (0+255),w,b
 33316                           
 33317                           ; Switch size 1, requested type "space"
 33318                           ; Number of cases is 8, Range of values is 16 to 129
 33319                           ; switch strategies available:
 33320                           ; Name         Instructions Cycles
 33321                           ; simple_byte           25    13 (average)
 33322                           ;	Chosen strategy is simple_byte
 33323  00155A  0A10               	xorlw	16	; case 16
 33324  00155C  B4D8               	btfsc	status,2,c
 33325  00155E  D73B               	goto	l14250
 33326  001560  0A01               	xorlw	1	; case 17
 33327  001562  B4D8               	btfsc	status,2,c
 33328  001564  D750               	goto	l14258
 33329  001566  0A03               	xorlw	3	; case 18
 33330  001568  B4D8               	btfsc	status,2,c
 33331  00156A  D765               	goto	l14264
 33332  00156C  0A01               	xorlw	1	; case 19
 33333  00156E  B4D8               	btfsc	status,2,c
 33334  001570  D77A               	goto	l14270
 33335  001572  0A07               	xorlw	7	; case 20
 33336  001574  B4D8               	btfsc	status,2,c
 33337  001576  D78F               	goto	l14278
 33338  001578  0A23               	xorlw	35	; case 55
 33339  00157A  B4D8               	btfsc	status,2,c
 33340  00157C  D7C6               	goto	l14302
 33341  00157E  0AB7               	xorlw	183	; case 128
 33342  001580  B4D8               	btfsc	status,2,c
 33343  001582  D7A1               	goto	l14286
 33344  001584  0A01               	xorlw	1	; case 129
 33345  001586  B4D8               	btfsc	status,2,c
 33346  001588  D7A0               	goto	l14288
 33347  00158A                     l14316:
 33348                           
 33349                           ;app_device_custom_hid.c: 238: idx = 1;
 33350  00158A  0E01               	movlw	1
 33351  00158C  D074               	goto	L37
 33352  00158E                     l14318:
 33353                           
 33354                           ;app_device_custom_hid.c: 244: _parse_command_short(ReceivedDataBuffer[idx]);
 33355  00158E  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 33356  001590  0D01               	mullw	1
 33357  001592  0E00               	movlw	low _ReceivedDataBuffer
 33358  001594  24F3               	addwf	prodl,w,c
 33359  001596  6ED9               	movwf	fsr2l,c
 33360  001598  0E03               	movlw	high _ReceivedDataBuffer
 33361  00159A  20F4               	addwfc	prodh,w,c
 33362  00159C  6EDA               	movwf	fsr2h,c
 33363  00159E  50DF               	movf	indf2,w,c
 33364  0015A0  EC4A  F039         	call	__parse_command_short
 33365                           
 33366                           ;app_device_custom_hid.c: 245: ++idx;
 33367  0015A4  2A37               	incf	APP_DeviceCustomHIDTasks@idx,f,c
 33368                           
 33369                           ;app_device_custom_hid.c: 246: break;
 33370  0015A6  D084               	goto	l14334
 33371  0015A8                     l14322:
 33372                           
 33373                           ;app_device_custom_hid.c: 248: _parse_command_long(ReceivedDataBuffer[idx], ReceivedData
      +                          Buffer[idx+1]);
 33374  0015A8  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 33375  0015AA  6E2D               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),c
 33376  0015AC  6A2E               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),c
 33377  0015AE  0E01               	movlw	1
 33378  0015B0  262D               	addwf	??_APP_DeviceCustomHIDTasks,f,c
 33379  0015B2  0E00               	movlw	0
 33380  0015B4  222E               	addwfc	??_APP_DeviceCustomHIDTasks+1,f,c
 33381  0015B6  0E00               	movlw	low _ReceivedDataBuffer
 33382  0015B8  242D               	addwf	??_APP_DeviceCustomHIDTasks,w,c
 33383  0015BA  6ED9               	movwf	fsr2l,c
 33384  0015BC  0E03               	movlw	high _ReceivedDataBuffer
 33385  0015BE  202E               	addwfc	??_APP_DeviceCustomHIDTasks+1,w,c
 33386  0015C0  6EDA               	movwf	fsr2h,c
 33387  0015C2  50DF               	movf	indf2,w,c
 33388  0015C4  6E02               	movwf	__parse_command_long@data,c
 33389  0015C6  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 33390  0015C8  0D01               	mullw	1
 33391  0015CA  0E00               	movlw	low _ReceivedDataBuffer
 33392  0015CC  24F3               	addwf	prodl,w,c
 33393  0015CE  6ED9               	movwf	fsr2l,c
 33394  0015D0  0E03               	movlw	high _ReceivedDataBuffer
 33395  0015D2  20F4               	addwfc	prodh,w,c
 33396  0015D4  6EDA               	movwf	fsr2h,c
 33397  0015D6  50DF               	movf	indf2,w,c
 33398  0015D8  ECD3  F033         	call	__parse_command_long
 33399                           
 33400                           ;app_device_custom_hid.c: 249: idx += 2;
 33401  0015DC  0E02               	movlw	2
 33402  0015DE  D048               	goto	L38
 33403  0015E0                     l14326:
 33404                           
 33405                           ;app_device_custom_hid.c: 252: _parse_command_calibration(ReceivedDataBuffer[idx], Recei
      +                          vedDataBuffer[idx+1], ReceivedDataBuffer[idx+2], ReceivedDataBuffer[idx+3], ReceivedData
      +                          Buffer[idx+4]);
 33406  0015E0  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 33407  0015E2  6E2D               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),c
 33408  0015E4  6A2E               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),c
 33409  0015E6  0E01               	movlw	1
 33410  0015E8  262D               	addwf	??_APP_DeviceCustomHIDTasks,f,c
 33411  0015EA  0E00               	movlw	0
 33412  0015EC  222E               	addwfc	??_APP_DeviceCustomHIDTasks+1,f,c
 33413  0015EE  0E00               	movlw	low _ReceivedDataBuffer
 33414  0015F0  242D               	addwf	??_APP_DeviceCustomHIDTasks,w,c
 33415  0015F2  6ED9               	movwf	fsr2l,c
 33416  0015F4  0E03               	movlw	high _ReceivedDataBuffer
 33417  0015F6  202E               	addwfc	??_APP_DeviceCustomHIDTasks+1,w,c
 33418  0015F8  6EDA               	movwf	fsr2h,c
 33419  0015FA  50DF               	movf	indf2,w,c
 33420  0015FC  6E04               	movwf	__parse_command_calibration@item,c
 33421  0015FE  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 33422  001600  6E2F               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),c
 33423  001602  6A30               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),c
 33424  001604  0E02               	movlw	2
 33425  001606  262F               	addwf	??_APP_DeviceCustomHIDTasks+2,f,c
 33426  001608  0E00               	movlw	0
 33427  00160A  2230               	addwfc	??_APP_DeviceCustomHIDTasks+3,f,c
 33428  00160C  0E00               	movlw	low _ReceivedDataBuffer
 33429  00160E  242F               	addwf	??_APP_DeviceCustomHIDTasks+2,w,c
 33430  001610  6ED9               	movwf	fsr2l,c
 33431  001612  0E03               	movlw	high _ReceivedDataBuffer
 33432  001614  2030               	addwfc	??_APP_DeviceCustomHIDTasks+3,w,c
 33433  001616  6EDA               	movwf	fsr2h,c
 33434  001618  50DF               	movf	indf2,w,c
 33435  00161A  6E05               	movwf	__parse_command_calibration@dat1,c
 33436  00161C  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 33437  00161E  6E31               	movwf	(??_APP_DeviceCustomHIDTasks+4)& (0+255),c
 33438  001620  6A32               	clrf	(??_APP_DeviceCustomHIDTasks+5)& (0+255),c
 33439  001622  0E03               	movlw	3
 33440  001624  2631               	addwf	??_APP_DeviceCustomHIDTasks+4,f,c
 33441  001626  0E00               	movlw	0
 33442  001628  2232               	addwfc	??_APP_DeviceCustomHIDTasks+5,f,c
 33443  00162A  0E00               	movlw	low _ReceivedDataBuffer
 33444  00162C  2431               	addwf	??_APP_DeviceCustomHIDTasks+4,w,c
 33445  00162E  6ED9               	movwf	fsr2l,c
 33446  001630  0E03               	movlw	high _ReceivedDataBuffer
 33447  001632  2032               	addwfc	??_APP_DeviceCustomHIDTasks+5,w,c
 33448  001634  6EDA               	movwf	fsr2h,c
 33449  001636  50DF               	movf	indf2,w,c
 33450  001638  6E06               	movwf	__parse_command_calibration@dat2,c
 33451  00163A  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 33452  00163C  6E33               	movwf	(??_APP_DeviceCustomHIDTasks+6)& (0+255),c
 33453  00163E  6A34               	clrf	(??_APP_DeviceCustomHIDTasks+7)& (0+255),c
 33454  001640  0E04               	movlw	4
 33455  001642  2633               	addwf	??_APP_DeviceCustomHIDTasks+6,f,c
 33456  001644  0E00               	movlw	0
 33457  001646  2234               	addwfc	??_APP_DeviceCustomHIDTasks+7,f,c
 33458  001648  0E00               	movlw	low _ReceivedDataBuffer
 33459  00164A  2433               	addwf	??_APP_DeviceCustomHIDTasks+6,w,c
 33460  00164C  6ED9               	movwf	fsr2l,c
 33461  00164E  0E03               	movlw	high _ReceivedDataBuffer
 33462  001650  2034               	addwfc	??_APP_DeviceCustomHIDTasks+7,w,c
 33463  001652  6EDA               	movwf	fsr2h,c
 33464  001654  50DF               	movf	indf2,w,c
 33465  001656  6E07               	movwf	__parse_command_calibration@dat3,c
 33466  001658  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 33467  00165A  0D01               	mullw	1
 33468  00165C  0E00               	movlw	low _ReceivedDataBuffer
 33469  00165E  24F3               	addwf	prodl,w,c
 33470  001660  6ED9               	movwf	fsr2l,c
 33471  001662  0E03               	movlw	high _ReceivedDataBuffer
 33472  001664  20F4               	addwfc	prodh,w,c
 33473  001666  6EDA               	movwf	fsr2h,c
 33474  001668  50DF               	movf	indf2,w,c
 33475  00166A  EC55  F01E         	call	__parse_command_calibration
 33476                           
 33477                           ;app_device_custom_hid.c: 253: idx += 5;
 33478  00166E  0E05               	movlw	5
 33479  001670                     L38:
 33480  001670  2637               	addwf	APP_DeviceCustomHIDTasks@idx,f,c
 33481                           
 33482                           ;app_device_custom_hid.c: 254: break;
 33483  001672  D01E               	goto	l14334
 33484  001674                     l14330:
 33485                           
 33486                           ;app_device_custom_hid.c: 256: idx = 65;
 33487  001674  0E41               	movlw	65
 33488  001676                     L37:
 33489  001676  6E37               	movwf	APP_DeviceCustomHIDTasks@idx,c
 33490                           
 33491                           ;app_device_custom_hid.c: 257: }
 33492  001678  D01B               	goto	l14334
 33493  00167A                     l14332:
 33494  00167A  5037               	movf	APP_DeviceCustomHIDTasks@idx,w,c
 33495  00167C  0D01               	mullw	1
 33496  00167E  0E00               	movlw	low _ReceivedDataBuffer
 33497  001680  24F3               	addwf	prodl,w,c
 33498  001682  6ED9               	movwf	fsr2l,c
 33499  001684  0E03               	movlw	high _ReceivedDataBuffer
 33500  001686  20F4               	addwfc	prodh,w,c
 33501  001688  6EDA               	movwf	fsr2h,c
 33502  00168A  50DF               	movf	indf2,w,c
 33503  00168C  0BF0               	andlw	240
 33504  00168E  6E2D               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),c
 33505  001690  6A2E               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),c
 33506                           
 33507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 33508                           ; Switch size 1, requested type "space"
 33509                           ; Number of cases is 1, Range of values is 0 to 0
 33510                           ; switch strategies available:
 33511                           ; Name         Instructions Cycles
 33512                           ; simple_byte            4     3 (average)
 33513                           ;	Chosen strategy is simple_byte
 33514  001692  502E               	movf	??_APP_DeviceCustomHIDTasks+1,w,c
 33515  001694  0A00               	xorlw	0	; case 0
 33516  001696  A4D8               	btfss	status,2,c
 33517  001698  D7ED               	goto	l14330
 33518                           
 33519                           ; Switch size 1, requested type "space"
 33520                           ; Number of cases is 3, Range of values is 48 to 96
 33521                           ; switch strategies available:
 33522                           ; Name         Instructions Cycles
 33523                           ; simple_byte           10     6 (average)
 33524                           ;	Chosen strategy is simple_byte
 33525  00169A  502D               	movf	??_APP_DeviceCustomHIDTasks,w,c
 33526  00169C  0A30               	xorlw	48	; case 48
 33527  00169E  B4D8               	btfsc	status,2,c
 33528  0016A0  D776               	goto	l14318
 33529  0016A2  0A70               	xorlw	112	; case 64
 33530  0016A4  B4D8               	btfsc	status,2,c
 33531  0016A6  D780               	goto	l14322
 33532  0016A8  0A20               	xorlw	32	; case 96
 33533  0016AA  B4D8               	btfsc	status,2,c
 33534  0016AC  D799               	goto	l14326
 33535  0016AE  D7E2               	goto	l14330
 33536  0016B0                     l14334:
 33537  0016B0  0E3D               	movlw	61
 33538  0016B2  6437               	cpfsgt	APP_DeviceCustomHIDTasks@idx,c
 33539  0016B4  D7E2               	goto	l14332
 33540                           
 33541                           ;app_device_custom_hid.c: 258: }
 33542                           ;app_device_custom_hid.c: 262: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 33543  0016B6  0E00               	movlw	0
 33544  0016B8  6E01               	movwf	USBTransferOnePacket@dir,c
 33545  0016BA  0E00               	movlw	low _ReceivedDataBuffer
 33546  0016BC  6E02               	movwf	USBTransferOnePacket@data,c
 33547  0016BE  0E03               	movlw	high _ReceivedDataBuffer
 33548  0016C0  6E03               	movwf	USBTransferOnePacket@data+1,c
 33549  0016C2  0E40               	movlw	64
 33550  0016C4  6E04               	movwf	USBTransferOnePacket@len,c
 33551  0016C6  0E01               	movlw	1
 33552  0016C8  ECB7  F022         	call	_USBTransferOnePacket
 33553  0016CC  C001  F174         	movff	?_USBTransferOnePacket,_USBOutHandle
 33554  0016D0  C002  F175         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 33555  0016D4  0012               	return	
 33556  0016D6                     __end_of_APP_DeviceCustomHIDTasks:
 33557                           	opt stack 0
 33558                           tosu	equ	0xFFF
 33559                           tosh	equ	0xFFE
 33560                           tosl	equ	0xFFD
 33561                           pclath	equ	0xFFA
 33562                           tblptru	equ	0xFF8
 33563                           tblptrh	equ	0xFF7
 33564                           tblptrl	equ	0xFF6
 33565                           tablat	equ	0xFF5
 33566                           prodh	equ	0xFF4
 33567                           prodl	equ	0xFF3
 33568                           intcon	equ	0xFF2
 33569                           intcon2	equ	0xFF1
 33570                           intcon3	equ	0xFF0
 33571                           indf0	equ	0xFEF
 33572                           postinc0	equ	0xFEE
 33573                           fsr0h	equ	0xFEA
 33574                           fsr0l	equ	0xFE9
 33575                           wreg	equ	0xFE8
 33576                           indf1	equ	0xFE7
 33577                           postdec1	equ	0xFE5
 33578                           plusw1	equ	0xFE3
 33579                           fsr1h	equ	0xFE2
 33580                           fsr1l	equ	0xFE1
 33581                           indf2	equ	0xFDF
 33582                           postinc2	equ	0xFDE
 33583                           postdec2	equ	0xFDD
 33584                           plusw2	equ	0xFDB
 33585                           fsr2h	equ	0xFDA
 33586                           fsr2l	equ	0xFD9
 33587                           status	equ	0xFD8
 33588                           
 33589 ;; *************** function __parse_command_short *****************
 33590 ;; Defined at:
 33591 ;;		line 358 in file "app_device_custom_hid.c"
 33592 ;; Parameters:    Size  Location     Type
 33593 ;;  cmd             1    wreg     unsigned char 
 33594 ;; Auto vars:     Size  Location     Type
 33595 ;;  cmd             1   43[COMRAM] unsigned char 
 33596 ;; Return value:  Size  Location     Type
 33597 ;;                  1    wreg      void 
 33598 ;; Registers used:
 33599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33600 ;; Tracked objects:
 33601 ;;		On entry : 0/0
 33602 ;;		On exit  : 0/0
 33603 ;;		Unchanged: 0/0
 33604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33609 ;;Total ram usage:        1 bytes
 33610 ;; Hardware stack levels used:    1
 33611 ;; Hardware stack levels required when called:    4
 33612 ;; This function calls:
 33613 ;;		_rtcc_write_eeprom
 33614 ;; This function is called by:
 33615 ;;		_APP_DeviceCustomHIDTasks
 33616 ;; This function uses a non-reentrant model
 33617 ;;
 33618                           
 33619                           	psect	text155
 33620  007294                     __ptext155:
 33621                           	opt stack 0
 33622  007294                     __parse_command_short:
 33623                           	opt stack 25
 33624                           
 33625                           ;incstack = 0
 33626                           ;__parse_command_short@cmd stored from wreg
 33627  007294  6E2C               	movwf	__parse_command_short@cmd,c
 33628                           
 33629                           ;app_device_custom_hid.c: 360: switch(cmd)
 33630  007296  D00C               	goto	l13154
 33631  007298                     l13144:
 33632                           
 33633                           ;app_device_custom_hid.c: 363: --os.encoderCount;
 33634  007298  0100               	movlb	0	; () banked
 33635  00729A  07E2               	decf	_os& (0+255),f,b	;volatile
 33636                           
 33637                           ;app_device_custom_hid.c: 364: break;
 33638  00729C  0012               	return	
 33639  00729E                     l13146:
 33640                           
 33641                           ;app_device_custom_hid.c: 366: ++os.encoderCount;
 33642  00729E  0100               	movlb	0	; () banked
 33643  0072A0  2BE2               	incf	_os& (0+255),f,b	;volatile
 33644                           
 33645                           ;app_device_custom_hid.c: 367: break;
 33646  0072A2  0012               	return	
 33647  0072A4                     l13148:
 33648                           
 33649                           ;app_device_custom_hid.c: 369: ++os.buttonCount;
 33650  0072A4  0100               	movlb	0	; () banked
 33651  0072A6  2BE3               	incf	(_os+1)& (0+255),f,b	;volatile
 33652                           
 33653                           ;app_device_custom_hid.c: 370: break;
 33654  0072A8  0012               	return	
 33655  0072AA                     l13150:
 33656                           
 33657                           ;app_device_custom_hid.c: 372: rtcc_write_eeprom();
 33658  0072AA  ECF1  F038         	call	_rtcc_write_eeprom	;wreg free
 33659                           
 33660                           ;app_device_custom_hid.c: 374: }
 33661                           
 33662                           ;app_device_custom_hid.c: 373: break;
 33663  0072AE  0012               	return	
 33664  0072B0                     l13154:
 33665  0072B0  502C               	movf	__parse_command_short@cmd,w,c
 33666                           
 33667                           ; Switch size 1, requested type "space"
 33668                           ; Number of cases is 4, Range of values is 60 to 63
 33669                           ; switch strategies available:
 33670                           ; Name         Instructions Cycles
 33671                           ; simple_byte           13     7 (average)
 33672                           ;	Chosen strategy is simple_byte
 33673  0072B2  0A3C               	xorlw	60	; case 60
 33674  0072B4  B4D8               	btfsc	status,2,c
 33675  0072B6  D7F0               	goto	l13144
 33676  0072B8  0A01               	xorlw	1	; case 61
 33677  0072BA  B4D8               	btfsc	status,2,c
 33678  0072BC  D7F0               	goto	l13146
 33679  0072BE  0A03               	xorlw	3	; case 62
 33680  0072C0  B4D8               	btfsc	status,2,c
 33681  0072C2  D7F0               	goto	l13148
 33682  0072C4  0A01               	xorlw	1	; case 63
 33683  0072C6  A4D8               	btfss	status,2,c
 33684  0072C8  0012               	return	
 33685  0072CA  D7EF               	goto	l13150
 33686  0072CC                     __end_of__parse_command_short:
 33687                           	opt stack 0
 33688                           tosu	equ	0xFFF
 33689                           tosh	equ	0xFFE
 33690                           tosl	equ	0xFFD
 33691                           pclath	equ	0xFFA
 33692                           tblptru	equ	0xFF8
 33693                           tblptrh	equ	0xFF7
 33694                           tblptrl	equ	0xFF6
 33695                           tablat	equ	0xFF5
 33696                           prodh	equ	0xFF4
 33697                           prodl	equ	0xFF3
 33698                           intcon	equ	0xFF2
 33699                           intcon2	equ	0xFF1
 33700                           intcon3	equ	0xFF0
 33701                           indf0	equ	0xFEF
 33702                           postinc0	equ	0xFEE
 33703                           fsr0h	equ	0xFEA
 33704                           fsr0l	equ	0xFE9
 33705                           wreg	equ	0xFE8
 33706                           indf1	equ	0xFE7
 33707                           postdec1	equ	0xFE5
 33708                           plusw1	equ	0xFE3
 33709                           fsr1h	equ	0xFE2
 33710                           fsr1l	equ	0xFE1
 33711                           indf2	equ	0xFDF
 33712                           postinc2	equ	0xFDE
 33713                           postdec2	equ	0xFDD
 33714                           plusw2	equ	0xFDB
 33715                           fsr2h	equ	0xFDA
 33716                           fsr2l	equ	0xFD9
 33717                           status	equ	0xFD8
 33718                           
 33719 ;; *************** function _rtcc_write_eeprom *****************
 33720 ;; Defined at:
 33721 ;;		line 344 in file "rtcc.c"
 33722 ;; Parameters:    Size  Location     Type
 33723 ;;		None
 33724 ;; Auto vars:     Size  Location     Type
 33725 ;;  date            6   37[COMRAM] unsigned char [6]
 33726 ;; Return value:  Size  Location     Type
 33727 ;;                  1    wreg      void 
 33728 ;; Registers used:
 33729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33730 ;; Tracked objects:
 33731 ;;		On entry : 0/0
 33732 ;;		On exit  : 0/0
 33733 ;;		Unchanged: 0/0
 33734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33736 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33738 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33739 ;;Total ram usage:        6 bytes
 33740 ;; Hardware stack levels used:    1
 33741 ;; Hardware stack levels required when called:    3
 33742 ;; This function calls:
 33743 ;;		_i2c_eeprom_write
 33744 ;;		_rtcc_get_day
 33745 ;;		_rtcc_get_hours
 33746 ;;		_rtcc_get_minutes
 33747 ;;		_rtcc_get_month
 33748 ;;		_rtcc_get_seconds
 33749 ;;		_rtcc_get_year
 33750 ;; This function is called by:
 33751 ;;		__parse_command_short
 33752 ;; This function uses a non-reentrant model
 33753 ;;
 33754                           
 33755                           	psect	text156
 33756  0071E2                     __ptext156:
 33757                           	opt stack 0
 33758  0071E2                     _rtcc_write_eeprom:
 33759                           	opt stack 25
 33760                           
 33761                           ;rtcc.c: 346: uint8_t date[6];
 33762                           ;rtcc.c: 347: date[0] = rtcc_get_year();
 33763                           
 33764                           ;incstack = 0
 33765  0071E2  EC39  F03C         	call	_rtcc_get_year	;wreg free
 33766  0071E6  6E26               	movwf	rtcc_write_eeprom@date,c
 33767                           
 33768                           ;rtcc.c: 348: date[1] = rtcc_get_month();
 33769  0071E8  EC4D  F03C         	call	_rtcc_get_month	;wreg free
 33770  0071EC  6E27               	movwf	rtcc_write_eeprom@date+1,c
 33771                           
 33772                           ;rtcc.c: 349: date[2] = rtcc_get_day();
 33773  0071EE  EC6B  F03C         	call	_rtcc_get_day	;wreg free
 33774  0071F2  6E28               	movwf	rtcc_write_eeprom@date+2,c
 33775                           
 33776                           ;rtcc.c: 350: date[3] = rtcc_get_hours();
 33777  0071F4  EC61  F03C         	call	_rtcc_get_hours	;wreg free
 33778  0071F8  6E29               	movwf	rtcc_write_eeprom@date+3,c
 33779                           
 33780                           ;rtcc.c: 351: date[4] = rtcc_get_minutes();
 33781  0071FA  EC57  F03C         	call	_rtcc_get_minutes	;wreg free
 33782  0071FE  6E2A               	movwf	rtcc_write_eeprom@date+4,c
 33783                           
 33784                           ;rtcc.c: 352: date[5] = rtcc_get_seconds();
 33785  007200  EC43  F03C         	call	_rtcc_get_seconds	;wreg free
 33786  007204  6E2B               	movwf	rtcc_write_eeprom@date+5,c
 33787                           
 33788                           ;rtcc.c: 354: i2c_eeprom_write(0x0040, &date[0], 6);
 33789  007206  0E00               	movlw	0
 33790  007208  6E0C               	movwf	i2c_eeprom_write@address+1,c
 33791  00720A  0E40               	movlw	64
 33792  00720C  6E0B               	movwf	i2c_eeprom_write@address,c
 33793  00720E  0E26               	movlw	low rtcc_write_eeprom@date
 33794  007210  6E0D               	movwf	i2c_eeprom_write@data,c
 33795  007212  0E00               	movlw	high rtcc_write_eeprom@date
 33796  007214  6E0E               	movwf	i2c_eeprom_write@data+1,c
 33797  007216  0E06               	movlw	6
 33798  007218  6E0F               	movwf	i2c_eeprom_write@length,c
 33799  00721A  EC95  F030         	call	_i2c_eeprom_write	;wreg free
 33800  00721E  0012               	return		;funcret
 33801  007220                     __end_of_rtcc_write_eeprom:
 33802                           	opt stack 0
 33803                           tosu	equ	0xFFF
 33804                           tosh	equ	0xFFE
 33805                           tosl	equ	0xFFD
 33806                           pclath	equ	0xFFA
 33807                           tblptru	equ	0xFF8
 33808                           tblptrh	equ	0xFF7
 33809                           tblptrl	equ	0xFF6
 33810                           tablat	equ	0xFF5
 33811                           prodh	equ	0xFF4
 33812                           prodl	equ	0xFF3
 33813                           intcon	equ	0xFF2
 33814                           intcon2	equ	0xFF1
 33815                           intcon3	equ	0xFF0
 33816                           indf0	equ	0xFEF
 33817                           postinc0	equ	0xFEE
 33818                           fsr0h	equ	0xFEA
 33819                           fsr0l	equ	0xFE9
 33820                           wreg	equ	0xFE8
 33821                           indf1	equ	0xFE7
 33822                           postdec1	equ	0xFE5
 33823                           plusw1	equ	0xFE3
 33824                           fsr1h	equ	0xFE2
 33825                           fsr1l	equ	0xFE1
 33826                           indf2	equ	0xFDF
 33827                           postinc2	equ	0xFDE
 33828                           postdec2	equ	0xFDD
 33829                           plusw2	equ	0xFDB
 33830                           fsr2h	equ	0xFDA
 33831                           fsr2l	equ	0xFD9
 33832                           status	equ	0xFD8
 33833                           
 33834 ;; *************** function _i2c_eeprom_write *****************
 33835 ;; Defined at:
 33836 ;;		line 519 in file "i2c.c"
 33837 ;; Parameters:    Size  Location     Type
 33838 ;;  address         2   10[COMRAM] unsigned int 
 33839 ;;  data            2   12[COMRAM] PTR unsigned char 
 33840 ;;		 -> rtcc_write_eeprom@date(6), _write_calibration@buffer(16), 
 33841 ;;  length          1   14[COMRAM] unsigned char 
 33842 ;; Auto vars:     Size  Location     Type
 33843 ;;  dat            17   18[COMRAM] unsigned char [17]
 33844 ;;  cntr            1   36[COMRAM] unsigned char 
 33845 ;;  slave_addres    1   35[COMRAM] unsigned char 
 33846 ;; Return value:  Size  Location     Type
 33847 ;;                  1    wreg      void 
 33848 ;; Registers used:
 33849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33850 ;; Tracked objects:
 33851 ;;		On entry : 0/0
 33852 ;;		On exit  : 0/0
 33853 ;;		Unchanged: 0/0
 33854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33855 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33856 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33857 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33858 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33859 ;;Total ram usage:       27 bytes
 33860 ;; Hardware stack levels used:    1
 33861 ;; Hardware stack levels required when called:    2
 33862 ;; This function calls:
 33863 ;;		__i2c_write
 33864 ;;		_i2c_set_frequency
 33865 ;; This function is called by:
 33866 ;;		__write_calibration
 33867 ;;		_rtcc_write_eeprom
 33868 ;; This function uses a non-reentrant model
 33869 ;;
 33870                           
 33871                           	psect	text157
 33872  00612A                     __ptext157:
 33873                           	opt stack 0
 33874  00612A                     _i2c_eeprom_write:
 33875                           	opt stack 26
 33876                           
 33877                           ;i2c.c: 521: uint8_t cntr;
 33878                           ;i2c.c: 522: uint8_t slave_address;
 33879                           ;i2c.c: 523: uint8_t dat[17];
 33880                           ;i2c.c: 525: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 33881                           
 33882                           ;incstack = 0
 33883  00612A  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 33884  00612E  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 33885  006132  0E07               	movlw	7
 33886  006134  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 33887  006136                     u8465:
 33888  006136  90D8               	bcf	status,0,c
 33889  006138  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 33890  00613A  3210               	rrcf	??_i2c_eeprom_write,f,c
 33891  00613C  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 33892  00613E  D7FB               	goto	u8465
 33893  006140  5010               	movf	??_i2c_eeprom_write,w,c
 33894  006142  0B0E               	andlw	14
 33895  006144  09A0               	iorlw	160
 33896  006146  6E24               	movwf	i2c_eeprom_write@slave_address,c
 33897                           
 33898                           ;i2c.c: 526: dat[0] = address & 0xFF;
 33899  006148  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 33900                           
 33901                           ;i2c.c: 528: length &= 0b00001111;
 33902  00614C  0E0F               	movlw	15
 33903  00614E  160F               	andwf	i2c_eeprom_write@length,f,c
 33904                           
 33905                           ;i2c.c: 529: for(cntr=0; cntr<length; ++cntr)
 33906  006150  0E00               	movlw	0
 33907  006152  6E25               	movwf	i2c_eeprom_write@cntr,c
 33908  006154  D018               	goto	l11274
 33909  006156                     l11270:
 33910                           
 33911                           ;i2c.c: 530: {
 33912                           ;i2c.c: 531: dat[cntr+1] = data[cntr];
 33913  006156  5025               	movf	i2c_eeprom_write@cntr,w,c
 33914  006158  0D01               	mullw	1
 33915  00615A  50F3               	movf	prodl,w,c
 33916  00615C  240D               	addwf	i2c_eeprom_write@data,w,c
 33917  00615E  6ED9               	movwf	fsr2l,c
 33918  006160  50F4               	movf	prodh,w,c
 33919  006162  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 33920  006164  6EDA               	movwf	fsr2h,c
 33921  006166  5025               	movf	i2c_eeprom_write@cntr,w,c
 33922  006168  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 33923  00616A  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 33924  00616C  0E01               	movlw	1
 33925  00616E  2610               	addwf	??_i2c_eeprom_write,f,c
 33926  006170  0E00               	movlw	0
 33927  006172  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 33928  006174  0E13               	movlw	low i2c_eeprom_write@dat
 33929  006176  2410               	addwf	??_i2c_eeprom_write,w,c
 33930  006178  6EE1               	movwf	fsr1l,c
 33931  00617A  0E00               	movlw	high i2c_eeprom_write@dat
 33932  00617C  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 33933  00617E  6EE2               	movwf	fsr1h,c
 33934  006180  CFDF FFE7          	movff	indf2,indf1
 33935  006184  2A25               	incf	i2c_eeprom_write@cntr,f,c
 33936  006186                     l11274:
 33937  006186  500F               	movf	i2c_eeprom_write@length,w,c
 33938  006188  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 33939  00618A  A0D8               	btfss	status,0,c
 33940  00618C  D7E4               	goto	l11270
 33941                           
 33942                           ;i2c.c: 532: }
 33943                           ;i2c.c: 535: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 33944  00618E  0E02               	movlw	2
 33945  006190  EC8B  F03A         	call	_i2c_set_frequency
 33946                           
 33947                           ;i2c.c: 537: _i2c_write(slave_address, &dat[0], length+1);
 33948  006194  0E13               	movlw	low i2c_eeprom_write@dat
 33949  006196  6E06               	movwf	__i2c_write@data,c
 33950  006198  0E00               	movlw	high i2c_eeprom_write@dat
 33951  00619A  6E07               	movwf	__i2c_write@data+1,c
 33952  00619C  280F               	incf	i2c_eeprom_write@length,w,c
 33953  00619E  6E08               	movwf	__i2c_write@length,c
 33954  0061A0  5024               	movf	i2c_eeprom_write@slave_address,w,c
 33955  0061A2  EC82  F037         	call	__i2c_write
 33956  0061A6  0012               	return		;funcret
 33957  0061A8                     __end_of_i2c_eeprom_write:
 33958                           	opt stack 0
 33959                           tosu	equ	0xFFF
 33960                           tosh	equ	0xFFE
 33961                           tosl	equ	0xFFD
 33962                           pclath	equ	0xFFA
 33963                           tblptru	equ	0xFF8
 33964                           tblptrh	equ	0xFF7
 33965                           tblptrl	equ	0xFF6
 33966                           tablat	equ	0xFF5
 33967                           prodh	equ	0xFF4
 33968                           prodl	equ	0xFF3
 33969                           intcon	equ	0xFF2
 33970                           intcon2	equ	0xFF1
 33971                           intcon3	equ	0xFF0
 33972                           indf0	equ	0xFEF
 33973                           postinc0	equ	0xFEE
 33974                           fsr0h	equ	0xFEA
 33975                           fsr0l	equ	0xFE9
 33976                           wreg	equ	0xFE8
 33977                           indf1	equ	0xFE7
 33978                           postdec1	equ	0xFE5
 33979                           plusw1	equ	0xFE3
 33980                           fsr1h	equ	0xFE2
 33981                           fsr1l	equ	0xFE1
 33982                           indf2	equ	0xFDF
 33983                           postinc2	equ	0xFDE
 33984                           postdec2	equ	0xFDD
 33985                           plusw2	equ	0xFDB
 33986                           fsr2h	equ	0xFDA
 33987                           fsr2l	equ	0xFD9
 33988                           status	equ	0xFD8
 33989                           
 33990 ;; *************** function _i2c_set_frequency *****************
 33991 ;; Defined at:
 33992 ;;		line 106 in file "i2c.c"
 33993 ;; Parameters:    Size  Location     Type
 33994 ;;  frequency       1    wreg     enum E8179
 33995 ;; Auto vars:     Size  Location     Type
 33996 ;;  frequency       1    0[COMRAM] enum E8179
 33997 ;; Return value:  Size  Location     Type
 33998 ;;                  1    wreg      void 
 33999 ;; Registers used:
 34000 ;;		wreg, status,2, status,0
 34001 ;; Tracked objects:
 34002 ;;		On entry : 0/0
 34003 ;;		On exit  : 0/0
 34004 ;;		Unchanged: 0/0
 34005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34010 ;;Total ram usage:        1 bytes
 34011 ;; Hardware stack levels used:    1
 34012 ;; This function calls:
 34013 ;;		Nothing
 34014 ;; This function is called by:
 34015 ;;		_i2c_init
 34016 ;;		_i2c_display_send_init_sequence
 34017 ;;		__ic2_display_set_address
 34018 ;;		_i2c_display_cursor
 34019 ;;		_i2c_display_write_fixed
 34020 ;;		_i2c_digipot_reset_on
 34021 ;;		_i2c_digipot_reset_off
 34022 ;;		_i2c_digipot_backlight
 34023 ;;		_i2c_eeprom_writeByte
 34024 ;;		_i2c_eeprom_readByte
 34025 ;;		_i2c_eeprom_write
 34026 ;;		_i2c_eeprom_read
 34027 ;;		_i2c_display_init
 34028 ;;		_i2c_display_write
 34029 ;;		_i2c_digipot_set_defaults
 34030 ;;		_i2c_adc_start
 34031 ;;		_i2c_adc_read
 34032 ;; This function uses a non-reentrant model
 34033 ;;
 34034                           
 34035                           	psect	text158
 34036  007516                     __ptext158:
 34037                           	opt stack 0
 34038  007516                     _i2c_set_frequency:
 34039                           	opt stack 28
 34040                           
 34041                           ;incstack = 0
 34042                           ;i2c_set_frequency@frequency stored from wreg
 34043  007516  6E01               	movwf	i2c_set_frequency@frequency,c
 34044                           
 34045                           ;i2c.c: 108: switch(frequency)
 34046  007518  D007               	goto	l10920
 34047  00751A                     l10912:
 34048                           
 34049                           ;i2c.c: 111: SSP1ADD = 119;
 34050  00751A  0E77               	movlw	119
 34051  00751C  D003               	goto	L40
 34052  00751E                     l10914:
 34053                           
 34054                           ;i2c.c: 114: SSP1ADD = 59;
 34055  00751E  0E3B               	movlw	59
 34056  007520  D001               	goto	L40
 34057  007522                     l10916:
 34058                           
 34059                           ;i2c.c: 117: SSP1ADD = 29;
 34060  007522  0E1D               	movlw	29
 34061  007524                     L40:
 34062  007524  6EC8               	movwf	4040,c	;volatile
 34063                           
 34064                           ;i2c.c: 119: }
 34065                           
 34066                           ;i2c.c: 118: break;
 34067  007526  D00A               	goto	l10922
 34068  007528                     l10920:
 34069  007528  5001               	movf	i2c_set_frequency@frequency,w,c
 34070                           
 34071                           ; Switch size 1, requested type "space"
 34072                           ; Number of cases is 3, Range of values is 0 to 2
 34073                           ; switch strategies available:
 34074                           ; Name         Instructions Cycles
 34075                           ; simple_byte           10     6 (average)
 34076                           ;	Chosen strategy is simple_byte
 34077  00752A  0A00               	xorlw	0	; case 0
 34078  00752C  B4D8               	btfsc	status,2,c
 34079  00752E  D7F5               	goto	l10912
 34080  007530  0A01               	xorlw	1	; case 1
 34081  007532  B4D8               	btfsc	status,2,c
 34082  007534  D7F4               	goto	l10914
 34083  007536  0A03               	xorlw	3	; case 2
 34084  007538  B4D8               	btfsc	status,2,c
 34085  00753A  D7F3               	goto	l10916
 34086  00753C                     l10922:
 34087                           
 34088                           ;i2c.c: 121: i2c_frequency = frequency;
 34089  00753C  C001  F186         	movff	i2c_set_frequency@frequency,_i2c_frequency
 34090  007540  0012               	return		;funcret
 34091  007542                     __end_of_i2c_set_frequency:
 34092                           	opt stack 0
 34093                           tosu	equ	0xFFF
 34094                           tosh	equ	0xFFE
 34095                           tosl	equ	0xFFD
 34096                           pclath	equ	0xFFA
 34097                           tblptru	equ	0xFF8
 34098                           tblptrh	equ	0xFF7
 34099                           tblptrl	equ	0xFF6
 34100                           tablat	equ	0xFF5
 34101                           prodh	equ	0xFF4
 34102                           prodl	equ	0xFF3
 34103                           intcon	equ	0xFF2
 34104                           intcon2	equ	0xFF1
 34105                           intcon3	equ	0xFF0
 34106                           indf0	equ	0xFEF
 34107                           postinc0	equ	0xFEE
 34108                           fsr0h	equ	0xFEA
 34109                           fsr0l	equ	0xFE9
 34110                           wreg	equ	0xFE8
 34111                           indf1	equ	0xFE7
 34112                           postdec1	equ	0xFE5
 34113                           plusw1	equ	0xFE3
 34114                           fsr1h	equ	0xFE2
 34115                           fsr1l	equ	0xFE1
 34116                           indf2	equ	0xFDF
 34117                           postinc2	equ	0xFDE
 34118                           postdec2	equ	0xFDD
 34119                           plusw2	equ	0xFDB
 34120                           fsr2h	equ	0xFDA
 34121                           fsr2l	equ	0xFD9
 34122                           status	equ	0xFD8
 34123                           
 34124 ;; *************** function __i2c_write *****************
 34125 ;; Defined at:
 34126 ;;		line 125 in file "i2c.c"
 34127 ;; Parameters:    Size  Location     Type
 34128 ;;  slave_addres    1    wreg     unsigned char 
 34129 ;;  data            2    5[COMRAM] PTR unsigned char 
 34130 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 34131 ;;		 -> i2c_adc_start@configuration_byte(1), i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i
      +2c_digipot_reset_on@data_array(2), 
 34132 ;;		 -> i2c_digipot_set_defaults@data_array(2), _ic2_display_set_address@data_array(2), i2c_display_init@init_sequence(9
      +), i2c_display_send_init_sequence@init_sequence(9), 
 34133 ;;  length          1    7[COMRAM] unsigned char 
 34134 ;; Auto vars:     Size  Location     Type
 34135 ;;  slave_addres    1    8[COMRAM] unsigned char 
 34136 ;;  cntr            1    9[COMRAM] unsigned char 
 34137 ;; Return value:  Size  Location     Type
 34138 ;;                  1    wreg      void 
 34139 ;; Registers used:
 34140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34141 ;; Tracked objects:
 34142 ;;		On entry : 0/0
 34143 ;;		On exit  : 0/0
 34144 ;;		Unchanged: 0/0
 34145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34146 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34149 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34150 ;;Total ram usage:        5 bytes
 34151 ;; Hardware stack levels used:    1
 34152 ;; Hardware stack levels required when called:    1
 34153 ;; This function calls:
 34154 ;;		__i2c_send
 34155 ;;		__i2c_start
 34156 ;;		__i2c_stop
 34157 ;;		__i2c_wait_idle
 34158 ;; This function is called by:
 34159 ;;		_i2c_display_send_init_sequence
 34160 ;;		__ic2_display_set_address
 34161 ;;		_i2c_digipot_reset_on
 34162 ;;		_i2c_digipot_reset_off
 34163 ;;		_i2c_digipot_backlight
 34164 ;;		_i2c_eeprom_writeByte
 34165 ;;		_i2c_eeprom_readByte
 34166 ;;		_i2c_eeprom_write
 34167 ;;		_i2c_eeprom_read
 34168 ;;		_i2c_display_init
 34169 ;;		_i2c_digipot_set_defaults
 34170 ;;		_i2c_adc_start
 34171 ;; This function uses a non-reentrant model
 34172 ;;
 34173                           
 34174                           	psect	text159
 34175  006F04                     __ptext159:
 34176                           	opt stack 0
 34177  006F04                     __i2c_write:
 34178                           	opt stack 27
 34179                           
 34180                           ;incstack = 0
 34181                           ;__i2c_write@slave_address stored from wreg
 34182  006F04  6E09               	movwf	__i2c_write@slave_address,c
 34183                           
 34184                           ;i2c.c: 127: uint8_t cntr;
 34185                           ;i2c.c: 129: _i2c_wait_idle();
 34186  006F06  ECB1  F034         	call	__i2c_wait_idle	;wreg free
 34187                           
 34188                           ;i2c.c: 130: _i2c_start();
 34189  006F0A  ECDD  F03C         	call	__i2c_start	;wreg free
 34190                           
 34191                           ;i2c.c: 131: _i2c_wait_idle();
 34192  006F0E  ECB1  F034         	call	__i2c_wait_idle	;wreg free
 34193                           
 34194                           ;i2c.c: 132: _i2c_send(slave_address);
 34195  006F12  5009               	movf	__i2c_write@slave_address,w,c
 34196  006F14  ECE1  F03C         	call	__i2c_send
 34197                           
 34198                           ;i2c.c: 133: _i2c_wait_idle();
 34199  006F18  ECB1  F034         	call	__i2c_wait_idle	;wreg free
 34200                           
 34201                           ;i2c.c: 135: for(cntr=0; cntr<length; ++cntr)
 34202  006F1C  0E00               	movlw	0
 34203  006F1E  6E0A               	movwf	__i2c_write@cntr,c
 34204  006F20  D00E               	goto	l10942
 34205  006F22                     l10936:
 34206                           
 34207                           ;i2c.c: 136: {
 34208                           ;i2c.c: 137: _i2c_send(data[cntr]);
 34209  006F22  500A               	movf	__i2c_write@cntr,w,c
 34210  006F24  0D01               	mullw	1
 34211  006F26  50F3               	movf	prodl,w,c
 34212  006F28  2406               	addwf	__i2c_write@data,w,c
 34213  006F2A  6ED9               	movwf	fsr2l,c
 34214  006F2C  50F4               	movf	prodh,w,c
 34215  006F2E  2007               	addwfc	__i2c_write@data+1,w,c
 34216  006F30  6EDA               	movwf	fsr2h,c
 34217  006F32  50DF               	movf	indf2,w,c
 34218  006F34  ECE1  F03C         	call	__i2c_send
 34219                           
 34220                           ;i2c.c: 138: _i2c_wait_idle();
 34221  006F38  ECB1  F034         	call	__i2c_wait_idle	;wreg free
 34222  006F3C  2A0A               	incf	__i2c_write@cntr,f,c
 34223  006F3E                     l10942:
 34224  006F3E  5008               	movf	__i2c_write@length,w,c
 34225  006F40  5C0A               	subwf	__i2c_write@cntr,w,c
 34226  006F42  A0D8               	btfss	status,0,c
 34227  006F44  D7EE               	goto	l10936
 34228                           
 34229                           ;i2c.c: 139: }
 34230                           ;i2c.c: 141: _i2c_stop();
 34231  006F46  ECD9  F03C         	call	__i2c_stop	;wreg free
 34232  006F4A  0012               	return		;funcret
 34233  006F4C                     __end_of__i2c_write:
 34234                           	opt stack 0
 34235                           tosu	equ	0xFFF
 34236                           tosh	equ	0xFFE
 34237                           tosl	equ	0xFFD
 34238                           pclath	equ	0xFFA
 34239                           tblptru	equ	0xFF8
 34240                           tblptrh	equ	0xFF7
 34241                           tblptrl	equ	0xFF6
 34242                           tablat	equ	0xFF5
 34243                           prodh	equ	0xFF4
 34244                           prodl	equ	0xFF3
 34245                           intcon	equ	0xFF2
 34246                           intcon2	equ	0xFF1
 34247                           intcon3	equ	0xFF0
 34248                           indf0	equ	0xFEF
 34249                           postinc0	equ	0xFEE
 34250                           fsr0h	equ	0xFEA
 34251                           fsr0l	equ	0xFE9
 34252                           wreg	equ	0xFE8
 34253                           indf1	equ	0xFE7
 34254                           postdec1	equ	0xFE5
 34255                           plusw1	equ	0xFE3
 34256                           fsr1h	equ	0xFE2
 34257                           fsr1l	equ	0xFE1
 34258                           indf2	equ	0xFDF
 34259                           postinc2	equ	0xFDE
 34260                           postdec2	equ	0xFDD
 34261                           plusw2	equ	0xFDB
 34262                           fsr2h	equ	0xFDA
 34263                           fsr2l	equ	0xFD9
 34264                           status	equ	0xFD8
 34265                           
 34266 ;; *************** function __i2c_wait_idle *****************
 34267 ;; Defined at:
 34268 ;;		line 44 in file "i2c.c"
 34269 ;; Parameters:    Size  Location     Type
 34270 ;;		None
 34271 ;; Auto vars:     Size  Location     Type
 34272 ;;		None
 34273 ;; Return value:  Size  Location     Type
 34274 ;;                  1    wreg      void 
 34275 ;; Registers used:
 34276 ;;		wreg, status,2, status,0
 34277 ;; Tracked objects:
 34278 ;;		On entry : 0/0
 34279 ;;		On exit  : 0/0
 34280 ;;		Unchanged: 0/0
 34281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34284 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34285 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34286 ;;Total ram usage:        5 bytes
 34287 ;; Hardware stack levels used:    1
 34288 ;; This function calls:
 34289 ;;		Nothing
 34290 ;; This function is called by:
 34291 ;;		__i2c_write
 34292 ;;		__i2c_read
 34293 ;;		_i2c_display_write_fixed
 34294 ;;		_i2c_display_write
 34295 ;;		_i2c_adc_read
 34296 ;; This function uses a non-reentrant model
 34297 ;;
 34298                           
 34299                           	psect	text160
 34300  006962                     __ptext160:
 34301                           	opt stack 0
 34302  006962                     __i2c_wait_idle:
 34303                           	opt stack 27
 34304  006962                     l10466:
 34305  006962  A4C7               	btfss	4039,2,c	;volatile
 34306  006964  D003               	goto	u7450
 34307  006966  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 34308  006968  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 34309  00696A  D001               	goto	u7458
 34310  00696C                     u7450:
 34311  00696C  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 34312  00696E                     u7458:
 34313  00696E  A0C5               	btfss	4037,0,c	;volatile
 34314  006970  D003               	goto	u7460
 34315  006972  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 34316  006974  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 34317  006976  D001               	goto	u7468
 34318  006978                     u7460:
 34319  006978  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 34320  00697A                     u7468:
 34321  00697A  A2C5               	btfss	4037,1,c	;volatile
 34322  00697C  D003               	goto	u7470
 34323  00697E  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 34324  006980  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 34325  006982  D001               	goto	u7478
 34326  006984                     u7470:
 34327  006984  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 34328  006986                     u7478:
 34329  006986  A4C5               	btfss	4037,2,c	;volatile
 34330  006988  D003               	goto	u7480
 34331  00698A  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 34332  00698C  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 34333  00698E  D001               	goto	u7488
 34334  006990                     u7480:
 34335  006990  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 34336  006992                     u7488:
 34337  006992  A6C5               	btfss	4037,3,c	;volatile
 34338  006994  D003               	goto	u7490
 34339  006996  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 34340  006998  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 34341  00699A  D001               	goto	u7498
 34342  00699C                     u7490:
 34343  00699C  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 34344  00699E                     u7498:
 34345  00699E  A8C5               	btfss	4037,4,c	;volatile
 34346  0069A0  D002               	goto	u7500
 34347  0069A2  0E01               	movlw	1
 34348  0069A4  D001               	goto	u7506
 34349  0069A6                     u7500:
 34350  0069A6  0E00               	movlw	0
 34351  0069A8                     u7506:
 34352  0069A8  1005               	iorwf	??__i2c_wait_idle+4,w,c
 34353  0069AA  1004               	iorwf	??__i2c_wait_idle+3,w,c
 34354  0069AC  1003               	iorwf	??__i2c_wait_idle+2,w,c
 34355  0069AE  1002               	iorwf	??__i2c_wait_idle+1,w,c
 34356  0069B0  1001               	iorwf	??__i2c_wait_idle,w,c
 34357  0069B2  0900               	iorlw	0
 34358  0069B4  B4D8               	btfsc	status,2,c
 34359  0069B6  0012               	return	
 34360  0069B8  D7D4               	goto	l10466
 34361  0069BA                     __end_of__i2c_wait_idle:
 34362                           	opt stack 0
 34363                           tosu	equ	0xFFF
 34364                           tosh	equ	0xFFE
 34365                           tosl	equ	0xFFD
 34366                           pclath	equ	0xFFA
 34367                           tblptru	equ	0xFF8
 34368                           tblptrh	equ	0xFF7
 34369                           tblptrl	equ	0xFF6
 34370                           tablat	equ	0xFF5
 34371                           prodh	equ	0xFF4
 34372                           prodl	equ	0xFF3
 34373                           intcon	equ	0xFF2
 34374                           intcon2	equ	0xFF1
 34375                           intcon3	equ	0xFF0
 34376                           indf0	equ	0xFEF
 34377                           postinc0	equ	0xFEE
 34378                           fsr0h	equ	0xFEA
 34379                           fsr0l	equ	0xFE9
 34380                           wreg	equ	0xFE8
 34381                           indf1	equ	0xFE7
 34382                           postdec1	equ	0xFE5
 34383                           plusw1	equ	0xFE3
 34384                           fsr1h	equ	0xFE2
 34385                           fsr1l	equ	0xFE1
 34386                           indf2	equ	0xFDF
 34387                           postinc2	equ	0xFDE
 34388                           postdec2	equ	0xFDD
 34389                           plusw2	equ	0xFDB
 34390                           fsr2h	equ	0xFDA
 34391                           fsr2l	equ	0xFD9
 34392                           status	equ	0xFD8
 34393                           
 34394 ;; *************** function __i2c_stop *****************
 34395 ;; Defined at:
 34396 ;;		line 71 in file "i2c.c"
 34397 ;; Parameters:    Size  Location     Type
 34398 ;;		None
 34399 ;; Auto vars:     Size  Location     Type
 34400 ;;		None
 34401 ;; Return value:  Size  Location     Type
 34402 ;;                  1    wreg      void 
 34403 ;; Registers used:
 34404 ;;		None
 34405 ;; Tracked objects:
 34406 ;;		On entry : 0/0
 34407 ;;		On exit  : 0/0
 34408 ;;		Unchanged: 0/0
 34409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34414 ;;Total ram usage:        0 bytes
 34415 ;; Hardware stack levels used:    1
 34416 ;; This function calls:
 34417 ;;		Nothing
 34418 ;; This function is called by:
 34419 ;;		__i2c_write
 34420 ;;		__i2c_read
 34421 ;;		_i2c_display_write_fixed
 34422 ;;		_i2c_display_write
 34423 ;;		_i2c_adc_read
 34424 ;; This function uses a non-reentrant model
 34425 ;;
 34426                           
 34427                           	psect	text161
 34428  0079B2                     __ptext161:
 34429                           	opt stack 0
 34430  0079B2                     __i2c_stop:
 34431                           	opt stack 27
 34432                           
 34433                           ;i2c.c: 73: SSP1CON2bits.PEN = 1;
 34434                           
 34435                           ;incstack = 0
 34436  0079B2  84C5               	bsf	4037,2,c	;volatile
 34437  0079B4                     l1308:
 34438  0079B4  A4C5               	btfss	4037,2,c	;volatile
 34439  0079B6  0012               	return	
 34440  0079B8  D7FD               	goto	l1308
 34441  0079BA                     __end_of__i2c_stop:
 34442                           	opt stack 0
 34443                           tosu	equ	0xFFF
 34444                           tosh	equ	0xFFE
 34445                           tosl	equ	0xFFD
 34446                           pclath	equ	0xFFA
 34447                           tblptru	equ	0xFF8
 34448                           tblptrh	equ	0xFF7
 34449                           tblptrl	equ	0xFF6
 34450                           tablat	equ	0xFF5
 34451                           prodh	equ	0xFF4
 34452                           prodl	equ	0xFF3
 34453                           intcon	equ	0xFF2
 34454                           intcon2	equ	0xFF1
 34455                           intcon3	equ	0xFF0
 34456                           indf0	equ	0xFEF
 34457                           postinc0	equ	0xFEE
 34458                           fsr0h	equ	0xFEA
 34459                           fsr0l	equ	0xFE9
 34460                           wreg	equ	0xFE8
 34461                           indf1	equ	0xFE7
 34462                           postdec1	equ	0xFE5
 34463                           plusw1	equ	0xFE3
 34464                           fsr1h	equ	0xFE2
 34465                           fsr1l	equ	0xFE1
 34466                           indf2	equ	0xFDF
 34467                           postinc2	equ	0xFDE
 34468                           postdec2	equ	0xFDD
 34469                           plusw2	equ	0xFDB
 34470                           fsr2h	equ	0xFDA
 34471                           fsr2l	equ	0xFD9
 34472                           status	equ	0xFD8
 34473                           
 34474 ;; *************** function __i2c_start *****************
 34475 ;; Defined at:
 34476 ;;		line 50 in file "i2c.c"
 34477 ;; Parameters:    Size  Location     Type
 34478 ;;		None
 34479 ;; Auto vars:     Size  Location     Type
 34480 ;;		None
 34481 ;; Return value:  Size  Location     Type
 34482 ;;                  1    wreg      void 
 34483 ;; Registers used:
 34484 ;;		None
 34485 ;; Tracked objects:
 34486 ;;		On entry : 0/0
 34487 ;;		On exit  : 0/0
 34488 ;;		Unchanged: 0/0
 34489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34494 ;;Total ram usage:        0 bytes
 34495 ;; Hardware stack levels used:    1
 34496 ;; This function calls:
 34497 ;;		Nothing
 34498 ;; This function is called by:
 34499 ;;		__i2c_write
 34500 ;;		__i2c_read
 34501 ;;		_i2c_display_write_fixed
 34502 ;;		_i2c_display_write
 34503 ;;		_i2c_adc_read
 34504 ;; This function uses a non-reentrant model
 34505 ;;
 34506                           
 34507                           	psect	text162
 34508  0079BA                     __ptext162:
 34509                           	opt stack 0
 34510  0079BA                     __i2c_start:
 34511                           	opt stack 27
 34512                           
 34513                           ;i2c.c: 52: SSP1CON2bits.SEN=1;
 34514                           
 34515                           ;incstack = 0
 34516  0079BA  80C5               	bsf	4037,0,c	;volatile
 34517  0079BC                     l1293:
 34518  0079BC  A0C5               	btfss	4037,0,c	;volatile
 34519  0079BE  0012               	return	
 34520  0079C0  D7FD               	goto	l1293
 34521  0079C2                     __end_of__i2c_start:
 34522                           	opt stack 0
 34523                           tosu	equ	0xFFF
 34524                           tosh	equ	0xFFE
 34525                           tosl	equ	0xFFD
 34526                           pclath	equ	0xFFA
 34527                           tblptru	equ	0xFF8
 34528                           tblptrh	equ	0xFF7
 34529                           tblptrl	equ	0xFF6
 34530                           tablat	equ	0xFF5
 34531                           prodh	equ	0xFF4
 34532                           prodl	equ	0xFF3
 34533                           intcon	equ	0xFF2
 34534                           intcon2	equ	0xFF1
 34535                           intcon3	equ	0xFF0
 34536                           indf0	equ	0xFEF
 34537                           postinc0	equ	0xFEE
 34538                           fsr0h	equ	0xFEA
 34539                           fsr0l	equ	0xFE9
 34540                           wreg	equ	0xFE8
 34541                           indf1	equ	0xFE7
 34542                           postdec1	equ	0xFE5
 34543                           plusw1	equ	0xFE3
 34544                           fsr1h	equ	0xFE2
 34545                           fsr1l	equ	0xFE1
 34546                           indf2	equ	0xFDF
 34547                           postinc2	equ	0xFDE
 34548                           postdec2	equ	0xFDD
 34549                           plusw2	equ	0xFDB
 34550                           fsr2h	equ	0xFDA
 34551                           fsr2l	equ	0xFD9
 34552                           status	equ	0xFD8
 34553                           
 34554 ;; *************** function __i2c_send *****************
 34555 ;; Defined at:
 34556 ;;		line 57 in file "i2c.c"
 34557 ;; Parameters:    Size  Location     Type
 34558 ;;  dat             1    wreg     unsigned char 
 34559 ;; Auto vars:     Size  Location     Type
 34560 ;;  dat             1    0[COMRAM] unsigned char 
 34561 ;; Return value:  Size  Location     Type
 34562 ;;                  1    wreg      void 
 34563 ;; Registers used:
 34564 ;;		wreg
 34565 ;; Tracked objects:
 34566 ;;		On entry : 0/0
 34567 ;;		On exit  : 0/0
 34568 ;;		Unchanged: 0/0
 34569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34573 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34574 ;;Total ram usage:        1 bytes
 34575 ;; Hardware stack levels used:    1
 34576 ;; This function calls:
 34577 ;;		Nothing
 34578 ;; This function is called by:
 34579 ;;		__i2c_write
 34580 ;;		__i2c_read
 34581 ;;		_i2c_display_write_fixed
 34582 ;;		_i2c_display_write
 34583 ;;		_i2c_adc_read
 34584 ;; This function uses a non-reentrant model
 34585 ;;
 34586                           
 34587                           	psect	text163
 34588  0079C2                     __ptext163:
 34589                           	opt stack 0
 34590  0079C2                     __i2c_send:
 34591                           	opt stack 27
 34592                           
 34593                           ;incstack = 0
 34594                           ;__i2c_send@dat stored from wreg
 34595  0079C2  6E01               	movwf	__i2c_send@dat,c
 34596                           
 34597                           ;i2c.c: 59: SSP1BUF = dat;
 34598  0079C4  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 34599  0079C8  0012               	return		;funcret
 34600  0079CA                     __end_of__i2c_send:
 34601                           	opt stack 0
 34602                           tosu	equ	0xFFF
 34603                           tosh	equ	0xFFE
 34604                           tosl	equ	0xFFD
 34605                           pclath	equ	0xFFA
 34606                           tblptru	equ	0xFF8
 34607                           tblptrh	equ	0xFF7
 34608                           tblptrl	equ	0xFF6
 34609                           tablat	equ	0xFF5
 34610                           prodh	equ	0xFF4
 34611                           prodl	equ	0xFF3
 34612                           intcon	equ	0xFF2
 34613                           intcon2	equ	0xFF1
 34614                           intcon3	equ	0xFF0
 34615                           indf0	equ	0xFEF
 34616                           postinc0	equ	0xFEE
 34617                           fsr0h	equ	0xFEA
 34618                           fsr0l	equ	0xFE9
 34619                           wreg	equ	0xFE8
 34620                           indf1	equ	0xFE7
 34621                           postdec1	equ	0xFE5
 34622                           plusw1	equ	0xFE3
 34623                           fsr1h	equ	0xFE2
 34624                           fsr1l	equ	0xFE1
 34625                           indf2	equ	0xFDF
 34626                           postinc2	equ	0xFDE
 34627                           postdec2	equ	0xFDD
 34628                           plusw2	equ	0xFDB
 34629                           fsr2h	equ	0xFDA
 34630                           fsr2l	equ	0xFD9
 34631                           status	equ	0xFD8
 34632                           
 34633 ;; *************** function __parse_command_long *****************
 34634 ;; Defined at:
 34635 ;;		line 377 in file "app_device_custom_hid.c"
 34636 ;; Parameters:    Size  Location     Type
 34637 ;;  cmd             1    wreg     unsigned char 
 34638 ;;  data            1    1[COMRAM] unsigned char 
 34639 ;; Auto vars:     Size  Location     Type
 34640 ;;  cmd             1    2[COMRAM] unsigned char 
 34641 ;; Return value:  Size  Location     Type
 34642 ;;                  1    wreg      void 
 34643 ;; Registers used:
 34644 ;;		wreg, status,2, status,0, cstack
 34645 ;; Tracked objects:
 34646 ;;		On entry : 0/0
 34647 ;;		On exit  : 0/0
 34648 ;;		Unchanged: 0/0
 34649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34650 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34653 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34654 ;;Total ram usage:        2 bytes
 34655 ;; Hardware stack levels used:    1
 34656 ;; Hardware stack levels required when called:    2
 34657 ;; This function calls:
 34658 ;;		_rtcc_set_day
 34659 ;;		_rtcc_set_hours
 34660 ;;		_rtcc_set_minutes
 34661 ;;		_rtcc_set_month
 34662 ;;		_rtcc_set_seconds
 34663 ;;		_rtcc_set_year
 34664 ;; This function is called by:
 34665 ;;		_APP_DeviceCustomHIDTasks
 34666 ;; This function uses a non-reentrant model
 34667 ;;
 34668                           
 34669                           	psect	text164
 34670  0067A6                     __ptext164:
 34671                           	opt stack 0
 34672  0067A6                     __parse_command_long:
 34673                           	opt stack 27
 34674                           
 34675                           ;incstack = 0
 34676                           ;__parse_command_long@cmd stored from wreg
 34677  0067A6  6E03               	movwf	__parse_command_long@cmd,c
 34678                           
 34679                           ;app_device_custom_hid.c: 379: switch(cmd)
 34680  0067A8  D018               	goto	l13172
 34681  0067AA                     l13158:
 34682                           
 34683                           ;app_device_custom_hid.c: 382: rtcc_set_year(data);
 34684  0067AA  5002               	movf	__parse_command_long@data,w,c
 34685  0067AC  ECC7  F03B         	call	_rtcc_set_year
 34686                           
 34687                           ;app_device_custom_hid.c: 383: break;
 34688  0067B0  0012               	return	
 34689  0067B2                     l13160:
 34690                           
 34691                           ;app_device_custom_hid.c: 385: rtcc_set_month(data);
 34692  0067B2  5002               	movf	__parse_command_long@data,w,c
 34693  0067B4  ECDF  F03B         	call	_rtcc_set_month
 34694                           
 34695                           ;app_device_custom_hid.c: 386: break;
 34696  0067B8  0012               	return	
 34697  0067BA                     l13162:
 34698                           
 34699                           ;app_device_custom_hid.c: 388: rtcc_set_day(data);
 34700  0067BA  5002               	movf	__parse_command_long@data,w,c
 34701  0067BC  EC03  F03C         	call	_rtcc_set_day
 34702                           
 34703                           ;app_device_custom_hid.c: 389: break;
 34704  0067C0  0012               	return	
 34705  0067C2                     l13164:
 34706                           
 34707                           ;app_device_custom_hid.c: 391: rtcc_set_hours(data);
 34708  0067C2  5002               	movf	__parse_command_long@data,w,c
 34709  0067C4  ECF7  F03B         	call	_rtcc_set_hours
 34710                           
 34711                           ;app_device_custom_hid.c: 392: break;
 34712  0067C8  0012               	return	
 34713  0067CA                     l13166:
 34714                           
 34715                           ;app_device_custom_hid.c: 394: rtcc_set_minutes(data);
 34716  0067CA  5002               	movf	__parse_command_long@data,w,c
 34717  0067CC  ECEB  F03B         	call	_rtcc_set_minutes
 34718                           
 34719                           ;app_device_custom_hid.c: 395: break;
 34720  0067D0  0012               	return	
 34721  0067D2                     l13168:
 34722                           
 34723                           ;app_device_custom_hid.c: 397: rtcc_set_seconds(data);
 34724  0067D2  5002               	movf	__parse_command_long@data,w,c
 34725  0067D4  ECD3  F03B         	call	_rtcc_set_seconds
 34726                           
 34727                           ;app_device_custom_hid.c: 399: }
 34728                           
 34729                           ;app_device_custom_hid.c: 398: break;
 34730  0067D8  0012               	return	
 34731  0067DA                     l13172:
 34732  0067DA  5003               	movf	__parse_command_long@cmd,w,c
 34733                           
 34734                           ; Switch size 1, requested type "space"
 34735                           ; Number of cases is 6, Range of values is 64 to 69
 34736                           ; switch strategies available:
 34737                           ; Name         Instructions Cycles
 34738                           ; simple_byte           19    10 (average)
 34739                           ;	Chosen strategy is simple_byte
 34740  0067DC  0A40               	xorlw	64	; case 64
 34741  0067DE  B4D8               	btfsc	status,2,c
 34742  0067E0  D7E4               	goto	l13158
 34743  0067E2  0A01               	xorlw	1	; case 65
 34744  0067E4  B4D8               	btfsc	status,2,c
 34745  0067E6  D7E5               	goto	l13160
 34746  0067E8  0A03               	xorlw	3	; case 66
 34747  0067EA  B4D8               	btfsc	status,2,c
 34748  0067EC  D7E6               	goto	l13162
 34749  0067EE  0A01               	xorlw	1	; case 67
 34750  0067F0  B4D8               	btfsc	status,2,c
 34751  0067F2  D7E7               	goto	l13164
 34752  0067F4  0A07               	xorlw	7	; case 68
 34753  0067F6  B4D8               	btfsc	status,2,c
 34754  0067F8  D7E8               	goto	l13166
 34755  0067FA  0A01               	xorlw	1	; case 69
 34756  0067FC  A4D8               	btfss	status,2,c
 34757  0067FE  0012               	return	
 34758  006800  D7E8               	goto	l13168
 34759  006802                     __end_of__parse_command_long:
 34760                           	opt stack 0
 34761                           tosu	equ	0xFFF
 34762                           tosh	equ	0xFFE
 34763                           tosl	equ	0xFFD
 34764                           pclath	equ	0xFFA
 34765                           tblptru	equ	0xFF8
 34766                           tblptrh	equ	0xFF7
 34767                           tblptrl	equ	0xFF6
 34768                           tablat	equ	0xFF5
 34769                           prodh	equ	0xFF4
 34770                           prodl	equ	0xFF3
 34771                           intcon	equ	0xFF2
 34772                           intcon2	equ	0xFF1
 34773                           intcon3	equ	0xFF0
 34774                           indf0	equ	0xFEF
 34775                           postinc0	equ	0xFEE
 34776                           fsr0h	equ	0xFEA
 34777                           fsr0l	equ	0xFE9
 34778                           wreg	equ	0xFE8
 34779                           indf1	equ	0xFE7
 34780                           postdec1	equ	0xFE5
 34781                           plusw1	equ	0xFE3
 34782                           fsr1h	equ	0xFE2
 34783                           fsr1l	equ	0xFE1
 34784                           indf2	equ	0xFDF
 34785                           postinc2	equ	0xFDE
 34786                           postdec2	equ	0xFDD
 34787                           plusw2	equ	0xFDB
 34788                           fsr2h	equ	0xFDA
 34789                           fsr2l	equ	0xFD9
 34790                           status	equ	0xFD8
 34791                           
 34792 ;; *************** function _rtcc_set_year *****************
 34793 ;; Defined at:
 34794 ;;		line 117 in file "rtcc.c"
 34795 ;; Parameters:    Size  Location     Type
 34796 ;;  year            1    wreg     unsigned char 
 34797 ;; Auto vars:     Size  Location     Type
 34798 ;;  year            1    0[COMRAM] unsigned char 
 34799 ;; Return value:  Size  Location     Type
 34800 ;;                  1    wreg      void 
 34801 ;; Registers used:
 34802 ;;		wreg, status,2, cstack
 34803 ;; Tracked objects:
 34804 ;;		On entry : 0/0
 34805 ;;		On exit  : 0/0
 34806 ;;		Unchanged: 0/0
 34807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34812 ;;Total ram usage:        1 bytes
 34813 ;; Hardware stack levels used:    1
 34814 ;; Hardware stack levels required when called:    1
 34815 ;; This function calls:
 34816 ;;		__rtcc_write_disable
 34817 ;;		__rtcc_write_enable
 34818 ;; This function is called by:
 34819 ;;		__parse_command_long
 34820 ;;		_rtcc_read_eeprom
 34821 ;;		_rtcc_increment_year
 34822 ;;		_rtcc_decrement_year
 34823 ;; This function uses a non-reentrant model
 34824 ;;
 34825                           
 34826                           	psect	text165
 34827  00778E                     __ptext165:
 34828                           	opt stack 0
 34829  00778E                     _rtcc_set_year:
 34830                           	opt stack 26
 34831                           
 34832                           ;incstack = 0
 34833                           ;rtcc_set_year@year stored from wreg
 34834  00778E  6E01               	movwf	rtcc_set_year@year,c
 34835                           
 34836                           ;rtcc.c: 119: _rtcc_write_enable();
 34837  007790  EC0F  F03C         	call	__rtcc_write_enable	;wreg free
 34838                           
 34839                           ;rtcc.c: 120: RTCCFGbits.RTCPTR1 = 1;
 34840  007794  010F               	movlb	15	; () banked
 34841  007796  833F               	bsf	63,1,b	;volatile
 34842                           
 34843                           ; BSR set to: 15
 34844                           ;rtcc.c: 121: RTCCFGbits.RTCPTR0 = 1;
 34845  007798  010F               	movlb	15	; () banked
 34846  00779A  813F               	bsf	63,0,b	;volatile
 34847                           
 34848                           ; BSR set to: 15
 34849                           ;rtcc.c: 122: RTCVALL = year;
 34850  00779C  C001  FF3A         	movff	rtcc_set_year@year,3898	;volatile
 34851                           
 34852                           ;rtcc.c: 123: _rtcc_write_disable();
 34853  0077A0  EC1A  F03C         	call	__rtcc_write_disable	;wreg free
 34854  0077A4  0012               	return		;funcret
 34855  0077A6                     __end_of_rtcc_set_year:
 34856                           	opt stack 0
 34857                           tosu	equ	0xFFF
 34858                           tosh	equ	0xFFE
 34859                           tosl	equ	0xFFD
 34860                           pclath	equ	0xFFA
 34861                           tblptru	equ	0xFF8
 34862                           tblptrh	equ	0xFF7
 34863                           tblptrl	equ	0xFF6
 34864                           tablat	equ	0xFF5
 34865                           prodh	equ	0xFF4
 34866                           prodl	equ	0xFF3
 34867                           intcon	equ	0xFF2
 34868                           intcon2	equ	0xFF1
 34869                           intcon3	equ	0xFF0
 34870                           indf0	equ	0xFEF
 34871                           postinc0	equ	0xFEE
 34872                           fsr0h	equ	0xFEA
 34873                           fsr0l	equ	0xFE9
 34874                           wreg	equ	0xFE8
 34875                           indf1	equ	0xFE7
 34876                           postdec1	equ	0xFE5
 34877                           plusw1	equ	0xFE3
 34878                           fsr1h	equ	0xFE2
 34879                           fsr1l	equ	0xFE1
 34880                           indf2	equ	0xFDF
 34881                           postinc2	equ	0xFDE
 34882                           postdec2	equ	0xFDD
 34883                           plusw2	equ	0xFDB
 34884                           fsr2h	equ	0xFDA
 34885                           fsr2l	equ	0xFD9
 34886                           status	equ	0xFD8
 34887                           
 34888 ;; *************** function _rtcc_set_seconds *****************
 34889 ;; Defined at:
 34890 ;;		line 307 in file "rtcc.c"
 34891 ;; Parameters:    Size  Location     Type
 34892 ;;  seconds         1    wreg     unsigned char 
 34893 ;; Auto vars:     Size  Location     Type
 34894 ;;  seconds         1    0[COMRAM] unsigned char 
 34895 ;; Return value:  Size  Location     Type
 34896 ;;                  1    wreg      void 
 34897 ;; Registers used:
 34898 ;;		wreg, status,2, cstack
 34899 ;; Tracked objects:
 34900 ;;		On entry : 0/0
 34901 ;;		On exit  : 0/0
 34902 ;;		Unchanged: 0/0
 34903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34908 ;;Total ram usage:        1 bytes
 34909 ;; Hardware stack levels used:    1
 34910 ;; Hardware stack levels required when called:    1
 34911 ;; This function calls:
 34912 ;;		__rtcc_write_disable
 34913 ;;		__rtcc_write_enable
 34914 ;; This function is called by:
 34915 ;;		__parse_command_long
 34916 ;;		_rtcc_read_eeprom
 34917 ;;		_rtcc_increment_seconds
 34918 ;;		_rtcc_decrement_seconds
 34919 ;; This function uses a non-reentrant model
 34920 ;;
 34921                           
 34922                           	psect	text166
 34923  0077A6                     __ptext166:
 34924                           	opt stack 0
 34925  0077A6                     _rtcc_set_seconds:
 34926                           	opt stack 26
 34927                           
 34928                           ;incstack = 0
 34929                           ;rtcc_set_seconds@seconds stored from wreg
 34930  0077A6  6E01               	movwf	rtcc_set_seconds@seconds,c
 34931                           
 34932                           ;rtcc.c: 309: _rtcc_write_enable();
 34933  0077A8  EC0F  F03C         	call	__rtcc_write_enable	;wreg free
 34934                           
 34935                           ;rtcc.c: 310: RTCCFGbits.RTCPTR1 = 0;
 34936  0077AC  010F               	movlb	15	; () banked
 34937  0077AE  933F               	bcf	63,1,b	;volatile
 34938                           
 34939                           ; BSR set to: 15
 34940                           ;rtcc.c: 311: RTCCFGbits.RTCPTR0 = 0;
 34941  0077B0  010F               	movlb	15	; () banked
 34942  0077B2  913F               	bcf	63,0,b	;volatile
 34943                           
 34944                           ; BSR set to: 15
 34945                           ;rtcc.c: 312: RTCVALL = seconds;
 34946  0077B4  C001  FF3A         	movff	rtcc_set_seconds@seconds,3898	;volatile
 34947                           
 34948                           ;rtcc.c: 313: _rtcc_write_disable();
 34949  0077B8  EC1A  F03C         	call	__rtcc_write_disable	;wreg free
 34950  0077BC  0012               	return		;funcret
 34951  0077BE                     __end_of_rtcc_set_seconds:
 34952                           	opt stack 0
 34953                           tosu	equ	0xFFF
 34954                           tosh	equ	0xFFE
 34955                           tosl	equ	0xFFD
 34956                           pclath	equ	0xFFA
 34957                           tblptru	equ	0xFF8
 34958                           tblptrh	equ	0xFF7
 34959                           tblptrl	equ	0xFF6
 34960                           tablat	equ	0xFF5
 34961                           prodh	equ	0xFF4
 34962                           prodl	equ	0xFF3
 34963                           intcon	equ	0xFF2
 34964                           intcon2	equ	0xFF1
 34965                           intcon3	equ	0xFF0
 34966                           indf0	equ	0xFEF
 34967                           postinc0	equ	0xFEE
 34968                           fsr0h	equ	0xFEA
 34969                           fsr0l	equ	0xFE9
 34970                           wreg	equ	0xFE8
 34971                           indf1	equ	0xFE7
 34972                           postdec1	equ	0xFE5
 34973                           plusw1	equ	0xFE3
 34974                           fsr1h	equ	0xFE2
 34975                           fsr1l	equ	0xFE1
 34976                           indf2	equ	0xFDF
 34977                           postinc2	equ	0xFDE
 34978                           postdec2	equ	0xFDD
 34979                           plusw2	equ	0xFDB
 34980                           fsr2h	equ	0xFDA
 34981                           fsr2l	equ	0xFD9
 34982                           status	equ	0xFD8
 34983                           
 34984 ;; *************** function _rtcc_set_month *****************
 34985 ;; Defined at:
 34986 ;;		line 155 in file "rtcc.c"
 34987 ;; Parameters:    Size  Location     Type
 34988 ;;  month           1    wreg     unsigned char 
 34989 ;; Auto vars:     Size  Location     Type
 34990 ;;  month           1    0[COMRAM] unsigned char 
 34991 ;; Return value:  Size  Location     Type
 34992 ;;                  1    wreg      void 
 34993 ;; Registers used:
 34994 ;;		wreg, status,2, cstack
 34995 ;; Tracked objects:
 34996 ;;		On entry : 0/0
 34997 ;;		On exit  : 0/0
 34998 ;;		Unchanged: 0/0
 34999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35004 ;;Total ram usage:        1 bytes
 35005 ;; Hardware stack levels used:    1
 35006 ;; Hardware stack levels required when called:    1
 35007 ;; This function calls:
 35008 ;;		__rtcc_write_disable
 35009 ;;		__rtcc_write_enable
 35010 ;; This function is called by:
 35011 ;;		__parse_command_long
 35012 ;;		_rtcc_read_eeprom
 35013 ;;		_rtcc_increment_month
 35014 ;;		_rtcc_decrement_month
 35015 ;; This function uses a non-reentrant model
 35016 ;;
 35017                           
 35018                           	psect	text167
 35019  0077BE                     __ptext167:
 35020                           	opt stack 0
 35021  0077BE                     _rtcc_set_month:
 35022                           	opt stack 26
 35023                           
 35024                           ;incstack = 0
 35025                           ;rtcc_set_month@month stored from wreg
 35026  0077BE  6E01               	movwf	rtcc_set_month@month,c
 35027                           
 35028                           ;rtcc.c: 157: _rtcc_write_enable();
 35029  0077C0  EC0F  F03C         	call	__rtcc_write_enable	;wreg free
 35030                           
 35031                           ;rtcc.c: 158: RTCCFGbits.RTCPTR1 = 1;
 35032  0077C4  010F               	movlb	15	; () banked
 35033  0077C6  833F               	bsf	63,1,b	;volatile
 35034                           
 35035                           ; BSR set to: 15
 35036                           ;rtcc.c: 159: RTCCFGbits.RTCPTR0 = 0;
 35037  0077C8  010F               	movlb	15	; () banked
 35038  0077CA  913F               	bcf	63,0,b	;volatile
 35039                           
 35040                           ; BSR set to: 15
 35041                           ;rtcc.c: 160: RTCVALH = month;
 35042  0077CC  C001  FF3B         	movff	rtcc_set_month@month,3899	;volatile
 35043                           
 35044                           ;rtcc.c: 161: _rtcc_write_disable();
 35045  0077D0  EC1A  F03C         	call	__rtcc_write_disable	;wreg free
 35046  0077D4  0012               	return		;funcret
 35047  0077D6                     __end_of_rtcc_set_month:
 35048                           	opt stack 0
 35049                           tosu	equ	0xFFF
 35050                           tosh	equ	0xFFE
 35051                           tosl	equ	0xFFD
 35052                           pclath	equ	0xFFA
 35053                           tblptru	equ	0xFF8
 35054                           tblptrh	equ	0xFF7
 35055                           tblptrl	equ	0xFF6
 35056                           tablat	equ	0xFF5
 35057                           prodh	equ	0xFF4
 35058                           prodl	equ	0xFF3
 35059                           intcon	equ	0xFF2
 35060                           intcon2	equ	0xFF1
 35061                           intcon3	equ	0xFF0
 35062                           indf0	equ	0xFEF
 35063                           postinc0	equ	0xFEE
 35064                           fsr0h	equ	0xFEA
 35065                           fsr0l	equ	0xFE9
 35066                           wreg	equ	0xFE8
 35067                           indf1	equ	0xFE7
 35068                           postdec1	equ	0xFE5
 35069                           plusw1	equ	0xFE3
 35070                           fsr1h	equ	0xFE2
 35071                           fsr1l	equ	0xFE1
 35072                           indf2	equ	0xFDF
 35073                           postinc2	equ	0xFDE
 35074                           postdec2	equ	0xFDD
 35075                           plusw2	equ	0xFDB
 35076                           fsr2h	equ	0xFDA
 35077                           fsr2l	equ	0xFD9
 35078                           status	equ	0xFD8
 35079                           
 35080 ;; *************** function _rtcc_set_minutes *****************
 35081 ;; Defined at:
 35082 ;;		line 269 in file "rtcc.c"
 35083 ;; Parameters:    Size  Location     Type
 35084 ;;  minutes         1    wreg     unsigned char 
 35085 ;; Auto vars:     Size  Location     Type
 35086 ;;  minutes         1    0[COMRAM] unsigned char 
 35087 ;; Return value:  Size  Location     Type
 35088 ;;                  1    wreg      void 
 35089 ;; Registers used:
 35090 ;;		wreg, status,2, cstack
 35091 ;; Tracked objects:
 35092 ;;		On entry : 0/0
 35093 ;;		On exit  : 0/0
 35094 ;;		Unchanged: 0/0
 35095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35099 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35100 ;;Total ram usage:        1 bytes
 35101 ;; Hardware stack levels used:    1
 35102 ;; Hardware stack levels required when called:    1
 35103 ;; This function calls:
 35104 ;;		__rtcc_write_disable
 35105 ;;		__rtcc_write_enable
 35106 ;; This function is called by:
 35107 ;;		__parse_command_long
 35108 ;;		_rtcc_read_eeprom
 35109 ;;		_rtcc_increment_minutes
 35110 ;;		_rtcc_decrement_minutes
 35111 ;; This function uses a non-reentrant model
 35112 ;;
 35113                           
 35114                           	psect	text168
 35115  0077D6                     __ptext168:
 35116                           	opt stack 0
 35117  0077D6                     _rtcc_set_minutes:
 35118                           	opt stack 26
 35119                           
 35120                           ;incstack = 0
 35121                           ;rtcc_set_minutes@minutes stored from wreg
 35122  0077D6  6E01               	movwf	rtcc_set_minutes@minutes,c
 35123                           
 35124                           ;rtcc.c: 271: _rtcc_write_enable();
 35125  0077D8  EC0F  F03C         	call	__rtcc_write_enable	;wreg free
 35126                           
 35127                           ;rtcc.c: 272: RTCCFGbits.RTCPTR1 = 0;
 35128  0077DC  010F               	movlb	15	; () banked
 35129  0077DE  933F               	bcf	63,1,b	;volatile
 35130                           
 35131                           ; BSR set to: 15
 35132                           ;rtcc.c: 273: RTCCFGbits.RTCPTR0 = 0;
 35133  0077E0  010F               	movlb	15	; () banked
 35134  0077E2  913F               	bcf	63,0,b	;volatile
 35135                           
 35136                           ; BSR set to: 15
 35137                           ;rtcc.c: 274: RTCVALH = minutes;
 35138  0077E4  C001  FF3B         	movff	rtcc_set_minutes@minutes,3899	;volatile
 35139                           
 35140                           ;rtcc.c: 275: _rtcc_write_disable();
 35141  0077E8  EC1A  F03C         	call	__rtcc_write_disable	;wreg free
 35142  0077EC  0012               	return		;funcret
 35143  0077EE                     __end_of_rtcc_set_minutes:
 35144                           	opt stack 0
 35145                           tosu	equ	0xFFF
 35146                           tosh	equ	0xFFE
 35147                           tosl	equ	0xFFD
 35148                           pclath	equ	0xFFA
 35149                           tblptru	equ	0xFF8
 35150                           tblptrh	equ	0xFF7
 35151                           tblptrl	equ	0xFF6
 35152                           tablat	equ	0xFF5
 35153                           prodh	equ	0xFF4
 35154                           prodl	equ	0xFF3
 35155                           intcon	equ	0xFF2
 35156                           intcon2	equ	0xFF1
 35157                           intcon3	equ	0xFF0
 35158                           indf0	equ	0xFEF
 35159                           postinc0	equ	0xFEE
 35160                           fsr0h	equ	0xFEA
 35161                           fsr0l	equ	0xFE9
 35162                           wreg	equ	0xFE8
 35163                           indf1	equ	0xFE7
 35164                           postdec1	equ	0xFE5
 35165                           plusw1	equ	0xFE3
 35166                           fsr1h	equ	0xFE2
 35167                           fsr1l	equ	0xFE1
 35168                           indf2	equ	0xFDF
 35169                           postinc2	equ	0xFDE
 35170                           postdec2	equ	0xFDD
 35171                           plusw2	equ	0xFDB
 35172                           fsr2h	equ	0xFDA
 35173                           fsr2l	equ	0xFD9
 35174                           status	equ	0xFD8
 35175                           
 35176 ;; *************** function _rtcc_set_hours *****************
 35177 ;; Defined at:
 35178 ;;		line 231 in file "rtcc.c"
 35179 ;; Parameters:    Size  Location     Type
 35180 ;;  hours           1    wreg     unsigned char 
 35181 ;; Auto vars:     Size  Location     Type
 35182 ;;  hours           1    0[COMRAM] unsigned char 
 35183 ;; Return value:  Size  Location     Type
 35184 ;;                  1    wreg      void 
 35185 ;; Registers used:
 35186 ;;		wreg, status,2, cstack
 35187 ;; Tracked objects:
 35188 ;;		On entry : 0/0
 35189 ;;		On exit  : 0/0
 35190 ;;		Unchanged: 0/0
 35191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35195 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35196 ;;Total ram usage:        1 bytes
 35197 ;; Hardware stack levels used:    1
 35198 ;; Hardware stack levels required when called:    1
 35199 ;; This function calls:
 35200 ;;		__rtcc_write_disable
 35201 ;;		__rtcc_write_enable
 35202 ;; This function is called by:
 35203 ;;		__parse_command_long
 35204 ;;		_rtcc_read_eeprom
 35205 ;;		_rtcc_increment_hours
 35206 ;;		_rtcc_decrement_hours
 35207 ;; This function uses a non-reentrant model
 35208 ;;
 35209                           
 35210                           	psect	text169
 35211  0077EE                     __ptext169:
 35212                           	opt stack 0
 35213  0077EE                     _rtcc_set_hours:
 35214                           	opt stack 26
 35215                           
 35216                           ;incstack = 0
 35217                           ;rtcc_set_hours@hours stored from wreg
 35218  0077EE  6E01               	movwf	rtcc_set_hours@hours,c
 35219                           
 35220                           ;rtcc.c: 233: _rtcc_write_enable();
 35221  0077F0  EC0F  F03C         	call	__rtcc_write_enable	;wreg free
 35222                           
 35223                           ;rtcc.c: 234: RTCCFGbits.RTCPTR1 = 0;
 35224  0077F4  010F               	movlb	15	; () banked
 35225  0077F6  933F               	bcf	63,1,b	;volatile
 35226                           
 35227                           ; BSR set to: 15
 35228                           ;rtcc.c: 235: RTCCFGbits.RTCPTR0 = 1;
 35229  0077F8  010F               	movlb	15	; () banked
 35230  0077FA  813F               	bsf	63,0,b	;volatile
 35231                           
 35232                           ; BSR set to: 15
 35233                           ;rtcc.c: 236: RTCVALL = hours;
 35234  0077FC  C001  FF3A         	movff	rtcc_set_hours@hours,3898	;volatile
 35235                           
 35236                           ;rtcc.c: 237: _rtcc_write_disable();
 35237  007800  EC1A  F03C         	call	__rtcc_write_disable	;wreg free
 35238  007804  0012               	return		;funcret
 35239  007806                     __end_of_rtcc_set_hours:
 35240                           	opt stack 0
 35241                           tosu	equ	0xFFF
 35242                           tosh	equ	0xFFE
 35243                           tosl	equ	0xFFD
 35244                           pclath	equ	0xFFA
 35245                           tblptru	equ	0xFF8
 35246                           tblptrh	equ	0xFF7
 35247                           tblptrl	equ	0xFF6
 35248                           tablat	equ	0xFF5
 35249                           prodh	equ	0xFF4
 35250                           prodl	equ	0xFF3
 35251                           intcon	equ	0xFF2
 35252                           intcon2	equ	0xFF1
 35253                           intcon3	equ	0xFF0
 35254                           indf0	equ	0xFEF
 35255                           postinc0	equ	0xFEE
 35256                           fsr0h	equ	0xFEA
 35257                           fsr0l	equ	0xFE9
 35258                           wreg	equ	0xFE8
 35259                           indf1	equ	0xFE7
 35260                           postdec1	equ	0xFE5
 35261                           plusw1	equ	0xFE3
 35262                           fsr1h	equ	0xFE2
 35263                           fsr1l	equ	0xFE1
 35264                           indf2	equ	0xFDF
 35265                           postinc2	equ	0xFDE
 35266                           postdec2	equ	0xFDD
 35267                           plusw2	equ	0xFDB
 35268                           fsr2h	equ	0xFDA
 35269                           fsr2l	equ	0xFD9
 35270                           status	equ	0xFD8
 35271                           
 35272 ;; *************** function _rtcc_set_day *****************
 35273 ;; Defined at:
 35274 ;;		line 193 in file "rtcc.c"
 35275 ;; Parameters:    Size  Location     Type
 35276 ;;  day             1    wreg     unsigned char 
 35277 ;; Auto vars:     Size  Location     Type
 35278 ;;  day             1    0[COMRAM] unsigned char 
 35279 ;; Return value:  Size  Location     Type
 35280 ;;                  1    wreg      void 
 35281 ;; Registers used:
 35282 ;;		wreg, status,2, cstack
 35283 ;; Tracked objects:
 35284 ;;		On entry : 0/0
 35285 ;;		On exit  : 0/0
 35286 ;;		Unchanged: 0/0
 35287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35292 ;;Total ram usage:        1 bytes
 35293 ;; Hardware stack levels used:    1
 35294 ;; Hardware stack levels required when called:    1
 35295 ;; This function calls:
 35296 ;;		__rtcc_write_disable
 35297 ;;		__rtcc_write_enable
 35298 ;; This function is called by:
 35299 ;;		__parse_command_long
 35300 ;;		_rtcc_read_eeprom
 35301 ;;		_rtcc_correct_day
 35302 ;;		_rtcc_increment_day
 35303 ;;		_rtcc_decrement_day
 35304 ;; This function uses a non-reentrant model
 35305 ;;
 35306                           
 35307                           	psect	text170
 35308  007806                     __ptext170:
 35309                           	opt stack 0
 35310  007806                     _rtcc_set_day:
 35311                           	opt stack 26
 35312                           
 35313                           ;incstack = 0
 35314                           ;rtcc_set_day@day stored from wreg
 35315  007806  6E01               	movwf	rtcc_set_day@day,c
 35316                           
 35317                           ;rtcc.c: 195: _rtcc_write_enable();
 35318  007808  EC0F  F03C         	call	__rtcc_write_enable	;wreg free
 35319                           
 35320                           ;rtcc.c: 196: RTCCFGbits.RTCPTR1 = 1;
 35321  00780C  010F               	movlb	15	; () banked
 35322  00780E  833F               	bsf	63,1,b	;volatile
 35323                           
 35324                           ; BSR set to: 15
 35325                           ;rtcc.c: 197: RTCCFGbits.RTCPTR0 = 0;
 35326  007810  010F               	movlb	15	; () banked
 35327  007812  913F               	bcf	63,0,b	;volatile
 35328                           
 35329                           ; BSR set to: 15
 35330                           ;rtcc.c: 198: RTCVALL = day;
 35331  007814  C001  FF3A         	movff	rtcc_set_day@day,3898	;volatile
 35332                           
 35333                           ;rtcc.c: 199: _rtcc_write_disable();
 35334  007818  EC1A  F03C         	call	__rtcc_write_disable	;wreg free
 35335  00781C  0012               	return		;funcret
 35336  00781E                     __end_of_rtcc_set_day:
 35337                           	opt stack 0
 35338                           tosu	equ	0xFFF
 35339                           tosh	equ	0xFFE
 35340                           tosl	equ	0xFFD
 35341                           pclath	equ	0xFFA
 35342                           tblptru	equ	0xFF8
 35343                           tblptrh	equ	0xFF7
 35344                           tblptrl	equ	0xFF6
 35345                           tablat	equ	0xFF5
 35346                           prodh	equ	0xFF4
 35347                           prodl	equ	0xFF3
 35348                           intcon	equ	0xFF2
 35349                           intcon2	equ	0xFF1
 35350                           intcon3	equ	0xFF0
 35351                           indf0	equ	0xFEF
 35352                           postinc0	equ	0xFEE
 35353                           fsr0h	equ	0xFEA
 35354                           fsr0l	equ	0xFE9
 35355                           wreg	equ	0xFE8
 35356                           indf1	equ	0xFE7
 35357                           postdec1	equ	0xFE5
 35358                           plusw1	equ	0xFE3
 35359                           fsr1h	equ	0xFE2
 35360                           fsr1l	equ	0xFE1
 35361                           indf2	equ	0xFDF
 35362                           postinc2	equ	0xFDE
 35363                           postdec2	equ	0xFDD
 35364                           plusw2	equ	0xFDB
 35365                           fsr2h	equ	0xFDA
 35366                           fsr2l	equ	0xFD9
 35367                           status	equ	0xFD8
 35368                           
 35369 ;; *************** function __rtcc_write_enable *****************
 35370 ;; Defined at:
 35371 ;;		line 14 in file "rtcc.c"
 35372 ;; Parameters:    Size  Location     Type
 35373 ;;		None
 35374 ;; Auto vars:     Size  Location     Type
 35375 ;;		None
 35376 ;; Return value:  Size  Location     Type
 35377 ;;                  1    wreg      void 
 35378 ;; Registers used:
 35379 ;;		wreg, status,2
 35380 ;; Tracked objects:
 35381 ;;		On entry : 0/0
 35382 ;;		On exit  : 0/0
 35383 ;;		Unchanged: 0/0
 35384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35389 ;;Total ram usage:        0 bytes
 35390 ;; Hardware stack levels used:    1
 35391 ;; This function calls:
 35392 ;;		Nothing
 35393 ;; This function is called by:
 35394 ;;		_rtcc_set_year
 35395 ;;		_rtcc_set_month
 35396 ;;		_rtcc_set_day
 35397 ;;		_rtcc_set_hours
 35398 ;;		_rtcc_set_minutes
 35399 ;;		_rtcc_set_seconds
 35400 ;; This function uses a non-reentrant model
 35401 ;;
 35402                           
 35403                           	psect	text171
 35404  00781E                     __ptext171:
 35405                           	opt stack 0
 35406  00781E                     __rtcc_write_enable:
 35407                           	opt stack 26
 35408                           
 35409                           ;rtcc.c: 16: while(!RTCCFGbits.RTCWREN)
 35410                           
 35411                           ;incstack = 0
 35412  00781E  D006               	goto	l10990
 35413  007820                     l10986:
 35414                           
 35415                           ;rtcc.c: 17: {
 35416                           ;rtcc.c: 18: EECON2 = 0x55;
 35417  007820  0E55               	movlw	85
 35418  007822  6EA7               	movwf	4007,c	;volatile
 35419                           
 35420                           ;rtcc.c: 19: EECON2 = 0xAA;
 35421  007824  0EAA               	movlw	170
 35422  007826  6EA7               	movwf	4007,c	;volatile
 35423                           
 35424                           ;rtcc.c: 20: RTCCFGbits.RTCWREN = 1;
 35425  007828  010F               	movlb	15	; () banked
 35426  00782A  8B3F               	bsf	63,5,b	;volatile
 35427  00782C                     l10990:
 35428  00782C  010F               	movlb	15	; () banked
 35429  00782E  BB3F               	btfsc	63,5,b	;volatile
 35430  007830  0012               	return	
 35431  007832  D7F6               	goto	l10986
 35432  007834                     __end_of__rtcc_write_enable:
 35433                           	opt stack 0
 35434                           tosu	equ	0xFFF
 35435                           tosh	equ	0xFFE
 35436                           tosl	equ	0xFFD
 35437                           pclath	equ	0xFFA
 35438                           tblptru	equ	0xFF8
 35439                           tblptrh	equ	0xFF7
 35440                           tblptrl	equ	0xFF6
 35441                           tablat	equ	0xFF5
 35442                           prodh	equ	0xFF4
 35443                           prodl	equ	0xFF3
 35444                           intcon	equ	0xFF2
 35445                           intcon2	equ	0xFF1
 35446                           intcon3	equ	0xFF0
 35447                           indf0	equ	0xFEF
 35448                           postinc0	equ	0xFEE
 35449                           fsr0h	equ	0xFEA
 35450                           fsr0l	equ	0xFE9
 35451                           wreg	equ	0xFE8
 35452                           indf1	equ	0xFE7
 35453                           postdec1	equ	0xFE5
 35454                           plusw1	equ	0xFE3
 35455                           fsr1h	equ	0xFE2
 35456                           fsr1l	equ	0xFE1
 35457                           indf2	equ	0xFDF
 35458                           postinc2	equ	0xFDE
 35459                           postdec2	equ	0xFDD
 35460                           plusw2	equ	0xFDB
 35461                           fsr2h	equ	0xFDA
 35462                           fsr2l	equ	0xFD9
 35463                           status	equ	0xFD8
 35464                           
 35465 ;; *************** function __rtcc_write_disable *****************
 35466 ;; Defined at:
 35467 ;;		line 24 in file "rtcc.c"
 35468 ;; Parameters:    Size  Location     Type
 35469 ;;		None
 35470 ;; Auto vars:     Size  Location     Type
 35471 ;;		None
 35472 ;; Return value:  Size  Location     Type
 35473 ;;                  1    wreg      void 
 35474 ;; Registers used:
 35475 ;;		wreg, status,2
 35476 ;; Tracked objects:
 35477 ;;		On entry : 0/0
 35478 ;;		On exit  : 0/0
 35479 ;;		Unchanged: 0/0
 35480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35485 ;;Total ram usage:        0 bytes
 35486 ;; Hardware stack levels used:    1
 35487 ;; This function calls:
 35488 ;;		Nothing
 35489 ;; This function is called by:
 35490 ;;		_rtcc_set_year
 35491 ;;		_rtcc_set_month
 35492 ;;		_rtcc_set_day
 35493 ;;		_rtcc_set_hours
 35494 ;;		_rtcc_set_minutes
 35495 ;;		_rtcc_set_seconds
 35496 ;; This function uses a non-reentrant model
 35497 ;;
 35498                           
 35499                           	psect	text172
 35500  007834                     __ptext172:
 35501                           	opt stack 0
 35502  007834                     __rtcc_write_disable:
 35503                           	opt stack 26
 35504                           
 35505                           ;rtcc.c: 26: while(RTCCFGbits.RTCWREN)
 35506                           
 35507                           ; BSR set to: 15
 35508                           ;incstack = 0
 35509  007834  D006               	goto	l10998
 35510  007836                     l10994:
 35511                           
 35512                           ;rtcc.c: 27: {
 35513                           ;rtcc.c: 28: EECON2 = 0x55;
 35514  007836  0E55               	movlw	85
 35515  007838  6EA7               	movwf	4007,c	;volatile
 35516                           
 35517                           ;rtcc.c: 29: EECON2 = 0xAA;
 35518  00783A  0EAA               	movlw	170
 35519  00783C  6EA7               	movwf	4007,c	;volatile
 35520                           
 35521                           ;rtcc.c: 30: RTCCFGbits.RTCWREN = 0;
 35522  00783E  010F               	movlb	15	; () banked
 35523  007840  9B3F               	bcf	63,5,b	;volatile
 35524  007842                     l10998:
 35525  007842  010F               	movlb	15	; () banked
 35526  007844  AB3F               	btfss	63,5,b	;volatile
 35527  007846  0012               	return	
 35528  007848  D7F6               	goto	l10994
 35529  00784A                     __end_of__rtcc_write_disable:
 35530                           	opt stack 0
 35531                           tosu	equ	0xFFF
 35532                           tosh	equ	0xFFE
 35533                           tosl	equ	0xFFD
 35534                           pclath	equ	0xFFA
 35535                           tblptru	equ	0xFF8
 35536                           tblptrh	equ	0xFF7
 35537                           tblptrl	equ	0xFF6
 35538                           tablat	equ	0xFF5
 35539                           prodh	equ	0xFF4
 35540                           prodl	equ	0xFF3
 35541                           intcon	equ	0xFF2
 35542                           intcon2	equ	0xFF1
 35543                           intcon3	equ	0xFF0
 35544                           indf0	equ	0xFEF
 35545                           postinc0	equ	0xFEE
 35546                           fsr0h	equ	0xFEA
 35547                           fsr0l	equ	0xFE9
 35548                           wreg	equ	0xFE8
 35549                           indf1	equ	0xFE7
 35550                           postdec1	equ	0xFE5
 35551                           plusw1	equ	0xFE3
 35552                           fsr1h	equ	0xFE2
 35553                           fsr1l	equ	0xFE1
 35554                           indf2	equ	0xFDF
 35555                           postinc2	equ	0xFDE
 35556                           postdec2	equ	0xFDD
 35557                           plusw2	equ	0xFDB
 35558                           fsr2h	equ	0xFDA
 35559                           fsr2l	equ	0xFD9
 35560                           status	equ	0xFD8
 35561                           
 35562 ;; *************** function __parse_command_calibration *****************
 35563 ;; Defined at:
 35564 ;;		line 402 in file "app_device_custom_hid.c"
 35565 ;; Parameters:    Size  Location     Type
 35566 ;;  cmd             1    wreg     unsigned char 
 35567 ;;  item            1    3[COMRAM] unsigned char 
 35568 ;;  dat1            1    4[COMRAM] unsigned char 
 35569 ;;  dat2            1    5[COMRAM] unsigned char 
 35570 ;;  dat3            1    6[COMRAM] unsigned char 
 35571 ;; Auto vars:     Size  Location     Type
 35572 ;;  cmd             1    0[COMRAM] unsigned char 
 35573 ;;  parameter       2    9[COMRAM] int 
 35574 ;; Return value:  Size  Location     Type
 35575 ;;                  1    wreg      void 
 35576 ;; Registers used:
 35577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35578 ;; Tracked objects:
 35579 ;;		On entry : 0/0
 35580 ;;		On exit  : 0/0
 35581 ;;		Unchanged: 0/0
 35582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35583 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35584 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35585 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35586 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35587 ;;Total ram usage:        8 bytes
 35588 ;; Hardware stack levels used:    1
 35589 ;; Hardware stack levels required when called:    1
 35590 ;; This function calls:
 35591 ;;		_schedule_eeprom_write_task
 35592 ;; This function is called by:
 35593 ;;		_APP_DeviceCustomHIDTasks
 35594 ;; This function uses a non-reentrant model
 35595 ;;
 35596                           
 35597                           	psect	text173
 35598  003CAA                     __ptext173:
 35599                           	opt stack 0
 35600  003CAA                     __parse_command_calibration:
 35601                           	opt stack 28
 35602                           
 35603                           ;app_device_custom_hid.c: 404: int16_t parameter = dat1;
 35604                           
 35605                           ; BSR set to: 15
 35606                           ;incstack = 0
 35607  003CAA  C005  F00A         	movff	__parse_command_calibration@dat1,__parse_command_calibration@parameter
 35608  003CAE  6A0B               	clrf	__parse_command_calibration@parameter+1,c
 35609                           
 35610                           ;app_device_custom_hid.c: 405: parameter <<= 8;
 35611  003CB0  500A               	movf	__parse_command_calibration@parameter,w,c
 35612  003CB2  6E0B               	movwf	__parse_command_calibration@parameter+1,c
 35613  003CB4  6A0A               	clrf	__parse_command_calibration@parameter,c
 35614                           
 35615                           ;app_device_custom_hid.c: 406: parameter |= dat2;
 35616  003CB6  5006               	movf	__parse_command_calibration@dat2,w,c
 35617  003CB8  120A               	iorwf	__parse_command_calibration@parameter,f,c
 35618                           
 35619                           ;app_device_custom_hid.c: 408: switch(item & 0x0F)
 35620  003CBA  D03F               	goto	l13186
 35621  003CBC                     l13180:
 35622                           
 35623                           ;app_device_custom_hid.c: 412: calibrationParameters[item>>4].Offset = parameter;
 35624  003CBC  C004  F008         	movff	__parse_command_calibration@item,??__parse_command_calibration
 35625  003CC0  3A08               	swapf	??__parse_command_calibration,f,c
 35626  003CC2  0E0F               	movlw	15
 35627  003CC4  1608               	andwf	??__parse_command_calibration,f,c
 35628  003CC6  5008               	movf	??__parse_command_calibration,w,c
 35629  003CC8  0D0C               	mullw	12
 35630  003CCA  0E05               	movlw	5
 35631  003CCC  26F3               	addwf	prodl,f,c
 35632  003CCE  0E00               	movlw	0
 35633  003CD0  22F4               	addwfc	prodh,f,c
 35634  003CD2  0E10               	movlw	low _calibrationParameters
 35635  003CD4  24F3               	addwf	prodl,w,c
 35636  003CD6  6ED9               	movwf	fsr2l,c
 35637  003CD8  0E02               	movlw	high _calibrationParameters
 35638  003CDA  20F4               	addwfc	prodh,w,c
 35639  003CDC  6EDA               	movwf	fsr2h,c
 35640  003CDE  C00A  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 35641  003CE2  C00B  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 35642                           
 35643                           ;app_device_custom_hid.c: 413: break;
 35644  003CE6  D055               	goto	l13204
 35645  003CE8                     l13182:
 35646                           
 35647                           ;app_device_custom_hid.c: 416: calibrationParameters[item>>4].Multiplier = parameter;
 35648  003CE8  C004  F008         	movff	__parse_command_calibration@item,??__parse_command_calibration
 35649  003CEC  3A08               	swapf	??__parse_command_calibration,f,c
 35650  003CEE  0E0F               	movlw	15
 35651  003CF0  1608               	andwf	??__parse_command_calibration,f,c
 35652  003CF2  5008               	movf	??__parse_command_calibration,w,c
 35653  003CF4  0D0C               	mullw	12
 35654  003CF6  0E07               	movlw	7
 35655  003CF8  26F3               	addwf	prodl,f,c
 35656  003CFA  0E00               	movlw	0
 35657  003CFC  22F4               	addwfc	prodh,f,c
 35658  003CFE  0E10               	movlw	low _calibrationParameters
 35659  003D00  24F3               	addwf	prodl,w,c
 35660  003D02  6ED9               	movwf	fsr2l,c
 35661  003D04  0E02               	movlw	high _calibrationParameters
 35662  003D06  20F4               	addwfc	prodh,w,c
 35663  003D08  6EDA               	movwf	fsr2h,c
 35664  003D0A  C00A  FFDE         	movff	__parse_command_calibration@parameter,postinc2
 35665  003D0E  C00B  FFDD         	movff	__parse_command_calibration@parameter+1,postdec2
 35666                           
 35667                           ;app_device_custom_hid.c: 417: calibrationParameters[item>>4].Shift = dat3;
 35668  003D12  C004  F008         	movff	__parse_command_calibration@item,??__parse_command_calibration
 35669  003D16  3A08               	swapf	??__parse_command_calibration,f,c
 35670  003D18  0E0F               	movlw	15
 35671  003D1A  1608               	andwf	??__parse_command_calibration,f,c
 35672  003D1C  5008               	movf	??__parse_command_calibration,w,c
 35673  003D1E  0D0C               	mullw	12
 35674  003D20  0E09               	movlw	9
 35675  003D22  26F3               	addwf	prodl,f,c
 35676  003D24  0E00               	movlw	0
 35677  003D26  22F4               	addwfc	prodh,f,c
 35678  003D28  0E10               	movlw	low _calibrationParameters
 35679  003D2A  24F3               	addwf	prodl,w,c
 35680  003D2C  6ED9               	movwf	fsr2l,c
 35681  003D2E  0E02               	movlw	high _calibrationParameters
 35682  003D30  20F4               	addwfc	prodh,w,c
 35683  003D32  6EDA               	movwf	fsr2h,c
 35684  003D34  C007  FFDF         	movff	__parse_command_calibration@dat3,indf2
 35685                           
 35686                           ;app_device_custom_hid.c: 419: }
 35687                           
 35688                           ;app_device_custom_hid.c: 418: break;
 35689  003D38  D02C               	goto	l13204
 35690  003D3A                     l13186:
 35691  003D3A  5004               	movf	__parse_command_calibration@item,w,c
 35692  003D3C  0B0F               	andlw	15
 35693  003D3E  6E08               	movwf	??__parse_command_calibration& (0+255),c
 35694  003D40  6A09               	clrf	(??__parse_command_calibration+1)& (0+255),c
 35695                           
 35696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35697                           ; Switch size 1, requested type "space"
 35698                           ; Number of cases is 1, Range of values is 0 to 0
 35699                           ; switch strategies available:
 35700                           ; Name         Instructions Cycles
 35701                           ; simple_byte            4     3 (average)
 35702                           ;	Chosen strategy is simple_byte
 35703  003D42  5009               	movf	??__parse_command_calibration+1,w,c
 35704  003D44  0A00               	xorlw	0	; case 0
 35705  003D46  A4D8               	btfss	status,2,c
 35706  003D48  D024               	goto	l13204
 35707                           
 35708                           ; Switch size 1, requested type "space"
 35709                           ; Number of cases is 2, Range of values is 0 to 1
 35710                           ; switch strategies available:
 35711                           ; Name         Instructions Cycles
 35712                           ; simple_byte            7     4 (average)
 35713                           ;	Chosen strategy is simple_byte
 35714  003D4A  5008               	movf	??__parse_command_calibration,w,c
 35715  003D4C  0A00               	xorlw	0	; case 0
 35716  003D4E  B4D8               	btfsc	status,2,c
 35717  003D50  D7B5               	goto	l13180
 35718  003D52  0A01               	xorlw	1	; case 1
 35719  003D54  B4D8               	btfsc	status,2,c
 35720  003D56  D7C8               	goto	l13182
 35721                           
 35722                           ;app_device_custom_hid.c: 421: switch((calibrationIndex_t) item>>4)
 35723  003D58  D01C               	goto	l13204
 35724  003D5A                     l13188:
 35725                           
 35726                           ;app_device_custom_hid.c: 424: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_VOLTAGE);
 35727  003D5A  0E02               	movlw	2
 35728  003D5C  ECDC  F035         	call	_schedule_eeprom_write_task
 35729                           
 35730                           ;app_device_custom_hid.c: 425: break;
 35731  003D60  0012               	return	
 35732  003D62                     l13190:
 35733                           
 35734                           ;app_device_custom_hid.c: 427: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_VOLTAGE);
 35735  003D62  0E03               	movlw	3
 35736  003D64  ECDC  F035         	call	_schedule_eeprom_write_task
 35737                           
 35738                           ;app_device_custom_hid.c: 428: break;
 35739  003D68  0012               	return	
 35740  003D6A                     l13192:
 35741                           
 35742                           ;app_device_custom_hid.c: 430: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          INPUT_CURRENT);
 35743  003D6A  0E04               	movlw	4
 35744  003D6C  ECDC  F035         	call	_schedule_eeprom_write_task
 35745                           
 35746                           ;app_device_custom_hid.c: 431: break;
 35747  003D70  0012               	return	
 35748  003D72                     l13194:
 35749                           
 35750                           ;app_device_custom_hid.c: 433: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          OUTPUT_CURRENT);
 35751  003D72  0E05               	movlw	5
 35752  003D74  ECDC  F035         	call	_schedule_eeprom_write_task
 35753                           
 35754                           ;app_device_custom_hid.c: 434: break;
 35755  003D78  0012               	return	
 35756  003D7A                     l13196:
 35757                           
 35758                           ;app_device_custom_hid.c: 436: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          ONBOARD_TEMPERATURE);
 35759  003D7A  0E06               	movlw	6
 35760  003D7C  ECDC  F035         	call	_schedule_eeprom_write_task
 35761                           
 35762                           ;app_device_custom_hid.c: 437: break;
 35763  003D80  0012               	return	
 35764  003D82                     l13198:
 35765                           
 35766                           ;app_device_custom_hid.c: 439: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_1);
 35767  003D82  0E07               	movlw	7
 35768  003D84  ECDC  F035         	call	_schedule_eeprom_write_task
 35769                           
 35770                           ;app_device_custom_hid.c: 440: break;
 35771  003D88  0012               	return	
 35772  003D8A                     l13200:
 35773                           
 35774                           ;app_device_custom_hid.c: 442: schedule_eeprom_write_task(EEPROM_WRITE_TASK_CALIBRATION_
      +                          EXTERNAL_TEMPERATURE_2);
 35775  003D8A  0E08               	movlw	8
 35776  003D8C  ECDC  F035         	call	_schedule_eeprom_write_task
 35777                           
 35778                           ;app_device_custom_hid.c: 444: }
 35779                           
 35780                           ;app_device_custom_hid.c: 443: break;
 35781  003D90  0012               	return	
 35782  003D92                     l13204:
 35783  003D92  3804               	swapf	__parse_command_calibration@item,w,c
 35784  003D94  0B0F               	andlw	15
 35785  003D96  6E08               	movwf	??__parse_command_calibration& (0+255),c
 35786  003D98  6A09               	clrf	(??__parse_command_calibration+1)& (0+255),c
 35787                           
 35788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35789                           ; Switch size 1, requested type "space"
 35790                           ; Number of cases is 1, Range of values is 0 to 0
 35791                           ; switch strategies available:
 35792                           ; Name         Instructions Cycles
 35793                           ; simple_byte            4     3 (average)
 35794                           ;	Chosen strategy is simple_byte
 35795  003D9A  5009               	movf	??__parse_command_calibration+1,w,c
 35796  003D9C  0A00               	xorlw	0	; case 0
 35797  003D9E  A4D8               	btfss	status,2,c
 35798  003DA0  0012               	return	
 35799                           
 35800                           ; Switch size 1, requested type "space"
 35801                           ; Number of cases is 7, Range of values is 0 to 6
 35802                           ; switch strategies available:
 35803                           ; Name         Instructions Cycles
 35804                           ; simple_byte           22    12 (average)
 35805                           ;	Chosen strategy is simple_byte
 35806  003DA2  5008               	movf	??__parse_command_calibration,w,c
 35807  003DA4  0A00               	xorlw	0	; case 0
 35808  003DA6  B4D8               	btfsc	status,2,c
 35809  003DA8  D7D8               	goto	l13188
 35810  003DAA  0A01               	xorlw	1	; case 1
 35811  003DAC  B4D8               	btfsc	status,2,c
 35812  003DAE  D7D9               	goto	l13190
 35813  003DB0  0A03               	xorlw	3	; case 2
 35814  003DB2  B4D8               	btfsc	status,2,c
 35815  003DB4  D7DA               	goto	l13192
 35816  003DB6  0A01               	xorlw	1	; case 3
 35817  003DB8  B4D8               	btfsc	status,2,c
 35818  003DBA  D7DB               	goto	l13194
 35819  003DBC  0A07               	xorlw	7	; case 4
 35820  003DBE  B4D8               	btfsc	status,2,c
 35821  003DC0  D7DC               	goto	l13196
 35822  003DC2  0A01               	xorlw	1	; case 5
 35823  003DC4  B4D8               	btfsc	status,2,c
 35824  003DC6  D7DD               	goto	l13198
 35825  003DC8  0A03               	xorlw	3	; case 6
 35826  003DCA  A4D8               	btfss	status,2,c
 35827  003DCC  0012               	return	
 35828  003DCE  D7DD               	goto	l13200
 35829  003DD0                     __end_of__parse_command_calibration:
 35830                           	opt stack 0
 35831                           tosu	equ	0xFFF
 35832                           tosh	equ	0xFFE
 35833                           tosl	equ	0xFFD
 35834                           pclath	equ	0xFFA
 35835                           tblptru	equ	0xFF8
 35836                           tblptrh	equ	0xFF7
 35837                           tblptrl	equ	0xFF6
 35838                           tablat	equ	0xFF5
 35839                           prodh	equ	0xFF4
 35840                           prodl	equ	0xFF3
 35841                           intcon	equ	0xFF2
 35842                           intcon2	equ	0xFF1
 35843                           intcon3	equ	0xFF0
 35844                           indf0	equ	0xFEF
 35845                           postinc0	equ	0xFEE
 35846                           fsr0h	equ	0xFEA
 35847                           fsr0l	equ	0xFE9
 35848                           wreg	equ	0xFE8
 35849                           indf1	equ	0xFE7
 35850                           postdec1	equ	0xFE5
 35851                           plusw1	equ	0xFE3
 35852                           fsr1h	equ	0xFE2
 35853                           fsr1l	equ	0xFE1
 35854                           indf2	equ	0xFDF
 35855                           postinc2	equ	0xFDE
 35856                           postdec2	equ	0xFDD
 35857                           plusw2	equ	0xFDB
 35858                           fsr2h	equ	0xFDA
 35859                           fsr2l	equ	0xFD9
 35860                           status	equ	0xFD8
 35861                           
 35862 ;; *************** function _schedule_eeprom_write_task *****************
 35863 ;; Defined at:
 35864 ;;		line 718 in file "i2c.c"
 35865 ;; Parameters:    Size  Location     Type
 35866 ;;  task            1    wreg     enum E8218
 35867 ;; Auto vars:     Size  Location     Type
 35868 ;;  task            1    1[COMRAM] enum E8218
 35869 ;;  idx             1    2[COMRAM] unsigned char 
 35870 ;; Return value:  Size  Location     Type
 35871 ;;                  1    wreg      void 
 35872 ;; Registers used:
 35873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35874 ;; Tracked objects:
 35875 ;;		On entry : 0/0
 35876 ;;		On exit  : 0/0
 35877 ;;		Unchanged: 0/0
 35878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35882 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35883 ;;Total ram usage:        3 bytes
 35884 ;; Hardware stack levels used:    1
 35885 ;; This function calls:
 35886 ;;		Nothing
 35887 ;; This function is called by:
 35888 ;;		__parse_command_calibration
 35889 ;;		_i2c_eeprom_read_calibration
 35890 ;; This function uses a non-reentrant model
 35891 ;;
 35892                           
 35893                           	psect	text174
 35894  006BB8                     __ptext174:
 35895                           	opt stack 0
 35896  006BB8                     _schedule_eeprom_write_task:
 35897                           	opt stack 28
 35898                           
 35899                           ;incstack = 0
 35900                           ;schedule_eeprom_write_task@task stored from wreg
 35901  006BB8  6E02               	movwf	schedule_eeprom_write_task@task,c
 35902                           
 35903                           ;i2c.c: 720: uint8_t idx;
 35904                           ;i2c.c: 722: for(idx=task_list_read_index; idx!=task_list_write_index; idx=(idx+1) & 0x0
      +                          F)
 35905  006BBA  C185  F003         	movff	_task_list_read_index,schedule_eeprom_write_task@idx
 35906  006BBE  D00F               	goto	l1449
 35907  006BC0                     l12062:
 35908                           
 35909                           ;i2c.c: 723: {
 35910                           ;i2c.c: 724: if (task_list[idx] == task)
 35911  006BC0  5003               	movf	schedule_eeprom_write_task@idx,w,c
 35912  006BC2  0D01               	mullw	1
 35913  006BC4  0E00               	movlw	low _task_list
 35914  006BC6  24F3               	addwf	prodl,w,c
 35915  006BC8  6ED9               	movwf	fsr2l,c
 35916  006BCA  0E02               	movlw	high _task_list
 35917  006BCC  20F4               	addwfc	prodh,w,c
 35918  006BCE  6EDA               	movwf	fsr2h,c
 35919  006BD0  5002               	movf	schedule_eeprom_write_task@task,w,c
 35920  006BD2  18DE               	xorwf	postinc2,w,c
 35921  006BD4  B4D8               	btfsc	status,2,c
 35922  006BD6  0012               	return	
 35923                           
 35924                           ;i2c.c: 725: {
 35925                           ;i2c.c: 727: return;
 35926  006BD8  2803               	incf	schedule_eeprom_write_task@idx,w,c
 35927  006BDA  0B0F               	andlw	15
 35928  006BDC  6E03               	movwf	schedule_eeprom_write_task@idx,c
 35929  006BDE                     l1449:
 35930  006BDE  0101               	movlb	1	; () banked
 35931  006BE0  5184               	movf	_task_list_write_index& (0+255),w,b
 35932  006BE2  1803               	xorwf	schedule_eeprom_write_task@idx,w,c
 35933  006BE4  A4D8               	btfss	status,2,c
 35934  006BE6  D7EC               	goto	l12062
 35935                           
 35936                           ; BSR set to: 1
 35937                           ;i2c.c: 728: }
 35938                           ;i2c.c: 729: }
 35939                           ;i2c.c: 731: task_list[task_list_write_index] = task;
 35940                           
 35941                           ; BSR set to: 1
 35942  006BE8  0101               	movlb	1	; () banked
 35943  006BEA  5184               	movf	_task_list_write_index& (0+255),w,b
 35944  006BEC  0D01               	mullw	1
 35945  006BEE  0E00               	movlw	low _task_list
 35946  006BF0  24F3               	addwf	prodl,w,c
 35947  006BF2  6ED9               	movwf	fsr2l,c
 35948  006BF4  0E02               	movlw	high _task_list
 35949  006BF6  20F4               	addwfc	prodh,w,c
 35950  006BF8  6EDA               	movwf	fsr2h,c
 35951  006BFA  C002  FFDF         	movff	schedule_eeprom_write_task@task,indf2
 35952                           
 35953                           ; BSR set to: 1
 35954                           ;i2c.c: 732: ++task_list_write_index;
 35955  006BFE  0101               	movlb	1	; () banked
 35956  006C00  2B84               	incf	_task_list_write_index& (0+255),f,b
 35957                           
 35958                           ; BSR set to: 1
 35959                           ;i2c.c: 733: task_list_write_index &= 0x0F;
 35960  006C02  0E0F               	movlw	15
 35961  006C04  0101               	movlb	1	; () banked
 35962  006C06  1784               	andwf	_task_list_write_index& (0+255),f,b
 35963  006C08  0012               	return		;funcret
 35964  006C0A                     __end_of_schedule_eeprom_write_task:
 35965                           	opt stack 0
 35966                           tosu	equ	0xFFF
 35967                           tosh	equ	0xFFE
 35968                           tosl	equ	0xFFD
 35969                           pclath	equ	0xFFA
 35970                           tblptru	equ	0xFF8
 35971                           tblptrh	equ	0xFF7
 35972                           tblptrl	equ	0xFF6
 35973                           tablat	equ	0xFF5
 35974                           prodh	equ	0xFF4
 35975                           prodl	equ	0xFF3
 35976                           intcon	equ	0xFF2
 35977                           intcon2	equ	0xFF1
 35978                           intcon3	equ	0xFF0
 35979                           indf0	equ	0xFEF
 35980                           postinc0	equ	0xFEE
 35981                           fsr0h	equ	0xFEA
 35982                           fsr0l	equ	0xFE9
 35983                           wreg	equ	0xFE8
 35984                           indf1	equ	0xFE7
 35985                           postdec1	equ	0xFE5
 35986                           plusw1	equ	0xFE3
 35987                           fsr1h	equ	0xFE2
 35988                           fsr1l	equ	0xFE1
 35989                           indf2	equ	0xFDF
 35990                           postinc2	equ	0xFDE
 35991                           postdec2	equ	0xFDD
 35992                           plusw2	equ	0xFDB
 35993                           fsr2h	equ	0xFDA
 35994                           fsr2l	equ	0xFD9
 35995                           status	equ	0xFD8
 35996                           
 35997 ;; *************** function __fill_buffer_get_status *****************
 35998 ;; Defined at:
 35999 ;;		line 268 in file "app_device_custom_hid.c"
 36000 ;; Parameters:    Size  Location     Type
 36001 ;;		None
 36002 ;; Auto vars:     Size  Location     Type
 36003 ;;		None
 36004 ;; Return value:  Size  Location     Type
 36005 ;;                  1    wreg      void 
 36006 ;; Registers used:
 36007 ;;		wreg, status,2, cstack
 36008 ;; Tracked objects:
 36009 ;;		On entry : 0/0
 36010 ;;		On exit  : 0/0
 36011 ;;		Unchanged: 0/0
 36012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36017 ;;Total ram usage:        0 bytes
 36018 ;; Hardware stack levels used:    1
 36019 ;; Hardware stack levels required when called:    1
 36020 ;; This function calls:
 36021 ;;		_rtcc_get_day
 36022 ;;		_rtcc_get_hours
 36023 ;;		_rtcc_get_minutes
 36024 ;;		_rtcc_get_month
 36025 ;;		_rtcc_get_seconds
 36026 ;;		_rtcc_get_year
 36027 ;;		_ui_get_status
 36028 ;; This function is called by:
 36029 ;;		_APP_DeviceCustomHIDTasks
 36030 ;; This function uses a non-reentrant model
 36031 ;;
 36032                           
 36033                           	psect	text175
 36034  006F4C                     __ptext175:
 36035                           	opt stack 0
 36036  006F4C                     __fill_buffer_get_status:
 36037                           	opt stack 28
 36038                           
 36039                           ;app_device_custom_hid.c: 271: ToSendDataBuffer[0] = COMMAND_GET_STATUS;
 36040                           
 36041                           ;incstack = 0
 36042  006F4C  0E10               	movlw	16
 36043  006F4E  0102               	movlb	2	; () banked
 36044  006F50  6FB4               	movwf	_ToSendDataBuffer& (0+255),b
 36045                           
 36046                           ; BSR set to: 2
 36047                           ;app_device_custom_hid.c: 275: ToSendDataBuffer[16] = os.display_mode;
 36048  006F52  C0E7  F2C4         	movff	_os+5,_ToSendDataBuffer+16	;volatile
 36049                           
 36050                           ; BSR set to: 2
 36051                           ;app_device_custom_hid.c: 277: ToSendDataBuffer[17] = rtcc_get_year();
 36052  006F56  EC39  F03C         	call	_rtcc_get_year	;wreg free
 36053  006F5A  0102               	movlb	2	; () banked
 36054  006F5C  6FC5               	movwf	(_ToSendDataBuffer+17)& (0+255),b
 36055                           
 36056                           ; BSR set to: 2
 36057                           ;app_device_custom_hid.c: 278: ToSendDataBuffer[18] = rtcc_get_month();
 36058  006F5E  EC4D  F03C         	call	_rtcc_get_month	;wreg free
 36059  006F62  0102               	movlb	2	; () banked
 36060  006F64  6FC6               	movwf	(_ToSendDataBuffer+18)& (0+255),b
 36061                           
 36062                           ; BSR set to: 2
 36063                           ;app_device_custom_hid.c: 279: ToSendDataBuffer[19] = rtcc_get_day();
 36064  006F66  EC6B  F03C         	call	_rtcc_get_day	;wreg free
 36065  006F6A  0102               	movlb	2	; () banked
 36066  006F6C  6FC7               	movwf	(_ToSendDataBuffer+19)& (0+255),b
 36067                           
 36068                           ; BSR set to: 2
 36069                           ;app_device_custom_hid.c: 280: ToSendDataBuffer[20] = rtcc_get_hours();
 36070  006F6E  EC61  F03C         	call	_rtcc_get_hours	;wreg free
 36071  006F72  0102               	movlb	2	; () banked
 36072  006F74  6FC8               	movwf	(_ToSendDataBuffer+20)& (0+255),b
 36073                           
 36074                           ; BSR set to: 2
 36075                           ;app_device_custom_hid.c: 281: ToSendDataBuffer[21] = rtcc_get_minutes();
 36076  006F76  EC57  F03C         	call	_rtcc_get_minutes	;wreg free
 36077  006F7A  0102               	movlb	2	; () banked
 36078  006F7C  6FC9               	movwf	(_ToSendDataBuffer+21)& (0+255),b
 36079                           
 36080                           ; BSR set to: 2
 36081                           ;app_device_custom_hid.c: 282: ToSendDataBuffer[22] = rtcc_get_seconds();
 36082  006F7E  EC43  F03C         	call	_rtcc_get_seconds	;wreg free
 36083  006F82  0102               	movlb	2	; () banked
 36084  006F84  6FCA               	movwf	(_ToSendDataBuffer+22)& (0+255),b
 36085                           
 36086                           ; BSR set to: 2
 36087                           ;app_device_custom_hid.c: 286: ToSendDataBuffer[41] = ui_get_status();
 36088  006F86  ECE8  F03C         	call	_ui_get_status	;wreg free
 36089  006F8A  0102               	movlb	2	; () banked
 36090  006F8C  6FDD               	movwf	(_ToSendDataBuffer+41)& (0+255),b
 36091                           
 36092                           ; BSR set to: 2
 36093                           ;app_device_custom_hid.c: 287: ToSendDataBuffer[42] = os.timeSlot;
 36094  006F8E  C0E4  F2DE         	movff	_os+2,_ToSendDataBuffer+42	;volatile
 36095                           
 36096                           ; BSR set to: 2
 36097  006F92  0012               	return		;funcret
 36098  006F94                     __end_of__fill_buffer_get_status:
 36099                           	opt stack 0
 36100                           tosu	equ	0xFFF
 36101                           tosh	equ	0xFFE
 36102                           tosl	equ	0xFFD
 36103                           pclath	equ	0xFFA
 36104                           tblptru	equ	0xFF8
 36105                           tblptrh	equ	0xFF7
 36106                           tblptrl	equ	0xFF6
 36107                           tablat	equ	0xFF5
 36108                           prodh	equ	0xFF4
 36109                           prodl	equ	0xFF3
 36110                           intcon	equ	0xFF2
 36111                           intcon2	equ	0xFF1
 36112                           intcon3	equ	0xFF0
 36113                           indf0	equ	0xFEF
 36114                           postinc0	equ	0xFEE
 36115                           fsr0h	equ	0xFEA
 36116                           fsr0l	equ	0xFE9
 36117                           wreg	equ	0xFE8
 36118                           indf1	equ	0xFE7
 36119                           postdec1	equ	0xFE5
 36120                           plusw1	equ	0xFE3
 36121                           fsr1h	equ	0xFE2
 36122                           fsr1l	equ	0xFE1
 36123                           indf2	equ	0xFDF
 36124                           postinc2	equ	0xFDE
 36125                           postdec2	equ	0xFDD
 36126                           plusw2	equ	0xFDB
 36127                           fsr2h	equ	0xFDA
 36128                           fsr2l	equ	0xFD9
 36129                           status	equ	0xFD8
 36130                           
 36131 ;; *************** function _ui_get_status *****************
 36132 ;; Defined at:
 36133 ;;		line 13 in file "ui.c"
 36134 ;; Parameters:    Size  Location     Type
 36135 ;;		None
 36136 ;; Auto vars:     Size  Location     Type
 36137 ;;		None
 36138 ;; Return value:  Size  Location     Type
 36139 ;;                  1    wreg      enum E9440
 36140 ;; Registers used:
 36141 ;;		wreg, status,2
 36142 ;; Tracked objects:
 36143 ;;		On entry : 0/0
 36144 ;;		On exit  : 0/0
 36145 ;;		Unchanged: 0/0
 36146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36151 ;;Total ram usage:        0 bytes
 36152 ;; Hardware stack levels used:    1
 36153 ;; This function calls:
 36154 ;;		Nothing
 36155 ;; This function is called by:
 36156 ;;		_main
 36157 ;;		__fill_buffer_get_status
 36158 ;; This function uses a non-reentrant model
 36159 ;;
 36160                           
 36161                           	psect	text176
 36162  0079D0                     __ptext176:
 36163                           	opt stack 0
 36164  0079D0                     _ui_get_status:
 36165                           	opt stack 30
 36166                           
 36167                           ;ui.c: 15: return userInterfaceStatus;
 36168                           
 36169                           ; BSR set to: 2
 36170                           ;incstack = 0
 36171  0079D0  0101               	movlb	1	; () banked
 36172  0079D2  5183               	movf	_userInterfaceStatus& (0+255),w,b
 36173  0079D4  0012               	return	
 36174  0079D6                     __end_of_ui_get_status:
 36175                           	opt stack 0
 36176                           tosu	equ	0xFFF
 36177                           tosh	equ	0xFFE
 36178                           tosl	equ	0xFFD
 36179                           pclath	equ	0xFFA
 36180                           tblptru	equ	0xFF8
 36181                           tblptrh	equ	0xFF7
 36182                           tblptrl	equ	0xFF6
 36183                           tablat	equ	0xFF5
 36184                           prodh	equ	0xFF4
 36185                           prodl	equ	0xFF3
 36186                           intcon	equ	0xFF2
 36187                           intcon2	equ	0xFF1
 36188                           intcon3	equ	0xFF0
 36189                           indf0	equ	0xFEF
 36190                           postinc0	equ	0xFEE
 36191                           fsr0h	equ	0xFEA
 36192                           fsr0l	equ	0xFE9
 36193                           wreg	equ	0xFE8
 36194                           indf1	equ	0xFE7
 36195                           postdec1	equ	0xFE5
 36196                           plusw1	equ	0xFE3
 36197                           fsr1h	equ	0xFE2
 36198                           fsr1l	equ	0xFE1
 36199                           indf2	equ	0xFDF
 36200                           postinc2	equ	0xFDE
 36201                           postdec2	equ	0xFDD
 36202                           plusw2	equ	0xFDB
 36203                           fsr2h	equ	0xFDA
 36204                           fsr2l	equ	0xFD9
 36205                           status	equ	0xFD8
 36206                           
 36207 ;; *************** function _rtcc_get_year *****************
 36208 ;; Defined at:
 36209 ;;		line 103 in file "rtcc.c"
 36210 ;; Parameters:    Size  Location     Type
 36211 ;;		None
 36212 ;; Auto vars:     Size  Location     Type
 36213 ;;		None
 36214 ;; Return value:  Size  Location     Type
 36215 ;;                  1    wreg      unsigned char 
 36216 ;; Registers used:
 36217 ;;		wreg, status,2
 36218 ;; Tracked objects:
 36219 ;;		On entry : 0/0
 36220 ;;		On exit  : 0/0
 36221 ;;		Unchanged: 0/0
 36222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36227 ;;Total ram usage:        0 bytes
 36228 ;; Hardware stack levels used:    1
 36229 ;; This function calls:
 36230 ;;		Nothing
 36231 ;; This function is called by:
 36232 ;;		__fill_buffer_get_status
 36233 ;;		_rtcc_write_eeprom
 36234 ;;		__number_of_days
 36235 ;;		_rtcc_get_year_decimal
 36236 ;;		_rtcc_increment_year
 36237 ;;		_rtcc_decrement_year
 36238 ;; This function uses a non-reentrant model
 36239 ;;
 36240                           
 36241                           	psect	text177
 36242  007872                     __ptext177:
 36243                           	opt stack 0
 36244  007872                     _rtcc_get_year:
 36245                           	opt stack 27
 36246                           
 36247                           ;rtcc.c: 105: RTCCFGbits.RTCPTR1 = 1;
 36248                           
 36249                           ; BSR set to: 1
 36250                           ;incstack = 0
 36251  007872  010F               	movlb	15	; () banked
 36252  007874  833F               	bsf	63,1,b	;volatile
 36253                           
 36254                           ;rtcc.c: 106: RTCCFGbits.RTCPTR0 = 1;
 36255  007876  010F               	movlb	15	; () banked
 36256  007878  813F               	bsf	63,0,b	;volatile
 36257  00787A                     l1909:
 36258                           
 36259                           ; BSR set to: 15
 36260  00787A  010F               	movlb	15	; () banked
 36261  00787C  B93F               	btfsc	63,4,b	;volatile
 36262  00787E  D7FD               	goto	l1909
 36263                           
 36264                           ; BSR set to: 15
 36265                           ;rtcc.c: 108: return RTCVALL;
 36266                           
 36267                           ; BSR set to: 15
 36268  007880  010F               	movlb	15	; () banked
 36269  007882  513A               	movf	58,w,b	;volatile
 36270  007884  0012               	return	
 36271  007886                     __end_of_rtcc_get_year:
 36272                           	opt stack 0
 36273                           tosu	equ	0xFFF
 36274                           tosh	equ	0xFFE
 36275                           tosl	equ	0xFFD
 36276                           pclath	equ	0xFFA
 36277                           tblptru	equ	0xFF8
 36278                           tblptrh	equ	0xFF7
 36279                           tblptrl	equ	0xFF6
 36280                           tablat	equ	0xFF5
 36281                           prodh	equ	0xFF4
 36282                           prodl	equ	0xFF3
 36283                           intcon	equ	0xFF2
 36284                           intcon2	equ	0xFF1
 36285                           intcon3	equ	0xFF0
 36286                           indf0	equ	0xFEF
 36287                           postinc0	equ	0xFEE
 36288                           fsr0h	equ	0xFEA
 36289                           fsr0l	equ	0xFE9
 36290                           wreg	equ	0xFE8
 36291                           indf1	equ	0xFE7
 36292                           postdec1	equ	0xFE5
 36293                           plusw1	equ	0xFE3
 36294                           fsr1h	equ	0xFE2
 36295                           fsr1l	equ	0xFE1
 36296                           indf2	equ	0xFDF
 36297                           postinc2	equ	0xFDE
 36298                           postdec2	equ	0xFDD
 36299                           plusw2	equ	0xFDB
 36300                           fsr2h	equ	0xFDA
 36301                           fsr2l	equ	0xFD9
 36302                           status	equ	0xFD8
 36303                           
 36304 ;; *************** function _rtcc_get_seconds *****************
 36305 ;; Defined at:
 36306 ;;		line 293 in file "rtcc.c"
 36307 ;; Parameters:    Size  Location     Type
 36308 ;;		None
 36309 ;; Auto vars:     Size  Location     Type
 36310 ;;		None
 36311 ;; Return value:  Size  Location     Type
 36312 ;;                  1    wreg      unsigned char 
 36313 ;; Registers used:
 36314 ;;		wreg, status,2
 36315 ;; Tracked objects:
 36316 ;;		On entry : 0/0
 36317 ;;		On exit  : 0/0
 36318 ;;		Unchanged: 0/0
 36319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36324 ;;Total ram usage:        0 bytes
 36325 ;; Hardware stack levels used:    1
 36326 ;; This function calls:
 36327 ;;		Nothing
 36328 ;; This function is called by:
 36329 ;;		__fill_buffer_get_status
 36330 ;;		_rtcc_write_eeprom
 36331 ;;		_rtcc_get_seconds_decimal
 36332 ;;		_rtcc_increment_seconds
 36333 ;;		_rtcc_decrement_seconds
 36334 ;; This function uses a non-reentrant model
 36335 ;;
 36336                           
 36337                           	psect	text178
 36338  007886                     __ptext178:
 36339                           	opt stack 0
 36340  007886                     _rtcc_get_seconds:
 36341                           	opt stack 27
 36342                           
 36343                           ;rtcc.c: 295: RTCCFGbits.RTCPTR1 = 0;
 36344                           
 36345                           ; BSR set to: 15
 36346                           ;incstack = 0
 36347  007886  010F               	movlb	15	; () banked
 36348  007888  933F               	bcf	63,1,b	;volatile
 36349                           
 36350                           ;rtcc.c: 296: RTCCFGbits.RTCPTR0 = 0;
 36351  00788A  010F               	movlb	15	; () banked
 36352  00788C  913F               	bcf	63,0,b	;volatile
 36353  00788E                     l1999:
 36354                           
 36355                           ; BSR set to: 15
 36356  00788E  010F               	movlb	15	; () banked
 36357  007890  B93F               	btfsc	63,4,b	;volatile
 36358  007892  D7FD               	goto	l1999
 36359                           
 36360                           ; BSR set to: 15
 36361                           ;rtcc.c: 298: return RTCVALL;
 36362                           
 36363                           ; BSR set to: 15
 36364  007894  010F               	movlb	15	; () banked
 36365  007896  513A               	movf	58,w,b	;volatile
 36366  007898  0012               	return	
 36367  00789A                     __end_of_rtcc_get_seconds:
 36368                           	opt stack 0
 36369                           tosu	equ	0xFFF
 36370                           tosh	equ	0xFFE
 36371                           tosl	equ	0xFFD
 36372                           pclath	equ	0xFFA
 36373                           tblptru	equ	0xFF8
 36374                           tblptrh	equ	0xFF7
 36375                           tblptrl	equ	0xFF6
 36376                           tablat	equ	0xFF5
 36377                           prodh	equ	0xFF4
 36378                           prodl	equ	0xFF3
 36379                           intcon	equ	0xFF2
 36380                           intcon2	equ	0xFF1
 36381                           intcon3	equ	0xFF0
 36382                           indf0	equ	0xFEF
 36383                           postinc0	equ	0xFEE
 36384                           fsr0h	equ	0xFEA
 36385                           fsr0l	equ	0xFE9
 36386                           wreg	equ	0xFE8
 36387                           indf1	equ	0xFE7
 36388                           postdec1	equ	0xFE5
 36389                           plusw1	equ	0xFE3
 36390                           fsr1h	equ	0xFE2
 36391                           fsr1l	equ	0xFE1
 36392                           indf2	equ	0xFDF
 36393                           postinc2	equ	0xFDE
 36394                           postdec2	equ	0xFDD
 36395                           plusw2	equ	0xFDB
 36396                           fsr2h	equ	0xFDA
 36397                           fsr2l	equ	0xFD9
 36398                           status	equ	0xFD8
 36399                           
 36400 ;; *************** function _rtcc_get_month *****************
 36401 ;; Defined at:
 36402 ;;		line 141 in file "rtcc.c"
 36403 ;; Parameters:    Size  Location     Type
 36404 ;;		None
 36405 ;; Auto vars:     Size  Location     Type
 36406 ;;		None
 36407 ;; Return value:  Size  Location     Type
 36408 ;;                  1    wreg      unsigned char 
 36409 ;; Registers used:
 36410 ;;		wreg, status,2
 36411 ;; Tracked objects:
 36412 ;;		On entry : 0/0
 36413 ;;		On exit  : 0/0
 36414 ;;		Unchanged: 0/0
 36415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36420 ;;Total ram usage:        0 bytes
 36421 ;; Hardware stack levels used:    1
 36422 ;; This function calls:
 36423 ;;		Nothing
 36424 ;; This function is called by:
 36425 ;;		__fill_buffer_get_status
 36426 ;;		_rtcc_write_eeprom
 36427 ;;		__number_of_days
 36428 ;;		_rtcc_get_month_decimal
 36429 ;;		_rtcc_increment_month
 36430 ;;		_rtcc_decrement_month
 36431 ;; This function uses a non-reentrant model
 36432 ;;
 36433                           
 36434                           	psect	text179
 36435  00789A                     __ptext179:
 36436                           	opt stack 0
 36437  00789A                     _rtcc_get_month:
 36438                           	opt stack 27
 36439                           
 36440                           ;rtcc.c: 143: RTCCFGbits.RTCPTR1 = 1;
 36441                           
 36442                           ; BSR set to: 15
 36443                           ;incstack = 0
 36444  00789A  010F               	movlb	15	; () banked
 36445  00789C  833F               	bsf	63,1,b	;volatile
 36446                           
 36447                           ;rtcc.c: 144: RTCCFGbits.RTCPTR0 = 0;
 36448  00789E  010F               	movlb	15	; () banked
 36449  0078A0  913F               	bcf	63,0,b	;volatile
 36450  0078A2                     l1927:
 36451                           
 36452                           ; BSR set to: 15
 36453  0078A2  010F               	movlb	15	; () banked
 36454  0078A4  B93F               	btfsc	63,4,b	;volatile
 36455  0078A6  D7FD               	goto	l1927
 36456                           
 36457                           ; BSR set to: 15
 36458                           ;rtcc.c: 146: return RTCVALH;
 36459                           
 36460                           ; BSR set to: 15
 36461  0078A8  010F               	movlb	15	; () banked
 36462  0078AA  513B               	movf	59,w,b	;volatile
 36463  0078AC  0012               	return	
 36464  0078AE                     __end_of_rtcc_get_month:
 36465                           	opt stack 0
 36466                           tosu	equ	0xFFF
 36467                           tosh	equ	0xFFE
 36468                           tosl	equ	0xFFD
 36469                           pclath	equ	0xFFA
 36470                           tblptru	equ	0xFF8
 36471                           tblptrh	equ	0xFF7
 36472                           tblptrl	equ	0xFF6
 36473                           tablat	equ	0xFF5
 36474                           prodh	equ	0xFF4
 36475                           prodl	equ	0xFF3
 36476                           intcon	equ	0xFF2
 36477                           intcon2	equ	0xFF1
 36478                           intcon3	equ	0xFF0
 36479                           indf0	equ	0xFEF
 36480                           postinc0	equ	0xFEE
 36481                           fsr0h	equ	0xFEA
 36482                           fsr0l	equ	0xFE9
 36483                           wreg	equ	0xFE8
 36484                           indf1	equ	0xFE7
 36485                           postdec1	equ	0xFE5
 36486                           plusw1	equ	0xFE3
 36487                           fsr1h	equ	0xFE2
 36488                           fsr1l	equ	0xFE1
 36489                           indf2	equ	0xFDF
 36490                           postinc2	equ	0xFDE
 36491                           postdec2	equ	0xFDD
 36492                           plusw2	equ	0xFDB
 36493                           fsr2h	equ	0xFDA
 36494                           fsr2l	equ	0xFD9
 36495                           status	equ	0xFD8
 36496                           
 36497 ;; *************** function _rtcc_get_minutes *****************
 36498 ;; Defined at:
 36499 ;;		line 255 in file "rtcc.c"
 36500 ;; Parameters:    Size  Location     Type
 36501 ;;		None
 36502 ;; Auto vars:     Size  Location     Type
 36503 ;;		None
 36504 ;; Return value:  Size  Location     Type
 36505 ;;                  1    wreg      unsigned char 
 36506 ;; Registers used:
 36507 ;;		wreg, status,2
 36508 ;; Tracked objects:
 36509 ;;		On entry : 0/0
 36510 ;;		On exit  : 0/0
 36511 ;;		Unchanged: 0/0
 36512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36517 ;;Total ram usage:        0 bytes
 36518 ;; Hardware stack levels used:    1
 36519 ;; This function calls:
 36520 ;;		Nothing
 36521 ;; This function is called by:
 36522 ;;		__fill_buffer_get_status
 36523 ;;		_rtcc_write_eeprom
 36524 ;;		_rtcc_get_minutes_decimal
 36525 ;;		_rtcc_increment_minutes
 36526 ;;		_rtcc_decrement_minutes
 36527 ;; This function uses a non-reentrant model
 36528 ;;
 36529                           
 36530                           	psect	text180
 36531  0078AE                     __ptext180:
 36532                           	opt stack 0
 36533  0078AE                     _rtcc_get_minutes:
 36534                           	opt stack 27
 36535                           
 36536                           ;rtcc.c: 257: RTCCFGbits.RTCPTR1 = 0;
 36537                           
 36538                           ; BSR set to: 15
 36539                           ;incstack = 0
 36540  0078AE  010F               	movlb	15	; () banked
 36541  0078B0  933F               	bcf	63,1,b	;volatile
 36542                           
 36543                           ;rtcc.c: 258: RTCCFGbits.RTCPTR0 = 0;
 36544  0078B2  010F               	movlb	15	; () banked
 36545  0078B4  913F               	bcf	63,0,b	;volatile
 36546  0078B6                     l1981:
 36547                           
 36548                           ; BSR set to: 15
 36549  0078B6  010F               	movlb	15	; () banked
 36550  0078B8  B93F               	btfsc	63,4,b	;volatile
 36551  0078BA  D7FD               	goto	l1981
 36552                           
 36553                           ; BSR set to: 15
 36554                           ;rtcc.c: 260: return RTCVALH;
 36555                           
 36556                           ; BSR set to: 15
 36557  0078BC  010F               	movlb	15	; () banked
 36558  0078BE  513B               	movf	59,w,b	;volatile
 36559  0078C0  0012               	return	
 36560  0078C2                     __end_of_rtcc_get_minutes:
 36561                           	opt stack 0
 36562                           tosu	equ	0xFFF
 36563                           tosh	equ	0xFFE
 36564                           tosl	equ	0xFFD
 36565                           pclath	equ	0xFFA
 36566                           tblptru	equ	0xFF8
 36567                           tblptrh	equ	0xFF7
 36568                           tblptrl	equ	0xFF6
 36569                           tablat	equ	0xFF5
 36570                           prodh	equ	0xFF4
 36571                           prodl	equ	0xFF3
 36572                           intcon	equ	0xFF2
 36573                           intcon2	equ	0xFF1
 36574                           intcon3	equ	0xFF0
 36575                           indf0	equ	0xFEF
 36576                           postinc0	equ	0xFEE
 36577                           fsr0h	equ	0xFEA
 36578                           fsr0l	equ	0xFE9
 36579                           wreg	equ	0xFE8
 36580                           indf1	equ	0xFE7
 36581                           postdec1	equ	0xFE5
 36582                           plusw1	equ	0xFE3
 36583                           fsr1h	equ	0xFE2
 36584                           fsr1l	equ	0xFE1
 36585                           indf2	equ	0xFDF
 36586                           postinc2	equ	0xFDE
 36587                           postdec2	equ	0xFDD
 36588                           plusw2	equ	0xFDB
 36589                           fsr2h	equ	0xFDA
 36590                           fsr2l	equ	0xFD9
 36591                           status	equ	0xFD8
 36592                           
 36593 ;; *************** function _rtcc_get_hours *****************
 36594 ;; Defined at:
 36595 ;;		line 217 in file "rtcc.c"
 36596 ;; Parameters:    Size  Location     Type
 36597 ;;		None
 36598 ;; Auto vars:     Size  Location     Type
 36599 ;;		None
 36600 ;; Return value:  Size  Location     Type
 36601 ;;                  1    wreg      unsigned char 
 36602 ;; Registers used:
 36603 ;;		wreg, status,2
 36604 ;; Tracked objects:
 36605 ;;		On entry : 0/0
 36606 ;;		On exit  : 0/0
 36607 ;;		Unchanged: 0/0
 36608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36613 ;;Total ram usage:        0 bytes
 36614 ;; Hardware stack levels used:    1
 36615 ;; This function calls:
 36616 ;;		Nothing
 36617 ;; This function is called by:
 36618 ;;		__fill_buffer_get_status
 36619 ;;		_rtcc_write_eeprom
 36620 ;;		_rtcc_get_hours_decimal
 36621 ;;		_rtcc_increment_hours
 36622 ;;		_rtcc_decrement_hours
 36623 ;; This function uses a non-reentrant model
 36624 ;;
 36625                           
 36626                           	psect	text181
 36627  0078C2                     __ptext181:
 36628                           	opt stack 0
 36629  0078C2                     _rtcc_get_hours:
 36630                           	opt stack 27
 36631                           
 36632                           ;rtcc.c: 219: RTCCFGbits.RTCPTR1 = 0;
 36633                           
 36634                           ; BSR set to: 15
 36635                           ;incstack = 0
 36636  0078C2  010F               	movlb	15	; () banked
 36637  0078C4  933F               	bcf	63,1,b	;volatile
 36638                           
 36639                           ;rtcc.c: 220: RTCCFGbits.RTCPTR0 = 1;
 36640  0078C6  010F               	movlb	15	; () banked
 36641  0078C8  813F               	bsf	63,0,b	;volatile
 36642  0078CA                     l1963:
 36643                           
 36644                           ; BSR set to: 15
 36645  0078CA  010F               	movlb	15	; () banked
 36646  0078CC  B93F               	btfsc	63,4,b	;volatile
 36647  0078CE  D7FD               	goto	l1963
 36648                           
 36649                           ; BSR set to: 15
 36650                           ;rtcc.c: 222: return RTCVALL;
 36651                           
 36652                           ; BSR set to: 15
 36653  0078D0  010F               	movlb	15	; () banked
 36654  0078D2  513A               	movf	58,w,b	;volatile
 36655  0078D4  0012               	return	
 36656  0078D6                     __end_of_rtcc_get_hours:
 36657                           	opt stack 0
 36658                           tosu	equ	0xFFF
 36659                           tosh	equ	0xFFE
 36660                           tosl	equ	0xFFD
 36661                           pclath	equ	0xFFA
 36662                           tblptru	equ	0xFF8
 36663                           tblptrh	equ	0xFF7
 36664                           tblptrl	equ	0xFF6
 36665                           tablat	equ	0xFF5
 36666                           prodh	equ	0xFF4
 36667                           prodl	equ	0xFF3
 36668                           intcon	equ	0xFF2
 36669                           intcon2	equ	0xFF1
 36670                           intcon3	equ	0xFF0
 36671                           indf0	equ	0xFEF
 36672                           postinc0	equ	0xFEE
 36673                           fsr0h	equ	0xFEA
 36674                           fsr0l	equ	0xFE9
 36675                           wreg	equ	0xFE8
 36676                           indf1	equ	0xFE7
 36677                           postdec1	equ	0xFE5
 36678                           plusw1	equ	0xFE3
 36679                           fsr1h	equ	0xFE2
 36680                           fsr1l	equ	0xFE1
 36681                           indf2	equ	0xFDF
 36682                           postinc2	equ	0xFDE
 36683                           postdec2	equ	0xFDD
 36684                           plusw2	equ	0xFDB
 36685                           fsr2h	equ	0xFDA
 36686                           fsr2l	equ	0xFD9
 36687                           status	equ	0xFD8
 36688                           
 36689 ;; *************** function _rtcc_get_day *****************
 36690 ;; Defined at:
 36691 ;;		line 179 in file "rtcc.c"
 36692 ;; Parameters:    Size  Location     Type
 36693 ;;		None
 36694 ;; Auto vars:     Size  Location     Type
 36695 ;;		None
 36696 ;; Return value:  Size  Location     Type
 36697 ;;                  1    wreg      unsigned char 
 36698 ;; Registers used:
 36699 ;;		wreg, status,2
 36700 ;; Tracked objects:
 36701 ;;		On entry : 0/0
 36702 ;;		On exit  : 0/0
 36703 ;;		Unchanged: 0/0
 36704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36709 ;;Total ram usage:        0 bytes
 36710 ;; Hardware stack levels used:    1
 36711 ;; This function calls:
 36712 ;;		Nothing
 36713 ;; This function is called by:
 36714 ;;		__fill_buffer_get_status
 36715 ;;		_rtcc_write_eeprom
 36716 ;;		_rtcc_correct_day
 36717 ;;		_rtcc_get_day_decimal
 36718 ;;		_rtcc_increment_day
 36719 ;;		_rtcc_decrement_day
 36720 ;; This function uses a non-reentrant model
 36721 ;;
 36722                           
 36723                           	psect	text182
 36724  0078D6                     __ptext182:
 36725                           	opt stack 0
 36726  0078D6                     _rtcc_get_day:
 36727                           	opt stack 27
 36728                           
 36729                           ;rtcc.c: 181: RTCCFGbits.RTCPTR1 = 1;
 36730                           
 36731                           ; BSR set to: 15
 36732                           ;incstack = 0
 36733  0078D6  010F               	movlb	15	; () banked
 36734  0078D8  833F               	bsf	63,1,b	;volatile
 36735                           
 36736                           ;rtcc.c: 182: RTCCFGbits.RTCPTR0 = 0;
 36737  0078DA  010F               	movlb	15	; () banked
 36738  0078DC  913F               	bcf	63,0,b	;volatile
 36739  0078DE                     l1945:
 36740                           
 36741                           ; BSR set to: 15
 36742  0078DE  010F               	movlb	15	; () banked
 36743  0078E0  B93F               	btfsc	63,4,b	;volatile
 36744  0078E2  D7FD               	goto	l1945
 36745                           
 36746                           ; BSR set to: 15
 36747                           ;rtcc.c: 184: return RTCVALL;
 36748                           
 36749                           ; BSR set to: 15
 36750  0078E4  010F               	movlb	15	; () banked
 36751  0078E6  513A               	movf	58,w,b	;volatile
 36752  0078E8  0012               	return	
 36753  0078EA                     __end_of_rtcc_get_day:
 36754                           	opt stack 0
 36755                           tosu	equ	0xFFF
 36756                           tosh	equ	0xFFE
 36757                           tosl	equ	0xFFD
 36758                           pclath	equ	0xFFA
 36759                           tblptru	equ	0xFF8
 36760                           tblptrh	equ	0xFF7
 36761                           tblptrl	equ	0xFF6
 36762                           tablat	equ	0xFF5
 36763                           prodh	equ	0xFF4
 36764                           prodl	equ	0xFF3
 36765                           intcon	equ	0xFF2
 36766                           intcon2	equ	0xFF1
 36767                           intcon3	equ	0xFF0
 36768                           indf0	equ	0xFEF
 36769                           postinc0	equ	0xFEE
 36770                           fsr0h	equ	0xFEA
 36771                           fsr0l	equ	0xFE9
 36772                           wreg	equ	0xFE8
 36773                           indf1	equ	0xFE7
 36774                           postdec1	equ	0xFE5
 36775                           plusw1	equ	0xFE3
 36776                           fsr1h	equ	0xFE2
 36777                           fsr1l	equ	0xFE1
 36778                           indf2	equ	0xFDF
 36779                           postinc2	equ	0xFDE
 36780                           postdec2	equ	0xFDD
 36781                           plusw2	equ	0xFDB
 36782                           fsr2h	equ	0xFDA
 36783                           fsr2l	equ	0xFD9
 36784                           status	equ	0xFD8
 36785                           
 36786 ;; *************** function __fill_buffer_get_display2 *****************
 36787 ;; Defined at:
 36788 ;;		line 313 in file "app_device_custom_hid.c"
 36789 ;; Parameters:    Size  Location     Type
 36790 ;;		None
 36791 ;; Auto vars:     Size  Location     Type
 36792 ;;  position        1    7[COMRAM] unsigned char 
 36793 ;;  line            1    6[COMRAM] unsigned char 
 36794 ;;  cntr            1    5[COMRAM] unsigned char 
 36795 ;; Return value:  Size  Location     Type
 36796 ;;                  1    wreg      void 
 36797 ;; Registers used:
 36798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36799 ;; Tracked objects:
 36800 ;;		On entry : 0/0
 36801 ;;		On exit  : 0/0
 36802 ;;		Unchanged: 0/0
 36803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36805 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36807 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36808 ;;Total ram usage:        4 bytes
 36809 ;; Hardware stack levels used:    1
 36810 ;; Hardware stack levels required when called:    1
 36811 ;; This function calls:
 36812 ;;		_display_get_character
 36813 ;; This function is called by:
 36814 ;;		_APP_DeviceCustomHIDTasks
 36815 ;; This function uses a non-reentrant model
 36816 ;;
 36817                           
 36818                           	psect	text183
 36819  006D92                     __ptext183:
 36820                           	opt stack 0
 36821  006D92                     __fill_buffer_get_display2:
 36822                           	opt stack 28
 36823                           
 36824                           ;app_device_custom_hid.c: 315: uint8_t cntr;
 36825                           ;app_device_custom_hid.c: 316: uint8_t line;
 36826                           ;app_device_custom_hid.c: 317: uint8_t position;
 36827                           ;app_device_custom_hid.c: 320: ToSendDataBuffer[0] = COMMAND_GET_DISPLAY_2;
 36828                           
 36829                           ; BSR set to: 15
 36830                           ;incstack = 0
 36831  006D92  0E12               	movlw	18
 36832  006D94  0102               	movlb	2	; () banked
 36833  006D96  6FB4               	movwf	_ToSendDataBuffer& (0+255),b
 36834                           
 36835                           ;app_device_custom_hid.c: 323: cntr = 1;
 36836  006D98  0E01               	movlw	1
 36837  006D9A  6E06               	movwf	__fill_buffer_get_display2@cntr,c
 36838                           
 36839                           ;app_device_custom_hid.c: 324: for(line=2; line<4; ++line)
 36840  006D9C  0E02               	movlw	2
 36841  006D9E  6E07               	movwf	__fill_buffer_get_display2@line,c
 36842  006DA0                     l13102:
 36843                           
 36844                           ; BSR set to: 2
 36845  006DA0  0E03               	movlw	3
 36846  006DA2  6407               	cpfsgt	__fill_buffer_get_display2@line,c
 36847  006DA4  D001               	goto	l13106
 36848  006DA6  0012               	return	
 36849  006DA8                     l13106:
 36850                           
 36851                           ;app_device_custom_hid.c: 325: {
 36852                           ;app_device_custom_hid.c: 326: for(position=0; position<20; ++position)
 36853  006DA8  0E00               	movlw	0
 36854  006DAA  6E08               	movwf	__fill_buffer_get_display2@position,c
 36855  006DAC                     l13108:
 36856  006DAC  0E13               	movlw	19
 36857  006DAE  6408               	cpfsgt	__fill_buffer_get_display2@position,c
 36858  006DB0  D001               	goto	l13112
 36859  006DB2  D013               	goto	l13120
 36860  006DB4                     l13112:
 36861                           
 36862                           ;app_device_custom_hid.c: 327: {
 36863                           ;app_device_custom_hid.c: 328: ToSendDataBuffer[cntr] = display_get_character(line, posi
      +                          tion);
 36864  006DB4  C008  F001         	movff	__fill_buffer_get_display2@position,display_get_character@position
 36865  006DB8  5007               	movf	__fill_buffer_get_display2@line,w,c
 36866  006DBA  ECA1  F03A         	call	_display_get_character
 36867  006DBE  6E05               	movwf	??__fill_buffer_get_display2& (0+255),c
 36868  006DC0  5006               	movf	__fill_buffer_get_display2@cntr,w,c
 36869  006DC2  0D01               	mullw	1
 36870  006DC4  0EB4               	movlw	low _ToSendDataBuffer
 36871  006DC6  24F3               	addwf	prodl,w,c
 36872  006DC8  6ED9               	movwf	fsr2l,c
 36873  006DCA  0E02               	movlw	high _ToSendDataBuffer
 36874  006DCC  20F4               	addwfc	prodh,w,c
 36875  006DCE  6EDA               	movwf	fsr2h,c
 36876  006DD0  C005  FFDF         	movff	??__fill_buffer_get_display2,indf2
 36877                           
 36878                           ;app_device_custom_hid.c: 329: ++cntr;
 36879  006DD4  2A06               	incf	__fill_buffer_get_display2@cntr,f,c
 36880  006DD6  2A08               	incf	__fill_buffer_get_display2@position,f,c
 36881  006DD8  D7E9               	goto	l13108
 36882  006DDA                     l13120:
 36883  006DDA  2A07               	incf	__fill_buffer_get_display2@line,f,c
 36884  006DDC  D7E1               	goto	l13102
 36885  006DDE                     __end_of__fill_buffer_get_display2:
 36886                           	opt stack 0
 36887                           tosu	equ	0xFFF
 36888                           tosh	equ	0xFFE
 36889                           tosl	equ	0xFFD
 36890                           pclath	equ	0xFFA
 36891                           tblptru	equ	0xFF8
 36892                           tblptrh	equ	0xFF7
 36893                           tblptrl	equ	0xFF6
 36894                           tablat	equ	0xFF5
 36895                           prodh	equ	0xFF4
 36896                           prodl	equ	0xFF3
 36897                           intcon	equ	0xFF2
 36898                           intcon2	equ	0xFF1
 36899                           intcon3	equ	0xFF0
 36900                           indf0	equ	0xFEF
 36901                           postinc0	equ	0xFEE
 36902                           fsr0h	equ	0xFEA
 36903                           fsr0l	equ	0xFE9
 36904                           wreg	equ	0xFE8
 36905                           indf1	equ	0xFE7
 36906                           postdec1	equ	0xFE5
 36907                           plusw1	equ	0xFE3
 36908                           fsr1h	equ	0xFE2
 36909                           fsr1l	equ	0xFE1
 36910                           indf2	equ	0xFDF
 36911                           postinc2	equ	0xFDE
 36912                           postdec2	equ	0xFDD
 36913                           plusw2	equ	0xFDB
 36914                           fsr2h	equ	0xFDA
 36915                           fsr2l	equ	0xFD9
 36916                           status	equ	0xFD8
 36917                           
 36918 ;; *************** function __fill_buffer_get_display1 *****************
 36919 ;; Defined at:
 36920 ;;		line 291 in file "app_device_custom_hid.c"
 36921 ;; Parameters:    Size  Location     Type
 36922 ;;		None
 36923 ;; Auto vars:     Size  Location     Type
 36924 ;;  position        1    7[COMRAM] unsigned char 
 36925 ;;  line            1    6[COMRAM] unsigned char 
 36926 ;;  cntr            1    5[COMRAM] unsigned char 
 36927 ;; Return value:  Size  Location     Type
 36928 ;;                  1    wreg      void 
 36929 ;; Registers used:
 36930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36931 ;; Tracked objects:
 36932 ;;		On entry : 0/0
 36933 ;;		On exit  : 0/0
 36934 ;;		Unchanged: 0/0
 36935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36937 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36939 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36940 ;;Total ram usage:        4 bytes
 36941 ;; Hardware stack levels used:    1
 36942 ;; Hardware stack levels required when called:    1
 36943 ;; This function calls:
 36944 ;;		_display_get_character
 36945 ;; This function is called by:
 36946 ;;		_APP_DeviceCustomHIDTasks
 36947 ;; This function uses a non-reentrant model
 36948 ;;
 36949                           
 36950                           	psect	text184
 36951  006DDE                     __ptext184:
 36952                           	opt stack 0
 36953  006DDE                     __fill_buffer_get_display1:
 36954                           	opt stack 28
 36955                           
 36956                           ;app_device_custom_hid.c: 293: uint8_t cntr;
 36957                           ;app_device_custom_hid.c: 294: uint8_t line;
 36958                           ;app_device_custom_hid.c: 295: uint8_t position;
 36959                           ;app_device_custom_hid.c: 298: ToSendDataBuffer[0] = COMMAND_GET_DISPLAY_1;
 36960                           
 36961                           ;incstack = 0
 36962  006DDE  0E11               	movlw	17
 36963  006DE0  0102               	movlb	2	; () banked
 36964  006DE2  6FB4               	movwf	_ToSendDataBuffer& (0+255),b
 36965                           
 36966                           ;app_device_custom_hid.c: 301: cntr = 1;
 36967  006DE4  0E01               	movlw	1
 36968  006DE6  6E06               	movwf	__fill_buffer_get_display1@cntr,c
 36969                           
 36970                           ;app_device_custom_hid.c: 302: for(line=0; line<2; ++line)
 36971  006DE8  0E00               	movlw	0
 36972  006DEA  6E07               	movwf	__fill_buffer_get_display1@line,c
 36973  006DEC                     l13078:
 36974                           
 36975                           ; BSR set to: 2
 36976  006DEC  0E01               	movlw	1
 36977  006DEE  6407               	cpfsgt	__fill_buffer_get_display1@line,c
 36978  006DF0  D001               	goto	l13082
 36979  006DF2  0012               	return	
 36980  006DF4                     l13082:
 36981                           
 36982                           ;app_device_custom_hid.c: 303: {
 36983                           ;app_device_custom_hid.c: 304: for(position=0; position<20; ++position)
 36984  006DF4  0E00               	movlw	0
 36985  006DF6  6E08               	movwf	__fill_buffer_get_display1@position,c
 36986  006DF8                     l13084:
 36987  006DF8  0E13               	movlw	19
 36988  006DFA  6408               	cpfsgt	__fill_buffer_get_display1@position,c
 36989  006DFC  D001               	goto	l13088
 36990  006DFE  D013               	goto	l13096
 36991  006E00                     l13088:
 36992                           
 36993                           ;app_device_custom_hid.c: 305: {
 36994                           ;app_device_custom_hid.c: 306: ToSendDataBuffer[cntr] = display_get_character(line, posi
      +                          tion);
 36995  006E00  C008  F001         	movff	__fill_buffer_get_display1@position,display_get_character@position
 36996  006E04  5007               	movf	__fill_buffer_get_display1@line,w,c
 36997  006E06  ECA1  F03A         	call	_display_get_character
 36998  006E0A  6E05               	movwf	??__fill_buffer_get_display1& (0+255),c
 36999  006E0C  5006               	movf	__fill_buffer_get_display1@cntr,w,c
 37000  006E0E  0D01               	mullw	1
 37001  006E10  0EB4               	movlw	low _ToSendDataBuffer
 37002  006E12  24F3               	addwf	prodl,w,c
 37003  006E14  6ED9               	movwf	fsr2l,c
 37004  006E16  0E02               	movlw	high _ToSendDataBuffer
 37005  006E18  20F4               	addwfc	prodh,w,c
 37006  006E1A  6EDA               	movwf	fsr2h,c
 37007  006E1C  C005  FFDF         	movff	??__fill_buffer_get_display1,indf2
 37008                           
 37009                           ;app_device_custom_hid.c: 307: ++cntr;
 37010  006E20  2A06               	incf	__fill_buffer_get_display1@cntr,f,c
 37011  006E22  2A08               	incf	__fill_buffer_get_display1@position,f,c
 37012  006E24  D7E9               	goto	l13084
 37013  006E26                     l13096:
 37014  006E26  2A07               	incf	__fill_buffer_get_display1@line,f,c
 37015  006E28  D7E1               	goto	l13078
 37016  006E2A                     __end_of__fill_buffer_get_display1:
 37017                           	opt stack 0
 37018                           tosu	equ	0xFFF
 37019                           tosh	equ	0xFFE
 37020                           tosl	equ	0xFFD
 37021                           pclath	equ	0xFFA
 37022                           tblptru	equ	0xFF8
 37023                           tblptrh	equ	0xFF7
 37024                           tblptrl	equ	0xFF6
 37025                           tablat	equ	0xFF5
 37026                           prodh	equ	0xFF4
 37027                           prodl	equ	0xFF3
 37028                           intcon	equ	0xFF2
 37029                           intcon2	equ	0xFF1
 37030                           intcon3	equ	0xFF0
 37031                           indf0	equ	0xFEF
 37032                           postinc0	equ	0xFEE
 37033                           fsr0h	equ	0xFEA
 37034                           fsr0l	equ	0xFE9
 37035                           wreg	equ	0xFE8
 37036                           indf1	equ	0xFE7
 37037                           postdec1	equ	0xFE5
 37038                           plusw1	equ	0xFE3
 37039                           fsr1h	equ	0xFE2
 37040                           fsr1l	equ	0xFE1
 37041                           indf2	equ	0xFDF
 37042                           postinc2	equ	0xFDE
 37043                           postdec2	equ	0xFDD
 37044                           plusw2	equ	0xFDB
 37045                           fsr2h	equ	0xFDA
 37046                           fsr2l	equ	0xFD9
 37047                           status	equ	0xFD8
 37048                           
 37049 ;; *************** function _display_get_character *****************
 37050 ;; Defined at:
 37051 ;;		line 61 in file "display.c"
 37052 ;; Parameters:    Size  Location     Type
 37053 ;;  line            1    wreg     unsigned char 
 37054 ;;  position        1    0[COMRAM] unsigned char 
 37055 ;; Auto vars:     Size  Location     Type
 37056 ;;  line            1    3[COMRAM] unsigned char 
 37057 ;; Return value:  Size  Location     Type
 37058 ;;                  1    wreg      unsigned char 
 37059 ;; Registers used:
 37060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37061 ;; Tracked objects:
 37062 ;;		On entry : 0/0
 37063 ;;		On exit  : 0/0
 37064 ;;		Unchanged: 0/0
 37065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37066 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37068 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37069 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37070 ;;Total ram usage:        4 bytes
 37071 ;; Hardware stack levels used:    1
 37072 ;; This function calls:
 37073 ;;		Nothing
 37074 ;; This function is called by:
 37075 ;;		__fill_buffer_get_display1
 37076 ;;		__fill_buffer_get_display2
 37077 ;; This function uses a non-reentrant model
 37078 ;;
 37079                           
 37080                           	psect	text185
 37081  007542                     __ptext185:
 37082                           	opt stack 0
 37083  007542                     _display_get_character:
 37084                           	opt stack 28
 37085                           
 37086                           ;incstack = 0
 37087                           ;display_get_character@line stored from wreg
 37088  007542  6E04               	movwf	display_get_character@line,c
 37089                           
 37090                           ;display.c: 63: return display_content[line][position];
 37091  007544  5004               	movf	display_get_character@line,w,c
 37092  007546  0D14               	mullw	20
 37093  007548  0E64               	movlw	low _display_content
 37094  00754A  6E02               	movwf	??_display_get_character& (0+255),c
 37095  00754C  0E02               	movlw	high _display_content
 37096  00754E  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 37097  007550  50F3               	movf	prodl,w,c
 37098  007552  2602               	addwf	??_display_get_character,f,c
 37099  007554  50F4               	movf	prodh,w,c
 37100  007556  2203               	addwfc	??_display_get_character+1,f,c
 37101  007558  5001               	movf	display_get_character@position,w,c
 37102  00755A  0D01               	mullw	1
 37103  00755C  50F3               	movf	prodl,w,c
 37104  00755E  2402               	addwf	??_display_get_character,w,c
 37105  007560  6ED9               	movwf	fsr2l,c
 37106  007562  50F4               	movf	prodh,w,c
 37107  007564  2003               	addwfc	??_display_get_character+1,w,c
 37108  007566  6EDA               	movwf	fsr2h,c
 37109  007568  50DF               	movf	indf2,w,c
 37110  00756A  0012               	return	
 37111  00756C                     __end_of_display_get_character:
 37112                           	opt stack 0
 37113                           tosu	equ	0xFFF
 37114                           tosh	equ	0xFFE
 37115                           tosl	equ	0xFFD
 37116                           pclath	equ	0xFFA
 37117                           tblptru	equ	0xFF8
 37118                           tblptrh	equ	0xFF7
 37119                           tblptrl	equ	0xFF6
 37120                           tablat	equ	0xFF5
 37121                           prodh	equ	0xFF4
 37122                           prodl	equ	0xFF3
 37123                           intcon	equ	0xFF2
 37124                           intcon2	equ	0xFF1
 37125                           intcon3	equ	0xFF0
 37126                           indf0	equ	0xFEF
 37127                           postinc0	equ	0xFEE
 37128                           fsr0h	equ	0xFEA
 37129                           fsr0l	equ	0xFE9
 37130                           wreg	equ	0xFE8
 37131                           indf1	equ	0xFE7
 37132                           postdec1	equ	0xFE5
 37133                           plusw1	equ	0xFE3
 37134                           fsr1h	equ	0xFE2
 37135                           fsr1l	equ	0xFE1
 37136                           indf2	equ	0xFDF
 37137                           postinc2	equ	0xFDE
 37138                           postdec2	equ	0xFDD
 37139                           plusw2	equ	0xFDB
 37140                           fsr2h	equ	0xFDA
 37141                           fsr2l	equ	0xFD9
 37142                           status	equ	0xFD8
 37143                           
 37144 ;; *************** function __fill_buffer_get_calibration2 *****************
 37145 ;; Defined at:
 37146 ;;		line 348 in file "app_device_custom_hid.c"
 37147 ;; Parameters:    Size  Location     Type
 37148 ;;		None
 37149 ;; Auto vars:     Size  Location     Type
 37150 ;;		None
 37151 ;; Return value:  Size  Location     Type
 37152 ;;                  1    wreg      void 
 37153 ;; Registers used:
 37154 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37155 ;; Tracked objects:
 37156 ;;		On entry : 0/0
 37157 ;;		On exit  : 0/0
 37158 ;;		Unchanged: 0/0
 37159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37164 ;;Total ram usage:        0 bytes
 37165 ;; Hardware stack levels used:    1
 37166 ;; Hardware stack levels required when called:    1
 37167 ;; This function calls:
 37168 ;;		_memcpy
 37169 ;; This function is called by:
 37170 ;;		_APP_DeviceCustomHIDTasks
 37171 ;; This function uses a non-reentrant model
 37172 ;;
 37173                           
 37174                           	psect	text186
 37175  006222                     __ptext186:
 37176                           	opt stack 0
 37177  006222                     __fill_buffer_get_calibration2:
 37178                           	opt stack 28
 37179                           
 37180                           ;app_device_custom_hid.c: 351: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_2;
 37181                           
 37182                           ;incstack = 0
 37183  006222  0E14               	movlw	20
 37184  006224  0102               	movlb	2	; () banked
 37185  006226  6FB4               	movwf	_ToSendDataBuffer& (0+255),b
 37186                           
 37187                           ; BSR set to: 2
 37188                           ;app_device_custom_hid.c: 353: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_ONBOARD_TEMPERATURE], 12);
 37189  006228  0EB5               	movlw	low (_ToSendDataBuffer+1)
 37190  00622A  6E01               	movwf	memcpy@d1,c
 37191  00622C  0E02               	movlw	high (_ToSendDataBuffer+1)
 37192  00622E  6E02               	movwf	memcpy@d1+1,c
 37193  006230  0E40               	movlw	low (_calibrationParameters+48)
 37194  006232  6E03               	movwf	memcpy@s1,c
 37195  006234  0E02               	movlw	high (_calibrationParameters+48)
 37196  006236  6E04               	movwf	memcpy@s1+1,c
 37197  006238  5003               	movf	memcpy@s1,w,c
 37198  00623A  1004               	iorwf	memcpy@s1+1,w,c
 37199  00623C  A4D8               	btfss	status,2,c
 37200  00623E  0E20               	movlw	32
 37201  006240  6E05               	movwf	memcpy@s1+2,c
 37202  006242  0E00               	movlw	0
 37203  006244  6E07               	movwf	memcpy@n+1,c
 37204  006246  0E0C               	movlw	12
 37205  006248  6E06               	movwf	memcpy@n,c
 37206  00624A  EC3E  F033         	call	_memcpy	;wreg free
 37207                           
 37208                           ;app_device_custom_hid.c: 354: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_1], 12);
 37209  00624E  0EC1               	movlw	low (_ToSendDataBuffer+13)
 37210  006250  6E01               	movwf	memcpy@d1,c
 37211  006252  0E02               	movlw	high (_ToSendDataBuffer+13)
 37212  006254  6E02               	movwf	memcpy@d1+1,c
 37213  006256  0E4C               	movlw	low (_calibrationParameters+60)
 37214  006258  6E03               	movwf	memcpy@s1,c
 37215  00625A  0E02               	movlw	high (_calibrationParameters+60)
 37216  00625C  6E04               	movwf	memcpy@s1+1,c
 37217  00625E  5003               	movf	memcpy@s1,w,c
 37218  006260  1004               	iorwf	memcpy@s1+1,w,c
 37219  006262  A4D8               	btfss	status,2,c
 37220  006264  0E20               	movlw	32
 37221  006266  6E05               	movwf	memcpy@s1+2,c
 37222  006268  0E00               	movlw	0
 37223  00626A  6E07               	movwf	memcpy@n+1,c
 37224  00626C  0E0C               	movlw	12
 37225  00626E  6E06               	movwf	memcpy@n,c
 37226  006270  EC3E  F033         	call	_memcpy	;wreg free
 37227                           
 37228                           ;app_device_custom_hid.c: 355: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_EXTERNAL_TEMPERATURE_2], 12);
 37229  006274  0ECD               	movlw	low (_ToSendDataBuffer+25)
 37230  006276  6E01               	movwf	memcpy@d1,c
 37231  006278  0E02               	movlw	high (_ToSendDataBuffer+25)
 37232  00627A  6E02               	movwf	memcpy@d1+1,c
 37233  00627C  0E58               	movlw	low (_calibrationParameters+72)
 37234  00627E  6E03               	movwf	memcpy@s1,c
 37235  006280  0E02               	movlw	high (_calibrationParameters+72)
 37236  006282  6E04               	movwf	memcpy@s1+1,c
 37237  006284  5003               	movf	memcpy@s1,w,c
 37238  006286  1004               	iorwf	memcpy@s1+1,w,c
 37239  006288  A4D8               	btfss	status,2,c
 37240  00628A  0E20               	movlw	32
 37241  00628C  6E05               	movwf	memcpy@s1+2,c
 37242  00628E  0E00               	movlw	0
 37243  006290  6E07               	movwf	memcpy@n+1,c
 37244  006292  0E0C               	movlw	12
 37245  006294  6E06               	movwf	memcpy@n,c
 37246  006296  EC3E  F033         	call	_memcpy	;wreg free
 37247  00629A  0012               	return		;funcret
 37248  00629C                     __end_of__fill_buffer_get_calibration2:
 37249                           	opt stack 0
 37250                           tosu	equ	0xFFF
 37251                           tosh	equ	0xFFE
 37252                           tosl	equ	0xFFD
 37253                           pclath	equ	0xFFA
 37254                           tblptru	equ	0xFF8
 37255                           tblptrh	equ	0xFF7
 37256                           tblptrl	equ	0xFF6
 37257                           tablat	equ	0xFF5
 37258                           prodh	equ	0xFF4
 37259                           prodl	equ	0xFF3
 37260                           intcon	equ	0xFF2
 37261                           intcon2	equ	0xFF1
 37262                           intcon3	equ	0xFF0
 37263                           indf0	equ	0xFEF
 37264                           postinc0	equ	0xFEE
 37265                           fsr0h	equ	0xFEA
 37266                           fsr0l	equ	0xFE9
 37267                           wreg	equ	0xFE8
 37268                           indf1	equ	0xFE7
 37269                           postdec1	equ	0xFE5
 37270                           plusw1	equ	0xFE3
 37271                           fsr1h	equ	0xFE2
 37272                           fsr1l	equ	0xFE1
 37273                           indf2	equ	0xFDF
 37274                           postinc2	equ	0xFDE
 37275                           postdec2	equ	0xFDD
 37276                           plusw2	equ	0xFDB
 37277                           fsr2h	equ	0xFDA
 37278                           fsr2l	equ	0xFD9
 37279                           status	equ	0xFD8
 37280                           
 37281 ;; *************** function __fill_buffer_get_calibration1 *****************
 37282 ;; Defined at:
 37283 ;;		line 336 in file "app_device_custom_hid.c"
 37284 ;; Parameters:    Size  Location     Type
 37285 ;;		None
 37286 ;; Auto vars:     Size  Location     Type
 37287 ;;		None
 37288 ;; Return value:  Size  Location     Type
 37289 ;;                  1    wreg      void 
 37290 ;; Registers used:
 37291 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37292 ;; Tracked objects:
 37293 ;;		On entry : 0/0
 37294 ;;		On exit  : 0/0
 37295 ;;		Unchanged: 0/0
 37296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37301 ;;Total ram usage:        0 bytes
 37302 ;; Hardware stack levels used:    1
 37303 ;; Hardware stack levels required when called:    1
 37304 ;; This function calls:
 37305 ;;		_memcpy
 37306 ;; This function is called by:
 37307 ;;		_APP_DeviceCustomHIDTasks
 37308 ;; This function uses a non-reentrant model
 37309 ;;
 37310                           
 37311                           	psect	text187
 37312  005A96                     __ptext187:
 37313                           	opt stack 0
 37314  005A96                     __fill_buffer_get_calibration1:
 37315                           	opt stack 28
 37316                           
 37317                           ;app_device_custom_hid.c: 339: ToSendDataBuffer[0] = COMMAND_GET_CALIBRATION_1;
 37318                           
 37319                           ;incstack = 0
 37320  005A96  0E13               	movlw	19
 37321  005A98  0102               	movlb	2	; () banked
 37322  005A9A  6FB4               	movwf	_ToSendDataBuffer& (0+255),b
 37323                           
 37324                           ; BSR set to: 2
 37325                           ;app_device_custom_hid.c: 341: memcpy(&ToSendDataBuffer[1], &calibrationParameters[CALIB
      +                          RATION_INDEX_INPUT_VOLTAGE], 12);
 37326  005A9C  0EB5               	movlw	low (_ToSendDataBuffer+1)
 37327  005A9E  6E01               	movwf	memcpy@d1,c
 37328  005AA0  0E02               	movlw	high (_ToSendDataBuffer+1)
 37329  005AA2  6E02               	movwf	memcpy@d1+1,c
 37330  005AA4  0E10               	movlw	low _calibrationParameters
 37331  005AA6  6E03               	movwf	memcpy@s1,c
 37332  005AA8  0E02               	movlw	high _calibrationParameters
 37333  005AAA  6E04               	movwf	memcpy@s1+1,c
 37334  005AAC  5003               	movf	memcpy@s1,w,c
 37335  005AAE  1004               	iorwf	memcpy@s1+1,w,c
 37336  005AB0  A4D8               	btfss	status,2,c
 37337  005AB2  0E20               	movlw	32
 37338  005AB4  6E05               	movwf	memcpy@s1+2,c
 37339  005AB6  0E00               	movlw	0
 37340  005AB8  6E07               	movwf	memcpy@n+1,c
 37341  005ABA  0E0C               	movlw	12
 37342  005ABC  6E06               	movwf	memcpy@n,c
 37343  005ABE  EC3E  F033         	call	_memcpy	;wreg free
 37344                           
 37345                           ;app_device_custom_hid.c: 342: memcpy(&ToSendDataBuffer[13], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_VOLTAGE], 12);
 37346  005AC2  0EC1               	movlw	low (_ToSendDataBuffer+13)
 37347  005AC4  6E01               	movwf	memcpy@d1,c
 37348  005AC6  0E02               	movlw	high (_ToSendDataBuffer+13)
 37349  005AC8  6E02               	movwf	memcpy@d1+1,c
 37350  005ACA  0E1C               	movlw	low (_calibrationParameters+12)
 37351  005ACC  6E03               	movwf	memcpy@s1,c
 37352  005ACE  0E02               	movlw	high (_calibrationParameters+12)
 37353  005AD0  6E04               	movwf	memcpy@s1+1,c
 37354  005AD2  5003               	movf	memcpy@s1,w,c
 37355  005AD4  1004               	iorwf	memcpy@s1+1,w,c
 37356  005AD6  A4D8               	btfss	status,2,c
 37357  005AD8  0E20               	movlw	32
 37358  005ADA  6E05               	movwf	memcpy@s1+2,c
 37359  005ADC  0E00               	movlw	0
 37360  005ADE  6E07               	movwf	memcpy@n+1,c
 37361  005AE0  0E0C               	movlw	12
 37362  005AE2  6E06               	movwf	memcpy@n,c
 37363  005AE4  EC3E  F033         	call	_memcpy	;wreg free
 37364                           
 37365                           ;app_device_custom_hid.c: 343: memcpy(&ToSendDataBuffer[25], &calibrationParameters[CALI
      +                          BRATION_INDEX_INPUT_CURRENT], 12);
 37366  005AE8  0ECD               	movlw	low (_ToSendDataBuffer+25)
 37367  005AEA  6E01               	movwf	memcpy@d1,c
 37368  005AEC  0E02               	movlw	high (_ToSendDataBuffer+25)
 37369  005AEE  6E02               	movwf	memcpy@d1+1,c
 37370  005AF0  0E28               	movlw	low (_calibrationParameters+24)
 37371  005AF2  6E03               	movwf	memcpy@s1,c
 37372  005AF4  0E02               	movlw	high (_calibrationParameters+24)
 37373  005AF6  6E04               	movwf	memcpy@s1+1,c
 37374  005AF8  5003               	movf	memcpy@s1,w,c
 37375  005AFA  1004               	iorwf	memcpy@s1+1,w,c
 37376  005AFC  A4D8               	btfss	status,2,c
 37377  005AFE  0E20               	movlw	32
 37378  005B00  6E05               	movwf	memcpy@s1+2,c
 37379  005B02  0E00               	movlw	0
 37380  005B04  6E07               	movwf	memcpy@n+1,c
 37381  005B06  0E0C               	movlw	12
 37382  005B08  6E06               	movwf	memcpy@n,c
 37383  005B0A  EC3E  F033         	call	_memcpy	;wreg free
 37384                           
 37385                           ;app_device_custom_hid.c: 344: memcpy(&ToSendDataBuffer[37], &calibrationParameters[CALI
      +                          BRATION_INDEX_OUTPUT_CURRENT], 12);
 37386  005B0E  0ED9               	movlw	low (_ToSendDataBuffer+37)
 37387  005B10  6E01               	movwf	memcpy@d1,c
 37388  005B12  0E02               	movlw	high (_ToSendDataBuffer+37)
 37389  005B14  6E02               	movwf	memcpy@d1+1,c
 37390  005B16  0E34               	movlw	low (_calibrationParameters+36)
 37391  005B18  6E03               	movwf	memcpy@s1,c
 37392  005B1A  0E02               	movlw	high (_calibrationParameters+36)
 37393  005B1C  6E04               	movwf	memcpy@s1+1,c
 37394  005B1E  5003               	movf	memcpy@s1,w,c
 37395  005B20  1004               	iorwf	memcpy@s1+1,w,c
 37396  005B22  A4D8               	btfss	status,2,c
 37397  005B24  0E20               	movlw	32
 37398  005B26  6E05               	movwf	memcpy@s1+2,c
 37399  005B28  0E00               	movlw	0
 37400  005B2A  6E07               	movwf	memcpy@n+1,c
 37401  005B2C  0E0C               	movlw	12
 37402  005B2E  6E06               	movwf	memcpy@n,c
 37403  005B30  EC3E  F033         	call	_memcpy	;wreg free
 37404  005B34  0012               	return		;funcret
 37405  005B36                     __end_of__fill_buffer_get_calibration1:
 37406                           	opt stack 0
 37407                           tosu	equ	0xFFF
 37408                           tosh	equ	0xFFE
 37409                           tosl	equ	0xFFD
 37410                           pclath	equ	0xFFA
 37411                           tblptru	equ	0xFF8
 37412                           tblptrh	equ	0xFF7
 37413                           tblptrl	equ	0xFF6
 37414                           tablat	equ	0xFF5
 37415                           prodh	equ	0xFF4
 37416                           prodl	equ	0xFF3
 37417                           intcon	equ	0xFF2
 37418                           intcon2	equ	0xFF1
 37419                           intcon3	equ	0xFF0
 37420                           indf0	equ	0xFEF
 37421                           postinc0	equ	0xFEE
 37422                           fsr0h	equ	0xFEA
 37423                           fsr0l	equ	0xFE9
 37424                           wreg	equ	0xFE8
 37425                           indf1	equ	0xFE7
 37426                           postdec1	equ	0xFE5
 37427                           plusw1	equ	0xFE3
 37428                           fsr1h	equ	0xFE2
 37429                           fsr1l	equ	0xFE1
 37430                           indf2	equ	0xFDF
 37431                           postinc2	equ	0xFDE
 37432                           postdec2	equ	0xFDD
 37433                           plusw2	equ	0xFDB
 37434                           fsr2h	equ	0xFDA
 37435                           fsr2l	equ	0xFD9
 37436                           status	equ	0xFD8
 37437                           
 37438 ;; *************** function _memcpy *****************
 37439 ;; Defined at:
 37440 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
 37441 ;; Parameters:    Size  Location     Type
 37442 ;;  d1              2    0[COMRAM] PTR void 
 37443 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 37444 ;;		 -> ToSendDataBuffer(64), msd_buffer(512), SetupPkt(8), 
 37445 ;;  s1              3    2[COMRAM] PTR const void 
 37446 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), calibrationParameters(84), 
 37447 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 37448 ;;  n               2    5[COMRAM] unsigned int 
 37449 ;; Auto vars:     Size  Location     Type
 37450 ;;  s               3    7[COMRAM] PTR const unsigned char 
 37451 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), calibrationParameters(84), 
 37452 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 37453 ;;  d               2   10[COMRAM] PTR unsigned char 
 37454 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 37455 ;;		 -> ToSendDataBuffer(64), msd_buffer(512), SetupPkt(8), 
 37456 ;;  tmp             1   12[COMRAM] unsigned char 
 37457 ;; Return value:  Size  Location     Type
 37458 ;;                  2    0[COMRAM] PTR void 
 37459 ;; Registers used:
 37460 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 37461 ;; Tracked objects:
 37462 ;;		On entry : 0/0
 37463 ;;		On exit  : 0/0
 37464 ;;		Unchanged: 0/0
 37465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37466 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37467 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37469 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37470 ;;Total ram usage:       13 bytes
 37471 ;; Hardware stack levels used:    1
 37472 ;; This function calls:
 37473 ;;		Nothing
 37474 ;; This function is called by:
 37475 ;;		_USBCtrlEPService
 37476 ;;		_MSDProcessCommandMediaPresent
 37477 ;;		__fill_buffer_get_calibration1
 37478 ;;		__fill_buffer_get_calibration2
 37479 ;;		__flash_set_page_size
 37480 ;;		_internalFlash_read
 37481 ;;		_fat_create_file
 37482 ;; This function uses a non-reentrant model
 37483 ;;
 37484                           
 37485                           	psect	text188
 37486  00667C                     __ptext188:
 37487                           	opt stack 0
 37488  00667C                     _memcpy:
 37489                           	opt stack 27
 37490                           
 37491                           ;incstack = 0
 37492  00667C  C003  F008         	movff	memcpy@s1,memcpy@s
 37493  006680  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 37494  006684  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 37495  006688  C001  F00B         	movff	memcpy@d1,memcpy@d
 37496  00668C  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 37497  006690  D01F               	goto	l10284
 37498  006692                     l10276:
 37499  006692  C008  FFF6         	movff	memcpy@s,tblptrl
 37500  006696  C009  FFF7         	movff	memcpy@s+1,tblptrh
 37501  00669A  C00A  FFF8         	movff	memcpy@s+2,tblptru
 37502  00669E  BAF8               	btfsc	tblptru,5,c
 37503  0066A0  D003               	bra	u7127
 37504  0066A2  0008               	tblrd		*
 37505  0066A4  50F5               	movf	tablat,w,c
 37506  0066A6  D005               	bra	u7120
 37507  0066A8                     u7127:
 37508  0066A8  CFF6 FFE9          	movff	tblptrl,fsr0l
 37509  0066AC  CFF7 FFEA          	movff	tblptrh,fsr0h
 37510  0066B0  50EF               	movf	indf0,w,c
 37511  0066B2                     u7120:
 37512  0066B2  6E0D               	movwf	memcpy@tmp,c
 37513  0066B4  0E01               	movlw	1
 37514  0066B6  2608               	addwf	memcpy@s,f,c
 37515  0066B8  0E00               	movlw	0
 37516  0066BA  2209               	addwfc	memcpy@s+1,f,c
 37517  0066BC  0E00               	movlw	0
 37518  0066BE  220A               	addwfc	memcpy@s+2,f,c
 37519  0066C0  C00B  FFD9         	movff	memcpy@d,fsr2l
 37520  0066C4  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 37521  0066C8  C00D  FFDF         	movff	memcpy@tmp,indf2
 37522  0066CC  4A0B               	infsnz	memcpy@d,f,c
 37523  0066CE  2A0C               	incf	memcpy@d+1,f,c
 37524  0066D0                     l10284:
 37525  0066D0  0606               	decf	memcpy@n,f,c
 37526  0066D2  A0D8               	btfss	status,0,c
 37527  0066D4  0607               	decf	memcpy@n+1,f,c
 37528  0066D6  2806               	incf	memcpy@n,w,c
 37529  0066D8  E1DC               	bnz	l10276
 37530  0066DA  2807               	incf	memcpy@n+1,w,c
 37531  0066DC  B4D8               	btfsc	status,2,c
 37532  0066DE  0012               	return	
 37533  0066E0  D7D8               	goto	l10276
 37534  0066E2                     __end_of_memcpy:
 37535                           	opt stack 0
 37536                           tosu	equ	0xFFF
 37537                           tosh	equ	0xFFE
 37538                           tosl	equ	0xFFD
 37539                           pclath	equ	0xFFA
 37540                           tblptru	equ	0xFF8
 37541                           tblptrh	equ	0xFF7
 37542                           tblptrl	equ	0xFF6
 37543                           tablat	equ	0xFF5
 37544                           prodh	equ	0xFF4
 37545                           prodl	equ	0xFF3
 37546                           intcon	equ	0xFF2
 37547                           intcon2	equ	0xFF1
 37548                           intcon3	equ	0xFF0
 37549                           indf0	equ	0xFEF
 37550                           postinc0	equ	0xFEE
 37551                           fsr0h	equ	0xFEA
 37552                           fsr0l	equ	0xFE9
 37553                           wreg	equ	0xFE8
 37554                           indf1	equ	0xFE7
 37555                           postdec1	equ	0xFE5
 37556                           plusw1	equ	0xFE3
 37557                           fsr1h	equ	0xFE2
 37558                           fsr1l	equ	0xFE1
 37559                           indf2	equ	0xFDF
 37560                           postinc2	equ	0xFDE
 37561                           postdec2	equ	0xFDD
 37562                           plusw2	equ	0xFDB
 37563                           fsr2h	equ	0xFDA
 37564                           fsr2l	equ	0xFD9
 37565                           status	equ	0xFD8
 37566                           
 37567 ;; *************** function _USBTransferOnePacket *****************
 37568 ;; Defined at:
 37569 ;;		line 995 in file "usb_device.c"
 37570 ;; Parameters:    Size  Location     Type
 37571 ;;  ep              1    wreg     unsigned char 
 37572 ;;  dir             1    0[COMRAM] unsigned char 
 37573 ;;  data            2    1[COMRAM] PTR unsigned char 
 37574 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 37575 ;;		 -> msd_cbw(31), NULL(0), 
 37576 ;;  len             1    3[COMRAM] unsigned char 
 37577 ;; Auto vars:     Size  Location     Type
 37578 ;;  ep              1    8[COMRAM] unsigned char 
 37579 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 37580 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 37581 ;; Return value:  Size  Location     Type
 37582 ;;                  2    0[COMRAM] PTR void 
 37583 ;; Registers used:
 37584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37585 ;; Tracked objects:
 37586 ;;		On entry : 0/0
 37587 ;;		On exit  : 0/0
 37588 ;;		Unchanged: 0/0
 37589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37590 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37591 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37592 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37593 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37594 ;;Total ram usage:       11 bytes
 37595 ;; Hardware stack levels used:    1
 37596 ;; This function calls:
 37597 ;;		Nothing
 37598 ;; This function is called by:
 37599 ;;		_USBMSDInit
 37600 ;;		_USBCheckMSDRequest
 37601 ;;		_MSDTasks
 37602 ;;		_MSDProcessCommandMediaPresent
 37603 ;;		_MSDReadHandler
 37604 ;;		_MSDWriteHandler
 37605 ;;		_MSDTransferTerminated
 37606 ;;		_APP_DeviceCustomHIDInitialize
 37607 ;;		_APP_DeviceCustomHIDTasks
 37608 ;; This function uses a non-reentrant model
 37609 ;;
 37610                           
 37611                           	psect	text189
 37612  00456E                     __ptext189:
 37613                           	opt stack 0
 37614  00456E                     _USBTransferOnePacket:
 37615                           	opt stack 27
 37616                           
 37617                           ;incstack = 0
 37618                           ;USBTransferOnePacket@ep stored from wreg
 37619  00456E  6E09               	movwf	USBTransferOnePacket@ep,c
 37620                           
 37621                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 37622                           ;usb_device.c: 1000: if(dir != 0)
 37623  004570  5001               	movf	USBTransferOnePacket@dir,w,c
 37624  004572  B4D8               	btfsc	status,2,c
 37625  004574  D007               	goto	l9634
 37626                           
 37627                           ;usb_device.c: 1001: {
 37628                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 37629  004576  5009               	movf	USBTransferOnePacket@ep,w,c
 37630  004578  0D02               	mullw	2
 37631  00457A  0EEE               	movlw	low _pBDTEntryIn
 37632  00457C  24F3               	addwf	prodl,w,c
 37633  00457E  6ED9               	movwf	fsr2l,c
 37634  004580  0E00               	movlw	high _pBDTEntryIn
 37635  004582  D006               	goto	L41
 37636  004584                     l9634:
 37637                           
 37638                           ;usb_device.c: 1005: else
 37639                           ;usb_device.c: 1006: {
 37640                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 37641  004584  5009               	movf	USBTransferOnePacket@ep,w,c
 37642  004586  0D02               	mullw	2
 37643  004588  0E39               	movlw	low _pBDTEntryOut
 37644  00458A  24F3               	addwf	prodl,w,c
 37645  00458C  6ED9               	movwf	fsr2l,c
 37646  00458E  0E01               	movlw	high _pBDTEntryOut
 37647  004590                     L41:
 37648  004590  20F4               	addwfc	prodh,w,c
 37649  004592  6EDA               	movwf	fsr2h,c
 37650  004594  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 37651  004598  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 37652                           
 37653                           ;usb_device.c: 1009: }
 37654                           ;usb_device.c: 1013: if(handle == 0)
 37655  00459C  500A               	movf	USBTransferOnePacket@handle,w,c
 37656  00459E  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 37657  0045A0  A4D8               	btfss	status,2,c
 37658  0045A2  D005               	goto	l9642
 37659                           
 37660                           ;usb_device.c: 1014: {
 37661                           ;usb_device.c: 1015: return 0;
 37662  0045A4  0E00               	movlw	0
 37663  0045A6  6E01               	movwf	?_USBTransferOnePacket,c
 37664  0045A8  0E00               	movlw	0
 37665  0045AA  6E02               	movwf	?_USBTransferOnePacket+1,c
 37666  0045AC  0012               	return	
 37667  0045AE                     l9642:
 37668                           
 37669                           ;usb_device.c: 1016: }
 37670                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 37671  0045AE  EE20 F002          	lfsr	2,2
 37672  0045B2  500A               	movf	USBTransferOnePacket@handle,w,c
 37673  0045B4  26D9               	addwf	fsr2l,f,c
 37674  0045B6  500B               	movf	USBTransferOnePacket@handle+1,w,c
 37675  0045B8  22DA               	addwfc	fsr2h,f,c
 37676  0045BA  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 37677  0045BE  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 37678                           
 37679                           ;usb_device.c: 1030: handle->CNT = len;
 37680  0045C2  EE20 F001          	lfsr	2,1
 37681  0045C6  500A               	movf	USBTransferOnePacket@handle,w,c
 37682  0045C8  26D9               	addwf	fsr2l,f,c
 37683  0045CA  500B               	movf	USBTransferOnePacket@handle+1,w,c
 37684  0045CC  22DA               	addwfc	fsr2h,f,c
 37685  0045CE  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 37686                           
 37687                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 37688  0045D2  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 37689  0045D6  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 37690  0045DA  0E40               	movlw	64
 37691  0045DC  16DF               	andwf	indf2,f,c
 37692                           
 37693                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 37694  0045DE  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 37695  0045E2  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 37696  0045E6  0E00               	movlw	0
 37697  0045E8  86DB               	bsf	plusw2,3,c
 37698                           
 37699                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 37700  0045EA  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 37701  0045EE  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 37702  0045F2  0E00               	movlw	0
 37703  0045F4  8EDB               	bsf	plusw2,7,c
 37704                           
 37705                           ;usb_device.c: 1036: if(dir != 0)
 37706  0045F6  5001               	movf	USBTransferOnePacket@dir,w,c
 37707  0045F8  B4D8               	btfsc	status,2,c
 37708  0045FA  D018               	goto	l9654
 37709                           
 37710                           ;usb_device.c: 1037: {
 37711                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
 37712  0045FC  5009               	movf	USBTransferOnePacket@ep,w,c
 37713  0045FE  0D02               	mullw	2
 37714  004600  0EEE               	movlw	low _pBDTEntryIn
 37715  004602  24F3               	addwf	prodl,w,c
 37716  004604  6ED9               	movwf	fsr2l,c
 37717  004606  0E00               	movlw	high _pBDTEntryIn
 37718  004608  20F4               	addwfc	prodh,w,c
 37719  00460A  6EDA               	movwf	fsr2h,c
 37720  00460C  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 37721  004610  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 37722  004614  0E04               	movlw	4
 37723  004616  1805               	xorwf	??_USBTransferOnePacket,w,c
 37724  004618  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 37725  00461A  5006               	movf	??_USBTransferOnePacket+1,w,c
 37726  00461C  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 37727  00461E  5009               	movf	USBTransferOnePacket@ep,w,c
 37728  004620  0D02               	mullw	2
 37729  004622  0EEE               	movlw	low _pBDTEntryIn
 37730  004624  24F3               	addwf	prodl,w,c
 37731  004626  6ED9               	movwf	fsr2l,c
 37732  004628  0E00               	movlw	high _pBDTEntryIn
 37733  00462A  D017               	goto	L42
 37734  00462C                     l9654:
 37735                           
 37736                           ;usb_device.c: 1041: else
 37737                           ;usb_device.c: 1042: {
 37738                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
 37739  00462C  5009               	movf	USBTransferOnePacket@ep,w,c
 37740  00462E  0D02               	mullw	2
 37741  004630  0E39               	movlw	low _pBDTEntryOut
 37742  004632  24F3               	addwf	prodl,w,c
 37743  004634  6ED9               	movwf	fsr2l,c
 37744  004636  0E01               	movlw	high _pBDTEntryOut
 37745  004638  20F4               	addwfc	prodh,w,c
 37746  00463A  6EDA               	movwf	fsr2h,c
 37747  00463C  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 37748  004640  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 37749  004644  0E04               	movlw	4
 37750  004646  1805               	xorwf	??_USBTransferOnePacket,w,c
 37751  004648  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 37752  00464A  5006               	movf	??_USBTransferOnePacket+1,w,c
 37753  00464C  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 37754  00464E  5009               	movf	USBTransferOnePacket@ep,w,c
 37755  004650  0D02               	mullw	2
 37756  004652  0E39               	movlw	low _pBDTEntryOut
 37757  004654  24F3               	addwf	prodl,w,c
 37758  004656  6ED9               	movwf	fsr2l,c
 37759  004658  0E01               	movlw	high _pBDTEntryOut
 37760  00465A                     L42:
 37761  00465A  20F4               	addwfc	prodh,w,c
 37762  00465C  6EDA               	movwf	fsr2h,c
 37763  00465E  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 37764  004662  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 37765                           
 37766                           ;usb_device.c: 1045: }
 37767                           ;usb_device.c: 1046: return (void*)handle;
 37768  004666  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 37769  00466A  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 37770  00466E  0012               	return	
 37771  004670                     __end_of_USBTransferOnePacket:
 37772                           	opt stack 0
 37773                           tosu	equ	0xFFF
 37774                           tosh	equ	0xFFE
 37775                           tosl	equ	0xFFD
 37776                           pclath	equ	0xFFA
 37777                           tblptru	equ	0xFF8
 37778                           tblptrh	equ	0xFF7
 37779                           tblptrl	equ	0xFF6
 37780                           tablat	equ	0xFF5
 37781                           prodh	equ	0xFF4
 37782                           prodl	equ	0xFF3
 37783                           intcon	equ	0xFF2
 37784                           intcon2	equ	0xFF1
 37785                           intcon3	equ	0xFF0
 37786                           indf0	equ	0xFEF
 37787                           postinc0	equ	0xFEE
 37788                           fsr0h	equ	0xFEA
 37789                           fsr0l	equ	0xFE9
 37790                           wreg	equ	0xFE8
 37791                           indf1	equ	0xFE7
 37792                           postdec1	equ	0xFE5
 37793                           plusw1	equ	0xFE3
 37794                           fsr1h	equ	0xFE2
 37795                           fsr1l	equ	0xFE1
 37796                           indf2	equ	0xFDF
 37797                           postinc2	equ	0xFDE
 37798                           postdec2	equ	0xFDD
 37799                           plusw2	equ	0xFDB
 37800                           fsr2h	equ	0xFDA
 37801                           fsr2l	equ	0xFD9
 37802                           status	equ	0xFD8
 37803                           tosu	equ	0xFFF
 37804                           tosh	equ	0xFFE
 37805                           tosl	equ	0xFFD
 37806                           pclath	equ	0xFFA
 37807                           tblptru	equ	0xFF8
 37808                           tblptrh	equ	0xFF7
 37809                           tblptrl	equ	0xFF6
 37810                           tablat	equ	0xFF5
 37811                           prodh	equ	0xFF4
 37812                           prodl	equ	0xFF3
 37813                           intcon	equ	0xFF2
 37814                           intcon2	equ	0xFF1
 37815                           intcon3	equ	0xFF0
 37816                           indf0	equ	0xFEF
 37817                           postinc0	equ	0xFEE
 37818                           fsr0h	equ	0xFEA
 37819                           fsr0l	equ	0xFE9
 37820                           wreg	equ	0xFE8
 37821                           indf1	equ	0xFE7
 37822                           postdec1	equ	0xFE5
 37823                           plusw1	equ	0xFE3
 37824                           fsr1h	equ	0xFE2
 37825                           fsr1l	equ	0xFE1
 37826                           indf2	equ	0xFDF
 37827                           postinc2	equ	0xFDE
 37828                           postdec2	equ	0xFDD
 37829                           plusw2	equ	0xFDB
 37830                           fsr2h	equ	0xFDA
 37831                           fsr2l	equ	0xFD9
 37832                           status	equ	0xFD8
 37833                           
 37834                           	psect	text190
 37835  000000                     __ptext190:
 37836                           	opt stack 0
 37837                           tosu	equ	0xFFF
 37838                           tosh	equ	0xFFE
 37839                           tosl	equ	0xFFD
 37840                           pclath	equ	0xFFA
 37841                           tblptru	equ	0xFF8
 37842                           tblptrh	equ	0xFF7
 37843                           tblptrl	equ	0xFF6
 37844                           tablat	equ	0xFF5
 37845                           prodh	equ	0xFF4
 37846                           prodl	equ	0xFF3
 37847                           intcon	equ	0xFF2
 37848                           intcon2	equ	0xFF1
 37849                           intcon3	equ	0xFF0
 37850                           indf0	equ	0xFEF
 37851                           postinc0	equ	0xFEE
 37852                           fsr0h	equ	0xFEA
 37853                           fsr0l	equ	0xFE9
 37854                           wreg	equ	0xFE8
 37855                           indf1	equ	0xFE7
 37856                           postdec1	equ	0xFE5
 37857                           plusw1	equ	0xFE3
 37858                           fsr1h	equ	0xFE2
 37859                           fsr1l	equ	0xFE1
 37860                           indf2	equ	0xFDF
 37861                           postinc2	equ	0xFDE
 37862                           postdec2	equ	0xFDD
 37863                           plusw2	equ	0xFDB
 37864                           fsr2h	equ	0xFDA
 37865                           fsr2l	equ	0xFD9
 37866                           status	equ	0xFD8
 37867                           
 37868                           	psect	rparam
 37869  0000                     tosu	equ	0xFFF
 37870                           tosh	equ	0xFFE
 37871                           tosl	equ	0xFFD
 37872                           pclath	equ	0xFFA
 37873                           tblptru	equ	0xFF8
 37874                           tblptrh	equ	0xFF7
 37875                           tblptrl	equ	0xFF6
 37876                           tablat	equ	0xFF5
 37877                           prodh	equ	0xFF4
 37878                           prodl	equ	0xFF3
 37879                           intcon	equ	0xFF2
 37880                           intcon2	equ	0xFF1
 37881                           intcon3	equ	0xFF0
 37882                           indf0	equ	0xFEF
 37883                           postinc0	equ	0xFEE
 37884                           fsr0h	equ	0xFEA
 37885                           fsr0l	equ	0xFE9
 37886                           wreg	equ	0xFE8
 37887                           indf1	equ	0xFE7
 37888                           postdec1	equ	0xFE5
 37889                           plusw1	equ	0xFE3
 37890                           fsr1h	equ	0xFE2
 37891                           fsr1l	equ	0xFE1
 37892                           indf2	equ	0xFDF
 37893                           postinc2	equ	0xFDE
 37894                           postdec2	equ	0xFDD
 37895                           plusw2	equ	0xFDB
 37896                           fsr2h	equ	0xFDA
 37897                           fsr2l	equ	0xFD9
 37898                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    770
    Data        169
    BSS         2114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      95
    BANK0           160    130     160
    BANK1           256      0     249
    BANK2           256      0     244
    BANK3           256      0     218
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1970$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1970$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(COMRAM[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 9
		 -> bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), calibrationParameters(BANK2[84]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), calibrationParameters(BANK2[84]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK3[50]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK3[50]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> bootloader_extension(CODE[4]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> bootloader_filename(CODE[9]), 

    _read_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(COMRAM[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> file_buffer(BANK3[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_append_to_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), msd_buffer(BIGRAMll[512]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> file_buffer(BANK3[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_append_to_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    _flash_spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(COMRAM[32]), fat_append_to_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 

    _flash_spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    _flash_spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _write_calibration@ptr	PTR unsigned char  size(2) Largest target is 84
		 -> calibrationParameters(BANK2[84]), 

    _i2c_eeprom_load_default_calibration@buffer	PTR struct . size(2) Largest target is 84
		 -> calibrationParameters(BANK2[84]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(COMRAM[6]), i2c_eeprom_read_calibration@buffer(COMRAM[4]), calibrationParameters(BANK2[84]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 16
		 -> rtcc_write_eeprom@date(COMRAM[6]), _write_calibration@buffer(COMRAM[16]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 84
		 -> rtcc_read_eeprom@date(COMRAM[6]), i2c_eeprom_read_calibration@buffer(COMRAM[4]), i2c_eeprom_readByte@addr(COMRAM[1]), calibrationParameters(BANK2[84]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_adc_start@configuration_byte(COMRAM[1]), i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), 
		 -> i2c_digipot_set_defaults@data_array(COMRAM[2]), _ic2_display_set_address@data_array(COMRAM[2]), i2c_display_init@init_sequence(COMRAM[9]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2404	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2370	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2369	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2317	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2316	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1970$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1970$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1970$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1970$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1970$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1970$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1970$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1970$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1970$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1970$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1970$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK2[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S102$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S92$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S92$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S68$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S68$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S68$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S68$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_bootloader_run
    _ui_run->_i2c_display_send_init_sequence
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    __ui_encoder->_i2c_eeprom_writeByte
    _rtcc_init->_rtcc_read_eeprom
    _rtcc_read_eeprom->_i2c_eeprom_read
    _i2c_init->_i2c_set_frequency
    _i2c_eeprom_read_calibration->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    _flash_init->__flash_set_page_size
    __flash_set_page_size->_flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_page_read
    _fat_format->_flash_page_write
    _normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_writeByte->__i2c_write
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _i2c_eeprom_tasks->__write_calibration
    __write_calibration->_i2c_eeprom_write
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _bootloader_run->__bootloader_verify_file
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    _fat_read_from_file->__read_fat
    _fat_read_from_file->__read_root
    __read_root->_flash_partial_read
    __read_fat->_flash_partial_read
    __bootloader_find_file->_fat_find_file
    _fat_get_file_size->_flash_partial_read
    _fat_find_file->_flash_partial_read
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->_flash_is_busy
    __flash_write_page_from_buffer->_flash_is_busy
    __flash_compare_page_to_buffer->_flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->_flash_partial_read
    _flash_partial_read->_flash_is_busy
    _flash_is_busy->__flash_get_status
    __flash_wakeup->__flash_spi_tx
    __flash_get_status->__flash_spi_tx_rx
    _APP_DeviceCustomHIDTasks->__parse_command_short
    __parse_command_short->_rtcc_write_eeprom
    _rtcc_write_eeprom->_i2c_eeprom_write
    _i2c_eeprom_write->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->_rtcc_set_day
    __parse_command_long->_rtcc_set_hours
    __parse_command_long->_rtcc_set_minutes
    __parse_command_long->_rtcc_set_month
    __parse_command_long->_rtcc_set_seconds
    __parse_command_long->_rtcc_set_year
    __parse_command_calibration->_schedule_eeprom_write_task
    __fill_buffer_get_display2->_display_get_character
    __fill_buffer_get_display1->_display_get_character
    __fill_buffer_get_calibration2->_memcpy
    __fill_buffer_get_calibration1->_memcpy

Critical Paths under _main in BANK0

    _main->_system_init
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  551595
                                             87 COMRAM     2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                     _bootloader_run
                    _display_prepare
                     _display_update
                   _i2c_eeprom_tasks
                        _normal_mode
                        _system_init
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   13321
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    2516
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    2540
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    2540
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    2562
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0    3163
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                        181   181      0   42650
                                              0 BANK0    130   130      0
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
        _i2c_eeprom_read_calibration
                           _i2c_init
                          _rtcc_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rtcc_init                                            0     0      0    4281
                   _rtcc_read_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_read_eeprom                                     6     6      0    4281
                                             25 COMRAM     6     6      0
                    _i2c_eeprom_read
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_read_calibration                          9     9      0    5717
                                             25 COMRAM     9     9      0
__i2c_eeprom_load_default_calibratio
                    _i2c_eeprom_read
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_read                                      8     3      5    3986
                                             17 COMRAM     8     3      5
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_eeprom_load_default_calibration                 3     0      3    1278
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    7662
               __flash_set_page_size
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    7662
                                             19 COMRAM     5     5      0
                      __flash_spi_tx
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   24941
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    8549
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   16392
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _normal_mode                                          0     0      0    6528
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3163
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    3365
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (6) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_eeprom_tasks                                     0     0      0    3600
                 __write_calibration
         _get_next_eeprom_write_task
 ---------------------------------------------------------------------------------
 (2) _get_next_eeprom_write_task                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __write_calibration                                  24    24      0    3577
                                             37 COMRAM    24    24      0
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    3900
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    3032
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    2562
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   63681
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (2) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (2) __display_start                                       1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (2) __display_found                                       4     4      0   14817
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) __display_failed                                      2     2      0   21428
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u32                                    6     0      6   14409
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0   88479
                                             86 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             17    17      0   36569
                                             69 COMRAM    17    17      0
          __bootloader_check_address
                  _fat_get_file_size
                 _fat_read_from_file
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 27    27      0   35628
                                             69 COMRAM     8     8      0
                                             45 BANK0     19    19      0
          __bootloader_check_address
                 _fat_read_from_file
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    4861
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    4503
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  67    57     10   24966
                                             47 COMRAM    22    12     10
                                              0 BANK0     45    45      0
                          __read_fat
                         __read_root
               __sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __sector_from_cluster                                 2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __read_root                                           8     6      2    7771
                                             39 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    7883
                                             39 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   16260
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   14    10      4    7529
                                             39 COMRAM    14    10      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       20    16      4    8731
                                             39 COMRAM    20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              8     2      6     668
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  189805
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   26060
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   26060
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0  110213
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0  106103
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   79951
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   27314
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   26531
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   26060
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    4963
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    6763
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    5904
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    5171
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    5648
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  119978
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  119978
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  113212
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   57357
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   55599
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24251
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15061
                                             36 COMRAM    11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) _flash_page_write                                     5     1      4   14716
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 COMRAM    11     4      7
                   __flash_spi_tx_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_tx                                    12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 COMRAM    10     7      3
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                      __flash_spi_tx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   17248
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    8250
                                             43 COMRAM    10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (4) _flash_page_read                                      4     0      4    7969
                                             39 COMRAM     4     0      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                  20    12      8    7391
                                             19 COMRAM    20    12      8
                   __flash_spi_tx_rx
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                      __flash_spi_tx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx                                        8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                   __flash_spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) __flash_spi_tx_rx                                    12     4      8     888
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                            11    11      0   18219
                                             44 COMRAM    11    11      0
               _USBTransferOnePacket
      __fill_buffer_get_calibration1
      __fill_buffer_get_calibration2
          __fill_buffer_get_display1
          __fill_buffer_get_display2
            __fill_buffer_get_status
         __parse_command_calibration
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0    3442
                                             43 COMRAM     1     1      0
                  _rtcc_write_eeprom
 ---------------------------------------------------------------------------------
 (3) _rtcc_write_eeprom                                    6     6      0    3420
                                             37 COMRAM     6     6      0
                   _i2c_eeprom_write
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_write                                    27    22      5    3276
                                             10 COMRAM    27    22      5
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    2448
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  2     1      1     375
                                              1 COMRAM     2     1      1
                       _rtcc_set_day
                     _rtcc_set_hours
                   _rtcc_set_minutes
                     _rtcc_set_month
                   _rtcc_set_seconds
                      _rtcc_set_year
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_year                                        1     1      0      22
                                              0 COMRAM     1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_seconds                                     1     1      0      22
                                              0 COMRAM     1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_month                                       1     1      0      22
                                              0 COMRAM     1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_minutes                                     1     1      0      22
                                              0 COMRAM     1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_hours                                       1     1      0      22
                                              0 COMRAM     1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (4) _rtcc_set_day                                         1     1      0      22
                                              0 COMRAM     1     1      0
                __rtcc_write_disable
                 __rtcc_write_enable
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_enable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __rtcc_write_disable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __parse_command_calibration                           9     5      4     691
                                              3 COMRAM     8     4      4
         _schedule_eeprom_write_task
 ---------------------------------------------------------------------------------
 (3) _schedule_eeprom_write_task                           3     3      0     112
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              0     0      0       0
                       _rtcc_get_day
                     _rtcc_get_hours
                   _rtcc_get_minutes
                     _rtcc_get_month
                   _rtcc_get_seconds
                      _rtcc_get_year
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_year                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_seconds                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_month                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_minutes                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_hours                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _rtcc_get_day                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display2                            4     4      0     382
                                              4 COMRAM     4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display1                            4     4      0     382
                                              4 COMRAM     4     4      0
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     222
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration2                        0     0      0    3881
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_calibration1                        0     0      0    3881
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    3881
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    4915
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     __fill_buffer_get_calibration1
       _memcpy
     __fill_buffer_get_calibration2
       _memcpy
     __fill_buffer_get_display1
       _display_get_character
     __fill_buffer_get_display2
       _display_get_character
     __fill_buffer_get_status
       _rtcc_get_day
       _rtcc_get_hours
       _rtcc_get_minutes
       _rtcc_get_month
       _rtcc_get_seconds
       _rtcc_get_year
       _ui_get_status
     __parse_command_calibration
       _schedule_eeprom_write_task
     __parse_command_long
       _rtcc_set_day
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_hours
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_minutes
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_month
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_seconds
         __rtcc_write_disable
         __rtcc_write_enable
       _rtcc_set_year
         __rtcc_write_disable
         __rtcc_write_enable
     __parse_command_short
       _rtcc_write_eeprom
         _i2c_eeprom_write
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_get_day
         _rtcc_get_hours
         _rtcc_get_minutes
         _rtcc_get_month
         _rtcc_get_seconds
         _rtcc_get_year
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   _flash_partial_read
                     __flash_spi_tx_rx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_page_from_buffer
                     __flash_spi_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
                   __flash_write_to_buffer
                     __flash_spi_tx_tx
                     _flash_is_busy
                       __flash_get_status
                         __flash_spi_tx_rx
                       __flash_wakeup
                         __flash_spi_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 _flash_partial_read
                   __flash_spi_tx_rx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     __flash_spi_tx_rx
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_page_from_buffer
                   __flash_spi_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
                 __flash_write_to_buffer
                   __flash_spi_tx_tx
                   _flash_is_busy
                     __flash_get_status
                       __flash_spi_tx_rx
                     __flash_wakeup
                       __flash_spi_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
         _strncmp
       _fat_get_file_size
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
     __bootloader_program
       __bootloader_check_address
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
         __read_root
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
         __sector_from_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_size
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
         __read_root
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
         __sector_from_cluster
         _flash_partial_read
           __flash_spi_tx_rx
           _flash_is_busy
             __flash_get_status
               __flash_spi_tx_rx
             __flash_wakeup
               __flash_spi_tx
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_start
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _i2c_eeprom_tasks
     __write_calibration
       _i2c_eeprom_write
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
     _get_next_eeprom_write_task
   _normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _system_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_page_write
           __flash_compare_page_to_buffer
             __flash_get_status
               __flash_spi_tx_rx
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_page_from_buffer
             __flash_spi_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
           __flash_write_to_buffer
             __flash_spi_tx_tx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_page_read
           _flash_partial_read
             __flash_spi_tx_rx
             _flash_is_busy
               __flash_get_status
                 __flash_spi_tx_rx
               __flash_wakeup
                 __flash_spi_tx
     _flash_init
       __flash_set_page_size
         __flash_spi_tx
         _flash_is_busy
           __flash_get_status
             __flash_spi_tx_rx
           __flash_wakeup
             __flash_spi_tx
         _memcpy
     _i2c_eeprom_read_calibration
       __i2c_eeprom_load_default_calibration
       _i2c_eeprom_read
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _schedule_eeprom_write_task
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _rtcc_init
       _rtcc_read_eeprom
         _i2c_eeprom_read
           __i2c_read
             __i2c_acknowledge
             __i2c_get
             __i2c_not_acknowledge
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _rtcc_set_day
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_hours
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_minutes
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_month
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_seconds
           __rtcc_write_disable
           __rtcc_write_enable
         _rtcc_set_year
           __rtcc_write_disable
           __rtcc_write_enable
     _ui_init
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      DA      11       85.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F4       9       95.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F9       7       97.3%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3C6      31        0.0%
DATA                 0      0     9C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Jul 09 23:25:33 2018

                          __end_of_fat_read_from_file 29B0  
                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E7B  
              __end_of_i2c_display_send_init_sequence 74BE  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 7492  
                                 __system_timer0_init 7700  
                             rtcc_set_minutes@minutes 0001  
                                                  _os 00E2  
                                       _USBDeviceInit 377E  
                                  _USBCheckHIDRequest 4770  
                __bootloader_verify_file@return_value 004F  
                                        __CFG_CP0$OFF 000000  
                                 __end_of_system_init 4B4C  
                           ??_internalFlash_erasePage 0005  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l140 37E4  
                                                 l151 3184  
                                                 l152 3182  
                                                 l330 4F9E  
                                                 l219 43DC  
                                                 l157 31C8  
                         __end_of_USBStdGetDscHandler 3B7E  
                                                 l166 326C  
                                                 l167 32F2  
                                                 l344 4978  
                                                 l168 327E  
                                                 l353 49DE  
                                                 l282 5546  
                                                 l621 08C2  
                                                 l285 55D6  
                                                 l286 5558  
                                                 l359 1FE6  
                                                 l287 555E  
                                                 l295 6FD6  
                                                 l378 21CA  
                                                 l644 0B84  
                                                 l628 0A34  
                                                 l741 3E06  
                                                 l575 242E  
                                                 l666 2BB0  
                                                 l692 1DA8  
                                                 _BDT 000D00  
                                                 l685 1CC8  
                                                 l767 6ABA  
                                                 l696 1E3E  
                                                 l880 684E  
                       __size_of__sector_from_cluster 000E  
                                                 l984 13B6  
                                                 _LBA 015B  
                                                 _LUN 01B9  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                                _i2c_digipot_reset_on 767A  
                            __size_of__display_failed 02F6  
                                         _start_line1 8D88  
                                         _start_line2 8D77  
                                         _start_line3 8CF6  
                                         _start_line4 8E62  
                                          _USBSuspend 736A  
                                  _internalFlash_read 72CC  
                              __end_of_display_update 6548  
                                USBStdSetCfgHandler@i 0018  
                              i2c_eeprom_read@address 0012  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 315C  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                                      _USBDeviceState 00FC  
                                    _rtcc_read_eeprom 71A4  
                            __size_of__display_verify 012C  
                             rtcc_set_seconds@seconds 0001  
                               ??_USBCtrlTrfRxService 0001  
                                __read_fat@fat_sector 002A  
                                       _hex_file_size 0143  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                         __flash_write_to_buffer@data 0016  
                                                l1124 7868  
                                                l1302 7964  
                                                l2111 6AE6  
                                                l1320 795C  
                                                l1240 4B24  
                                                l1314 7970  
                                                l1308 79B4  
                                                l2073 695A  
                                                l1521 4892  
                                                l2082 5E92  
                                                l2146 6C78  
                                                l2091 5CEA  
                                                l1293 79BC  
                                                l2079 5E5E  
                                                l2088 5CAE  
                                                l3240 6BAE  
                                                l1449 6BDE  
                                                l3161 59CE  
                                                l3250 7098  
                                                l1707 52A2  
                                                l1708 52A8  
                          USBConfigureEndpoint@handle 0007  
                                                l1709 52DA  
                                                l2801 75A2  
                                                l2810 7300  
                                                l2706 066C  
                                                l3187 609A  
                                                l1909 787A  
                                                l3197 6604  
                                                l1927 78A2  
                                                l1945 78DE  
                                                l1963 78CA  
                                                l2667 5066  
                                                l1981 78B6  
                                                l2797 610E  
                                                l1999 788E  
                                                l9610 76DC  
                                                l9702 62B0  
                                                l9712 62F2  
                                                l9624 5C2C  
                                                l9642 45AE  
                                                l9634 4584  
                                                l9706 62BA  
                                                l9730 6C5A  
                                                l9802 723E  
                                                l9556 6ABE  
                                                l9572 6B00  
                                                l9724 6310  
                                                l9654 462C  
                                                l9670 44C6  
                                                l9752 68C6  
                                                l9736 6C6E  
                                                l9840 411A  
                                                l9832 4090  
                                                l9920 47B6  
                                                l9912 4790  
                                                l9850 3DEC  
                                                l9746 68B2  
                                                l9930 47E0  
                                                l9764 6314  
                                                l9860 3E40  
                                                l9756 68D0  
                                                l9844 4122  
                                                l9940 480E  
                                                l9862 3E4C  
                                                l9950 4838  
                                                l9934 47F0  
                                                l9918 47AE  
                                                STR_1 8FF1  
                                                l9872 3E7C  
                                                l9696 629C  
                                                l9944 481A  
                                                l9928 47CE  
                                                STR_2 8FF1  
                                                STR_3 8FF1  
                                                l9866 3E5E  
                                                l9858 3E38  
                                                l9890 3ECA  
                                                STR_4 8FF1  
                                                STR_5 8FF1  
                                                l9868 3E6A  
                                                l9956 4844  
                                                STR_6 8FF1  
                      __fill_buffer_get_display1@cntr 0006  
                                                STR_7 8FF1  
                               __end_of_checked_line1 8E09  
                                                l9886 3EBE  
                                                l9798 7230  
                                                l9990 4CC8  
                                                l9966 4C4A  
                                                STR_8 8FF1  
                               __end_of_checked_line2 8CE2  
                                                STR_9 8FDC  
                               __end_of_checked_line3 8E7B  
                               __end_of_checked_line4 8D77  
                                                l9986 4CA2  
                                                l9988 4CC0  
                                      _bootloader_run 6CF8  
                      __fill_buffer_get_display1@line 0007  
                                 ?_internalFlash_read 000E  
                      __fill_buffer_get_display2@cntr 0006  
                      __fill_buffer_get_display2@line 0007  
                                       _i2c_frequency 0186  
                                                u7100 4DE0  
                                                u7120 66B2  
                                                u7107 4DD6  
                                                u7127 66A8  
                                                u6335 62C6  
                                                u7080 4DA0  
                                                u7145 2BDA  
                                                u6425 68DC  
                                                u6514 410A  
                                                u6515 4104  
                                                u7500 69A6  
                                                u8140 0B70  
                                                u8028 0926  
                                                u6445 632C  
                                                u8029 093A  
                                                u8038 0956  
                                                u7255 1CF2  
                                                u8039 096A  
                                                u7087 4D96  
                               ??_USBCtrlTrfTxService 0001  
                                                u7408 1F1A  
                                                u7409 1F2E  
                                                u7506 69A8  
                                                u7450 696C  
                                                u7338 1E08  
                                                u7339 1E1C  
                                                u7460 6978  
                                                u7380 1F12  
                                                u8500 534C  
                                                u7470 6984  
                                                u7198 2C60  
                                                u7390 1F14  
                                                u7278 1D26  
                                                u8078 0A4C  
                                                u6478 40B2  
                                                u7710 3ABC  
                                                u8510 5370  
                                                u7199 2C74  
                                                u7279 1D3A  
                                                u8079 0A60  
                                                u6479 40C6  
                                                _UCFG 000F39  
                                                u7480 6990  
                                                u7720 3AF0  
                                                u8520 5394  
                                                u8601 333E  
                                                u7490 699C  
                                                u7458 696E  
                                                u6498 40D8  
                                                u6499 40EC  
                                                u9155 63AE  
                                                u7468 697A  
                                                u7740 3B4A  
                                                _UEP0 000F26  
                                                u7717 3AB2  
                                                _UEP1 000F27  
                                                u7478 6986  
                                                u6950 7416  
                                                u7727 3AE6  
                                                u8535 6882  
                                                u7488 6992  
                                                u6960 73E4  
                                                u8465 6136  
                                                u7498 699E  
                                                u8490 5326  
                                                u7747 3B40  
                                                _UEIE 000F37  
                                                u9540 4FE0  
                                                u9460 00A2  
                                                u8645 647C  
                                                u8485 6D56  
                                                u9615 775E  
                                                u9560 503C  
                                                u8665 7472  
                                                u9625 7344  
                                                u8914 3FD0  
                                                u8915 3FCA  
                                                u9635 60BA  
                                                u8925 7170  
                                                u8838 3EFE  
                                                u8839 3F12  
                                                u8864 3F46  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u8865 3F40  
                                                u8874 3F7A  
                                                u8970 1124  
                                                u8875 3F74  
                                                u8980 11D0  
                                                u8990 127C  
                                                u8898 3F9E  
                                                u8899 3FB2  
                               _i2c_digipot_reset_off 769C  
                  __fill_buffer_get_display1@position 0008  
                             ??_fat_get_format_status 002C  
                                      _ResetSenseData 5F20  
              USBStdFeatureReqHandler@current_ep_data 001B  
                                                _pDst 017E  
                                                _main 4DF8  
                                                _itoa 701E  
                         __size_of_APP_DeviceMSDTasks 0014  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 52F8  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 594E  
                  __fill_buffer_get_display2@position 0008  
                          ??_ExternalFlash_SectorRead 0034  
                                     ??_rtcc_get_year 0001  
                             __bootloader_verify_file 16D6  
                           _ExternalFlash_MediaDetect 79DA  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 793E  
                               _display_get_character 7542  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DF9  
                                __end_of_failed_line2 8D54  
                                __end_of_failed_line4 8E73  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 4A5C  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 049C  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           __size_of_flash_page_write 004A  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 0174  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 3608  
                                      _hex_file_entry 0199  
                              _bootloader_get_entries 7980  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 7432  
                     __flash_spi_tx_tx@command_length 0003  
                            _system_ui_inactive_count 0172  
                                       __CFG_PLLDIV$2 000000  
                                     ??_rtcc_set_year 0001  
                       i2c_display_write_fixed@length 0008  
                                               l10010 4680  
                                               l10020 4696  
                                               l10100 6B16  
                                               l10004 4D04  
                                               l10030 46CE  
                                               l10040 46FC  
                                               l10104 6B20  
                                               l10112 6B50  
                                               l10200 7504  
                                               l10050 471E  
                                               l10106 6B32  
                                               l11010 74D8  
                                               l10060 4738  
                                               l10036 46DC  
                                               l11100 41DE  
                                               l10108 6B3E  
                                               l10212 5EB6  
                                               l10204 5E9C  
                                               l10220 5ECE  
                                               l10070 474E  
                                               l10302 2C22  
                                               l10150 73E8  
                                               l10206 5EA4  
                                               l11006 74CE  
                                               l10136 741A  
                                               l10080 4762  
                                               l10072 4752  
                                               l10048 471A  
                                               l10064 473C  
                                               l10400 1DD6  
                                               l10240 4D3A  
                                               l11104 41F8  
                                               l10216 5EC0  
                                               l10208 5EAC  
                                               l10058 4732  
                                               l10082 4766  
                                               l10322 2CB0  
                                               l12010 3F30  
                                               l11122 4984  
                                               l11034 4386  
                                               l11018 74E6  
                                               l10162 6B7C  
                                               l10340 2D1A  
                                               l10332 2CFA  
                                               l10316 2C88  
                                               l10308 2C3C  
                                               l10420 1ED2  
                                               l10404 1DFC  
                                               l10244 4D48  
                                               l12004 4FA8  
                                               l11124 498A  
                                               l10164 6B84  
                                               l10078 475E  
                                               l10350 2D66  
                                               l10334 2D00  
                                               l10430 1F42  
                                               l10414 1E5C  
                                               l12030 4002  
                                               l12014 3F64  
                                               l10254 4D78  
                                               l10262 4DB0  
                                               l10094 6A84  
                                               l11134 49AC  
                                               l11126 4990  
                                               l11054 440C  
                                               l10174 6BA4  
                                               l10166 6B88  
                                               l10190 708E  
                                               l10182 706E  
                                               l11302 533A  
                                               l10328 2CE2  
                                               l10360 2DA2  
                                               l10432 1F5E  
                                               l10408 1E42  
                                               l12032 4008  
                                               l10264 4DB8  
                                               l10272 4DF0  
                                               l11136 49B2  
                                               l11152 4A18  
                                               l10184 7076  
                                               l10504 5990  
                                               l11312 5360  
                                               l11400 5174  
                                               l10354 2D76  
                                               l10442 1F88  
                                               l11170 6644  
                                               l12034 400C  
                                               l13002 23F0  
                                               l11082 415C  
                                               l11138 49B8  
                                               l10186 707A  
                                               l11322 5384  
                                               l12202 1066  
                                               l12122 0D86  
                                               l10276 6692  
                                               l10284 66D0  
                                               l11172 664A  
                                               l11156 6618  
                                               l10700 205E  
                                               l10620 3A48  
                                               l10196 74F4  
                                               l10612 4C10  
                                               l11148 49FA  
                                               l11332 53A8  
                                               l11420 5188  
                                               l11412 5180  
                                               l11404 5178  
                                               l12108 0D04  
                                               l13102 6DA0  
                                               l12062 6BC0  
                                               l11270 6156  
                                               l10462 585E  
                                               l10294 2C08  
                                               l10358 2D7E  
                                               l10438 1F78  
                                               l10382 1D72  
                                               l10446 1F90  
                                               l11174 6650  
                                               l11166 6638  
                                               l13014 2436  
                                               l13006 2402  
                                               l12214 1110  
                                               l11510 257E  
                                               l11502 255E  
                                               l12150 0E8A  
                                               l13120 6DDA  
                                               l13112 6DB4  
                                               l13200 3D8A  
                                               l10384 1D78  
                                               l10448 1FB4  
                                               l13032 2492  
                                               l13040 24D0  
                                               l10536 50DC  
                                               l11088 4180  
                                               l10712 20D0  
                                               l10640 3B56  
                                               l10632 3AF6  
                                               l10624 3A60  
                                               l11440 519C  
                                               l11432 5194  
                                               l11424 518C  
                                               l11416 5184  
                                               l11408 517C  
                                               l12136 0E08  
                                               l13106 6DA8  
                                               l10466 6962  
                                               l11274 6186  
                                               l10458 5846  
                                               l11178 6658  
                                               l13034 24B0  
                                               l13026 245A  
                                               l10722 2122  
                                               l10706 20AA  
                                               l10642 3B5E  
                                               l10634 3AFE  
                                               l10570 5A62  
                                               l11362 5FD8  
                                               l12250 1314  
                                               l12226 11BC  
                                               l11610 25E2  
                                               l11602 25DA  
                                               l11530 2592  
                                               l11522 258A  
                                               l11514 2582  
                                               l11506 256E  
                                               l12330 61E0  
                                               l13108 6DAC  
                                               l13204 3D92  
                                               l10812 09E2  
                                               l13036 24B8  
                                               l10740 21B0  
                                               l10724 213E  
                                               l11700 69D4  
                                               l11452 51A8  
                                               l11444 51A0  
                                               l11436 5198  
                                               l11428 5190  
                                               l11380 5160  
                                               l12324 61AA  
                                               l12164 0F0C  
                                               l13300 431A  
                              ?_i2c_digipot_backlight 0001  
                                               l13150 72AA  
                                               l10822 0A04  
                                               l10646 3B66  
                                               l10590 4B96  
                                               l10566 5A46  
                                               l14030 3210  
                                               l14006 31C0  
                                               l11366 6008  
                                               l11358 5FA8  
                                               l12422 27BA  
                                               l10494 5956  
                                               l12238 1268  
                                               l11630 25F6  
                                               l11622 25EE  
                                               l11614 25E6  
                                               l11606 25DE  
                                               l11550 25A6  
                                               l11542 259E  
                                               l11534 2596  
                                               l11526 258E  
                                               l11518 2586  
                                               l11470 24F4  
                                               l12510 29FC  
                                               l12334 620C  
                                               l12094 0C82  
                                               l13302 4322  
                                               l13160 67B2  
                                               l10912 751A  
                                               l10920 7528  
                                               l13144 7298  
                                               l10904 0C2E  
                                               l10808 09D4  
                                               l10728 2158  
                                               l14024 31EA  
                                               l11368 6010  
                                               l12432 285C  
                                               l13400 5D18  
                                               l11448 51A4  
                                               l11392 516C  
                                               l11384 5164  
                                               l11800 33E4  
                                               l11720 3326  
                                               l12600 2B70  
                                               l12520 2A24  
                                               l13082 6DF4  
                                               l13162 67BA  
                                               l10914 751E  
                                               l10922 753C  
                                               l13146 729E  
                                               l13154 72B0  
                                               l10850 0AD6  
                                               l10834 0A6E  
                                               l10818 09FC  
                                               l10770 08B4  
                                               l10762 0894  
                                               l10754 222C  
                                               l10738 21A4  
                                               l10658 557E  
                                               l10586 4B8E  
                                               l14042 322C  
                                               l14018 31DE  
                                               l12362 53DC  
                                               l12426 27E0  
                                               l11706 69D8  
                                               l11650 260A  
                                               l11642 2602  
                                               l11634 25FA  
                                               l11626 25F2  
                                               l11618 25EA  
                                               l11570 25BA  
                                               l11562 25B2  
                                               l11554 25AA  
                                               l11546 25A2  
                                               l11538 259A  
                                               l11490 252E  
                                               l11482 250E  
                                               l11474 24F8  
                                               l11466 24F0  
                                               l11458 51AC  
                                               l12610 2B98  
                                               l12506 29E0  
                                               l12178 0F8E  
                                               l12194 1010  
                                               l13306 432A  
                                               l13084 6DF8  
                                               l13180 3CBC  
                                               l13164 67C2  
                                               l13172 67DA  
                                               l10916 7522  
                                               l13148 72A4  
                                               l10860 0B0A  
                                               l10828 0A2C  
                                               l10908 0C36  
                                               l10756 2238  
                                               l10748 21E6  
                                               l10668 55BE  
                                               l10596 4BC2  
                                               l12356 53C8  
                                               l12700 5010  
                                               l12452 2992  
                                               l13500 39E6  
                                               l13412 5D44  
                                               l13404 5D20  
                                               l14212 6828  
                                               l11396 5170  
                                               l11388 5168  
                                               l11820 33F8  
                                               l11812 33F0  
                                               l11804 33E8  
                                               l11740 33A8  
                                               l12524 2A40  
                                               l13308 4356  
                                               l13078 6DEC  
                                               l13190 3D62  
                                               l13182 3CE8  
                                               l13166 67CA  
                                               l13158 67AA  
                                               l10942 6F3E  
                                               l14302 150A  
                                               l10870 0B3E  
                                               l10846 0AA2  
                                               l10766 08A4  
                                               l10686 1FE0  
                                               l14062 3276  
                                               l14038 3222  
                                               l12446 293A  
                                               l12438 2888  
                                               l12630 0188  
                                               l11654 260E  
                                               l11646 2606  
                                               l11638 25FE  
                                               l11590 25CE  
                                               l11582 25C6  
                                               l11574 25BE  
                                               l11566 25B6  
                                               l11558 25AE  
                                               l11494 253E  
                                               l11486 251E  
                                               l11478 24FC  
                                               l11734 336C  
                                               l11726 3334  
                                               l12550 2AAA  
                                               l12534 2A68  
                                               l13096 6E26  
                                               l13088 6E00  
                                               l13192 3D6A  
                                               l13168 67D2  
                                               l10936 6F22  
                                               l10784 091A  
                                               l14056 3260  
                                               l14048 3238  
                                               l12376 5412  
                                               l12712 5072  
                                               l12624 00B4  
                                               l12616 003E  
                                               l13600 3592  
                                               l13520 2E30  
                                               l13512 2DDC  
                                               l13504 3A14  
                                               l13424 7312  
                                               l11680 69C0  
                                               l11664 2616  
                                               l11816 33F4  
                                               l11808 33EC  
                                               l11760 33BC  
                                               l11752 33B4  
                                               l11744 33AC  
                                               l12560 2AD0  
                                               l12472 58FA  
                                               l13272 4252  
                                               l13440 5B58  
                                               l14400 4870  
                                               l13194 3D72  
                                               l13186 3D3A  
                                               l14330 1674  
                                               l14322 15A8  
                                               l14306 151E  
                                               l14250 13D6  
                                               l14314 1556  
                                               l10882 0B9A  
                                               l10874 0B58  
                                               l10866 0B26  
                                               l12810 37C0  
                                               l14082 32D2  
                                               l12394 5472  
                                               l12706 5068  
                                               l12634 0202  
                                               l11906 608C  
                                               l11922 65F6  
                                               l11914 65C2  
                                               l11842 7590  
                                               l11658 2612  
                                               l11594 25D2  
                                               l11586 25CA  
                                               l11578 25C2  
                                               l11498 254E  
                                               l11826 33FC  
                                               l12562 2AD8  
                                               l12538 2A84  
                                               l12490 594A  
                                               l12458 58C6  
                                               l13290 42F2  
                                               l13450 5B9A  
                                               l13196 3D7A  
                                               l13188 3D5A  
                                               l14332 167A  
                                               l14316 158A  
                                               l10892 0BD8  
                                               l14084 32EE  
                                               l14076 32AC  
                                               l12388 5466  
                                               l12660 039C  
                                               l12652 033E  
                                               l10980 7042  
                                               l13604 35B8  
                                               l13460 6E84  
                                               l11916 65CE  
                                               l13620 1A2A  
                                               l13612 19D6  
                                               l13524 2E56  
                                               l13516 2E02  
                                               l13508 2DAE  
                                               l10964 5DBE  
                                               l14228 6856  
                                               l11692 69CC  
                                               l11684 69C4  
                                               l11676 69BC  
                                               l11780 33D0  
                                               l11772 33C8  
                                               l11764 33C0  
                                               l11756 33B8  
                                               l11748 33B0  
                                               l11828 3488  
                                               l12572 2B00  
                                               l12548 2AA2  
                                               l12476 5916  
                                               l12468 58F4  
                                               l13292 42FA  
                                               l13268 424A  
                                               l13444 5B78  
                                               l13436 5B38  
                                               l13198 3D82  
                                               l10990 782C  
                                               l14326 15E0  
                                               l14318 158E  
                                               l14334 16B0  
                                               l14270 1466  
                                               l14262 141A  
                                               l14254 13EA  
                                               l10894 0BEC  
                                               l10886 0BBC  
                                               l12814 37C8  
                                               l12398 5478  
                                               l12718 507E  
                                               l13470 6EB8  
                                               l13454 6E78  
                                               l11918 65D2  
                                               l13542 2F36  
                                               l13534 2ED8  
                                               l13550 3B84  
                                               l13382 6A3C  
                                               l10958 5DA2  
                                               l11598 25D6  
                                               l12486 5944  
                                               l13294 4302  
                                               l14414 48BC  
                                               l14264 1436  
                                               l10888 0BC2  
                                               l10896 0BEE  
                                               l12648 0310  
                                               l13608 35E6  
                                               l13464 6E8C  
                                               l13640 1B1E  
                                               l13632 1AAC  
                                               l13624 1A58  
                                               l13616 1A04  
                                               l13528 2E84  
                                               l13712 3116  
                                               l13480 3918  
                                               l11696 69D0  
                                               l11688 69C8  
                                               l11792 33DC  
                                               l11784 33D4  
                                               l11776 33CC  
                                               l11768 33C4  
                                               l12576 2B1C  
                                               l12496 29B8  
                                               l13296 430A  
                                               l13288 42D8  
                                               l14424 48E8  
                                               l14408 48A6  
                                               l10994 7836  
                                               l10986 7820  
                                               l14282 14AA  
                                               l14274 147A  
                                               l14258 1406  
                                               l10898 0BF6  
                                               l12842 3836  
                                               l12826 37F0  
                                               l12914 6FD2  
                                               l12682 0458  
                                               l13458 6E80  
                                               l13730 3690  
                                               l13722 363C  
                                               l13650 1B9C  
                                               l13634 1ACE  
                                               l13546 2F64  
                                               l13538 2F10  
                                               l13570 3C5A  
                                               l13562 3C06  
                                               l13554 3BB2  
                                               l12586 2B3A  
                                               l13298 4312  
                                               l14370 7154  
                                               l14362 7146  
                                               l14442 492E  
                                               l14434 4908  
                                               l14292 14DE  
                                               l14268 144A  
                                               l11980 4F1E  
                                               l11964 673E  
                                               l11956 66F2  
                                               l12932 57EA  
                                               l13804 5736  
                                               l12772 60E8  
                                               l12676 0426  
                                               l12668 03C0  
                                               l13820 178C  
                                               l13812 1702  
                                               l14452 6CFC  
                                               l13580 34C0  
                                               l13652 1BBE  
                                               l13644 1B4C  
                                               l13628 1A7E  
                                               l13708 30E8  
                                               l13492 3992  
                                               l13484 393E  
                                               l13476 38EA  
                                               l13388 6A58  
                                               l14380 6400  
                                               l11796 33E0  
                                               l11788 33D8  
                                               l12588 2B42  
                                               l10998 7842  
                                               l14286 14C6  
                                               l14278 1496  
                                               l12942 226A  
                                               l12934 57F0  
                                               l12838 382E  
                                               l12694 4FBA  
                                               l12774 60EC  
                                               l13822 17EE  
                                               l14454 6D02  
                                               l13734 36B6  
                                               l13726 3662  
                                               l13718 360E  
                                               l11894 604C  
                                               l13670 1C80  
                                               l13646 1B6E  
                                               l13638 1AFC  
                                               l13662 1C2A  
                                               l13566 3C2C  
                                               l13558 3BD8  
                                               l14470 523A  
                                               l14390 6428  
                                               l14382 6408  
                                               l12598 2B68  
                                               l14710 4E3C  
                                               l14288 14CA  
                                               l12952 2290  
                                               l11992 4F64  
                                               l12848 3892  
                                               l12768 60E0  
                                               l12688 048A  
                                               l14456 6D08  
                                               l14464 6D1A  
                                               l13584 34E6  
                                               l13576 3492  
                                               l13744 372E  
                                               l11896 6058  
                                               l13656 1BEC  
                                               l13664 1C4C  
                                               l13680 2FBA  
                                               l13496 39C0  
                                               l13488 396C  
                                               l14480 5258  
                                               l14472 5240  
                                               l14392 6430  
                                               l14384 6410  
                                               l14376 7160  
                                               l14368 7152  
                                               l14448 493E  
                                               l14720 4E64  
                                               l14712 4E44  
                                               l14298 14EC  
                                               l12946 2284  
                                               l11978 4F18  
                                               l12778 60F4  
                                               l13930 073E  
                                               l14458 6D0E  
                                               l13738 36E4  
                                               l11898 605C  
                                               l13666 1C52  
                                               l14474 5246  
                                               l14386 6418  
                                               l14714 4E4C  
                                               l14730 4E88  
                                               l12948 2288  
                                               l12876 7286  
                                               l13860 198E  
                                               l13844 18D0  
                                               l13852 192E  
                                               l13596 355A  
                                               l13588 3514  
                                               l13748 375C  
                                               l13692 3034  
                                               l13684 2FE0  
                                               l13676 2F8C  
                                               l14492 52E4  
                                               l14476 524C  
                                               l14468 5234  
                                               l14484 525E  
                                               l14388 6420  
                                               l14396 6438  
                                               l14724 4E78  
                                               l14716 4E54  
                                               l14732 4ECC  
                                               l14708 4E34  
                                               l12982 238A  
                                               l12958 22B8  
                                               l11998 4F84  
                                               l12878 7288  
                                               l13950 0826  
                                               l13870 19B4  
                                               l13838 1878  
                                               l14486 529C  
                                               l14478 5252  
                                               l14718 4E5C  
                                               l12992 23B2  
                                               l13936 07DA  
                                               l13952 082C  
                                               l13928 0734  
                                               l13848 18FC  
                                               l13696 3062  
                                               l13688 300E  
                                               l14488 52B0  
                                               l15480 2746  
                                               l12986 2394  
                                               l15490 5F1A  
                                               l13954 0842  
                                               l13882 053C  
                                               l12996 23BE  
                                               l13972 087A  
                                               l13884 059E  
                                               l12998 23D4  
                                               l13878 04B8  
                                               l15478 262E  
                                               l15488 5EE6  
                                               l13896 0602  
                                               l14696 4E12  
                                               l13898 0624  
                                               l13988 318E  
                                               l13998 31B0  
                                  ?__flash_get_status 000D  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE8  
                                               STR_11 8FFA  
                                               STR_12 8FCF  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 010E  
                                     __end_of___lldiv 60AC  
                                               ?_utoa 0008  
                                               u10201 749C  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10045 6C16  
                                               u11141 4A66  
                                               u11151 4A88  
                                               u11161 4AAA  
                                               u11500 48D2  
                                               u10720 175A  
                                     __end_of___llmod 6616  
                              __end_of_USBDeviceTasks 32F6  
                                               u10810 050A  
                                               u11530 4926  
                                               u12307 6AD8  
                                               u12317 6AEA  
                                               u12327 6AF4  
                           ?_USBCtrlEPServiceComplete 0001  
                                     __end_of___lwdiv 6BB8  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 70A2  
                               rtcc_write_eeprom@date 0026  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR1H 000FCF  
                                               _TMR0L 000FD6  
                                               _TMR1L 000FCE  
                                _file_minimum_address 014F  
                                    ??__display_start 0001  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 009C  
                  __size_of_USBCtrlEPAllowStatusStage 00D4  
                                     _i2c_eeprom_read 6D46  
                                ?__bootloader_program 0001  
                                     ??_flash_is_busy 0012  
                                    __end_of_MSDTasks 24EE  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 002E  
                                  _USBCheckMSDRequest 4C34  
                     __end_of_internalFlash_getBuffer 79A8  
                     __end_of_USBCtrlEPAllowDataStage 5A96  
                                               _sd000 8FCB  
                                               _sd001 8EE7  
                                               _sd002 8F1B  
                                               _sd003 8F8A  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 6D46  
                 i2c_display_send_init_sequence@F8320 01D6  
                       __end_of_MSDTransferTerminated 6ABC  
                                        _gblCBWLength 0189  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                                   ?__flash_spi_tx_rx 0001  
                                   ?__flash_spi_tx_tx 0001  
                              __end_of_ResetSenseData 5FA6  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 0002  
                                    ??_rtcc_get_hours 0001  
                           fat_get_format_status@cntr 002E  
                                    ??_rtcc_get_month 0001  
                                               pclath 000FFA  
                                  ??__flash_spi_tx_rx 0009  
                                  ??__flash_spi_tx_tx 0009  
                                     __end_of_ui_init 785E  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0106  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00F9  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 736A  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 0044  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 602A  
                               hexCharsToUint8@retVal 0006  
                     ??__fill_buffer_get_calibration1 000E  
                     ??__fill_buffer_get_calibration2 000E  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 760A  
                                      _MSDReadHandler 2BAE  
                             __CFG_DSWDTOSC$INTOSCREF 000000  
                        __size_of_USBStdSetCfgHandler 00E8  
                                flash_page_write@data 0022  
               __bootloader_check_address@byte_status 000B  
                                flash_page_write@page 0020  
                       internalFlash_readPage@address 0018  
                                     __initialization 547C  
                       fat_read_from_file@file_number 0062  
                           __end_of__flash_get_status 7464  
               __end_of_ExternalFlash_MediaInitialize 773E  
              __size_of_ExternalFlash_MediaInitialize 001E  
                       _ExternalFlash_MediaInitialize 7720  
                                         _system_init 4A5C  
                      __size_of_system_encoder_enable 0010  
                                         _FileAddress 0163  
                                        __end_of_main 4ED4  
                                        __end_of_itoa 7060  
                       __end_of_system_encoder_enable 791E  
                                    _rtcc_set_minutes 77D6  
                          i2c_eeprom_readByte@address 0012  
                                    _rtcc_set_seconds 77A6  
                     __end_of_i2c_display_write_fixed 6A66  
                                        __end_of_utoa 59F2  
                         ??__fill_buffer_get_display1 0005  
                         ??__fill_buffer_get_display2 0005  
                                    _timer_pseudo_isr 7124  
                            __parse_command_short@cmd 002C  
                                    __end_of_i2c_init 7958  
                            __end_of__i2c_acknowledge 7976  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 0147  
                                ??_USBCheckMSDRequest 000C  
                                      __CFG_OSC$HSPLL 000000  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2316 000C  
                             _USBCheckMSDRequest$2317 000E  
                               system_init@appendtext 0060  
                           __size_of_USBCtrlEPService 00AC  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                              ??_main 0058  
                                    __end_of__i2c_get 796C  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 0094  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 008D  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 79DA  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 79D6  
                                         ?_USBSuspend 0001  
         __i2c_eeprom_load_default_calibration@buffer 0001  
                               ??__bootloader_program 0046  
                                    ??_rtcc_set_hours 0001  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                                    ??_rtcc_set_month 0001  
                                _i2c_eeprom_writeByte 7164  
                            __end_of_rtcc_get_minutes 78C2  
                            __end_of_rtcc_get_seconds 789A  
                                     ?_bootloader_run 0001  
                         __size_of__write_calibration 0090  
                       __flash_write_to_buffer@buffer 001A  
                              __flash_write_to_buffer 6C5A  
                     i2c_digipot_reset_off@data_array 000B  
                                _start_from_byte_next 0180  
                                    ___llmod@dividend 0001  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                                          __i2c_start 79BA  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 6F04  
                           fat_read_from_file@cluster 0083  
                                      __CFG_WDTEN$OFF 000000  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 0046  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0001  
                                    __end_of__get_fat 6A10  
                                    __end_of__get_fbr 2756  
                                    __end_of__get_mbr 522C  
                                              _OSCCON 000FD3  
                        ??_get_next_eeprom_write_task 0001  
                                              _TBLPTR 000FF6  
                                              _RTCCAL 000F3E  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                   ??__display_verify 001F  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 2DA8  
                                 _flash_pages_written 016C  
                                     __read_root@data 0028  
                             i2c_eeprom_write@address 000B  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                                     __read_root@slot 002F  
                             __write_calibration@addr 0038  
                             __write_calibration@cntr 003D  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 56A6  
                                    __read_fat@offset 002C  
                                    __end_of_fat_init 792E  
                                    _i2c_eeprom_tasks 63FE  
                   __bootloader_program@page_to_write 009E  
                                   _shortPacketStatus 0198  
                                      __CFG_XINST$OFF 000000  
                                    _i2c_eeprom_write 612A  
                                     rtcc_set_day@day 0001  
                        ??__parse_command_calibration 0008  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 612A  
                        __end_of__flash_set_page_size 6222  
                                     _hexCharsToUint8 773E  
                                     ??_USBDeviceInit 0009  
                            flash_partial_read@length 0018  
                                              _gblCBW 0100  
                                   _fat_get_file_size 638C  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
                                           ??___lwdiv 0005  
           SYSTEM_Initialize@pll_startup_counter_2822 0003  
                                        ?_normal_mode 0001  
                                          _SoftDetach 0188  
                                           ??___lwmod 0005  
                                              _buffer 03DA  
                                   _USBEnableEndpoint 7220  
                       __bootloader_program@address32 0097  
                     __size_of_USBStdGetStatusHandler 00BC  
                                              _memcpy 667C  
                                  ?_fat_get_file_size 0028  
                                              _memset 74EA  
                             __end_of_i2c_eeprom_read 6D92  
                                              clear_0 54D6  
                                              clear_1 54EA  
                                              clear_2 54FC  
                                              clear_3 5508  
                                              clear_4 5514  
                                              clear_5 5520  
                           _ExternalFlash_SectorWrite 73CE  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6D  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                                              _ui_run 486E  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 6314  
                               i2c_display_init@F8323 01CD  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 011A  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                                              itoa@cp 0017  
                              __size_of__flash_spi_tx 0058  
                                   _i2c_set_frequency 7516  
                               system_init@extension2 00DE  
                               __end_of_fat_find_file 547C  
                                 ??_fat_get_file_size 002C  
                       __size_of__parse_command_short 0038  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                 __size_of_get_next_eeprom_write_task 0034  
                                        __mediumconst 8CCC  
                                 __end_of__i2c_open_1 778E  
                      i2c_digipot_reset_on@data_array 000B  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 67A6  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 6746  
                                              tblptru 000FF8  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0014  
                         ??__bootloader_check_address 0006  
                            __size_of_flash_page_read 0026  
                           __fill_buffer_get_display1 6DDE  
                           __fill_buffer_get_display2 6D92  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                               __end_of_ui_get_status 79D6  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00FB  
                          ??_APP_DeviceCustomHIDTasks 002D  
                               __flash_spi_tx_rx@data 0005  
                                __CFG_LS48MHZ$SYS48X8 000000  
                                   _SYSTEM_Initialize 6B12  
                               __flash_spi_tx_tx@data 0005  
                                 ??_i2c_set_frequency 0001  
                       fat_read_from_file@read_length 0087  
                                          __accesstop 0060  
                             __end_of__initialization 5532  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                         ?__parse_command_calibration 0004  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0046  
                        __end_of__i2c_not_acknowledge 7962  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                         __end_of__parse_command_long 6802  
                   __end_of_failed_line3_noNextRecord 8E47  
                                  __size_of__get_data 0028  
                           __end_of_fat_get_file_size 63FE  
                                 __size_of_USBSuspend 0032  
                                  __size_of__get_root 0196  
                               flash_page_write@match 0024  
                            __end_of_rtcc_read_eeprom 71E2  
                                ??_flash_partial_read 001C  
                                    _flash_page_write 6E2A  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 725C  
                            _bootloader_get_file_size 78EA  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                  __rtcc_write_enable 781E  
               __end_of__fill_buffer_get_calibration1 5B36  
              __size_of__fill_buffer_get_calibration1 00A0  
                       __fill_buffer_get_calibration1 5A96  
               __end_of__fill_buffer_get_calibration2 629C  
              __size_of__fill_buffer_get_calibration2 007A  
                       __fill_buffer_get_calibration2 6222  
                                       __end_of_sd000 8FCF  
                                       __end_of_sd001 8F1B  
                                       __end_of_sd002 8F49  
                                       __end_of_sd003 8FA4  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 79DE  
                                        __pidataBANK1 70E4  
                                        __pidataBANK3 6548  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 7994  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 798A  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 00A4  
                __size_of_i2c_eeprom_read_calibration 0114  
                                  __size_of__read_fat 0048  
                                     _active_protocol 01B7  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 19D0  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 4FB0  
                                 _userInterfaceStatus 0183  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 3DD0  
                      ?_ExternalFlash_MediaInitialize 0001  
                           __end_of_i2c_set_frequency 7542  
                                 ?__rtcc_write_enable 0001  
                       __size_of__display_programming 01D6  
                                 system_init@filename 00C8  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0170  
                      __end_of_failed_line3_startCode 8D1D  
                                  _fat_read_from_file 2756  
               __end_of_MSDProcessCommandMediaPresent 0C80  
              __size_of_MSDProcessCommandMediaPresent 03EE  
                       _MSDProcessCommandMediaPresent 0892  
                                        _failed_line1 8DE9  
                                        _failed_line2 8D42  
                                        _failed_line4 8E6B  
                              flash_partial_read@data 001A  
                              flash_partial_read@page 0014  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 018E  
                           __end_of_SYSTEM_Initialize 6B66  
                                   __end_of__i2c_read 5E0E  
                        __size_of__rtcc_write_disable 0016  
                                   __end_of__i2c_send 79CA  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 5538  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 79BA  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 0030  
                                         ?__i2c_write 0006  
                                          __pbssBANK0 00E2  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                              __read_root@root_sector 002B  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 4468  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 0157  
                                           ?_i2c_init 0001  
                        __end_of__sector_from_cluster 794C  
                                ??__rtcc_write_enable 0001  
                        ??_schedule_eeprom_write_task 0001  
                                          __read_root 685A  
                                    _mediaInformation 01B0  
                             __end_of_hexCharsToUint8 775A  
                      __size_of_fat_get_format_status 00A4  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 594E  
                                       __flash_wakeup 6ABC  
                                       __flash_spi_tx 690A  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 00EE  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                    __end_of_USBCtrlEPServiceComplete 4468  
               __end_of_APP_DeviceCustomHIDInitialize 73CE  
              __size_of_APP_DeviceCustomHIDInitialize 0032  
                       _APP_DeviceCustomHIDInitialize 739C  
                         MSDTransferTerminated@handle 000C  
                           __bootloader_check_address 4FB0  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 29B0  
                                   ?__display_checked 0001  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 003A  
                                           MSDTasks@i 0052  
                                             ?_memcpy 0001  
                                             ?_memset 0001  
                                          _device_dsc 8FA4  
                                    ??_display_update 0011  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                    ?_i2c_eeprom_read 0012  
                                         __i2c_open_1 7776  
                                    _USBCtrlEPService 5756  
                                             ?_ui_run 0001  
                                          _ep_data_in 0169  
                                  __display_clear@col 0004  
                             _extended_linear_address 013F  
                                  __display_clear@row 0003  
                      __parse_command_calibration@cmd 0001  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 3608  
                         APP_DeviceCustomHIDTasks@idx 0037  
                    __sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 4246  
                                  _USBCheckStdRequest 4968  
                           __write_calibration@buffer 0028  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA7  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                  __size_of_rtcc_init 0020  
                                          _flash_init 6CAA  
                         __end_of_USBCtrlTrfTxService 4DF8  
                                   __end_of__get_data 7594  
                                 _USBStdSetCfgHandler 4B4C  
                 __size_of_schedule_eeprom_write_task 0052  
                                  __display_done@cntr 001F  
                                   __end_of__get_root 348C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                          _done_line1 8DB9  
                                          _done_line2 8E9F  
                                          _done_line3 8DA9  
                                          _done_line4 8D99  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                                             _RTCVALH 000F3B  
                                             _RTCVALL 000F3A  
                              _total_hex_file_entries 016E  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                            __end_of_rtcc_set_minutes 77EE  
                            __end_of_rtcc_set_seconds 77BE  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 0148  
                                __flash_set_page_size 61A8  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 7164  
                  __end_of_get_next_eeprom_write_task 7336  
                          _get_next_eeprom_write_task 7302  
                                 i2c_eeprom_read@addr 0018  
                          __end_of_APP_DeviceMSDTasks 7872  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 6F04  
                                 i2c_eeprom_read@data 0014  
                     ??_internalFlash_pageFromAddress 0005  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 004E  
                             __size_of_hexCharToUint8 002C  
               __end_of__flash_compare_page_to_buffer 6314  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 629C  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB6  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                            __write_calibration@index 003C  
                                   __read_fat@cluster 0028  
                                      ?__flash_wakeup 0001  
                                   ??_flash_page_read 002C  
                                      ?__flash_spi_tx 0001  
                      __end_of_bootloader_get_entries 798A  
                              fat_find_file@extension 002A  
                            ?_internalFlash_getBuffer 0001  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 3EF2  
                                     hexCharToUint8@c 0001  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                  __flash_spi_tx@data 0001  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                ?_USBStdSetCfgHandler 0001  
                               __end_of_rtcc_get_year 7886  
                          __size_of_fat_get_file_size 0072  
                         __size_of_USBCheckHIDRequest 00FE  
                                             __Lparam 0000  
                                   __end_of_hid_rpt01 8F8A  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 3EF2  
                          _MSDTransferTerminated$2404 000E  
                          __size_of_USBEnableEndpoint 003C  
                           __size_of__flash_spi_tx_rx 0094  
                           __size_of__flash_spi_tx_tx 008C  
                APP_DeviceCustomHIDTasks@return_value 0035  
                                        ?_system_init 0001  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 646E  
                                          _last_error 0181  
                       __size_of_USBCtrlTrfOutHandler 0064  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 02B4  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 8E98  
                                             ___lldiv 602A  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 65B0  
                                             ___lwdiv 6B66  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 7060  
                         __size_of_internalFlash_read 0036  
                                   ?__i2c_acknowledge 0001  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 701E  
                                             __pcinit 547C  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02F4  
                           __end_of_configDescriptor1 8EE7  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                      ?__fill_buffer_get_calibration1 0001  
                      ?__fill_buffer_get_calibration2 0001  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 4DF8  
                                             __ptext1 486E  
                                     __display_failed 19D0  
                                             __ptext2 790E  
                                             __ptext3 7492  
                                             __ptext4 767A  
                                             __ptext5 769C  
                                             __ptext6 75E4  
                                             __ptext7 5B36  
                                             __ptext8 7124  
                                             __ptext9 4A5C  
                                __size_of_normal_mode 0058  
                                             _inPipes 00E8  
                                     __size_of_ui_run 00FA  
                                      fat_format@cntr 0025  
                               _task_list_write_index 0184  
                   __size_of_ExternalFlash_SectorRead 0032  
                         _USBDeferOUTDataStagePackets 018F  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                               __end_of_rtcc_set_year 77A6  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 0057  
                         __end_of__system_timer0_init 7720  
                                           _T1CONbits 000FCD  
                                        ??_USBSuspend 0018  
                                  __end_of_USBMSDInit 412C  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 792E  
                                             _msd_cbw 000D40  
                            __end_of_i2c_eeprom_tasks 646E  
                                     __display_verify 3B7E  
                                             _msd_csw 000D80  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 7958  
                            __end_of_i2c_eeprom_write 61A8  
                                             _ui_init 784A  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 76E0  
                                  __end_of_USB_CD_Ptr 8EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                                   ?_rtcc_get_minutes 0001  
                                   ?_rtcc_get_seconds 0001  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 00B2  
                        fat_get_file_size@file_number 0035  
                                             _strncmp 5FA6  
                                end_of_initialization 5532  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 6A66  
               __flash_compare_page_to_buffer@command 001C  
                      ?_MSDProcessCommandMediaPresent 0001  
                                  __end_of_USB_SD_Ptr 8E83  
                                  ??_rtcc_get_minutes 0001  
                                  ??_rtcc_get_seconds 0001  
                                 i2c_eeprom_write@dat 0013  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                 _pBDTEntryEP0OutNext 005C  
                           __end_of_MSDProcessCommand 4012  
                                             itoa@buf 0011  
                                         ?__read_root 0028  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                                     _USB1msTickCount 015F  
                                    ?_hexCharsToUint8 0003  
                              _internalFlash_readPage 70A2  
                            ?_USBStdFeatureReqHandler 0001  
                       i2c_eeprom_write@slave_address 0024  
                  __size_of__fill_buffer_get_display1 004C  
                  __size_of__fill_buffer_get_display2 004C  
                         i2c_eeprom_writeByte@address 000B  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                                   __end_of_rtcc_init 7700  
                                     ___lldiv@counter 000D  
                                       ?_rtcc_get_day 0001  
                                  __end_of_USBSuspend 739C  
                             _USBCtrlEPAllowDataStage 59F2  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 79B2  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 79A8  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                 rtcc_set_hours@hours 0001  
                    __size_of__fill_buffer_get_status 0048  
                                       ??__ui_encoder 0014  
                                       ?_rtcc_set_day 0001  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 435A  
                                             utoa@val 000A  
                                           _MSD_State 018D  
                         __end_of__bootloader_program 0892  
                               _system_encoder_enable 790E  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00E2  
                          _USBStatusStageEnabledFlag1 0192  
                          _USBStatusStageEnabledFlag2 0191  
                                  USBEnableEndpoint@p 000A  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                      __end_of__flash_write_to_buffer 6CAA  
                                    __CFG_DSBOREN$OFF 000000  
                                __sector_from_cluster 793E  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                          __end_of__write_calibration 5D82  
                               ?__i2c_not_acknowledge 0001  
                                 flash_page_read@data 002A  
                                         ?_flash_init 0001  
                                 flash_page_read@page 0028  
                                    __CFG_CPUDIV$OSC1 000000  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0300  
                                  _BothEP0OutUOWNsSet 0194  
                            __end_of_flash_page_write 6E74  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 03DA  
                                    ??_MSDReadHandler 0036  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 6A10  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00FD  
                                     ??__flash_wakeup 0009  
                  __end_of_schedule_eeprom_write_task 6C0A  
                          _schedule_eeprom_write_task 6BB8  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                                     ??__flash_spi_tx 0005  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DF9  
                                       _checked_line2 8CCD  
                                       _checked_line3 8E73  
                                       _checked_line4 8D66  
                          ??_bootloader_get_file_size 0005  
                        ?_i2c_eeprom_read_calibration 0001  
                            _failed_line3_dataTooLong 8E47  
                             __size_of__display_start 0152  
                     i2c_eeprom_read_calibration@addr 0020  
                        __end_of_USBTransferOnePacket 4670  
                     i2c_eeprom_read_calibration@cntr 0022  
                               i2c_eeprom_read@length 0016  
                                 rtcc_set_month@month 0001  
                              i2c_display_cursor@line 000F  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 72CC  
               __end_of_internalFlash_pageFromAddress 7776  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 775A  
                                      ??_rtcc_get_day 0001  
                      ?__flash_compare_page_to_buffer 0014  
                                   __CFG_WPEND$PAGE_0 000000  
                   __end_of__fill_buffer_get_display1 6E2A  
                   __end_of__fill_buffer_get_display2 6DDE  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                                   ?_rtcc_read_eeprom 0001  
                             __end_of__display_failed 1CC6  
                                    ?_MSDErrorHandler 0001  
                             __size_of_rtcc_get_hours 0014  
                             __size_of_rtcc_get_month 0014  
                              _USBCtrlTrfSetupHandler 55F4  
                                      ??_rtcc_set_day 0001  
                                 __rtcc_write_disable 7834  
                      __bootloader_program@entry_page 008F  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00CC  
                               __end_of_USBDeviceInit 38E4  
                                  ??_rtcc_read_eeprom 001A  
               __end_of_USBIncrement1msInternalTimers 75E4  
              __size_of_USBIncrement1msInternalTimers 0028  
                       _USBIncrement1msInternalTimers 75BC  
                                     ??__display_done 001F  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 3CAA  
                                   __size_of_MSDTasks 0290  
                            __end_of_USBStallEndpoint 456E  
                                 _i2c_eeprom_readByte 6C0A  
                 __bootloader_program@start_from_byte 009B  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8CE2  
                               ?__sector_from_cluster 0001  
                                      __end_of_memcpy 66E2  
                                     _MSDRetryAttempt 018A  
                                      __end_of_memset 7516  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                             __parse_command_long@cmd 0003  
                                 __size_of__read_root 0058  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 0196  
                                      __end_of_ui_run 4968  
                                 __end_of__ui_encoder 5BCA  
                           __flash_set_page_size@size 0018  
                                 start_initialization 547C  
                             ?_USBStdGetStatusHandler 0001  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                      get_next_eeprom_write_task@task 0001  
                          i2c_display_cursor@position 000E  
                                ?__rtcc_write_disable 0001  
                              ?_MSDTransferTerminated 000C  
                                     _USBMSDOutHandle 00F6  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 5C5E  
                                system_init@filename2 00D1  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 225E  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 003C  
                                       _MSDHostNoData 00F8  
                                _task_list_read_index 0185  
                                      _hexCharToUint8 74BE  
              internalFlash_addressWithinPage@address 0009  
                   __end_of_USBCtrlEPAllowStatusStage 515E  
                                ?_i2c_eeprom_readByte 0012  
                        __end_of__display_programming 315C  
                            __end_of_USBCtrlEPService 5802  
                          __size_of_MSDProcessCommand 0120  
                                __system_encoder_init 6FDA  
                                           __i2c_read 5D82  
                             __size_of_rtcc_set_hours 0018  
                                rtcc_read_eeprom@date 001A  
                                           __i2c_send 79C2  
                             __size_of_rtcc_set_month 0018  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 79B2  
                                __flash_spi_tx@length 0003  
                                     ___llmod@counter 0009  
                       ??_i2c_eeprom_read_calibration 001A  
                                   __size_of_i2c_init 000C  
                                   _rtcc_write_eeprom 71E2  
                           ??_USBCtrlEPAllowDataStage 0002  
                                      USBDeviceInit@i 0009  
                              __write_calibration@ptr 003A  
                        __end_of_bootloader_get_error 79D0  
                       __end_of_failed_line3_checksum 8E38  
                              _pBDTEntryEP0OutCurrent 005E  
                              __size_of_fat_find_file 00C0  
                                  ?_rtcc_write_eeprom 0001  
                                         _DMACON1bits 000F88  
                              i2c_eeprom_write@length 000F  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 004E  
                             USBTransferOnePacket@dir 0001  
                                    __flash_spi_tx_rx 5C5E  
                                    __flash_spi_tx_tx 5E0E  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8DD9  
                                   _programming_line2 8D30  
                                   _programming_line3 8E83  
                                   _programming_line4 8DC9  
                                       _MSDTasks$2370 0050  
                                       _MSDTasks$2369 004E  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0078  
                             flash_partial_read@start 0016  
                                 _USBStdGetDscHandler 3A36  
                              ?_system_encoder_enable 0001  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 032A  
                          fat_get_file_size@file_size 002F  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01B9  
                                         __pdataBANK3 0372  
                           ?_APP_DeviceCustomHIDTasks 0001  
                                __size_of_system_init 00F0  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                                system_init@extension 00DA  
                        __size_of__parse_command_long 005C  
                       __end_of_i2c_digipot_backlight 760A  
                                        ?__i2c_open_1 0001  
                              __size_of_ui_get_status 0006  
                                 ??_rtcc_write_eeprom 0026  
                                            ??_ui_run 0014  
                                  __end_of__i2c_start 79C2  
                                  __end_of__i2c_write 6F4C  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00FE  
                      __end_of_USBStdGetStatusHandler 55F4  
                                         __pbssCOMRAM 005A  
                   __end_of__bootloader_check_address 508A  
               __end_of_internalFlash_addressFromPage 7492  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 7464  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0268  
                                     _flash_page_read 7630  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 0060  
                        __size_of_USBCtrlTrfInHandler 00DC  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 0100  
                        __end_of_bootloader_extension 8FCB  
                       __end_of_MSDCheckForErrorCases 4770  
             __bootloader_program@address_within_page 0091  
                               ??__rtcc_write_disable 0001  
                              __end_of_hexCharToUint8 74EA  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 0153  
                  __end_of_flash_command_pagesize_512 8FC7  
                          _flash_command_pagesize_512 8FC3  
                  __end_of_flash_command_pagesize_528 8FC3  
                          _flash_command_pagesize_528 8FBF  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 64DE  
                          i2c_set_frequency@frequency 0001  
                                   ?_rtcc_set_minutes 0001  
                                   ?_rtcc_set_seconds 0001  
                                        _found_line3b 8E91  
                                           __get_data 756C  
                    __bootloader_program@return_value 0093  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                                   ?_timer_pseudo_isr 0001  
                         ?_get_next_eeprom_write_task 0001  
                                           __get_root 32F6  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 7294  
                                  ??_rtcc_set_minutes 0001  
                                  ??_rtcc_set_seconds 0001  
                           __end_of_rtcc_write_eeprom 7220  
                          __end_of_i2c_display_cursor 767A  
                                          ?__i2c_read 0006  
                         __size_of__rtcc_write_enable 0016  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 6F94  
                                        _pBDTEntryOut 0139  
                                          ?__i2c_stop 0001  
                                           __read_fat 6EBC  
                      schedule_eeprom_write_task@task 0002  
                           __end_of_programming_line1 8DE9  
                           __end_of_programming_line2 8D42  
                           __end_of_programming_line3 8E8A  
                           __end_of_programming_line4 8DD9  
                    __end_of_ExternalFlash_SectorRead 7432  
                __end_of_bootloader_get_total_entries 799E  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 7994  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 58AA  
                                 flash_is_busy@status 0012  
                                   fat_find_file@name 0028  
                      MSDProcessCommandMediaPresent@i 0047  
                                 fat_find_file@buffer 002C  
                                   fat_find_file@slot 0037  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 6F4C  
                                  _APP_DeviceMSDTasks 785E  
                                       __pmediumconst 8CCC  
                                 fat_find_file@offset 003A  
                                           __ptext100 435A  
                                           __ptext101 59F2  
                                           __ptext110 4770  
                                           __ptext102 4968  
                                           __ptext111 6B12  
                                           __ptext103 4B4C  
                                           __ptext120 508A  
                                           __ptext112 6A66  
                                           __ptext104 74EA  
                                           __ptext121 4ED4  
                                           __ptext113 792E  
                                           __ptext105 5538  
                                           __ptext130 73CE  
                                           __ptext122 4D16  
                                           __ptext114 4012  
                                           __ptext106 3A36  
                                           __ptext131 6E2A  
                                           __ptext123 785E  
                                           __ptext115 739C  
                                           __ptext107 1FBA  
                                           __ptext140 5F20  
                                           __ptext132 6C5A  
                                           __ptext124 225E  
                                           __ptext116 7220  
                                           __ptext108 5E9A  
                                           __ptext141 7400  
                                           __ptext133 5E0E  
                                           __ptext125 3EF2  
                                           __ptext117 5BCA  
                                           __ptext109 4C34  
                                           __ptext150 79A8  
                                           __ptext142 7630  
                                           __ptext134 68B2  
                                           __ptext126 6616  
                                           __ptext118 66E2  
                                           __ptext151 78FC  
                                           __ptext143 6314  
                                           __ptext135 629C  
                                           __ptext127 0892  
                                           __ptext119 412C  
                                           __ptext160 6962  
                                           __ptext152 7720  
                                           __ptext144 76BE  
                                           __ptext136 2BAE  
                                           __ptext128 1CC6  
                                           __ptext161 79B2  
                                           __ptext153 79DA  
                                           __ptext145 6ABC  
                                           __ptext137 4670  
                                           __ptext129 79D6  
                                           __ptext170 7806  
                                           __ptext162 79BA  
                                           __ptext154 13AC  
                                           __ptext146 690A  
                                           __ptext138 3DD0  
                                           __ptext171 781E  
                                           __ptext163 79C2  
                                           __ptext155 7294  
                                           __ptext147 7432  
                                           __ptext139 4468  
                                           __ptext180 78AE  
                                           __ptext172 7834  
                                           __ptext164 67A6  
                                           __ptext156 71E2  
                                           __ptext148 5C5E  
                                           __ptext181 78C2  
                                           __ptext173 3CAA  
                                           __ptext165 778E  
                                           __ptext157 612A  
                                           __ptext149 5802  
                                           __ptext190 0000  
                                           __ptext182 78D6  
                                           __ptext174 6BB8  
                                           __ptext166 77A6  
                                           __ptext158 7516  
                                           __ptext183 6D92  
                                           __ptext175 6F4C  
                                           __ptext167 77BE  
                                           __ptext159 6F04  
                                           __ptext184 6DDE  
                                           __ptext176 79D0  
                                           __ptext168 77D6  
                                           __ptext185 7542  
                                           __ptext177 7872  
                                           __ptext169 77EE  
                                           __ptext186 6222  
                                           __ptext178 7886  
                                           __ptext187 5A96  
                                           __ptext179 789A  
                                           __ptext188 667C  
                                           __ptext189 456E  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0038  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                                            ?___lwdiv 0001  
                                            ?___lwmod 0001  
                         __size_of_fat_read_from_file 025A  
                                           _hid_rpt01 8F6D  
                                         __ui_encoder 5B36  
                              ??__sector_from_cluster 0003  
                                           _idle_rate 01B8  
                                    ?__display_verify 0001  
                    __size_of_internalFlash_getBuffer 000A  
                                     __i2c_write@data 0006  
                                _file_maximum_address 014B  
                                     __i2c_write@cntr 000A  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                      internalFlash_erasePage@address 0005  
                                _USBTransferOnePacket 456E  
                        __flash_spi_tx_rx@data_length 0007  
                          ?_ExternalFlash_MediaDetect 0001  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 7294  
                                __end_of_rtcc_get_day 78EA  
                              fat_read_from_file@data 0038  
                                       _fat_find_file 53BC  
                       __size_of_i2c_eeprom_writeByte 0040  
                                   ?_i2c_eeprom_tasks 0001  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 0063  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 103E  
                                   __display_itoa_u16 52F8  
                    __size_of_internalFlash_erasePage 0034  
                                   ?_i2c_eeprom_write 000B  
                        __end_of_USBCtrlTrfOutHandler 6746  
                            __size_of_i2c_eeprom_read 004C  
                               ??_USBStdGetDscHandler 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                                 __end_of_found_line1 8E29  
                                 __end_of_found_line2 8D30  
                                 __end_of_found_line3 8E9F  
                                 __end_of_found_line4 8D66  
                                         _ep_data_out 0166  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
                       __end_of_i2c_digipot_reset_off 76BE  
                                  ??_i2c_eeprom_tasks 003E  
                                       _MSDWriteState 018B  
                        __size_of_USBCtrlTrfRxService 011A  
                     __parse_command_calibration@dat1 0005  
                     __parse_command_calibration@dat2 0006  
                     __parse_command_calibration@dat3 0007  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 6E74  
                                __end_of_rtcc_set_day 781E  
                                  ??_i2c_eeprom_write 0010  
                           __size_of__i2c_acknowledge 000A  
                     __parse_command_calibration@item 0004  
                                          ?__get_data 0001  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 2DA8  
                    __end_of_bootloader_get_file_size 78FC  
                                         _file_buffer 0340  
                                          ?__get_root 0001  
                                       _ui_get_status 79D0  
                                      __display_start 38E4  
                        __size_of_USBCtrlTrfTxService 00E2  
                                        ??__read_root 002A  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 756C  
                                         _file_number 00FF  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 486E  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0028  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR1bits 000F9E  
                                           _task_list 0200  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                      _rtcc_get_hours 78C2  
                                      _rtcc_get_month 789A  
                   __bootloader_verify_file@address32 0053  
                          __end_of_internalFlash_read 7302  
                           __size_of_rtcc_get_minutes 0014  
                           __size_of_rtcc_get_seconds 0014  
                                    __CFG_WDTPS$32768 000000  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                                            _MSDTasks 225E  
                          _USBDeferINDataStagePackets 0190  
                                        ??_fat_format 0025  
                           ?__ic2_display_set_address 0001  
                         __size_of_USBCheckStdRequest 00F4  
                     ??_MSDProcessCommandMediaPresent 003A  
                                       ??_normal_mode 0019  
                                           _rtcc_init 76E0  
                                            _UCONbits 000F65  
                                _USBConfigureEndpoint 5BCA  
                                   __i2c_write@length 0008  
                             __end_of_flash_page_read 7656  
                                __display_verify@cntr 0021  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 02A4  
                                      _USBMSDInHandle 00F4  
                                __display_programming 2F86  
                               ?_USBTransferOnePacket 0001  
                                   __read_root@offset 002D  
                 internalFlash_addressWithinPage@page 000D  
                           __end_of__display_itoa_u16 53BC  
                           __end_of__display_itoa_u32 13AC  
                                  __end_of__read_root 68B2  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8E19  
                                __end_of_verify_line2 8E62  
                                __end_of_verify_line3 8E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 0028  
                        i2c_eeprom_read@slave_address 0019  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 0197  
                   __end_of_ExternalFlash_MediaDetect 79DE  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                        ??_bootloader_get_rec_address 0003  
                              __end_of__display_clear 6EBC  
                                _bootloader_get_error 79CA  
                              __size_of_rtcc_get_year 0014  
                               __display_checked@cntr 0022  
                              __end_of__display_found 2F86  
                             __end_of_USBStallHandler 6FDA  
                                   ?_flash_page_write 0020  
                      __end_of_internalFlash_readPage 70E4  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 3A36  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 5490  
                                           copy_data1 54B0  
                        __size_of__system_timer0_init 0020  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                         __end_of_USBStdSetCfgHandler 4C34  
                                  ??_flash_page_write 0024  
                                  __end_of_fat_format 2BAE  
                         ?_schedule_eeprom_write_task 0001  
                                 __display_found@cntr 0028  
                                            _i2c_init 794C  
                          __size_of_rtcc_write_eeprom 003E  
                                      _rtcc_set_hours 77EE  
                                      _rtcc_set_month 77BE  
          __i2c_eeprom_load_default_calibration@index 0003  
                                         ??__i2c_read 0009  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 018C  
                                  __write_calibration 5CF2  
                                         ??__i2c_stop 0001  
                                  __end_of_device_dsc 8FB6  
                                          _EECON1bits 000FA6  
                              __end_of_rtcc_get_hours 78D6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                              __end_of_rtcc_get_month 78AE  
                                            __i2c_get 7962  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                              __size_of_rtcc_set_year 0018  
                           ??__fill_buffer_get_status 0001  
                                          _ANCON0bits 000F48  
                                          _ANCON1bits 000F49  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0034  
                                            __Hrparam 0000  
                            fat_read_from_file@offset 0085  
                         __end_of_bootloader_filename 8FBF  
                            fat_read_from_file@sector 0060  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
                                 ?__write_calibration 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 6CF8  
                                      _TransferLength 0176  
                                _bootloader_extension 8FC7  
                          __end_of_USBCheckMSDRequest 4D16  
                            __size_of_hexCharsToUint8 001C  
                                          ?_rtcc_init 0001  
                               ?_USBConfigureEndpoint 0001  
                            _ExternalFlash_SectorRead 7400  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0022  
                                  __end_of_done_line1 8DC9  
                                  __end_of_done_line2 8EA5  
                                  __end_of_done_line3 8DB9  
                                  __end_of_done_line4 8DA9  
                                      __i2c_wait_idle 6962  
                                     _MSDWriteHandler 1CC6  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                         _MSDCBWValid 0187  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                                         _found_line1 8E19  
                                         _found_line2 8D1D  
                                         _found_line3 8E98  
                                         _found_line4 8D54  
                                            __get_fat 69BA  
                                            __get_fbr 24EE  
                                            __get_mbr 515E  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                                 __end_of_normal_mode 685A  
                  __end_of_ExternalFlash_CapacityRead 790E  
                          _ExternalFlash_CapacityRead 78FC  
                             ??_MSDTransferTerminated 000E  
                       schedule_eeprom_write_task@idx 0003  
                        __size_of__bootloader_program 03F6  
                               ?_bootloader_get_error 0001  
                           __size_of_rtcc_read_eeprom 003E  
                             __size_of_USBDeviceTasks 019A  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 791E  
                                ??__write_calibration 0026  
                                     ?__display_clear 0001  
                            __end_of__flash_spi_tx_rx 5CF2  
                                     ___lwdiv@counter 0007  
                            __end_of__flash_spi_tx_tx 5E9A  
                                    __display_checked 348C  
                                            __ptext10 784A  
                                            __ptext11 76E0  
                                            __ptext20 791E  
                                            __ptext12 71A4  
                                            __ptext21 58AA  
                                            __ptext13 794C  
                                            __ptext30 6802  
                                            __ptext22 29B0  
                                            __ptext14 7776  
                                            __ptext31 7164  
                                            __ptext23 32F6  
                                            __ptext15 4246  
                                            __ptext40 64DE  
                                            __ptext32 6C0A  
                                            __ptext24 515E  
                                            __ptext16 6D46  
                                            __ptext41 6A10  
                                            __ptext33 5D82  
                                            __ptext25 24EE  
                                            __ptext17 0C80  
                                            __ptext50 19D0  
                                            __ptext42 7656  
                                            __ptext34 7958  
                                            __ptext26 69BA  
                                            __ptext18 6CAA  
                                            __ptext51 7976  
                                            __ptext43 760A  
                                            __ptext35 7962  
                                            __ptext27 756C  
                                            __ptext19 61A8  
                                            __ptext60 348C  
                                            __ptext52 79CA  
                                            __ptext44 522C  
                                            __ptext36 796C  
                                            __ptext28 7700  
                                            __ptext61 7994  
                                            __ptext53 7980  
                                            __ptext45 3B7E  
                                            __ptext37 63FE  
                                            __ptext29 6FDA  
                                            __ptext70 0020  
                                            __ptext62 52F8  
                                            __ptext54 103E  
                                            __ptext46 38E4  
                                            __ptext38 7302  
                                            __ptext71 773E  
                                            __ptext63 701E  
                                            __ptext55 65B0  
                                            __ptext47 2F86  
                                            __ptext39 5CF2  
                                            __ptext80 7594  
                                            __ptext72 646E  
                                            __ptext64 594E  
                                            __ptext56 602A  
                                            __ptext48 2DA8  
                                            __ptext81 6746  
                                            __ptext73 74BE  
                                            __ptext65 7060  
                                            __ptext57 3608  
                                            __ptext49 78EA  
                                            __ptext90 53BC  
                                            __ptext82 7464  
                                            __ptext74 60AC  
                                            __ptext66 6B66  
                                            __ptext58 798A  
                                            __ptext91 5FA6  
                                            __ptext83 2756  
                                            __ptext75 70A2  
                                            __ptext67 6CF8  
                                            __ptext59 6E74  
                                            __ptext92 315C  
                                            __ptext84 793E  
                                            __ptext76 72CC  
                                            __ptext68 16D6  
                                            __ptext93 725C  
                                            __ptext85 685A  
                                            __ptext77 775A  
                                            __ptext69 049C  
                                            __ptext94 736A  
                                            __ptext86 6EBC  
                                            __ptext78 799E  
                                            __ptext95 6F94  
                                            __ptext87 4FB0  
                                            __ptext79 7336  
                                            __ptext96 75BC  
                                            __ptext88 56A6  
                                            __ptext97 377E  
                                            __ptext89 638C  
                                            __ptext98 5756  
                                            __ptext99 55F4  
                 __size_of__parse_command_calibration 0126  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                              __end_of_rtcc_set_hours 7806  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 667C  
               __size_of_MSDProcessCommandMediaAbsent 0066  
                        _MSDProcessCommandMediaAbsent 6616  
                                         ??__get_data 0003  
                               __flash_wakeup@command 0009  
                              __end_of_rtcc_set_month 77D6  
                                         ??__get_root 0003  
                             __size_of_bootloader_run 004E  
                                    __size_of_strncmp 0084  
                                 __parse_command_long 67A6  
                   __end_of_failed_line3_addressRange 8CF6  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                   i2c_eeprom_read_calibration@buffer 001C  
                      __size_of__bootloader_find_file 00B0  
                             __size_of_ResetSenseData 0086  
                    __end_of_APP_DeviceCustomHIDTasks 16D6  
                       __end_of__bootloader_find_file 5756  
                        __end_of_i2c_digipot_reset_on 769C  
                                   ??_i2c_eeprom_read 0017  
                               __end_of__flash_wakeup 6B12  
                      __end_of_USBCtrlTrfSetupHandler 56A6  
                                       __size_of_main 00DC  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                               __end_of__flash_spi_tx 6962  
                                            _inq_resp 8F49  
                                       __size_of_utoa 00A4  
                                         ??__read_fat 002A  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 0033  
                                     ?_rtcc_get_hours 0001  
                                     ?_rtcc_get_month 0001  
                             fat_get_file_size@sector 002D  
                                  ??_USBCtrlEPService 001E  
                    __size_of__bootloader_verify_file 02FA  
                             ??_system_encoder_enable 0001  
                                 _USBCtrlTrfInHandler 4ED4  
                  _MSDProcessCommandMediaPresent$2387 003C  
                __parse_command_calibration@parameter 000A  
                                       _rtcc_get_year 7872  
                               _calibrationParameters 0210  
                              __end_of__i2c_wait_idle 69BA  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                          ?__fill_buffer_get_display1 0001  
                          ?__fill_buffer_get_display2 0001  
                                _USBCtrlTrfOutHandler 66E2  
                           _USBCtrlEPAllowStatusStage 508A  
                             _internalFlash_getBuffer 799E  
                                ?__parse_command_long 0002  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                               __size_of_rtcc_get_day 0014  
                                    ?_flash_page_read 0028  
                                 __display_start@cntr 0001  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 377E  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 002C  
                              ??__parse_command_short 002C  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0122  
                                    system_init@F8461 01F5  
                                    system_init@F8463 01DF  
                                    system_init@F8465 01F1  
                                    system_init@F8467 0372  
                                    system_init@F8459 01E8  
                                   rtcc_set_year@year 0001  
                           _USBDeferStatusStagePacket 00FA  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 6F94  
                                       _rtcc_set_year 778E  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 75BC  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 7594  
                               __size_of_rtcc_set_day 0018  
                             _internalFlash_erasePage 7336  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                                i2c_eeprom_write@data 000D  
                                i2c_eeprom_write@cntr 0025  
                       USBCtrlTrfTxService@byteToSend 0001  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                __end_of_MSDComputeDeviceInAndResidue 58AA  
               __size_of_MSDComputeDeviceInAndResidue 00A8  
                        _MSDComputeDeviceInAndResidue 5802  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                                 __end_of_start_line1 8D99  
                                 __end_of_start_line2 8D88  
                                 __end_of_start_line3 8D0A  
                                 __end_of_start_line4 8E6B  
                       __size_of__flash_set_page_size 007A  
                                       _flash_is_busy 76BE  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 796C  
                              bootloader_run@timeslot 0057  
                                     ?_rtcc_set_hours 0001  
                                     ?_rtcc_set_month 0001  
                            __flash_get_status@status 0010  
                     __flash_spi_tx_rx@command_length 0003  
                                  ?_parseHexFileEntry 000C  
                              __size_of_USBDeviceInit 0166  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5F20  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 5E9A  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 7400  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 690A  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 68B2  
                SYSTEM_Initialize@pll_startup_counter 0001  
                        fat_read_from_file@start_byte 0030  
                                     _display_content 0264  
                          __end_of_flash_partial_read 638C  
                             __end_of_MSDWriteHandler 1FBA  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                      ?_rtcc_get_year 0001  
                             __size_of_MSDReadHandler 01FA  
                                        _rtcc_get_day 78D6  
                                       ??_system_init 0030  
                                    _rtcc_get_minutes 78AE  
                                    _rtcc_get_seconds 7886  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 522C  
                            ??__flash_write_to_buffer 001B  
                           __size_of_rtcc_set_minutes 0018  
                            ?_APP_DeviceMSDInitialize 0001  
                           __size_of_rtcc_set_seconds 0018  
                               _failed_line3_checksum 8E29  
                                 _USBCtrlTrfRxService 412C  
                                         ??_rtcc_init 0020  
                           __size_of_timer_pseudo_isr 0040  
                                  _USBWakeFromSuspend 725C  
                               ??__parse_command_long 0003  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                                         _normal_mode 6802  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                        _rtcc_set_day 7806  
                                  _i2c_display_cursor 7656  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 1FBA  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 4D16  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                          _RTCCFGbits 000F3F  
                                     _gblMediaPresent 0178  
                         __end_of__rtcc_write_disable 784A  
                                      ?_rtcc_set_year 0001  
                               _i2c_digipot_backlight 75E4  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E55  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 7980  
                          _bootloader_get_rec_address 7976  
        __end_of__i2c_eeprom_load_default_calibration 103E  
       __size_of__i2c_eeprom_load_default_calibration 03BE  
              ??__i2c_eeprom_load_default_calibration 0004  
               ?__i2c_eeprom_load_default_calibration 0001  
                __i2c_eeprom_load_default_calibration 0C80  
                        __flash_spi_tx_tx@data_length 0007  
                               _USBAlternateInterface 01B5  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 6C5A  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 017C  
                           _failed_line3_noNextRecord 8E38  
                          ?__bootloader_check_address 0001  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 0195  
                                      _display_update 64DE  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8D0A  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 4670  
                          __end_of__rtcc_write_enable 7834  
                          fat_read_from_file@position 0089  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 7630  
                 __end_of_i2c_eeprom_read_calibration 435A  
                         _i2c_eeprom_read_calibration 4246  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 017A  
                             _internalFlash_writePage 60AC  
                            __flash_spi_tx_rx@command 0001  
                                ?_USBCtrlTrfTxService 0001  
                           flash_partial_read@address 0024  
                  __end_of__parse_command_calibration 3DD0  
                          __parse_command_calibration 3CAA  
                                          _USBMSDInit 4012  
                        _USBStatusStageTimeoutCounter 0193  
                     ??_ExternalFlash_MediaInitialize 0003  
                                ??_USBWakeFromSuspend 0018  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                           flash_partial_read@command 0020  
                        __end_of_i2c_eeprom_writeByte 71A4  
                                        _verify_line1 8E09  
                                        _verify_line2 8E55  
                                        _verify_line3 8E8A  
                           __size_of_i2c_eeprom_tasks 0070  
                                          _USB_CD_Ptr 8EA5  
                            __flash_spi_tx_tx@command 0001  
                           __size_of_i2c_eeprom_write 007E  
                                         _power_state 0182  
                                         _USBInHandle 005A  
                            _APP_DeviceCustomHIDTasks 13AC  
