

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Aug 13 21:39:04 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1
   187                           	psect	text166,global,reloc=2,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=2,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1,group=2
   191                           	psect	text170,global,reloc=2,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1,group=2
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=2,class=CODE,delta=1
   197                           	psect	text176,global,reloc=2,class=CODE,delta=1
   198                           	psect	text177,global,reloc=2,class=CODE,delta=1
   199                           	psect	text178,global,reloc=2,class=CODE,delta=1
   200                           	psect	text179,global,reloc=2,class=CODE,delta=1
   201                           	psect	text180,global,reloc=2,class=CODE,delta=1
   202                           	psect	text181,global,reloc=2,class=CODE,delta=1
   203                           	psect	text182,global,reloc=2,class=CODE,delta=1
   204                           	psect	text183,global,reloc=2,class=CODE,delta=1
   205                           	psect	text184,global,reloc=2,class=CODE,delta=1
   206                           	psect	text185,global,reloc=2,class=CODE,delta=1
   207                           	psect	text186,global,reloc=2,class=CODE,delta=1
   208                           	psect	text187,global,reloc=2,class=CODE,delta=1
   209                           	psect	text188,global,reloc=2,class=CODE,delta=1
   210                           	psect	text189,global,reloc=2,class=CODE,delta=1
   211                           	psect	text190,global,reloc=2,class=CODE,delta=1
   212                           	psect	text191,global,reloc=2,class=CODE,delta=1
   213                           	psect	text192,global,reloc=2,class=CODE,delta=1
   214                           	psect	text193,global,reloc=2,class=CODE,delta=1
   215                           	psect	text194,global,reloc=2,class=CODE,delta=1
   216                           	psect	text195,global,reloc=2,class=CODE,delta=1
   217                           	psect	text196,global,reloc=2,class=CODE,delta=1
   218                           	psect	text197,global,reloc=2,class=CODE,delta=1
   219                           	psect	text198,global,reloc=2,class=CODE,delta=1
   220                           	psect	text199,global,reloc=2,class=CODE,delta=1
   221                           	psect	text200,global,reloc=2,class=CODE,delta=1
   222                           	psect	text201,global,reloc=2,class=CODE,delta=1
   223                           	psect	text202,global,reloc=2,class=CODE,delta=1
   224                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   225                           	psect	text203,global,reloc=2,class=CODE,delta=1
   226                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   227                           	dabs	1,0x600,512,_msd_buffer
   228                           	dabs	1,0xD00,48,_BDT
   229                           	dabs	1,0xD40,31,_msd_cbw
   230                           	dabs	1,0xD80,13,_msd_csw
   231                           	dabs	1,0xD38,8,_CtrlTrfData
   232                           	dabs	1,0xD30,8,_SetupPkt
   233  0000                     
   234                           ; Version 2.00
   235                           ; Generated 27/05/2018 GMT
   236                           ; 
   237                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   238                           ; All rights reserved.
   239                           ; 
   240                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   241                           ; 
   242                           ; Redistribution and use in source and binary forms, with or without modification, are
   243                           ; permitted provided that the following conditions are met:
   244                           ; 
   245                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   246                           ;        conditions and the following disclaimer.
   247                           ; 
   248                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   249                           ;        of conditions and the following disclaimer in the documentation and/or other
   250                           ;        materials provided with the distribution.
   251                           ; 
   252                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   253                           ;        software without specific prior written permission.
   254                           ; 
   255                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   256                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   257                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   258                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   259                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   260                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   261                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   262                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   263                           ; 
   264                           ; 
   265                           ; Code-generator required, PIC18F47J53 Definitions
   266                           ; 
   267                           ; SFR Addresses
   268  0000                     
   269                           	psect	intcode
   270  000008  EF04 F048          	goto	36872	;# 
   271                           
   272                           	psect	intcodelo
   273  000018  EF0C F048          	goto	36888	; ;# 
   274  0000                     
   275                           	psect	idataBANK0
   276  007B7A                     __pidataBANK0:
   277                           	opt stack 0
   278                           
   279                           ;initializer for _file_number
   280  007B7A  FF                 	db	255
   281                           
   282                           	psect	idataBANK1
   283  007948                     __pidataBANK1:
   284                           	opt stack 0
   285                           
   286                           ;initializer for _LUN
   287  007948  9E                 	db	low _ExternalFlash_MediaInitialize
   288  007949  79                 	db	high _ExternalFlash_MediaInitialize
   289  00794A  4C                 	db	low _ExternalFlash_CapacityRead
   290  00794B  7A                 	db	high _ExternalFlash_CapacityRead
   291  00794C  E2                 	db	low _ExternalFlash_SectorSizeRead
   292  00794D  7A                 	db	high _ExternalFlash_SectorSizeRead
   293  00794E  6C                 	db	low _ExternalFlash_MediaDetect
   294  00794F  7B                 	db	high _ExternalFlash_MediaDetect
   295  007950  FA                 	db	low _ExternalFlash_SectorRead
   296  007951  74                 	db	high _ExternalFlash_SectorRead
   297  007952  68                 	db	low _ExternalFlash_WriteProtectStateGet
   298  007953  7B                 	db	high _ExternalFlash_WriteProtectStateGet
   299  007954  C4                 	db	low _ExternalFlash_SectorWrite
   300  007955  74                 	db	high _ExternalFlash_SectorWrite
   301  007956  00                 	db	0
   302  007957  00                 	db	0
   303  007958  00                 	db	0
   304  007959  00                 	db	0
   305  00795A  00                 	db	0
   306  00795B  00                 	db	0
   307                           
   308                           ;initializer for i2c_display_send_init_sequence@F6791
   309  00795C  3A                 	db	58
   310  00795D  1E                 	db	30
   311  00795E  39                 	db	57
   312  00795F  0C                 	db	12
   313  007960  74                 	db	116
   314  007961  5C                 	db	92
   315  007962  6D                 	db	109
   316  007963  0C                 	db	12
   317  007964  01                 	db	1
   318                           
   319                           	psect	mediumconst
   320  008CCC                     __pmediumconst:
   321                           	opt stack 0
   322  008CCC  00                 	db	0
   323  008CCD                     _checked_line2:
   324                           	opt stack 0
   325  008CCD  46                 	db	70
   326  008CCE  69                 	db	105
   327  008CCF  6C                 	db	108
   328  008CD0  65                 	db	101
   329  008CD1  20                 	db	32
   330  008CD2  63                 	db	99
   331  008CD3  68                 	db	104
   332  008CD4  65                 	db	101
   333  008CD5  63                 	db	99
   334  008CD6  6B                 	db	107
   335  008CD7  20                 	db	32
   336  008CD8  63                 	db	99
   337  008CD9  6F                 	db	111
   338  008CDA  6D                 	db	109
   339  008CDB  70                 	db	112
   340  008CDC  6C                 	db	108
   341  008CDD  65                 	db	101
   342  008CDE  74                 	db	116
   343  008CDF  65                 	db	101
   344  008CE0  64                 	db	100
   345  008CE1  00                 	db	0
   346  008CE2                     __end_of_checked_line2:
   347                           	opt stack 0
   348  008CE2                     _failed_line3_addressRange:
   349                           	opt stack 0
   350  008CE2  41                 	db	65
   351  008CE3  64                 	db	100
   352  008CE4  64                 	db	100
   353  008CE5  72                 	db	114
   354  008CE6  2E                 	db	46
   355  008CE7  20                 	db	32
   356  008CE8  6F                 	db	111
   357  008CE9  75                 	db	117
   358  008CEA  74                 	db	116
   359  008CEB  73                 	db	115
   360  008CEC  69                 	db	105
   361  008CED  64                 	db	100
   362  008CEE  65                 	db	101
   363  008CEF  20                 	db	32
   364  008CF0  72                 	db	114
   365  008CF1  61                 	db	97
   366  008CF2  6E                 	db	110
   367  008CF3  67                 	db	103
   368  008CF4  65                 	db	101
   369  008CF5  00                 	db	0
   370  008CF6                     __end_of_failed_line3_addressRange:
   371                           	opt stack 0
   372  008CF6                     _start_line3:
   373                           	opt stack 0
   374  008CF6  46                 	db	70
   375  008CF7  49                 	db	73
   376  008CF8  52                 	db	82
   377  008CF9  4D                 	db	77
   378  008CFA  57                 	db	87
   379  008CFB  41                 	db	65
   380  008CFC  52                 	db	82
   381  008CFD  45                 	db	69
   382  008CFE  2E                 	db	46
   383  008CFF  48                 	db	72
   384  008D00  45                 	db	69
   385  008D01  58                 	db	88
   386  008D02  20                 	db	32
   387  008D03  6F                 	db	111
   388  008D04  6E                 	db	110
   389  008D05  20                 	db	32
   390  008D06  55                 	db	85
   391  008D07  53                 	db	83
   392  008D08  42                 	db	66
   393  008D09  00                 	db	0
   394  008D0A                     __end_of_start_line3:
   395                           	opt stack 0
   396  008D0A                     _failed_line3_startCode:
   397                           	opt stack 0
   398  008D0A  4D                 	db	77
   399  008D0B  69                 	db	105
   400  008D0C  73                 	db	115
   401  008D0D  73                 	db	115
   402  008D0E  69                 	db	105
   403  008D0F  6E                 	db	110
   404  008D10  67                 	db	103
   405  008D11  20                 	db	32
   406  008D12  73                 	db	115
   407  008D13  74                 	db	116
   408  008D14  61                 	db	97
   409  008D15  72                 	db	114
   410  008D16  74                 	db	116
   411  008D17  20                 	db	32
   412  008D18  63                 	db	99
   413  008D19  6F                 	db	111
   414  008D1A  64                 	db	100
   415  008D1B  65                 	db	101
   416  008D1C  00                 	db	0
   417  008D1D                     __end_of_failed_line3_startCode:
   418                           	opt stack 0
   419  008D1D                     _found_line2:
   420                           	opt stack 0
   421  008D1D  46                 	db	70
   422  008D1E  49                 	db	73
   423  008D1F  52                 	db	82
   424  008D20  4D                 	db	77
   425  008D21  57                 	db	87
   426  008D22  41                 	db	65
   427  008D23  52                 	db	82
   428  008D24  45                 	db	69
   429  008D25  2E                 	db	46
   430  008D26  48                 	db	72
   431  008D27  45                 	db	69
   432  008D28  58                 	db	88
   433  008D29  20                 	db	32
   434  008D2A  66                 	db	102
   435  008D2B  6F                 	db	111
   436  008D2C  75                 	db	117
   437  008D2D  6E                 	db	110
   438  008D2E  64                 	db	100
   439  008D2F  00                 	db	0
   440  008D30                     __end_of_found_line2:
   441                           	opt stack 0
   442  008D30                     _programming_line2:
   443                           	opt stack 0
   444  008D30  50                 	db	80
   445  008D31  72                 	db	114
   446  008D32  6F                 	db	111
   447  008D33  67                 	db	103
   448  008D34  72                 	db	114
   449  008D35  61                 	db	97
   450  008D36  6D                 	db	109
   451  008D37  6D                 	db	109
   452  008D38  69                 	db	105
   453  008D39  6E                 	db	110
   454  008D3A  67                 	db	103
   455  008D3B  20                 	db	32
   456  008D3C  66                 	db	102
   457  008D3D  6C                 	db	108
   458  008D3E  61                 	db	97
   459  008D3F  73                 	db	115
   460  008D40  68                 	db	104
   461  008D41  00                 	db	0
   462  008D42                     __end_of_programming_line2:
   463                           	opt stack 0
   464  008D42                     _failed_line2:
   465                           	opt stack 0
   466  008D42  46                 	db	70
   467  008D43  69                 	db	105
   468  008D44  6C                 	db	108
   469  008D45  65                 	db	101
   470  008D46  20                 	db	32
   471  008D47  63                 	db	99
   472  008D48  68                 	db	104
   473  008D49  65                 	db	101
   474  008D4A  63                 	db	99
   475  008D4B  6B                 	db	107
   476  008D4C  20                 	db	32
   477  008D4D  66                 	db	102
   478  008D4E  61                 	db	97
   479  008D4F  69                 	db	105
   480  008D50  6C                 	db	108
   481  008D51  65                 	db	101
   482  008D52  64                 	db	100
   483  008D53  00                 	db	0
   484  008D54                     __end_of_failed_line2:
   485                           	opt stack 0
   486  008D54                     _found_line4:
   487                           	opt stack 0
   488  008D54  50                 	db	80
   489  008D55  72                 	db	114
   490  008D56  65                 	db	101
   491  008D57  73                 	db	115
   492  008D58  73                 	db	115
   493  008D59  20                 	db	32
   494  008D5A  74                 	db	116
   495  008D5B  6F                 	db	111
   496  008D5C  20                 	db	32
   497  008D5D  75                 	db	117
   498  008D5E  73                 	db	115
   499  008D5F  65                 	db	101
   500  008D60  20                 	db	32
   501  008D61  66                 	db	102
   502  008D62  69                 	db	105
   503  008D63  6C                 	db	108
   504  008D64  65                 	db	101
   505  008D65  00                 	db	0
   506  008D66                     __end_of_found_line4:
   507                           	opt stack 0
   508  008D66                     _checked_line4:
   509                           	opt stack 0
   510  008D66  50                 	db	80
   511  008D67  72                 	db	114
   512  008D68  65                 	db	101
   513  008D69  73                 	db	115
   514  008D6A  73                 	db	115
   515  008D6B  20                 	db	32
   516  008D6C  74                 	db	116
   517  008D6D  6F                 	db	111
   518  008D6E  20                 	db	32
   519  008D6F  70                 	db	112
   520  008D70  72                 	db	114
   521  008D71  6F                 	db	111
   522  008D72  67                 	db	103
   523  008D73  72                 	db	114
   524  008D74  61                 	db	97
   525  008D75  6D                 	db	109
   526  008D76  00                 	db	0
   527  008D77                     __end_of_checked_line4:
   528                           	opt stack 0
   529  008D77                     _start_line2:
   530                           	opt stack 0
   531  008D77  4C                 	db	76
   532  008D78  6F                 	db	111
   533  008D79  6F                 	db	111
   534  008D7A  6B                 	db	107
   535  008D7B  69                 	db	105
   536  008D7C  6E                 	db	110
   537  008D7D  67                 	db	103
   538  008D7E  20                 	db	32
   539  008D7F  66                 	db	102
   540  008D80  6F                 	db	111
   541  008D81  72                 	db	114
   542  008D82  20                 	db	32
   543  008D83  66                 	db	102
   544  008D84  69                 	db	105
   545  008D85  6C                 	db	108
   546  008D86  65                 	db	101
   547  008D87  00                 	db	0
   548  008D88                     __end_of_start_line2:
   549                           	opt stack 0
   550  008D88                     _start_line1:
   551                           	opt stack 0
   552  008D88  42                 	db	66
   553  008D89  6F                 	db	111
   554  008D8A  6F                 	db	111
   555  008D8B  74                 	db	116
   556  008D8C  6C                 	db	108
   557  008D8D  6F                 	db	111
   558  008D8E  61                 	db	97
   559  008D8F  64                 	db	100
   560  008D90  65                 	db	101
   561  008D91  72                 	db	114
   562  008D92  20                 	db	32
   563  008D93  4D                 	db	77
   564  008D94  6F                 	db	111
   565  008D95  64                 	db	100
   566  008D96  65                 	db	101
   567  008D97  00                 	db	0
   568  008D98  00                 	db	0
   569  008D99                     __end_of_start_line1:
   570                           	opt stack 0
   571  008D99                     _done_line4:
   572                           	opt stack 0
   573  008D99  50                 	db	80
   574  008D9A  72                 	db	114
   575  008D9B  65                 	db	101
   576  008D9C  73                 	db	115
   577  008D9D  73                 	db	115
   578  008D9E  20                 	db	32
   579  008D9F  74                 	db	116
   580  008DA0  6F                 	db	111
   581  008DA1  20                 	db	32
   582  008DA2  72                 	db	114
   583  008DA3  65                 	db	101
   584  008DA4  62                 	db	98
   585  008DA5  6F                 	db	111
   586  008DA6  6F                 	db	111
   587  008DA7  74                 	db	116
   588  008DA8  00                 	db	0
   589  008DA9                     __end_of_done_line4:
   590                           	opt stack 0
   591  008DA9                     _done_line3:
   592                           	opt stack 0
   593  008DA9  50                 	db	80
   594  008DAA  61                 	db	97
   595  008DAB  67                 	db	103
   596  008DAC  65                 	db	101
   597  008DAD  73                 	db	115
   598  008DAE  20                 	db	32
   599  008DAF  77                 	db	119
   600  008DB0  72                 	db	114
   601  008DB1  69                 	db	105
   602  008DB2  74                 	db	116
   603  008DB3  74                 	db	116
   604  008DB4  65                 	db	101
   605  008DB5  6E                 	db	110
   606  008DB6  3A                 	db	58
   607  008DB7  20                 	db	32
   608  008DB8  00                 	db	0
   609  008DB9                     __end_of_done_line3:
   610                           	opt stack 0
   611  008DB9                     _done_line1:
   612                           	opt stack 0
   613  008DB9  42                 	db	66
   614  008DBA  6F                 	db	111
   615  008DBB  6F                 	db	111
   616  008DBC  74                 	db	116
   617  008DBD  6C                 	db	108
   618  008DBE  6F                 	db	111
   619  008DBF  61                 	db	97
   620  008DC0  64                 	db	100
   621  008DC1  65                 	db	101
   622  008DC2  72                 	db	114
   623  008DC3  20                 	db	32
   624  008DC4  4D                 	db	77
   625  008DC5  6F                 	db	111
   626  008DC6  64                 	db	100
   627  008DC7  65                 	db	101
   628  008DC8  00                 	db	0
   629  008DC9                     __end_of_done_line1:
   630                           	opt stack 0
   631  008DC9                     _programming_line4:
   632                           	opt stack 0
   633  008DC9  50                 	db	80
   634  008DCA  61                 	db	97
   635  008DCB  67                 	db	103
   636  008DCC  65                 	db	101
   637  008DCD  73                 	db	115
   638  008DCE  20                 	db	32
   639  008DCF  77                 	db	119
   640  008DD0  72                 	db	114
   641  008DD1  69                 	db	105
   642  008DD2  74                 	db	116
   643  008DD3  74                 	db	116
   644  008DD4  65                 	db	101
   645  008DD5  6E                 	db	110
   646  008DD6  3A                 	db	58
   647  008DD7  20                 	db	32
   648  008DD8  00                 	db	0
   649  008DD9                     __end_of_programming_line4:
   650                           	opt stack 0
   651  008DD9                     _programming_line1:
   652                           	opt stack 0
   653  008DD9  42                 	db	66
   654  008DDA  6F                 	db	111
   655  008DDB  6F                 	db	111
   656  008DDC  74                 	db	116
   657  008DDD  6C                 	db	108
   658  008DDE  6F                 	db	111
   659  008DDF  61                 	db	97
   660  008DE0  64                 	db	100
   661  008DE1  65                 	db	101
   662  008DE2  72                 	db	114
   663  008DE3  20                 	db	32
   664  008DE4  4D                 	db	77
   665  008DE5  6F                 	db	111
   666  008DE6  64                 	db	100
   667  008DE7  65                 	db	101
   668  008DE8  00                 	db	0
   669  008DE9                     __end_of_programming_line1:
   670                           	opt stack 0
   671  008DE9                     _failed_line1:
   672                           	opt stack 0
   673  008DE9  42                 	db	66
   674  008DEA  6F                 	db	111
   675  008DEB  6F                 	db	111
   676  008DEC  74                 	db	116
   677  008DED  6C                 	db	108
   678  008DEE  6F                 	db	111
   679  008DEF  61                 	db	97
   680  008DF0  64                 	db	100
   681  008DF1  65                 	db	101
   682  008DF2  72                 	db	114
   683  008DF3  20                 	db	32
   684  008DF4  4D                 	db	77
   685  008DF5  6F                 	db	111
   686  008DF6  64                 	db	100
   687  008DF7  65                 	db	101
   688  008DF8  00                 	db	0
   689  008DF9                     __end_of_failed_line1:
   690                           	opt stack 0
   691  008DF9                     _checked_line1:
   692                           	opt stack 0
   693  008DF9  42                 	db	66
   694  008DFA  6F                 	db	111
   695  008DFB  6F                 	db	111
   696  008DFC  74                 	db	116
   697  008DFD  6C                 	db	108
   698  008DFE  6F                 	db	111
   699  008DFF  61                 	db	97
   700  008E00  64                 	db	100
   701  008E01  65                 	db	101
   702  008E02  72                 	db	114
   703  008E03  20                 	db	32
   704  008E04  4D                 	db	77
   705  008E05  6F                 	db	111
   706  008E06  64                 	db	100
   707  008E07  65                 	db	101
   708  008E08  00                 	db	0
   709  008E09                     __end_of_checked_line1:
   710                           	opt stack 0
   711  008E09                     _verify_line1:
   712                           	opt stack 0
   713  008E09  42                 	db	66
   714  008E0A  6F                 	db	111
   715  008E0B  6F                 	db	111
   716  008E0C  74                 	db	116
   717  008E0D  6C                 	db	108
   718  008E0E  6F                 	db	111
   719  008E0F  61                 	db	97
   720  008E10  64                 	db	100
   721  008E11  65                 	db	101
   722  008E12  72                 	db	114
   723  008E13  20                 	db	32
   724  008E14  4D                 	db	77
   725  008E15  6F                 	db	111
   726  008E16  64                 	db	100
   727  008E17  65                 	db	101
   728  008E18  00                 	db	0
   729  008E19                     __end_of_verify_line1:
   730                           	opt stack 0
   731  008E19                     _found_line1:
   732                           	opt stack 0
   733  008E19  42                 	db	66
   734  008E1A  6F                 	db	111
   735  008E1B  6F                 	db	111
   736  008E1C  74                 	db	116
   737  008E1D  6C                 	db	108
   738  008E1E  6F                 	db	111
   739  008E1F  61                 	db	97
   740  008E20  64                 	db	100
   741  008E21  65                 	db	101
   742  008E22  72                 	db	114
   743  008E23  20                 	db	32
   744  008E24  4D                 	db	77
   745  008E25  6F                 	db	111
   746  008E26  64                 	db	100
   747  008E27  65                 	db	101
   748  008E28  00                 	db	0
   749  008E29                     __end_of_found_line1:
   750                           	opt stack 0
   751  008E29                     _failed_line3_checksum:
   752                           	opt stack 0
   753  008E29  43                 	db	67
   754  008E2A  68                 	db	104
   755  008E2B  65                 	db	101
   756  008E2C  63                 	db	99
   757  008E2D  6B                 	db	107
   758  008E2E  73                 	db	115
   759  008E2F  75                 	db	117
   760  008E30  6D                 	db	109
   761  008E31  20                 	db	32
   762  008E32  65                 	db	101
   763  008E33  72                 	db	114
   764  008E34  72                 	db	114
   765  008E35  6F                 	db	111
   766  008E36  72                 	db	114
   767  008E37  00                 	db	0
   768  008E38                     __end_of_failed_line3_checksum:
   769                           	opt stack 0
   770  008E38                     _failed_line3_noNextRecord:
   771                           	opt stack 0
   772  008E38  4E                 	db	78
   773  008E39  6F                 	db	111
   774  008E3A  20                 	db	32
   775  008E3B  6E                 	db	110
   776  008E3C  65                 	db	101
   777  008E3D  78                 	db	120
   778  008E3E  74                 	db	116
   779  008E3F  20                 	db	32
   780  008E40  72                 	db	114
   781  008E41  65                 	db	101
   782  008E42  63                 	db	99
   783  008E43  6F                 	db	111
   784  008E44  72                 	db	114
   785  008E45  64                 	db	100
   786  008E46  00                 	db	0
   787  008E47                     __end_of_failed_line3_noNextRecord:
   788                           	opt stack 0
   789  008E47                     _failed_line3_dataTooLong:
   790                           	opt stack 0
   791  008E47  44                 	db	68
   792  008E48  61                 	db	97
   793  008E49  74                 	db	116
   794  008E4A  61                 	db	97
   795  008E4B  20                 	db	32
   796  008E4C  74                 	db	116
   797  008E4D  6F                 	db	111
   798  008E4E  6F                 	db	111
   799  008E4F  20                 	db	32
   800  008E50  6C                 	db	108
   801  008E51  6F                 	db	111
   802  008E52  6E                 	db	110
   803  008E53  67                 	db	103
   804  008E54  00                 	db	0
   805  008E55                     __end_of_failed_line3_dataTooLong:
   806                           	opt stack 0
   807  008E55                     _verify_line2:
   808                           	opt stack 0
   809  008E55  56                 	db	86
   810  008E56  65                 	db	101
   811  008E57  72                 	db	114
   812  008E58  69                 	db	105
   813  008E59  66                 	db	102
   814  008E5A  79                 	db	121
   815  008E5B  69                 	db	105
   816  008E5C  6E                 	db	110
   817  008E5D  67                 	db	103
   818  008E5E  2E                 	db	46
   819  008E5F  2E                 	db	46
   820  008E60  2E                 	db	46
   821  008E61  00                 	db	0
   822  008E62                     __end_of_verify_line2:
   823                           	opt stack 0
   824  008E62                     _start_line4:
   825                           	opt stack 0
   826  008E62  64                 	db	100
   827  008E63  72                 	db	114
   828  008E64  69                 	db	105
   829  008E65  76                 	db	118
   830  008E66  65                 	db	101
   831  008E67  2E                 	db	46
   832  008E68  2E                 	db	46
   833  008E69  2E                 	db	46
   834  008E6A  00                 	db	0
   835  008E6B                     __end_of_start_line4:
   836                           	opt stack 0
   837  008E6B                     _failed_line4:
   838                           	opt stack 0
   839  008E6B  52                 	db	82
   840  008E6C  65                 	db	101
   841  008E6D  63                 	db	99
   842  008E6E  6F                 	db	111
   843  008E6F  72                 	db	114
   844  008E70  64                 	db	100
   845  008E71  20                 	db	32
   846  008E72  00                 	db	0
   847  008E73                     __end_of_failed_line4:
   848                           	opt stack 0
   849  008E73                     _checked_line3:
   850                           	opt stack 0
   851  008E73  72                 	db	114
   852  008E74  65                 	db	101
   853  008E75  63                 	db	99
   854  008E76  6F                 	db	111
   855  008E77  72                 	db	114
   856  008E78  64                 	db	100
   857  008E79  73                 	db	115
   858  008E7A  00                 	db	0
   859  008E7B                     __end_of_checked_line3:
   860                           	opt stack 0
   861  008E7B                     _USB_SD_Ptr:
   862                           	opt stack 0
   863  008E7B  CB                 	db	low _sd000
   864  008E7C  8F                 	db	high _sd000
   865  008E7D  E7                 	db	low _sd001
   866  008E7E  8E                 	db	high _sd001
   867  008E7F  1B                 	db	low _sd002
   868  008E80  8F                 	db	high _sd002
   869  008E81  8A                 	db	low _sd003
   870  008E82  8F                 	db	high _sd003
   871  008E83                     __end_of_USB_SD_Ptr:
   872                           	opt stack 0
   873  008E83                     _programming_line3:
   874                           	opt stack 0
   875  008E83  45                 	db	69
   876  008E84  6E                 	db	110
   877  008E85  74                 	db	116
   878  008E86  72                 	db	114
   879  008E87  79                 	db	121
   880  008E88  20                 	db	32
   881  008E89  00                 	db	0
   882  008E8A                     __end_of_programming_line3:
   883                           	opt stack 0
   884  008E8A                     _verify_line3:
   885                           	opt stack 0
   886  008E8A  52                 	db	82
   887  008E8B  65                 	db	101
   888  008E8C  63                 	db	99
   889  008E8D  6F                 	db	111
   890  008E8E  72                 	db	114
   891  008E8F  64                 	db	100
   892  008E90  00                 	db	0
   893  008E91                     __end_of_verify_line3:
   894                           	opt stack 0
   895  008E91                     _found_line3b:
   896                           	opt stack 0
   897  008E91  20                 	db	32
   898  008E92  62                 	db	98
   899  008E93  79                 	db	121
   900  008E94  74                 	db	116
   901  008E95  65                 	db	101
   902  008E96  73                 	db	115
   903  008E97  00                 	db	0
   904  008E98                     __end_of_found_line3b:
   905                           	opt stack 0
   906  008E98                     _found_line3:
   907                           	opt stack 0
   908  008E98  53                 	db	83
   909  008E99  69                 	db	105
   910  008E9A  7A                 	db	122
   911  008E9B  65                 	db	101
   912  008E9C  3A                 	db	58
   913  008E9D  20                 	db	32
   914  008E9E  00                 	db	0
   915  008E9F                     __end_of_found_line3:
   916                           	opt stack 0
   917  008E9F                     _done_line2:
   918                           	opt stack 0
   919  008E9F  44                 	db	68
   920  008EA0  6F                 	db	111
   921  008EA1  6E                 	db	110
   922  008EA2  65                 	db	101
   923  008EA3  21                 	db	33
   924  008EA4  00                 	db	0
   925  008EA5                     __end_of_done_line2:
   926                           	opt stack 0
   927  008EA5                     _USB_CD_Ptr:
   928                           	opt stack 0
   929  008EA5  A7                 	db	low _configDescriptor1
   930  008EA6  8E                 	db	high _configDescriptor1
   931  008EA7                     __end_of_USB_CD_Ptr:
   932                           	opt stack 0
   933  008EA7                     _configDescriptor1:
   934                           	opt stack 0
   935  008EA7  09                 	db	9
   936  008EA8  02                 	db	2
   937  008EA9  40                 	db	64
   938  008EAA  00                 	db	0
   939  008EAB  02                 	db	2
   940  008EAC  01                 	db	1
   941  008EAD  00                 	db	0
   942  008EAE  C0                 	db	192
   943  008EAF  32                 	db	50
   944  008EB0  09                 	db	9
   945  008EB1  04                 	db	4
   946  008EB2  00                 	db	0
   947  008EB3  00                 	db	0
   948  008EB4  02                 	db	2
   949  008EB5  03                 	db	3
   950  008EB6  00                 	db	0
   951  008EB7  00                 	db	0
   952  008EB8  00                 	db	0
   953  008EB9  09                 	db	9
   954  008EBA  21                 	db	33
   955  008EBB  11                 	db	17
   956  008EBC  01                 	db	1
   957  008EBD  00                 	db	0
   958  008EBE  01                 	db	1
   959  008EBF  22                 	db	34
   960  008EC0  1D                 	db	29
   961  008EC1  00                 	db	0
   962  008EC2  07                 	db	7
   963  008EC3  05                 	db	5
   964  008EC4  81                 	db	129
   965  008EC5  03                 	db	3
   966  008EC6  40                 	db	64
   967  008EC7  00                 	db	0
   968  008EC8  01                 	db	1
   969  008EC9  07                 	db	7
   970  008ECA  05                 	db	5
   971  008ECB  01                 	db	1
   972  008ECC  03                 	db	3
   973  008ECD  40                 	db	64
   974  008ECE  00                 	db	0
   975  008ECF  01                 	db	1
   976  008ED0  09                 	db	9
   977  008ED1  04                 	db	4
   978  008ED2  01                 	db	1
   979  008ED3  00                 	db	0
   980  008ED4  02                 	db	2
   981  008ED5  08                 	db	8
   982  008ED6  06                 	db	6
   983  008ED7  50                 	db	80
   984  008ED8  00                 	db	0
   985  008ED9  07                 	db	7
   986  008EDA  05                 	db	5
   987  008EDB  82                 	db	130
   988  008EDC  02                 	db	2
   989  008EDD  40                 	db	64
   990  008EDE  00                 	db	0
   991  008EDF  01                 	db	1
   992  008EE0  07                 	db	7
   993  008EE1  05                 	db	5
   994  008EE2  02                 	db	2
   995  008EE3  02                 	db	2
   996  008EE4  40                 	db	64
   997  008EE5  00                 	db	0
   998  008EE6  01                 	db	1
   999  008EE7                     __end_of_configDescriptor1:
  1000                           	opt stack 0
  1001  008EE7                     _sd001:
  1002                           	opt stack 0
  1003  008EE7  34                 	db	52
  1004  008EE8  03                 	db	3
  1005  008EE9  0053               	dw	83
  1006  008EEB  006F               	dw	111
  1007  008EED  006C               	dw	108
  1008  008EEF  0064               	dw	100
  1009  008EF1  0065               	dw	101
  1010  008EF3  0072               	dw	114
  1011  008EF5  006E               	dw	110
  1012  008EF7  0065               	dw	101
  1013  008EF9  0072               	dw	114
  1014  008EFB  0064               	dw	100
  1015  008EFD  002E               	dw	46
  1016  008EFF  0063               	dw	99
  1017  008F01  006F               	dw	111
  1018  008F03  006D               	dw	109
  1019  008F05  0020               	dw	32
  1020  008F07  0020               	dw	32
  1021  008F09  0020               	dw	32
  1022  008F0B  0020               	dw	32
  1023  008F0D  0020               	dw	32
  1024  008F0F  0020               	dw	32
  1025  008F11  0020               	dw	32
  1026  008F13  0020               	dw	32
  1027  008F15  0020               	dw	32
  1028  008F17  0020               	dw	32
  1029  008F19  0020               	dw	32
  1030  008F1B                     __end_of_sd001:
  1031                           	opt stack 0
  1032  008F1B                     _sd002:
  1033                           	opt stack 0
  1034  008F1B  2E                 	db	46
  1035  008F1C  03                 	db	3
  1036  008F1D  004D               	dw	77
  1037  008F1F  0050               	dw	80
  1038  008F21  0050               	dw	80
  1039  008F23  0054               	dw	84
  1040  008F25  0053               	dw	83
  1041  008F27  006F               	dw	111
  1042  008F29  006C               	dw	108
  1043  008F2B  0061               	dw	97
  1044  008F2D  0072               	dw	114
  1045  008F2F  0020               	dw	32
  1046  008F31  0043               	dw	67
  1047  008F33  0068               	dw	104
  1048  008F35  0061               	dw	97
  1049  008F37  0072               	dw	114
  1050  008F39  0067               	dw	103
  1051  008F3B  0065               	dw	101
  1052  008F3D  0072               	dw	114
  1053  008F3F  0020               	dw	32
  1054  008F41  0052               	dw	82
  1055  008F43  0065               	dw	101
  1056  008F45  0076               	dw	118
  1057  008F47  0043               	dw	67
  1058  008F49                     __end_of_sd002:
  1059                           	opt stack 0
  1060  008F49                     _inq_resp:
  1061                           	opt stack 0
  1062  008F49  00                 	db	0
  1063  008F4A  80                 	db	128
  1064  008F4B  04                 	db	4
  1065  008F4C  02                 	db	2
  1066  008F4D  20                 	db	32
  1067  008F4E  00                 	db	0
  1068  008F4F  00                 	db	0
  1069  008F50  00                 	db	0
  1070  008F51  4D                 	db	77
  1071  008F52  69                 	db	105
  1072  008F53  63                 	db	99
  1073  008F54  72                 	db	114
  1074  008F55  6F                 	db	111
  1075  008F56  63                 	db	99
  1076  008F57  68                 	db	104
  1077  008F58  70                 	db	112
  1078  008F59  4D                 	db	77
  1079  008F5A  61                 	db	97
  1080  008F5B  73                 	db	115
  1081  008F5C  73                 	db	115
  1082  008F5D  20                 	db	32
  1083  008F5E  53                 	db	83
  1084  008F5F  74                 	db	116
  1085  008F60  6F                 	db	111
  1086  008F61  72                 	db	114
  1087  008F62  61                 	db	97
  1088  008F63  67                 	db	103
  1089  008F64  65                 	db	101
  1090  008F65  20                 	db	32
  1091  008F66  20                 	db	32
  1092  008F67  20                 	db	32
  1093  008F68  20                 	db	32
  1094  008F69  30                 	db	48
  1095  008F6A  30                 	db	48
  1096  008F6B  30                 	db	48
  1097  008F6C  31                 	db	49
  1098  008F6D                     __end_of_inq_resp:
  1099                           	opt stack 0
  1100  008F6D                     _hid_rpt01:
  1101                           	opt stack 0
  1102  008F6D  06                 	db	6
  1103  008F6E  00                 	db	0
  1104  008F6F  FF                 	db	255
  1105  008F70  09                 	db	9
  1106  008F71  01                 	db	1
  1107  008F72  A1                 	db	161
  1108  008F73  01                 	db	1
  1109  008F74  19                 	db	25
  1110  008F75  01                 	db	1
  1111  008F76  29                 	db	41
  1112  008F77  40                 	db	64
  1113  008F78  15                 	db	21
  1114  008F79  00                 	db	0
  1115  008F7A  26                 	db	38
  1116  008F7B  FF                 	db	255
  1117  008F7C  00                 	db	0
  1118  008F7D  75                 	db	117
  1119  008F7E  08                 	db	8
  1120  008F7F  95                 	db	149
  1121  008F80  40                 	db	64
  1122  008F81  81                 	db	129
  1123  008F82  00                 	db	0
  1124  008F83  19                 	db	25
  1125  008F84  01                 	db	1
  1126  008F85  29                 	db	41
  1127  008F86  40                 	db	64
  1128  008F87  91                 	db	145
  1129  008F88  00                 	db	0
  1130  008F89  C0                 	db	192
  1131  008F8A                     __end_of_hid_rpt01:
  1132                           	opt stack 0
  1133  008F8A                     _sd003:
  1134                           	opt stack 0
  1135  008F8A  1A                 	db	26
  1136  008F8B  03                 	db	3
  1137  008F8C  0031               	dw	49
  1138  008F8E  0032               	dw	50
  1139  008F90  0033               	dw	51
  1140  008F92  0034               	dw	52
  1141  008F94  0035               	dw	53
  1142  008F96  0036               	dw	54
  1143  008F98  0037               	dw	55
  1144  008F9A  0038               	dw	56
  1145  008F9C  0039               	dw	57
  1146  008F9E  0030               	dw	48
  1147  008FA0  0039               	dw	57
  1148  008FA2  0039               	dw	57
  1149  008FA4                     __end_of_sd003:
  1150                           	opt stack 0
  1151  008FA4                     _device_dsc:
  1152                           	opt stack 0
  1153  008FA4  12                 	db	18
  1154  008FA5  01                 	db	1
  1155  008FA6  0200               	dw	512
  1156  008FA8  00                 	db	0
  1157  008FA9  00                 	db	0
  1158  008FAA  00                 	db	0
  1159  008FAB  08                 	db	8
  1160  008FAC  04D8               	dw	1240
  1161  008FAE  F08E               	dw	61582
  1162  008FB0  0100               	dw	256
  1163  008FB2  01                 	db	1
  1164  008FB3  02                 	db	2
  1165  008FB4  00                 	db	0
  1166  008FB5  01                 	db	1
  1167  008FB6                     __end_of_device_dsc:
  1168                           	opt stack 0
  1169  008FB6                     _bootloader_filename:
  1170                           	opt stack 0
  1171  008FB6  46                 	db	70
  1172  008FB7  49                 	db	73
  1173  008FB8  52                 	db	82
  1174  008FB9  4D                 	db	77
  1175  008FBA  57                 	db	87
  1176  008FBB  41                 	db	65
  1177  008FBC  52                 	db	82
  1178  008FBD  45                 	db	69
  1179  008FBE  00                 	db	0
  1180  008FBF                     __end_of_bootloader_filename:
  1181                           	opt stack 0
  1182  008FBF                     _flash_command_pagesize_528:
  1183                           	opt stack 0
  1184  008FBF  3D                 	db	61
  1185  008FC0  2A                 	db	42
  1186  008FC1  80                 	db	128
  1187  008FC2  A7                 	db	167
  1188  008FC3                     __end_of_flash_command_pagesize_528:
  1189                           	opt stack 0
  1190  008FC3                     _flash_command_pagesize_512:
  1191                           	opt stack 0
  1192  008FC3  3D                 	db	61
  1193  008FC4  2A                 	db	42
  1194  008FC5  80                 	db	128
  1195  008FC6  A6                 	db	166
  1196  008FC7                     __end_of_flash_command_pagesize_512:
  1197                           	opt stack 0
  1198  008FC7                     _bootloader_extension:
  1199                           	opt stack 0
  1200  008FC7  48                 	db	72
  1201  008FC8  45                 	db	69
  1202  008FC9  58                 	db	88
  1203  008FCA  00                 	db	0
  1204  008FCB                     __end_of_bootloader_extension:
  1205                           	opt stack 0
  1206  008FCB                     _sd000:
  1207                           	opt stack 0
  1208  008FCB  04                 	db	4
  1209  008FCC  03                 	db	3
  1210  008FCD  0409               	dw	1033
  1211  008FCF                     __end_of_sd000:
  1212                           	opt stack 0
  1213  0000                     _RPINR22	set	3837
  1214  0000                     _RPOR22	set	3798
  1215  0000                     _RPOR21	set	3797
  1216  0000                     _RPINR21	set	3836
  1217  0000                     _RPINR2	set	3810
  1218  0000                     _RPINR3	set	3811
  1219  0000                     _RPINR1	set	3809
  1220  0000                     _PPSCONbits	set	3775
  1221  0000                     _ANCON0bits	set	3912
  1222  0000                     _UEP0bits	set	3878
  1223  0000                     _UIEbits	set	3894
  1224  0000                     _UADDR	set	3896
  1225  0000                     _UIE	set	3894
  1226  0000                     _UEIE	set	3895
  1227  0000                     _UCFG	set	3897
  1228  0000                     _UEP1	set	3879
  1229  0000                     _UEP0	set	3878
  1230  0000                     _TBLPTR	set	4086
  1231  0000                     _RXADDRL	set	3945
  1232  0000                     _RXADDRH	set	3944
  1233  0000                     _DMABCL	set	3943
  1234  0000                     _DMABCH	set	3942
  1235  0000                     _TXADDRL	set	3947
  1236  0000                     _TXADDRH	set	3946
  1237  0000                     _DMACON2bits	set	3974
  1238  0000                     _DMACON1bits	set	3976
  1239  0000                     _SSP2CON1bits	set	3954
  1240  0000                     _SSP2STATbits	set	3955
  1241  0000                     _INTCON	set	4082
  1242  0000                     _EECON1	set	4006
  1243  0000                     _TABLAT	set	4085
  1244  0000                     _EECON1bits	set	4006
  1245  0000                     _SSP1BUF	set	4041
  1246  0000                     _SSP1CON2bits	set	4037
  1247  0000                     _SSP1CON1bits	set	4038
  1248  0000                     _SSP1ADD	set	4040
  1249  0000                     _SSP1STATbits	set	4039
  1250  0000                     _LATAbits	set	3977
  1251  0000                     _TRISAbits	set	3986
  1252  0000                     _LATEbits	set	3981
  1253  0000                     _TRISEbits	set	3990
  1254  0000                     _LATBbits	set	3978
  1255  0000                     _TRISBbits	set	3987
  1256  0000                     _LATDbits	set	3980
  1257  0000                     _TRISDbits	set	3989
  1258  0000                     _LATCbits	set	3979
  1259  0000                     _TRISCbits	set	3988
  1260  0000                     _T0CONbits	set	4053
  1261  0000                     _INTCON2bits	set	4081
  1262  0000                     _EECON2	set	4007
  1263  0000                     _PORTBbits	set	3969
  1264  0000                     _INTCON3bits	set	4080
  1265  0000                     _TMR0L	set	4054
  1266  0000                     _TMR0H	set	4055
  1267  0000                     _INTCONbits	set	4082
  1268  0000                     _OSCCON	set	4051
  1269  0000                     _OSCTUNEbits	set	3995
  1270  0000                     _PORTAbits	set	3968
  1271  0000                     _USTAT	set	3940
  1272  0000                     _PIR2bits	set	4001
  1273  0000                     _UCON	set	3941
  1274  0000                     _UIRbits	set	3938
  1275  0000                     _UCONbits	set	3941
  1276  0000                     _UIR	set	3938
  1277  0000                     _UEIR	set	3939
  1278  0000                     _PIE2bits	set	4000
  1279  008FCF                     STR_12:
  1280  008FCF  48                 	db	72	;'H'
  1281  008FD0  65                 	db	101	;'e'
  1282  008FD1  6C                 	db	108	;'l'
  1283  008FD2  6C                 	db	108	;'l'
  1284  008FD3  6F                 	db	111	;'o'
  1285  008FD4  20                 	db	32
  1286  008FD5  57                 	db	87	;'W'
  1287  008FD6  6F                 	db	111	;'o'
  1288  008FD7  72                 	db	114	;'r'
  1289  008FD8  6C                 	db	108	;'l'
  1290  008FD9  64                 	db	100	;'d'
  1291  008FDA  21                 	db	33
  1292  008FDB  00                 	db	0
  1293  008FDC                     STR_9:
  1294  008FDC  53                 	db	83	;'S'
  1295  008FDD  6F                 	db	111	;'o'
  1296  008FDE  6C                 	db	108	;'l'
  1297  008FDF  61                 	db	97	;'a'
  1298  008FE0  72                 	db	114	;'r'
  1299  008FE1  43                 	db	67	;'C'
  1300  008FE2  68                 	db	104	;'h'
  1301  008FE3  61                 	db	97	;'a'
  1302  008FE4  72                 	db	114	;'r'
  1303  008FE5  67                 	db	103	;'g'
  1304  008FE6  72                 	db	114	;'r'
  1305  008FE7  00                 	db	0
  1306  008FE8                     STR_10:
  1307  008FE8  46                 	db	70	;'F'
  1308  008FE9  49                 	db	73	;'I'
  1309  008FEA  4C                 	db	76	;'L'
  1310  008FEB  45                 	db	69	;'E'
  1311  008FEC  20                 	db	32
  1312  008FED  20                 	db	32
  1313  008FEE  20                 	db	32
  1314  008FEF  20                 	db	32
  1315  008FF0  00                 	db	0
  1316  008FF1                     STR_1:
  1317  008FF1  4D                 	db	77	;'M'
  1318  008FF2  53                 	db	83	;'S'
  1319  008FF3  44                 	db	68	;'D'
  1320  008FF4  4F                 	db	79	;'O'
  1321  008FF5  53                 	db	83	;'S'
  1322  008FF6  35                 	db	53	;'5'
  1323  008FF7  2E                 	db	46
  1324  008FF8  30                 	db	48	;'0'
  1325  008FF9  00                 	db	0
  1326  008FFA                     STR_11:
  1327  008FFA  54                 	db	84	;'T'
  1328  008FFB  58                 	db	88	;'X'
  1329  008FFC  54                 	db	84	;'T'
  1330  008FFD  00                 	db	0
  1331  0000                     
  1332                           ; #config settings
  1333  008FFE  00                 	db	0	; dummy byte at the end
  1334  0000                     
  1335                           	psect	cinit
  1336  005DFC                     __pcinit:
  1337                           	opt stack 0
  1338  005DFC                     start_initialization:
  1339                           	opt stack 0
  1340  005DFC                     __initialization:
  1341                           	opt stack 0
  1342                           
  1343                           ; Initialize objects allocated to BANK1 (29 bytes)
  1344                           ; load TBLPTR registers with __pidataBANK1
  1345  005DFC  0E48               	movlw	low __pidataBANK1
  1346  005DFE  6EF6               	movwf	tblptrl,c
  1347  005E00  0E79               	movlw	high __pidataBANK1
  1348  005E02  6EF7               	movwf	tblptrh,c
  1349  005E04  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1350  005E06  6EF8               	movwf	tblptru,c
  1351  005E08  EE01  F0D8         	lfsr	0,__pdataBANK1
  1352  005E0C  EE10 F01D          	lfsr	1,29
  1353  005E10                     copy_data0:
  1354  005E10  0009               	tblrd		*+
  1355  005E12  CFF5 FFEE          	movff	tablat,postinc0
  1356  005E16  50E5               	movf	postdec1,w,c
  1357  005E18  50E1               	movf	fsr1l,w,c
  1358  005E1A  E1FA               	bnz	copy_data0
  1359                           
  1360                           ; Initialize objects allocated to BANK0 (1 bytes)
  1361                           ; load TBLPTR registers with __pidataBANK0
  1362  005E1C  0E7A               	movlw	low __pidataBANK0
  1363  005E1E  6EF6               	movwf	tblptrl,c
  1364  005E20  0E7B               	movlw	high __pidataBANK0
  1365  005E22  6EF7               	movwf	tblptrh,c
  1366  005E24  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1367  005E26  6EF8               	movwf	tblptru,c
  1368  005E28  0009               	tblrd		*+	;fetch initializer
  1369  005E2A  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1370                           
  1371                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1372  005E2E  EE02  F0B2         	lfsr	0,__pbssBIGRAMll
  1373  005E32  EE12 F000          	lfsr	1,512
  1374  005E36                     clear_0:
  1375  005E36  6AEE               	clrf	postinc0,c
  1376  005E38  50E5               	movf	postdec1,w,c
  1377  005E3A  50E1               	movf	fsr1l,w,c
  1378  005E3C  E1FC               	bnz	clear_0
  1379  005E3E  50E2               	movf	fsr1h,w,c
  1380  005E40  E1FA               	bnz	clear_0
  1381                           
  1382                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1383  005E42  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1384  005E46  EE14 F000          	lfsr	1,1024
  1385  005E4A                     clear_1:
  1386  005E4A  6AEE               	clrf	postinc0,c
  1387  005E4C  50E5               	movf	postdec1,w,c
  1388  005E4E  50E1               	movf	fsr1l,w,c
  1389  005E50  E1FC               	bnz	clear_1
  1390  005E52  50E2               	movf	fsr1h,w,c
  1391  005E54  E1FA               	bnz	clear_1
  1392                           
  1393                           ; Clear objects allocated to BANK2 (178 bytes)
  1394  005E56  EE02  F000         	lfsr	0,__pbssBANK2
  1395  005E5A  0EB2               	movlw	178
  1396  005E5C                     clear_2:
  1397  005E5C  6AEE               	clrf	postinc0,c
  1398  005E5E  06E8               	decf	wreg,f,c
  1399  005E60  E1FD               	bnz	clear_2
  1400                           
  1401                           ; Clear objects allocated to BANK1 (216 bytes)
  1402  005E62  EE01  F000         	lfsr	0,__pbssBANK1
  1403  005E66  0ED8               	movlw	216
  1404  005E68                     clear_3:
  1405  005E68  6AEE               	clrf	postinc0,c
  1406  005E6A  06E8               	decf	wreg,f,c
  1407  005E6C  E1FD               	bnz	clear_3
  1408                           
  1409                           ; Clear objects allocated to BANK0 (94 bytes)
  1410  005E6E  EE00  F060         	lfsr	0,__pbssBANK0
  1411  005E72  0E5E               	movlw	94
  1412  005E74                     clear_4:
  1413  005E74  6AEE               	clrf	postinc0,c
  1414  005E76  06E8               	decf	wreg,f,c
  1415  005E78  E1FD               	bnz	clear_4
  1416                           
  1417                           ; Clear objects allocated to COMRAM (1 bytes)
  1418  005E7A  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  1419  005E7C                     end_of_initialization:
  1420                           	opt stack 0
  1421  005E7C                     __end_of__initialization:
  1422                           	opt stack 0
  1423  005E7C  0100               	movlb	0
  1424  005E7E  EF82  F026         	goto	_main	;jump to C main() function
  1425                           tblptru	equ	0xFF8
  1426                           tblptrh	equ	0xFF7
  1427                           tblptrl	equ	0xFF6
  1428                           tablat	equ	0xFF5
  1429                           postinc0	equ	0xFEE
  1430                           wreg	equ	0xFE8
  1431                           postdec1	equ	0xFE5
  1432                           fsr1h	equ	0xFE2
  1433                           fsr1l	equ	0xFE1
  1434                           
  1435                           	psect	bssCOMRAM
  1436  00005F                     __pbssCOMRAM:
  1437                           	opt stack 0
  1438  00005F                     _USBDeviceState:
  1439                           	opt stack 0
  1440  00005F                     	ds	1
  1441                           tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           postinc0	equ	0xFEE
  1446                           wreg	equ	0xFE8
  1447                           postdec1	equ	0xFE5
  1448                           fsr1h	equ	0xFE2
  1449                           fsr1l	equ	0xFE1
  1450                           
  1451                           	psect	bssBANK0
  1452  000060                     __pbssBANK0:
  1453                           	opt stack 0
  1454  000060                     _os:
  1455                           	opt stack 0
  1456  000060                     	ds	6
  1457  000066                     _inPipes:
  1458                           	opt stack 0
  1459  000066                     	ds	6
  1460  00006C                     _pBDTEntryIn:
  1461                           	opt stack 0
  1462  00006C                     	ds	6
  1463  000072                     _pBDTEntryOut:
  1464                           	opt stack 0
  1465  000072                     	ds	6
  1466  000078                     _hex_file_size:
  1467                           	opt stack 0
  1468  000078                     	ds	4
  1469  00007C                     _hex_file_offset:
  1470                           	opt stack 0
  1471  00007C                     	ds	4
  1472  000080                     _LBA:
  1473                           	opt stack 0
  1474  000080                     	ds	4
  1475  000084                     _hex_file_entries:
  1476                           	opt stack 0
  1477  000084                     	ds	2
  1478  000086                     _system_ui_inactive_count:
  1479                           	opt stack 0
  1480  000086                     	ds	2
  1481  000088                     _USBInHandle:
  1482                           	opt stack 0
  1483  000088                     	ds	2
  1484  00008A                     _USBOutHandle:
  1485                           	opt stack 0
  1486  00008A                     	ds	2
  1487  00008C                     _TransferLength:
  1488                           	opt stack 0
  1489  00008C                     	ds	2
  1490  00008E                     _gblMediaPresent:
  1491                           	opt stack 0
  1492  00008E                     	ds	2
  1493  000090                     _USBMSDInHandle:
  1494                           	opt stack 0
  1495  000090                     	ds	2
  1496  000092                     _USBMSDOutHandle:
  1497                           	opt stack 0
  1498  000092                     	ds	2
  1499  000094                     _ptrNextData:
  1500                           	opt stack 0
  1501  000094                     	ds	2
  1502  000096                     _pDst:
  1503                           	opt stack 0
  1504  000096                     	ds	2
  1505  000098                     _pBDTEntryEP0OutNext:
  1506                           	opt stack 0
  1507  000098                     	ds	2
  1508  00009A                     _pBDTEntryEP0OutCurrent:
  1509                           	opt stack 0
  1510  00009A                     	ds	2
  1511  00009C                     _active_configuration:
  1512                           	opt stack 0
  1513  00009C                     	ds	1
  1514  00009D                     _start_from_byte_next:
  1515                           	opt stack 0
  1516  00009D                     	ds	1
  1517  00009E                     _last_error:
  1518                           	opt stack 0
  1519  00009E                     	ds	1
  1520  00009F                     _power_state:
  1521                           	opt stack 0
  1522  00009F                     	ds	1
  1523  0000A0                     _userInterfaceStatus:
  1524                           	opt stack 0
  1525  0000A0                     	ds	1
  1526  0000A1                     _i2c_frequency:
  1527                           	opt stack 0
  1528  0000A1                     	ds	1
  1529  0000A2                     _MSDCBWValid:
  1530                           	opt stack 0
  1531  0000A2                     	ds	1
  1532  0000A3                     _MSDHostNoData:
  1533                           	opt stack 0
  1534  0000A3                     	ds	1
  1535  0000A4                     _SoftDetach:
  1536                           	opt stack 0
  1537  0000A4                     	ds	1
  1538  0000A5                     _gblCBWLength:
  1539                           	opt stack 0
  1540  0000A5                     	ds	1
  1541  0000A6                     _MSDRetryAttempt:
  1542                           	opt stack 0
  1543  0000A6                     	ds	1
  1544  0000A7                     _MSDWriteState:
  1545                           	opt stack 0
  1546  0000A7                     	ds	1
  1547  0000A8                     _MSDReadState:
  1548                           	opt stack 0
  1549  0000A8                     	ds	1
  1550  0000A9                     _MSDCommandState:
  1551                           	opt stack 0
  1552  0000A9                     	ds	1
  1553  0000AA                     _MSD_State:
  1554                           	opt stack 0
  1555  0000AA                     	ds	1
  1556  0000AB                     _USBTicksSinceSuspendEnd:
  1557                           	opt stack 0
  1558  0000AB                     	ds	1
  1559  0000AC                     _USBDeferOUTDataStagePackets:
  1560                           	opt stack 0
  1561  0000AC                     	ds	1
  1562  0000AD                     _USBDeferINDataStagePackets:
  1563                           	opt stack 0
  1564  0000AD                     	ds	1
  1565  0000AE                     _USBStatusStageEnabledFlag2:
  1566                           	opt stack 0
  1567  0000AE                     	ds	1
  1568  0000AF                     _USBStatusStageEnabledFlag1:
  1569                           	opt stack 0
  1570  0000AF                     	ds	1
  1571  0000B0                     _USBDeferStatusStagePacket:
  1572                           	opt stack 0
  1573  0000B0                     	ds	1
  1574  0000B1                     _USBStatusStageTimeoutCounter:
  1575                           	opt stack 0
  1576  0000B1                     	ds	1
  1577  0000B2                     _BothEP0OutUOWNsSet:
  1578                           	opt stack 0
  1579  0000B2                     	ds	1
  1580  0000B3                     _endpoint_number:
  1581                           	opt stack 0
  1582  0000B3                     	ds	1
  1583  0000B4                     _USBBusIsSuspended:
  1584                           	opt stack 0
  1585  0000B4                     	ds	1
  1586  0000B5                     _RemoteWakeup:
  1587                           	opt stack 0
  1588  0000B5                     	ds	1
  1589  0000B6                     _controlTransferState:
  1590                           	opt stack 0
  1591  0000B6                     	ds	1
  1592  0000B7                     _shortPacketStatus:
  1593                           	opt stack 0
  1594  0000B7                     	ds	1
  1595  0000B8                     _USBAlternateInterface:
  1596                           	opt stack 0
  1597  0000B8                     	ds	2
  1598  0000BA                     _active_protocol:
  1599                           	opt stack 0
  1600  0000BA                     	ds	1
  1601  0000BB                     _idle_rate:
  1602                           	opt stack 0
  1603  0000BB                     	ds	1
  1604  0000BC                     _USTATcopy:
  1605                           	opt stack 0
  1606  0000BC                     	ds	1
  1607  0000BD                     _USBActiveConfiguration:
  1608                           	opt stack 0
  1609  0000BD                     	ds	1
  1610                           tblptru	equ	0xFF8
  1611                           tblptrh	equ	0xFF7
  1612                           tblptrl	equ	0xFF6
  1613                           tablat	equ	0xFF5
  1614                           postinc0	equ	0xFEE
  1615                           wreg	equ	0xFE8
  1616                           postdec1	equ	0xFE5
  1617                           fsr1h	equ	0xFE2
  1618                           fsr1l	equ	0xFE1
  1619                           
  1620                           	psect	dataBANK0
  1621  0000FF                     __pdataBANK0:
  1622                           	opt stack 0
  1623  0000FF                     _file_number:
  1624                           	opt stack 0
  1625  0000FF                     	ds	1
  1626                           tblptru	equ	0xFF8
  1627                           tblptrh	equ	0xFF7
  1628                           tblptrl	equ	0xFF6
  1629                           tablat	equ	0xFF5
  1630                           postinc0	equ	0xFEE
  1631                           wreg	equ	0xFE8
  1632                           postdec1	equ	0xFE5
  1633                           fsr1h	equ	0xFE2
  1634                           fsr1l	equ	0xFE1
  1635                           
  1636                           	psect	bssBANK1
  1637  000100                     __pbssBANK1:
  1638                           	opt stack 0
  1639  000100                     _gblCBW:
  1640                           	opt stack 0
  1641  000100                     	ds	31
  1642  00011F                     _gblSenseData:
  1643                           	opt stack 0
  1644  00011F                     	ds	18
  1645  000131                     _outPipes:
  1646                           	opt stack 0
  1647  000131                     	ds	8
  1648  000139                     _communicationSettings:
  1649                           	opt stack 0
  1650  000139                     	ds	7
  1651  000140                     _extended_linear_address:
  1652                           	opt stack 0
  1653  000140                     	ds	4
  1654  000144                     _file_maximum_address:
  1655                           	opt stack 0
  1656  000144                     	ds	4
  1657  000148                     _file_minimum_address:
  1658                           	opt stack 0
  1659  000148                     	ds	4
  1660  00014C                     _gblBLKLen:
  1661                           	opt stack 0
  1662  00014C                     	ds	4
  1663  000150                     _gblNumBLKS:
  1664                           	opt stack 0
  1665  000150                     	ds	4
  1666  000154                     _USB1msTickCount:
  1667                           	opt stack 0
  1668  000154                     	ds	4
  1669  000158                     _config_external:
  1670                           	opt stack 0
  1671  000158                     	ds	3
  1672  00015B                     _config_internal:
  1673                           	opt stack 0
  1674  00015B                     	ds	3
  1675  00015E                     _ep_data_out:
  1676                           	opt stack 0
  1677  00015E                     	ds	3
  1678  000161                     _ep_data_in:
  1679                           	opt stack 0
  1680  000161                     	ds	3
  1681  000164                     _FileAddress:
  1682                           	opt stack 0
  1683  000164                     	ds	2
  1684  000166                     _flash_pages_written:
  1685                           	opt stack 0
  1686  000166                     	ds	2
  1687  000168                     _total_hex_file_entries:
  1688                           	opt stack 0
  1689  000168                     	ds	2
  1690  00016A                     _MSBBufferIndex:
  1691                           	opt stack 0
  1692  00016A                     	ds	2
  1693  00016C                     _display_content:
  1694                           	opt stack 0
  1695  00016C                     	ds	80
  1696  0001BC                     _hex_file_entry:
  1697                           	opt stack 0
  1698  0001BC                     	ds	23
  1699  0001D3                     _mediaInformation:
  1700                           	opt stack 0
  1701  0001D3                     	ds	5
  1702                           tblptru	equ	0xFF8
  1703                           tblptrh	equ	0xFF7
  1704                           tblptrl	equ	0xFF6
  1705                           tablat	equ	0xFF5
  1706                           postinc0	equ	0xFEE
  1707                           wreg	equ	0xFE8
  1708                           postdec1	equ	0xFE5
  1709                           fsr1h	equ	0xFE2
  1710                           fsr1l	equ	0xFE1
  1711                           
  1712                           	psect	dataBANK1
  1713  0001D8                     __pdataBANK1:
  1714                           	opt stack 0
  1715  0001D8                     _LUN:
  1716                           	opt stack 0
  1717  0001D8                     	ds	20
  1718  0001EC                     i2c_display_send_init_sequence@F6791:
  1719                           	opt stack 0
  1720  0001EC                     	ds	9
  1721                           tblptru	equ	0xFF8
  1722                           tblptrh	equ	0xFF7
  1723                           tblptrl	equ	0xFF6
  1724                           tablat	equ	0xFF5
  1725                           postinc0	equ	0xFEE
  1726                           wreg	equ	0xFE8
  1727                           postdec1	equ	0xFE5
  1728                           fsr1h	equ	0xFE2
  1729                           fsr1l	equ	0xFE1
  1730                           
  1731                           	psect	bssBANK2
  1732  000200                     __pbssBANK2:
  1733                           	opt stack 0
  1734  000200                     _ToSendDataBuffer:
  1735                           	opt stack 0
  1736  000200                     	ds	64
  1737  000240                     _ReceivedDataBuffer:
  1738                           	opt stack 0
  1739  000240                     	ds	64
  1740  000280                     _file_buffer:
  1741                           	opt stack 0
  1742  000280                     	ds	50
  1743                           tblptru	equ	0xFF8
  1744                           tblptrh	equ	0xFF7
  1745                           tblptrl	equ	0xFF6
  1746                           tablat	equ	0xFF5
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec1	equ	0xFE5
  1750                           fsr1h	equ	0xFE2
  1751                           fsr1l	equ	0xFE1
  1752                           
  1753                           	psect	bssBIGRAMlh
  1754  000800                     __pbssBIGRAMlh:
  1755                           	opt stack 0
  1756  000800                     _pageBuffer:
  1757                           	opt stack 0
  1758  000800                     	ds	1024
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           postinc0	equ	0xFEE
  1764                           wreg	equ	0xFE8
  1765                           postdec1	equ	0xFE5
  1766                           fsr1h	equ	0xFE2
  1767                           fsr1l	equ	0xFE1
  1768                           
  1769                           	psect	bssBIGRAMll
  1770  0002B2                     __pbssBIGRAMll:
  1771                           	opt stack 0
  1772  0002B2                     _buffer:
  1773                           	opt stack 0
  1774  0002B2                     	ds	512
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           postinc0	equ	0xFEE
  1780                           wreg	equ	0xFE8
  1781                           postdec1	equ	0xFE5
  1782                           fsr1h	equ	0xFE2
  1783                           fsr1l	equ	0xFE1
  1784                           
  1785                           	psect	cstackBANK0
  1786  0000BE                     __pcstackBANK0:
  1787                           	opt stack 0
  1788  0000BE                     fat_rename_file@file_number:
  1789                           	opt stack 0
  1790  0000BE                     fat_create_file@next_cluster:
  1791                           	opt stack 0
  1792  0000BE                     fat_append_to_file@sector:
  1793                           	opt stack 0
  1794  0000BE                     fat_read_from_file@sector:
  1795                           	opt stack 0
  1796                           
  1797                           ; 2 bytes @ 0x0
  1798  0000BE                     	ds	1
  1799  0000BF                     fat_rename_file@root:
  1800                           	opt stack 0
  1801                           
  1802                           ; 32 bytes @ 0x1
  1803  0000BF                     	ds	1
  1804  0000C0                     fat_read_from_file@file_number:
  1805                           	opt stack 0
  1806  0000C0                     fat_create_file@cluster_count:
  1807                           	opt stack 0
  1808  0000C0                     fat_append_to_file@file_size:
  1809                           	opt stack 0
  1810                           
  1811                           ; 4 bytes @ 0x2
  1812  0000C0                     	ds	1
  1813  0000C1                     fat_read_from_file@root:
  1814                           	opt stack 0
  1815                           
  1816                           ; 32 bytes @ 0x3
  1817  0000C1                     	ds	1
  1818  0000C2                     fat_create_file@root_slot:
  1819                           	opt stack 0
  1820                           
  1821                           ; 1 bytes @ 0x4
  1822  0000C2                     	ds	1
  1823  0000C3                     fat_create_file@number_of_clusters:
  1824                           	opt stack 0
  1825                           
  1826                           ; 2 bytes @ 0x5
  1827  0000C3                     	ds	1
  1828  0000C4                     fat_append_to_file@new_cluster:
  1829                           	opt stack 0
  1830                           
  1831                           ; 2 bytes @ 0x6
  1832  0000C4                     	ds	1
  1833  0000C5                     fat_create_file@cluster:
  1834                           	opt stack 0
  1835                           
  1836                           ; 2 bytes @ 0x7
  1837  0000C5                     	ds	1
  1838  0000C6                     fat_append_to_file@fat_cluster:
  1839                           	opt stack 0
  1840                           
  1841                           ; 2 bytes @ 0x8
  1842  0000C6                     	ds	1
  1843  0000C7                     fat_create_file@root_entry:
  1844                           	opt stack 0
  1845                           
  1846                           ; 32 bytes @ 0x9
  1847  0000C7                     	ds	1
  1848  0000C8                     fat_append_to_file@offset:
  1849                           	opt stack 0
  1850                           
  1851                           ; 2 bytes @ 0xA
  1852  0000C8                     	ds	2
  1853  0000CA                     fat_append_to_file@file_number:
  1854                           	opt stack 0
  1855                           
  1856                           ; 1 bytes @ 0xC
  1857  0000CA                     	ds	1
  1858  0000CB                     fat_append_to_file@length:
  1859                           	opt stack 0
  1860                           
  1861                           ; 2 bytes @ 0xD
  1862  0000CB                     	ds	2
  1863  0000CD                     fat_append_to_file@position:
  1864                           	opt stack 0
  1865                           
  1866                           ; 4 bytes @ 0xF
  1867  0000CD                     	ds	4
  1868  0000D1                     fat_append_to_file@root:
  1869                           	opt stack 0
  1870                           
  1871                           ; 32 bytes @ 0x13
  1872  0000D1                     	ds	14
  1873  0000DF                     fat_rename_file@cntr:
  1874                           	opt stack 0
  1875                           
  1876                           ; 1 bytes @ 0x21
  1877  0000DF                     	ds	2
  1878  0000E1                     fat_read_from_file@cluster:
  1879                           	opt stack 0
  1880                           
  1881                           ; 2 bytes @ 0x23
  1882  0000E1                     	ds	2
  1883  0000E3                     fat_read_from_file@offset:
  1884                           	opt stack 0
  1885                           
  1886                           ; 2 bytes @ 0x25
  1887  0000E3                     	ds	2
  1888  0000E5                     fat_read_from_file@read_length:
  1889                           	opt stack 0
  1890                           
  1891                           ; 2 bytes @ 0x27
  1892  0000E5                     	ds	2
  1893  0000E7                     fat_read_from_file@position:
  1894                           	opt stack 0
  1895                           
  1896                           ; 4 bytes @ 0x29
  1897  0000E7                     	ds	4
  1898  0000EB                     __bootloader_verify_file@rec_counter:
  1899                           	opt stack 0
  1900  0000EB                     __bootloader_program@buffer:
  1901                           	opt stack 0
  1902  0000EB                     __fill_buffer_read_file@file_size:
  1903                           	opt stack 0
  1904                           
  1905                           ; 4 bytes @ 0x2D
  1906  0000EB                     	ds	1
  1907  0000EC                     __bootloader_verify_file@return_value:
  1908                           	opt stack 0
  1909                           
  1910                           ; 4 bytes @ 0x2E
  1911  0000EC                     	ds	1
  1912  0000ED                     __bootloader_program@entry_page:
  1913                           	opt stack 0
  1914                           
  1915                           ; 2 bytes @ 0x2F
  1916  0000ED                     	ds	2
  1917  0000EF                     __bootloader_program@address_within_page:
  1918                           	opt stack 0
  1919  0000EF                     __fill_buffer_read_file@data_length:
  1920                           	opt stack 0
  1921                           
  1922                           ; 4 bytes @ 0x31
  1923  0000EF                     	ds	1
  1924  0000F0                     __bootloader_verify_file@address32:
  1925                           	opt stack 0
  1926                           
  1927                           ; 4 bytes @ 0x32
  1928  0000F0                     	ds	1
  1929  0000F1                     api_parse@inBuffer:
  1930                           	opt stack 0
  1931  0000F1                     __bootloader_program@return_value:
  1932                           	opt stack 0
  1933                           
  1934                           ; 4 bytes @ 0x33
  1935  0000F1                     	ds	2
  1936  0000F3                     api_parse@receivedDataLength:
  1937                           	opt stack 0
  1938  0000F3                     __fill_buffer_read_file@start:
  1939                           	opt stack 0
  1940                           
  1941                           ; 4 bytes @ 0x35
  1942  0000F3                     	ds	2
  1943  0000F5                     __bootloader_program@address32:
  1944                           	opt stack 0
  1945                           
  1946                           ; 4 bytes @ 0x37
  1947  0000F5                     	ds	2
  1948  0000F7                     api_prepare@inBuffer:
  1949                           	opt stack 0
  1950                           
  1951                           ; 2 bytes @ 0x39
  1952  0000F7                     	ds	2
  1953  0000F9                     __bootloader_program@start_from_byte:
  1954                           	opt stack 0
  1955  0000F9                     api_prepare@outBuffer:
  1956                           	opt stack 0
  1957                           
  1958                           ; 2 bytes @ 0x3B
  1959  0000F9                     	ds	1
  1960  0000FA                     __bootloader_program@cntr:
  1961                           	opt stack 0
  1962                           
  1963                           ; 2 bytes @ 0x3C
  1964  0000FA                     	ds	1
  1965  0000FB                     ??_APP_DeviceCustomHIDTasks:
  1966                           
  1967                           ; 1 bytes @ 0x3D
  1968  0000FB                     	ds	1
  1969  0000FC                     __bootloader_program@page_to_write:
  1970                           	opt stack 0
  1971                           
  1972                           ; 2 bytes @ 0x3E
  1973  0000FC                     	ds	3
  1974                           tblptru	equ	0xFF8
  1975                           tblptrh	equ	0xFF7
  1976                           tblptrl	equ	0xFF6
  1977                           tablat	equ	0xFF5
  1978                           postinc0	equ	0xFEE
  1979                           wreg	equ	0xFE8
  1980                           postdec1	equ	0xFE5
  1981                           fsr1h	equ	0xFE2
  1982                           fsr1l	equ	0xFE1
  1983                           
  1984                           	psect	cstackCOMRAM
  1985  000001                     __pcstackCOMRAM:
  1986                           	opt stack 0
  1987  000001                     ??_USBStdGetDscHandler:
  1988  000001                     ??_USBStdGetStatusHandler:
  1989  000001                     ??_system_delay_ms:
  1990  000001                     ??__i2c_wait_idle:
  1991  000001                     ??__display_clear:
  1992  000001                     ?_USBTransferOnePacket:
  1993                           	opt stack 0
  1994  000001                     ?_ExternalFlash_MediaInitialize:
  1995                           	opt stack 0
  1996  000001                     ?_ExternalFlash_SectorSizeRead:
  1997                           	opt stack 0
  1998  000001                     ?_bootloader_get_entries:
  1999                           	opt stack 0
  2000  000001                     ?_bootloader_get_total_entries:
  2001                           	opt stack 0
  2002  000001                     ?_bootloader_get_rec_address:
  2003                           	opt stack 0
  2004  000001                     ?_bootloader_get_flashPagesWritten:
  2005                           	opt stack 0
  2006  000001                     ?_strncmp:
  2007                           	opt stack 0
  2008  000001                     ?_internalFlash_pageFromAddress:
  2009                           	opt stack 0
  2010  000001                     ?_internalFlash_getBuffer:
  2011                           	opt stack 0
  2012  000001                     ?__get_time:
  2013                           	opt stack 0
  2014  000001                     ?__get_date:
  2015                           	opt stack 0
  2016  000001                     ?__sector_from_cluster:
  2017                           	opt stack 0
  2018  000001                     ?_bootloader_get_rec_dataLength:
  2019                           	opt stack 0
  2020  000001                     ?___lwdiv:
  2021                           	opt stack 0
  2022  000001                     ?___lwmod:
  2023                           	opt stack 0
  2024  000001                     ?_ExternalFlash_CapacityRead:
  2025                           	opt stack 0
  2026  000001                     ?_bootloader_get_file_size:
  2027                           	opt stack 0
  2028  000001                     ?_internalFlash_addressFromPage:
  2029                           	opt stack 0
  2030  000001                     ?___lldiv:
  2031                           	opt stack 0
  2032  000001                     ?___llmod:
  2033                           	opt stack 0
  2034  000001                     USBTransferOnePacket@dir:
  2035                           	opt stack 0
  2036  000001                     USBStallEndpoint@dir:
  2037                           	opt stack 0
  2038  000001                     USBConfigureEndpoint@direction:
  2039                           	opt stack 0
  2040  000001                     USBCtrlTrfTxService@byteToSend:
  2041                           	opt stack 0
  2042  000001                     USBCtrlTrfRxService@i:
  2043                           	opt stack 0
  2044  000001                     __i2c_send@dat:
  2045                           	opt stack 0
  2046  000001                     i2c_set_frequency@frequency:
  2047                           	opt stack 0
  2048  000001                     display_get_character@position:
  2049                           	opt stack 0
  2050  000001                     __display_start@cntr:
  2051                           	opt stack 0
  2052  000001                     hexCharToUint8@c:
  2053                           	opt stack 0
  2054  000001                     bootloader_get_rec_data@index:
  2055                           	opt stack 0
  2056  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2057                           	opt stack 0
  2058  000001                     spi_set_configuration@configuration:
  2059                           	opt stack 0
  2060  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2061                           	opt stack 0
  2062  000001                     SYSTEM_Initialize@pll_startup_counter:
  2063                           	opt stack 0
  2064  000001                     ExternalFlash_MediaInitialize@config:
  2065                           	opt stack 0
  2066  000001                     ExternalFlash_SectorSizeRead@config:
  2067                           	opt stack 0
  2068  000001                     ExternalFlash_CapacityRead@config:
  2069                           	opt stack 0
  2070  000001                     ExternalFlash_MediaDetect@config:
  2071                           	opt stack 0
  2072  000001                     ExternalFlash_WriteProtectStateGet@config:
  2073                           	opt stack 0
  2074  000001                     __sector_from_cluster@fat_cluster:
  2075                           	opt stack 0
  2076  000001                     __get_mbr@idx:
  2077                           	opt stack 0
  2078  000001                     __get_fbr@idx:
  2079                           	opt stack 0
  2080  000001                     __get_fat@idx:
  2081                           	opt stack 0
  2082  000001                     __get_root@idx:
  2083                           	opt stack 0
  2084  000001                     __get_data@idx:
  2085                           	opt stack 0
  2086  000001                     internalFlash_addressFromPage@page:
  2087                           	opt stack 0
  2088  000001                     __fill_buffer_get_configuration@outBuffer:
  2089                           	opt stack 0
  2090  000001                     __parse_file_truncate@data:
  2091                           	opt stack 0
  2092  000001                     __parse_file_modify@data:
  2093                           	opt stack 0
  2094  000001                     spi_tx@data:
  2095                           	opt stack 0
  2096  000001                     spi_tx_tx@command:
  2097                           	opt stack 0
  2098  000001                     spi_tx_rx@command:
  2099                           	opt stack 0
  2100  000001                     ___lwdiv@dividend:
  2101                           	opt stack 0
  2102  000001                     ___lwmod@dividend:
  2103                           	opt stack 0
  2104  000001                     memcpy@d1:
  2105                           	opt stack 0
  2106  000001                     memset@p1:
  2107                           	opt stack 0
  2108  000001                     strncmp@s1:
  2109                           	opt stack 0
  2110  000001                     __spi_init@details:
  2111                           	opt stack 0
  2112  000001                     __bootloader_check_address@address:
  2113                           	opt stack 0
  2114  000001                     internalFlash_pageFromAddress@address:
  2115                           	opt stack 0
  2116  000001                     ___lldiv@dividend:
  2117                           	opt stack 0
  2118  000001                     ___llmod@dividend:
  2119                           	opt stack 0
  2120                           
  2121                           ; 4 bytes @ 0x0
  2122  000001                     	ds	1
  2123  000002                     ??_USBConfigureEndpoint:
  2124  000002                     ??_USBStallEndpoint:
  2125  000002                     ??_display_get_character:
  2126  000002                     USBCtrlTrfRxService@byteToRead:
  2127                           	opt stack 0
  2128  000002                     USBCtrlTrfInHandler@lastDTS:
  2129                           	opt stack 0
  2130  000002                     system_delay_ms@ms:
  2131                           	opt stack 0
  2132  000002                     hexCharToUint8@ascii:
  2133                           	opt stack 0
  2134  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2135                           	opt stack 0
  2136  000002                     USBTransferOnePacket@data:
  2137                           	opt stack 0
  2138  000002                     USBStdGetStatusHandler@p:
  2139                           	opt stack 0
  2140                           
  2141                           ; 2 bytes @ 0x1
  2142  000002                     	ds	1
  2143  000003                     ??_MSDComputeDeviceInAndResidue:
  2144  000003                     ??__get_mbr:
  2145  000003                     ??__get_fbr:
  2146  000003                     ??__get_fat:
  2147  000003                     ??__get_root:
  2148  000003                     ?_hexCharsToUint16:
  2149                           	opt stack 0
  2150  000003                     system_delay_ms@cntr:
  2151                           	opt stack 0
  2152  000003                     __display_clear@row:
  2153                           	opt stack 0
  2154  000003                     hexCharsToUint8@c2:
  2155                           	opt stack 0
  2156  000003                     hexCharsToUint16@c2:
  2157                           	opt stack 0
  2158  000003                     SYSTEM_Initialize@pll_startup_counter_2849:
  2159                           	opt stack 0
  2160  000003                     __get_time@time:
  2161                           	opt stack 0
  2162  000003                     __get_date@date:
  2163                           	opt stack 0
  2164  000003                     internalFlash_erasePage@page:
  2165                           	opt stack 0
  2166  000003                     internalFlash_writePage@page:
  2167                           	opt stack 0
  2168  000003                     spi_tx@length:
  2169                           	opt stack 0
  2170  000003                     spi_tx_tx@command_length:
  2171                           	opt stack 0
  2172  000003                     spi_tx_rx@command_length:
  2173                           	opt stack 0
  2174  000003                     ___lwdiv@divisor:
  2175                           	opt stack 0
  2176  000003                     ___lwmod@divisor:
  2177                           	opt stack 0
  2178  000003                     memset@c:
  2179                           	opt stack 0
  2180  000003                     strncmp@s2:
  2181                           	opt stack 0
  2182  000003                     memcpy@s1:
  2183                           	opt stack 0
  2184                           
  2185                           ; 3 bytes @ 0x2
  2186  000003                     	ds	1
  2187  000004                     ??_hexCharsToUint8:
  2188  000004                     USBTransferOnePacket@len:
  2189                           	opt stack 0
  2190  000004                     display_get_character@line:
  2191                           	opt stack 0
  2192  000004                     __display_clear@col:
  2193                           	opt stack 0
  2194  000004                     hexCharsToUint16@c3:
  2195                           	opt stack 0
  2196  000004                     spi_init@configuration:
  2197                           	opt stack 0
  2198                           
  2199                           ; 1 bytes @ 0x3
  2200  000004                     	ds	1
  2201  000005                     ??_USBTransferOnePacket:
  2202  000005                     ??_spi_tx:
  2203  000005                     ??_internalFlash_pageFromAddress:
  2204  000005                     SYSTEM_Initialize@state:
  2205                           	opt stack 0
  2206  000005                     hexCharsToUint8@c1:
  2207                           	opt stack 0
  2208  000005                     hexCharsToUint16@c4:
  2209                           	opt stack 0
  2210  000005                     __bootloader_check_address@dataLength:
  2211                           	opt stack 0
  2212  000005                     ___lwmod@counter:
  2213                           	opt stack 0
  2214  000005                     __update_modified_time@root:
  2215                           	opt stack 0
  2216  000005                     __fill_buffer_get_display@outBuffer:
  2217                           	opt stack 0
  2218  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2219                           	opt stack 0
  2220  000005                     spi_tx_tx@data:
  2221                           	opt stack 0
  2222  000005                     spi_tx_rx@data:
  2223                           	opt stack 0
  2224  000005                     ___lwdiv@quotient:
  2225                           	opt stack 0
  2226  000005                     memset@n:
  2227                           	opt stack 0
  2228  000005                     strncmp@len:
  2229                           	opt stack 0
  2230  000005                     internalFlash_erasePage@address:
  2231                           	opt stack 0
  2232  000005                     internalFlash_writePage@address:
  2233                           	opt stack 0
  2234  000005                     internalFlash_addressFromPage@address:
  2235                           	opt stack 0
  2236  000005                     ___lldiv@divisor:
  2237                           	opt stack 0
  2238  000005                     ___llmod@divisor:
  2239                           	opt stack 0
  2240                           
  2241                           ; 4 bytes @ 0x4
  2242  000005                     	ds	1
  2243  000006                     ??_hexCharsToUint16:
  2244  000006                     ??__bootloader_check_address:
  2245  000006                     USBStallEndpoint@ep:
  2246                           	opt stack 0
  2247  000006                     USBConfigureEndpoint@EPNum:
  2248                           	opt stack 0
  2249  000006                     hexCharsToUint8@retVal:
  2250                           	opt stack 0
  2251  000006                     __i2c_write@data:
  2252                           	opt stack 0
  2253  000006                     __i2c_read@data:
  2254                           	opt stack 0
  2255  000006                     i2c_display_write_fixed@data:
  2256                           	opt stack 0
  2257  000006                     memcpy@n:
  2258                           	opt stack 0
  2259                           
  2260                           ; 2 bytes @ 0x5
  2261  000006                     	ds	1
  2262  000007                     ??_strncmp:
  2263  000007                     ??__fill_buffer_get_bootloader_details:
  2264  000007                     __fill_buffer_get_display@secondHalf:
  2265                           	opt stack 0
  2266  000007                     ___lwdiv@counter:
  2267                           	opt stack 0
  2268  000007                     USBStallEndpoint@p:
  2269                           	opt stack 0
  2270  000007                     USBConfigureEndpoint@handle:
  2271                           	opt stack 0
  2272  000007                     spi_tx_tx@data_length:
  2273                           	opt stack 0
  2274  000007                     spi_tx_rx@data_length:
  2275                           	opt stack 0
  2276  000007                     memset@p:
  2277                           	opt stack 0
  2278                           
  2279                           ; 2 bytes @ 0x6
  2280  000007                     	ds	1
  2281  000008                     ??__fill_buffer_get_display:
  2282  000008                     __i2c_write@length:
  2283                           	opt stack 0
  2284  000008                     __i2c_read@length:
  2285                           	opt stack 0
  2286  000008                     i2c_display_write_fixed@length:
  2287                           	opt stack 0
  2288  000008                     utoa@buf:
  2289                           	opt stack 0
  2290  000008                     memcpy@s:
  2291                           	opt stack 0
  2292                           
  2293                           ; 3 bytes @ 0x7
  2294  000008                     	ds	1
  2295  000009                     ??_spi_tx_rx:
  2296  000009                     ??_spi_tx_tx:
  2297  000009                     ??__i2c_read:
  2298  000009                     ?_internalFlash_addressWithinPage:
  2299                           	opt stack 0
  2300  000009                     USBDeviceInit@i:
  2301                           	opt stack 0
  2302  000009                     USBEnableEndpoint@options:
  2303                           	opt stack 0
  2304  000009                     USBTransferOnePacket@ep:
  2305                           	opt stack 0
  2306  000009                     MSDErrorHandler@ErrorCase:
  2307                           	opt stack 0
  2308  000009                     __i2c_write@slave_address:
  2309                           	opt stack 0
  2310  000009                     i2c_display_write_fixed@pos:
  2311                           	opt stack 0
  2312  000009                     __flash_wakeup@command:
  2313                           	opt stack 0
  2314  000009                     hexCharsToUint16@c1:
  2315                           	opt stack 0
  2316  000009                     ___llmod@counter:
  2317                           	opt stack 0
  2318  000009                     internalFlash_writePage@cntr:
  2319                           	opt stack 0
  2320  000009                     internalFlash_addressWithinPage@address:
  2321                           	opt stack 0
  2322  000009                     ___lldiv@quotient:
  2323                           	opt stack 0
  2324                           
  2325                           ; 4 bytes @ 0x8
  2326  000009                     	ds	1
  2327  00000A                     MSDErrorHandler@OldMSD_State:
  2328                           	opt stack 0
  2329  00000A                     __i2c_write@cntr:
  2330                           	opt stack 0
  2331  00000A                     __bootloader_check_address@worst_case:
  2332                           	opt stack 0
  2333  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2334                           	opt stack 0
  2335  00000A                     USBEnableEndpoint@p:
  2336                           	opt stack 0
  2337  00000A                     USBTransferOnePacket@handle:
  2338                           	opt stack 0
  2339  00000A                     hexCharsToUint16@retVal:
  2340                           	opt stack 0
  2341  00000A                     utoa@val:
  2342                           	opt stack 0
  2343                           
  2344                           ; 2 bytes @ 0x9
  2345  00000A                     	ds	1
  2346  00000B                     __ic2_display_set_address@address:
  2347                           	opt stack 0
  2348  00000B                     i2c_digipot_backlight@level:
  2349                           	opt stack 0
  2350  00000B                     __bootloader_check_address@byte_status:
  2351                           	opt stack 0
  2352  00000B                     internalFlash_writePage@block_cntr:
  2353                           	opt stack 0
  2354  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2355                           	opt stack 0
  2356  00000B                     i2c_digipot_reset_on@data_array:
  2357                           	opt stack 0
  2358  00000B                     i2c_digipot_reset_off@data_array:
  2359                           	opt stack 0
  2360  00000B                     i2c_eeprom_writeByte@address:
  2361                           	opt stack 0
  2362  00000B                     memcpy@d:
  2363                           	opt stack 0
  2364  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2365                           	opt stack 0
  2366  00000B                     i2c_display_send_init_sequence@init_sequence:
  2367                           	opt stack 0
  2368                           
  2369                           ; 9 bytes @ 0xA
  2370  00000B                     	ds	1
  2371  00000C                     ??_USBMSDInit:
  2372  00000C                     ?_parseHexFileEntry:
  2373                           	opt stack 0
  2374  00000C                     USBEnableEndpoint@ep:
  2375                           	opt stack 0
  2376  00000C                     __bootloader_check_address@cntr:
  2377                           	opt stack 0
  2378  00000C                     internalFlash_writePage@byte_cntr:
  2379                           	opt stack 0
  2380  00000C                     _USBCheckMSDRequest$2319:
  2381                           	opt stack 0
  2382  00000C                     MSDTransferTerminated@handle:
  2383                           	opt stack 0
  2384  00000C                     __ic2_display_set_address@data_array:
  2385                           	opt stack 0
  2386  00000C                     i2c_digipot_backlight@data_array:
  2387                           	opt stack 0
  2388  00000C                     parseHexFileEntry@data:
  2389                           	opt stack 0
  2390  00000C                     utoa@base:
  2391                           	opt stack 0
  2392  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2393                           	opt stack 0
  2394                           
  2395                           ; 4 bytes @ 0xB
  2396  00000C                     	ds	1
  2397  00000D                     ?__flash_get_status:
  2398                           	opt stack 0
  2399  00000D                     i2c_eeprom_writeByte@data:
  2400                           	opt stack 0
  2401  00000D                     __fill_buffer_get_display@cntr:
  2402                           	opt stack 0
  2403  00000D                     ___lldiv@counter:
  2404                           	opt stack 0
  2405  00000D                     memcpy@tmp:
  2406                           	opt stack 0
  2407  00000D                     internalFlash_addressWithinPage@page:
  2408                           	opt stack 0
  2409                           
  2410                           ; 2 bytes @ 0xC
  2411  00000D                     	ds	1
  2412  00000E                     ??_i2c_eeprom_writeByte:
  2413  00000E                     i2c_display_cursor@position:
  2414                           	opt stack 0
  2415  00000E                     __fill_buffer_get_display@line:
  2416                           	opt stack 0
  2417  00000E                     _USBCheckMSDRequest$2320:
  2418                           	opt stack 0
  2419  00000E                     _MSDTransferTerminated$2407:
  2420                           	opt stack 0
  2421  00000E                     utoa@v:
  2422                           	opt stack 0
  2423  00000E                     parseHexFileEntry@offset:
  2424                           	opt stack 0
  2425  00000E                     internalFlash_read@address:
  2426                           	opt stack 0
  2427                           
  2428                           ; 4 bytes @ 0xD
  2429  00000E                     	ds	1
  2430  00000F                     ??_internalFlash_addressWithinPage:
  2431  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2432                           	opt stack 0
  2433  00000F                     i2c_display_cursor@line:
  2434                           	opt stack 0
  2435  00000F                     __flash_get_status@command:
  2436                           	opt stack 0
  2437  00000F                     __fill_buffer_get_display@start_line:
  2438                           	opt stack 0
  2439                           
  2440                           ; 1 bytes @ 0xE
  2441  00000F                     	ds	1
  2442  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2443                           	opt stack 0
  2444  000010                     __i2c_read@slave_address:
  2445                           	opt stack 0
  2446  000010                     i2c_display_cursor@address:
  2447                           	opt stack 0
  2448  000010                     __fill_buffer_get_display@position:
  2449                           	opt stack 0
  2450  000010                     utoa@c:
  2451                           	opt stack 0
  2452  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2453                           	opt stack 0
  2454  000010                     __flash_get_status@status:
  2455                           	opt stack 0
  2456  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2457                           	opt stack 0
  2458                           
  2459                           ; 2 bytes @ 0xF
  2460  000010                     	ds	1
  2461  000011                     MSDCheckForErrorCases@DeviceNoData:
  2462                           	opt stack 0
  2463  000011                     __i2c_read@cntr:
  2464                           	opt stack 0
  2465  000011                     i2c_eeprom_writeByte@dat:
  2466                           	opt stack 0
  2467  000011                     itoa@buf:
  2468                           	opt stack 0
  2469                           
  2470                           ; 2 bytes @ 0x10
  2471  000011                     	ds	1
  2472  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2473                           	opt stack 0
  2474  000012                     i2c_eeprom_readByte@address:
  2475                           	opt stack 0
  2476  000012                     __flash_is_busy@status:
  2477                           	opt stack 0
  2478  000012                     parseHexFileEntry@hexEntry:
  2479                           	opt stack 0
  2480  000012                     internalFlash_read@data_length:
  2481                           	opt stack 0
  2482                           
  2483                           ; 2 bytes @ 0x11
  2484  000012                     	ds	1
  2485  000013                     i2c_eeprom_writeByte@slave_address:
  2486                           	opt stack 0
  2487  000013                     itoa@val:
  2488                           	opt stack 0
  2489  000013                     internalFlash_addressWithinPage@page_start_address:
  2490                           	opt stack 0
  2491                           
  2492                           ; 4 bytes @ 0x12
  2493  000013                     	ds	1
  2494  000014                     ??_i2c_eeprom_readByte:
  2495  000014                     ??_parseHexFileEntry:
  2496  000014                     flash_is_busy@result:
  2497                           	opt stack 0
  2498  000014                     __parse_command_short@cmd:
  2499                           	opt stack 0
  2500  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2501                           	opt stack 0
  2502  000014                     __flash_copy_page_to_buffer@page:
  2503                           	opt stack 0
  2504  000014                     __flash_compare_page_to_buffer@page:
  2505                           	opt stack 0
  2506  000014                     __flash_write_to_buffer@start:
  2507                           	opt stack 0
  2508  000014                     __flash_write_page_from_buffer@page:
  2509                           	opt stack 0
  2510  000014                     internalFlash_read@buffer:
  2511                           	opt stack 0
  2512  000014                     __flash_set_page_size@command:
  2513                           	opt stack 0
  2514                           
  2515                           ; 4 bytes @ 0x13
  2516  000014                     	ds	1
  2517  000015                     __flash_partial_read@page:
  2518                           	opt stack 0
  2519  000015                     __fill_buffer_get_status@outBuffer:
  2520                           	opt stack 0
  2521  000015                     itoa@base:
  2522                           	opt stack 0
  2523                           
  2524                           ; 2 bytes @ 0x14
  2525  000015                     	ds	1
  2526  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2527  000016                     __flash_copy_page_to_buffer@buffer:
  2528                           	opt stack 0
  2529  000016                     __flash_compare_page_to_buffer@buffer:
  2530                           	opt stack 0
  2531  000016                     __flash_write_page_from_buffer@buffer:
  2532                           	opt stack 0
  2533  000016                     __flash_write_to_buffer@data:
  2534                           	opt stack 0
  2535  000016                     internalFlash_readPage@page:
  2536                           	opt stack 0
  2537                           
  2538                           ; 2 bytes @ 0x15
  2539  000016                     	ds	1
  2540  000017                     ??__flash_copy_page_to_buffer:
  2541  000017                     ??__flash_compare_page_to_buffer:
  2542  000017                     ??__flash_write_page_from_buffer:
  2543  000017                     i2c_eeprom_readByte@slave_address:
  2544                           	opt stack 0
  2545  000017                     __flash_partial_read@start:
  2546                           	opt stack 0
  2547  000017                     itoa@cp:
  2548                           	opt stack 0
  2549                           
  2550                           ; 2 bytes @ 0x16
  2551  000017                     	ds	1
  2552  000018                     ??_USBStdFeatureReqHandler:
  2553  000018                     USBStdSetCfgHandler@i:
  2554                           	opt stack 0
  2555  000018                     i2c_eeprom_readByte@addr:
  2556                           	opt stack 0
  2557  000018                     __flash_set_page_size@size:
  2558                           	opt stack 0
  2559  000018                     __flash_write_to_buffer@data_length:
  2560                           	opt stack 0
  2561  000018                     internalFlash_readPage@address:
  2562                           	opt stack 0
  2563                           
  2564                           ; 4 bytes @ 0x17
  2565  000018                     	ds	1
  2566  000019                     USBStdFeatureReqHandler@pUEP:
  2567                           	opt stack 0
  2568  000019                     __flash_partial_read@length:
  2569                           	opt stack 0
  2570  000019                     __display_itoa_u16@value:
  2571                           	opt stack 0
  2572                           
  2573                           ; 4 bytes @ 0x18
  2574  000019                     	ds	1
  2575  00001A                     __flash_write_to_buffer@buffer:
  2576                           	opt stack 0
  2577  00001A                     __flash_compare_page_to_buffer@status:
  2578                           	opt stack 0
  2579  00001A                     __flash_copy_page_to_buffer@command:
  2580                           	opt stack 0
  2581  00001A                     __flash_write_page_from_buffer@command:
  2582                           	opt stack 0
  2583                           
  2584                           ; 4 bytes @ 0x19
  2585  00001A                     	ds	1
  2586  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2587                           	opt stack 0
  2588  00001B                     __flash_partial_read@data:
  2589                           	opt stack 0
  2590  00001B                     __flash_write_to_buffer@command:
  2591                           	opt stack 0
  2592                           
  2593                           ; 4 bytes @ 0x1A
  2594  00001B                     	ds	1
  2595  00001C                     parseHexFileEntry@i:
  2596                           	opt stack 0
  2597  00001C                     USBStdFeatureReqHandler@p:
  2598                           	opt stack 0
  2599  00001C                     __flash_compare_page_to_buffer@command:
  2600                           	opt stack 0
  2601                           
  2602                           ; 4 bytes @ 0x1B
  2603  00001C                     	ds	1
  2604  00001D                     ??__flash_partial_read:
  2605  00001D                     __display_itoa_u16@text:
  2606                           	opt stack 0
  2607                           
  2608                           ; 2 bytes @ 0x1C
  2609  00001D                     	ds	1
  2610  00001E                     ??_USBCtrlEPService:
  2611  00001E                     
  2612                           ; 1 bytes @ 0x1D
  2613  00001E                     	ds	1
  2614  00001F                     ??__display_verify:
  2615  00001F                     ??__display_checked:
  2616  00001F                     __display_programming@cntr:
  2617                           	opt stack 0
  2618  00001F                     __display_done@cntr:
  2619                           	opt stack 0
  2620  00001F                     __display_itoa_u32@value:
  2621                           	opt stack 0
  2622                           
  2623                           ; 4 bytes @ 0x1E
  2624  00001F                     	ds	1
  2625  000020                     USBDeviceTasks@i:
  2626                           	opt stack 0
  2627  000020                     flash_page_write@page:
  2628                           	opt stack 0
  2629  000020                     flash_partial_write@page:
  2630                           	opt stack 0
  2631                           
  2632                           ; 2 bytes @ 0x1F
  2633  000020                     	ds	1
  2634  000021                     __display_verify@cntr:
  2635                           	opt stack 0
  2636  000021                     __display_checked@start:
  2637                           	opt stack 0
  2638  000021                     __flash_partial_read@command:
  2639                           	opt stack 0
  2640                           
  2641                           ; 4 bytes @ 0x20
  2642  000021                     	ds	1
  2643  000022                     __display_checked@cntr:
  2644                           	opt stack 0
  2645  000022                     flash_page_write@data:
  2646                           	opt stack 0
  2647  000022                     flash_partial_write@start:
  2648                           	opt stack 0
  2649                           
  2650                           ; 2 bytes @ 0x21
  2651  000022                     	ds	1
  2652  000023                     __display_itoa_u32@text:
  2653                           	opt stack 0
  2654                           
  2655                           ; 2 bytes @ 0x22
  2656  000023                     	ds	1
  2657  000024                     flash_page_write@match:
  2658                           	opt stack 0
  2659  000024                     flash_partial_write@length:
  2660                           	opt stack 0
  2661                           
  2662                           ; 2 bytes @ 0x23
  2663  000024                     	ds	1
  2664  000025                     ??__display_found:
  2665  000025                     __display_failed@cntr:
  2666                           	opt stack 0
  2667  000025                     ExternalFlash_SectorWrite@config:
  2668                           	opt stack 0
  2669  000025                     fat_format@cntr:
  2670                           	opt stack 0
  2671  000025                     __flash_partial_read@address:
  2672                           	opt stack 0
  2673                           
  2674                           ; 4 bytes @ 0x24
  2675  000025                     	ds	1
  2676  000026                     flash_partial_write@data:
  2677                           	opt stack 0
  2678                           
  2679                           ; 2 bytes @ 0x25
  2680  000026                     	ds	1
  2681  000027                     __display_found@start:
  2682                           	opt stack 0
  2683  000027                     ExternalFlash_SectorWrite@sector_addr:
  2684                           	opt stack 0
  2685                           
  2686                           ; 4 bytes @ 0x26
  2687  000027                     	ds	1
  2688  000028                     __display_found@cntr:
  2689                           	opt stack 0
  2690  000028                     flash_partial_write@match:
  2691                           	opt stack 0
  2692                           
  2693                           ; 1 bytes @ 0x27
  2694  000028                     	ds	1
  2695  000029                     ??_display_prepare:
  2696  000029                     ??__delete_root:
  2697  000029                     flash_page_read@page:
  2698                           	opt stack 0
  2699  000029                     flash_partial_read@page:
  2700                           	opt stack 0
  2701  000029                     __write_fat@cluster:
  2702                           	opt stack 0
  2703  000029                     __write_root@data:
  2704                           	opt stack 0
  2705                           
  2706                           ; 2 bytes @ 0x28
  2707  000029                     	ds	1
  2708  00002A                     __delete_root@root_sector:
  2709                           	opt stack 0
  2710                           
  2711                           ; 2 bytes @ 0x29
  2712  00002A                     	ds	1
  2713  00002B                     ??__write_root:
  2714  00002B                     display_prepare@mode:
  2715                           	opt stack 0
  2716  00002B                     flash_page_read@data:
  2717                           	opt stack 0
  2718  00002B                     flash_partial_read@start:
  2719                           	opt stack 0
  2720  00002B                     ExternalFlash_SectorWrite@buffer:
  2721                           	opt stack 0
  2722  00002B                     __write_fat@value:
  2723                           	opt stack 0
  2724                           
  2725                           ; 2 bytes @ 0x2A
  2726  00002B                     	ds	1
  2727  00002C                     __write_root@root_sector:
  2728                           	opt stack 0
  2729  00002C                     __delete_root@offset:
  2730                           	opt stack 0
  2731                           
  2732                           ; 2 bytes @ 0x2B
  2733  00002C                     	ds	1
  2734  00002D                     ??_fat_get_format_status:
  2735  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2736                           	opt stack 0
  2737  00002D                     flash_partial_read@length:
  2738                           	opt stack 0
  2739  00002D                     ExternalFlash_SectorRead@config:
  2740                           	opt stack 0
  2741  00002D                     __write_fat@fat_sector:
  2742                           	opt stack 0
  2743                           
  2744                           ; 2 bytes @ 0x2C
  2745  00002D                     	ds	1
  2746  00002E                     __delete_root@deleted_value:
  2747                           	opt stack 0
  2748  00002E                     ExternalFlash_SectorWrite@page:
  2749                           	opt stack 0
  2750  00002E                     __write_root@offset:
  2751                           	opt stack 0
  2752                           
  2753                           ; 2 bytes @ 0x2D
  2754  00002E                     	ds	1
  2755  00002F                     __delete_root@slot:
  2756                           	opt stack 0
  2757  00002F                     flash_partial_read@data:
  2758                           	opt stack 0
  2759  00002F                     __write_fat@offset:
  2760                           	opt stack 0
  2761  00002F                     fat_get_format_status@cntr:
  2762                           	opt stack 0
  2763  00002F                     ExternalFlash_SectorRead@sector_addr:
  2764                           	opt stack 0
  2765                           
  2766                           ; 4 bytes @ 0x2E
  2767  00002F                     	ds	1
  2768  000030                     ??_MSDWriteHandler:
  2769  000030                     __write_root@slot:
  2770                           	opt stack 0
  2771                           
  2772                           ; 1 bytes @ 0x2F
  2773  000030                     	ds	1
  2774  000031                     ??__root_is_available:
  2775  000031                     ?__get_empty_cluster:
  2776                           	opt stack 0
  2777  000031                     ?_fat_get_empty_clusters:
  2778                           	opt stack 0
  2779  000031                     ?__read_fat:
  2780                           	opt stack 0
  2781  000031                     ?__get_first_cluster:
  2782                           	opt stack 0
  2783  000031                     ?_fat_get_file_size:
  2784                           	opt stack 0
  2785  000031                     __get_empty_cluster@first_cluster:
  2786                           	opt stack 0
  2787  000031                     fat_get_empty_clusters@maximum:
  2788                           	opt stack 0
  2789  000031                     __read_fat@cluster:
  2790                           	opt stack 0
  2791  000031                     fat_find_file@name:
  2792                           	opt stack 0
  2793                           
  2794                           ; 2 bytes @ 0x30
  2795  000031                     	ds	1
  2796  000032                     __root_is_available@root_sector:
  2797                           	opt stack 0
  2798                           
  2799                           ; 2 bytes @ 0x31
  2800  000032                     	ds	1
  2801  000033                     ??__get_first_cluster:
  2802  000033                     ExternalFlash_SectorRead@buffer:
  2803                           	opt stack 0
  2804  000033                     __get_empty_cluster@fat_sector:
  2805                           	opt stack 0
  2806  000033                     fat_get_empty_clusters@fat_sector:
  2807                           	opt stack 0
  2808  000033                     __read_fat@fat_sector:
  2809                           	opt stack 0
  2810  000033                     fat_find_file@extension:
  2811                           	opt stack 0
  2812                           
  2813                           ; 2 bytes @ 0x32
  2814  000033                     	ds	1
  2815  000034                     __root_is_available@offset:
  2816                           	opt stack 0
  2817  000034                     __get_first_cluster@sector:
  2818                           	opt stack 0
  2819                           
  2820                           ; 2 bytes @ 0x33
  2821  000034                     	ds	1
  2822  000035                     ??_fat_get_file_size:
  2823  000035                     ExternalFlash_SectorRead@page:
  2824                           	opt stack 0
  2825  000035                     __get_empty_cluster@offset:
  2826                           	opt stack 0
  2827  000035                     fat_get_empty_clusters@offset:
  2828                           	opt stack 0
  2829  000035                     __read_fat@offset:
  2830                           	opt stack 0
  2831  000035                     fat_find_file@buffer:
  2832                           	opt stack 0
  2833                           
  2834                           ; 11 bytes @ 0x34
  2835  000035                     	ds	1
  2836  000036                     __root_is_available@file_number:
  2837                           	opt stack 0
  2838  000036                     __get_first_cluster@offset:
  2839                           	opt stack 0
  2840  000036                     fat_get_file_size@sector:
  2841                           	opt stack 0
  2842                           
  2843                           ; 2 bytes @ 0x35
  2844  000036                     	ds	1
  2845  000037                     ??_MSDReadHandler:
  2846  000037                     __root_is_available@first_byte:
  2847                           	opt stack 0
  2848  000037                     __get_empty_cluster@value:
  2849                           	opt stack 0
  2850  000037                     fat_get_empty_clusters@value:
  2851                           	opt stack 0
  2852  000037                     __read_fat@value:
  2853                           	opt stack 0
  2854                           
  2855                           ; 2 bytes @ 0x36
  2856  000037                     	ds	1
  2857  000038                     __get_available_root_entry@file_number:
  2858                           	opt stack 0
  2859  000038                     __get_first_cluster@first_cluster:
  2860                           	opt stack 0
  2861  000038                     fat_get_file_information@data:
  2862                           	opt stack 0
  2863  000038                     fat_get_file_size@file_size:
  2864                           	opt stack 0
  2865                           
  2866                           ; 4 bytes @ 0x37
  2867  000038                     	ds	1
  2868  000039                     __get_empty_cluster@cluster:
  2869                           	opt stack 0
  2870  000039                     fat_get_empty_clusters@empty_clusters:
  2871                           	opt stack 0
  2872                           
  2873                           ; 2 bytes @ 0x38
  2874  000039                     	ds	1
  2875  00003A                     ??_fat_get_file_information:
  2876  00003A                     __get_first_cluster@slot:
  2877                           	opt stack 0
  2878                           
  2879                           ; 1 bytes @ 0x39
  2880  00003A                     	ds	1
  2881  00003B                     ??_MSDProcessCommandMediaPresent:
  2882  00003B                     fat_get_empty_clusters@cluster:
  2883                           	opt stack 0
  2884  00003B                     fat_delete_file@next_cluster:
  2885                           	opt stack 0
  2886  00003B                     fat_get_file_information@root_sector:
  2887                           	opt stack 0
  2888                           
  2889                           ; 2 bytes @ 0x3A
  2890  00003B                     	ds	1
  2891  00003C                     fat_get_file_size@offset:
  2892                           	opt stack 0
  2893                           
  2894                           ; 2 bytes @ 0x3B
  2895  00003C                     	ds	1
  2896  00003D                     _MSDProcessCommandMediaPresent$2390:
  2897                           	opt stack 0
  2898  00003D                     fat_delete_file@first_cluster:
  2899                           	opt stack 0
  2900  00003D                     fat_get_file_information@offset:
  2901                           	opt stack 0
  2902                           
  2903                           ; 2 bytes @ 0x3C
  2904  00003D                     	ds	1
  2905  00003E                     fat_get_file_size@file_number:
  2906                           	opt stack 0
  2907                           
  2908                           ; 1 bytes @ 0x3D
  2909  00003E                     	ds	1
  2910  00003F                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  2911                           	opt stack 0
  2912  00003F                     fat_delete_file@file_number:
  2913                           	opt stack 0
  2914  00003F                     fat_get_file_information@file_number:
  2915                           	opt stack 0
  2916                           
  2917                           ; 1 bytes @ 0x3E
  2918  00003F                     	ds	1
  2919  000040                     fat_find_file@slot:
  2920                           	opt stack 0
  2921  000040                     fat_append_to_file@number_of_bytes:
  2922                           	opt stack 0
  2923  000040                     fat_rename_file@name:
  2924                           	opt stack 0
  2925  000040                     __fill_buffer_get_file_details@inBuffer:
  2926                           	opt stack 0
  2927  000040                     __parse_file_delete@data:
  2928                           	opt stack 0
  2929  000040                     MSDProcessCommandMediaPresent@sectorSize:
  2930                           	opt stack 0
  2931  000040                     fat_read_from_file@start_byte:
  2932                           	opt stack 0
  2933                           
  2934                           ; 4 bytes @ 0x3F
  2935  000040                     	ds	1
  2936  000041                     fat_find_file@sector:
  2937                           	opt stack 0
  2938                           
  2939                           ; 2 bytes @ 0x40
  2940  000041                     	ds	1
  2941  000042                     fat_append_to_file@data:
  2942                           	opt stack 0
  2943  000042                     fat_rename_file@extension:
  2944                           	opt stack 0
  2945  000042                     __fill_buffer_get_file_details@outBuffer:
  2946                           	opt stack 0
  2947                           
  2948                           ; 2 bytes @ 0x41
  2949  000042                     	ds	1
  2950  000043                     fat_find_file@offset:
  2951                           	opt stack 0
  2952                           
  2953                           ; 2 bytes @ 0x42
  2954  000043                     	ds	1
  2955  000044                     ??_fat_append_to_file:
  2956  000044                     __fill_buffer_get_file_details@file_number:
  2957                           	opt stack 0
  2958  000044                     __parse_file_rename@data:
  2959                           	opt stack 0
  2960  000044                     MSDProcessCommandMediaPresent@capacity:
  2961                           	opt stack 0
  2962  000044                     fat_read_from_file@length:
  2963                           	opt stack 0
  2964                           
  2965                           ; 4 bytes @ 0x43
  2966  000044                     	ds	1
  2967  000045                     fat_create_file@name:
  2968                           	opt stack 0
  2969  000045                     __fill_buffer_find_file@inBuffer:
  2970                           	opt stack 0
  2971                           
  2972                           ; 2 bytes @ 0x44
  2973  000045                     	ds	1
  2974  000046                     
  2975                           ; 1 bytes @ 0x45
  2976  000046                     	ds	1
  2977  000047                     fat_create_file@extension:
  2978                           	opt stack 0
  2979  000047                     __fill_buffer_find_file@outBuffer:
  2980                           	opt stack 0
  2981                           
  2982                           ; 2 bytes @ 0x46
  2983  000047                     	ds	1
  2984  000048                     MSDProcessCommandMediaPresent@i:
  2985                           	opt stack 0
  2986  000048                     fat_read_from_file@data:
  2987                           	opt stack 0
  2988                           
  2989                           ; 2 bytes @ 0x47
  2990  000048                     	ds	1
  2991  000049                     ??_MSDProcessCommand:
  2992  000049                     ??__fill_buffer_find_file:
  2993  000049                     fat_create_file@size:
  2994                           	opt stack 0
  2995                           
  2996                           ; 4 bytes @ 0x48
  2997  000049                     	ds	1
  2998  00004A                     ??_fat_read_from_file:
  2999                           
  3000                           ; 1 bytes @ 0x49
  3001  00004A                     	ds	2
  3002  00004C                     __parse_file_append@data:
  3003                           	opt stack 0
  3004                           
  3005                           ; 2 bytes @ 0x4B
  3006  00004C                     	ds	1
  3007  00004D                     ??_fat_create_file:
  3008  00004D                     __fill_buffer_find_file@cntr:
  3009                           	opt stack 0
  3010                           
  3011                           ; 1 bytes @ 0x4C
  3012  00004D                     	ds	1
  3013  00004E                     ??__parse_file_append:
  3014  00004E                     ??_MSDTasks:
  3015                           
  3016                           ; 1 bytes @ 0x4D
  3017  00004E                     	ds	1
  3018  00004F                     _MSDTasks$2372:
  3019                           	opt stack 0
  3020                           
  3021                           ; 2 bytes @ 0x4E
  3022  00004F                     	ds	2
  3023  000051                     _MSDTasks$2373:
  3024                           	opt stack 0
  3025  000051                     __parse_file_create@data:
  3026                           	opt stack 0
  3027                           
  3028                           ; 2 bytes @ 0x50
  3029  000051                     	ds	2
  3030  000053                     MSDTasks@i:
  3031                           	opt stack 0
  3032                           
  3033                           ; 1 bytes @ 0x52
  3034  000053                     	ds	1
  3035  000054                     __parse_command_long@data:
  3036                           	opt stack 0
  3037                           
  3038                           ; 2 bytes @ 0x53
  3039  000054                     	ds	2
  3040  000056                     ??__bootloader_verify_file:
  3041  000056                     ??__bootloader_program:
  3042  000056                     __parse_command_long@length:
  3043                           	opt stack 0
  3044  000056                     __fill_buffer_read_file@inBuffer:
  3045                           	opt stack 0
  3046                           
  3047                           ; 2 bytes @ 0x55
  3048  000056                     	ds	1
  3049  000057                     ??_api_parse:
  3050                           
  3051                           ; 1 bytes @ 0x56
  3052  000057                     	ds	1
  3053  000058                     __fill_buffer_read_file@outBuffer:
  3054                           	opt stack 0
  3055                           
  3056                           ; 2 bytes @ 0x57
  3057  000058                     	ds	1
  3058  000059                     api_parse@idx:
  3059                           	opt stack 0
  3060                           
  3061                           ; 1 bytes @ 0x58
  3062  000059                     	ds	1
  3063  00005A                     ??__fill_buffer_read_file:
  3064                           
  3065                           ; 1 bytes @ 0x59
  3066  00005A                     	ds	4
  3067  00005E                     bootloader_run@timeslot:
  3068                           	opt stack 0
  3069  00005E                     api_prepare@command:
  3070                           	opt stack 0
  3071                           
  3072                           ; 1 bytes @ 0x5D
  3073  00005E                     	ds	1
  3074  00005F                     tblptru	equ	0xFF8
  3075                           tblptrh	equ	0xFF7
  3076                           tblptrl	equ	0xFF6
  3077                           tablat	equ	0xFF5
  3078                           postinc0	equ	0xFEE
  3079                           wreg	equ	0xFE8
  3080                           postdec1	equ	0xFE5
  3081                           fsr1h	equ	0xFE2
  3082                           fsr1l	equ	0xFE1
  3083                           
  3084                           ; 1 bytes @ 0x5E
  3085 ;;
  3086 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3087 ;;
  3088 ;; *************** function _main *****************
  3089 ;; Defined at:
  3090 ;;		line 53 in file "main.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels required when called:   14
  3110 ;; This function calls:
  3111 ;;		_APP_DeviceCustomHIDTasks
  3112 ;;		_APP_DeviceMSDTasks
  3113 ;;		_SYSTEM_Initialize
  3114 ;;		_USBDeviceInit
  3115 ;;		_USBDeviceTasks
  3116 ;;		__normal_mode
  3117 ;;		_bootloader_run
  3118 ;;		_display_prepare
  3119 ;;		_display_update
  3120 ;;		_system_init
  3121 ;;		_timer_pseudo_isr
  3122 ;;		_ui_get_status
  3123 ;;		_ui_run
  3124 ;; This function is called by:
  3125 ;;		Startup code after reset
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text0
  3130  004D04                     __ptext0:
  3131                           	opt stack 0
  3132  004D04                     _main:
  3133                           	opt stack 17
  3134                           
  3135                           ;main.c: 57: system_init();
  3136                           
  3137                           ;incstack = 0
  3138  004D04  EC0B  F034         	call	_system_init	;wreg free
  3139                           
  3140                           ;main.c: 60: if(_normal_mode())
  3141  004D08  ECC3  F035         	call	__normal_mode	;wreg free
  3142  004D0C  0900               	iorlw	0
  3143  004D0E  A4D8               	btfss	status,2,c
  3144  004D10  EF00 F048          	goto	36864	; ;# 
  3145                           
  3146                           ;main.c: 66: };main.c: 70: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3147  004D14  0E00               	movlw	0
  3148  004D16  EC76  F037         	call	_SYSTEM_Initialize
  3149                           
  3150                           ;main.c: 71: USBDeviceInit();
  3151  004D1A  ECE8  F01B         	call	_USBDeviceInit	;wreg free
  3152  004D1E                     
  3153                           ;main.c: 77: {;main.c: 81: USBDeviceTasks();
  3154  004D1E  EC84  F01A         	call	_USBDeviceTasks	;wreg free
  3155                           
  3156                           ;main.c: 82: APP_DeviceMSDTasks();
  3157  004D22  EC1D  F03D         	call	_APP_DeviceMSDTasks	;wreg free
  3158                           
  3159                           ;main.c: 83: APP_DeviceCustomHIDTasks();
  3160  004D26  EC35  F02A         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3161                           
  3162                           ;main.c: 87: timer_pseudo_isr();
  3163  004D2A  ECF3  F039         	call	_timer_pseudo_isr	;wreg free
  3164                           
  3165                           ;main.c: 91: if(!os.done)
  3166  004D2E  0100               	movlb	0	; () banked
  3167  004D30  5163               	movf	(_os+3)& (0+255),w,b	;volatile
  3168  004D32  A4D8               	btfss	status,2,c
  3169  004D34  D7F4               	goto	l858
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;main.c: 92: {;main.c: 94: ui_run();
  3173  004D36  ECE7  F024         	call	_ui_run	;wreg free
  3174                           
  3175                           ;main.c: 99: switch(os.timeSlot)
  3176  004D3A  D02A               	goto	l860
  3177  004D3C                     
  3178                           ;main.c: 102: bootloader_run(0);
  3179  004D3C  0E00               	movlw	0
  3180  004D3E  EC42  F038         	call	_bootloader_run
  3181                           
  3182                           ;main.c: 103: break;
  3183  004D42  D040               	goto	l862
  3184  004D44                     
  3185                           ;main.c: 106: bootloader_run(1);
  3186  004D44  0E01               	movlw	1
  3187  004D46  EC42  F038         	call	_bootloader_run
  3188                           
  3189                           ;main.c: 107: break;
  3190  004D4A  D03C               	goto	l862
  3191  004D4C                     
  3192                           ;main.c: 110: bootloader_run(2);
  3193  004D4C  0E02               	movlw	2
  3194  004D4E  EC42  F038         	call	_bootloader_run
  3195                           
  3196                           ;main.c: 111: break;
  3197  004D52  D038               	goto	l862
  3198  004D54                     
  3199                           ;main.c: 114: bootloader_run(3);
  3200  004D54  0E03               	movlw	3
  3201  004D56  EC42  F038         	call	_bootloader_run
  3202                           
  3203                           ;main.c: 115: break;
  3204  004D5A  D034               	goto	l862
  3205  004D5C                     
  3206                           ;main.c: 118: bootloader_run(4);
  3207  004D5C  0E04               	movlw	4
  3208  004D5E  EC42  F038         	call	_bootloader_run
  3209                           
  3210                           ;main.c: 119: break;
  3211  004D62  D030               	goto	l862
  3212  004D64                     
  3213                           ;main.c: 122: bootloader_run(5);
  3214  004D64  0E05               	movlw	5
  3215  004D66  EC42  F038         	call	_bootloader_run
  3216                           
  3217                           ;main.c: 123: break;
  3218  004D6A  D02C               	goto	l862
  3219  004D6C                     
  3220                           ;main.c: 126: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3221  004D6C  ECA5  F03D         	call	_ui_get_status	;wreg free
  3222  004D70  0A05               	xorlw	5
  3223  004D72  A4D8               	btfss	status,2,c
  3224  004D74  D027               	goto	l862
  3225                           
  3226                           ;main.c: 127: {;main.c: 128: display_prepare(os.display_mode);
  3227  004D76  0100               	movlb	0	; () banked
  3228  004D78  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  3229  004D7A  ECB6  F025         	call	_display_prepare
  3230                           
  3231                           ;main.c: 129: };main.c: 130: break;
  3232  004D7E  D022               	goto	l862
  3233  004D80                     
  3234                           ;main.c: 133: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3235  004D80  ECA5  F03D         	call	_ui_get_status	;wreg free
  3236  004D84  0A05               	xorlw	5
  3237  004D86  A4D8               	btfss	status,2,c
  3238  004D88  D01D               	goto	l862
  3239                           
  3240                           ;main.c: 134: {;main.c: 135: display_update();
  3241  004D8A  EC37  F033         	call	_display_update	;wreg free
  3242                           
  3243                           ;main.c: 138: }
  3244                           
  3245                           ;main.c: 136: };main.c: 137: break;
  3246  004D8E  D01A               	goto	l862
  3247  004D90                     l860:
  3248  004D90  0100               	movlb	0	; () banked
  3249  004D92  5162               	movf	(_os+2)& (0+255),w,b	;volatile
  3250                           
  3251                           ; Switch size 1, requested type "space"
  3252                           ; Number of cases is 8, Range of values is 0 to 7
  3253                           ; switch strategies available:
  3254                           ; Name         Instructions Cycles
  3255                           ; simple_byte           25    13 (average)
  3256                           ;	Chosen strategy is simple_byte
  3257  004D94  0A00               	xorlw	0	; case 0
  3258  004D96  B4D8               	btfsc	status,2,c
  3259  004D98  D7D1               	goto	l861
  3260  004D9A  0A01               	xorlw	1	; case 1
  3261  004D9C  B4D8               	btfsc	status,2,c
  3262  004D9E  D7D2               	goto	l863
  3263  004DA0  0A03               	xorlw	3	; case 2
  3264  004DA2  B4D8               	btfsc	status,2,c
  3265  004DA4  D7D3               	goto	l864
  3266  004DA6  0A01               	xorlw	1	; case 3
  3267  004DA8  B4D8               	btfsc	status,2,c
  3268  004DAA  D7D4               	goto	l865
  3269  004DAC  0A07               	xorlw	7	; case 4
  3270  004DAE  B4D8               	btfsc	status,2,c
  3271  004DB0  D7D5               	goto	l866
  3272  004DB2  0A01               	xorlw	1	; case 5
  3273  004DB4  B4D8               	btfsc	status,2,c
  3274  004DB6  D7D6               	goto	l867
  3275  004DB8  0A03               	xorlw	3	; case 6
  3276  004DBA  B4D8               	btfsc	status,2,c
  3277  004DBC  D7D7               	goto	l868
  3278  004DBE  0A01               	xorlw	1	; case 7
  3279  004DC0  B4D8               	btfsc	status,2,c
  3280  004DC2  D7DE               	goto	l870
  3281  004DC4                     l862:
  3282                           
  3283                           ;main.c: 139: os.done = 1;
  3284                           
  3285                           ; BSR set to: 0
  3286  004DC4  0E01               	movlw	1
  3287  004DC6  0100               	movlb	0	; () banked
  3288  004DC8  6F63               	movwf	(_os+3)& (0+255),b	;volatile
  3289                           
  3290                           ; BSR set to: 0
  3291                           
  3292                           ; BSR set to: 0
  3293  004DCA  D7A9               	goto	l858
  3294  004DCC                     __end_of_main:
  3295                           	opt stack 0
  3296                           tblptru	equ	0xFF8
  3297                           tblptrh	equ	0xFF7
  3298                           tblptrl	equ	0xFF6
  3299                           tablat	equ	0xFF5
  3300                           postinc0	equ	0xFEE
  3301                           wreg	equ	0xFE8
  3302                           postdec1	equ	0xFE5
  3303                           fsr1h	equ	0xFE2
  3304                           fsr1l	equ	0xFE1
  3305                           status	equ	0xFD8
  3306                           
  3307 ;; *************** function _ui_run *****************
  3308 ;; Defined at:
  3309 ;;		line 87 in file "ui.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;Total ram usage:        0 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; Hardware stack levels required when called:    3
  3330 ;; This function calls:
  3331 ;;		__ui_encoder
  3332 ;;		_i2c_digipot_backlight
  3333 ;;		_i2c_digipot_reset_off
  3334 ;;		_i2c_digipot_reset_on
  3335 ;;		_i2c_display_send_init_sequence
  3336 ;;		_system_encoder_enable
  3337 ;;		_ui_init
  3338 ;; This function is called by:
  3339 ;;		_main
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text1
  3344  0049CE                     __ptext1:
  3345                           	opt stack 0
  3346  0049CE                     _ui_run:
  3347                           	opt stack 27
  3348                           
  3349                           ;ui.c: 89: switch(userInterfaceStatus)
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;incstack = 0
  3353  0049CE  D052               	goto	l1240
  3354  0049D0                     
  3355                           ;ui.c: 93: if (os.buttonCount!=0)
  3356  0049D0  0100               	movlb	0	; () banked
  3357  0049D2  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3358  0049D4  B4D8               	btfsc	status,2,c
  3359  0049D6  0012               	return	
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;ui.c: 94: {;ui.c: 95: ui_init();
  3363  0049D8  EC14  F03D         	call	_ui_init	;wreg free
  3364                           
  3365                           ;ui.c: 96: os.buttonCount = 0;
  3366  0049DC  0E00               	movlw	0
  3367  0049DE  0100               	movlb	0	; () banked
  3368  0049E0  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;ui.c: 97: };ui.c: 98: break;
  3372  0049E2  0012               	return	
  3373  0049E4                     l1244:
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;ui.c: 102: LATDbits.LD0 = 0;
  3377  0049E4  908C               	bcf	3980,0,c	;volatile
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;ui.c: 104: system_ui_inactive_count = 0;
  3381  0049E6  0E00               	movlw	0
  3382  0049E8  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3383  0049EA  0E00               	movlw	0
  3384  0049EC  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3385                           
  3386                           ;ui.c: 105: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3387  0049EE  0E02               	movlw	2
  3388  0049F0  6FA0               	movwf	_userInterfaceStatus& (0+255),b
  3389                           
  3390                           ;ui.c: 106: break;
  3391  0049F2  0012               	return	
  3392  0049F4                     
  3393                           ; BSR set to: 0
  3394                           ;ui.c: 110: i2c_digipot_reset_on();
  3395                           
  3396                           ; BSR set to: 0
  3397  0049F4  EC50  F03C         	call	_i2c_digipot_reset_on	;wreg free
  3398                           
  3399                           ;ui.c: 112: system_ui_inactive_count = 0;
  3400  0049F8  0E00               	movlw	0
  3401  0049FA  0100               	movlb	0	; () banked
  3402  0049FC  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3403  0049FE  0E00               	movlw	0
  3404  004A00  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;ui.c: 113: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3408  004A02  0E03               	movlw	3
  3409  004A04  6FA0               	movwf	_userInterfaceStatus& (0+255),b
  3410                           
  3411                           ;ui.c: 114: break;
  3412  004A06  0012               	return	
  3413  004A08                     
  3414                           ; BSR set to: 0
  3415                           ;ui.c: 117: ++system_ui_inactive_count;
  3416                           
  3417                           ; BSR set to: 0
  3418  004A08  4B86               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3419  004A0A  2B87               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;ui.c: 119: if (system_ui_inactive_count>3)
  3423  004A0C  5187               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3424  004A0E  E104               	bnz	u11380
  3425  004A10  0E04               	movlw	4
  3426  004A12  5D86               	subwf	_system_ui_inactive_count& (0+255),w,b
  3427  004A14  A0D8               	btfss	status,0,c
  3428  004A16  0012               	return	
  3429  004A18                     u11380:
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;ui.c: 120: {;ui.c: 121: i2c_digipot_reset_off();
  3433  004A18  EC61  F03C         	call	_i2c_digipot_reset_off	;wreg free
  3434                           
  3435                           ;ui.c: 122: system_ui_inactive_count = 0;
  3436  004A1C  0E00               	movlw	0
  3437  004A1E  0100               	movlb	0	; () banked
  3438  004A20  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3439  004A22  0E00               	movlw	0
  3440  004A24  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;ui.c: 123: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3444  004A26  0E04               	movlw	4
  3445  004A28  6FA0               	movwf	_userInterfaceStatus& (0+255),b
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;ui.c: 124: };ui.c: 125: break;
  3449  004A2A  0012               	return	
  3450  004A2C                     
  3451                           ; BSR set to: 0
  3452                           ;ui.c: 129: i2c_display_send_init_sequence();
  3453                           
  3454                           ; BSR set to: 0
  3455  004A2C  EC5F  F03B         	call	_i2c_display_send_init_sequence	;wreg free
  3456                           
  3457                           ;ui.c: 131: i2c_digipot_backlight(150);
  3458  004A30  0E96               	movlw	150
  3459  004A32  ECF4  F03B         	call	_i2c_digipot_backlight
  3460                           
  3461                           ;ui.c: 133: system_encoder_enable();
  3462  004A36  EC38  F03D         	call	_system_encoder_enable	;wreg free
  3463                           
  3464                           ;ui.c: 135: system_ui_inactive_count = 0;
  3465  004A3A  0E00               	movlw	0
  3466  004A3C  0100               	movlb	0	; () banked
  3467  004A3E  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3468  004A40  0E00               	movlw	0
  3469  004A42  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3473  004A44  0E05               	movlw	5
  3474  004A46  6FA0               	movwf	_userInterfaceStatus& (0+255),b
  3475                           
  3476                           ;ui.c: 137: break;
  3477  004A48  0012               	return	
  3478  004A4A                     
  3479                           ; BSR set to: 0
  3480                           ;ui.c: 140: if (os.encoderCount==0 && os.buttonCount==0)
  3481                           
  3482                           ; BSR set to: 0
  3483  004A4A  5160               	movf	_os& (0+255),w,b	;volatile
  3484  004A4C  A4D8               	btfss	status,2,c
  3485  004A4E  D00B               	goto	l1250
  3486                           
  3487                           ; BSR set to: 0
  3488  004A50  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3489  004A52  A4D8               	btfss	status,2,c
  3490  004A54  D008               	goto	l1250
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;ui.c: 141: {;ui.c: 142: if(system_ui_inactive_count<0xFFFF)
  3494  004A56  2986               	incf	_system_ui_inactive_count& (0+255),w,b
  3495  004A58  E103               	bnz	u11410
  3496  004A5A  2987               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3497  004A5C  B4D8               	btfsc	status,2,c
  3498  004A5E  0012               	return	
  3499  004A60                     u11410:
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;ui.c: 143: ++system_ui_inactive_count;
  3503  004A60  4B86               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3504  004A62  2B87               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;ui.c: 144: }
  3508  004A64  0012               	return	
  3509  004A66                     l1250:
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;ui.c: 145: else;ui.c: 146: {;ui.c: 147: system_ui_inactive_count = 0;
  3513                           
  3514                           ; BSR set to: 0
  3515  004A66  0E00               	movlw	0
  3516  004A68  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3517  004A6A  0E00               	movlw	0
  3518  004A6C  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;ui.c: 148: _ui_encoder();
  3522  004A6E  EC73  F031         	call	__ui_encoder	;wreg free
  3523                           
  3524                           ;ui.c: 151: }
  3525                           
  3526                           ;ui.c: 149: };ui.c: 150: break;
  3527  004A72  0012               	return	
  3528  004A74                     l1240:
  3529  004A74  0100               	movlb	0	; () banked
  3530  004A76  51A0               	movf	_userInterfaceStatus& (0+255),w,b
  3531                           
  3532                           ; Switch size 1, requested type "space"
  3533                           ; Number of cases is 6, Range of values is 0 to 5
  3534                           ; switch strategies available:
  3535                           ; Name         Instructions Cycles
  3536                           ; simple_byte           19    10 (average)
  3537                           ;	Chosen strategy is simple_byte
  3538  004A78  0A00               	xorlw	0	; case 0
  3539  004A7A  B4D8               	btfsc	status,2,c
  3540  004A7C  D7A9               	goto	l1241
  3541  004A7E  0A01               	xorlw	1	; case 1
  3542  004A80  B4D8               	btfsc	status,2,c
  3543  004A82  D7B0               	goto	l1244
  3544  004A84  0A03               	xorlw	3	; case 2
  3545  004A86  B4D8               	btfsc	status,2,c
  3546  004A88  D7B5               	goto	l1245
  3547  004A8A  0A01               	xorlw	1	; case 3
  3548  004A8C  B4D8               	btfsc	status,2,c
  3549  004A8E  D7BC               	goto	l1246
  3550  004A90  0A07               	xorlw	7	; case 4
  3551  004A92  B4D8               	btfsc	status,2,c
  3552  004A94  D7CB               	goto	l1248
  3553  004A96  0A01               	xorlw	1	; case 5
  3554  004A98  A4D8               	btfss	status,2,c
  3555  004A9A  0012               	return	
  3556  004A9C  D7D6               	goto	l1249
  3557  004A9E                     __end_of_ui_run:
  3558                           	opt stack 0
  3559                           tblptru	equ	0xFF8
  3560                           tblptrh	equ	0xFF7
  3561                           tblptrl	equ	0xFF6
  3562                           tablat	equ	0xFF5
  3563                           postinc0	equ	0xFEE
  3564                           wreg	equ	0xFE8
  3565                           postdec1	equ	0xFE5
  3566                           fsr1h	equ	0xFE2
  3567                           fsr1l	equ	0xFE1
  3568                           status	equ	0xFD8
  3569                           
  3570 ;; *************** function _system_encoder_enable *****************
  3571 ;; Defined at:
  3572 ;;		line 94 in file "os.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;Total ram usage:        0 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_ui_run
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text2
  3600  007A70                     __ptext2:
  3601                           	opt stack 0
  3602  007A70                     _system_encoder_enable:
  3603                           	opt stack 29
  3604                           
  3605                           ;os.c: 97: INTCON3bits.INT2IF = 0;
  3606                           
  3607                           ;incstack = 0
  3608  007A70  92F0               	bcf	intcon3,1,c	;volatile
  3609                           
  3610                           ;os.c: 98: INTCON3bits.INT3IF = 0;
  3611  007A72  94F0               	bcf	intcon3,2,c	;volatile
  3612                           
  3613                           ;os.c: 101: os.encoderCount = 0;
  3614  007A74  0E00               	movlw	0
  3615  007A76  0100               	movlb	0	; () banked
  3616  007A78  6F60               	movwf	_os& (0+255),b	;volatile
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;os.c: 104: INTCON3bits.INT2IE = 1;
  3620  007A7A  88F0               	bsf	intcon3,4,c	;volatile
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;os.c: 105: INTCON3bits.INT3IE = 1;
  3624  007A7C  8AF0               	bsf	intcon3,5,c	;volatile
  3625                           
  3626                           ; BSR set to: 0
  3627  007A7E  0012               	return		;funcret
  3628  007A80                     __end_of_system_encoder_enable:
  3629                           	opt stack 0
  3630                           tblptru	equ	0xFF8
  3631                           tblptrh	equ	0xFF7
  3632                           tblptrl	equ	0xFF6
  3633                           tablat	equ	0xFF5
  3634                           intcon3	equ	0xFF0
  3635                           postinc0	equ	0xFEE
  3636                           wreg	equ	0xFE8
  3637                           postdec1	equ	0xFE5
  3638                           fsr1h	equ	0xFE2
  3639                           fsr1l	equ	0xFE1
  3640                           status	equ	0xFD8
  3641                           
  3642 ;; *************** function _i2c_display_send_init_sequence *****************
  3643 ;; Defined at:
  3644 ;;		line 199 in file "i2c.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      void 
  3651 ;; Registers used:
  3652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3659 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3661 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3662 ;;Total ram usage:        9 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    2
  3665 ;; This function calls:
  3666 ;;		__i2c_write
  3667 ;;		_i2c_set_frequency
  3668 ;; This function is called by:
  3669 ;;		_ui_run
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text3
  3674  0076BE                     __ptext3:
  3675                           	opt stack 0
  3676  0076BE                     _i2c_display_send_init_sequence:
  3677                           	opt stack 27
  3678                           
  3679                           ;i2c.c: 201: uint8_t init_sequence[9] = {;i2c.c: 202: 0x3A,;i2c.c: 204: 0b00011110,;i2c.
      +                          c: 205: 0x39,;i2c.c: 207: 0b00001100,;i2c.c: 208: 0x74,;i2c.c: 209: 0b1011100,;i2c.c: 21
      +                          0: 0x6d,;i2c.c: 211: 0x0c,;i2c.c: 212: 0x01;i2c.c: 213: };
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;incstack = 0
  3683  0076BE  EE21  F0EC         	lfsr	2,i2c_display_send_init_sequence@F6791
  3684  0076C2  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  3685  0076C6  0E08               	movlw	8
  3686  0076C8                     u10351:
  3687  0076C8  CFDB FFE3          	movff	plusw2,plusw1
  3688  0076CC  06E8               	decf	wreg,f,c
  3689  0076CE  E2FC               	bc	u10351
  3690                           
  3691                           ;i2c.c: 216: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  3692  0076D0  0E00               	movlw	0
  3693  0076D2  ECA1  F03B         	call	_i2c_set_frequency
  3694                           
  3695                           ;i2c.c: 219: _i2c_write(0b01111000, &init_sequence[0], 9);
  3696  0076D6  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  3697  0076D8  6E06               	movwf	__i2c_write@data,c
  3698  0076DA  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  3699  0076DC  6E07               	movwf	__i2c_write@data+1,c
  3700  0076DE  0E09               	movlw	9
  3701  0076E0  6E08               	movwf	__i2c_write@length,c
  3702  0076E2  0E78               	movlw	120
  3703  0076E4  EC8D  F038         	call	__i2c_write
  3704  0076E8  0012               	return		;funcret
  3705  0076EA                     __end_of_i2c_display_send_init_sequence:
  3706                           	opt stack 0
  3707                           tblptru	equ	0xFF8
  3708                           tblptrh	equ	0xFF7
  3709                           tblptrl	equ	0xFF6
  3710                           tablat	equ	0xFF5
  3711                           intcon3	equ	0xFF0
  3712                           postinc0	equ	0xFEE
  3713                           wreg	equ	0xFE8
  3714                           postdec1	equ	0xFE5
  3715                           plusw1	equ	0xFE3
  3716                           fsr1h	equ	0xFE2
  3717                           fsr1l	equ	0xFE1
  3718                           plusw2	equ	0xFDB
  3719                           status	equ	0xFD8
  3720                           
  3721 ;; *************** function _i2c_digipot_reset_on *****************
  3722 ;; Defined at:
  3723 ;;		line 302 in file "i2c.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  data_array      2   10[COMRAM] unsigned char [2]
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3741 ;;Total ram usage:        2 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    2
  3744 ;; This function calls:
  3745 ;;		__i2c_write
  3746 ;;		_i2c_set_frequency
  3747 ;; This function is called by:
  3748 ;;		_ui_run
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text4
  3753  0078A0                     __ptext4:
  3754                           	opt stack 0
  3755  0078A0                     _i2c_digipot_reset_on:
  3756                           	opt stack 27
  3757                           
  3758                           ;i2c.c: 304: uint8_t data_array[2];;i2c.c: 305: data_array[0] = 0x10 | 0x00;
  3759                           
  3760                           ;incstack = 0
  3761  0078A0  0E10               	movlw	16
  3762  0078A2  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  3763                           
  3764                           ;i2c.c: 307: data_array[1] = 0x00;
  3765  0078A4  0E00               	movlw	0
  3766  0078A6  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  3767                           
  3768                           ;i2c.c: 310: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3769  0078A8  0E02               	movlw	2
  3770  0078AA  ECA1  F03B         	call	_i2c_set_frequency
  3771                           
  3772                           ;i2c.c: 312: _i2c_write(0b01011100, &data_array[0], 2);
  3773  0078AE  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  3774  0078B0  6E06               	movwf	__i2c_write@data,c
  3775  0078B2  0E00               	movlw	high i2c_digipot_reset_on@data_array
  3776  0078B4  6E07               	movwf	__i2c_write@data+1,c
  3777  0078B6  0E02               	movlw	2
  3778  0078B8  6E08               	movwf	__i2c_write@length,c
  3779  0078BA  0E5C               	movlw	92
  3780  0078BC  EC8D  F038         	call	__i2c_write
  3781  0078C0  0012               	return		;funcret
  3782  0078C2                     __end_of_i2c_digipot_reset_on:
  3783                           	opt stack 0
  3784                           tblptru	equ	0xFF8
  3785                           tblptrh	equ	0xFF7
  3786                           tblptrl	equ	0xFF6
  3787                           tablat	equ	0xFF5
  3788                           intcon3	equ	0xFF0
  3789                           postinc0	equ	0xFEE
  3790                           wreg	equ	0xFE8
  3791                           postdec1	equ	0xFE5
  3792                           plusw1	equ	0xFE3
  3793                           fsr1h	equ	0xFE2
  3794                           fsr1l	equ	0xFE1
  3795                           plusw2	equ	0xFDB
  3796                           status	equ	0xFD8
  3797                           
  3798 ;; *************** function _i2c_digipot_reset_off *****************
  3799 ;; Defined at:
  3800 ;;		line 315 in file "i2c.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;		None
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  data_array      2   10[COMRAM] unsigned char [2]
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3815 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3817 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3818 ;;Total ram usage:        2 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    2
  3821 ;; This function calls:
  3822 ;;		__i2c_write
  3823 ;;		_i2c_set_frequency
  3824 ;; This function is called by:
  3825 ;;		_ui_run
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text5
  3830  0078C2                     __ptext5:
  3831                           	opt stack 0
  3832  0078C2                     _i2c_digipot_reset_off:
  3833                           	opt stack 27
  3834                           
  3835                           ;i2c.c: 317: uint8_t data_array[2];;i2c.c: 318: data_array[0] = 0x10 | 0x00;
  3836                           
  3837                           ;incstack = 0
  3838  0078C2  0E10               	movlw	16
  3839  0078C4  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  3840                           
  3841                           ;i2c.c: 319: data_array[1] = 0x80;
  3842  0078C6  0E80               	movlw	128
  3843  0078C8  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  3844                           
  3845                           ;i2c.c: 322: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3846  0078CA  0E02               	movlw	2
  3847  0078CC  ECA1  F03B         	call	_i2c_set_frequency
  3848                           
  3849                           ;i2c.c: 324: _i2c_write(0b01011100, &data_array[0], 2);
  3850  0078D0  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  3851  0078D2  6E06               	movwf	__i2c_write@data,c
  3852  0078D4  0E00               	movlw	high i2c_digipot_reset_off@data_array
  3853  0078D6  6E07               	movwf	__i2c_write@data+1,c
  3854  0078D8  0E02               	movlw	2
  3855  0078DA  6E08               	movwf	__i2c_write@length,c
  3856  0078DC  0E5C               	movlw	92
  3857  0078DE  EC8D  F038         	call	__i2c_write
  3858  0078E2  0012               	return		;funcret
  3859  0078E4                     __end_of_i2c_digipot_reset_off:
  3860                           	opt stack 0
  3861                           tblptru	equ	0xFF8
  3862                           tblptrh	equ	0xFF7
  3863                           tblptrl	equ	0xFF6
  3864                           tablat	equ	0xFF5
  3865                           intcon3	equ	0xFF0
  3866                           postinc0	equ	0xFEE
  3867                           wreg	equ	0xFE8
  3868                           postdec1	equ	0xFE5
  3869                           plusw1	equ	0xFE3
  3870                           fsr1h	equ	0xFE2
  3871                           fsr1l	equ	0xFE1
  3872                           plusw2	equ	0xFDB
  3873                           status	equ	0xFD8
  3874                           
  3875 ;; *************** function _i2c_digipot_backlight *****************
  3876 ;; Defined at:
  3877 ;;		line 327 in file "i2c.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  level           1    wreg     unsigned char 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  level           1   10[COMRAM] unsigned char 
  3882 ;;  data_array      2   11[COMRAM] unsigned char [2]
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3893 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3895 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3896 ;;Total ram usage:        3 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    2
  3899 ;; This function calls:
  3900 ;;		__i2c_write
  3901 ;;		_i2c_set_frequency
  3902 ;; This function is called by:
  3903 ;;		_ui_run
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text6
  3908  0077E8                     __ptext6:
  3909                           	opt stack 0
  3910  0077E8                     _i2c_digipot_backlight:
  3911                           	opt stack 27
  3912                           
  3913                           ;incstack = 0
  3914                           ;i2c_digipot_backlight@level stored from wreg
  3915  0077E8  6E0B               	movwf	i2c_digipot_backlight@level,c
  3916                           
  3917                           ;i2c.c: 329: uint8_t data_array[2];;i2c.c: 330: data_array[0] = 0x00 | 0x00;
  3918  0077EA  0E00               	movlw	0
  3919  0077EC  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  3920                           
  3921                           ;i2c.c: 331: data_array[1] = level>>1;
  3922  0077EE  90D8               	bcf	status,0,c
  3923  0077F0  300B               	rrcf	i2c_digipot_backlight@level,w,c
  3924  0077F2  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  3925                           
  3926                           ;i2c.c: 334: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  3927  0077F4  0E02               	movlw	2
  3928  0077F6  ECA1  F03B         	call	_i2c_set_frequency
  3929                           
  3930                           ;i2c.c: 336: _i2c_write(0b01011100, &data_array[0], 2);
  3931  0077FA  0E0C               	movlw	low i2c_digipot_backlight@data_array
  3932  0077FC  6E06               	movwf	__i2c_write@data,c
  3933  0077FE  0E00               	movlw	high i2c_digipot_backlight@data_array
  3934  007800  6E07               	movwf	__i2c_write@data+1,c
  3935  007802  0E02               	movlw	2
  3936  007804  6E08               	movwf	__i2c_write@length,c
  3937  007806  0E5C               	movlw	92
  3938  007808  EC8D  F038         	call	__i2c_write
  3939  00780C  0012               	return		;funcret
  3940  00780E                     __end_of_i2c_digipot_backlight:
  3941                           	opt stack 0
  3942                           tblptru	equ	0xFF8
  3943                           tblptrh	equ	0xFF7
  3944                           tblptrl	equ	0xFF6
  3945                           tablat	equ	0xFF5
  3946                           intcon3	equ	0xFF0
  3947                           postinc0	equ	0xFEE
  3948                           wreg	equ	0xFE8
  3949                           postdec1	equ	0xFE5
  3950                           plusw1	equ	0xFE3
  3951                           fsr1h	equ	0xFE2
  3952                           fsr1l	equ	0xFE1
  3953                           plusw2	equ	0xFDB
  3954                           status	equ	0xFD8
  3955                           
  3956 ;; *************** function __ui_encoder *****************
  3957 ;; Defined at:
  3958 ;;		line 21 in file "ui.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;Total ram usage:        0 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_ui_run
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text7
  3986  0062E6                     __ptext7:
  3987                           	opt stack 0
  3988  0062E6                     __ui_encoder:
  3989                           	opt stack 29
  3990                           
  3991                           ;ui.c: 23: switch(os.display_mode)
  3992                           
  3993                           ;incstack = 0
  3994  0062E6  D021               	goto	l1219
  3995  0062E8                     
  3996                           ;ui.c: 29: if(os.buttonCount>0)
  3997  0062E8  0100               	movlb	0	; () banked
  3998  0062EA  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3999  0062EC  0A80               	xorlw	128
  4000  0062EE  0F7F               	addlw	-129
  4001  0062F0  A0D8               	btfss	status,0,c
  4002  0062F2  0012               	return	
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;ui.c: 30: {;ui.c: 31: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4006  0062F4  0E20               	movlw	32
  4007  0062F6  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4008                           
  4009                           ;ui.c: 32: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4010  0062F8  0E20               	movlw	32
  4011  0062FA  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4012                           
  4013                           ;ui.c: 33: os.buttonCount = 0;
  4014  0062FC  0E00               	movlw	0
  4015  0062FE  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;ui.c: 41: break;
  4019                           
  4020                           ;ui.c: 40: case DISPLAY_MODE_BOOTLOADER_CHECK_FAILED:
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;ui.c: 38: break;
  4024                           
  4025                           ;ui.c: 37: case DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING:
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;ui.c: 34: };ui.c: 35: break;
  4029  006300  0012               	return	
  4030  006302                     
  4031                           ; BSR set to: 0
  4032                           ;ui.c: 44: if(os.buttonCount>0)
  4033                           
  4034                           ; BSR set to: 0
  4035  006302  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4036  006304  0A80               	xorlw	128
  4037  006306  0F7F               	addlw	-129
  4038  006308  A0D8               	btfss	status,0,c
  4039  00630A  0012               	return	
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;ui.c: 45: {;ui.c: 46: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4043  00630C  0E50               	movlw	80
  4044  00630E  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4045                           
  4046                           ;ui.c: 47: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4047  006310  0E50               	movlw	80
  4048  006312  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4049                           
  4050                           ;ui.c: 48: os.buttonCount = 0;
  4051  006314  0E00               	movlw	0
  4052  006316  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;ui.c: 53: break;
  4056                           
  4057                           ;ui.c: 52: case BOOTLOADER_MODE_PROGRAMMING:
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;ui.c: 49: };ui.c: 50: break;
  4061  006318  0012               	return	
  4062  00631A                     
  4063                           ; BSR set to: 0
  4064                           ;ui.c: 56: if(os.buttonCount>0)
  4065                           
  4066                           ; BSR set to: 0
  4067  00631A  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4068  00631C  0A80               	xorlw	128
  4069  00631E  0F7F               	addlw	-129
  4070  006320  A0D8               	btfss	status,0,c
  4071  006322  0012               	return	
  4072                           
  4073                           ; BSR set to: 0
  4074  006324  EF00 F048          	goto	36864	; ;# 
  4075                           
  4076                           ;ui.c: 64: }
  4077                           
  4078                           ;ui.c: 62: };ui.c: 63: break;
  4079  006328  0012               	return	
  4080  00632A                     l1219:
  4081  00632A  0100               	movlb	0	; () banked
  4082  00632C  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  4083                           
  4084                           ; Switch size 1, requested type "space"
  4085                           ; Number of cases is 7, Range of values is 0 to 96
  4086                           ; switch strategies available:
  4087                           ; Name         Instructions Cycles
  4088                           ; simple_byte           22    12 (average)
  4089                           ;	Chosen strategy is simple_byte
  4090  00632E  0A00               	xorlw	0	; case 0
  4091  006330  B4D8               	btfsc	status,2,c
  4092  006332  0012               	return	
  4093  006334  0A10               	xorlw	16	; case 16
  4094  006336  B4D8               	btfsc	status,2,c
  4095  006338  D7D7               	goto	l1222
  4096  00633A  0A30               	xorlw	48	; case 32
  4097  00633C  B4D8               	btfsc	status,2,c
  4098  00633E  0012               	return	
  4099  006340  0A10               	xorlw	16	; case 48
  4100  006342  B4D8               	btfsc	status,2,c
  4101  006344  D7DE               	goto	l1226
  4102  006346  0A70               	xorlw	112	; case 64
  4103  006348  B4D8               	btfsc	status,2,c
  4104  00634A  0012               	return	
  4105  00634C  0A10               	xorlw	16	; case 80
  4106  00634E  B4D8               	btfsc	status,2,c
  4107  006350  0012               	return	
  4108  006352  0A30               	xorlw	48	; case 96
  4109  006354  A4D8               	btfss	status,2,c
  4110  006356  0012               	return	
  4111  006358  D7E0               	goto	l1229
  4112  00635A                     __end_of__ui_encoder:
  4113                           	opt stack 0
  4114                           tblptru	equ	0xFF8
  4115                           tblptrh	equ	0xFF7
  4116                           tblptrl	equ	0xFF6
  4117                           tablat	equ	0xFF5
  4118                           intcon3	equ	0xFF0
  4119                           postinc0	equ	0xFEE
  4120                           wreg	equ	0xFE8
  4121                           postdec1	equ	0xFE5
  4122                           plusw1	equ	0xFE3
  4123                           fsr1h	equ	0xFE2
  4124                           fsr1l	equ	0xFE1
  4125                           plusw2	equ	0xFDB
  4126                           status	equ	0xFD8
  4127                           
  4128 ;; *************** function _timer_pseudo_isr *****************
  4129 ;; Defined at:
  4130 ;;		line 17 in file "os.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;		None
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		wreg, status,2, status,0
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4148 ;;Total ram usage:        0 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; This function calls:
  4151 ;;		Nothing
  4152 ;; This function is called by:
  4153 ;;		_main
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text8
  4158  0073E6                     __ptext8:
  4159                           	opt stack 0
  4160  0073E6                     _timer_pseudo_isr:
  4161                           	opt stack 30
  4162                           
  4163                           ;os.c: 20: if(INTCONbits.T0IF==0)
  4164                           
  4165                           ;incstack = 0
  4166  0073E6  A4F2               	btfss	intcon,2,c	;volatile
  4167  0073E8  0012               	return	
  4168                           
  4169                           ;os.c: 23: };os.c: 27: TMR0H = 0xD1;
  4170                           
  4171                           ;os.c: 21: {;os.c: 22: return;
  4172  0073EA  0ED1               	movlw	209
  4173  0073EC  6ED7               	movwf	4055,c	;volatile
  4174                           
  4175                           ;os.c: 28: TMR0L = 0x20;
  4176  0073EE  0E20               	movlw	32
  4177  0073F0  6ED6               	movwf	4054,c	;volatile
  4178                           
  4179                           ;os.c: 29: ++os.timeSlot;
  4180  0073F2  0100               	movlb	0	; () banked
  4181  0073F4  2B62               	incf	(_os+2)& (0+255),f,b	;volatile
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;os.c: 30: os.timeSlot &= 0b00000111;
  4185  0073F6  0E07               	movlw	7
  4186  0073F8  1762               	andwf	(_os+2)& (0+255),f,b	;volatile
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;os.c: 31: os.done = 0;
  4190  0073FA  0E00               	movlw	0
  4191  0073FC  6F63               	movwf	(_os+3)& (0+255),b	;volatile
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;os.c: 32: INTCONbits.T0IF = 0;
  4195  0073FE  94F2               	bcf	intcon,2,c	;volatile
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;os.c: 35: if(INTCON3bits.INT1IF)
  4199  007400  A0F0               	btfss	intcon3,0,c	;volatile
  4200  007402  D002               	goto	l1039
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;os.c: 36: {;os.c: 37: ++os.buttonCount;
  4204  007404  2B61               	incf	(_os+1)& (0+255),f,b	;volatile
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;os.c: 38: INTCON3bits.INT1IF = 0;
  4208  007406  90F0               	bcf	intcon3,0,c	;volatile
  4209  007408                     l1039:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;os.c: 39: };os.c: 42: if(INTCON3bits.INT2IF)
  4213                           
  4214                           ; BSR set to: 0
  4215  007408  A2F0               	btfss	intcon3,1,c	;volatile
  4216  00740A  D003               	goto	l1040
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;os.c: 43: {;os.c: 44: if(!PORTBbits.RB6)
  4220  00740C  AC81               	btfss	3969,6,c	;volatile
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;os.c: 45: {;os.c: 46: --os.encoderCount;
  4224  00740E  0760               	decf	_os& (0+255),f,b	;volatile
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;os.c: 47: };os.c: 48: INTCON3bits.INT2IF = 0;
  4228                           
  4229                           ; BSR set to: 0
  4230  007410  92F0               	bcf	intcon3,1,c	;volatile
  4231  007412                     l1040:
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;os.c: 49: };os.c: 50: if(INTCON3bits.INT3IF)
  4235                           
  4236                           ; BSR set to: 0
  4237  007412  A4F0               	btfss	intcon3,2,c	;volatile
  4238  007414  0012               	return	
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;os.c: 51: {;os.c: 52: if(!PORTBbits.RB7)
  4242  007416  AE81               	btfss	3969,7,c	;volatile
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;os.c: 53: {;os.c: 54: ++os.encoderCount;
  4246  007418  2B60               	incf	_os& (0+255),f,b	;volatile
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;os.c: 55: };os.c: 56: INTCON3bits.INT3IF = 0;
  4250                           
  4251                           ; BSR set to: 0
  4252  00741A  94F0               	bcf	intcon3,2,c	;volatile
  4253  00741C  0012               	return	
  4254  00741E                     __end_of_timer_pseudo_isr:
  4255                           	opt stack 0
  4256                           tblptru	equ	0xFF8
  4257                           tblptrh	equ	0xFF7
  4258                           tblptrl	equ	0xFF6
  4259                           tablat	equ	0xFF5
  4260                           intcon	equ	0xFF2
  4261                           intcon3	equ	0xFF0
  4262                           postinc0	equ	0xFEE
  4263                           wreg	equ	0xFE8
  4264                           postdec1	equ	0xFE5
  4265                           plusw1	equ	0xFE3
  4266                           fsr1h	equ	0xFE2
  4267                           fsr1l	equ	0xFE1
  4268                           plusw2	equ	0xFDB
  4269                           status	equ	0xFD8
  4270                           
  4271 ;; *************** function _system_init *****************
  4272 ;; Defined at:
  4273 ;;		line 136 in file "os.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4291 ;;Total ram usage:        0 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    9
  4294 ;; This function calls:
  4295 ;;		__system_encoder_init
  4296 ;;		__system_timer0_init
  4297 ;;		_fat_init
  4298 ;;		_flash_init
  4299 ;;		_i2c_init
  4300 ;;		_ui_init
  4301 ;; This function is called by:
  4302 ;;		_main
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text9
  4307  006816                     __ptext9:
  4308                           	opt stack 0
  4309  006816                     _system_init:
  4310                           	opt stack 21
  4311                           
  4312                           ;os.c: 143: TRISCbits.TRISC2 = 0;
  4313                           
  4314                           ;incstack = 0
  4315  006816  9494               	bcf	3988,2,c	;volatile
  4316                           
  4317                           ;os.c: 144: LATCbits.LC2 = 1;
  4318  006818  848B               	bsf	3979,2,c	;volatile
  4319                           
  4320                           ;os.c: 147: TRISDbits.TRISD0 = 0;
  4321  00681A  9095               	bcf	3989,0,c	;volatile
  4322                           
  4323                           ;os.c: 148: LATDbits.LD0 = 0;
  4324  00681C  908C               	bcf	3980,0,c	;volatile
  4325                           
  4326                           ;os.c: 151: TRISDbits.TRISD3 = 0;
  4327  00681E  9695               	bcf	3989,3,c	;volatile
  4328                           
  4329                           ;os.c: 152: LATDbits.LD3 = 0;
  4330  006820  968C               	bcf	3980,3,c	;volatile
  4331                           
  4332                           ;os.c: 155: TRISDbits.TRISD1 = 0;
  4333  006822  9295               	bcf	3989,1,c	;volatile
  4334                           
  4335                           ;os.c: 156: LATDbits.LD1 = 0;
  4336  006824  928C               	bcf	3980,1,c	;volatile
  4337                           
  4338                           ;os.c: 159: TRISBbits.TRISB1 = 0;
  4339  006826  9293               	bcf	3987,1,c	;volatile
  4340                           
  4341                           ;os.c: 160: LATBbits.LB1 = 0;
  4342  006828  928A               	bcf	3978,1,c	;volatile
  4343                           
  4344                           ;os.c: 163: TRISBbits.TRISB2 = 0;
  4345  00682A  9493               	bcf	3987,2,c	;volatile
  4346                           
  4347                           ;os.c: 164: LATBbits.LB2 = 0;
  4348  00682C  948A               	bcf	3978,2,c	;volatile
  4349                           
  4350                           ;os.c: 165: TRISBbits.TRISB3 = 0;
  4351  00682E  9693               	bcf	3987,3,c	;volatile
  4352                           
  4353                           ;os.c: 166: LATBbits.LB3 = 0;
  4354  006830  968A               	bcf	3978,3,c	;volatile
  4355                           
  4356                           ;os.c: 169: TRISDbits.TRISD6 = 1;
  4357  006832  8C95               	bsf	3989,6,c	;volatile
  4358                           
  4359                           ;os.c: 170: TRISDbits.TRISD4 = 0;
  4360  006834  9895               	bcf	3989,4,c	;volatile
  4361                           
  4362                           ;os.c: 171: TRISDbits.TRISD5 = 0;
  4363  006836  9A95               	bcf	3989,5,c	;volatile
  4364                           
  4365                           ;os.c: 172: TRISDbits.TRISD7 = 0;
  4366  006838  9E95               	bcf	3989,7,c	;volatile
  4367                           
  4368                           ;os.c: 173: LATDbits.LD7 = 1;
  4369  00683A  8E8C               	bsf	3980,7,c	;volatile
  4370                           
  4371                           ;os.c: 176: TRISCbits.TRISC7 = 0;
  4372  00683C  9E94               	bcf	3988,7,c	;volatile
  4373                           
  4374                           ;os.c: 177: LATCbits.LC7 = 0;
  4375  00683E  9E8B               	bcf	3979,7,c	;volatile
  4376                           
  4377                           ;os.c: 180: TRISEbits.TRISE2 = 0;
  4378  006840  9496               	bcf	3990,2,c	;volatile
  4379                           
  4380                           ;os.c: 181: LATEbits.LE2 = 1;
  4381  006842  848D               	bsf	3981,2,c	;volatile
  4382                           
  4383                           ;os.c: 182: TRISEbits.TRISE1 = 0;
  4384  006844  9296               	bcf	3990,1,c	;volatile
  4385                           
  4386                           ;os.c: 183: LATEbits.LE1 = 1;
  4387  006846  828D               	bsf	3981,1,c	;volatile
  4388                           
  4389                           ;os.c: 184: TRISEbits.TRISE0 = 0;
  4390  006848  9096               	bcf	3990,0,c	;volatile
  4391                           
  4392                           ;os.c: 185: LATEbits.LE0 = 1;
  4393  00684A  808D               	bsf	3981,0,c	;volatile
  4394                           
  4395                           ;os.c: 186: TRISAbits.TRISA5 = 0;
  4396  00684C  9A92               	bcf	3986,5,c	;volatile
  4397                           
  4398                           ;os.c: 187: LATAbits.LA5 = 1;
  4399  00684E  8A89               	bsf	3977,5,c	;volatile
  4400                           
  4401                           ;os.c: 190: TRISAbits.TRISA0 = 1;
  4402  006850  8092               	bsf	3986,0,c	;volatile
  4403                           
  4404                           ;os.c: 191: ANCON0bits.PCFG0 = 1;
  4405  006852  010F               	movlb	15	; () banked
  4406  006854  8148               	bsf	72,0,b	;volatile
  4407                           
  4408                           ;os.c: 192: TRISBbits.TRISB7 = 1;
  4409  006856  8E93               	bsf	3987,7,c	;volatile
  4410                           
  4411                           ;os.c: 193: TRISBbits.TRISB6 = 1;
  4412  006858  8C93               	bsf	3987,6,c	;volatile
  4413                           
  4414                           ; BSR set to: 15
  4415                           ;os.c: 196: os.bootloader_mode = BOOTLOADER_MODE_START;
  4416  00685A  0E00               	movlw	0
  4417  00685C  0100               	movlb	0	; () banked
  4418  00685E  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4419                           
  4420                           ;os.c: 197: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  4421  006860  0E00               	movlw	0
  4422  006862  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;os.c: 200: i2c_init();
  4426  006864  EC57  F03D         	call	_i2c_init	;wreg free
  4427                           
  4428                           ;os.c: 203: flash_init();
  4429  006868  EC0A  F03D         	call	_flash_init	;wreg free
  4430                           
  4431                           ;os.c: 206: fat_init();
  4432  00686C  EC40  F03D         	call	_fat_init	;wreg free
  4433                           
  4434                           ;os.c: 209: _system_encoder_init();
  4435  006870  ECD6  F039         	call	__system_encoder_init	;wreg free
  4436                           
  4437                           ;os.c: 212: ui_init();
  4438  006874  EC14  F03D         	call	_ui_init	;wreg free
  4439                           
  4440                           ;os.c: 215: _system_timer0_init();
  4441  006878  EC94  F03C         	call	__system_timer0_init	;wreg free
  4442  00687C  0012               	return		;funcret
  4443  00687E                     __end_of_system_init:
  4444                           	opt stack 0
  4445                           tblptru	equ	0xFF8
  4446                           tblptrh	equ	0xFF7
  4447                           tblptrl	equ	0xFF6
  4448                           tablat	equ	0xFF5
  4449                           intcon	equ	0xFF2
  4450                           intcon3	equ	0xFF0
  4451                           postinc0	equ	0xFEE
  4452                           wreg	equ	0xFE8
  4453                           postdec1	equ	0xFE5
  4454                           plusw1	equ	0xFE3
  4455                           fsr1h	equ	0xFE2
  4456                           fsr1l	equ	0xFE1
  4457                           plusw2	equ	0xFDB
  4458                           status	equ	0xFD8
  4459                           
  4460 ;; *************** function _ui_init *****************
  4461 ;; Defined at:
  4462 ;;		line 78 in file "ui.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      void 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4480 ;;Total ram usage:        0 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_system_init
  4486 ;;		_ui_run
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text10
  4491  007A28                     __ptext10:
  4492                           	opt stack 0
  4493  007A28                     _ui_init:
  4494                           	opt stack 29
  4495                           
  4496                           ;ui.c: 80: system_ui_inactive_count = 0;
  4497                           
  4498                           ;incstack = 0
  4499  007A28  0E00               	movlw	0
  4500  007A2A  0100               	movlb	0	; () banked
  4501  007A2C  6F87               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4502  007A2E  0E00               	movlw	0
  4503  007A30  6F86               	movwf	_system_ui_inactive_count& (0+255),b
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;ui.c: 82: LATCbits.LC2 = 1;
  4507  007A32  848B               	bsf	3979,2,c	;volatile
  4508                           
  4509                           ;ui.c: 83: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  4510  007A34  0E01               	movlw	1
  4511  007A36  6FA0               	movwf	_userInterfaceStatus& (0+255),b
  4512                           
  4513                           ; BSR set to: 0
  4514  007A38  0012               	return		;funcret
  4515  007A3A                     __end_of_ui_init:
  4516                           	opt stack 0
  4517                           tblptru	equ	0xFF8
  4518                           tblptrh	equ	0xFF7
  4519                           tblptrl	equ	0xFF6
  4520                           tablat	equ	0xFF5
  4521                           intcon	equ	0xFF2
  4522                           intcon3	equ	0xFF0
  4523                           postinc0	equ	0xFEE
  4524                           wreg	equ	0xFE8
  4525                           postdec1	equ	0xFE5
  4526                           plusw1	equ	0xFE3
  4527                           fsr1h	equ	0xFE2
  4528                           fsr1l	equ	0xFE1
  4529                           plusw2	equ	0xFDB
  4530                           status	equ	0xFD8
  4531                           
  4532 ;; *************** function _i2c_init *****************
  4533 ;; Defined at:
  4534 ;;		line 102 in file "i2c.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4552 ;;Total ram usage:        0 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; Hardware stack levels required when called:    1
  4555 ;; This function calls:
  4556 ;;		__i2c_open_1
  4557 ;;		_i2c_set_frequency
  4558 ;; This function is called by:
  4559 ;;		_system_init
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text11
  4564  007AAE                     __ptext11:
  4565                           	opt stack 0
  4566  007AAE                     _i2c_init:
  4567                           	opt stack 28
  4568                           
  4569                           ;i2c.c: 105: _i2c_open_1();
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;incstack = 0
  4573  007AAE  ECDC  F03C         	call	__i2c_open_1	;wreg free
  4574                           
  4575                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4576  007AB2  0E00               	movlw	0
  4577  007AB4  ECA1  F03B         	call	_i2c_set_frequency
  4578  007AB8  0012               	return		;funcret
  4579  007ABA                     __end_of_i2c_init:
  4580                           	opt stack 0
  4581                           tblptru	equ	0xFF8
  4582                           tblptrh	equ	0xFF7
  4583                           tblptrl	equ	0xFF6
  4584                           tablat	equ	0xFF5
  4585                           intcon	equ	0xFF2
  4586                           intcon3	equ	0xFF0
  4587                           postinc0	equ	0xFEE
  4588                           wreg	equ	0xFE8
  4589                           postdec1	equ	0xFE5
  4590                           plusw1	equ	0xFE3
  4591                           fsr1h	equ	0xFE2
  4592                           fsr1l	equ	0xFE1
  4593                           plusw2	equ	0xFDB
  4594                           status	equ	0xFD8
  4595                           
  4596 ;; *************** function __i2c_open_1 *****************
  4597 ;; Defined at:
  4598 ;;		line 36 in file "i2c.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		wreg, status,2
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; This function calls:
  4619 ;;		Nothing
  4620 ;; This function is called by:
  4621 ;;		_i2c_init
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           	psect	text12
  4626  0079B8                     __ptext12:
  4627                           	opt stack 0
  4628  0079B8                     __i2c_open_1:
  4629                           	opt stack 28
  4630                           
  4631                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  4632                           
  4633                           ;incstack = 0
  4634  0079B8  9EC7               	bcf	4039,7,c	;volatile
  4635                           
  4636                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  4637  0079BA  9CC7               	bcf	4039,6,c	;volatile
  4638                           
  4639                           ;i2c.c: 40: SSP1ADD = 29;
  4640  0079BC  0E1D               	movlw	29
  4641  0079BE  6EC8               	movwf	4040,c	;volatile
  4642                           
  4643                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  4644  0079C0  9EC6               	bcf	4038,7,c	;volatile
  4645                           
  4646                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  4647  0079C2  9CC6               	bcf	4038,6,c	;volatile
  4648                           
  4649                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  4650  0079C4  50C6               	movf	4038,w,c	;volatile
  4651  0079C6  0BF0               	andlw	-16
  4652  0079C8  0908               	iorlw	8
  4653  0079CA  6EC6               	movwf	4038,c	;volatile
  4654                           
  4655                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  4656  0079CC  8AC6               	bsf	4038,5,c	;volatile
  4657  0079CE  0012               	return		;funcret
  4658  0079D0                     __end_of__i2c_open_1:
  4659                           	opt stack 0
  4660                           tblptru	equ	0xFF8
  4661                           tblptrh	equ	0xFF7
  4662                           tblptrl	equ	0xFF6
  4663                           tablat	equ	0xFF5
  4664                           intcon	equ	0xFF2
  4665                           intcon3	equ	0xFF0
  4666                           postinc0	equ	0xFEE
  4667                           wreg	equ	0xFE8
  4668                           postdec1	equ	0xFE5
  4669                           plusw1	equ	0xFE3
  4670                           fsr1h	equ	0xFE2
  4671                           fsr1l	equ	0xFE1
  4672                           plusw2	equ	0xFDB
  4673                           status	equ	0xFD8
  4674                           
  4675 ;; *************** function _flash_init *****************
  4676 ;; Defined at:
  4677 ;;		line 334 in file "flash.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;		None
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4695 ;;Total ram usage:        0 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    5
  4698 ;; This function calls:
  4699 ;;		__flash_set_page_size
  4700 ;;		_spi_init
  4701 ;;		_spi_set_configuration
  4702 ;; This function is called by:
  4703 ;;		_system_init
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           	psect	text13
  4708  007A14                     __ptext13:
  4709                           	opt stack 0
  4710  007A14                     _flash_init:
  4711                           	opt stack 24
  4712                           
  4713                           ;flash.c: 337: spi_init(SPI_CONFIGURATION_INTERNAL);
  4714                           
  4715                           ;incstack = 0
  4716  007A14  0E00               	movlw	0
  4717  007A16  EC9A  F039         	call	_spi_init
  4718                           
  4719                           ;flash.c: 340: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  4720  007A1A  0E00               	movlw	0
  4721  007A1C  EC83  F030         	call	__flash_set_page_size
  4722                           
  4723                           ;flash.c: 343: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  4724  007A20  0E01               	movlw	1
  4725  007A22  ECE8  F03C         	call	_spi_set_configuration
  4726  007A26  0012               	return		;funcret
  4727  007A28                     __end_of_flash_init:
  4728                           	opt stack 0
  4729                           tblptru	equ	0xFF8
  4730                           tblptrh	equ	0xFF7
  4731                           tblptrl	equ	0xFF6
  4732                           tablat	equ	0xFF5
  4733                           intcon	equ	0xFF2
  4734                           intcon3	equ	0xFF0
  4735                           postinc0	equ	0xFEE
  4736                           wreg	equ	0xFE8
  4737                           postdec1	equ	0xFE5
  4738                           plusw1	equ	0xFE3
  4739                           fsr1h	equ	0xFE2
  4740                           fsr1l	equ	0xFE1
  4741                           plusw2	equ	0xFDB
  4742                           status	equ	0xFD8
  4743                           
  4744 ;; *************** function _spi_init *****************
  4745 ;; Defined at:
  4746 ;;		line 107 in file "spi.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  configuratio    1    wreg     enum E6747
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  configuratio    1    3[COMRAM] enum E6747
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  1    wreg      void 
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, status,0, cstack
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4761 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4763 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4764 ;;Total ram usage:        1 bytes
  4765 ;; Hardware stack levels used:    1
  4766 ;; Hardware stack levels required when called:    1
  4767 ;; This function calls:
  4768 ;;		__spi_init
  4769 ;; This function is called by:
  4770 ;;		_flash_init
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text14
  4775  007334                     __ptext14:
  4776                           	opt stack 0
  4777  007334                     _spi_init:
  4778                           	opt stack 27
  4779                           
  4780                           ;incstack = 0
  4781                           ;spi_init@configuration stored from wreg
  4782  007334  6E04               	movwf	spi_init@configuration,c
  4783                           
  4784                           ;spi.c: 109: switch(configuration)
  4785  007336  D012               	goto	l2631
  4786  007338                     
  4787                           ;spi.c: 112: _spi_init(config_internal);
  4788  007338  C15B  F001         	movff	_config_internal,__spi_init@details
  4789  00733C  C15C  F002         	movff	_config_internal+1,__spi_init@details+1
  4790  007340  C15D  F003         	movff	_config_internal+2,__spi_init@details+2
  4791  007344  EC0F  F03A         	call	__spi_init	;wreg free
  4792                           
  4793                           ;spi.c: 113: break;
  4794  007348  D010               	goto	l2633
  4795  00734A                     
  4796                           ;spi.c: 116: _spi_init(config_external);
  4797  00734A  C158  F001         	movff	_config_external,__spi_init@details
  4798  00734E  C159  F002         	movff	_config_external+1,__spi_init@details+1
  4799  007352  C15A  F003         	movff	_config_external+2,__spi_init@details+2
  4800  007356  EC0F  F03A         	call	__spi_init	;wreg free
  4801                           
  4802                           ;spi.c: 118: }
  4803                           
  4804                           ;spi.c: 117: break;
  4805  00735A  D007               	goto	l2633
  4806  00735C                     l2631:
  4807  00735C  5004               	movf	spi_init@configuration,w,c
  4808                           
  4809                           ; Switch size 1, requested type "space"
  4810                           ; Number of cases is 2, Range of values is 0 to 1
  4811                           ; switch strategies available:
  4812                           ; Name         Instructions Cycles
  4813                           ; simple_byte            7     4 (average)
  4814                           ;	Chosen strategy is simple_byte
  4815  00735E  0A00               	xorlw	0	; case 0
  4816  007360  B4D8               	btfsc	status,2,c
  4817  007362  D7EA               	goto	l2632
  4818  007364  0A01               	xorlw	1	; case 1
  4819  007366  B4D8               	btfsc	status,2,c
  4820  007368  D7F0               	goto	l2634
  4821  00736A                     l2633:
  4822                           
  4823                           ;spi.c: 120: active_configuration = configuration;
  4824  00736A  C004  F09C         	movff	spi_init@configuration,_active_configuration
  4825  00736E  0012               	return		;funcret
  4826  007370                     __end_of_spi_init:
  4827                           	opt stack 0
  4828                           tblptru	equ	0xFF8
  4829                           tblptrh	equ	0xFF7
  4830                           tblptrl	equ	0xFF6
  4831                           tablat	equ	0xFF5
  4832                           intcon	equ	0xFF2
  4833                           intcon3	equ	0xFF0
  4834                           postinc0	equ	0xFEE
  4835                           wreg	equ	0xFE8
  4836                           postdec1	equ	0xFE5
  4837                           plusw1	equ	0xFE3
  4838                           fsr1h	equ	0xFE2
  4839                           fsr1l	equ	0xFE1
  4840                           plusw2	equ	0xFDB
  4841                           status	equ	0xFD8
  4842                           
  4843 ;; *************** function __spi_init *****************
  4844 ;; Defined at:
  4845 ;;		line 22 in file "spi.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;  details         3    0[COMRAM] struct .
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4859 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4862 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4863 ;;Total ram usage:        3 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_spi_init
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text15
  4873  00741E                     __ptext15:
  4874                           	opt stack 0
  4875  00741E                     __spi_init:
  4876                           	opt stack 27
  4877                           
  4878                           ;spi.c: 28: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  4879                           
  4880                           ;incstack = 0
  4881  00741E  0E55               	movlw	85
  4882  007420  6EA7               	movwf	4007,c	;volsfr
  4883  007422  0EAA               	movlw	170
  4884  007424  6EA7               	movwf	4007,c	;volsfr
  4885  007426  010E               	movlb	14	; () banked
  4886  007428  91BF               	bcf	191,0,b	;volatile
  4887                           
  4888                           ;spi.c: 29: RPINR21 = 23;
  4889  00742A  0E17               	movlw	23
  4890  00742C  6FFC               	movwf	252,b	;volatile
  4891                           
  4892                           ;spi.c: 30: RPOR21 = 10;
  4893  00742E  0E0A               	movlw	10
  4894  007430  6FD5               	movwf	213,b	;volatile
  4895                           
  4896                           ;spi.c: 32: RPOR22 = 11;
  4897  007432  0E0B               	movlw	11
  4898  007434  6FD6               	movwf	214,b	;volatile
  4899                           
  4900                           ;spi.c: 33: RPINR22 = 22;
  4901  007436  0E16               	movlw	22
  4902  007438  6FFD               	movwf	253,b	;volatile
  4903                           
  4904                           ;spi.c: 35: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  4905  00743A  0E55               	movlw	85
  4906  00743C  6EA7               	movwf	4007,c	;volsfr
  4907  00743E  0EAA               	movlw	170
  4908  007440  6EA7               	movwf	4007,c	;volsfr
  4909                           
  4910                           ; BSR set to: 14
  4911  007442  81BF               	bsf	191,0,b	;volatile
  4912                           
  4913                           ; BSR set to: 14
  4914                           ;spi.c: 38: SSP2STATbits.SMP = 1;
  4915  007444  8E73               	bsf	3955,7,c	;volatile
  4916                           
  4917                           ; BSR set to: 14
  4918                           ;spi.c: 39: SSP2STATbits.CKE = 1;
  4919  007446  8C73               	bsf	3955,6,c	;volatile
  4920                           
  4921                           ; BSR set to: 14
  4922                           ;spi.c: 40: SSP2CON1bits.CKP = 0;
  4923  007448  9872               	bcf	3954,4,c	;volatile
  4924                           
  4925                           ; BSR set to: 14
  4926                           ;spi.c: 41: SSP2CON1bits.SSPM =0b0000;
  4927  00744A  9072               	bcf	3954,0,c	;volatile
  4928  00744C  9272               	bcf	3954,1,c	;volatile
  4929  00744E  9472               	bcf	3954,2,c	;volatile
  4930  007450  9672               	bcf	3954,3,c	;volatile
  4931                           
  4932                           ; BSR set to: 14
  4933                           ;spi.c: 42: SSP2CON1bits.SSPEN = 1;
  4934  007452  8A72               	bsf	3954,5,c	;volatile
  4935                           
  4936                           ; BSR set to: 14
  4937  007454  0012               	return		;funcret
  4938  007456                     __end_of__spi_init:
  4939                           	opt stack 0
  4940                           tblptru	equ	0xFF8
  4941                           tblptrh	equ	0xFF7
  4942                           tblptrl	equ	0xFF6
  4943                           tablat	equ	0xFF5
  4944                           intcon	equ	0xFF2
  4945                           intcon3	equ	0xFF0
  4946                           postinc0	equ	0xFEE
  4947                           wreg	equ	0xFE8
  4948                           postdec1	equ	0xFE5
  4949                           plusw1	equ	0xFE3
  4950                           fsr1h	equ	0xFE2
  4951                           fsr1l	equ	0xFE1
  4952                           plusw2	equ	0xFDB
  4953                           status	equ	0xFD8
  4954                           
  4955 ;; *************** function __flash_set_page_size *****************
  4956 ;; Defined at:
  4957 ;;		line 95 in file "flash.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  size            1    wreg     enum E6870
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  size            1   23[COMRAM] enum E6870
  4962 ;;  command         4   19[COMRAM] unsigned char [4]
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  1    wreg      void 
  4965 ;; Registers used:
  4966 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4975 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4976 ;;Total ram usage:        5 bytes
  4977 ;; Hardware stack levels used:    1
  4978 ;; Hardware stack levels required when called:    4
  4979 ;; This function calls:
  4980 ;;		__flash_is_busy
  4981 ;;		_memcpy
  4982 ;;		_spi_tx
  4983 ;; This function is called by:
  4984 ;;		_flash_init
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text16
  4989  006106                     __ptext16:
  4990                           	opt stack 0
  4991  006106                     __flash_set_page_size:
  4992                           	opt stack 24
  4993                           
  4994                           ; BSR set to: 14
  4995                           ;incstack = 0
  4996                           ;__flash_set_page_size@size stored from wreg
  4997  006106  6E18               	movwf	__flash_set_page_size@size,c
  4998  006108                     
  4999                           ;flash.c: 97: uint8_t command[4];;flash.c: 100: while(_flash_is_busy());
  5000  006108  EC83  F03C         	call	__flash_is_busy	;wreg free
  5001  00610C  0900               	iorlw	0
  5002  00610E  A4D8               	btfss	status,2,c
  5003  006110  D7FB               	goto	l12145
  5004                           
  5005                           ;flash.c: 103: if(size==FLASH_PAGE_SIZE_512)
  5006  006112  5018               	movf	__flash_set_page_size@size,w,c
  5007  006114  A4D8               	btfss	status,2,c
  5008  006116  D013               	goto	l1600
  5009                           
  5010                           ;flash.c: 104: memcpy(command, flash_command_pagesize_512, 4);
  5011  006118  0E14               	movlw	low __flash_set_page_size@command
  5012  00611A  6E01               	movwf	memcpy@d1,c
  5013  00611C  0E00               	movlw	high __flash_set_page_size@command
  5014  00611E  6E02               	movwf	memcpy@d1+1,c
  5015  006120  0EC3               	movlw	low _flash_command_pagesize_512
  5016  006122  6E03               	movwf	memcpy@s1,c
  5017  006124  0E8F               	movlw	high _flash_command_pagesize_512
  5018  006126  6E04               	movwf	memcpy@s1+1,c
  5019  006128  5003               	movf	memcpy@s1,w,c
  5020  00612A  1004               	iorwf	memcpy@s1+1,w,c
  5021  00612C  A4D8               	btfss	status,2,c
  5022  00612E  0E00               	movlw	low (__mediumconst shr (0+16))
  5023  006130  6E05               	movwf	memcpy@s1+2,c
  5024  006132  0E00               	movlw	0
  5025  006134  6E07               	movwf	memcpy@n+1,c
  5026  006136  0E04               	movlw	4
  5027  006138  6E06               	movwf	memcpy@n,c
  5028  00613A  EC72  F034         	call	_memcpy	;wreg free
  5029  00613E                     l1600:
  5030                           
  5031                           ;flash.c: 105: if(size==FLASH_PAGE_SIZE_528)
  5032  00613E  0418               	decf	__flash_set_page_size@size,w,c
  5033  006140  A4D8               	btfss	status,2,c
  5034  006142  D013               	goto	l1601
  5035                           
  5036                           ;flash.c: 106: memcpy(command, flash_command_pagesize_528, 4);
  5037  006144  0E14               	movlw	low __flash_set_page_size@command
  5038  006146  6E01               	movwf	memcpy@d1,c
  5039  006148  0E00               	movlw	high __flash_set_page_size@command
  5040  00614A  6E02               	movwf	memcpy@d1+1,c
  5041  00614C  0EBF               	movlw	low _flash_command_pagesize_528
  5042  00614E  6E03               	movwf	memcpy@s1,c
  5043  006150  0E8F               	movlw	high _flash_command_pagesize_528
  5044  006152  6E04               	movwf	memcpy@s1+1,c
  5045  006154  5003               	movf	memcpy@s1,w,c
  5046  006156  1004               	iorwf	memcpy@s1+1,w,c
  5047  006158  A4D8               	btfss	status,2,c
  5048  00615A  0E00               	movlw	low (__mediumconst shr (0+16))
  5049  00615C  6E05               	movwf	memcpy@s1+2,c
  5050  00615E  0E00               	movlw	0
  5051  006160  6E07               	movwf	memcpy@n+1,c
  5052  006162  0E04               	movlw	4
  5053  006164  6E06               	movwf	memcpy@n,c
  5054  006166  EC72  F034         	call	_memcpy	;wreg free
  5055  00616A                     l1601:
  5056                           
  5057                           ;flash.c: 109: spi_tx(command, 4);
  5058  00616A  0E14               	movlw	low __flash_set_page_size@command
  5059  00616C  6E01               	movwf	spi_tx@data,c
  5060  00616E  0E00               	movlw	high __flash_set_page_size@command
  5061  006170  6E02               	movwf	spi_tx@data+1,c
  5062  006172  0E00               	movlw	0
  5063  006174  6E04               	movwf	spi_tx@length+1,c
  5064  006176  0E04               	movlw	4
  5065  006178  6E03               	movwf	spi_tx@length,c
  5066  00617A  EC95  F035         	call	_spi_tx	;wreg free
  5067  00617E  0012               	return		;funcret
  5068  006180                     __end_of__flash_set_page_size:
  5069                           	opt stack 0
  5070                           tblptru	equ	0xFF8
  5071                           tblptrh	equ	0xFF7
  5072                           tblptrl	equ	0xFF6
  5073                           tablat	equ	0xFF5
  5074                           intcon	equ	0xFF2
  5075                           intcon3	equ	0xFF0
  5076                           postinc0	equ	0xFEE
  5077                           wreg	equ	0xFE8
  5078                           postdec1	equ	0xFE5
  5079                           plusw1	equ	0xFE3
  5080                           fsr1h	equ	0xFE2
  5081                           fsr1l	equ	0xFE1
  5082                           plusw2	equ	0xFDB
  5083                           status	equ	0xFD8
  5084                           
  5085 ;; *************** function _fat_init *****************
  5086 ;; Defined at:
  5087 ;;		line 1011 in file "fat16.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;		None
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      void 
  5094 ;; Registers used:
  5095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5105 ;;Total ram usage:        0 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; Hardware stack levels required when called:    8
  5108 ;; This function calls:
  5109 ;;		_fat_format
  5110 ;;		_fat_get_format_status
  5111 ;; This function is called by:
  5112 ;;		_system_init
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           	psect	text17
  5117  007A80                     __ptext17:
  5118                           	opt stack 0
  5119  007A80                     _fat_init:
  5120                           	opt stack 21
  5121                           
  5122                           ;fat16.c: 1014: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5123                           
  5124                           ;incstack = 0
  5125  007A80  EC88  F02A         	call	_fat_get_format_status	;wreg free
  5126  007A84  0900               	iorlw	0
  5127  007A86  A4D8               	btfss	status,2,c
  5128  007A88  0012               	return	
  5129                           
  5130                           ;fat16.c: 1015: {;fat16.c: 1016: fat_format();
  5131  007A8A  ECA6  F012         	call	_fat_format	;wreg free
  5132  007A8E  0012               	return	
  5133  007A90                     __end_of_fat_init:
  5134                           	opt stack 0
  5135                           tblptru	equ	0xFF8
  5136                           tblptrh	equ	0xFF7
  5137                           tblptrl	equ	0xFF6
  5138                           tablat	equ	0xFF5
  5139                           intcon	equ	0xFF2
  5140                           intcon3	equ	0xFF0
  5141                           postinc0	equ	0xFEE
  5142                           wreg	equ	0xFE8
  5143                           postdec1	equ	0xFE5
  5144                           plusw1	equ	0xFE3
  5145                           fsr1h	equ	0xFE2
  5146                           fsr1l	equ	0xFE1
  5147                           plusw2	equ	0xFDB
  5148                           status	equ	0xFD8
  5149                           
  5150 ;; *************** function _fat_get_format_status *****************
  5151 ;; Defined at:
  5152 ;;		line 923 in file "fat16.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;		None
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  cntr            2   46[COMRAM] unsigned int 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      enum E6856
  5159 ;; Registers used:
  5160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5169 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5170 ;;Total ram usage:        4 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    7
  5173 ;; This function calls:
  5174 ;;		__get_fbr
  5175 ;;		__get_mbr
  5176 ;;		_flash_page_read
  5177 ;; This function is called by:
  5178 ;;		_fat_init
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text18
  5183  005510                     __ptext18:
  5184                           	opt stack 0
  5185  005510                     _fat_get_format_status:
  5186                           	opt stack 21
  5187                           
  5188                           ;fat16.c: 925: uint16_t cntr;;fat16.c: 928: flash_page_read(0, buffer);
  5189                           
  5190                           ;incstack = 0
  5191  005510  0E00               	movlw	0
  5192  005512  6E2A               	movwf	flash_page_read@page+1,c
  5193  005514  0E00               	movlw	0
  5194  005516  6E29               	movwf	flash_page_read@page,c
  5195  005518  0EB2               	movlw	low _buffer
  5196  00551A  6E2B               	movwf	flash_page_read@data,c
  5197  00551C  0E02               	movlw	high _buffer
  5198  00551E  6E2C               	movwf	flash_page_read@data+1,c
  5199  005520  ECCC  F03A         	call	_flash_page_read	;wreg free
  5200                           
  5201                           ;fat16.c: 929: for(cntr=0; cntr<512; ++cntr)
  5202  005524  0E00               	movlw	0
  5203  005526  6E30               	movwf	fat_get_format_status@cntr+1,c
  5204  005528  0E00               	movlw	0
  5205  00552A  6E2F               	movwf	fat_get_format_status@cntr,c
  5206  00552C                     l12173:
  5207  00552C  0E02               	movlw	2
  5208  00552E  5C30               	subwf	fat_get_format_status@cntr+1,w,c
  5209  005530  B0D8               	btfsc	status,0,c
  5210  005532  D016               	goto	u9370
  5211                           
  5212                           ;fat16.c: 930: {;fat16.c: 931: if(buffer[cntr] != _get_mbr(cntr))
  5213  005534  0EB2               	movlw	low _buffer
  5214  005536  242F               	addwf	fat_get_format_status@cntr,w,c
  5215  005538  6ED9               	movwf	fsr2l,c
  5216  00553A  0E02               	movlw	high _buffer
  5217  00553C  2030               	addwfc	fat_get_format_status@cntr+1,w,c
  5218  00553E  6EDA               	movwf	fsr2h,c
  5219  005540  C02F  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  5220  005544  C030  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  5221  005548  EC4F  F025         	call	__get_mbr	;wreg free
  5222  00554C  6E2E               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5223  00554E  50DE               	movf	postinc2,w,c
  5224  005550  182E               	xorwf	??_fat_get_format_status+1,w,c
  5225  005552  B4D8               	btfsc	status,2,c
  5226  005554  D002               	goto	l2020
  5227                           
  5228                           ;fat16.c: 932: {;fat16.c: 933: return DRIVE_NOT_FORMATED;
  5229  005556  0E00               	movlw	0
  5230  005558  0012               	return	
  5231  00555A                     l2020:
  5232  00555A  4A2F               	infsnz	fat_get_format_status@cntr,f,c
  5233  00555C  2A30               	incf	fat_get_format_status@cntr+1,f,c
  5234  00555E  D7E6               	goto	l12173
  5235  005560                     u9370:
  5236                           
  5237                           ;fat16.c: 934: };fat16.c: 935: };fat16.c: 938: flash_page_read(1, buffer);
  5238  005560  0E00               	movlw	0
  5239  005562  6E2A               	movwf	flash_page_read@page+1,c
  5240  005564  0E01               	movlw	1
  5241  005566  6E29               	movwf	flash_page_read@page,c
  5242  005568  0EB2               	movlw	low _buffer
  5243  00556A  6E2B               	movwf	flash_page_read@data,c
  5244  00556C  0E02               	movlw	high _buffer
  5245  00556E  6E2C               	movwf	flash_page_read@data+1,c
  5246  005570  ECCC  F03A         	call	_flash_page_read	;wreg free
  5247                           
  5248                           ;fat16.c: 939: for(cntr=0; cntr<512; ++cntr)
  5249  005574  0E00               	movlw	0
  5250  005576  6E30               	movwf	fat_get_format_status@cntr+1,c
  5251  005578  0E00               	movlw	0
  5252  00557A  6E2F               	movwf	fat_get_format_status@cntr,c
  5253  00557C                     l12191:
  5254  00557C  0E02               	movlw	2
  5255  00557E  5C30               	subwf	fat_get_format_status@cntr+1,w,c
  5256  005580  B0D8               	btfsc	status,0,c
  5257  005582  D016               	goto	u9400
  5258                           
  5259                           ;fat16.c: 940: {;fat16.c: 941: if(buffer[cntr] != _get_fbr(cntr))
  5260  005584  0EB2               	movlw	low _buffer
  5261  005586  242F               	addwf	fat_get_format_status@cntr,w,c
  5262  005588  6ED9               	movwf	fsr2l,c
  5263  00558A  0E02               	movlw	high _buffer
  5264  00558C  2030               	addwfc	fat_get_format_status@cntr+1,w,c
  5265  00558E  6EDA               	movwf	fsr2h,c
  5266  005590  C02F  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  5267  005594  C030  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  5268  005598  EC18  F00D         	call	__get_fbr	;wreg free
  5269  00559C  6E2E               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5270  00559E  50DE               	movf	postinc2,w,c
  5271  0055A0  182E               	xorwf	??_fat_get_format_status+1,w,c
  5272  0055A2  B4D8               	btfsc	status,2,c
  5273  0055A4  D002               	goto	l2024
  5274                           
  5275                           ;fat16.c: 942: {;fat16.c: 943: return DRIVE_NOT_FORMATED;
  5276  0055A6  0E00               	movlw	0
  5277  0055A8  0012               	return	
  5278  0055AA                     l2024:
  5279  0055AA  4A2F               	infsnz	fat_get_format_status@cntr,f,c
  5280  0055AC  2A30               	incf	fat_get_format_status@cntr+1,f,c
  5281  0055AE  D7E6               	goto	l12191
  5282  0055B0                     u9400:
  5283                           
  5284                           ;fat16.c: 944: };fat16.c: 945: };fat16.c: 948: return DRIVE_FORMATED;
  5285  0055B0  0E01               	movlw	1
  5286  0055B2  0012               	return	
  5287  0055B4                     __end_of_fat_get_format_status:
  5288                           	opt stack 0
  5289                           tblptru	equ	0xFF8
  5290                           tblptrh	equ	0xFF7
  5291                           tblptrl	equ	0xFF6
  5292                           tablat	equ	0xFF5
  5293                           intcon	equ	0xFF2
  5294                           intcon3	equ	0xFF0
  5295                           postinc0	equ	0xFEE
  5296                           wreg	equ	0xFE8
  5297                           postdec1	equ	0xFE5
  5298                           plusw1	equ	0xFE3
  5299                           fsr1h	equ	0xFE2
  5300                           fsr1l	equ	0xFE1
  5301                           postinc2	equ	0xFDE
  5302                           plusw2	equ	0xFDB
  5303                           fsr2h	equ	0xFDA
  5304                           fsr2l	equ	0xFD9
  5305                           status	equ	0xFD8
  5306                           
  5307 ;; *************** function _fat_format *****************
  5308 ;; Defined at:
  5309 ;;		line 951 in file "fat16.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;		None
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;  cntr            2   36[COMRAM] unsigned int 
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  1    wreg      void 
  5316 ;; Registers used:
  5317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5327 ;;Total ram usage:        2 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; Hardware stack levels required when called:    6
  5330 ;; This function calls:
  5331 ;;		__get_data
  5332 ;;		__get_fat
  5333 ;;		__get_fbr
  5334 ;;		__get_mbr
  5335 ;;		__get_root
  5336 ;;		_flash_page_write
  5337 ;; This function is called by:
  5338 ;;		_fat_init
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text19
  5343  00254C                     __ptext19:
  5344                           	opt stack 0
  5345  00254C                     _fat_format:
  5346                           	opt stack 22
  5347                           
  5348                           ;fat16.c: 953: uint16_t cntr;;fat16.c: 956: for(cntr=0; cntr<512; ++cntr)
  5349                           
  5350                           ;incstack = 0
  5351  00254C  0E00               	movlw	0
  5352  00254E  6E26               	movwf	fat_format@cntr+1,c
  5353  002550  0E00               	movlw	0
  5354  002552  6E25               	movwf	fat_format@cntr,c
  5355  002554                     l12211:
  5356  002554  0E02               	movlw	2
  5357  002556  5C26               	subwf	fat_format@cntr+1,w,c
  5358  002558  B0D8               	btfsc	status,0,c
  5359  00255A  D010               	goto	u9420
  5360                           
  5361                           ;fat16.c: 957: {;fat16.c: 958: buffer[cntr] = _get_mbr(cntr);
  5362  00255C  0EB2               	movlw	low _buffer
  5363  00255E  2425               	addwf	fat_format@cntr,w,c
  5364  002560  6ED9               	movwf	fsr2l,c
  5365  002562  0E02               	movlw	high _buffer
  5366  002564  2026               	addwfc	fat_format@cntr+1,w,c
  5367  002566  6EDA               	movwf	fsr2h,c
  5368  002568  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
  5369  00256C  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
  5370  002570  EC4F  F025         	call	__get_mbr	;wreg free
  5371  002574  6EDF               	movwf	indf2,c
  5372  002576  4A25               	infsnz	fat_format@cntr,f,c
  5373  002578  2A26               	incf	fat_format@cntr+1,f,c
  5374  00257A  D7EC               	goto	l12211
  5375  00257C                     u9420:
  5376                           
  5377                           ;fat16.c: 959: };fat16.c: 960: flash_page_write(0, buffer);
  5378  00257C  0E00               	movlw	0
  5379  00257E  6E21               	movwf	flash_page_write@page+1,c
  5380  002580  0E00               	movlw	0
  5381  002582  6E20               	movwf	flash_page_write@page,c
  5382  002584  0EB2               	movlw	low _buffer
  5383  002586  6E22               	movwf	flash_page_write@data,c
  5384  002588  0E02               	movlw	high _buffer
  5385  00258A  6E23               	movwf	flash_page_write@data+1,c
  5386  00258C  EC20  F037         	call	_flash_page_write	;wreg free
  5387                           
  5388                           ;fat16.c: 963: for(cntr=0; cntr<512; ++cntr)
  5389  002590  0E00               	movlw	0
  5390  002592  6E26               	movwf	fat_format@cntr+1,c
  5391  002594  0E00               	movlw	0
  5392  002596  6E25               	movwf	fat_format@cntr,c
  5393  002598                     l12225:
  5394  002598  0E02               	movlw	2
  5395  00259A  5C26               	subwf	fat_format@cntr+1,w,c
  5396  00259C  B0D8               	btfsc	status,0,c
  5397  00259E  D010               	goto	u9440
  5398                           
  5399                           ;fat16.c: 964: {;fat16.c: 965: buffer[cntr] = _get_fbr(cntr);
  5400  0025A0  0EB2               	movlw	low _buffer
  5401  0025A2  2425               	addwf	fat_format@cntr,w,c
  5402  0025A4  6ED9               	movwf	fsr2l,c
  5403  0025A6  0E02               	movlw	high _buffer
  5404  0025A8  2026               	addwfc	fat_format@cntr+1,w,c
  5405  0025AA  6EDA               	movwf	fsr2h,c
  5406  0025AC  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
  5407  0025B0  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
  5408  0025B4  EC18  F00D         	call	__get_fbr	;wreg free
  5409  0025B8  6EDF               	movwf	indf2,c
  5410  0025BA  4A25               	infsnz	fat_format@cntr,f,c
  5411  0025BC  2A26               	incf	fat_format@cntr+1,f,c
  5412  0025BE  D7EC               	goto	l12225
  5413  0025C0                     u9440:
  5414                           
  5415                           ;fat16.c: 966: };fat16.c: 967: flash_page_write(1, buffer);
  5416  0025C0  0E00               	movlw	0
  5417  0025C2  6E21               	movwf	flash_page_write@page+1,c
  5418  0025C4  0E01               	movlw	1
  5419  0025C6  6E20               	movwf	flash_page_write@page,c
  5420  0025C8  0EB2               	movlw	low _buffer
  5421  0025CA  6E22               	movwf	flash_page_write@data,c
  5422  0025CC  0E02               	movlw	high _buffer
  5423  0025CE  6E23               	movwf	flash_page_write@data+1,c
  5424  0025D0  EC20  F037         	call	_flash_page_write	;wreg free
  5425                           
  5426                           ;fat16.c: 970: for(cntr=0; cntr<512; ++cntr)
  5427  0025D4  0E00               	movlw	0
  5428  0025D6  6E26               	movwf	fat_format@cntr+1,c
  5429  0025D8  0E00               	movlw	0
  5430  0025DA  6E25               	movwf	fat_format@cntr,c
  5431  0025DC                     l12239:
  5432  0025DC  0E02               	movlw	2
  5433  0025DE  5C26               	subwf	fat_format@cntr+1,w,c
  5434  0025E0  B0D8               	btfsc	status,0,c
  5435  0025E2  D010               	goto	u9460
  5436                           
  5437                           ;fat16.c: 971: {;fat16.c: 972: buffer[cntr] = _get_fat(cntr);
  5438  0025E4  0EB2               	movlw	low _buffer
  5439  0025E6  2425               	addwf	fat_format@cntr,w,c
  5440  0025E8  6ED9               	movwf	fsr2l,c
  5441  0025EA  0E02               	movlw	high _buffer
  5442  0025EC  2026               	addwfc	fat_format@cntr+1,w,c
  5443  0025EE  6EDA               	movwf	fsr2h,c
  5444  0025F0  C025  F001         	movff	fat_format@cntr,__get_fat@idx
  5445  0025F4  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
  5446  0025F8  EC9F  F036         	call	__get_fat	;wreg free
  5447  0025FC  6EDF               	movwf	indf2,c
  5448  0025FE  4A25               	infsnz	fat_format@cntr,f,c
  5449  002600  2A26               	incf	fat_format@cntr+1,f,c
  5450  002602  D7EC               	goto	l12239
  5451  002604                     u9460:
  5452                           
  5453                           ;fat16.c: 973: };fat16.c: 974: flash_page_write(2, buffer);
  5454  002604  0E00               	movlw	0
  5455  002606  6E21               	movwf	flash_page_write@page+1,c
  5456  002608  0E02               	movlw	2
  5457  00260A  6E20               	movwf	flash_page_write@page,c
  5458  00260C  0EB2               	movlw	low _buffer
  5459  00260E  6E22               	movwf	flash_page_write@data,c
  5460  002610  0E02               	movlw	high _buffer
  5461  002612  6E23               	movwf	flash_page_write@data+1,c
  5462  002614  EC20  F037         	call	_flash_page_write	;wreg free
  5463                           
  5464                           ;fat16.c: 977: for(cntr=0; cntr<512; ++cntr)
  5465  002618  0E00               	movlw	0
  5466  00261A  6E26               	movwf	fat_format@cntr+1,c
  5467  00261C  0E00               	movlw	0
  5468  00261E  6E25               	movwf	fat_format@cntr,c
  5469  002620                     l12253:
  5470  002620  0E02               	movlw	2
  5471  002622  5C26               	subwf	fat_format@cntr+1,w,c
  5472  002624  B0D8               	btfsc	status,0,c
  5473  002626  D00B               	goto	u9480
  5474                           
  5475                           ;fat16.c: 978: {;fat16.c: 979: buffer[cntr] = 0x00;
  5476  002628  0EB2               	movlw	low _buffer
  5477  00262A  2425               	addwf	fat_format@cntr,w,c
  5478  00262C  6ED9               	movwf	fsr2l,c
  5479  00262E  0E02               	movlw	high _buffer
  5480  002630  2026               	addwfc	fat_format@cntr+1,w,c
  5481  002632  6EDA               	movwf	fsr2h,c
  5482  002634  0E00               	movlw	0
  5483  002636  6EDF               	movwf	indf2,c
  5484  002638  4A25               	infsnz	fat_format@cntr,f,c
  5485  00263A  2A26               	incf	fat_format@cntr+1,f,c
  5486  00263C  D7F1               	goto	l12253
  5487  00263E                     u9480:
  5488                           
  5489                           ;fat16.c: 980: };fat16.c: 981: for(cntr=3; cntr<=17; ++cntr)
  5490  00263E  0E00               	movlw	0
  5491  002640  6E26               	movwf	fat_format@cntr+1,c
  5492  002642  0E03               	movlw	3
  5493  002644  6E25               	movwf	fat_format@cntr,c
  5494  002646                     l12265:
  5495  002646  5026               	movf	fat_format@cntr+1,w,c
  5496  002648  E111               	bnz	l12275
  5497  00264A  0E12               	movlw	18
  5498  00264C  5C25               	subwf	fat_format@cntr,w,c
  5499  00264E  B0D8               	btfsc	status,0,c
  5500  002650  D00D               	goto	u9500
  5501                           
  5502                           ;fat16.c: 982: {;fat16.c: 983: flash_page_write(cntr, buffer);
  5503  002652  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  5504  002656  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  5505  00265A  0EB2               	movlw	low _buffer
  5506  00265C  6E22               	movwf	flash_page_write@data,c
  5507  00265E  0E02               	movlw	high _buffer
  5508  002660  6E23               	movwf	flash_page_write@data+1,c
  5509  002662  EC20  F037         	call	_flash_page_write	;wreg free
  5510  002666  4A25               	infsnz	fat_format@cntr,f,c
  5511  002668  2A26               	incf	fat_format@cntr+1,f,c
  5512  00266A  D7ED               	goto	l12265
  5513  00266C                     u9500:
  5514  00266C                     l12275:
  5515                           
  5516                           ;fat16.c: 984: };fat16.c: 987: for(cntr=0; cntr<512; ++cntr)
  5517  00266C  0E00               	movlw	0
  5518  00266E  6E26               	movwf	fat_format@cntr+1,c
  5519  002670  0E00               	movlw	0
  5520  002672  6E25               	movwf	fat_format@cntr,c
  5521  002674                     l12277:
  5522  002674  0E02               	movlw	2
  5523  002676  5C26               	subwf	fat_format@cntr+1,w,c
  5524  002678  B0D8               	btfsc	status,0,c
  5525  00267A  D010               	goto	u9520
  5526                           
  5527                           ;fat16.c: 988: {;fat16.c: 989: buffer[cntr] = _get_root(cntr);
  5528  00267C  0EB2               	movlw	low _buffer
  5529  00267E  2425               	addwf	fat_format@cntr,w,c
  5530  002680  6ED9               	movwf	fsr2l,c
  5531  002682  0E02               	movlw	high _buffer
  5532  002684  2026               	addwfc	fat_format@cntr+1,w,c
  5533  002686  6EDA               	movwf	fsr2h,c
  5534  002688  C025  F001         	movff	fat_format@cntr,__get_root@idx
  5535  00268C  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
  5536  002690  EC40  F018         	call	__get_root	;wreg free
  5537  002694  6EDF               	movwf	indf2,c
  5538  002696  4A25               	infsnz	fat_format@cntr,f,c
  5539  002698  2A26               	incf	fat_format@cntr+1,f,c
  5540  00269A  D7EC               	goto	l12277
  5541  00269C                     u9520:
  5542                           
  5543                           ;fat16.c: 990: };fat16.c: 991: flash_page_write(18, buffer);
  5544  00269C  0E00               	movlw	0
  5545  00269E  6E21               	movwf	flash_page_write@page+1,c
  5546  0026A0  0E12               	movlw	18
  5547  0026A2  6E20               	movwf	flash_page_write@page,c
  5548  0026A4  0EB2               	movlw	low _buffer
  5549  0026A6  6E22               	movwf	flash_page_write@data,c
  5550  0026A8  0E02               	movlw	high _buffer
  5551  0026AA  6E23               	movwf	flash_page_write@data+1,c
  5552  0026AC  EC20  F037         	call	_flash_page_write	;wreg free
  5553                           
  5554                           ;fat16.c: 994: for(cntr=0; cntr<512; ++cntr)
  5555  0026B0  0E00               	movlw	0
  5556  0026B2  6E26               	movwf	fat_format@cntr+1,c
  5557  0026B4  0E00               	movlw	0
  5558  0026B6  6E25               	movwf	fat_format@cntr,c
  5559  0026B8                     l12291:
  5560  0026B8  0E02               	movlw	2
  5561  0026BA  5C26               	subwf	fat_format@cntr+1,w,c
  5562  0026BC  B0D8               	btfsc	status,0,c
  5563  0026BE  D00B               	goto	u9540
  5564                           
  5565                           ;fat16.c: 995: {;fat16.c: 996: buffer[cntr] = 0x00;
  5566  0026C0  0EB2               	movlw	low _buffer
  5567  0026C2  2425               	addwf	fat_format@cntr,w,c
  5568  0026C4  6ED9               	movwf	fsr2l,c
  5569  0026C6  0E02               	movlw	high _buffer
  5570  0026C8  2026               	addwfc	fat_format@cntr+1,w,c
  5571  0026CA  6EDA               	movwf	fsr2h,c
  5572  0026CC  0E00               	movlw	0
  5573  0026CE  6EDF               	movwf	indf2,c
  5574  0026D0  4A25               	infsnz	fat_format@cntr,f,c
  5575  0026D2  2A26               	incf	fat_format@cntr+1,f,c
  5576  0026D4  D7F1               	goto	l12291
  5577  0026D6                     u9540:
  5578                           
  5579                           ;fat16.c: 997: };fat16.c: 998: for(cntr=19; cntr<=21; ++cntr)
  5580  0026D6  0E00               	movlw	0
  5581  0026D8  6E26               	movwf	fat_format@cntr+1,c
  5582  0026DA  0E13               	movlw	19
  5583  0026DC  6E25               	movwf	fat_format@cntr,c
  5584  0026DE                     l12303:
  5585  0026DE  5026               	movf	fat_format@cntr+1,w,c
  5586  0026E0  E111               	bnz	l12313
  5587  0026E2  0E16               	movlw	22
  5588  0026E4  5C25               	subwf	fat_format@cntr,w,c
  5589  0026E6  B0D8               	btfsc	status,0,c
  5590  0026E8  D00D               	goto	u9560
  5591                           
  5592                           ;fat16.c: 999: {;fat16.c: 1000: flash_page_write(cntr, buffer);
  5593  0026EA  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  5594  0026EE  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  5595  0026F2  0EB2               	movlw	low _buffer
  5596  0026F4  6E22               	movwf	flash_page_write@data,c
  5597  0026F6  0E02               	movlw	high _buffer
  5598  0026F8  6E23               	movwf	flash_page_write@data+1,c
  5599  0026FA  EC20  F037         	call	_flash_page_write	;wreg free
  5600  0026FE  4A25               	infsnz	fat_format@cntr,f,c
  5601  002700  2A26               	incf	fat_format@cntr+1,f,c
  5602  002702  D7ED               	goto	l12303
  5603  002704                     u9560:
  5604  002704                     l12313:
  5605                           
  5606                           ;fat16.c: 1001: };fat16.c: 1004: for(cntr=0; cntr<512; ++cntr)
  5607  002704  0E00               	movlw	0
  5608  002706  6E26               	movwf	fat_format@cntr+1,c
  5609  002708  0E00               	movlw	0
  5610  00270A  6E25               	movwf	fat_format@cntr,c
  5611  00270C                     l12315:
  5612  00270C  0E02               	movlw	2
  5613  00270E  5C26               	subwf	fat_format@cntr+1,w,c
  5614  002710  B0D8               	btfsc	status,0,c
  5615  002712  D010               	goto	u9580
  5616                           
  5617                           ;fat16.c: 1005: {;fat16.c: 1006: buffer[cntr] = _get_data(cntr);
  5618  002714  0EB2               	movlw	low _buffer
  5619  002716  2425               	addwf	fat_format@cntr,w,c
  5620  002718  6ED9               	movwf	fsr2l,c
  5621  00271A  0E02               	movlw	high _buffer
  5622  00271C  2026               	addwfc	fat_format@cntr+1,w,c
  5623  00271E  6EDA               	movwf	fsr2h,c
  5624  002720  C025  F001         	movff	fat_format@cntr,__get_data@idx
  5625  002724  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
  5626  002728  ECCC  F03B         	call	__get_data	;wreg free
  5627  00272C  6EDF               	movwf	indf2,c
  5628  00272E  4A25               	infsnz	fat_format@cntr,f,c
  5629  002730  2A26               	incf	fat_format@cntr+1,f,c
  5630  002732  D7EC               	goto	l12315
  5631  002734                     u9580:
  5632                           
  5633                           ;fat16.c: 1007: };fat16.c: 1008: flash_page_write(22, buffer);
  5634  002734  0E00               	movlw	0
  5635  002736  6E21               	movwf	flash_page_write@page+1,c
  5636  002738  0E16               	movlw	22
  5637  00273A  6E20               	movwf	flash_page_write@page,c
  5638  00273C  0EB2               	movlw	low _buffer
  5639  00273E  6E22               	movwf	flash_page_write@data,c
  5640  002740  0E02               	movlw	high _buffer
  5641  002742  6E23               	movwf	flash_page_write@data+1,c
  5642  002744  EC20  F037         	call	_flash_page_write	;wreg free
  5643  002748  0012               	return		;funcret
  5644  00274A                     __end_of_fat_format:
  5645                           	opt stack 0
  5646                           tblptru	equ	0xFF8
  5647                           tblptrh	equ	0xFF7
  5648                           tblptrl	equ	0xFF6
  5649                           tablat	equ	0xFF5
  5650                           intcon	equ	0xFF2
  5651                           intcon3	equ	0xFF0
  5652                           postinc0	equ	0xFEE
  5653                           wreg	equ	0xFE8
  5654                           postdec1	equ	0xFE5
  5655                           plusw1	equ	0xFE3
  5656                           fsr1h	equ	0xFE2
  5657                           fsr1l	equ	0xFE1
  5658                           indf2	equ	0xFDF
  5659                           postinc2	equ	0xFDE
  5660                           plusw2	equ	0xFDB
  5661                           fsr2h	equ	0xFDA
  5662                           fsr2l	equ	0xFD9
  5663                           status	equ	0xFD8
  5664                           
  5665 ;; *************** function __get_root *****************
  5666 ;; Defined at:
  5667 ;;		line 837 in file "fat16.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;  idx             2    0[COMRAM] unsigned int 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;		None
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      unsigned char 
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5684 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5685 ;;Total ram usage:        6 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_fat_format
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text20
  5695  003080                     __ptext20:
  5696                           	opt stack 0
  5697  003080                     __get_root:
  5698                           	opt stack 27
  5699                           
  5700                           ;fat16.c: 839: if (idx < 0x20)
  5701                           
  5702                           ;incstack = 0
  5703  003080  5002               	movf	__get_root@idx+1,w,c
  5704  003082  E11D               	bnz	l11621
  5705  003084  0E20               	movlw	32
  5706  003086  5C01               	subwf	__get_root@idx,w,c
  5707  003088  B0D8               	btfsc	status,0,c
  5708  00308A  D019               	goto	l1985
  5709                           
  5710                           ;fat16.c: 840: {;fat16.c: 841: if (idx < 11)
  5711  00308C  5002               	movf	__get_root@idx+1,w,c
  5712  00308E  E110               	bnz	l11615
  5713  003090  0E0B               	movlw	11
  5714  003092  5C01               	subwf	__get_root@idx,w,c
  5715  003094  B0D8               	btfsc	status,0,c
  5716  003096  D00C               	goto	l1983
  5717                           
  5718                           ;fat16.c: 842: {;fat16.c: 843: return "SolarChargr"[idx];
  5719  003098  0EDC               	movlw	low STR_9
  5720  00309A  2401               	addwf	__get_root@idx,w,c
  5721  00309C  6EF6               	movwf	tblptrl,c
  5722  00309E  0E8F               	movlw	high STR_9
  5723  0030A0  2002               	addwfc	__get_root@idx+1,w,c
  5724  0030A2  6EF7               	movwf	tblptrh,c
  5725  0030A4                     	if	1	;There are 3 active tblptr bytes
  5726  0030A4  6AF8               	clrf	tblptru,c
  5727  0030A6  0E00               	movlw	low (__mediumconst shr (0+16))
  5728  0030A8  22F8               	addwfc	tblptru,f,c
  5729  0030AA                     	endif
  5730  0030AA  0008               	tblrd		*
  5731  0030AC  50F5               	movf	tablat,w,c
  5732  0030AE  0012               	return	
  5733  0030B0                     l1983:
  5734  0030B0                     l11615:
  5735                           
  5736                           ;fat16.c: 844: };fat16.c: 845: if(idx==11)
  5737  0030B0  0E0B               	movlw	11
  5738  0030B2  1801               	xorwf	__get_root@idx,w,c
  5739  0030B4  1002               	iorwf	__get_root@idx+1,w,c
  5740  0030B6  A4D8               	btfss	status,2,c
  5741  0030B8  D002               	goto	l1985
  5742                           
  5743                           ;fat16.c: 846: {;fat16.c: 847: return 0x08;
  5744  0030BA  0E08               	movlw	8
  5745  0030BC  0012               	return	
  5746  0030BE                     l1985:
  5747  0030BE                     l11621:
  5748                           
  5749                           ;fat16.c: 848: };fat16.c: 849: };fat16.c: 850: if (idx < 0x40)
  5750  0030BE  5002               	movf	__get_root@idx+1,w,c
  5751  0030C0  E103               	bnz	u8821
  5752  0030C2  0E40               	movlw	64
  5753  0030C4  5C01               	subwf	__get_root@idx,w,c
  5754  0030C6  B0D8               	btfsc	status,0,c
  5755  0030C8                     u8821:
  5756  0030C8  D0A4               	goto	l2011
  5757                           
  5758                           ;fat16.c: 851: {;fat16.c: 852: idx -= 0x20;
  5759  0030CA  0E20               	movlw	32
  5760  0030CC  5E01               	subwf	__get_root@idx,f,c
  5761  0030CE  0E00               	movlw	0
  5762  0030D0  5A02               	subwfb	__get_root@idx+1,f,c
  5763                           
  5764                           ;fat16.c: 853: if (idx < 0+8)
  5765  0030D2  5002               	movf	__get_root@idx+1,w,c
  5766  0030D4  E110               	bnz	l11629
  5767  0030D6  0E08               	movlw	8
  5768  0030D8  5C01               	subwf	__get_root@idx,w,c
  5769  0030DA  B0D8               	btfsc	status,0,c
  5770  0030DC  D00C               	goto	l1987
  5771                           
  5772                           ;fat16.c: 854: {;fat16.c: 855: return "FILE    "[idx];
  5773  0030DE  0EE8               	movlw	low STR_10
  5774  0030E0  2401               	addwf	__get_root@idx,w,c
  5775  0030E2  6EF6               	movwf	tblptrl,c
  5776  0030E4  0E8F               	movlw	high STR_10
  5777  0030E6  2002               	addwfc	__get_root@idx+1,w,c
  5778  0030E8  6EF7               	movwf	tblptrh,c
  5779  0030EA                     	if	1	;There are 3 active tblptr bytes
  5780  0030EA  6AF8               	clrf	tblptru,c
  5781  0030EC  0E00               	movlw	low (__mediumconst shr (0+16))
  5782  0030EE  22F8               	addwfc	tblptru,f,c
  5783  0030F0                     	endif
  5784  0030F0  0008               	tblrd		*
  5785  0030F2  50F5               	movf	tablat,w,c
  5786  0030F4  0012               	return	
  5787  0030F6                     l1987:
  5788  0030F6                     l11629:
  5789                           
  5790                           ;fat16.c: 856: };fat16.c: 857: if (idx < 11)
  5791  0030F6  5002               	movf	__get_root@idx+1,w,c
  5792  0030F8  E146               	bnz	l11721
  5793  0030FA  0E0B               	movlw	11
  5794  0030FC  5C01               	subwf	__get_root@idx,w,c
  5795  0030FE  B0D8               	btfsc	status,0,c
  5796  003100  D042               	goto	l1989
  5797                           
  5798                           ;fat16.c: 858: {;fat16.c: 859: return "TXT"[idx-8];
  5799  003102  0EF8               	movlw	248
  5800  003104  6E03               	movwf	??__get_root& (0+255),c
  5801  003106  0EFF               	movlw	255
  5802  003108  6E04               	movwf	(??__get_root+1)& (0+255),c
  5803  00310A  C001  F005         	movff	__get_root@idx,??__get_root+2
  5804  00310E  C002  F006         	movff	__get_root@idx+1,??__get_root+3
  5805  003112  5003               	movf	??__get_root,w,c
  5806  003114  2605               	addwf	??__get_root+2,f,c
  5807  003116  5004               	movf	??__get_root+1,w,c
  5808  003118  2206               	addwfc	??__get_root+3,f,c
  5809  00311A  0EFA               	movlw	low STR_11
  5810  00311C  2405               	addwf	??__get_root+2,w,c
  5811  00311E  6EF6               	movwf	tblptrl,c
  5812  003120  0E8F               	movlw	high STR_11
  5813  003122  2006               	addwfc	??__get_root+3,w,c
  5814  003124  6EF7               	movwf	tblptrh,c
  5815  003126                     	if	1	;There are 3 active tblptr bytes
  5816  003126  6AF8               	clrf	tblptru,c
  5817  003128  0E00               	movlw	low (__mediumconst shr (0+16))
  5818  00312A  22F8               	addwfc	tblptru,f,c
  5819  00312C                     	endif
  5820  00312C  0008               	tblrd		*
  5821  00312E  50F5               	movf	tablat,w,c
  5822  003130  0012               	return	
  5823  003132                     
  5824                           ;fat16.c: 864: return 0x20;
  5825  003132  0E20               	movlw	32
  5826  003134  0012               	return	
  5827  003136                     
  5828                           ;fat16.c: 866: return 0x06;
  5829  003136  0E06               	movlw	6
  5830  003138  0012               	return	
  5831  00313A                     
  5832                           ;fat16.c: 868: return 0x28;
  5833  00313A  0E28               	movlw	40
  5834  00313C  0012               	return	
  5835  00313E                     
  5836                           ;fat16.c: 870: return 0x78;
  5837  00313E  0E78               	movlw	120
  5838  003140  0012               	return	
  5839  003142                     
  5840                           ;fat16.c: 872: return 0xDE;
  5841  003142  0EDE               	movlw	222
  5842  003144  0012               	return	
  5843  003146                     
  5844                           ;fat16.c: 874: return 0x38;
  5845  003146  0E38               	movlw	56
  5846  003148  0012               	return	
  5847  00314A                     
  5848                           ;fat16.c: 876: return 0x5F;
  5849  00314A  0E5F               	movlw	95
  5850  00314C  0012               	return	
  5851  00314E                     
  5852                           ;fat16.c: 878: return 0x4B;
  5853  00314E  0E4B               	movlw	75
  5854  003150  0012               	return	
  5855  003152                     
  5856                           ;fat16.c: 880: return 0x00;
  5857  003152  0E00               	movlw	0
  5858  003154  0012               	return	
  5859  003156                     
  5860                           ;fat16.c: 882: return 0x00;
  5861  003156  0E00               	movlw	0
  5862  003158  0012               	return	
  5863  00315A                     
  5864                           ;fat16.c: 884: return 0x04;
  5865  00315A  0E04               	movlw	4
  5866  00315C  0012               	return	
  5867  00315E                     
  5868                           ;fat16.c: 886: return 0x77;
  5869  00315E  0E77               	movlw	119
  5870  003160  0012               	return	
  5871  003162                     
  5872                           ;fat16.c: 888: return 0xDE;
  5873  003162  0EDE               	movlw	222
  5874  003164  0012               	return	
  5875  003166                     
  5876                           ;fat16.c: 890: return 0x38;
  5877  003166  0E38               	movlw	56
  5878  003168  0012               	return	
  5879  00316A                     
  5880                           ;fat16.c: 892: return ((unsigned char)((((uint16_t)2))&0xFF));
  5881  00316A  0E02               	movlw	2
  5882  00316C  0012               	return	
  5883  00316E                     
  5884                           ;fat16.c: 894: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  5885  00316E  0E00               	movlw	0
  5886  003170  0012               	return	
  5887  003172                     
  5888                           ;fat16.c: 896: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0xF
      +                          F));
  5889  003172  0E0C               	movlw	12
  5890  003174  0012               	return	
  5891  003176                     
  5892                           ;fat16.c: 899: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>8
      +                          )&0xFF));
  5893  003176  0E00               	movlw	0
  5894  003178  0012               	return	
  5895  00317A                     
  5896                           ;fat16.c: 902: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF)
      +                          ))&0xFF));
  5897  00317A  0E00               	movlw	0
  5898  00317C  0012               	return	
  5899  00317E                     
  5900                           ;fat16.c: 905: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  5901  00317E  0E00               	movlw	0
  5902  003180  0012               	return	
  5903  003182                     
  5904                           ;fat16.c: 908: return 0x00;
  5905  003182  0E00               	movlw	0
  5906  003184  0012               	return	
  5907  003186                     l1989:
  5908  003186                     l11721:
  5909  003186  C001  F003         	movff	__get_root@idx,??__get_root
  5910  00318A  C002  F004         	movff	__get_root@idx+1,??__get_root+1
  5911                           
  5912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5913                           ; Switch size 1, requested type "space"
  5914                           ; Number of cases is 1, Range of values is 0 to 0
  5915                           ; switch strategies available:
  5916                           ; Name         Instructions Cycles
  5917                           ; simple_byte            4     3 (average)
  5918                           ;	Chosen strategy is simple_byte
  5919  00318E  5004               	movf	??__get_root+1,w,c
  5920  003190  0A00               	xorlw	0	; case 0
  5921  003192  A4D8               	btfss	status,2,c
  5922  003194  D7F6               	goto	l2010
  5923                           
  5924                           ; Switch size 1, requested type "space"
  5925                           ; Number of cases is 20, Range of values is 11 to 31
  5926                           ; switch strategies available:
  5927                           ; Name         Instructions Cycles
  5928                           ; simple_byte           61    31 (average)
  5929                           ;	Chosen strategy is simple_byte
  5930  003196  5003               	movf	??__get_root,w,c
  5931  003198  0A0B               	xorlw	11	; case 11
  5932  00319A  B4D8               	btfsc	status,2,c
  5933  00319C  D7CA               	goto	l1990
  5934  00319E  0A06               	xorlw	6	; case 13
  5935  0031A0  B4D8               	btfsc	status,2,c
  5936  0031A2  D7C9               	goto	l1991
  5937  0031A4  0A03               	xorlw	3	; case 14
  5938  0031A6  B4D8               	btfsc	status,2,c
  5939  0031A8  D7C8               	goto	l1992
  5940  0031AA  0A01               	xorlw	1	; case 15
  5941  0031AC  B4D8               	btfsc	status,2,c
  5942  0031AE  D7C7               	goto	l1993
  5943  0031B0  0A1F               	xorlw	31	; case 16
  5944  0031B2  B4D8               	btfsc	status,2,c
  5945  0031B4  D7C6               	goto	l1994
  5946  0031B6  0A01               	xorlw	1	; case 17
  5947  0031B8  B4D8               	btfsc	status,2,c
  5948  0031BA  D7C5               	goto	l1995
  5949  0031BC  0A03               	xorlw	3	; case 18
  5950  0031BE  B4D8               	btfsc	status,2,c
  5951  0031C0  D7C4               	goto	l1996
  5952  0031C2  0A01               	xorlw	1	; case 19
  5953  0031C4  B4D8               	btfsc	status,2,c
  5954  0031C6  D7C3               	goto	l1997
  5955  0031C8  0A07               	xorlw	7	; case 20
  5956  0031CA  B4D8               	btfsc	status,2,c
  5957  0031CC  D7C2               	goto	l1998
  5958  0031CE  0A01               	xorlw	1	; case 21
  5959  0031D0  B4D8               	btfsc	status,2,c
  5960  0031D2  D7C1               	goto	l1999
  5961  0031D4  0A03               	xorlw	3	; case 22
  5962  0031D6  B4D8               	btfsc	status,2,c
  5963  0031D8  D7C0               	goto	l2000
  5964  0031DA  0A01               	xorlw	1	; case 23
  5965  0031DC  B4D8               	btfsc	status,2,c
  5966  0031DE  D7BF               	goto	l2001
  5967  0031E0  0A0F               	xorlw	15	; case 24
  5968  0031E2  B4D8               	btfsc	status,2,c
  5969  0031E4  D7BE               	goto	l2002
  5970  0031E6  0A01               	xorlw	1	; case 25
  5971  0031E8  B4D8               	btfsc	status,2,c
  5972  0031EA  D7BD               	goto	l2003
  5973  0031EC  0A03               	xorlw	3	; case 26
  5974  0031EE  B4D8               	btfsc	status,2,c
  5975  0031F0  D7BC               	goto	l2004
  5976  0031F2  0A01               	xorlw	1	; case 27
  5977  0031F4  B4D8               	btfsc	status,2,c
  5978  0031F6  D7BB               	goto	l2005
  5979  0031F8  0A07               	xorlw	7	; case 28
  5980  0031FA  B4D8               	btfsc	status,2,c
  5981  0031FC  D7BA               	goto	l2006
  5982  0031FE  0A01               	xorlw	1	; case 29
  5983  003200  B4D8               	btfsc	status,2,c
  5984  003202  D7B9               	goto	l2007
  5985  003204  0A03               	xorlw	3	; case 30
  5986  003206  B4D8               	btfsc	status,2,c
  5987  003208  D7B8               	goto	l2008
  5988  00320A  0A01               	xorlw	1	; case 31
  5989  00320C  B4D8               	btfsc	status,2,c
  5990  00320E  D7B7               	goto	l2009
  5991  003210  D7B8               	goto	l2010
  5992  003212                     l2011:
  5993                           
  5994                           ;fat16.c: 910: };fat16.c: 911: return 0X00;
  5995  003212  0E00               	movlw	0
  5996  003214  0012               	return	
  5997  003216                     __end_of__get_root:
  5998                           	opt stack 0
  5999                           tblptru	equ	0xFF8
  6000                           tblptrh	equ	0xFF7
  6001                           tblptrl	equ	0xFF6
  6002                           tablat	equ	0xFF5
  6003                           intcon	equ	0xFF2
  6004                           intcon3	equ	0xFF0
  6005                           postinc0	equ	0xFEE
  6006                           wreg	equ	0xFE8
  6007                           postdec1	equ	0xFE5
  6008                           plusw1	equ	0xFE3
  6009                           fsr1h	equ	0xFE2
  6010                           fsr1l	equ	0xFE1
  6011                           indf2	equ	0xFDF
  6012                           postinc2	equ	0xFDE
  6013                           plusw2	equ	0xFDB
  6014                           fsr2h	equ	0xFDA
  6015                           fsr2l	equ	0xFD9
  6016                           status	equ	0xFD8
  6017                           
  6018 ;; *************** function __get_mbr *****************
  6019 ;; Defined at:
  6020 ;;		line 625 in file "fat16.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;  idx             2    0[COMRAM] unsigned int 
  6023 ;; Auto vars:     Size  Location     Type
  6024 ;;		None
  6025 ;; Return value:  Size  Location     Type
  6026 ;;                  1    wreg      unsigned char 
  6027 ;; Registers used:
  6028 ;;		wreg, status,2, status,0
  6029 ;; Tracked objects:
  6030 ;;		On entry : 0/0
  6031 ;;		On exit  : 0/0
  6032 ;;		Unchanged: 0/0
  6033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6037 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6038 ;;Total ram usage:        4 bytes
  6039 ;; Hardware stack levels used:    1
  6040 ;; This function calls:
  6041 ;;		Nothing
  6042 ;; This function is called by:
  6043 ;;		_fat_get_format_status
  6044 ;;		_fat_format
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           	psect	text21
  6049  004A9E                     __ptext21:
  6050                           	opt stack 0
  6051  004A9E                     __get_mbr:
  6052                           	opt stack 27
  6053                           
  6054                           ;fat16.c: 627: switch (idx)
  6055                           
  6056                           ;incstack = 0
  6057  004A9E  D026               	goto	l1892
  6058  004AA0                     
  6059                           ;fat16.c: 638: return 0x80;
  6060  004AA0  0E80               	movlw	128
  6061  004AA2  0012               	return	
  6062  004AA4                     
  6063                           ;fat16.c: 640: return ((1%63)+1);
  6064  004AA4  0E02               	movlw	2
  6065  004AA6  0012               	return	
  6066  004AA8                     
  6067                           ;fat16.c: 643: return (((1/(16*63)) & 0b00000011)<<6) | (((1/63)%16) & 0b00111111);
  6068  004AA8  0E00               	movlw	0
  6069  004AAA  0012               	return	
  6070  004AAC                     
  6071                           ;fat16.c: 646: return (1/(16*63)) >> 2;
  6072  004AAC  0E00               	movlw	0
  6073  004AAE  0012               	return	
  6074  004AB0                     
  6075                           ;fat16.c: 649: return 0x04;
  6076  004AB0  0E04               	movlw	4
  6077  004AB2  0012               	return	
  6078  004AB4                     
  6079                           ;fat16.c: 652: return (((1+5000-1)%63)+1);
  6080  004AB4  0E18               	movlw	24
  6081  004AB6  0012               	return	
  6082  004AB8                     
  6083                           ;fat16.c: 655: return ((((1+5000-1)/(16*63)) & 0b00000011) << 6) | ((((1+5000-1)/63)%16)
      +                           & 0b00111111);
  6084  004AB8  0E0F               	movlw	15
  6085  004ABA  0012               	return	
  6086  004ABC                     
  6087                           ;fat16.c: 658: return ((1+5000-1)/(16*63)) >> 2;
  6088  004ABC  0E01               	movlw	1
  6089  004ABE  0012               	return	
  6090  004AC0                     
  6091                           ;fat16.c: 661: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
  6092  004AC0  0E01               	movlw	1
  6093  004AC2  0012               	return	
  6094  004AC4                     
  6095                           ;fat16.c: 663: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
  6096  004AC4  0E00               	movlw	0
  6097  004AC6  0012               	return	
  6098  004AC8                     
  6099                           ;fat16.c: 665: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
  6100  004AC8  0E00               	movlw	0
  6101  004ACA  0012               	return	
  6102  004ACC                     
  6103                           ;fat16.c: 667: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6104  004ACC  0E00               	movlw	0
  6105  004ACE  0012               	return	
  6106  004AD0                     
  6107                           ;fat16.c: 669: return ((unsigned char)((((unsigned short)((((uint32_t)5000))&0xFFFF)))&0
      +                          xFF));
  6108  004AD0  0E88               	movlw	136
  6109  004AD2  0012               	return	
  6110  004AD4                     
  6111                           ;fat16.c: 671: return ((unsigned char)(((((unsigned short)((((uint32_t)5000))&0xFFFF)))>
      +                          >8)&0xFF));
  6112  004AD4  0E13               	movlw	19
  6113  004AD6  0012               	return	
  6114  004AD8                     
  6115                           ;fat16.c: 673: return ((unsigned char)((((unsigned short)(((((uint32_t)5000))>>16)&0xFFF
      +                          F)))&0xFF));
  6116  004AD8  0E00               	movlw	0
  6117  004ADA  0012               	return	
  6118  004ADC                     
  6119                           ;fat16.c: 675: return ((unsigned char)(((((unsigned short)(((((uint32_t)5000))>>16)&0xFF
      +                          FF)))>>8)&0xFF));
  6120  004ADC  0E00               	movlw	0
  6121  004ADE  0012               	return	
  6122  004AE0                     
  6123                           ;fat16.c: 677: return 0X55AA >> 8;
  6124  004AE0  0E55               	movlw	85
  6125  004AE2  0012               	return	
  6126  004AE4                     
  6127                           ;fat16.c: 679: return 0X55AA & 0XFF;
  6128  004AE4  0EAA               	movlw	170
  6129  004AE6  0012               	return	
  6130  004AE8                     
  6131                           ;fat16.c: 681: return 0X00;
  6132  004AE8  0E00               	movlw	0
  6133                           
  6134                           ;fat16.c: 682: }
  6135  004AEA  0012               	return	
  6136  004AEC                     l1892:
  6137  004AEC  C001  F003         	movff	__get_mbr@idx,??__get_mbr
  6138  004AF0  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
  6139                           
  6140                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6141                           ; Switch size 1, requested type "space"
  6142                           ; Number of cases is 1, Range of values is 1 to 1
  6143                           ; switch strategies available:
  6144                           ; Name         Instructions Cycles
  6145                           ; simple_byte            4     3 (average)
  6146                           ;	Chosen strategy is simple_byte
  6147  004AF4  5004               	movf	??__get_mbr+1,w,c
  6148  004AF6  0A01               	xorlw	1	; case 1
  6149  004AF8  A4D8               	btfss	status,2,c
  6150  004AFA  D7F6               	goto	l1912
  6151                           
  6152                           ; Switch size 1, requested type "space"
  6153                           ; Number of cases is 18, Range of values is 190 to 255
  6154                           ; switch strategies available:
  6155                           ; Name         Instructions Cycles
  6156                           ; simple_byte           55    28 (average)
  6157                           ;	Chosen strategy is simple_byte
  6158  004AFC  5003               	movf	??__get_mbr,w,c
  6159  004AFE  0ABE               	xorlw	190	; case 190
  6160  004B00  B4D8               	btfsc	status,2,c
  6161  004B02  D7CE               	goto	l1893
  6162  004B04  0A01               	xorlw	1	; case 191
  6163  004B06  B4D8               	btfsc	status,2,c
  6164  004B08  D7CD               	goto	l1895
  6165  004B0A  0A7F               	xorlw	127	; case 192
  6166  004B0C  B4D8               	btfsc	status,2,c
  6167  004B0E  D7CC               	goto	l1896
  6168  004B10  0A01               	xorlw	1	; case 193
  6169  004B12  B4D8               	btfsc	status,2,c
  6170  004B14  D7CB               	goto	l1897
  6171  004B16  0A03               	xorlw	3	; case 194
  6172  004B18  B4D8               	btfsc	status,2,c
  6173  004B1A  D7CA               	goto	l1898
  6174  004B1C  0A01               	xorlw	1	; case 195
  6175  004B1E  B4D8               	btfsc	status,2,c
  6176  004B20  D7C9               	goto	l1899
  6177  004B22  0A07               	xorlw	7	; case 196
  6178  004B24  B4D8               	btfsc	status,2,c
  6179  004B26  D7C8               	goto	l1900
  6180  004B28  0A01               	xorlw	1	; case 197
  6181  004B2A  B4D8               	btfsc	status,2,c
  6182  004B2C  D7C7               	goto	l1901
  6183  004B2E  0A03               	xorlw	3	; case 198
  6184  004B30  B4D8               	btfsc	status,2,c
  6185  004B32  D7C6               	goto	l1902
  6186  004B34  0A01               	xorlw	1	; case 199
  6187  004B36  B4D8               	btfsc	status,2,c
  6188  004B38  D7C5               	goto	l1903
  6189  004B3A  0A0F               	xorlw	15	; case 200
  6190  004B3C  B4D8               	btfsc	status,2,c
  6191  004B3E  D7C4               	goto	l1904
  6192  004B40  0A01               	xorlw	1	; case 201
  6193  004B42  B4D8               	btfsc	status,2,c
  6194  004B44  D7C3               	goto	l1905
  6195  004B46  0A03               	xorlw	3	; case 202
  6196  004B48  B4D8               	btfsc	status,2,c
  6197  004B4A  D7C2               	goto	l1906
  6198  004B4C  0A01               	xorlw	1	; case 203
  6199  004B4E  B4D8               	btfsc	status,2,c
  6200  004B50  D7C1               	goto	l1907
  6201  004B52  0A07               	xorlw	7	; case 204
  6202  004B54  B4D8               	btfsc	status,2,c
  6203  004B56  D7C0               	goto	l1908
  6204  004B58  0A01               	xorlw	1	; case 205
  6205  004B5A  B4D8               	btfsc	status,2,c
  6206  004B5C  D7BF               	goto	l1909
  6207  004B5E  0A33               	xorlw	51	; case 254
  6208  004B60  B4D8               	btfsc	status,2,c
  6209  004B62  D7BE               	goto	l1910
  6210  004B64  0A01               	xorlw	1	; case 255
  6211  004B66  B4D8               	btfsc	status,2,c
  6212  004B68  D7BD               	goto	l1911
  6213  004B6A  D7BE               	goto	l1912
  6214  004B6C                     __end_of__get_mbr:
  6215                           	opt stack 0
  6216                           tblptru	equ	0xFF8
  6217                           tblptrh	equ	0xFF7
  6218                           tblptrl	equ	0xFF6
  6219                           tablat	equ	0xFF5
  6220                           intcon	equ	0xFF2
  6221                           intcon3	equ	0xFF0
  6222                           postinc0	equ	0xFEE
  6223                           wreg	equ	0xFE8
  6224                           postdec1	equ	0xFE5
  6225                           plusw1	equ	0xFE3
  6226                           fsr1h	equ	0xFE2
  6227                           fsr1l	equ	0xFE1
  6228                           indf2	equ	0xFDF
  6229                           postinc2	equ	0xFDE
  6230                           plusw2	equ	0xFDB
  6231                           fsr2h	equ	0xFDA
  6232                           fsr2l	equ	0xFD9
  6233                           status	equ	0xFD8
  6234                           
  6235 ;; *************** function __get_fbr *****************
  6236 ;; Defined at:
  6237 ;;		line 685 in file "fat16.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;  idx             2    0[COMRAM] unsigned int 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;		None
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  1    wreg      unsigned char 
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6253 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6254 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6255 ;;Total ram usage:        4 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; This function calls:
  6258 ;;		Nothing
  6259 ;; This function is called by:
  6260 ;;		_fat_get_format_status
  6261 ;;		_fat_format
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text22
  6266  001A30                     __ptext22:
  6267                           	opt stack 0
  6268  001A30                     __get_fbr:
  6269                           	opt stack 27
  6270                           
  6271                           ;fat16.c: 687: switch (idx)
  6272                           
  6273                           ;incstack = 0
  6274  001A30  D093               	goto	l1916
  6275  001A32                     
  6276                           ;fat16.c: 690: return 0xEB;
  6277  001A32  0EEB               	movlw	235
  6278  001A34  0012               	return	
  6279  001A36                     
  6280                           ;fat16.c: 692: return 0x3C;
  6281  001A36  0E3C               	movlw	60
  6282  001A38  0012               	return	
  6283  001A3A                     
  6284                           ;fat16.c: 694: return 0x90;
  6285  001A3A  0E90               	movlw	144
  6286  001A3C  0012               	return	
  6287  001A3E                     
  6288                           ;fat16.c: 696: return "MSDOS5.0"[0];
  6289  001A3E  0EF1               	movlw	low STR_1
  6290  001A40  6EF6               	movwf	tblptrl,c
  6291  001A42                     	if	1	;There is more than 1 active tblptr byte
  6292  001A42  0E8F               	movlw	high STR_1
  6293  001A44  6EF7               	movwf	tblptrh,c
  6294  001A46                     	endif
  6295  001A46                     	if	1	;There are 3 active tblptr bytes
  6296  001A46  0E00               	movlw	low (STR_1 shr (0+16))
  6297  001A48  6EF8               	movwf	tblptru,c
  6298  001A4A                     	endif
  6299  001A4A  0008               	tblrd		*
  6300  001A4C  50F5               	movf	tablat,w,c
  6301  001A4E  0012               	return	
  6302  001A50                     
  6303                           ;fat16.c: 698: return "MSDOS5.0"[1];
  6304  001A50  0EF2               	movlw	low (STR_1+1)
  6305  001A52  6EF6               	movwf	tblptrl,c
  6306  001A54  0E8F               	movlw	high (STR_1+1)
  6307  001A56  6EF7               	movwf	tblptrh,c
  6308  001A58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6309  001A58  6AF8               	clrf	tblptru,c
  6310  001A5A                     	endif
  6311  001A5A                     	if	0	;tblptru may be non-zero
  6312  001A5A                     	endif
  6313  001A5A  0008               	tblrd		*
  6314  001A5C  50F5               	movf	tablat,w,c
  6315  001A5E  0012               	return	
  6316  001A60                     
  6317                           ;fat16.c: 700: return "MSDOS5.0"[2];
  6318  001A60  0EF3               	movlw	low (STR_1+2)
  6319  001A62  6EF6               	movwf	tblptrl,c
  6320  001A64  0E8F               	movlw	high (STR_1+2)
  6321  001A66  6EF7               	movwf	tblptrh,c
  6322  001A68                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6323  001A68  6AF8               	clrf	tblptru,c
  6324  001A6A                     	endif
  6325  001A6A                     	if	0	;tblptru may be non-zero
  6326  001A6A                     	endif
  6327  001A6A  0008               	tblrd		*
  6328  001A6C  50F5               	movf	tablat,w,c
  6329  001A6E  0012               	return	
  6330  001A70                     
  6331                           ;fat16.c: 702: return "MSDOS5.0"[3];
  6332  001A70  0EF4               	movlw	low (STR_1+3)
  6333  001A72  6EF6               	movwf	tblptrl,c
  6334  001A74  0E8F               	movlw	high (STR_1+3)
  6335  001A76  6EF7               	movwf	tblptrh,c
  6336  001A78                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6337  001A78  6AF8               	clrf	tblptru,c
  6338  001A7A                     	endif
  6339  001A7A                     	if	0	;tblptru may be non-zero
  6340  001A7A                     	endif
  6341  001A7A  0008               	tblrd		*
  6342  001A7C  50F5               	movf	tablat,w,c
  6343  001A7E  0012               	return	
  6344  001A80                     
  6345                           ;fat16.c: 704: return "MSDOS5.0"[4];
  6346  001A80  0EF5               	movlw	low (STR_1+4)
  6347  001A82  6EF6               	movwf	tblptrl,c
  6348  001A84  0E8F               	movlw	high (STR_1+4)
  6349  001A86  6EF7               	movwf	tblptrh,c
  6350  001A88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6351  001A88  6AF8               	clrf	tblptru,c
  6352  001A8A                     	endif
  6353  001A8A                     	if	0	;tblptru may be non-zero
  6354  001A8A                     	endif
  6355  001A8A  0008               	tblrd		*
  6356  001A8C  50F5               	movf	tablat,w,c
  6357  001A8E  0012               	return	
  6358  001A90                     
  6359                           ;fat16.c: 706: return "MSDOS5.0"[5];
  6360  001A90  0EF6               	movlw	low (STR_1+5)
  6361  001A92  6EF6               	movwf	tblptrl,c
  6362  001A94  0E8F               	movlw	high (STR_1+5)
  6363  001A96  6EF7               	movwf	tblptrh,c
  6364  001A98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6365  001A98  6AF8               	clrf	tblptru,c
  6366  001A9A                     	endif
  6367  001A9A                     	if	0	;tblptru may be non-zero
  6368  001A9A                     	endif
  6369  001A9A  0008               	tblrd		*
  6370  001A9C  50F5               	movf	tablat,w,c
  6371  001A9E  0012               	return	
  6372  001AA0                     
  6373                           ;fat16.c: 708: return "MSDOS5.0"[6];
  6374  001AA0  0EF7               	movlw	low (STR_1+6)
  6375  001AA2  6EF6               	movwf	tblptrl,c
  6376  001AA4  0E8F               	movlw	high (STR_1+6)
  6377  001AA6  6EF7               	movwf	tblptrh,c
  6378  001AA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6379  001AA8  6AF8               	clrf	tblptru,c
  6380  001AAA                     	endif
  6381  001AAA                     	if	0	;tblptru may be non-zero
  6382  001AAA                     	endif
  6383  001AAA  0008               	tblrd		*
  6384  001AAC  50F5               	movf	tablat,w,c
  6385  001AAE  0012               	return	
  6386  001AB0                     
  6387                           ;fat16.c: 710: return "MSDOS5.0"[7];
  6388  001AB0  0EF8               	movlw	low (STR_1+7)
  6389  001AB2  6EF6               	movwf	tblptrl,c
  6390  001AB4  0E8F               	movlw	high (STR_1+7)
  6391  001AB6  6EF7               	movwf	tblptrh,c
  6392  001AB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6393  001AB8  6AF8               	clrf	tblptru,c
  6394  001ABA                     	endif
  6395  001ABA                     	if	0	;tblptru may be non-zero
  6396  001ABA                     	endif
  6397  001ABA  0008               	tblrd		*
  6398  001ABC  50F5               	movf	tablat,w,c
  6399  001ABE  0012               	return	
  6400  001AC0                     
  6401                           ;fat16.c: 712: return ((unsigned char)((((uint16_t)512))&0xFF));
  6402  001AC0  0E00               	movlw	0
  6403  001AC2  0012               	return	
  6404  001AC4                     
  6405                           ;fat16.c: 714: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  6406  001AC4  0E02               	movlw	2
  6407  001AC6  0012               	return	
  6408  001AC8                     
  6409                           ;fat16.c: 716: return 1;
  6410  001AC8  0E01               	movlw	1
  6411  001ACA  0012               	return	
  6412  001ACC                     
  6413                           ;fat16.c: 718: return ((unsigned char)((((uint16_t)1))&0xFF));
  6414  001ACC  0E01               	movlw	1
  6415  001ACE  0012               	return	
  6416  001AD0                     
  6417                           ;fat16.c: 721: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  6418  001AD0  0E00               	movlw	0
  6419  001AD2  0012               	return	
  6420  001AD4                     
  6421                           ;fat16.c: 724: return 1;
  6422  001AD4  0E01               	movlw	1
  6423  001AD6  0012               	return	
  6424  001AD8                     
  6425                           ;fat16.c: 726: return ((unsigned char)((((uint16_t)64))&0xFF));
  6426  001AD8  0E40               	movlw	64
  6427  001ADA  0012               	return	
  6428  001ADC                     
  6429                           ;fat16.c: 729: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  6430  001ADC  0E00               	movlw	0
  6431  001ADE  0012               	return	
  6432  001AE0                     
  6433                           ;fat16.c: 732: return ((unsigned char)((((uint16_t)4114))&0xFF));
  6434  001AE0  0E12               	movlw	18
  6435  001AE2  0012               	return	
  6436  001AE4                     
  6437                           ;fat16.c: 735: return ((unsigned char)(((((uint16_t)4114))>>8)&0xFF));
  6438  001AE4  0E10               	movlw	16
  6439  001AE6  0012               	return	
  6440  001AE8                     
  6441                           ;fat16.c: 738: return 0XF8;
  6442  001AE8  0EF8               	movlw	248
  6443  001AEA  0012               	return	
  6444  001AEC                     
  6445                           ;fat16.c: 740: return ((unsigned char)((((uint16_t)16))&0xFF));
  6446  001AEC  0E10               	movlw	16
  6447  001AEE  0012               	return	
  6448  001AF0                     
  6449                           ;fat16.c: 743: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  6450  001AF0  0E00               	movlw	0
  6451  001AF2  0012               	return	
  6452  001AF4                     
  6453                           ;fat16.c: 746: return ((unsigned char)((((uint16_t)63))&0xFF));
  6454  001AF4  0E3F               	movlw	63
  6455  001AF6  0012               	return	
  6456  001AF8                     
  6457                           ;fat16.c: 749: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  6458  001AF8  0E00               	movlw	0
  6459  001AFA  0012               	return	
  6460  001AFC                     
  6461                           ;fat16.c: 752: return ((unsigned char)((((uint16_t)16))&0xFF));
  6462  001AFC  0E10               	movlw	16
  6463  001AFE  0012               	return	
  6464  001B00                     
  6465                           ;fat16.c: 755: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  6466  001B00  0E00               	movlw	0
  6467  001B02  0012               	return	
  6468  001B04                     
  6469                           ;fat16.c: 758: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xFF
      +                          ));
  6470  001B04  0E00               	movlw	0
  6471  001B06  0012               	return	
  6472  001B08                     
  6473                           ;fat16.c: 761: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8)
      +                          &0xFF));
  6474  001B08  0E00               	movlw	0
  6475  001B0A  0012               	return	
  6476  001B0C                     
  6477                           ;fat16.c: 764: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF))
      +                          )&0xFF));
  6478  001B0C  0E00               	movlw	0
  6479  001B0E  0012               	return	
  6480  001B10                     
  6481                           ;fat16.c: 767: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6482  001B10  0E00               	movlw	0
  6483  001B12  0012               	return	
  6484  001B14                     
  6485                           ;fat16.c: 770: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  6486  001B14  0E01               	movlw	1
  6487  001B16  0012               	return	
  6488  001B18                     
  6489                           ;fat16.c: 773: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  6490  001B18  0E00               	movlw	0
  6491  001B1A  0012               	return	
  6492  001B1C                     
  6493                           ;fat16.c: 776: return ((unsigned char)((((unsigned short)((((uint32_t)((16*1)+1)))&0xFFF
      +                          F)))&0xFF));
  6494  001B1C  0E11               	movlw	17
  6495  001B1E  0012               	return	
  6496  001B20                     
  6497                           ;fat16.c: 779: return ((unsigned char)(((((unsigned short)((((uint32_t)((16*1)+1)))&0xFF
      +                          FF)))>>8)&0xFF));
  6498  001B20  0E00               	movlw	0
  6499  001B22  0012               	return	
  6500  001B24                     
  6501                           ;fat16.c: 782: return ((unsigned char)((((unsigned short)(((((uint32_t)((16*1)+1)))>>16)
      +                          &0xFFFF)))&0xFF));
  6502  001B24  0E11               	movlw	17
  6503  001B26  0012               	return	
  6504  001B28                     
  6505                           ;fat16.c: 785: return ((unsigned char)(((((unsigned short)(((((uint32_t)((16*1)+1)))>>16
      +                          )&0xFFFF)))>>8)&0xFF));
  6506  001B28  0E00               	movlw	0
  6507  001B2A  0012               	return	
  6508  001B2C                     
  6509                           ;fat16.c: 788: return 'F';
  6510  001B2C  0E46               	movlw	70
  6511  001B2E  0012               	return	
  6512  001B30                     
  6513                           ;fat16.c: 790: return 'A';
  6514  001B30  0E41               	movlw	65
  6515  001B32  0012               	return	
  6516  001B34                     
  6517                           ;fat16.c: 792: return 'T';
  6518  001B34  0E54               	movlw	84
  6519  001B36  0012               	return	
  6520  001B38                     
  6521                           ;fat16.c: 794: return '1';
  6522  001B38  0E31               	movlw	49
  6523  001B3A  0012               	return	
  6524  001B3C                     
  6525                           ;fat16.c: 796: return '6';
  6526  001B3C  0E36               	movlw	54
  6527  001B3E  0012               	return	
  6528  001B40                     
  6529                           ;fat16.c: 798: return ' ';
  6530  001B40  0E20               	movlw	32
  6531  001B42  0012               	return	
  6532  001B44                     
  6533                           ;fat16.c: 800: return ' ';
  6534  001B44  0E20               	movlw	32
  6535  001B46  0012               	return	
  6536  001B48                     
  6537                           ;fat16.c: 802: return ' ';
  6538  001B48  0E20               	movlw	32
  6539  001B4A  0012               	return	
  6540  001B4C                     
  6541                           ;fat16.c: 804: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  6542  001B4C  0E55               	movlw	85
  6543  001B4E  0012               	return	
  6544  001B50                     
  6545                           ;fat16.c: 807: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  6546  001B50  0EAA               	movlw	170
  6547  001B52  0012               	return	
  6548  001B54                     
  6549                           ;fat16.c: 810: return 0X00;
  6550  001B54  0E00               	movlw	0
  6551                           
  6552                           ;fat16.c: 811: }
  6553  001B56  0012               	return	
  6554  001B58                     l1916:
  6555  001B58  C001  F003         	movff	__get_fbr@idx,??__get_fbr
  6556  001B5C  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
  6557                           
  6558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6559                           ; Switch size 1, requested type "space"
  6560                           ; Number of cases is 2, Range of values is 0 to 1
  6561                           ; switch strategies available:
  6562                           ; Name         Instructions Cycles
  6563                           ; simple_byte            7     4 (average)
  6564                           ;	Chosen strategy is simple_byte
  6565  001B60  5004               	movf	??__get_fbr+1,w,c
  6566  001B62  0A00               	xorlw	0	; case 0
  6567  001B64  B4D8               	btfsc	status,2,c
  6568  001B66  D004               	goto	l14497
  6569  001B68  0A01               	xorlw	1	; case 1
  6570  001B6A  B4D8               	btfsc	status,2,c
  6571  001B6C  D08D               	goto	l14499
  6572  001B6E  D7F2               	goto	l1966
  6573  001B70                     l14497:
  6574                           
  6575                           ; Switch size 1, requested type "space"
  6576                           ; Number of cases is 46, Range of values is 0 to 61
  6577                           ; switch strategies available:
  6578                           ; Name         Instructions Cycles
  6579                           ; simple_byte          139    70 (average)
  6580                           ;	Chosen strategy is simple_byte
  6581  001B70  5003               	movf	??__get_fbr,w,c
  6582  001B72  0A00               	xorlw	0	; case 0
  6583  001B74  B4D8               	btfsc	status,2,c
  6584  001B76  D75D               	goto	l1917
  6585  001B78  0A01               	xorlw	1	; case 1
  6586  001B7A  B4D8               	btfsc	status,2,c
  6587  001B7C  D75C               	goto	l1919
  6588  001B7E  0A03               	xorlw	3	; case 2
  6589  001B80  B4D8               	btfsc	status,2,c
  6590  001B82  D75B               	goto	l1920
  6591  001B84  0A01               	xorlw	1	; case 3
  6592  001B86  B4D8               	btfsc	status,2,c
  6593  001B88  D75A               	goto	l1921
  6594  001B8A  0A07               	xorlw	7	; case 4
  6595  001B8C  B4D8               	btfsc	status,2,c
  6596  001B8E  D760               	goto	l1922
  6597  001B90  0A01               	xorlw	1	; case 5
  6598  001B92  B4D8               	btfsc	status,2,c
  6599  001B94  D765               	goto	l1923
  6600  001B96  0A03               	xorlw	3	; case 6
  6601  001B98  B4D8               	btfsc	status,2,c
  6602  001B9A  D76A               	goto	l1924
  6603  001B9C  0A01               	xorlw	1	; case 7
  6604  001B9E  B4D8               	btfsc	status,2,c
  6605  001BA0  D76F               	goto	l1925
  6606  001BA2  0A0F               	xorlw	15	; case 8
  6607  001BA4  B4D8               	btfsc	status,2,c
  6608  001BA6  D774               	goto	l1926
  6609  001BA8  0A01               	xorlw	1	; case 9
  6610  001BAA  B4D8               	btfsc	status,2,c
  6611  001BAC  D779               	goto	l1927
  6612  001BAE  0A03               	xorlw	3	; case 10
  6613  001BB0  B4D8               	btfsc	status,2,c
  6614  001BB2  D77E               	goto	l1928
  6615  001BB4  0A01               	xorlw	1	; case 11
  6616  001BB6  B4D8               	btfsc	status,2,c
  6617  001BB8  D783               	goto	l1929
  6618  001BBA  0A07               	xorlw	7	; case 12
  6619  001BBC  B4D8               	btfsc	status,2,c
  6620  001BBE  D782               	goto	l1930
  6621  001BC0  0A01               	xorlw	1	; case 13
  6622  001BC2  B4D8               	btfsc	status,2,c
  6623  001BC4  D781               	goto	l1931
  6624  001BC6  0A03               	xorlw	3	; case 14
  6625  001BC8  B4D8               	btfsc	status,2,c
  6626  001BCA  D780               	goto	l1932
  6627  001BCC  0A01               	xorlw	1	; case 15
  6628  001BCE  B4D8               	btfsc	status,2,c
  6629  001BD0  D77F               	goto	l1933
  6630  001BD2  0A1F               	xorlw	31	; case 16
  6631  001BD4  B4D8               	btfsc	status,2,c
  6632  001BD6  D77E               	goto	l1934
  6633  001BD8  0A01               	xorlw	1	; case 17
  6634  001BDA  B4D8               	btfsc	status,2,c
  6635  001BDC  D77D               	goto	l1935
  6636  001BDE  0A03               	xorlw	3	; case 18
  6637  001BE0  B4D8               	btfsc	status,2,c
  6638  001BE2  D77C               	goto	l1936
  6639  001BE4  0A01               	xorlw	1	; case 19
  6640  001BE6  B4D8               	btfsc	status,2,c
  6641  001BE8  D77B               	goto	l1937
  6642  001BEA  0A07               	xorlw	7	; case 20
  6643  001BEC  B4D8               	btfsc	status,2,c
  6644  001BEE  D77A               	goto	l1938
  6645  001BF0  0A01               	xorlw	1	; case 21
  6646  001BF2  B4D8               	btfsc	status,2,c
  6647  001BF4  D779               	goto	l1939
  6648  001BF6  0A03               	xorlw	3	; case 22
  6649  001BF8  B4D8               	btfsc	status,2,c
  6650  001BFA  D778               	goto	l1940
  6651  001BFC  0A01               	xorlw	1	; case 23
  6652  001BFE  B4D8               	btfsc	status,2,c
  6653  001C00  D777               	goto	l1941
  6654  001C02  0A0F               	xorlw	15	; case 24
  6655  001C04  B4D8               	btfsc	status,2,c
  6656  001C06  D776               	goto	l1942
  6657  001C08  0A01               	xorlw	1	; case 25
  6658  001C0A  B4D8               	btfsc	status,2,c
  6659  001C0C  D775               	goto	l1943
  6660  001C0E  0A03               	xorlw	3	; case 26
  6661  001C10  B4D8               	btfsc	status,2,c
  6662  001C12  D774               	goto	l1944
  6663  001C14  0A01               	xorlw	1	; case 27
  6664  001C16  B4D8               	btfsc	status,2,c
  6665  001C18  D773               	goto	l1945
  6666  001C1A  0A07               	xorlw	7	; case 28
  6667  001C1C  B4D8               	btfsc	status,2,c
  6668  001C1E  D772               	goto	l1946
  6669  001C20  0A01               	xorlw	1	; case 29
  6670  001C22  B4D8               	btfsc	status,2,c
  6671  001C24  D771               	goto	l1947
  6672  001C26  0A03               	xorlw	3	; case 30
  6673  001C28  B4D8               	btfsc	status,2,c
  6674  001C2A  D770               	goto	l1948
  6675  001C2C  0A01               	xorlw	1	; case 31
  6676  001C2E  B4D8               	btfsc	status,2,c
  6677  001C30  D76F               	goto	l1949
  6678  001C32  0A37               	xorlw	55	; case 40
  6679  001C34  B4D8               	btfsc	status,2,c
  6680  001C36  D76E               	goto	l1950
  6681  001C38  0A01               	xorlw	1	; case 41
  6682  001C3A  B4D8               	btfsc	status,2,c
  6683  001C3C  D76D               	goto	l1951
  6684  001C3E  0A05               	xorlw	5	; case 44
  6685  001C40  B4D8               	btfsc	status,2,c
  6686  001C42  D76C               	goto	l1952
  6687  001C44  0A01               	xorlw	1	; case 45
  6688  001C46  B4D8               	btfsc	status,2,c
  6689  001C48  D76B               	goto	l1953
  6690  001C4A  0A03               	xorlw	3	; case 46
  6691  001C4C  B4D8               	btfsc	status,2,c
  6692  001C4E  D76A               	goto	l1954
  6693  001C50  0A01               	xorlw	1	; case 47
  6694  001C52  B4D8               	btfsc	status,2,c
  6695  001C54  D769               	goto	l1955
  6696  001C56  0A19               	xorlw	25	; case 54
  6697  001C58  B4D8               	btfsc	status,2,c
  6698  001C5A  D768               	goto	l1956
  6699  001C5C  0A01               	xorlw	1	; case 55
  6700  001C5E  B4D8               	btfsc	status,2,c
  6701  001C60  D767               	goto	l1957
  6702  001C62  0A0F               	xorlw	15	; case 56
  6703  001C64  B4D8               	btfsc	status,2,c
  6704  001C66  D766               	goto	l1958
  6705  001C68  0A01               	xorlw	1	; case 57
  6706  001C6A  B4D8               	btfsc	status,2,c
  6707  001C6C  D765               	goto	l1959
  6708  001C6E  0A03               	xorlw	3	; case 58
  6709  001C70  B4D8               	btfsc	status,2,c
  6710  001C72  D764               	goto	l1960
  6711  001C74  0A01               	xorlw	1	; case 59
  6712  001C76  B4D8               	btfsc	status,2,c
  6713  001C78  D763               	goto	l1961
  6714  001C7A  0A07               	xorlw	7	; case 60
  6715  001C7C  B4D8               	btfsc	status,2,c
  6716  001C7E  D762               	goto	l1962
  6717  001C80  0A01               	xorlw	1	; case 61
  6718  001C82  B4D8               	btfsc	status,2,c
  6719  001C84  D761               	goto	l1963
  6720  001C86  D766               	goto	l1966
  6721  001C88                     l14499:
  6722                           
  6723                           ; Switch size 1, requested type "space"
  6724                           ; Number of cases is 2, Range of values is 254 to 255
  6725                           ; switch strategies available:
  6726                           ; Name         Instructions Cycles
  6727                           ; simple_byte            7     4 (average)
  6728                           ;	Chosen strategy is simple_byte
  6729  001C88  5003               	movf	??__get_fbr,w,c
  6730  001C8A  0AFE               	xorlw	254	; case 254
  6731  001C8C  B4D8               	btfsc	status,2,c
  6732  001C8E  D75E               	goto	l1964
  6733  001C90  0A01               	xorlw	1	; case 255
  6734  001C92  B4D8               	btfsc	status,2,c
  6735  001C94  D75D               	goto	l1965
  6736  001C96  D75E               	goto	l1966
  6737  001C98                     __end_of__get_fbr:
  6738                           	opt stack 0
  6739                           tblptru	equ	0xFF8
  6740                           tblptrh	equ	0xFF7
  6741                           tblptrl	equ	0xFF6
  6742                           tablat	equ	0xFF5
  6743                           intcon	equ	0xFF2
  6744                           intcon3	equ	0xFF0
  6745                           postinc0	equ	0xFEE
  6746                           wreg	equ	0xFE8
  6747                           postdec1	equ	0xFE5
  6748                           plusw1	equ	0xFE3
  6749                           fsr1h	equ	0xFE2
  6750                           fsr1l	equ	0xFE1
  6751                           indf2	equ	0xFDF
  6752                           postinc2	equ	0xFDE
  6753                           plusw2	equ	0xFDB
  6754                           fsr2h	equ	0xFDA
  6755                           fsr2l	equ	0xFD9
  6756                           status	equ	0xFD8
  6757                           
  6758 ;; *************** function __get_fat *****************
  6759 ;; Defined at:
  6760 ;;		line 814 in file "fat16.c"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;  idx             2    0[COMRAM] unsigned int 
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;		None
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      unsigned char 
  6767 ;; Registers used:
  6768 ;;		wreg, status,2, status,0
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6776 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6777 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6778 ;;Total ram usage:        4 bytes
  6779 ;; Hardware stack levels used:    1
  6780 ;; This function calls:
  6781 ;;		Nothing
  6782 ;; This function is called by:
  6783 ;;		_fat_format
  6784 ;; This function uses a non-reentrant model
  6785 ;;
  6786                           
  6787                           	psect	text23
  6788  006D3E                     __ptext23:
  6789                           	opt stack 0
  6790  006D3E                     __get_fat:
  6791                           	opt stack 27
  6792                           
  6793                           ;fat16.c: 816: switch (idx)
  6794                           
  6795                           ;incstack = 0
  6796  006D3E  D00E               	goto	l1970
  6797  006D40                     
  6798                           ;fat16.c: 820: return 0xF8;
  6799  006D40  0EF8               	movlw	248
  6800  006D42  0012               	return	
  6801  006D44                     
  6802                           ;fat16.c: 822: return 0xFF;
  6803  006D44  0EFF               	movlw	255
  6804  006D46  0012               	return	
  6805  006D48                     
  6806                           ;fat16.c: 824: return 0xFF;
  6807  006D48  0EFF               	movlw	255
  6808  006D4A  0012               	return	
  6809  006D4C                     
  6810                           ;fat16.c: 826: return 0xFF;
  6811  006D4C  0EFF               	movlw	255
  6812  006D4E  0012               	return	
  6813  006D50                     
  6814                           ;fat16.c: 829: return 0xFF;
  6815  006D50  0EFF               	movlw	255
  6816  006D52  0012               	return	
  6817  006D54                     
  6818                           ;fat16.c: 831: return 0xFF;
  6819  006D54  0EFF               	movlw	255
  6820  006D56  0012               	return	
  6821  006D58                     
  6822                           ;fat16.c: 833: return 0X00;
  6823  006D58  0E00               	movlw	0
  6824                           
  6825                           ;fat16.c: 834: }
  6826  006D5A  0012               	return	
  6827  006D5C                     l1970:
  6828  006D5C  C001  F003         	movff	__get_fat@idx,??__get_fat
  6829  006D60  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
  6830                           
  6831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6832                           ; Switch size 1, requested type "space"
  6833                           ; Number of cases is 1, Range of values is 0 to 0
  6834                           ; switch strategies available:
  6835                           ; Name         Instructions Cycles
  6836                           ; simple_byte            4     3 (average)
  6837                           ;	Chosen strategy is simple_byte
  6838  006D64  5004               	movf	??__get_fat+1,w,c
  6839  006D66  0A00               	xorlw	0	; case 0
  6840  006D68  A4D8               	btfss	status,2,c
  6841  006D6A  D7F6               	goto	l1978
  6842                           
  6843                           ; Switch size 1, requested type "space"
  6844                           ; Number of cases is 6, Range of values is 0 to 5
  6845                           ; switch strategies available:
  6846                           ; Name         Instructions Cycles
  6847                           ; simple_byte           19    10 (average)
  6848                           ;	Chosen strategy is simple_byte
  6849  006D6C  5003               	movf	??__get_fat,w,c
  6850  006D6E  0A00               	xorlw	0	; case 0
  6851  006D70  B4D8               	btfsc	status,2,c
  6852  006D72  D7E6               	goto	l1971
  6853  006D74  0A01               	xorlw	1	; case 1
  6854  006D76  B4D8               	btfsc	status,2,c
  6855  006D78  D7E5               	goto	l1973
  6856  006D7A  0A03               	xorlw	3	; case 2
  6857  006D7C  B4D8               	btfsc	status,2,c
  6858  006D7E  D7E4               	goto	l1974
  6859  006D80  0A01               	xorlw	1	; case 3
  6860  006D82  B4D8               	btfsc	status,2,c
  6861  006D84  D7E3               	goto	l1975
  6862  006D86  0A07               	xorlw	7	; case 4
  6863  006D88  B4D8               	btfsc	status,2,c
  6864  006D8A  D7E2               	goto	l1976
  6865  006D8C  0A01               	xorlw	1	; case 5
  6866  006D8E  B4D8               	btfsc	status,2,c
  6867  006D90  D7E1               	goto	l1977
  6868  006D92  D7E2               	goto	l1978
  6869  006D94                     __end_of__get_fat:
  6870                           	opt stack 0
  6871                           tblptru	equ	0xFF8
  6872                           tblptrh	equ	0xFF7
  6873                           tblptrl	equ	0xFF6
  6874                           tablat	equ	0xFF5
  6875                           intcon	equ	0xFF2
  6876                           intcon3	equ	0xFF0
  6877                           postinc0	equ	0xFEE
  6878                           wreg	equ	0xFE8
  6879                           postdec1	equ	0xFE5
  6880                           plusw1	equ	0xFE3
  6881                           fsr1h	equ	0xFE2
  6882                           fsr1l	equ	0xFE1
  6883                           indf2	equ	0xFDF
  6884                           postinc2	equ	0xFDE
  6885                           plusw2	equ	0xFDB
  6886                           fsr2h	equ	0xFDA
  6887                           fsr2l	equ	0xFD9
  6888                           status	equ	0xFD8
  6889                           
  6890 ;; *************** function __get_data *****************
  6891 ;; Defined at:
  6892 ;;		line 914 in file "fat16.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  idx             2    0[COMRAM] unsigned int 
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;		None
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  1    wreg      unsigned char 
  6899 ;; Registers used:
  6900 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6909 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6910 ;;Total ram usage:        2 bytes
  6911 ;; Hardware stack levels used:    1
  6912 ;; This function calls:
  6913 ;;		Nothing
  6914 ;; This function is called by:
  6915 ;;		_fat_format
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           	psect	text24
  6920  007798                     __ptext24:
  6921                           	opt stack 0
  6922  007798                     __get_data:
  6923                           	opt stack 27
  6924                           
  6925                           ;fat16.c: 916: if (idx < 12)
  6926                           
  6927                           ;incstack = 0
  6928  007798  5002               	movf	__get_data@idx+1,w,c
  6929  00779A  E110               	bnz	l11737
  6930  00779C  0E0C               	movlw	12
  6931  00779E  5C01               	subwf	__get_data@idx,w,c
  6932  0077A0  B0D8               	btfsc	status,0,c
  6933  0077A2  D00C               	goto	l2014
  6934                           
  6935                           ;fat16.c: 917: {;fat16.c: 918: return "Hello World!"[idx];
  6936  0077A4  0ECF               	movlw	low STR_12
  6937  0077A6  2401               	addwf	__get_data@idx,w,c
  6938  0077A8  6EF6               	movwf	tblptrl,c
  6939  0077AA  0E8F               	movlw	high STR_12
  6940  0077AC  2002               	addwfc	__get_data@idx+1,w,c
  6941  0077AE  6EF7               	movwf	tblptrh,c
  6942  0077B0                     	if	1	;There are 3 active tblptr bytes
  6943  0077B0  6AF8               	clrf	tblptru,c
  6944  0077B2  0E00               	movlw	low (__mediumconst shr (0+16))
  6945  0077B4  22F8               	addwfc	tblptru,f,c
  6946  0077B6                     	endif
  6947  0077B6  0008               	tblrd		*
  6948  0077B8  50F5               	movf	tablat,w,c
  6949  0077BA  0012               	return	
  6950  0077BC                     l2014:
  6951  0077BC                     l11737:
  6952                           
  6953                           ;fat16.c: 919: };fat16.c: 920: return 0X00;
  6954  0077BC  0E00               	movlw	0
  6955  0077BE  0012               	return	
  6956  0077C0                     __end_of__get_data:
  6957                           	opt stack 0
  6958                           tblptru	equ	0xFF8
  6959                           tblptrh	equ	0xFF7
  6960                           tblptrl	equ	0xFF6
  6961                           tablat	equ	0xFF5
  6962                           intcon	equ	0xFF2
  6963                           intcon3	equ	0xFF0
  6964                           postinc0	equ	0xFEE
  6965                           wreg	equ	0xFE8
  6966                           postdec1	equ	0xFE5
  6967                           plusw1	equ	0xFE3
  6968                           fsr1h	equ	0xFE2
  6969                           fsr1l	equ	0xFE1
  6970                           indf2	equ	0xFDF
  6971                           postinc2	equ	0xFDE
  6972                           plusw2	equ	0xFDB
  6973                           fsr2h	equ	0xFDA
  6974                           fsr2l	equ	0xFD9
  6975                           status	equ	0xFD8
  6976                           
  6977 ;; *************** function __system_timer0_init *****************
  6978 ;; Defined at:
  6979 ;;		line 110 in file "os.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;		None
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;		None
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      void 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6997 ;;Total ram usage:        0 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; This function calls:
  7000 ;;		Nothing
  7001 ;; This function is called by:
  7002 ;;		_system_init
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           	psect	text25
  7007  007928                     __ptext25:
  7008                           	opt stack 0
  7009  007928                     __system_timer0_init:
  7010                           	opt stack 29
  7011                           
  7012                           ;os.c: 113: T0CONbits.T0CS = 0;
  7013                           
  7014                           ;incstack = 0
  7015  007928  9AD5               	bcf	4053,5,c	;volatile
  7016                           
  7017                           ;os.c: 115: T0CONbits.T08BIT = 0;
  7018  00792A  9CD5               	bcf	4053,6,c	;volatile
  7019                           
  7020                           ;os.c: 117: T0CONbits.T0PS2 = 0;
  7021  00792C  94D5               	bcf	4053,2,c	;volatile
  7022                           
  7023                           ;os.c: 118: T0CONbits.T0PS1 = 1;
  7024  00792E  82D5               	bsf	4053,1,c	;volatile
  7025                           
  7026                           ;os.c: 119: T0CONbits.T0PS0 = 0;
  7027  007930  90D5               	bcf	4053,0,c	;volatile
  7028                           
  7029                           ;os.c: 121: T0CONbits.PSA = 0;
  7030  007932  96D5               	bcf	4053,3,c	;volatile
  7031                           
  7032                           ;os.c: 123: TMR0H = 0xD1;
  7033  007934  0ED1               	movlw	209
  7034  007936  6ED7               	movwf	4055,c	;volatile
  7035                           
  7036                           ;os.c: 124: TMR0L = 0x20;
  7037  007938  0E20               	movlw	32
  7038  00793A  6ED6               	movwf	4054,c	;volatile
  7039                           
  7040                           ;os.c: 126: T0CONbits.TMR0ON = 1;
  7041  00793C  8ED5               	bsf	4053,7,c	;volatile
  7042                           
  7043                           ;os.c: 130: INTCONbits.TMR0IF = 0;
  7044  00793E  94F2               	bcf	intcon,2,c	;volatile
  7045                           
  7046                           ;os.c: 133: os.timeSlot = 0;
  7047  007940  0E00               	movlw	0
  7048  007942  0100               	movlb	0	; () banked
  7049  007944  6F62               	movwf	(_os+2)& (0+255),b	;volatile
  7050                           
  7051                           ; BSR set to: 0
  7052  007946  0012               	return		;funcret
  7053  007948                     __end_of__system_timer0_init:
  7054                           	opt stack 0
  7055                           tblptru	equ	0xFF8
  7056                           tblptrh	equ	0xFF7
  7057                           tblptrl	equ	0xFF6
  7058                           tablat	equ	0xFF5
  7059                           intcon	equ	0xFF2
  7060                           intcon3	equ	0xFF0
  7061                           postinc0	equ	0xFEE
  7062                           wreg	equ	0xFE8
  7063                           postdec1	equ	0xFE5
  7064                           plusw1	equ	0xFE3
  7065                           fsr1h	equ	0xFE2
  7066                           fsr1l	equ	0xFE1
  7067                           indf2	equ	0xFDF
  7068                           postinc2	equ	0xFDE
  7069                           plusw2	equ	0xFDB
  7070                           fsr2h	equ	0xFDA
  7071                           fsr2l	equ	0xFD9
  7072                           status	equ	0xFD8
  7073                           
  7074 ;; *************** function __system_encoder_init *****************
  7075 ;; Defined at:
  7076 ;;		line 71 in file "os.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;		None
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;		None
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  1    wreg      void 
  7083 ;; Registers used:
  7084 ;;		wreg, status,2
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7094 ;;Total ram usage:        0 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; This function calls:
  7097 ;;		Nothing
  7098 ;; This function is called by:
  7099 ;;		_system_init
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           	psect	text26
  7104  0073AC                     __ptext26:
  7105                           	opt stack 0
  7106  0073AC                     __system_encoder_init:
  7107                           	opt stack 29
  7108                           
  7109                           ;os.c: 73: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;incstack = 0
  7113  0073AC  0E55               	movlw	85
  7114  0073AE  6EA7               	movwf	4007,c	;volsfr
  7115  0073B0  0EAA               	movlw	170
  7116  0073B2  6EA7               	movwf	4007,c	;volsfr
  7117  0073B4  010E               	movlb	14	; () banked
  7118  0073B6  91BF               	bcf	191,0,b	;volatile
  7119                           
  7120                           ;os.c: 74: RPINR1 = 0;
  7121  0073B8  0E00               	movlw	0
  7122  0073BA  6FE1               	movwf	225,b	;volatile
  7123                           
  7124                           ;os.c: 75: RPINR3 = 9;
  7125  0073BC  0E09               	movlw	9
  7126  0073BE  6FE3               	movwf	227,b	;volatile
  7127                           
  7128                           ;os.c: 76: RPINR2 = 10;
  7129  0073C0  0E0A               	movlw	10
  7130  0073C2  6FE2               	movwf	226,b	;volatile
  7131                           
  7132                           ;os.c: 77: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  7133  0073C4  0E55               	movlw	85
  7134  0073C6  6EA7               	movwf	4007,c	;volsfr
  7135  0073C8  0EAA               	movlw	170
  7136  0073CA  6EA7               	movwf	4007,c	;volsfr
  7137                           
  7138                           ; BSR set to: 14
  7139  0073CC  91BF               	bcf	191,0,b	;volatile
  7140                           
  7141                           ; BSR set to: 14
  7142                           ;os.c: 80: INTCON2bits.INTEDG1 = 0;
  7143  0073CE  9AF1               	bcf	intcon2,5,c	;volatile
  7144                           
  7145                           ; BSR set to: 14
  7146                           ;os.c: 81: INTCON3bits.INT1IF = 0;
  7147  0073D0  90F0               	bcf	intcon3,0,c	;volatile
  7148                           
  7149                           ; BSR set to: 14
  7150                           ;os.c: 83: INTCON2bits.INTEDG2 = 1;
  7151  0073D2  88F1               	bsf	intcon2,4,c	;volatile
  7152                           
  7153                           ; BSR set to: 14
  7154                           ;os.c: 84: INTCON3bits.INT2IF = 0;
  7155  0073D4  92F0               	bcf	intcon3,1,c	;volatile
  7156                           
  7157                           ; BSR set to: 14
  7158                           ;os.c: 86: INTCON2bits.INTEDG3 = 1;
  7159  0073D6  86F1               	bsf	intcon2,3,c	;volatile
  7160                           
  7161                           ; BSR set to: 14
  7162                           ;os.c: 87: INTCON3bits.INT3IF = 0;
  7163  0073D8  94F0               	bcf	intcon3,2,c	;volatile
  7164                           
  7165                           ;os.c: 89: os.encoderCount = 0;
  7166  0073DA  0E00               	movlw	0
  7167  0073DC  0100               	movlb	0	; () banked
  7168  0073DE  6F60               	movwf	_os& (0+255),b	;volatile
  7169                           
  7170                           ;os.c: 90: os.buttonCount = 0;
  7171  0073E0  0E00               	movlw	0
  7172  0073E2  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  7173                           
  7174                           ; BSR set to: 0
  7175  0073E4  0012               	return		;funcret
  7176  0073E6                     __end_of__system_encoder_init:
  7177                           	opt stack 0
  7178                           tblptru	equ	0xFF8
  7179                           tblptrh	equ	0xFF7
  7180                           tblptrl	equ	0xFF6
  7181                           tablat	equ	0xFF5
  7182                           intcon	equ	0xFF2
  7183                           intcon2	equ	0xFF1
  7184                           intcon3	equ	0xFF0
  7185                           postinc0	equ	0xFEE
  7186                           wreg	equ	0xFE8
  7187                           postdec1	equ	0xFE5
  7188                           plusw1	equ	0xFE3
  7189                           fsr1h	equ	0xFE2
  7190                           fsr1l	equ	0xFE1
  7191                           indf2	equ	0xFDF
  7192                           postinc2	equ	0xFDE
  7193                           plusw2	equ	0xFDB
  7194                           fsr2h	equ	0xFDA
  7195                           fsr2l	equ	0xFD9
  7196                           status	equ	0xFD8
  7197                           
  7198 ;; *************** function _display_update *****************
  7199 ;; Defined at:
  7200 ;;		line 458 in file "display.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;		None
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;		None
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  1    wreg      void 
  7207 ;; Registers used:
  7208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7218 ;;Total ram usage:        0 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; Hardware stack levels required when called:    4
  7221 ;; This function calls:
  7222 ;;		_i2c_display_cursor
  7223 ;;		_i2c_display_write_fixed
  7224 ;; This function is called by:
  7225 ;;		_main
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           	psect	text27
  7230  00666E                     __ptext27:
  7231                           	opt stack 0
  7232  00666E                     _display_update:
  7233                           	opt stack 26
  7234                           
  7235                           ;display.c: 460: i2c_display_cursor(0, 0);
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;incstack = 0
  7239  00666E  0E00               	movlw	0
  7240  006670  6E0E               	movwf	i2c_display_cursor@position,c
  7241  006672  0E00               	movlw	0
  7242  006674  EC1A  F03C         	call	_i2c_display_cursor
  7243                           
  7244                           ;display.c: 461: i2c_display_write_fixed(&display_content[0][0], 20);
  7245  006678  0E6C               	movlw	low _display_content
  7246  00667A  6E06               	movwf	i2c_display_write_fixed@data,c
  7247  00667C  0E01               	movlw	high _display_content
  7248  00667E  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7249  006680  0E14               	movlw	20
  7250  006682  6E08               	movwf	i2c_display_write_fixed@length,c
  7251  006684  ECCA  F036         	call	_i2c_display_write_fixed	;wreg free
  7252                           
  7253                           ;display.c: 462: i2c_display_cursor(1, 0);
  7254  006688  0E00               	movlw	0
  7255  00668A  6E0E               	movwf	i2c_display_cursor@position,c
  7256  00668C  0E01               	movlw	1
  7257  00668E  EC1A  F03C         	call	_i2c_display_cursor
  7258                           
  7259                           ;display.c: 463: i2c_display_write_fixed(&display_content[1][0], 20);
  7260  006692  0E80               	movlw	low (_display_content+20)
  7261  006694  6E06               	movwf	i2c_display_write_fixed@data,c
  7262  006696  0E01               	movlw	high (_display_content+20)
  7263  006698  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7264  00669A  0E14               	movlw	20
  7265  00669C  6E08               	movwf	i2c_display_write_fixed@length,c
  7266  00669E  ECCA  F036         	call	_i2c_display_write_fixed	;wreg free
  7267                           
  7268                           ;display.c: 464: i2c_display_cursor(2, 0);
  7269  0066A2  0E00               	movlw	0
  7270  0066A4  6E0E               	movwf	i2c_display_cursor@position,c
  7271  0066A6  0E02               	movlw	2
  7272  0066A8  EC1A  F03C         	call	_i2c_display_cursor
  7273                           
  7274                           ;display.c: 465: i2c_display_write_fixed(&display_content[2][0], 20);
  7275  0066AC  0E94               	movlw	low (_display_content+40)
  7276  0066AE  6E06               	movwf	i2c_display_write_fixed@data,c
  7277  0066B0  0E01               	movlw	high (_display_content+40)
  7278  0066B2  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7279  0066B4  0E14               	movlw	20
  7280  0066B6  6E08               	movwf	i2c_display_write_fixed@length,c
  7281  0066B8  ECCA  F036         	call	_i2c_display_write_fixed	;wreg free
  7282                           
  7283                           ;display.c: 466: i2c_display_cursor(3, 0);
  7284  0066BC  0E00               	movlw	0
  7285  0066BE  6E0E               	movwf	i2c_display_cursor@position,c
  7286  0066C0  0E03               	movlw	3
  7287  0066C2  EC1A  F03C         	call	_i2c_display_cursor
  7288                           
  7289                           ;display.c: 467: i2c_display_write_fixed(&display_content[3][0], 20);
  7290  0066C6  0EA8               	movlw	low (_display_content+60)
  7291  0066C8  6E06               	movwf	i2c_display_write_fixed@data,c
  7292  0066CA  0E01               	movlw	high (_display_content+60)
  7293  0066CC  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7294  0066CE  0E14               	movlw	20
  7295  0066D0  6E08               	movwf	i2c_display_write_fixed@length,c
  7296  0066D2  ECCA  F036         	call	_i2c_display_write_fixed	;wreg free
  7297  0066D6  0012               	return		;funcret
  7298  0066D8                     __end_of_display_update:
  7299                           	opt stack 0
  7300                           tblptru	equ	0xFF8
  7301                           tblptrh	equ	0xFF7
  7302                           tblptrl	equ	0xFF6
  7303                           tablat	equ	0xFF5
  7304                           intcon	equ	0xFF2
  7305                           intcon2	equ	0xFF1
  7306                           intcon3	equ	0xFF0
  7307                           postinc0	equ	0xFEE
  7308                           wreg	equ	0xFE8
  7309                           postdec1	equ	0xFE5
  7310                           plusw1	equ	0xFE3
  7311                           fsr1h	equ	0xFE2
  7312                           fsr1l	equ	0xFE1
  7313                           indf2	equ	0xFDF
  7314                           postinc2	equ	0xFDE
  7315                           plusw2	equ	0xFDB
  7316                           fsr2h	equ	0xFDA
  7317                           fsr2l	equ	0xFD9
  7318                           status	equ	0xFD8
  7319                           
  7320 ;; *************** function _i2c_display_write_fixed *****************
  7321 ;; Defined at:
  7322 ;;		line 262 in file "i2c.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  data            2    5[COMRAM] PTR unsigned char 
  7325 ;;		 -> display_content(80), 
  7326 ;;  length          1    7[COMRAM] unsigned char 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  pos             1    8[COMRAM] unsigned char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7338 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7341 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7342 ;;Total ram usage:        4 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    1
  7345 ;; This function calls:
  7346 ;;		__i2c_send
  7347 ;;		__i2c_start
  7348 ;;		__i2c_stop
  7349 ;;		__i2c_wait_idle
  7350 ;;		_i2c_set_frequency
  7351 ;; This function is called by:
  7352 ;;		_display_update
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           	psect	text28
  7357  006D94                     __ptext28:
  7358                           	opt stack 0
  7359  006D94                     _i2c_display_write_fixed:
  7360                           	opt stack 28
  7361                           
  7362                           ;i2c.c: 264: uint8_t pos;;i2c.c: 267: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  7363                           
  7364                           ;incstack = 0
  7365  006D94  0E02               	movlw	2
  7366  006D96  ECA1  F03B         	call	_i2c_set_frequency
  7367                           
  7368                           ;i2c.c: 269: _i2c_wait_idle();
  7369  006D9A  ECEF  F035         	call	__i2c_wait_idle	;wreg free
  7370                           
  7371                           ;i2c.c: 270: _i2c_start();
  7372  006D9E  EC9D  F03D         	call	__i2c_start	;wreg free
  7373                           
  7374                           ;i2c.c: 271: _i2c_wait_idle();
  7375  006DA2  ECEF  F035         	call	__i2c_wait_idle	;wreg free
  7376                           
  7377                           ;i2c.c: 272: _i2c_send(0b01111000);
  7378  006DA6  0E78               	movlw	120
  7379  006DA8  ECA1  F03D         	call	__i2c_send
  7380                           
  7381                           ;i2c.c: 273: _i2c_wait_idle();
  7382  006DAC  ECEF  F035         	call	__i2c_wait_idle	;wreg free
  7383                           
  7384                           ;i2c.c: 274: _i2c_send(0b01000000);
  7385  006DB0  0E40               	movlw	64
  7386  006DB2  ECA1  F03D         	call	__i2c_send
  7387                           
  7388                           ;i2c.c: 275: _i2c_wait_idle();
  7389  006DB6  ECEF  F035         	call	__i2c_wait_idle	;wreg free
  7390                           
  7391                           ;i2c.c: 278: for(pos=0; pos<length; ++pos)
  7392  006DBA  0E00               	movlw	0
  7393  006DBC  6E09               	movwf	i2c_display_write_fixed@pos,c
  7394  006DBE  D00E               	goto	l1167
  7395  006DC0                     
  7396                           ;i2c.c: 279: {;i2c.c: 280: _i2c_send(data[pos]);
  7397  006DC0  5009               	movf	i2c_display_write_fixed@pos,w,c
  7398  006DC2  0D01               	mullw	1
  7399  006DC4  50F3               	movf	prodl,w,c
  7400  006DC6  2406               	addwf	i2c_display_write_fixed@data,w,c
  7401  006DC8  6ED9               	movwf	fsr2l,c
  7402  006DCA  50F4               	movf	prodh,w,c
  7403  006DCC  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
  7404  006DCE  6EDA               	movwf	fsr2h,c
  7405  006DD0  50DF               	movf	indf2,w,c
  7406  006DD2  ECA1  F03D         	call	__i2c_send
  7407                           
  7408                           ;i2c.c: 281: _i2c_wait_idle();
  7409  006DD6  ECEF  F035         	call	__i2c_wait_idle	;wreg free
  7410  006DDA  2A09               	incf	i2c_display_write_fixed@pos,f,c
  7411  006DDC                     l1167:
  7412  006DDC  5008               	movf	i2c_display_write_fixed@length,w,c
  7413  006DDE  5C09               	subwf	i2c_display_write_fixed@pos,w,c
  7414  006DE0  A0D8               	btfss	status,0,c
  7415  006DE2  D7EE               	goto	l1168
  7416                           
  7417                           ;i2c.c: 282: };i2c.c: 284: _i2c_stop();
  7418  006DE4  EC99  F03D         	call	__i2c_stop	;wreg free
  7419  006DE8  0012               	return		;funcret
  7420  006DEA                     __end_of_i2c_display_write_fixed:
  7421                           	opt stack 0
  7422                           tblptru	equ	0xFF8
  7423                           tblptrh	equ	0xFF7
  7424                           tblptrl	equ	0xFF6
  7425                           tablat	equ	0xFF5
  7426                           prodh	equ	0xFF4
  7427                           prodl	equ	0xFF3
  7428                           intcon	equ	0xFF2
  7429                           intcon2	equ	0xFF1
  7430                           intcon3	equ	0xFF0
  7431                           postinc0	equ	0xFEE
  7432                           wreg	equ	0xFE8
  7433                           postdec1	equ	0xFE5
  7434                           plusw1	equ	0xFE3
  7435                           fsr1h	equ	0xFE2
  7436                           fsr1l	equ	0xFE1
  7437                           indf2	equ	0xFDF
  7438                           postinc2	equ	0xFDE
  7439                           plusw2	equ	0xFDB
  7440                           fsr2h	equ	0xFDA
  7441                           fsr2l	equ	0xFD9
  7442                           status	equ	0xFD8
  7443                           
  7444 ;; *************** function _i2c_display_cursor *****************
  7445 ;; Defined at:
  7446 ;;		line 222 in file "i2c.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;  line            1    wreg     unsigned char 
  7449 ;;  position        1   13[COMRAM] unsigned char 
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;  line            1   14[COMRAM] unsigned char 
  7452 ;;  address         1   15[COMRAM] unsigned char 
  7453 ;; Return value:  Size  Location     Type
  7454 ;;                  1    wreg      void 
  7455 ;; Registers used:
  7456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7462 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7463 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7465 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7466 ;;Total ram usage:        3 bytes
  7467 ;; Hardware stack levels used:    1
  7468 ;; Hardware stack levels required when called:    3
  7469 ;; This function calls:
  7470 ;;		__ic2_display_set_address
  7471 ;;		_i2c_set_frequency
  7472 ;; This function is called by:
  7473 ;;		_display_update
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text29
  7478  007834                     __ptext29:
  7479                           	opt stack 0
  7480  007834                     _i2c_display_cursor:
  7481                           	opt stack 26
  7482                           
  7483                           ;incstack = 0
  7484                           ;i2c_display_cursor@line stored from wreg
  7485  007834  6E0F               	movwf	i2c_display_cursor@line,c
  7486                           
  7487                           ;i2c.c: 224: uint8_t address;;i2c.c: 227: line &= 0b11;
  7488  007836  0E03               	movlw	3
  7489  007838  160F               	andwf	i2c_display_cursor@line,f,c
  7490                           
  7491                           ;i2c.c: 228: address = line<<5;
  7492  00783A  380F               	swapf	i2c_display_cursor@line,w,c
  7493  00783C  46E8               	rlncf	wreg,f,c
  7494  00783E  0BE0               	andlw	224
  7495  007840  6E10               	movwf	i2c_display_cursor@address,c
  7496                           
  7497                           ;i2c.c: 229: position &= 0b11111;
  7498  007842  0E1F               	movlw	31
  7499  007844  160E               	andwf	i2c_display_cursor@position,f,c
  7500                           
  7501                           ;i2c.c: 230: address |= position;
  7502  007846  500E               	movf	i2c_display_cursor@position,w,c
  7503  007848  1210               	iorwf	i2c_display_cursor@address,f,c
  7504                           
  7505                           ;i2c.c: 233: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  7506  00784A  0E02               	movlw	2
  7507  00784C  ECA1  F03B         	call	_i2c_set_frequency
  7508                           
  7509                           ;i2c.c: 236: _ic2_display_set_address(address);
  7510  007850  5010               	movf	i2c_display_cursor@address,w,c
  7511  007852  EC07  F03C         	call	__ic2_display_set_address
  7512  007856  0012               	return		;funcret
  7513  007858                     __end_of_i2c_display_cursor:
  7514                           	opt stack 0
  7515                           tblptru	equ	0xFF8
  7516                           tblptrh	equ	0xFF7
  7517                           tblptrl	equ	0xFF6
  7518                           tablat	equ	0xFF5
  7519                           prodh	equ	0xFF4
  7520                           prodl	equ	0xFF3
  7521                           intcon	equ	0xFF2
  7522                           intcon2	equ	0xFF1
  7523                           intcon3	equ	0xFF0
  7524                           postinc0	equ	0xFEE
  7525                           wreg	equ	0xFE8
  7526                           postdec1	equ	0xFE5
  7527                           plusw1	equ	0xFE3
  7528                           fsr1h	equ	0xFE2
  7529                           fsr1l	equ	0xFE1
  7530                           indf2	equ	0xFDF
  7531                           postinc2	equ	0xFDE
  7532                           plusw2	equ	0xFDB
  7533                           fsr2h	equ	0xFDA
  7534                           fsr2l	equ	0xFD9
  7535                           status	equ	0xFD8
  7536                           
  7537 ;; *************** function __ic2_display_set_address *****************
  7538 ;; Defined at:
  7539 ;;		line 186 in file "i2c.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;  address         1    wreg     unsigned char 
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;  address         1   10[COMRAM] unsigned char 
  7544 ;;  data_array      2   11[COMRAM] unsigned char [2]
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      void 
  7547 ;; Registers used:
  7548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7555 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7557 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7558 ;;Total ram usage:        3 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:    2
  7561 ;; This function calls:
  7562 ;;		__i2c_write
  7563 ;;		_i2c_set_frequency
  7564 ;; This function is called by:
  7565 ;;		_i2c_display_cursor
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           	psect	text30
  7570  00780E                     __ptext30:
  7571                           	opt stack 0
  7572  00780E                     __ic2_display_set_address:
  7573                           	opt stack 26
  7574                           
  7575                           ;incstack = 0
  7576                           ;__ic2_display_set_address@address stored from wreg
  7577  00780E  6E0B               	movwf	__ic2_display_set_address@address,c
  7578                           
  7579                           ;i2c.c: 188: uint8_t data_array[2];;i2c.c: 189: data_array[0] = 0b00000000;
  7580  007810  0E00               	movlw	0
  7581  007812  6E0C               	movwf	__ic2_display_set_address@data_array,c
  7582                           
  7583                           ;i2c.c: 190: data_array[1] = 0b10000000 | address;
  7584  007814  500B               	movf	__ic2_display_set_address@address,w,c
  7585  007816  0980               	iorlw	128
  7586  007818  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
  7587                           
  7588                           ;i2c.c: 193: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  7589  00781A  0E02               	movlw	2
  7590  00781C  ECA1  F03B         	call	_i2c_set_frequency
  7591                           
  7592                           ;i2c.c: 196: _i2c_write(0b01111000, &data_array[0], 2);
  7593  007820  0E0C               	movlw	low __ic2_display_set_address@data_array
  7594  007822  6E06               	movwf	__i2c_write@data,c
  7595  007824  0E00               	movlw	high __ic2_display_set_address@data_array
  7596  007826  6E07               	movwf	__i2c_write@data+1,c
  7597  007828  0E02               	movlw	2
  7598  00782A  6E08               	movwf	__i2c_write@length,c
  7599  00782C  0E78               	movlw	120
  7600  00782E  EC8D  F038         	call	__i2c_write
  7601  007832  0012               	return		;funcret
  7602  007834                     __end_of__ic2_display_set_address:
  7603                           	opt stack 0
  7604                           tblptru	equ	0xFF8
  7605                           tblptrh	equ	0xFF7
  7606                           tblptrl	equ	0xFF6
  7607                           tablat	equ	0xFF5
  7608                           prodh	equ	0xFF4
  7609                           prodl	equ	0xFF3
  7610                           intcon	equ	0xFF2
  7611                           intcon2	equ	0xFF1
  7612                           intcon3	equ	0xFF0
  7613                           postinc0	equ	0xFEE
  7614                           wreg	equ	0xFE8
  7615                           postdec1	equ	0xFE5
  7616                           plusw1	equ	0xFE3
  7617                           fsr1h	equ	0xFE2
  7618                           fsr1l	equ	0xFE1
  7619                           indf2	equ	0xFDF
  7620                           postinc2	equ	0xFDE
  7621                           plusw2	equ	0xFDB
  7622                           fsr2h	equ	0xFDA
  7623                           fsr2l	equ	0xFD9
  7624                           status	equ	0xFD8
  7625                           
  7626 ;; *************** function _display_prepare *****************
  7627 ;; Defined at:
  7628 ;;		line 221 in file "display.c"
  7629 ;; Parameters:    Size  Location     Type
  7630 ;;  mode            1    wreg     unsigned char 
  7631 ;; Auto vars:     Size  Location     Type
  7632 ;;  mode            1   42[COMRAM] unsigned char 
  7633 ;; Return value:  Size  Location     Type
  7634 ;;                  1    wreg      void 
  7635 ;; Registers used:
  7636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7637 ;; Tracked objects:
  7638 ;;		On entry : 0/0
  7639 ;;		On exit  : 0/0
  7640 ;;		Unchanged: 0/0
  7641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7645 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7646 ;;Total ram usage:        3 bytes
  7647 ;; Hardware stack levels used:    1
  7648 ;; Hardware stack levels required when called:    6
  7649 ;; This function calls:
  7650 ;;		__display_checked
  7651 ;;		__display_clear
  7652 ;;		__display_done
  7653 ;;		__display_failed
  7654 ;;		__display_found
  7655 ;;		__display_programming
  7656 ;;		__display_start
  7657 ;;		__display_verify
  7658 ;; This function is called by:
  7659 ;;		_main
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           	psect	text31
  7664  004B6C                     __ptext31:
  7665                           	opt stack 0
  7666  004B6C                     _display_prepare:
  7667                           	opt stack 24
  7668                           
  7669                           ;incstack = 0
  7670                           ;display_prepare@mode stored from wreg
  7671  004B6C  6E2B               	movwf	display_prepare@mode,c
  7672                           
  7673                           ;display.c: 223: _display_clear();
  7674  004B6E  EC69  F038         	call	__display_clear	;wreg free
  7675                           
  7676                           ;display.c: 225: switch(mode&0xF0)
  7677  004B72  D015               	goto	l1421
  7678  004B74                     
  7679                           ;display.c: 228: _display_start();
  7680  004B74  EC3F  F01B         	call	__display_start	;wreg free
  7681                           
  7682                           ;display.c: 229: break;
  7683  004B78  D03B               	goto	l1430
  7684  004B7A                     
  7685                           ;display.c: 232: _display_found();
  7686  004B7A  EC9C  F014         	call	__display_found	;wreg free
  7687                           
  7688                           ;display.c: 233: break;
  7689  004B7E  D038               	goto	l1430
  7690  004B80                     
  7691                           ;display.c: 236: _display_verify();
  7692  004B80  EC2C  F01D         	call	__display_verify	;wreg free
  7693                           
  7694                           ;display.c: 237: break;
  7695  004B84  D035               	goto	l1430
  7696  004B86                     
  7697                           ;display.c: 240: _display_checked();
  7698  004B86  EC0B  F019         	call	__display_checked	;wreg free
  7699                           
  7700                           ;display.c: 241: break;
  7701  004B8A  D032               	goto	l1430
  7702  004B8C                     
  7703                           ;display.c: 244: _display_failed();
  7704  004B8C  EC98  F007         	call	__display_failed	;wreg free
  7705                           
  7706                           ;display.c: 245: break;
  7707  004B90  D02F               	goto	l1430
  7708  004B92                     
  7709                           ;display.c: 248: _display_programming();
  7710  004B92  EC77  F016         	call	__display_programming	;wreg free
  7711                           
  7712                           ;display.c: 249: break;
  7713  004B96  D02C               	goto	l1430
  7714  004B98                     
  7715                           ;display.c: 252: _display_done();
  7716  004B98  ECC9  F019         	call	__display_done	;wreg free
  7717                           
  7718                           ;display.c: 254: }
  7719                           
  7720                           ;display.c: 253: break;
  7721  004B9C  D029               	goto	l1430
  7722  004B9E                     l1421:
  7723  004B9E  502B               	movf	display_prepare@mode,w,c
  7724  004BA0  0BF0               	andlw	240
  7725  004BA2  6E29               	movwf	??_display_prepare& (0+255),c
  7726  004BA4  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
  7727                           
  7728                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7729                           ; Switch size 1, requested type "space"
  7730                           ; Number of cases is 1, Range of values is 0 to 0
  7731                           ; switch strategies available:
  7732                           ; Name         Instructions Cycles
  7733                           ; simple_byte            4     3 (average)
  7734                           ;	Chosen strategy is simple_byte
  7735  004BA6  502A               	movf	??_display_prepare+1,w,c
  7736  004BA8  0A00               	xorlw	0	; case 0
  7737  004BAA  A4D8               	btfss	status,2,c
  7738  004BAC  D021               	goto	l1430
  7739                           
  7740                           ; Switch size 1, requested type "space"
  7741                           ; Number of cases is 7, Range of values is 0 to 96
  7742                           ; switch strategies available:
  7743                           ; Name         Instructions Cycles
  7744                           ; simple_byte           22    12 (average)
  7745                           ;	Chosen strategy is simple_byte
  7746  004BAE  5029               	movf	??_display_prepare,w,c
  7747  004BB0  0A00               	xorlw	0	; case 0
  7748  004BB2  B4D8               	btfsc	status,2,c
  7749  004BB4  D7DF               	goto	l1422
  7750  004BB6  0A10               	xorlw	16	; case 16
  7751  004BB8  B4D8               	btfsc	status,2,c
  7752  004BBA  D7DF               	goto	l1424
  7753  004BBC  0A30               	xorlw	48	; case 32
  7754  004BBE  B4D8               	btfsc	status,2,c
  7755  004BC0  D7DF               	goto	l1425
  7756  004BC2  0A10               	xorlw	16	; case 48
  7757  004BC4  B4D8               	btfsc	status,2,c
  7758  004BC6  D7DF               	goto	l1426
  7759  004BC8  0A70               	xorlw	112	; case 64
  7760  004BCA  B4D8               	btfsc	status,2,c
  7761  004BCC  D7DF               	goto	l1427
  7762  004BCE  0A10               	xorlw	16	; case 80
  7763  004BD0  B4D8               	btfsc	status,2,c
  7764  004BD2  D7DF               	goto	l1428
  7765  004BD4  0A30               	xorlw	48	; case 96
  7766  004BD6  B4D8               	btfsc	status,2,c
  7767  004BD8  D7DF               	goto	l1429
  7768                           
  7769                           ;display.c: 257: switch((os.timeSlot>>5)&0b11)
  7770  004BDA  D00A               	goto	l1430
  7771  004BDC                     
  7772                           ;display.c: 260: display_content[0][17] = '.';
  7773  004BDC  0E2E               	movlw	46
  7774  004BDE  0101               	movlb	1	; () banked
  7775  004BE0  6F7D               	movwf	(_display_content+17)& (0+255),b
  7776  004BE2                     l1432:
  7777                           
  7778                           ;display.c: 263: display_content[0][16] = '.';
  7779  004BE2  0E2E               	movlw	46
  7780  004BE4  0101               	movlb	1	; () banked
  7781  004BE6  6F7C               	movwf	(_display_content+16)& (0+255),b
  7782  004BE8                     l1433:
  7783                           
  7784                           ;display.c: 266: display_content[0][15] = '.';
  7785  004BE8  0E2E               	movlw	46
  7786  004BEA  0101               	movlb	1	; () banked
  7787  004BEC  6F7B               	movwf	(_display_content+15)& (0+255),b
  7788                           
  7789                           ;display.c: 268: }
  7790  004BEE  D015               	goto	l1434
  7791  004BF0                     l1430:
  7792                           
  7793                           ; BSR set to: 1
  7794  004BF0  0100               	movlb	0	; () banked
  7795  004BF2  3962               	swapf	(_os+2)& (0+255),w,b	;volatile
  7796  004BF4  42E8               	rrncf	wreg,f,c
  7797  004BF6  0B07               	andlw	7
  7798  004BF8  0B03               	andlw	3
  7799  004BFA  6E29               	movwf	??_display_prepare& (0+255),c
  7800  004BFC  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
  7801                           
  7802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7803                           ; Switch size 1, requested type "space"
  7804                           ; Number of cases is 1, Range of values is 0 to 0
  7805                           ; switch strategies available:
  7806                           ; Name         Instructions Cycles
  7807                           ; simple_byte            4     3 (average)
  7808                           ;	Chosen strategy is simple_byte
  7809  004BFE  502A               	movf	??_display_prepare+1,w,c
  7810  004C00  0A00               	xorlw	0	; case 0
  7811  004C02  A4D8               	btfss	status,2,c
  7812  004C04  D00A               	goto	l1434
  7813                           
  7814                           ; BSR set to: 0
  7815                           ; Switch size 1, requested type "space"
  7816                           ; Number of cases is 3, Range of values is 1 to 3
  7817                           ; switch strategies available:
  7818                           ; Name         Instructions Cycles
  7819                           ; simple_byte           10     6 (average)
  7820                           ;	Chosen strategy is simple_byte
  7821  004C06  5029               	movf	??_display_prepare,w,c
  7822  004C08  0A01               	xorlw	1	; case 1
  7823  004C0A  B4D8               	btfsc	status,2,c
  7824  004C0C  D7ED               	goto	l1433
  7825  004C0E  0A03               	xorlw	3	; case 2
  7826  004C10  B4D8               	btfsc	status,2,c
  7827  004C12  D7E7               	goto	l1432
  7828  004C14  0A01               	xorlw	1	; case 3
  7829  004C16  B4D8               	btfsc	status,2,c
  7830  004C18  D7E1               	goto	l1431
  7831  004C1A                     l1434:
  7832                           
  7833                           ;display.c: 273: if(INTCONbits.GIE)
  7834  004C1A  AEF2               	btfss	intcon,7,c	;volatile
  7835  004C1C  D003               	goto	l1435
  7836                           
  7837                           ;display.c: 274: {;display.c: 275: display_content[0][18] = 'I';
  7838  004C1E  0E49               	movlw	73
  7839  004C20  0101               	movlb	1	; () banked
  7840  004C22  6F7E               	movwf	(_display_content+18)& (0+255),b
  7841  004C24                     l1435:
  7842                           
  7843                           ;display.c: 276: };display.c: 278: if(os.buttonCount>0)
  7844                           
  7845                           ; BSR set to: 1
  7846  004C24  0100               	movlb	0	; () banked
  7847  004C26  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  7848  004C28  0A80               	xorlw	128
  7849  004C2A  0F7F               	addlw	-129
  7850  004C2C  A0D8               	btfss	status,0,c
  7851  004C2E  0012               	return	
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;display.c: 279: {;display.c: 280: display_content[3][19] = 'X';
  7855  004C30  0E58               	movlw	88
  7856  004C32  0101               	movlb	1	; () banked
  7857  004C34  6FBB               	movwf	(_display_content+79)& (0+255),b
  7858  004C36  0012               	return	
  7859  004C38                     __end_of_display_prepare:
  7860                           	opt stack 0
  7861                           tblptru	equ	0xFF8
  7862                           tblptrh	equ	0xFF7
  7863                           tblptrl	equ	0xFF6
  7864                           tablat	equ	0xFF5
  7865                           prodh	equ	0xFF4
  7866                           prodl	equ	0xFF3
  7867                           intcon	equ	0xFF2
  7868                           intcon2	equ	0xFF1
  7869                           intcon3	equ	0xFF0
  7870                           postinc0	equ	0xFEE
  7871                           wreg	equ	0xFE8
  7872                           postdec1	equ	0xFE5
  7873                           plusw1	equ	0xFE3
  7874                           fsr1h	equ	0xFE2
  7875                           fsr1l	equ	0xFE1
  7876                           indf2	equ	0xFDF
  7877                           postinc2	equ	0xFDE
  7878                           plusw2	equ	0xFDB
  7879                           fsr2h	equ	0xFDA
  7880                           fsr2l	equ	0xFD9
  7881                           status	equ	0xFD8
  7882                           
  7883 ;; *************** function __display_verify *****************
  7884 ;; Defined at:
  7885 ;;		line 328 in file "display.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;		None
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;  cntr            1   32[COMRAM] unsigned char 
  7890 ;;  start           1    0        unsigned char 
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  1    wreg      void 
  7893 ;; Registers used:
  7894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7903 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7904 ;;Total ram usage:        3 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; Hardware stack levels required when called:    4
  7907 ;; This function calls:
  7908 ;;		__display_itoa_u16
  7909 ;;		_bootloader_get_entries
  7910 ;; This function is called by:
  7911 ;;		_display_prepare
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915                           	psect	text32
  7916  003A58                     __ptext32:
  7917                           	opt stack 0
  7918  003A58                     __display_verify:
  7919                           	opt stack 25
  7920                           
  7921                           ;display.c: 330: uint8_t cntr;;display.c: 331: uint8_t start;;display.c: 332: cntr = 0;
  7922                           
  7923                           ;incstack = 0
  7924  003A58  0E00               	movlw	0
  7925  003A5A  6E21               	movwf	__display_verify@cntr,c
  7926                           
  7927                           ;display.c: 333: while(verify_line1[cntr])
  7928  003A5C  D017               	goto	l1473
  7929  003A5E                     
  7930                           ;display.c: 334: display_content[0][cntr] = verify_line1[cntr++];
  7931  003A5E  5021               	movf	__display_verify@cntr,w,c
  7932  003A60  0D01               	mullw	1
  7933  003A62  0E09               	movlw	low _verify_line1
  7934  003A64  24F3               	addwf	prodl,w,c
  7935  003A66  6EF6               	movwf	tblptrl,c
  7936  003A68  0E8E               	movlw	high _verify_line1
  7937  003A6A  20F4               	addwfc	prodh,w,c
  7938  003A6C  6EF7               	movwf	tblptrh,c
  7939  003A6E                     	if	1	;There are 3 active tblptr bytes
  7940  003A6E  6AF8               	clrf	tblptru,c
  7941  003A70  0E00               	movlw	low (__mediumconst shr (0+16))
  7942  003A72  22F8               	addwfc	tblptru,f,c
  7943  003A74                     	endif
  7944  003A74  5021               	movf	__display_verify@cntr,w,c
  7945  003A76  0D01               	mullw	1
  7946  003A78  0E6C               	movlw	low _display_content
  7947  003A7A  24F3               	addwf	prodl,w,c
  7948  003A7C  6ED9               	movwf	fsr2l,c
  7949  003A7E  0E01               	movlw	high _display_content
  7950  003A80  20F4               	addwfc	prodh,w,c
  7951  003A82  6EDA               	movwf	fsr2h,c
  7952  003A84  0008               	tblrd		*
  7953  003A86  CFF5 FFDF          	movff	tablat,indf2
  7954  003A8A  2A21               	incf	__display_verify@cntr,f,c
  7955  003A8C                     l1473:
  7956  003A8C  5021               	movf	__display_verify@cntr,w,c
  7957  003A8E  0D01               	mullw	1
  7958  003A90  0E09               	movlw	low _verify_line1
  7959  003A92  24F3               	addwf	prodl,w,c
  7960  003A94  6EF6               	movwf	tblptrl,c
  7961  003A96  0E8E               	movlw	high _verify_line1
  7962  003A98  20F4               	addwfc	prodh,w,c
  7963  003A9A  6EF7               	movwf	tblptrh,c
  7964  003A9C                     	if	1	;There are 3 active tblptr bytes
  7965  003A9C  6AF8               	clrf	tblptru,c
  7966  003A9E  0E00               	movlw	low (__mediumconst shr (0+16))
  7967  003AA0  22F8               	addwfc	tblptru,f,c
  7968  003AA2                     	endif
  7969  003AA2  0008               	tblrd		*
  7970  003AA4  50F5               	movf	tablat,w,c
  7971  003AA6  0900               	iorlw	0
  7972  003AA8  A4D8               	btfss	status,2,c
  7973  003AAA  D7D9               	goto	l1474
  7974                           
  7975                           ;display.c: 335: cntr = 0;
  7976  003AAC  0E00               	movlw	0
  7977  003AAE  6E21               	movwf	__display_verify@cntr,c
  7978                           
  7979                           ;display.c: 336: while(verify_line2[cntr])
  7980  003AB0  D017               	goto	l1476
  7981  003AB2                     
  7982                           ;display.c: 337: display_content[1][cntr] = verify_line2[cntr++];
  7983  003AB2  5021               	movf	__display_verify@cntr,w,c
  7984  003AB4  0D01               	mullw	1
  7985  003AB6  0E55               	movlw	low _verify_line2
  7986  003AB8  24F3               	addwf	prodl,w,c
  7987  003ABA  6EF6               	movwf	tblptrl,c
  7988  003ABC  0E8E               	movlw	high _verify_line2
  7989  003ABE  20F4               	addwfc	prodh,w,c
  7990  003AC0  6EF7               	movwf	tblptrh,c
  7991  003AC2                     	if	1	;There are 3 active tblptr bytes
  7992  003AC2  6AF8               	clrf	tblptru,c
  7993  003AC4  0E00               	movlw	low (__mediumconst shr (0+16))
  7994  003AC6  22F8               	addwfc	tblptru,f,c
  7995  003AC8                     	endif
  7996  003AC8  5021               	movf	__display_verify@cntr,w,c
  7997  003ACA  0D01               	mullw	1
  7998  003ACC  0E80               	movlw	low (_display_content+20)
  7999  003ACE  24F3               	addwf	prodl,w,c
  8000  003AD0  6ED9               	movwf	fsr2l,c
  8001  003AD2  0E01               	movlw	high (_display_content+20)
  8002  003AD4  20F4               	addwfc	prodh,w,c
  8003  003AD6  6EDA               	movwf	fsr2h,c
  8004  003AD8  0008               	tblrd		*
  8005  003ADA  CFF5 FFDF          	movff	tablat,indf2
  8006  003ADE  2A21               	incf	__display_verify@cntr,f,c
  8007  003AE0                     l1476:
  8008  003AE0  5021               	movf	__display_verify@cntr,w,c
  8009  003AE2  0D01               	mullw	1
  8010  003AE4  0E55               	movlw	low _verify_line2
  8011  003AE6  24F3               	addwf	prodl,w,c
  8012  003AE8  6EF6               	movwf	tblptrl,c
  8013  003AEA  0E8E               	movlw	high _verify_line2
  8014  003AEC  20F4               	addwfc	prodh,w,c
  8015  003AEE  6EF7               	movwf	tblptrh,c
  8016  003AF0                     	if	1	;There are 3 active tblptr bytes
  8017  003AF0  6AF8               	clrf	tblptru,c
  8018  003AF2  0E00               	movlw	low (__mediumconst shr (0+16))
  8019  003AF4  22F8               	addwfc	tblptru,f,c
  8020  003AF6                     	endif
  8021  003AF6  0008               	tblrd		*
  8022  003AF8  50F5               	movf	tablat,w,c
  8023  003AFA  0900               	iorlw	0
  8024  003AFC  A4D8               	btfss	status,2,c
  8025  003AFE  D7D9               	goto	l1477
  8026                           
  8027                           ;display.c: 338: cntr = 0;
  8028  003B00  0E00               	movlw	0
  8029  003B02  6E21               	movwf	__display_verify@cntr,c
  8030                           
  8031                           ;display.c: 339: while(verify_line3[cntr])
  8032  003B04  D017               	goto	l1479
  8033  003B06                     
  8034                           ;display.c: 340: display_content[2][cntr] = verify_line3[cntr++];
  8035  003B06  5021               	movf	__display_verify@cntr,w,c
  8036  003B08  0D01               	mullw	1
  8037  003B0A  0E8A               	movlw	low _verify_line3
  8038  003B0C  24F3               	addwf	prodl,w,c
  8039  003B0E  6EF6               	movwf	tblptrl,c
  8040  003B10  0E8E               	movlw	high _verify_line3
  8041  003B12  20F4               	addwfc	prodh,w,c
  8042  003B14  6EF7               	movwf	tblptrh,c
  8043  003B16                     	if	1	;There are 3 active tblptr bytes
  8044  003B16  6AF8               	clrf	tblptru,c
  8045  003B18  0E00               	movlw	low (__mediumconst shr (0+16))
  8046  003B1A  22F8               	addwfc	tblptru,f,c
  8047  003B1C                     	endif
  8048  003B1C  5021               	movf	__display_verify@cntr,w,c
  8049  003B1E  0D01               	mullw	1
  8050  003B20  0E94               	movlw	low (_display_content+40)
  8051  003B22  24F3               	addwf	prodl,w,c
  8052  003B24  6ED9               	movwf	fsr2l,c
  8053  003B26  0E01               	movlw	high (_display_content+40)
  8054  003B28  20F4               	addwfc	prodh,w,c
  8055  003B2A  6EDA               	movwf	fsr2h,c
  8056  003B2C  0008               	tblrd		*
  8057  003B2E  CFF5 FFDF          	movff	tablat,indf2
  8058  003B32  2A21               	incf	__display_verify@cntr,f,c
  8059  003B34                     l1479:
  8060  003B34  5021               	movf	__display_verify@cntr,w,c
  8061  003B36  0D01               	mullw	1
  8062  003B38  0E8A               	movlw	low _verify_line3
  8063  003B3A  24F3               	addwf	prodl,w,c
  8064  003B3C  6EF6               	movwf	tblptrl,c
  8065  003B3E  0E8E               	movlw	high _verify_line3
  8066  003B40  20F4               	addwfc	prodh,w,c
  8067  003B42  6EF7               	movwf	tblptrh,c
  8068  003B44                     	if	1	;There are 3 active tblptr bytes
  8069  003B44  6AF8               	clrf	tblptru,c
  8070  003B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8071  003B48  22F8               	addwfc	tblptru,f,c
  8072  003B4A                     	endif
  8073  003B4A  0008               	tblrd		*
  8074  003B4C  50F5               	movf	tablat,w,c
  8075  003B4E  0900               	iorlw	0
  8076  003B50  A4D8               	btfss	status,2,c
  8077  003B52  D7D9               	goto	l1480
  8078                           
  8079                           ;display.c: 341: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
  8080  003B54  EC8A  F03D         	call	_bootloader_get_entries	;wreg free
  8081  003B58  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  8082  003B5C  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  8083  003B60  6A1B               	clrf	__display_itoa_u16@value+2,c
  8084  003B62  6A1C               	clrf	__display_itoa_u16@value+3,c
  8085  003B64  5021               	movf	__display_verify@cntr,w,c
  8086  003B66  6E1F               	movwf	??__display_verify& (0+255),c
  8087  003B68  6A20               	clrf	(??__display_verify+1)& (0+255),c
  8088  003B6A  0E01               	movlw	1
  8089  003B6C  261F               	addwf	??__display_verify,f,c
  8090  003B6E  0E00               	movlw	0
  8091  003B70  2220               	addwfc	??__display_verify+1,f,c
  8092  003B72  0E94               	movlw	low (_display_content+40)
  8093  003B74  241F               	addwf	??__display_verify,w,c
  8094  003B76  6E1D               	movwf	__display_itoa_u16@text,c
  8095  003B78  0E01               	movlw	high (_display_content+40)
  8096  003B7A  2020               	addwfc	??__display_verify+1,w,c
  8097  003B7C  6E1E               	movwf	__display_itoa_u16@text+1,c
  8098  003B7E  EC4A  F027         	call	__display_itoa_u16	;wreg free
  8099  003B82  0012               	return		;funcret
  8100  003B84                     __end_of__display_verify:
  8101                           	opt stack 0
  8102                           tblptru	equ	0xFF8
  8103                           tblptrh	equ	0xFF7
  8104                           tblptrl	equ	0xFF6
  8105                           tablat	equ	0xFF5
  8106                           prodh	equ	0xFF4
  8107                           prodl	equ	0xFF3
  8108                           intcon	equ	0xFF2
  8109                           intcon2	equ	0xFF1
  8110                           intcon3	equ	0xFF0
  8111                           postinc0	equ	0xFEE
  8112                           wreg	equ	0xFE8
  8113                           postdec1	equ	0xFE5
  8114                           plusw1	equ	0xFE3
  8115                           fsr1h	equ	0xFE2
  8116                           fsr1l	equ	0xFE1
  8117                           indf2	equ	0xFDF
  8118                           postinc2	equ	0xFDE
  8119                           plusw2	equ	0xFDB
  8120                           fsr2h	equ	0xFDA
  8121                           fsr2l	equ	0xFD9
  8122                           status	equ	0xFD8
  8123                           
  8124 ;; *************** function __display_start *****************
  8125 ;; Defined at:
  8126 ;;		line 284 in file "display.c"
  8127 ;; Parameters:    Size  Location     Type
  8128 ;;		None
  8129 ;; Auto vars:     Size  Location     Type
  8130 ;;  cntr            1    0[COMRAM] unsigned char 
  8131 ;; Return value:  Size  Location     Type
  8132 ;;                  1    wreg      void 
  8133 ;; Registers used:
  8134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8135 ;; Tracked objects:
  8136 ;;		On entry : 0/0
  8137 ;;		On exit  : 0/0
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8143 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8144 ;;Total ram usage:        1 bytes
  8145 ;; Hardware stack levels used:    1
  8146 ;; This function calls:
  8147 ;;		Nothing
  8148 ;; This function is called by:
  8149 ;;		_display_prepare
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152                           
  8153                           	psect	text33
  8154  00367E                     __ptext33:
  8155                           	opt stack 0
  8156  00367E                     __display_start:
  8157                           	opt stack 29
  8158                           
  8159                           ;display.c: 286: uint8_t cntr;;display.c: 287: cntr = 0;
  8160                           
  8161                           ;incstack = 0
  8162  00367E  0E00               	movlw	0
  8163  003680  6E01               	movwf	__display_start@cntr,c
  8164                           
  8165                           ;display.c: 288: while(start_line1[cntr])
  8166  003682  D017               	goto	l1440
  8167  003684                     
  8168                           ;display.c: 289: display_content[0][cntr] = start_line1[cntr++];
  8169  003684  5001               	movf	__display_start@cntr,w,c
  8170  003686  0D01               	mullw	1
  8171  003688  0E88               	movlw	low _start_line1
  8172  00368A  24F3               	addwf	prodl,w,c
  8173  00368C  6EF6               	movwf	tblptrl,c
  8174  00368E  0E8D               	movlw	high _start_line1
  8175  003690  20F4               	addwfc	prodh,w,c
  8176  003692  6EF7               	movwf	tblptrh,c
  8177  003694                     	if	1	;There are 3 active tblptr bytes
  8178  003694  6AF8               	clrf	tblptru,c
  8179  003696  0E00               	movlw	low (__mediumconst shr (0+16))
  8180  003698  22F8               	addwfc	tblptru,f,c
  8181  00369A                     	endif
  8182  00369A  5001               	movf	__display_start@cntr,w,c
  8183  00369C  0D01               	mullw	1
  8184  00369E  0E6C               	movlw	low _display_content
  8185  0036A0  24F3               	addwf	prodl,w,c
  8186  0036A2  6ED9               	movwf	fsr2l,c
  8187  0036A4  0E01               	movlw	high _display_content
  8188  0036A6  20F4               	addwfc	prodh,w,c
  8189  0036A8  6EDA               	movwf	fsr2h,c
  8190  0036AA  0008               	tblrd		*
  8191  0036AC  CFF5 FFDF          	movff	tablat,indf2
  8192  0036B0  2A01               	incf	__display_start@cntr,f,c
  8193  0036B2                     l1440:
  8194  0036B2  5001               	movf	__display_start@cntr,w,c
  8195  0036B4  0D01               	mullw	1
  8196  0036B6  0E88               	movlw	low _start_line1
  8197  0036B8  24F3               	addwf	prodl,w,c
  8198  0036BA  6EF6               	movwf	tblptrl,c
  8199  0036BC  0E8D               	movlw	high _start_line1
  8200  0036BE  20F4               	addwfc	prodh,w,c
  8201  0036C0  6EF7               	movwf	tblptrh,c
  8202  0036C2                     	if	1	;There are 3 active tblptr bytes
  8203  0036C2  6AF8               	clrf	tblptru,c
  8204  0036C4  0E00               	movlw	low (__mediumconst shr (0+16))
  8205  0036C6  22F8               	addwfc	tblptru,f,c
  8206  0036C8                     	endif
  8207  0036C8  0008               	tblrd		*
  8208  0036CA  50F5               	movf	tablat,w,c
  8209  0036CC  0900               	iorlw	0
  8210  0036CE  A4D8               	btfss	status,2,c
  8211  0036D0  D7D9               	goto	l1441
  8212                           
  8213                           ;display.c: 290: cntr = 0;
  8214  0036D2  0E00               	movlw	0
  8215  0036D4  6E01               	movwf	__display_start@cntr,c
  8216                           
  8217                           ;display.c: 291: while(start_line2[cntr])
  8218  0036D6  D017               	goto	l1443
  8219  0036D8                     
  8220                           ;display.c: 292: display_content[1][cntr] = start_line2[cntr++];
  8221  0036D8  5001               	movf	__display_start@cntr,w,c
  8222  0036DA  0D01               	mullw	1
  8223  0036DC  0E77               	movlw	low _start_line2
  8224  0036DE  24F3               	addwf	prodl,w,c
  8225  0036E0  6EF6               	movwf	tblptrl,c
  8226  0036E2  0E8D               	movlw	high _start_line2
  8227  0036E4  20F4               	addwfc	prodh,w,c
  8228  0036E6  6EF7               	movwf	tblptrh,c
  8229  0036E8                     	if	1	;There are 3 active tblptr bytes
  8230  0036E8  6AF8               	clrf	tblptru,c
  8231  0036EA  0E00               	movlw	low (__mediumconst shr (0+16))
  8232  0036EC  22F8               	addwfc	tblptru,f,c
  8233  0036EE                     	endif
  8234  0036EE  5001               	movf	__display_start@cntr,w,c
  8235  0036F0  0D01               	mullw	1
  8236  0036F2  0E80               	movlw	low (_display_content+20)
  8237  0036F4  24F3               	addwf	prodl,w,c
  8238  0036F6  6ED9               	movwf	fsr2l,c
  8239  0036F8  0E01               	movlw	high (_display_content+20)
  8240  0036FA  20F4               	addwfc	prodh,w,c
  8241  0036FC  6EDA               	movwf	fsr2h,c
  8242  0036FE  0008               	tblrd		*
  8243  003700  CFF5 FFDF          	movff	tablat,indf2
  8244  003704  2A01               	incf	__display_start@cntr,f,c
  8245  003706                     l1443:
  8246  003706  5001               	movf	__display_start@cntr,w,c
  8247  003708  0D01               	mullw	1
  8248  00370A  0E77               	movlw	low _start_line2
  8249  00370C  24F3               	addwf	prodl,w,c
  8250  00370E  6EF6               	movwf	tblptrl,c
  8251  003710  0E8D               	movlw	high _start_line2
  8252  003712  20F4               	addwfc	prodh,w,c
  8253  003714  6EF7               	movwf	tblptrh,c
  8254  003716                     	if	1	;There are 3 active tblptr bytes
  8255  003716  6AF8               	clrf	tblptru,c
  8256  003718  0E00               	movlw	low (__mediumconst shr (0+16))
  8257  00371A  22F8               	addwfc	tblptru,f,c
  8258  00371C                     	endif
  8259  00371C  0008               	tblrd		*
  8260  00371E  50F5               	movf	tablat,w,c
  8261  003720  0900               	iorlw	0
  8262  003722  A4D8               	btfss	status,2,c
  8263  003724  D7D9               	goto	l1444
  8264                           
  8265                           ;display.c: 293: cntr = 0;
  8266  003726  0E00               	movlw	0
  8267  003728  6E01               	movwf	__display_start@cntr,c
  8268                           
  8269                           ;display.c: 294: while(start_line3[cntr])
  8270  00372A  D017               	goto	l1446
  8271  00372C                     
  8272                           ;display.c: 295: display_content[2][cntr] = start_line3[cntr++];
  8273  00372C  5001               	movf	__display_start@cntr,w,c
  8274  00372E  0D01               	mullw	1
  8275  003730  0EF6               	movlw	low _start_line3
  8276  003732  24F3               	addwf	prodl,w,c
  8277  003734  6EF6               	movwf	tblptrl,c
  8278  003736  0E8C               	movlw	high _start_line3
  8279  003738  20F4               	addwfc	prodh,w,c
  8280  00373A  6EF7               	movwf	tblptrh,c
  8281  00373C                     	if	1	;There are 3 active tblptr bytes
  8282  00373C  6AF8               	clrf	tblptru,c
  8283  00373E  0E00               	movlw	low (__mediumconst shr (0+16))
  8284  003740  22F8               	addwfc	tblptru,f,c
  8285  003742                     	endif
  8286  003742  5001               	movf	__display_start@cntr,w,c
  8287  003744  0D01               	mullw	1
  8288  003746  0E94               	movlw	low (_display_content+40)
  8289  003748  24F3               	addwf	prodl,w,c
  8290  00374A  6ED9               	movwf	fsr2l,c
  8291  00374C  0E01               	movlw	high (_display_content+40)
  8292  00374E  20F4               	addwfc	prodh,w,c
  8293  003750  6EDA               	movwf	fsr2h,c
  8294  003752  0008               	tblrd		*
  8295  003754  CFF5 FFDF          	movff	tablat,indf2
  8296  003758  2A01               	incf	__display_start@cntr,f,c
  8297  00375A                     l1446:
  8298  00375A  5001               	movf	__display_start@cntr,w,c
  8299  00375C  0D01               	mullw	1
  8300  00375E  0EF6               	movlw	low _start_line3
  8301  003760  24F3               	addwf	prodl,w,c
  8302  003762  6EF6               	movwf	tblptrl,c
  8303  003764  0E8C               	movlw	high _start_line3
  8304  003766  20F4               	addwfc	prodh,w,c
  8305  003768  6EF7               	movwf	tblptrh,c
  8306  00376A                     	if	1	;There are 3 active tblptr bytes
  8307  00376A  6AF8               	clrf	tblptru,c
  8308  00376C  0E00               	movlw	low (__mediumconst shr (0+16))
  8309  00376E  22F8               	addwfc	tblptru,f,c
  8310  003770                     	endif
  8311  003770  0008               	tblrd		*
  8312  003772  50F5               	movf	tablat,w,c
  8313  003774  0900               	iorlw	0
  8314  003776  A4D8               	btfss	status,2,c
  8315  003778  D7D9               	goto	l1447
  8316                           
  8317                           ;display.c: 296: cntr = 0;
  8318  00377A  0E00               	movlw	0
  8319  00377C  6E01               	movwf	__display_start@cntr,c
  8320                           
  8321                           ;display.c: 297: while(start_line4[cntr])
  8322  00377E  D017               	goto	l1449
  8323  003780                     
  8324                           ;display.c: 298: display_content[3][cntr] = start_line4[cntr++];
  8325  003780  5001               	movf	__display_start@cntr,w,c
  8326  003782  0D01               	mullw	1
  8327  003784  0E62               	movlw	low _start_line4
  8328  003786  24F3               	addwf	prodl,w,c
  8329  003788  6EF6               	movwf	tblptrl,c
  8330  00378A  0E8E               	movlw	high _start_line4
  8331  00378C  20F4               	addwfc	prodh,w,c
  8332  00378E  6EF7               	movwf	tblptrh,c
  8333  003790                     	if	1	;There are 3 active tblptr bytes
  8334  003790  6AF8               	clrf	tblptru,c
  8335  003792  0E00               	movlw	low (__mediumconst shr (0+16))
  8336  003794  22F8               	addwfc	tblptru,f,c
  8337  003796                     	endif
  8338  003796  5001               	movf	__display_start@cntr,w,c
  8339  003798  0D01               	mullw	1
  8340  00379A  0EA8               	movlw	low (_display_content+60)
  8341  00379C  24F3               	addwf	prodl,w,c
  8342  00379E  6ED9               	movwf	fsr2l,c
  8343  0037A0  0E01               	movlw	high (_display_content+60)
  8344  0037A2  20F4               	addwfc	prodh,w,c
  8345  0037A4  6EDA               	movwf	fsr2h,c
  8346  0037A6  0008               	tblrd		*
  8347  0037A8  CFF5 FFDF          	movff	tablat,indf2
  8348  0037AC  2A01               	incf	__display_start@cntr,f,c
  8349  0037AE                     l1449:
  8350  0037AE  5001               	movf	__display_start@cntr,w,c
  8351  0037B0  0D01               	mullw	1
  8352  0037B2  0E62               	movlw	low _start_line4
  8353  0037B4  24F3               	addwf	prodl,w,c
  8354  0037B6  6EF6               	movwf	tblptrl,c
  8355  0037B8  0E8E               	movlw	high _start_line4
  8356  0037BA  20F4               	addwfc	prodh,w,c
  8357  0037BC  6EF7               	movwf	tblptrh,c
  8358  0037BE                     	if	1	;There are 3 active tblptr bytes
  8359  0037BE  6AF8               	clrf	tblptru,c
  8360  0037C0  0E00               	movlw	low (__mediumconst shr (0+16))
  8361  0037C2  22F8               	addwfc	tblptru,f,c
  8362  0037C4                     	endif
  8363  0037C4  0008               	tblrd		*
  8364  0037C6  50F5               	movf	tablat,w,c
  8365  0037C8  0900               	iorlw	0
  8366  0037CA  B4D8               	btfsc	status,2,c
  8367  0037CC  0012               	return	
  8368  0037CE  D7D8               	goto	l1450
  8369  0037D0                     __end_of__display_start:
  8370                           	opt stack 0
  8371                           tblptru	equ	0xFF8
  8372                           tblptrh	equ	0xFF7
  8373                           tblptrl	equ	0xFF6
  8374                           tablat	equ	0xFF5
  8375                           prodh	equ	0xFF4
  8376                           prodl	equ	0xFF3
  8377                           intcon	equ	0xFF2
  8378                           intcon2	equ	0xFF1
  8379                           intcon3	equ	0xFF0
  8380                           postinc0	equ	0xFEE
  8381                           wreg	equ	0xFE8
  8382                           postdec1	equ	0xFE5
  8383                           plusw1	equ	0xFE3
  8384                           fsr1h	equ	0xFE2
  8385                           fsr1l	equ	0xFE1
  8386                           indf2	equ	0xFDF
  8387                           postinc2	equ	0xFDE
  8388                           plusw2	equ	0xFDB
  8389                           fsr2h	equ	0xFDA
  8390                           fsr2l	equ	0xFD9
  8391                           status	equ	0xFD8
  8392                           
  8393 ;; *************** function __display_programming *****************
  8394 ;; Defined at:
  8395 ;;		line 416 in file "display.c"
  8396 ;; Parameters:    Size  Location     Type
  8397 ;;		None
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;  cntr            1   30[COMRAM] unsigned char 
  8400 ;; Return value:  Size  Location     Type
  8401 ;;                  1    wreg      void 
  8402 ;; Registers used:
  8403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8404 ;; Tracked objects:
  8405 ;;		On entry : 0/0
  8406 ;;		On exit  : 0/0
  8407 ;;		Unchanged: 0/0
  8408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8412 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8413 ;;Total ram usage:        1 bytes
  8414 ;; Hardware stack levels used:    1
  8415 ;; Hardware stack levels required when called:    4
  8416 ;; This function calls:
  8417 ;;		__display_itoa_u16
  8418 ;;		_bootloader_get_entries
  8419 ;;		_bootloader_get_flashPagesWritten
  8420 ;;		_bootloader_get_total_entries
  8421 ;; This function is called by:
  8422 ;;		_display_prepare
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426                           	psect	text34
  8427  002CEE                     __ptext34:
  8428                           	opt stack 0
  8429  002CEE                     __display_programming:
  8430                           	opt stack 25
  8431                           
  8432                           ;display.c: 418: uint8_t cntr;;display.c: 419: cntr = 0;
  8433                           
  8434                           ;incstack = 0
  8435  002CEE  0E00               	movlw	0
  8436  002CF0  6E1F               	movwf	__display_programming@cntr,c
  8437                           
  8438                           ;display.c: 420: while(programming_line1[cntr])
  8439  002CF2  D017               	goto	l1534
  8440  002CF4                     
  8441                           ;display.c: 421: display_content[0][cntr] = programming_line1[cntr++];
  8442  002CF4  501F               	movf	__display_programming@cntr,w,c
  8443  002CF6  0D01               	mullw	1
  8444  002CF8  0ED9               	movlw	low _programming_line1
  8445  002CFA  24F3               	addwf	prodl,w,c
  8446  002CFC  6EF6               	movwf	tblptrl,c
  8447  002CFE  0E8D               	movlw	high _programming_line1
  8448  002D00  20F4               	addwfc	prodh,w,c
  8449  002D02  6EF7               	movwf	tblptrh,c
  8450  002D04                     	if	1	;There are 3 active tblptr bytes
  8451  002D04  6AF8               	clrf	tblptru,c
  8452  002D06  0E00               	movlw	low (__mediumconst shr (0+16))
  8453  002D08  22F8               	addwfc	tblptru,f,c
  8454  002D0A                     	endif
  8455  002D0A  501F               	movf	__display_programming@cntr,w,c
  8456  002D0C  0D01               	mullw	1
  8457  002D0E  0E6C               	movlw	low _display_content
  8458  002D10  24F3               	addwf	prodl,w,c
  8459  002D12  6ED9               	movwf	fsr2l,c
  8460  002D14  0E01               	movlw	high _display_content
  8461  002D16  20F4               	addwfc	prodh,w,c
  8462  002D18  6EDA               	movwf	fsr2h,c
  8463  002D1A  0008               	tblrd		*
  8464  002D1C  CFF5 FFDF          	movff	tablat,indf2
  8465  002D20  2A1F               	incf	__display_programming@cntr,f,c
  8466  002D22                     l1534:
  8467  002D22  501F               	movf	__display_programming@cntr,w,c
  8468  002D24  0D01               	mullw	1
  8469  002D26  0ED9               	movlw	low _programming_line1
  8470  002D28  24F3               	addwf	prodl,w,c
  8471  002D2A  6EF6               	movwf	tblptrl,c
  8472  002D2C  0E8D               	movlw	high _programming_line1
  8473  002D2E  20F4               	addwfc	prodh,w,c
  8474  002D30  6EF7               	movwf	tblptrh,c
  8475  002D32                     	if	1	;There are 3 active tblptr bytes
  8476  002D32  6AF8               	clrf	tblptru,c
  8477  002D34  0E00               	movlw	low (__mediumconst shr (0+16))
  8478  002D36  22F8               	addwfc	tblptru,f,c
  8479  002D38                     	endif
  8480  002D38  0008               	tblrd		*
  8481  002D3A  50F5               	movf	tablat,w,c
  8482  002D3C  0900               	iorlw	0
  8483  002D3E  A4D8               	btfss	status,2,c
  8484  002D40  D7D9               	goto	l1535
  8485                           
  8486                           ;display.c: 423: cntr = 0;
  8487  002D42  0E00               	movlw	0
  8488  002D44  6E1F               	movwf	__display_programming@cntr,c
  8489                           
  8490                           ;display.c: 424: while(programming_line2[cntr])
  8491  002D46  D017               	goto	l1537
  8492  002D48                     
  8493                           ;display.c: 425: display_content[1][cntr] = programming_line2[cntr++];
  8494  002D48  501F               	movf	__display_programming@cntr,w,c
  8495  002D4A  0D01               	mullw	1
  8496  002D4C  0E30               	movlw	low _programming_line2
  8497  002D4E  24F3               	addwf	prodl,w,c
  8498  002D50  6EF6               	movwf	tblptrl,c
  8499  002D52  0E8D               	movlw	high _programming_line2
  8500  002D54  20F4               	addwfc	prodh,w,c
  8501  002D56  6EF7               	movwf	tblptrh,c
  8502  002D58                     	if	1	;There are 3 active tblptr bytes
  8503  002D58  6AF8               	clrf	tblptru,c
  8504  002D5A  0E00               	movlw	low (__mediumconst shr (0+16))
  8505  002D5C  22F8               	addwfc	tblptru,f,c
  8506  002D5E                     	endif
  8507  002D5E  501F               	movf	__display_programming@cntr,w,c
  8508  002D60  0D01               	mullw	1
  8509  002D62  0E80               	movlw	low (_display_content+20)
  8510  002D64  24F3               	addwf	prodl,w,c
  8511  002D66  6ED9               	movwf	fsr2l,c
  8512  002D68  0E01               	movlw	high (_display_content+20)
  8513  002D6A  20F4               	addwfc	prodh,w,c
  8514  002D6C  6EDA               	movwf	fsr2h,c
  8515  002D6E  0008               	tblrd		*
  8516  002D70  CFF5 FFDF          	movff	tablat,indf2
  8517  002D74  2A1F               	incf	__display_programming@cntr,f,c
  8518  002D76                     l1537:
  8519  002D76  501F               	movf	__display_programming@cntr,w,c
  8520  002D78  0D01               	mullw	1
  8521  002D7A  0E30               	movlw	low _programming_line2
  8522  002D7C  24F3               	addwf	prodl,w,c
  8523  002D7E  6EF6               	movwf	tblptrl,c
  8524  002D80  0E8D               	movlw	high _programming_line2
  8525  002D82  20F4               	addwfc	prodh,w,c
  8526  002D84  6EF7               	movwf	tblptrh,c
  8527  002D86                     	if	1	;There are 3 active tblptr bytes
  8528  002D86  6AF8               	clrf	tblptru,c
  8529  002D88  0E00               	movlw	low (__mediumconst shr (0+16))
  8530  002D8A  22F8               	addwfc	tblptru,f,c
  8531  002D8C                     	endif
  8532  002D8C  0008               	tblrd		*
  8533  002D8E  50F5               	movf	tablat,w,c
  8534  002D90  0900               	iorlw	0
  8535  002D92  A4D8               	btfss	status,2,c
  8536  002D94  D7D9               	goto	l1538
  8537                           
  8538                           ;display.c: 427: cntr = 0;
  8539  002D96  0E00               	movlw	0
  8540  002D98  6E1F               	movwf	__display_programming@cntr,c
  8541                           
  8542                           ;display.c: 428: while(programming_line3[cntr])
  8543  002D9A  D017               	goto	l1540
  8544  002D9C                     
  8545                           ;display.c: 429: display_content[2][cntr] = programming_line3[cntr++];
  8546  002D9C  501F               	movf	__display_programming@cntr,w,c
  8547  002D9E  0D01               	mullw	1
  8548  002DA0  0E83               	movlw	low _programming_line3
  8549  002DA2  24F3               	addwf	prodl,w,c
  8550  002DA4  6EF6               	movwf	tblptrl,c
  8551  002DA6  0E8E               	movlw	high _programming_line3
  8552  002DA8  20F4               	addwfc	prodh,w,c
  8553  002DAA  6EF7               	movwf	tblptrh,c
  8554  002DAC                     	if	1	;There are 3 active tblptr bytes
  8555  002DAC  6AF8               	clrf	tblptru,c
  8556  002DAE  0E00               	movlw	low (__mediumconst shr (0+16))
  8557  002DB0  22F8               	addwfc	tblptru,f,c
  8558  002DB2                     	endif
  8559  002DB2  501F               	movf	__display_programming@cntr,w,c
  8560  002DB4  0D01               	mullw	1
  8561  002DB6  0E94               	movlw	low (_display_content+40)
  8562  002DB8  24F3               	addwf	prodl,w,c
  8563  002DBA  6ED9               	movwf	fsr2l,c
  8564  002DBC  0E01               	movlw	high (_display_content+40)
  8565  002DBE  20F4               	addwfc	prodh,w,c
  8566  002DC0  6EDA               	movwf	fsr2h,c
  8567  002DC2  0008               	tblrd		*
  8568  002DC4  CFF5 FFDF          	movff	tablat,indf2
  8569  002DC8  2A1F               	incf	__display_programming@cntr,f,c
  8570  002DCA                     l1540:
  8571  002DCA  501F               	movf	__display_programming@cntr,w,c
  8572  002DCC  0D01               	mullw	1
  8573  002DCE  0E83               	movlw	low _programming_line3
  8574  002DD0  24F3               	addwf	prodl,w,c
  8575  002DD2  6EF6               	movwf	tblptrl,c
  8576  002DD4  0E8E               	movlw	high _programming_line3
  8577  002DD6  20F4               	addwfc	prodh,w,c
  8578  002DD8  6EF7               	movwf	tblptrh,c
  8579  002DDA                     	if	1	;There are 3 active tblptr bytes
  8580  002DDA  6AF8               	clrf	tblptru,c
  8581  002DDC  0E00               	movlw	low (__mediumconst shr (0+16))
  8582  002DDE  22F8               	addwfc	tblptru,f,c
  8583  002DE0                     	endif
  8584  002DE0  0008               	tblrd		*
  8585  002DE2  50F5               	movf	tablat,w,c
  8586  002DE4  0900               	iorlw	0
  8587  002DE6  A4D8               	btfss	status,2,c
  8588  002DE8  D7D9               	goto	l1541
  8589                           
  8590                           ;display.c: 430: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
  8591  002DEA  EC8A  F03D         	call	_bootloader_get_entries	;wreg free
  8592  002DEE  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  8593  002DF2  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  8594  002DF6  6A1B               	clrf	__display_itoa_u16@value+2,c
  8595  002DF8  6A1C               	clrf	__display_itoa_u16@value+3,c
  8596  002DFA  501F               	movf	__display_programming@cntr,w,c
  8597  002DFC  0D01               	mullw	1
  8598  002DFE  0E94               	movlw	low (_display_content+40)
  8599  002E00  24F3               	addwf	prodl,w,c
  8600  002E02  6E1D               	movwf	__display_itoa_u16@text,c
  8601  002E04  0E01               	movlw	high (_display_content+40)
  8602  002E06  20F4               	addwfc	prodh,w,c
  8603  002E08  6E1E               	movwf	__display_itoa_u16@text+1,c
  8604  002E0A  EC4A  F027         	call	__display_itoa_u16	;wreg free
  8605  002E0E  261F               	addwf	__display_programming@cntr,f,c
  8606                           
  8607                           ;display.c: 431: display_content[2][cntr++] = '/';
  8608  002E10  501F               	movf	__display_programming@cntr,w,c
  8609  002E12  0D01               	mullw	1
  8610  002E14  0E94               	movlw	low (_display_content+40)
  8611  002E16  24F3               	addwf	prodl,w,c
  8612  002E18  6ED9               	movwf	fsr2l,c
  8613  002E1A  0E01               	movlw	high (_display_content+40)
  8614  002E1C  20F4               	addwfc	prodh,w,c
  8615  002E1E  6EDA               	movwf	fsr2h,c
  8616  002E20  0E2F               	movlw	47
  8617  002E22  6EDF               	movwf	indf2,c
  8618  002E24  2A1F               	incf	__display_programming@cntr,f,c
  8619                           
  8620                           ;display.c: 432: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
  8621  002E26  EC76  F03D         	call	_bootloader_get_total_entries	;wreg free
  8622  002E2A  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
  8623  002E2E  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
  8624  002E32  6A1B               	clrf	__display_itoa_u16@value+2,c
  8625  002E34  6A1C               	clrf	__display_itoa_u16@value+3,c
  8626  002E36  501F               	movf	__display_programming@cntr,w,c
  8627  002E38  0D01               	mullw	1
  8628  002E3A  0E94               	movlw	low (_display_content+40)
  8629  002E3C  24F3               	addwf	prodl,w,c
  8630  002E3E  6E1D               	movwf	__display_itoa_u16@text,c
  8631  002E40  0E01               	movlw	high (_display_content+40)
  8632  002E42  20F4               	addwfc	prodh,w,c
  8633  002E44  6E1E               	movwf	__display_itoa_u16@text+1,c
  8634  002E46  EC4A  F027         	call	__display_itoa_u16	;wreg free
  8635                           
  8636                           ;display.c: 434: cntr = 0;
  8637  002E4A  0E00               	movlw	0
  8638  002E4C  6E1F               	movwf	__display_programming@cntr,c
  8639                           
  8640                           ;display.c: 435: while(programming_line4[cntr])
  8641  002E4E  D017               	goto	l1543
  8642  002E50                     
  8643                           ;display.c: 436: display_content[3][cntr] = programming_line4[cntr++];
  8644  002E50  501F               	movf	__display_programming@cntr,w,c
  8645  002E52  0D01               	mullw	1
  8646  002E54  0EC9               	movlw	low _programming_line4
  8647  002E56  24F3               	addwf	prodl,w,c
  8648  002E58  6EF6               	movwf	tblptrl,c
  8649  002E5A  0E8D               	movlw	high _programming_line4
  8650  002E5C  20F4               	addwfc	prodh,w,c
  8651  002E5E  6EF7               	movwf	tblptrh,c
  8652  002E60                     	if	1	;There are 3 active tblptr bytes
  8653  002E60  6AF8               	clrf	tblptru,c
  8654  002E62  0E00               	movlw	low (__mediumconst shr (0+16))
  8655  002E64  22F8               	addwfc	tblptru,f,c
  8656  002E66                     	endif
  8657  002E66  501F               	movf	__display_programming@cntr,w,c
  8658  002E68  0D01               	mullw	1
  8659  002E6A  0EA8               	movlw	low (_display_content+60)
  8660  002E6C  24F3               	addwf	prodl,w,c
  8661  002E6E  6ED9               	movwf	fsr2l,c
  8662  002E70  0E01               	movlw	high (_display_content+60)
  8663  002E72  20F4               	addwfc	prodh,w,c
  8664  002E74  6EDA               	movwf	fsr2h,c
  8665  002E76  0008               	tblrd		*
  8666  002E78  CFF5 FFDF          	movff	tablat,indf2
  8667  002E7C  2A1F               	incf	__display_programming@cntr,f,c
  8668  002E7E                     l1543:
  8669  002E7E  501F               	movf	__display_programming@cntr,w,c
  8670  002E80  0D01               	mullw	1
  8671  002E82  0EC9               	movlw	low _programming_line4
  8672  002E84  24F3               	addwf	prodl,w,c
  8673  002E86  6EF6               	movwf	tblptrl,c
  8674  002E88  0E8D               	movlw	high _programming_line4
  8675  002E8A  20F4               	addwfc	prodh,w,c
  8676  002E8C  6EF7               	movwf	tblptrh,c
  8677  002E8E                     	if	1	;There are 3 active tblptr bytes
  8678  002E8E  6AF8               	clrf	tblptru,c
  8679  002E90  0E00               	movlw	low (__mediumconst shr (0+16))
  8680  002E92  22F8               	addwfc	tblptru,f,c
  8681  002E94                     	endif
  8682  002E94  0008               	tblrd		*
  8683  002E96  50F5               	movf	tablat,w,c
  8684  002E98  0900               	iorlw	0
  8685  002E9A  A4D8               	btfss	status,2,c
  8686  002E9C  D7D9               	goto	l1544
  8687                           
  8688                           ;display.c: 437: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
  8689  002E9E  EC85  F03D         	call	_bootloader_get_flashPagesWritten	;wreg free
  8690  002EA2  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
  8691  002EA6  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
  8692  002EAA  6A1B               	clrf	__display_itoa_u16@value+2,c
  8693  002EAC  6A1C               	clrf	__display_itoa_u16@value+3,c
  8694  002EAE  501F               	movf	__display_programming@cntr,w,c
  8695  002EB0  0D01               	mullw	1
  8696  002EB2  0EA8               	movlw	low (_display_content+60)
  8697  002EB4  24F3               	addwf	prodl,w,c
  8698  002EB6  6E1D               	movwf	__display_itoa_u16@text,c
  8699  002EB8  0E01               	movlw	high (_display_content+60)
  8700  002EBA  20F4               	addwfc	prodh,w,c
  8701  002EBC  6E1E               	movwf	__display_itoa_u16@text+1,c
  8702  002EBE  EC4A  F027         	call	__display_itoa_u16	;wreg free
  8703  002EC2  0012               	return		;funcret
  8704  002EC4                     __end_of__display_programming:
  8705                           	opt stack 0
  8706                           tblptru	equ	0xFF8
  8707                           tblptrh	equ	0xFF7
  8708                           tblptrl	equ	0xFF6
  8709                           tablat	equ	0xFF5
  8710                           prodh	equ	0xFF4
  8711                           prodl	equ	0xFF3
  8712                           intcon	equ	0xFF2
  8713                           intcon2	equ	0xFF1
  8714                           intcon3	equ	0xFF0
  8715                           postinc0	equ	0xFEE
  8716                           wreg	equ	0xFE8
  8717                           postdec1	equ	0xFE5
  8718                           plusw1	equ	0xFE3
  8719                           fsr1h	equ	0xFE2
  8720                           fsr1l	equ	0xFE1
  8721                           indf2	equ	0xFDF
  8722                           postinc2	equ	0xFDE
  8723                           plusw2	equ	0xFDB
  8724                           fsr2h	equ	0xFDA
  8725                           fsr2l	equ	0xFD9
  8726                           status	equ	0xFD8
  8727                           
  8728 ;; *************** function __display_found *****************
  8729 ;; Defined at:
  8730 ;;		line 301 in file "display.c"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;		None
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;  cntr            1   39[COMRAM] unsigned char 
  8735 ;;  start           1   38[COMRAM] unsigned char 
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  1    wreg      void 
  8738 ;; Registers used:
  8739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/0
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8746 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8748 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8749 ;;Total ram usage:        4 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:    5
  8752 ;; This function calls:
  8753 ;;		__display_itoa_u32
  8754 ;;		_bootloader_get_file_size
  8755 ;; This function is called by:
  8756 ;;		_display_prepare
  8757 ;; This function uses a non-reentrant model
  8758 ;;
  8759                           
  8760                           	psect	text35
  8761  002938                     __ptext35:
  8762                           	opt stack 0
  8763  002938                     __display_found:
  8764                           	opt stack 24
  8765                           
  8766                           ;display.c: 303: uint8_t cntr;;display.c: 304: uint8_t start;;display.c: 306: cntr = 0;
  8767                           
  8768                           ;incstack = 0
  8769  002938  0E00               	movlw	0
  8770  00293A  6E28               	movwf	__display_found@cntr,c
  8771                           
  8772                           ;display.c: 307: while(found_line1[cntr])
  8773  00293C  D017               	goto	l1455
  8774  00293E                     
  8775                           ;display.c: 308: display_content[0][cntr] = found_line1[cntr++];
  8776  00293E  5028               	movf	__display_found@cntr,w,c
  8777  002940  0D01               	mullw	1
  8778  002942  0E19               	movlw	low _found_line1
  8779  002944  24F3               	addwf	prodl,w,c
  8780  002946  6EF6               	movwf	tblptrl,c
  8781  002948  0E8E               	movlw	high _found_line1
  8782  00294A  20F4               	addwfc	prodh,w,c
  8783  00294C  6EF7               	movwf	tblptrh,c
  8784  00294E                     	if	1	;There are 3 active tblptr bytes
  8785  00294E  6AF8               	clrf	tblptru,c
  8786  002950  0E00               	movlw	low (__mediumconst shr (0+16))
  8787  002952  22F8               	addwfc	tblptru,f,c
  8788  002954                     	endif
  8789  002954  5028               	movf	__display_found@cntr,w,c
  8790  002956  0D01               	mullw	1
  8791  002958  0E6C               	movlw	low _display_content
  8792  00295A  24F3               	addwf	prodl,w,c
  8793  00295C  6ED9               	movwf	fsr2l,c
  8794  00295E  0E01               	movlw	high _display_content
  8795  002960  20F4               	addwfc	prodh,w,c
  8796  002962  6EDA               	movwf	fsr2h,c
  8797  002964  0008               	tblrd		*
  8798  002966  CFF5 FFDF          	movff	tablat,indf2
  8799  00296A  2A28               	incf	__display_found@cntr,f,c
  8800  00296C                     l1455:
  8801  00296C  5028               	movf	__display_found@cntr,w,c
  8802  00296E  0D01               	mullw	1
  8803  002970  0E19               	movlw	low _found_line1
  8804  002972  24F3               	addwf	prodl,w,c
  8805  002974  6EF6               	movwf	tblptrl,c
  8806  002976  0E8E               	movlw	high _found_line1
  8807  002978  20F4               	addwfc	prodh,w,c
  8808  00297A  6EF7               	movwf	tblptrh,c
  8809  00297C                     	if	1	;There are 3 active tblptr bytes
  8810  00297C  6AF8               	clrf	tblptru,c
  8811  00297E  0E00               	movlw	low (__mediumconst shr (0+16))
  8812  002980  22F8               	addwfc	tblptru,f,c
  8813  002982                     	endif
  8814  002982  0008               	tblrd		*
  8815  002984  50F5               	movf	tablat,w,c
  8816  002986  0900               	iorlw	0
  8817  002988  A4D8               	btfss	status,2,c
  8818  00298A  D7D9               	goto	l1456
  8819                           
  8820                           ;display.c: 310: cntr = 0;
  8821  00298C  0E00               	movlw	0
  8822  00298E  6E28               	movwf	__display_found@cntr,c
  8823                           
  8824                           ;display.c: 311: while(found_line2[cntr])
  8825  002990  D017               	goto	l1458
  8826  002992                     
  8827                           ;display.c: 312: display_content[1][cntr] = found_line2[cntr++];
  8828  002992  5028               	movf	__display_found@cntr,w,c
  8829  002994  0D01               	mullw	1
  8830  002996  0E1D               	movlw	low _found_line2
  8831  002998  24F3               	addwf	prodl,w,c
  8832  00299A  6EF6               	movwf	tblptrl,c
  8833  00299C  0E8D               	movlw	high _found_line2
  8834  00299E  20F4               	addwfc	prodh,w,c
  8835  0029A0  6EF7               	movwf	tblptrh,c
  8836  0029A2                     	if	1	;There are 3 active tblptr bytes
  8837  0029A2  6AF8               	clrf	tblptru,c
  8838  0029A4  0E00               	movlw	low (__mediumconst shr (0+16))
  8839  0029A6  22F8               	addwfc	tblptru,f,c
  8840  0029A8                     	endif
  8841  0029A8  5028               	movf	__display_found@cntr,w,c
  8842  0029AA  0D01               	mullw	1
  8843  0029AC  0E80               	movlw	low (_display_content+20)
  8844  0029AE  24F3               	addwf	prodl,w,c
  8845  0029B0  6ED9               	movwf	fsr2l,c
  8846  0029B2  0E01               	movlw	high (_display_content+20)
  8847  0029B4  20F4               	addwfc	prodh,w,c
  8848  0029B6  6EDA               	movwf	fsr2h,c
  8849  0029B8  0008               	tblrd		*
  8850  0029BA  CFF5 FFDF          	movff	tablat,indf2
  8851  0029BE  2A28               	incf	__display_found@cntr,f,c
  8852  0029C0                     l1458:
  8853  0029C0  5028               	movf	__display_found@cntr,w,c
  8854  0029C2  0D01               	mullw	1
  8855  0029C4  0E1D               	movlw	low _found_line2
  8856  0029C6  24F3               	addwf	prodl,w,c
  8857  0029C8  6EF6               	movwf	tblptrl,c
  8858  0029CA  0E8D               	movlw	high _found_line2
  8859  0029CC  20F4               	addwfc	prodh,w,c
  8860  0029CE  6EF7               	movwf	tblptrh,c
  8861  0029D0                     	if	1	;There are 3 active tblptr bytes
  8862  0029D0  6AF8               	clrf	tblptru,c
  8863  0029D2  0E00               	movlw	low (__mediumconst shr (0+16))
  8864  0029D4  22F8               	addwfc	tblptru,f,c
  8865  0029D6                     	endif
  8866  0029D6  0008               	tblrd		*
  8867  0029D8  50F5               	movf	tablat,w,c
  8868  0029DA  0900               	iorlw	0
  8869  0029DC  A4D8               	btfss	status,2,c
  8870  0029DE  D7D9               	goto	l1459
  8871                           
  8872                           ;display.c: 314: cntr = 0;
  8873  0029E0  0E00               	movlw	0
  8874  0029E2  6E28               	movwf	__display_found@cntr,c
  8875                           
  8876                           ;display.c: 315: while(found_line3[cntr])
  8877  0029E4  D017               	goto	l1461
  8878  0029E6                     
  8879                           ;display.c: 316: display_content[2][cntr] = found_line3[cntr++];
  8880  0029E6  5028               	movf	__display_found@cntr,w,c
  8881  0029E8  0D01               	mullw	1
  8882  0029EA  0E98               	movlw	low _found_line3
  8883  0029EC  24F3               	addwf	prodl,w,c
  8884  0029EE  6EF6               	movwf	tblptrl,c
  8885  0029F0  0E8E               	movlw	high _found_line3
  8886  0029F2  20F4               	addwfc	prodh,w,c
  8887  0029F4  6EF7               	movwf	tblptrh,c
  8888  0029F6                     	if	1	;There are 3 active tblptr bytes
  8889  0029F6  6AF8               	clrf	tblptru,c
  8890  0029F8  0E00               	movlw	low (__mediumconst shr (0+16))
  8891  0029FA  22F8               	addwfc	tblptru,f,c
  8892  0029FC                     	endif
  8893  0029FC  5028               	movf	__display_found@cntr,w,c
  8894  0029FE  0D01               	mullw	1
  8895  002A00  0E94               	movlw	low (_display_content+40)
  8896  002A02  24F3               	addwf	prodl,w,c
  8897  002A04  6ED9               	movwf	fsr2l,c
  8898  002A06  0E01               	movlw	high (_display_content+40)
  8899  002A08  20F4               	addwfc	prodh,w,c
  8900  002A0A  6EDA               	movwf	fsr2h,c
  8901  002A0C  0008               	tblrd		*
  8902  002A0E  CFF5 FFDF          	movff	tablat,indf2
  8903  002A12  2A28               	incf	__display_found@cntr,f,c
  8904  002A14                     l1461:
  8905  002A14  5028               	movf	__display_found@cntr,w,c
  8906  002A16  0D01               	mullw	1
  8907  002A18  0E98               	movlw	low _found_line3
  8908  002A1A  24F3               	addwf	prodl,w,c
  8909  002A1C  6EF6               	movwf	tblptrl,c
  8910  002A1E  0E8E               	movlw	high _found_line3
  8911  002A20  20F4               	addwfc	prodh,w,c
  8912  002A22  6EF7               	movwf	tblptrh,c
  8913  002A24                     	if	1	;There are 3 active tblptr bytes
  8914  002A24  6AF8               	clrf	tblptru,c
  8915  002A26  0E00               	movlw	low (__mediumconst shr (0+16))
  8916  002A28  22F8               	addwfc	tblptru,f,c
  8917  002A2A                     	endif
  8918  002A2A  0008               	tblrd		*
  8919  002A2C  50F5               	movf	tablat,w,c
  8920  002A2E  0900               	iorlw	0
  8921  002A30  A4D8               	btfss	status,2,c
  8922  002A32  D7D9               	goto	l1462
  8923                           
  8924                           ;display.c: 317: start = cntr;
  8925  002A34  C028  F027         	movff	__display_found@cntr,__display_found@start
  8926                           
  8927                           ;display.c: 318: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
  8928  002A38  EC2F  F03D         	call	_bootloader_get_file_size	;wreg free
  8929  002A3C  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
  8930  002A40  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
  8931  002A44  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
  8932  002A48  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
  8933  002A4C  5028               	movf	__display_found@cntr,w,c
  8934  002A4E  0D01               	mullw	1
  8935  002A50  0E94               	movlw	low (_display_content+40)
  8936  002A52  24F3               	addwf	prodl,w,c
  8937  002A54  6E23               	movwf	__display_itoa_u32@text,c
  8938  002A56  0E01               	movlw	high (_display_content+40)
  8939  002A58  20F4               	addwfc	prodh,w,c
  8940  002A5A  6E24               	movwf	__display_itoa_u32@text+1,c
  8941  002A5C  EC2D  F004         	call	__display_itoa_u32	;wreg free
  8942  002A60  2627               	addwf	__display_found@start,f,c
  8943                           
  8944                           ;display.c: 319: cntr = 0;
  8945  002A62  0E00               	movlw	0
  8946  002A64  6E28               	movwf	__display_found@cntr,c
  8947                           
  8948                           ;display.c: 320: while(found_line3b[cntr])
  8949  002A66  D01C               	goto	l1464
  8950  002A68                     
  8951                           ;display.c: 321: display_content[2][start+cntr] = found_line3b[cntr++];
  8952  002A68  5028               	movf	__display_found@cntr,w,c
  8953  002A6A  0D01               	mullw	1
  8954  002A6C  0E91               	movlw	low _found_line3b
  8955  002A6E  24F3               	addwf	prodl,w,c
  8956  002A70  6EF6               	movwf	tblptrl,c
  8957  002A72  0E8E               	movlw	high _found_line3b
  8958  002A74  20F4               	addwfc	prodh,w,c
  8959  002A76  6EF7               	movwf	tblptrh,c
  8960  002A78                     	if	1	;There are 3 active tblptr bytes
  8961  002A78  6AF8               	clrf	tblptru,c
  8962  002A7A  0E00               	movlw	low (__mediumconst shr (0+16))
  8963  002A7C  22F8               	addwfc	tblptru,f,c
  8964  002A7E                     	endif
  8965  002A7E  5028               	movf	__display_found@cntr,w,c
  8966  002A80  C027  F025         	movff	__display_found@start,??__display_found
  8967  002A84  6A26               	clrf	(??__display_found+1)& (0+255),c
  8968  002A86  2625               	addwf	??__display_found,f,c
  8969  002A88  0E00               	movlw	0
  8970  002A8A  2226               	addwfc	??__display_found+1,f,c
  8971  002A8C  0E94               	movlw	low (_display_content+40)
  8972  002A8E  2425               	addwf	??__display_found,w,c
  8973  002A90  6ED9               	movwf	fsr2l,c
  8974  002A92  0E01               	movlw	high (_display_content+40)
  8975  002A94  2026               	addwfc	??__display_found+1,w,c
  8976  002A96  6EDA               	movwf	fsr2h,c
  8977  002A98  0008               	tblrd		*
  8978  002A9A  CFF5 FFDF          	movff	tablat,indf2
  8979  002A9E  2A28               	incf	__display_found@cntr,f,c
  8980  002AA0                     l1464:
  8981  002AA0  5028               	movf	__display_found@cntr,w,c
  8982  002AA2  0D01               	mullw	1
  8983  002AA4  0E91               	movlw	low _found_line3b
  8984  002AA6  24F3               	addwf	prodl,w,c
  8985  002AA8  6EF6               	movwf	tblptrl,c
  8986  002AAA  0E8E               	movlw	high _found_line3b
  8987  002AAC  20F4               	addwfc	prodh,w,c
  8988  002AAE  6EF7               	movwf	tblptrh,c
  8989  002AB0                     	if	1	;There are 3 active tblptr bytes
  8990  002AB0  6AF8               	clrf	tblptru,c
  8991  002AB2  0E00               	movlw	low (__mediumconst shr (0+16))
  8992  002AB4  22F8               	addwfc	tblptru,f,c
  8993  002AB6                     	endif
  8994  002AB6  0008               	tblrd		*
  8995  002AB8  50F5               	movf	tablat,w,c
  8996  002ABA  0900               	iorlw	0
  8997  002ABC  A4D8               	btfss	status,2,c
  8998  002ABE  D7D4               	goto	l1465
  8999                           
  9000                           ;display.c: 323: cntr = 0;
  9001  002AC0  0E00               	movlw	0
  9002  002AC2  6E28               	movwf	__display_found@cntr,c
  9003                           
  9004                           ;display.c: 324: while(found_line4[cntr])
  9005  002AC4  D017               	goto	l1467
  9006  002AC6                     
  9007                           ;display.c: 325: display_content[3][cntr] = found_line4[cntr++];
  9008  002AC6  5028               	movf	__display_found@cntr,w,c
  9009  002AC8  0D01               	mullw	1
  9010  002ACA  0E54               	movlw	low _found_line4
  9011  002ACC  24F3               	addwf	prodl,w,c
  9012  002ACE  6EF6               	movwf	tblptrl,c
  9013  002AD0  0E8D               	movlw	high _found_line4
  9014  002AD2  20F4               	addwfc	prodh,w,c
  9015  002AD4  6EF7               	movwf	tblptrh,c
  9016  002AD6                     	if	1	;There are 3 active tblptr bytes
  9017  002AD6  6AF8               	clrf	tblptru,c
  9018  002AD8  0E00               	movlw	low (__mediumconst shr (0+16))
  9019  002ADA  22F8               	addwfc	tblptru,f,c
  9020  002ADC                     	endif
  9021  002ADC  5028               	movf	__display_found@cntr,w,c
  9022  002ADE  0D01               	mullw	1
  9023  002AE0  0EA8               	movlw	low (_display_content+60)
  9024  002AE2  24F3               	addwf	prodl,w,c
  9025  002AE4  6ED9               	movwf	fsr2l,c
  9026  002AE6  0E01               	movlw	high (_display_content+60)
  9027  002AE8  20F4               	addwfc	prodh,w,c
  9028  002AEA  6EDA               	movwf	fsr2h,c
  9029  002AEC  0008               	tblrd		*
  9030  002AEE  CFF5 FFDF          	movff	tablat,indf2
  9031  002AF2  2A28               	incf	__display_found@cntr,f,c
  9032  002AF4                     l1467:
  9033  002AF4  5028               	movf	__display_found@cntr,w,c
  9034  002AF6  0D01               	mullw	1
  9035  002AF8  0E54               	movlw	low _found_line4
  9036  002AFA  24F3               	addwf	prodl,w,c
  9037  002AFC  6EF6               	movwf	tblptrl,c
  9038  002AFE  0E8D               	movlw	high _found_line4
  9039  002B00  20F4               	addwfc	prodh,w,c
  9040  002B02  6EF7               	movwf	tblptrh,c
  9041  002B04                     	if	1	;There are 3 active tblptr bytes
  9042  002B04  6AF8               	clrf	tblptru,c
  9043  002B06  0E00               	movlw	low (__mediumconst shr (0+16))
  9044  002B08  22F8               	addwfc	tblptru,f,c
  9045  002B0A                     	endif
  9046  002B0A  0008               	tblrd		*
  9047  002B0C  50F5               	movf	tablat,w,c
  9048  002B0E  0900               	iorlw	0
  9049  002B10  B4D8               	btfsc	status,2,c
  9050  002B12  0012               	return	
  9051  002B14  D7D8               	goto	l1468
  9052  002B16                     __end_of__display_found:
  9053                           	opt stack 0
  9054                           tblptru	equ	0xFF8
  9055                           tblptrh	equ	0xFF7
  9056                           tblptrl	equ	0xFF6
  9057                           tablat	equ	0xFF5
  9058                           prodh	equ	0xFF4
  9059                           prodl	equ	0xFF3
  9060                           intcon	equ	0xFF2
  9061                           intcon2	equ	0xFF1
  9062                           intcon3	equ	0xFF0
  9063                           postinc0	equ	0xFEE
  9064                           wreg	equ	0xFE8
  9065                           postdec1	equ	0xFE5
  9066                           plusw1	equ	0xFE3
  9067                           fsr1h	equ	0xFE2
  9068                           fsr1l	equ	0xFE1
  9069                           indf2	equ	0xFDF
  9070                           postinc2	equ	0xFDE
  9071                           plusw2	equ	0xFDB
  9072                           fsr2h	equ	0xFDA
  9073                           fsr2l	equ	0xFD9
  9074                           status	equ	0xFD8
  9075                           
  9076 ;; *************** function __display_failed *****************
  9077 ;; Defined at:
  9078 ;;		line 366 in file "display.c"
  9079 ;; Parameters:    Size  Location     Type
  9080 ;;		None
  9081 ;; Auto vars:     Size  Location     Type
  9082 ;;  cntr            1   36[COMRAM] unsigned char 
  9083 ;;  start           1    0        unsigned char 
  9084 ;; Return value:  Size  Location     Type
  9085 ;;                  1    wreg      void 
  9086 ;; Registers used:
  9087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9088 ;; Tracked objects:
  9089 ;;		On entry : 0/0
  9090 ;;		On exit  : 0/0
  9091 ;;		Unchanged: 0/0
  9092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9096 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9097 ;;Total ram usage:        1 bytes
  9098 ;; Hardware stack levels used:    1
  9099 ;; Hardware stack levels required when called:    5
  9100 ;; This function calls:
  9101 ;;		__display_itoa_u16
  9102 ;;		__display_itoa_u32
  9103 ;;		_bootloader_get_entries
  9104 ;;		_bootloader_get_error
  9105 ;;		_bootloader_get_rec_address
  9106 ;; This function is called by:
  9107 ;;		_display_prepare
  9108 ;; This function uses a non-reentrant model
  9109 ;;
  9110                           
  9111                           	psect	text36
  9112  000F30                     __ptext36:
  9113                           	opt stack 0
  9114  000F30                     __display_failed:
  9115                           	opt stack 24
  9116                           
  9117                           ;display.c: 368: uint8_t cntr;;display.c: 369: uint8_t start;;display.c: 370: cntr = 0;
  9118                           
  9119                           ;incstack = 0
  9120  000F30  0E00               	movlw	0
  9121  000F32  6E25               	movwf	__display_failed@cntr,c
  9122                           
  9123                           ;display.c: 371: while(failed_line1[cntr])
  9124  000F34  D017               	goto	l1500
  9125  000F36                     
  9126                           ;display.c: 372: display_content[0][cntr] = failed_line1[cntr++];
  9127  000F36  5025               	movf	__display_failed@cntr,w,c
  9128  000F38  0D01               	mullw	1
  9129  000F3A  0EE9               	movlw	low _failed_line1
  9130  000F3C  24F3               	addwf	prodl,w,c
  9131  000F3E  6EF6               	movwf	tblptrl,c
  9132  000F40  0E8D               	movlw	high _failed_line1
  9133  000F42  20F4               	addwfc	prodh,w,c
  9134  000F44  6EF7               	movwf	tblptrh,c
  9135  000F46                     	if	1	;There are 3 active tblptr bytes
  9136  000F46  6AF8               	clrf	tblptru,c
  9137  000F48  0E00               	movlw	low (__mediumconst shr (0+16))
  9138  000F4A  22F8               	addwfc	tblptru,f,c
  9139  000F4C                     	endif
  9140  000F4C  5025               	movf	__display_failed@cntr,w,c
  9141  000F4E  0D01               	mullw	1
  9142  000F50  0E6C               	movlw	low _display_content
  9143  000F52  24F3               	addwf	prodl,w,c
  9144  000F54  6ED9               	movwf	fsr2l,c
  9145  000F56  0E01               	movlw	high _display_content
  9146  000F58  20F4               	addwfc	prodh,w,c
  9147  000F5A  6EDA               	movwf	fsr2h,c
  9148  000F5C  0008               	tblrd		*
  9149  000F5E  CFF5 FFDF          	movff	tablat,indf2
  9150  000F62  2A25               	incf	__display_failed@cntr,f,c
  9151  000F64                     l1500:
  9152  000F64  5025               	movf	__display_failed@cntr,w,c
  9153  000F66  0D01               	mullw	1
  9154  000F68  0EE9               	movlw	low _failed_line1
  9155  000F6A  24F3               	addwf	prodl,w,c
  9156  000F6C  6EF6               	movwf	tblptrl,c
  9157  000F6E  0E8D               	movlw	high _failed_line1
  9158  000F70  20F4               	addwfc	prodh,w,c
  9159  000F72  6EF7               	movwf	tblptrh,c
  9160  000F74                     	if	1	;There are 3 active tblptr bytes
  9161  000F74  6AF8               	clrf	tblptru,c
  9162  000F76  0E00               	movlw	low (__mediumconst shr (0+16))
  9163  000F78  22F8               	addwfc	tblptru,f,c
  9164  000F7A                     	endif
  9165  000F7A  0008               	tblrd		*
  9166  000F7C  50F5               	movf	tablat,w,c
  9167  000F7E  0900               	iorlw	0
  9168  000F80  A4D8               	btfss	status,2,c
  9169  000F82  D7D9               	goto	l1501
  9170                           
  9171                           ;display.c: 373: cntr = 0;
  9172  000F84  0E00               	movlw	0
  9173  000F86  6E25               	movwf	__display_failed@cntr,c
  9174                           
  9175                           ;display.c: 374: while(failed_line2[cntr])
  9176  000F88  D017               	goto	l1503
  9177  000F8A                     
  9178                           ;display.c: 375: display_content[1][cntr] = failed_line2[cntr++];
  9179  000F8A  5025               	movf	__display_failed@cntr,w,c
  9180  000F8C  0D01               	mullw	1
  9181  000F8E  0E42               	movlw	low _failed_line2
  9182  000F90  24F3               	addwf	prodl,w,c
  9183  000F92  6EF6               	movwf	tblptrl,c
  9184  000F94  0E8D               	movlw	high _failed_line2
  9185  000F96  20F4               	addwfc	prodh,w,c
  9186  000F98  6EF7               	movwf	tblptrh,c
  9187  000F9A                     	if	1	;There are 3 active tblptr bytes
  9188  000F9A  6AF8               	clrf	tblptru,c
  9189  000F9C  0E00               	movlw	low (__mediumconst shr (0+16))
  9190  000F9E  22F8               	addwfc	tblptru,f,c
  9191  000FA0                     	endif
  9192  000FA0  5025               	movf	__display_failed@cntr,w,c
  9193  000FA2  0D01               	mullw	1
  9194  000FA4  0E80               	movlw	low (_display_content+20)
  9195  000FA6  24F3               	addwf	prodl,w,c
  9196  000FA8  6ED9               	movwf	fsr2l,c
  9197  000FAA  0E01               	movlw	high (_display_content+20)
  9198  000FAC  20F4               	addwfc	prodh,w,c
  9199  000FAE  6EDA               	movwf	fsr2h,c
  9200  000FB0  0008               	tblrd		*
  9201  000FB2  CFF5 FFDF          	movff	tablat,indf2
  9202  000FB6  2A25               	incf	__display_failed@cntr,f,c
  9203  000FB8                     l1503:
  9204  000FB8  5025               	movf	__display_failed@cntr,w,c
  9205  000FBA  0D01               	mullw	1
  9206  000FBC  0E42               	movlw	low _failed_line2
  9207  000FBE  24F3               	addwf	prodl,w,c
  9208  000FC0  6EF6               	movwf	tblptrl,c
  9209  000FC2  0E8D               	movlw	high _failed_line2
  9210  000FC4  20F4               	addwfc	prodh,w,c
  9211  000FC6  6EF7               	movwf	tblptrh,c
  9212  000FC8                     	if	1	;There are 3 active tblptr bytes
  9213  000FC8  6AF8               	clrf	tblptru,c
  9214  000FCA  0E00               	movlw	low (__mediumconst shr (0+16))
  9215  000FCC  22F8               	addwfc	tblptru,f,c
  9216  000FCE                     	endif
  9217  000FCE  0008               	tblrd		*
  9218  000FD0  50F5               	movf	tablat,w,c
  9219  000FD2  0900               	iorlw	0
  9220  000FD4  A4D8               	btfss	status,2,c
  9221  000FD6  D7D9               	goto	l1504
  9222                           
  9223                           ;display.c: 377: cntr = 0;
  9224  000FD8  0E00               	movlw	0
  9225  000FDA  6E25               	movwf	__display_failed@cntr,c
  9226                           
  9227                           ;display.c: 378: switch(bootloader_get_error())
  9228  000FDC  D0D6               	goto	l1506
  9229  000FDE                     
  9230                           ;display.c: 382: display_content[2][cntr] = failed_line3_startCode[cntr++];
  9231  000FDE  5025               	movf	__display_failed@cntr,w,c
  9232  000FE0  0D01               	mullw	1
  9233  000FE2  0E0A               	movlw	low _failed_line3_startCode
  9234  000FE4  24F3               	addwf	prodl,w,c
  9235  000FE6  6EF6               	movwf	tblptrl,c
  9236  000FE8  0E8D               	movlw	high _failed_line3_startCode
  9237  000FEA  20F4               	addwfc	prodh,w,c
  9238  000FEC  6EF7               	movwf	tblptrh,c
  9239  000FEE                     	if	1	;There are 3 active tblptr bytes
  9240  000FEE  6AF8               	clrf	tblptru,c
  9241  000FF0  0E00               	movlw	low (__mediumconst shr (0+16))
  9242  000FF2  22F8               	addwfc	tblptru,f,c
  9243  000FF4                     	endif
  9244  000FF4  5025               	movf	__display_failed@cntr,w,c
  9245  000FF6  0D01               	mullw	1
  9246  000FF8  0E94               	movlw	low (_display_content+40)
  9247  000FFA  24F3               	addwf	prodl,w,c
  9248  000FFC  6ED9               	movwf	fsr2l,c
  9249  000FFE  0E01               	movlw	high (_display_content+40)
  9250  001000  20F4               	addwfc	prodh,w,c
  9251  001002  6EDA               	movwf	fsr2h,c
  9252  001004  0008               	tblrd		*
  9253  001006  CFF5 FFDF          	movff	tablat,indf2
  9254  00100A  2A25               	incf	__display_failed@cntr,f,c
  9255  00100C  5025               	movf	__display_failed@cntr,w,c
  9256  00100E  0D01               	mullw	1
  9257  001010  0E0A               	movlw	low _failed_line3_startCode
  9258  001012  24F3               	addwf	prodl,w,c
  9259  001014  6EF6               	movwf	tblptrl,c
  9260  001016  0E8D               	movlw	high _failed_line3_startCode
  9261  001018  20F4               	addwfc	prodh,w,c
  9262  00101A  6EF7               	movwf	tblptrh,c
  9263  00101C                     	if	1	;There are 3 active tblptr bytes
  9264  00101C  6AF8               	clrf	tblptru,c
  9265  00101E  0E00               	movlw	low (__mediumconst shr (0+16))
  9266  001020  22F8               	addwfc	tblptru,f,c
  9267  001022                     	endif
  9268  001022  0008               	tblrd		*
  9269  001024  50F5               	movf	tablat,w,c
  9270  001026  0900               	iorlw	0
  9271  001028  B4D8               	btfsc	status,2,c
  9272  00102A  D0C0               	goto	l1511
  9273  00102C  D7D8               	goto	l1509
  9274  00102E                     
  9275                           ;display.c: 387: display_content[2][cntr] = failed_line3_checksum[cntr++];
  9276  00102E  5025               	movf	__display_failed@cntr,w,c
  9277  001030  0D01               	mullw	1
  9278  001032  0E29               	movlw	low _failed_line3_checksum
  9279  001034  24F3               	addwf	prodl,w,c
  9280  001036  6EF6               	movwf	tblptrl,c
  9281  001038  0E8E               	movlw	high _failed_line3_checksum
  9282  00103A  20F4               	addwfc	prodh,w,c
  9283  00103C  6EF7               	movwf	tblptrh,c
  9284  00103E                     	if	1	;There are 3 active tblptr bytes
  9285  00103E  6AF8               	clrf	tblptru,c
  9286  001040  0E00               	movlw	low (__mediumconst shr (0+16))
  9287  001042  22F8               	addwfc	tblptru,f,c
  9288  001044                     	endif
  9289  001044  5025               	movf	__display_failed@cntr,w,c
  9290  001046  0D01               	mullw	1
  9291  001048  0E94               	movlw	low (_display_content+40)
  9292  00104A  24F3               	addwf	prodl,w,c
  9293  00104C  6ED9               	movwf	fsr2l,c
  9294  00104E  0E01               	movlw	high (_display_content+40)
  9295  001050  20F4               	addwfc	prodh,w,c
  9296  001052  6EDA               	movwf	fsr2h,c
  9297  001054  0008               	tblrd		*
  9298  001056  CFF5 FFDF          	movff	tablat,indf2
  9299  00105A  2A25               	incf	__display_failed@cntr,f,c
  9300  00105C  5025               	movf	__display_failed@cntr,w,c
  9301  00105E  0D01               	mullw	1
  9302  001060  0E29               	movlw	low _failed_line3_checksum
  9303  001062  24F3               	addwf	prodl,w,c
  9304  001064  6EF6               	movwf	tblptrl,c
  9305  001066  0E8E               	movlw	high _failed_line3_checksum
  9306  001068  20F4               	addwfc	prodh,w,c
  9307  00106A  6EF7               	movwf	tblptrh,c
  9308  00106C                     	if	1	;There are 3 active tblptr bytes
  9309  00106C  6AF8               	clrf	tblptru,c
  9310  00106E  0E00               	movlw	low (__mediumconst shr (0+16))
  9311  001070  22F8               	addwfc	tblptru,f,c
  9312  001072                     	endif
  9313  001072  0008               	tblrd		*
  9314  001074  50F5               	movf	tablat,w,c
  9315  001076  0900               	iorlw	0
  9316  001078  B4D8               	btfsc	status,2,c
  9317  00107A  D098               	goto	l1511
  9318  00107C  D7D8               	goto	l1514
  9319  00107E                     
  9320                           ;display.c: 394: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
  9321  00107E  5025               	movf	__display_failed@cntr,w,c
  9322  001080  0D01               	mullw	1
  9323  001082  0E38               	movlw	low _failed_line3_noNextRecord
  9324  001084  24F3               	addwf	prodl,w,c
  9325  001086  6EF6               	movwf	tblptrl,c
  9326  001088  0E8E               	movlw	high _failed_line3_noNextRecord
  9327  00108A  20F4               	addwfc	prodh,w,c
  9328  00108C  6EF7               	movwf	tblptrh,c
  9329  00108E                     	if	1	;There are 3 active tblptr bytes
  9330  00108E  6AF8               	clrf	tblptru,c
  9331  001090  0E00               	movlw	low (__mediumconst shr (0+16))
  9332  001092  22F8               	addwfc	tblptru,f,c
  9333  001094                     	endif
  9334  001094  5025               	movf	__display_failed@cntr,w,c
  9335  001096  0D01               	mullw	1
  9336  001098  0E94               	movlw	low (_display_content+40)
  9337  00109A  24F3               	addwf	prodl,w,c
  9338  00109C  6ED9               	movwf	fsr2l,c
  9339  00109E  0E01               	movlw	high (_display_content+40)
  9340  0010A0  20F4               	addwfc	prodh,w,c
  9341  0010A2  6EDA               	movwf	fsr2h,c
  9342  0010A4  0008               	tblrd		*
  9343  0010A6  CFF5 FFDF          	movff	tablat,indf2
  9344  0010AA  2A25               	incf	__display_failed@cntr,f,c
  9345  0010AC  5025               	movf	__display_failed@cntr,w,c
  9346  0010AE  0D01               	mullw	1
  9347  0010B0  0E38               	movlw	low _failed_line3_noNextRecord
  9348  0010B2  24F3               	addwf	prodl,w,c
  9349  0010B4  6EF6               	movwf	tblptrl,c
  9350  0010B6  0E8E               	movlw	high _failed_line3_noNextRecord
  9351  0010B8  20F4               	addwfc	prodh,w,c
  9352  0010BA  6EF7               	movwf	tblptrh,c
  9353  0010BC                     	if	1	;There are 3 active tblptr bytes
  9354  0010BC  6AF8               	clrf	tblptru,c
  9355  0010BE  0E00               	movlw	low (__mediumconst shr (0+16))
  9356  0010C0  22F8               	addwfc	tblptru,f,c
  9357  0010C2                     	endif
  9358  0010C2  0008               	tblrd		*
  9359  0010C4  50F5               	movf	tablat,w,c
  9360  0010C6  0900               	iorlw	0
  9361  0010C8  B4D8               	btfsc	status,2,c
  9362  0010CA  D070               	goto	l1511
  9363  0010CC  D7D8               	goto	l1518
  9364  0010CE                     
  9365                           ;display.c: 399: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
  9366  0010CE  5025               	movf	__display_failed@cntr,w,c
  9367  0010D0  0D01               	mullw	1
  9368  0010D2  0E47               	movlw	low _failed_line3_dataTooLong
  9369  0010D4  24F3               	addwf	prodl,w,c
  9370  0010D6  6EF6               	movwf	tblptrl,c
  9371  0010D8  0E8E               	movlw	high _failed_line3_dataTooLong
  9372  0010DA  20F4               	addwfc	prodh,w,c
  9373  0010DC  6EF7               	movwf	tblptrh,c
  9374  0010DE                     	if	1	;There are 3 active tblptr bytes
  9375  0010DE  6AF8               	clrf	tblptru,c
  9376  0010E0  0E00               	movlw	low (__mediumconst shr (0+16))
  9377  0010E2  22F8               	addwfc	tblptru,f,c
  9378  0010E4                     	endif
  9379  0010E4  5025               	movf	__display_failed@cntr,w,c
  9380  0010E6  0D01               	mullw	1
  9381  0010E8  0E94               	movlw	low (_display_content+40)
  9382  0010EA  24F3               	addwf	prodl,w,c
  9383  0010EC  6ED9               	movwf	fsr2l,c
  9384  0010EE  0E01               	movlw	high (_display_content+40)
  9385  0010F0  20F4               	addwfc	prodh,w,c
  9386  0010F2  6EDA               	movwf	fsr2h,c
  9387  0010F4  0008               	tblrd		*
  9388  0010F6  CFF5 FFDF          	movff	tablat,indf2
  9389  0010FA  2A25               	incf	__display_failed@cntr,f,c
  9390  0010FC  5025               	movf	__display_failed@cntr,w,c
  9391  0010FE  0D01               	mullw	1
  9392  001100  0E47               	movlw	low _failed_line3_dataTooLong
  9393  001102  24F3               	addwf	prodl,w,c
  9394  001104  6EF6               	movwf	tblptrl,c
  9395  001106  0E8E               	movlw	high _failed_line3_dataTooLong
  9396  001108  20F4               	addwfc	prodh,w,c
  9397  00110A  6EF7               	movwf	tblptrh,c
  9398  00110C                     	if	1	;There are 3 active tblptr bytes
  9399  00110C  6AF8               	clrf	tblptru,c
  9400  00110E  0E00               	movlw	low (__mediumconst shr (0+16))
  9401  001110  22F8               	addwfc	tblptru,f,c
  9402  001112                     	endif
  9403  001112  0008               	tblrd		*
  9404  001114  50F5               	movf	tablat,w,c
  9405  001116  0900               	iorlw	0
  9406  001118  B4D8               	btfsc	status,2,c
  9407  00111A  D048               	goto	l1511
  9408  00111C  D7D8               	goto	l1522
  9409  00111E                     
  9410                           ;display.c: 404: display_content[2][cntr] = failed_line3_addressRange[cntr++];
  9411  00111E  5025               	movf	__display_failed@cntr,w,c
  9412  001120  0D01               	mullw	1
  9413  001122  0EE2               	movlw	low _failed_line3_addressRange
  9414  001124  24F3               	addwf	prodl,w,c
  9415  001126  6EF6               	movwf	tblptrl,c
  9416  001128  0E8C               	movlw	high _failed_line3_addressRange
  9417  00112A  20F4               	addwfc	prodh,w,c
  9418  00112C  6EF7               	movwf	tblptrh,c
  9419  00112E                     	if	1	;There are 3 active tblptr bytes
  9420  00112E  6AF8               	clrf	tblptru,c
  9421  001130  0E00               	movlw	low (__mediumconst shr (0+16))
  9422  001132  22F8               	addwfc	tblptru,f,c
  9423  001134                     	endif
  9424  001134  5025               	movf	__display_failed@cntr,w,c
  9425  001136  0D01               	mullw	1
  9426  001138  0E94               	movlw	low (_display_content+40)
  9427  00113A  24F3               	addwf	prodl,w,c
  9428  00113C  6ED9               	movwf	fsr2l,c
  9429  00113E  0E01               	movlw	high (_display_content+40)
  9430  001140  20F4               	addwfc	prodh,w,c
  9431  001142  6EDA               	movwf	fsr2h,c
  9432  001144  0008               	tblrd		*
  9433  001146  CFF5 FFDF          	movff	tablat,indf2
  9434  00114A  2A25               	incf	__display_failed@cntr,f,c
  9435  00114C  5025               	movf	__display_failed@cntr,w,c
  9436  00114E  0D01               	mullw	1
  9437  001150  0EE2               	movlw	low _failed_line3_addressRange
  9438  001152  24F3               	addwf	prodl,w,c
  9439  001154  6EF6               	movwf	tblptrl,c
  9440  001156  0E8C               	movlw	high _failed_line3_addressRange
  9441  001158  20F4               	addwfc	prodh,w,c
  9442  00115A  6EF7               	movwf	tblptrh,c
  9443  00115C                     	if	1	;There are 3 active tblptr bytes
  9444  00115C  6AF8               	clrf	tblptru,c
  9445  00115E  0E00               	movlw	low (__mediumconst shr (0+16))
  9446  001160  22F8               	addwfc	tblptru,f,c
  9447  001162                     	endif
  9448  001162  0008               	tblrd		*
  9449  001164  50F5               	movf	tablat,w,c
  9450  001166  0900               	iorlw	0
  9451  001168  A4D8               	btfss	status,2,c
  9452  00116A  D7D9               	goto	l1526
  9453                           
  9454                           ;display.c: 405: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
  9455  00116C  EC80  F03D         	call	_bootloader_get_rec_address	;wreg free
  9456  001170  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
  9457  001174  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
  9458  001178  6A21               	clrf	__display_itoa_u32@value+2,c
  9459  00117A  6A22               	clrf	__display_itoa_u32@value+3,c
  9460  00117C  0EB6               	movlw	low (_display_content+74)
  9461  00117E  6E23               	movwf	__display_itoa_u32@text,c
  9462  001180  0E01               	movlw	high (_display_content+74)
  9463  001182  6E24               	movwf	__display_itoa_u32@text+1,c
  9464  001184  EC2D  F004         	call	__display_itoa_u32	;wreg free
  9465                           
  9466                           ;display.c: 408: }
  9467                           
  9468                           ;display.c: 406: break;
  9469  001188  D011               	goto	l1511
  9470  00118A                     l1506:
  9471  00118A  ECB1  F03D         	call	_bootloader_get_error	;wreg free
  9472                           
  9473                           ; Switch size 1, requested type "space"
  9474                           ; Number of cases is 5, Range of values is 11 to 15
  9475                           ; switch strategies available:
  9476                           ; Name         Instructions Cycles
  9477                           ; simple_byte           16     9 (average)
  9478                           ;	Chosen strategy is simple_byte
  9479  00118E  0A0B               	xorlw	11	; case 11
  9480  001190  B4D8               	btfsc	status,2,c
  9481  001192  D7DC               	goto	l1525
  9482  001194  0A07               	xorlw	7	; case 12
  9483  001196  B4D8               	btfsc	status,2,c
  9484  001198  D7B1               	goto	l1521
  9485  00119A  0A01               	xorlw	1	; case 13
  9486  00119C  B4D8               	btfsc	status,2,c
  9487  00119E  D786               	goto	l1517
  9488  0011A0  0A03               	xorlw	3	; case 14
  9489  0011A2  B4D8               	btfsc	status,2,c
  9490  0011A4  D75B               	goto	l1513
  9491  0011A6  0A01               	xorlw	1	; case 15
  9492  0011A8  B4D8               	btfsc	status,2,c
  9493  0011AA  D730               	goto	l1508
  9494  0011AC                     l1511:
  9495                           
  9496                           ;display.c: 410: cntr = 0;
  9497  0011AC  0E00               	movlw	0
  9498  0011AE  6E25               	movwf	__display_failed@cntr,c
  9499                           
  9500                           ;display.c: 411: while(failed_line4[cntr])
  9501  0011B0  D017               	goto	l1528
  9502  0011B2                     
  9503                           ;display.c: 412: display_content[3][cntr] = failed_line4[cntr++];
  9504  0011B2  5025               	movf	__display_failed@cntr,w,c
  9505  0011B4  0D01               	mullw	1
  9506  0011B6  0E6B               	movlw	low _failed_line4
  9507  0011B8  24F3               	addwf	prodl,w,c
  9508  0011BA  6EF6               	movwf	tblptrl,c
  9509  0011BC  0E8E               	movlw	high _failed_line4
  9510  0011BE  20F4               	addwfc	prodh,w,c
  9511  0011C0  6EF7               	movwf	tblptrh,c
  9512  0011C2                     	if	1	;There are 3 active tblptr bytes
  9513  0011C2  6AF8               	clrf	tblptru,c
  9514  0011C4  0E00               	movlw	low (__mediumconst shr (0+16))
  9515  0011C6  22F8               	addwfc	tblptru,f,c
  9516  0011C8                     	endif
  9517  0011C8  5025               	movf	__display_failed@cntr,w,c
  9518  0011CA  0D01               	mullw	1
  9519  0011CC  0EA8               	movlw	low (_display_content+60)
  9520  0011CE  24F3               	addwf	prodl,w,c
  9521  0011D0  6ED9               	movwf	fsr2l,c
  9522  0011D2  0E01               	movlw	high (_display_content+60)
  9523  0011D4  20F4               	addwfc	prodh,w,c
  9524  0011D6  6EDA               	movwf	fsr2h,c
  9525  0011D8  0008               	tblrd		*
  9526  0011DA  CFF5 FFDF          	movff	tablat,indf2
  9527  0011DE  2A25               	incf	__display_failed@cntr,f,c
  9528  0011E0                     l1528:
  9529  0011E0  5025               	movf	__display_failed@cntr,w,c
  9530  0011E2  0D01               	mullw	1
  9531  0011E4  0E6B               	movlw	low _failed_line4
  9532  0011E6  24F3               	addwf	prodl,w,c
  9533  0011E8  6EF6               	movwf	tblptrl,c
  9534  0011EA  0E8E               	movlw	high _failed_line4
  9535  0011EC  20F4               	addwfc	prodh,w,c
  9536  0011EE  6EF7               	movwf	tblptrh,c
  9537  0011F0                     	if	1	;There are 3 active tblptr bytes
  9538  0011F0  6AF8               	clrf	tblptru,c
  9539  0011F2  0E00               	movlw	low (__mediumconst shr (0+16))
  9540  0011F4  22F8               	addwfc	tblptru,f,c
  9541  0011F6                     	endif
  9542  0011F6  0008               	tblrd		*
  9543  0011F8  50F5               	movf	tablat,w,c
  9544  0011FA  0900               	iorlw	0
  9545  0011FC  A4D8               	btfss	status,2,c
  9546  0011FE  D7D9               	goto	l1529
  9547                           
  9548                           ;display.c: 413: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
  9549  001200  EC8A  F03D         	call	_bootloader_get_entries	;wreg free
  9550  001204  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  9551  001208  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  9552  00120C  6A1B               	clrf	__display_itoa_u16@value+2,c
  9553  00120E  6A1C               	clrf	__display_itoa_u16@value+3,c
  9554  001210  5025               	movf	__display_failed@cntr,w,c
  9555  001212  0D01               	mullw	1
  9556  001214  0EA8               	movlw	low (_display_content+60)
  9557  001216  24F3               	addwf	prodl,w,c
  9558  001218  6E1D               	movwf	__display_itoa_u16@text,c
  9559  00121A  0E01               	movlw	high (_display_content+60)
  9560  00121C  20F4               	addwfc	prodh,w,c
  9561  00121E  6E1E               	movwf	__display_itoa_u16@text+1,c
  9562  001220  EC4A  F027         	call	__display_itoa_u16	;wreg free
  9563  001224  0012               	return		;funcret
  9564  001226                     __end_of__display_failed:
  9565                           	opt stack 0
  9566                           tblptru	equ	0xFF8
  9567                           tblptrh	equ	0xFF7
  9568                           tblptrl	equ	0xFF6
  9569                           tablat	equ	0xFF5
  9570                           prodh	equ	0xFF4
  9571                           prodl	equ	0xFF3
  9572                           intcon	equ	0xFF2
  9573                           intcon2	equ	0xFF1
  9574                           intcon3	equ	0xFF0
  9575                           postinc0	equ	0xFEE
  9576                           wreg	equ	0xFE8
  9577                           postdec1	equ	0xFE5
  9578                           plusw1	equ	0xFE3
  9579                           fsr1h	equ	0xFE2
  9580                           fsr1l	equ	0xFE1
  9581                           indf2	equ	0xFDF
  9582                           postinc2	equ	0xFDE
  9583                           plusw2	equ	0xFDB
  9584                           fsr2h	equ	0xFDA
  9585                           fsr2l	equ	0xFD9
  9586                           status	equ	0xFD8
  9587                           
  9588 ;; *************** function __display_itoa_u32 *****************
  9589 ;; Defined at:
  9590 ;;		line 108 in file "display.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;  value           4   30[COMRAM] unsigned long 
  9593 ;;  text            2   34[COMRAM] PTR unsigned char 
  9594 ;;		 -> display_content(80), 
  9595 ;; Auto vars:     Size  Location     Type
  9596 ;;		None
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  1    wreg      unsigned char 
  9599 ;; Registers used:
  9600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9606 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9609 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9610 ;;Total ram usage:        6 bytes
  9611 ;; Hardware stack levels used:    1
  9612 ;; Hardware stack levels required when called:    4
  9613 ;; This function calls:
  9614 ;;		___lldiv
  9615 ;;		___llmod
  9616 ;;		__display_itoa_u16
  9617 ;;		_itoa
  9618 ;; This function is called by:
  9619 ;;		__display_found
  9620 ;;		__display_failed
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text37
  9625  00085A                     __ptext37:
  9626                           	opt stack 0
  9627  00085A                     __display_itoa_u32:
  9628                           	opt stack 24
  9629                           
  9630                           ;display.c: 111: if(value<=0x7FFF)
  9631                           
  9632                           ;incstack = 0
  9633  00085A  5022               	movf	__display_itoa_u32@value+3,w,c
  9634  00085C  1021               	iorwf	__display_itoa_u32@value+2,w,c
  9635  00085E  E111               	bnz	l12089
  9636  000860  0E80               	movlw	128
  9637  000862  5C20               	subwf	__display_itoa_u32@value+1,w,c
  9638  000864  B0D8               	btfsc	status,0,c
  9639  000866  D00D               	goto	l1387
  9640                           
  9641                           ;display.c: 112: {;display.c: 113: return _display_itoa_u16((uint16_t) value, text);
  9642  000868  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
  9643  00086C  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
  9644  000870  6A1B               	clrf	__display_itoa_u16@value+2,c
  9645  000872  6A1C               	clrf	__display_itoa_u16@value+3,c
  9646  000874  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
  9647  000878  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
  9648  00087C  EC4A  F027         	call	__display_itoa_u16	;wreg free
  9649  000880  0012               	return	
  9650  000882                     l1387:
  9651  000882                     l12089:
  9652                           
  9653                           ;display.c: 114: };display.c: 117: if(value>100000000)
  9654  000882  041F               	decf	__display_itoa_u32@value,w,c
  9655  000884  0EE1               	movlw	225
  9656  000886  5820               	subwfb	__display_itoa_u32@value+1,w,c
  9657  000888  0EF5               	movlw	245
  9658  00088A  5821               	subwfb	__display_itoa_u32@value+2,w,c
  9659  00088C  0E05               	movlw	5
  9660  00088E  5822               	subwfb	__display_itoa_u32@value+3,w,c
  9661  000890  A0D8               	btfss	status,0,c
  9662  000892  D04C               	goto	l1389
  9663                           
  9664                           ;display.c: 118: {;display.c: 119: itoa(text, (uint16_t)(value/10000), 10);
  9665  000894  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
  9666  000898  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
  9667  00089C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
  9668  0008A0  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
  9669  0008A4  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
  9670  0008A8  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
  9671  0008AC  0E10               	movlw	16
  9672  0008AE  6E05               	movwf	___lldiv@divisor,c
  9673  0008B0  0E27               	movlw	39
  9674  0008B2  6E06               	movwf	___lldiv@divisor+1,c
  9675  0008B4  0E00               	movlw	0
  9676  0008B6  6E07               	movwf	___lldiv@divisor+2,c
  9677  0008B8  0E00               	movlw	0
  9678  0008BA  6E08               	movwf	___lldiv@divisor+3,c
  9679  0008BC  EC84  F02F         	call	___lldiv	;wreg free
  9680  0008C0  C001  F013         	movff	?___lldiv,itoa@val
  9681  0008C4  C002  F014         	movff	?___lldiv+1,itoa@val+1
  9682  0008C8  0E00               	movlw	0
  9683  0008CA  6E16               	movwf	itoa@base+1,c
  9684  0008CC  0E0A               	movlw	10
  9685  0008CE  6E15               	movwf	itoa@base,c
  9686  0008D0  ECF7  F038         	call	_itoa	;wreg free
  9687                           
  9688                           ;display.c: 120: itoa(text+5, (uint16_t)(value%10000), 10);
  9689  0008D4  0E05               	movlw	5
  9690  0008D6  2423               	addwf	__display_itoa_u32@text,w,c
  9691  0008D8  6E11               	movwf	itoa@buf,c
  9692  0008DA  0E00               	movlw	0
  9693  0008DC  2024               	addwfc	__display_itoa_u32@text+1,w,c
  9694  0008DE  6E12               	movwf	itoa@buf+1,c
  9695  0008E0  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
  9696  0008E4  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
  9697  0008E8  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
  9698  0008EC  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
  9699  0008F0  0E10               	movlw	16
  9700  0008F2  6E05               	movwf	___llmod@divisor,c
  9701  0008F4  0E27               	movlw	39
  9702  0008F6  6E06               	movwf	___llmod@divisor+1,c
  9703  0008F8  0E00               	movlw	0
  9704  0008FA  6E07               	movwf	___llmod@divisor+2,c
  9705  0008FC  0E00               	movlw	0
  9706  0008FE  6E08               	movwf	___llmod@divisor+3,c
  9707  000900  EC3F  F034         	call	___llmod	;wreg free
  9708  000904  C001  F013         	movff	?___llmod,itoa@val
  9709  000908  C002  F014         	movff	?___llmod+1,itoa@val+1
  9710  00090C  0E00               	movlw	0
  9711  00090E  6E16               	movwf	itoa@base+1,c
  9712  000910  0E0A               	movlw	10
  9713  000912  6E15               	movwf	itoa@base,c
  9714  000914  ECF7  F038         	call	_itoa	;wreg free
  9715                           
  9716                           ;display.c: 121: *(text+9) = ' ';
  9717  000918  EE20 F009          	lfsr	2,9
  9718  00091C  5023               	movf	__display_itoa_u32@text,w,c
  9719  00091E  26D9               	addwf	fsr2l,f,c
  9720  000920  5024               	movf	__display_itoa_u32@text+1,w,c
  9721  000922  22DA               	addwfc	fsr2h,f,c
  9722  000924  0E20               	movlw	32
  9723  000926  6EDF               	movwf	indf2,c
  9724                           
  9725                           ;display.c: 122: return 9;
  9726  000928  0E09               	movlw	9
  9727                           
  9728                           ;display.c: 123: }
  9729  00092A  0012               	return	
  9730  00092C                     l1389:
  9731                           
  9732                           ;display.c: 124: else if(value>10000000)
  9733  00092C  5022               	movf	__display_itoa_u32@value+3,w,c
  9734  00092E  E108               	bnz	u9290
  9735  000930  0E81               	movlw	129
  9736  000932  5C1F               	subwf	__display_itoa_u32@value,w,c
  9737  000934  0E96               	movlw	150
  9738  000936  5820               	subwfb	__display_itoa_u32@value+1,w,c
  9739  000938  0E98               	movlw	152
  9740  00093A  5821               	subwfb	__display_itoa_u32@value+2,w,c
  9741  00093C  A0D8               	btfss	status,0,c
  9742  00093E  D04C               	goto	l1391
  9743  000940                     u9290:
  9744                           
  9745                           ;display.c: 125: {;display.c: 126: itoa(text, (uint16_t)(value/10000), 10);
  9746  000940  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
  9747  000944  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
  9748  000948  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
  9749  00094C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
  9750  000950  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
  9751  000954  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
  9752  000958  0E10               	movlw	16
  9753  00095A  6E05               	movwf	___lldiv@divisor,c
  9754  00095C  0E27               	movlw	39
  9755  00095E  6E06               	movwf	___lldiv@divisor+1,c
  9756  000960  0E00               	movlw	0
  9757  000962  6E07               	movwf	___lldiv@divisor+2,c
  9758  000964  0E00               	movlw	0
  9759  000966  6E08               	movwf	___lldiv@divisor+3,c
  9760  000968  EC84  F02F         	call	___lldiv	;wreg free
  9761  00096C  C001  F013         	movff	?___lldiv,itoa@val
  9762  000970  C002  F014         	movff	?___lldiv+1,itoa@val+1
  9763  000974  0E00               	movlw	0
  9764  000976  6E16               	movwf	itoa@base+1,c
  9765  000978  0E0A               	movlw	10
  9766  00097A  6E15               	movwf	itoa@base,c
  9767  00097C  ECF7  F038         	call	_itoa	;wreg free
  9768                           
  9769                           ;display.c: 127: itoa(text+4, (uint16_t)(value%10000), 10);
  9770  000980  0E04               	movlw	4
  9771  000982  2423               	addwf	__display_itoa_u32@text,w,c
  9772  000984  6E11               	movwf	itoa@buf,c
  9773  000986  0E00               	movlw	0
  9774  000988  2024               	addwfc	__display_itoa_u32@text+1,w,c
  9775  00098A  6E12               	movwf	itoa@buf+1,c
  9776  00098C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
  9777  000990  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
  9778  000994  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
  9779  000998  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
  9780  00099C  0E10               	movlw	16
  9781  00099E  6E05               	movwf	___llmod@divisor,c
  9782  0009A0  0E27               	movlw	39
  9783  0009A2  6E06               	movwf	___llmod@divisor+1,c
  9784  0009A4  0E00               	movlw	0
  9785  0009A6  6E07               	movwf	___llmod@divisor+2,c
  9786  0009A8  0E00               	movlw	0
  9787  0009AA  6E08               	movwf	___llmod@divisor+3,c
  9788  0009AC  EC3F  F034         	call	___llmod	;wreg free
  9789  0009B0  C001  F013         	movff	?___llmod,itoa@val
  9790  0009B4  C002  F014         	movff	?___llmod+1,itoa@val+1
  9791  0009B8  0E00               	movlw	0
  9792  0009BA  6E16               	movwf	itoa@base+1,c
  9793  0009BC  0E0A               	movlw	10
  9794  0009BE  6E15               	movwf	itoa@base,c
  9795  0009C0  ECF7  F038         	call	_itoa	;wreg free
  9796                           
  9797                           ;display.c: 128: *(text+8) = ' ';
  9798  0009C4  EE20 F008          	lfsr	2,8
  9799  0009C8  5023               	movf	__display_itoa_u32@text,w,c
  9800  0009CA  26D9               	addwf	fsr2l,f,c
  9801  0009CC  5024               	movf	__display_itoa_u32@text+1,w,c
  9802  0009CE  22DA               	addwfc	fsr2h,f,c
  9803  0009D0  0E20               	movlw	32
  9804  0009D2  6EDF               	movwf	indf2,c
  9805                           
  9806                           ;display.c: 129: return 8;
  9807  0009D4  0E08               	movlw	8
  9808                           
  9809                           ;display.c: 130: }
  9810  0009D6  0012               	return	
  9811  0009D8                     l1391:
  9812                           
  9813                           ;display.c: 131: else if(value>1000000)
  9814  0009D8  5022               	movf	__display_itoa_u32@value+3,w,c
  9815  0009DA  E108               	bnz	u9300
  9816  0009DC  0E41               	movlw	65
  9817  0009DE  5C1F               	subwf	__display_itoa_u32@value,w,c
  9818  0009E0  0E42               	movlw	66
  9819  0009E2  5820               	subwfb	__display_itoa_u32@value+1,w,c
  9820  0009E4  0E0F               	movlw	15
  9821  0009E6  5821               	subwfb	__display_itoa_u32@value+2,w,c
  9822  0009E8  A0D8               	btfss	status,0,c
  9823  0009EA  D04C               	goto	l1393
  9824  0009EC                     u9300:
  9825                           
  9826                           ;display.c: 132: {;display.c: 133: itoa(text, (uint16_t)(value/10000), 10);
  9827  0009EC  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
  9828  0009F0  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
  9829  0009F4  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
  9830  0009F8  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
  9831  0009FC  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
  9832  000A00  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
  9833  000A04  0E10               	movlw	16
  9834  000A06  6E05               	movwf	___lldiv@divisor,c
  9835  000A08  0E27               	movlw	39
  9836  000A0A  6E06               	movwf	___lldiv@divisor+1,c
  9837  000A0C  0E00               	movlw	0
  9838  000A0E  6E07               	movwf	___lldiv@divisor+2,c
  9839  000A10  0E00               	movlw	0
  9840  000A12  6E08               	movwf	___lldiv@divisor+3,c
  9841  000A14  EC84  F02F         	call	___lldiv	;wreg free
  9842  000A18  C001  F013         	movff	?___lldiv,itoa@val
  9843  000A1C  C002  F014         	movff	?___lldiv+1,itoa@val+1
  9844  000A20  0E00               	movlw	0
  9845  000A22  6E16               	movwf	itoa@base+1,c
  9846  000A24  0E0A               	movlw	10
  9847  000A26  6E15               	movwf	itoa@base,c
  9848  000A28  ECF7  F038         	call	_itoa	;wreg free
  9849                           
  9850                           ;display.c: 134: itoa(text+3, (uint16_t)(value%10000), 10);
  9851  000A2C  0E03               	movlw	3
  9852  000A2E  2423               	addwf	__display_itoa_u32@text,w,c
  9853  000A30  6E11               	movwf	itoa@buf,c
  9854  000A32  0E00               	movlw	0
  9855  000A34  2024               	addwfc	__display_itoa_u32@text+1,w,c
  9856  000A36  6E12               	movwf	itoa@buf+1,c
  9857  000A38  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
  9858  000A3C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
  9859  000A40  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
  9860  000A44  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
  9861  000A48  0E10               	movlw	16
  9862  000A4A  6E05               	movwf	___llmod@divisor,c
  9863  000A4C  0E27               	movlw	39
  9864  000A4E  6E06               	movwf	___llmod@divisor+1,c
  9865  000A50  0E00               	movlw	0
  9866  000A52  6E07               	movwf	___llmod@divisor+2,c
  9867  000A54  0E00               	movlw	0
  9868  000A56  6E08               	movwf	___llmod@divisor+3,c
  9869  000A58  EC3F  F034         	call	___llmod	;wreg free
  9870  000A5C  C001  F013         	movff	?___llmod,itoa@val
  9871  000A60  C002  F014         	movff	?___llmod+1,itoa@val+1
  9872  000A64  0E00               	movlw	0
  9873  000A66  6E16               	movwf	itoa@base+1,c
  9874  000A68  0E0A               	movlw	10
  9875  000A6A  6E15               	movwf	itoa@base,c
  9876  000A6C  ECF7  F038         	call	_itoa	;wreg free
  9877                           
  9878                           ;display.c: 135: *(text+7) = ' ';
  9879  000A70  EE20 F007          	lfsr	2,7
  9880  000A74  5023               	movf	__display_itoa_u32@text,w,c
  9881  000A76  26D9               	addwf	fsr2l,f,c
  9882  000A78  5024               	movf	__display_itoa_u32@text+1,w,c
  9883  000A7A  22DA               	addwfc	fsr2h,f,c
  9884  000A7C  0E20               	movlw	32
  9885  000A7E  6EDF               	movwf	indf2,c
  9886                           
  9887                           ;display.c: 136: return 7;
  9888  000A80  0E07               	movlw	7
  9889                           
  9890                           ;display.c: 137: }
  9891  000A82  0012               	return	
  9892  000A84                     l1393:
  9893                           
  9894                           ;display.c: 138: else if(value>100000)
  9895  000A84  5022               	movf	__display_itoa_u32@value+3,w,c
  9896  000A86  E108               	bnz	u9310
  9897  000A88  0EA1               	movlw	161
  9898  000A8A  5C1F               	subwf	__display_itoa_u32@value,w,c
  9899  000A8C  0E86               	movlw	134
  9900  000A8E  5820               	subwfb	__display_itoa_u32@value+1,w,c
  9901  000A90  0E01               	movlw	1
  9902  000A92  5821               	subwfb	__display_itoa_u32@value+2,w,c
  9903  000A94  A0D8               	btfss	status,0,c
  9904  000A96  D04C               	goto	l1395
  9905  000A98                     u9310:
  9906                           
  9907                           ;display.c: 139: {;display.c: 140: itoa(text, (uint16_t)(value/10000), 10);
  9908  000A98  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
  9909  000A9C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
  9910  000AA0  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
  9911  000AA4  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
  9912  000AA8  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
  9913  000AAC  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
  9914  000AB0  0E10               	movlw	16
  9915  000AB2  6E05               	movwf	___lldiv@divisor,c
  9916  000AB4  0E27               	movlw	39
  9917  000AB6  6E06               	movwf	___lldiv@divisor+1,c
  9918  000AB8  0E00               	movlw	0
  9919  000ABA  6E07               	movwf	___lldiv@divisor+2,c
  9920  000ABC  0E00               	movlw	0
  9921  000ABE  6E08               	movwf	___lldiv@divisor+3,c
  9922  000AC0  EC84  F02F         	call	___lldiv	;wreg free
  9923  000AC4  C001  F013         	movff	?___lldiv,itoa@val
  9924  000AC8  C002  F014         	movff	?___lldiv+1,itoa@val+1
  9925  000ACC  0E00               	movlw	0
  9926  000ACE  6E16               	movwf	itoa@base+1,c
  9927  000AD0  0E0A               	movlw	10
  9928  000AD2  6E15               	movwf	itoa@base,c
  9929  000AD4  ECF7  F038         	call	_itoa	;wreg free
  9930                           
  9931                           ;display.c: 141: itoa(text+2, (uint16_t)(value%10000), 10);
  9932  000AD8  0E02               	movlw	2
  9933  000ADA  2423               	addwf	__display_itoa_u32@text,w,c
  9934  000ADC  6E11               	movwf	itoa@buf,c
  9935  000ADE  0E00               	movlw	0
  9936  000AE0  2024               	addwfc	__display_itoa_u32@text+1,w,c
  9937  000AE2  6E12               	movwf	itoa@buf+1,c
  9938  000AE4  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
  9939  000AE8  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
  9940  000AEC  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
  9941  000AF0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
  9942  000AF4  0E10               	movlw	16
  9943  000AF6  6E05               	movwf	___llmod@divisor,c
  9944  000AF8  0E27               	movlw	39
  9945  000AFA  6E06               	movwf	___llmod@divisor+1,c
  9946  000AFC  0E00               	movlw	0
  9947  000AFE  6E07               	movwf	___llmod@divisor+2,c
  9948  000B00  0E00               	movlw	0
  9949  000B02  6E08               	movwf	___llmod@divisor+3,c
  9950  000B04  EC3F  F034         	call	___llmod	;wreg free
  9951  000B08  C001  F013         	movff	?___llmod,itoa@val
  9952  000B0C  C002  F014         	movff	?___llmod+1,itoa@val+1
  9953  000B10  0E00               	movlw	0
  9954  000B12  6E16               	movwf	itoa@base+1,c
  9955  000B14  0E0A               	movlw	10
  9956  000B16  6E15               	movwf	itoa@base,c
  9957  000B18  ECF7  F038         	call	_itoa	;wreg free
  9958                           
  9959                           ;display.c: 142: *(text+6) = ' ';
  9960  000B1C  EE20 F006          	lfsr	2,6
  9961  000B20  5023               	movf	__display_itoa_u32@text,w,c
  9962  000B22  26D9               	addwf	fsr2l,f,c
  9963  000B24  5024               	movf	__display_itoa_u32@text+1,w,c
  9964  000B26  22DA               	addwfc	fsr2h,f,c
  9965  000B28  0E20               	movlw	32
  9966  000B2A  6EDF               	movwf	indf2,c
  9967                           
  9968                           ;display.c: 143: return 6;
  9969  000B2C  0E06               	movlw	6
  9970                           
  9971                           ;display.c: 144: }
  9972  000B2E  0012               	return	
  9973  000B30                     l1395:
  9974                           
  9975                           ;display.c: 145: else;display.c: 146: {;display.c: 147: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
  9976  000B30  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
  9977  000B34  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
  9978  000B38  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
  9979  000B3C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
  9980  000B40  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
  9981  000B44  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
  9982  000B48  0E10               	movlw	16
  9983  000B4A  6E05               	movwf	___lldiv@divisor,c
  9984  000B4C  0E27               	movlw	39
  9985  000B4E  6E06               	movwf	___lldiv@divisor+1,c
  9986  000B50  0E00               	movlw	0
  9987  000B52  6E07               	movwf	___lldiv@divisor+2,c
  9988  000B54  0E00               	movlw	0
  9989  000B56  6E08               	movwf	___lldiv@divisor+3,c
  9990  000B58  EC84  F02F         	call	___lldiv	;wreg free
  9991  000B5C  C001  F013         	movff	?___lldiv,itoa@val
  9992  000B60  C002  F014         	movff	?___lldiv+1,itoa@val+1
  9993  000B64  0E00               	movlw	0
  9994  000B66  6E16               	movwf	itoa@base+1,c
  9995  000B68  0E0A               	movlw	10
  9996  000B6A  6E15               	movwf	itoa@base,c
  9997  000B6C  ECF7  F038         	call	_itoa	;wreg free
  9998                           
  9999                           ;display.c: 148: itoa(text+1, (uint16_t)(value%10000), 10);
 10000  000B70  0E01               	movlw	1
 10001  000B72  2423               	addwf	__display_itoa_u32@text,w,c
 10002  000B74  6E11               	movwf	itoa@buf,c
 10003  000B76  0E00               	movlw	0
 10004  000B78  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10005  000B7A  6E12               	movwf	itoa@buf+1,c
 10006  000B7C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10007  000B80  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10008  000B84  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10009  000B88  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10010  000B8C  0E10               	movlw	16
 10011  000B8E  6E05               	movwf	___llmod@divisor,c
 10012  000B90  0E27               	movlw	39
 10013  000B92  6E06               	movwf	___llmod@divisor+1,c
 10014  000B94  0E00               	movlw	0
 10015  000B96  6E07               	movwf	___llmod@divisor+2,c
 10016  000B98  0E00               	movlw	0
 10017  000B9A  6E08               	movwf	___llmod@divisor+3,c
 10018  000B9C  EC3F  F034         	call	___llmod	;wreg free
 10019  000BA0  C001  F013         	movff	?___llmod,itoa@val
 10020  000BA4  C002  F014         	movff	?___llmod+1,itoa@val+1
 10021  000BA8  0E00               	movlw	0
 10022  000BAA  6E16               	movwf	itoa@base+1,c
 10023  000BAC  0E0A               	movlw	10
 10024  000BAE  6E15               	movwf	itoa@base,c
 10025  000BB0  ECF7  F038         	call	_itoa	;wreg free
 10026                           
 10027                           ;display.c: 149: *(text+5) = ' ';
 10028  000BB4  EE20 F005          	lfsr	2,5
 10029  000BB8  5023               	movf	__display_itoa_u32@text,w,c
 10030  000BBA  26D9               	addwf	fsr2l,f,c
 10031  000BBC  5024               	movf	__display_itoa_u32@text+1,w,c
 10032  000BBE  22DA               	addwfc	fsr2h,f,c
 10033  000BC0  0E20               	movlw	32
 10034  000BC2  6EDF               	movwf	indf2,c
 10035                           
 10036                           ;display.c: 150: return 5;
 10037  000BC4  0E05               	movlw	5
 10038  000BC6  0012               	return	
 10039  000BC8                     __end_of__display_itoa_u32:
 10040                           	opt stack 0
 10041                           tblptru	equ	0xFF8
 10042                           tblptrh	equ	0xFF7
 10043                           tblptrl	equ	0xFF6
 10044                           tablat	equ	0xFF5
 10045                           prodh	equ	0xFF4
 10046                           prodl	equ	0xFF3
 10047                           intcon	equ	0xFF2
 10048                           intcon2	equ	0xFF1
 10049                           intcon3	equ	0xFF0
 10050                           postinc0	equ	0xFEE
 10051                           wreg	equ	0xFE8
 10052                           postdec1	equ	0xFE5
 10053                           plusw1	equ	0xFE3
 10054                           fsr1h	equ	0xFE2
 10055                           fsr1l	equ	0xFE1
 10056                           indf2	equ	0xFDF
 10057                           postinc2	equ	0xFDE
 10058                           plusw2	equ	0xFDB
 10059                           fsr2h	equ	0xFDA
 10060                           fsr2l	equ	0xFD9
 10061                           status	equ	0xFD8
 10062                           
 10063 ;; *************** function ___llmod *****************
 10064 ;; Defined at:
 10065 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;  dividend        4    0[COMRAM] unsigned long 
 10068 ;;  divisor         4    4[COMRAM] unsigned long 
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;  counter         1    8[COMRAM] unsigned char 
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  4    0[COMRAM] unsigned long 
 10073 ;; Registers used:
 10074 ;;		wreg, status,2, status,0
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/0
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10080 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10083 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10084 ;;Total ram usage:        9 bytes
 10085 ;; Hardware stack levels used:    1
 10086 ;; This function calls:
 10087 ;;		Nothing
 10088 ;; This function is called by:
 10089 ;;		__display_itoa_u32
 10090 ;; This function uses a non-reentrant model
 10091 ;;
 10092                           
 10093                           	psect	text38
 10094  00687E                     __ptext38:
 10095                           	opt stack 0
 10096  00687E                     ___llmod:
 10097                           	opt stack 27
 10098                           
 10099                           ;incstack = 0
 10100  00687E  5005               	movf	___llmod@divisor,w,c
 10101  006880  1006               	iorwf	___llmod@divisor+1,w,c
 10102  006882  1007               	iorwf	___llmod@divisor+2,w,c
 10103  006884  1008               	iorwf	___llmod@divisor+3,w,c
 10104  006886  B4D8               	btfsc	status,2,c
 10105  006888  D024               	goto	l3087
 10106  00688A  0E01               	movlw	1
 10107  00688C  6E09               	movwf	___llmod@counter,c
 10108  00688E  D006               	goto	l3082
 10109  006890  90D8               	bcf	status,0,c
 10110  006892  3605               	rlcf	___llmod@divisor,f,c
 10111  006894  3606               	rlcf	___llmod@divisor+1,f,c
 10112  006896  3607               	rlcf	___llmod@divisor+2,f,c
 10113  006898  3608               	rlcf	___llmod@divisor+3,f,c
 10114  00689A  2A09               	incf	___llmod@counter,f,c
 10115  00689C                     l3082:
 10116  00689C  AE08               	btfss	___llmod@divisor+3,7,c
 10117  00689E  D7F8               	goto	l3083
 10118  0068A0                     u9070:
 10119  0068A0  5005               	movf	___llmod@divisor,w,c
 10120  0068A2  5C01               	subwf	___llmod@dividend,w,c
 10121  0068A4  5006               	movf	___llmod@divisor+1,w,c
 10122  0068A6  5802               	subwfb	___llmod@dividend+1,w,c
 10123  0068A8  5007               	movf	___llmod@divisor+2,w,c
 10124  0068AA  5803               	subwfb	___llmod@dividend+2,w,c
 10125  0068AC  5008               	movf	___llmod@divisor+3,w,c
 10126  0068AE  5804               	subwfb	___llmod@dividend+3,w,c
 10127  0068B0  A0D8               	btfss	status,0,c
 10128  0068B2  D008               	goto	l3086
 10129  0068B4  5005               	movf	___llmod@divisor,w,c
 10130  0068B6  5E01               	subwf	___llmod@dividend,f,c
 10131  0068B8  5006               	movf	___llmod@divisor+1,w,c
 10132  0068BA  5A02               	subwfb	___llmod@dividend+1,f,c
 10133  0068BC  5007               	movf	___llmod@divisor+2,w,c
 10134  0068BE  5A03               	subwfb	___llmod@dividend+2,f,c
 10135  0068C0  5008               	movf	___llmod@divisor+3,w,c
 10136  0068C2  5A04               	subwfb	___llmod@dividend+3,f,c
 10137  0068C4                     l3086:
 10138  0068C4  90D8               	bcf	status,0,c
 10139  0068C6  3208               	rrcf	___llmod@divisor+3,f,c
 10140  0068C8  3207               	rrcf	___llmod@divisor+2,f,c
 10141  0068CA  3206               	rrcf	___llmod@divisor+1,f,c
 10142  0068CC  3205               	rrcf	___llmod@divisor,f,c
 10143  0068CE  2E09               	decfsz	___llmod@counter,f,c
 10144  0068D0  D7E7               	goto	u9070
 10145  0068D2                     l3087:
 10146  0068D2  C001  F001         	movff	___llmod@dividend,?___llmod
 10147  0068D6  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 10148  0068DA  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 10149  0068DE  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 10150  0068E2  0012               	return		;funcret
 10151  0068E4                     __end_of___llmod:
 10152                           	opt stack 0
 10153                           tblptru	equ	0xFF8
 10154                           tblptrh	equ	0xFF7
 10155                           tblptrl	equ	0xFF6
 10156                           tablat	equ	0xFF5
 10157                           prodh	equ	0xFF4
 10158                           prodl	equ	0xFF3
 10159                           intcon	equ	0xFF2
 10160                           intcon2	equ	0xFF1
 10161                           intcon3	equ	0xFF0
 10162                           postinc0	equ	0xFEE
 10163                           wreg	equ	0xFE8
 10164                           postdec1	equ	0xFE5
 10165                           plusw1	equ	0xFE3
 10166                           fsr1h	equ	0xFE2
 10167                           fsr1l	equ	0xFE1
 10168                           indf2	equ	0xFDF
 10169                           postinc2	equ	0xFDE
 10170                           plusw2	equ	0xFDB
 10171                           fsr2h	equ	0xFDA
 10172                           fsr2l	equ	0xFD9
 10173                           status	equ	0xFD8
 10174                           
 10175 ;; *************** function ___lldiv *****************
 10176 ;; Defined at:
 10177 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 10178 ;; Parameters:    Size  Location     Type
 10179 ;;  dividend        4    0[COMRAM] unsigned long 
 10180 ;;  divisor         4    4[COMRAM] unsigned long 
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;  quotient        4    8[COMRAM] unsigned long 
 10183 ;;  counter         1   12[COMRAM] unsigned char 
 10184 ;; Return value:  Size  Location     Type
 10185 ;;                  4    0[COMRAM] unsigned long 
 10186 ;; Registers used:
 10187 ;;		wreg, status,2, status,0
 10188 ;; Tracked objects:
 10189 ;;		On entry : 0/0
 10190 ;;		On exit  : 0/0
 10191 ;;		Unchanged: 0/0
 10192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10193 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10194 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10196 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10197 ;;Total ram usage:       13 bytes
 10198 ;; Hardware stack levels used:    1
 10199 ;; This function calls:
 10200 ;;		Nothing
 10201 ;; This function is called by:
 10202 ;;		__display_itoa_u32
 10203 ;; This function uses a non-reentrant model
 10204 ;;
 10205                           
 10206                           	psect	text39
 10207  005F08                     __ptext39:
 10208                           	opt stack 0
 10209  005F08                     ___lldiv:
 10210                           	opt stack 27
 10211                           
 10212                           ;incstack = 0
 10213  005F08  0E00               	movlw	0
 10214  005F0A  6E09               	movwf	___lldiv@quotient,c
 10215  005F0C  0E00               	movlw	0
 10216  005F0E  6E0A               	movwf	___lldiv@quotient+1,c
 10217  005F10  0E00               	movlw	0
 10218  005F12  6E0B               	movwf	___lldiv@quotient+2,c
 10219  005F14  0E00               	movlw	0
 10220  005F16  6E0C               	movwf	___lldiv@quotient+3,c
 10221  005F18  5005               	movf	___lldiv@divisor,w,c
 10222  005F1A  1006               	iorwf	___lldiv@divisor+1,w,c
 10223  005F1C  1007               	iorwf	___lldiv@divisor+2,w,c
 10224  005F1E  1008               	iorwf	___lldiv@divisor+3,w,c
 10225  005F20  B4D8               	btfsc	status,2,c
 10226  005F22  D02A               	goto	l2706
 10227  005F24  0E01               	movlw	1
 10228  005F26  6E0D               	movwf	___lldiv@counter,c
 10229  005F28  D006               	goto	l2701
 10230  005F2A  90D8               	bcf	status,0,c
 10231  005F2C  3605               	rlcf	___lldiv@divisor,f,c
 10232  005F2E  3606               	rlcf	___lldiv@divisor+1,f,c
 10233  005F30  3607               	rlcf	___lldiv@divisor+2,f,c
 10234  005F32  3608               	rlcf	___lldiv@divisor+3,f,c
 10235  005F34  2A0D               	incf	___lldiv@counter,f,c
 10236  005F36                     l2701:
 10237  005F36  AE08               	btfss	___lldiv@divisor+3,7,c
 10238  005F38  D7F8               	goto	l2702
 10239  005F3A                     u9040:
 10240  005F3A  90D8               	bcf	status,0,c
 10241  005F3C  3609               	rlcf	___lldiv@quotient,f,c
 10242  005F3E  360A               	rlcf	___lldiv@quotient+1,f,c
 10243  005F40  360B               	rlcf	___lldiv@quotient+2,f,c
 10244  005F42  360C               	rlcf	___lldiv@quotient+3,f,c
 10245  005F44  5005               	movf	___lldiv@divisor,w,c
 10246  005F46  5C01               	subwf	___lldiv@dividend,w,c
 10247  005F48  5006               	movf	___lldiv@divisor+1,w,c
 10248  005F4A  5802               	subwfb	___lldiv@dividend+1,w,c
 10249  005F4C  5007               	movf	___lldiv@divisor+2,w,c
 10250  005F4E  5803               	subwfb	___lldiv@dividend+2,w,c
 10251  005F50  5008               	movf	___lldiv@divisor+3,w,c
 10252  005F52  5804               	subwfb	___lldiv@dividend+3,w,c
 10253  005F54  A0D8               	btfss	status,0,c
 10254  005F56  D009               	goto	l2705
 10255  005F58  5005               	movf	___lldiv@divisor,w,c
 10256  005F5A  5E01               	subwf	___lldiv@dividend,f,c
 10257  005F5C  5006               	movf	___lldiv@divisor+1,w,c
 10258  005F5E  5A02               	subwfb	___lldiv@dividend+1,f,c
 10259  005F60  5007               	movf	___lldiv@divisor+2,w,c
 10260  005F62  5A03               	subwfb	___lldiv@dividend+2,f,c
 10261  005F64  5008               	movf	___lldiv@divisor+3,w,c
 10262  005F66  5A04               	subwfb	___lldiv@dividend+3,f,c
 10263  005F68  8009               	bsf	___lldiv@quotient,0,c
 10264  005F6A                     l2705:
 10265  005F6A  90D8               	bcf	status,0,c
 10266  005F6C  3208               	rrcf	___lldiv@divisor+3,f,c
 10267  005F6E  3207               	rrcf	___lldiv@divisor+2,f,c
 10268  005F70  3206               	rrcf	___lldiv@divisor+1,f,c
 10269  005F72  3205               	rrcf	___lldiv@divisor,f,c
 10270  005F74  2E0D               	decfsz	___lldiv@counter,f,c
 10271  005F76  D7E1               	goto	u9040
 10272  005F78                     l2706:
 10273  005F78  C009  F001         	movff	___lldiv@quotient,?___lldiv
 10274  005F7C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 10275  005F80  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 10276  005F84  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 10277  005F88  0012               	return		;funcret
 10278  005F8A                     __end_of___lldiv:
 10279                           	opt stack 0
 10280                           tblptru	equ	0xFF8
 10281                           tblptrh	equ	0xFF7
 10282                           tblptrl	equ	0xFF6
 10283                           tablat	equ	0xFF5
 10284                           prodh	equ	0xFF4
 10285                           prodl	equ	0xFF3
 10286                           intcon	equ	0xFF2
 10287                           intcon2	equ	0xFF1
 10288                           intcon3	equ	0xFF0
 10289                           postinc0	equ	0xFEE
 10290                           wreg	equ	0xFE8
 10291                           postdec1	equ	0xFE5
 10292                           plusw1	equ	0xFE3
 10293                           fsr1h	equ	0xFE2
 10294                           fsr1l	equ	0xFE1
 10295                           indf2	equ	0xFDF
 10296                           postinc2	equ	0xFDE
 10297                           plusw2	equ	0xFDB
 10298                           fsr2h	equ	0xFDA
 10299                           fsr2l	equ	0xFD9
 10300                           status	equ	0xFD8
 10301                           
 10302 ;; *************** function __display_done *****************
 10303 ;; Defined at:
 10304 ;;		line 440 in file "display.c"
 10305 ;; Parameters:    Size  Location     Type
 10306 ;;		None
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;  cntr            1   30[COMRAM] unsigned char 
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  1    wreg      void 
 10311 ;; Registers used:
 10312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10319 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10321 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10322 ;;Total ram usage:        1 bytes
 10323 ;; Hardware stack levels used:    1
 10324 ;; Hardware stack levels required when called:    4
 10325 ;; This function calls:
 10326 ;;		__display_itoa_u16
 10327 ;;		_bootloader_get_flashPagesWritten
 10328 ;; This function is called by:
 10329 ;;		_display_prepare
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text40
 10334  003392                     __ptext40:
 10335                           	opt stack 0
 10336  003392                     __display_done:
 10337                           	opt stack 25
 10338                           
 10339                           ;display.c: 442: uint8_t cntr;;display.c: 443: cntr = 0;
 10340                           
 10341                           ;incstack = 0
 10342  003392  0E00               	movlw	0
 10343  003394  6E1F               	movwf	__display_done@cntr,c
 10344                           
 10345                           ;display.c: 444: while(done_line1[cntr])
 10346  003396  D017               	goto	l1549
 10347  003398                     
 10348                           ;display.c: 445: display_content[0][cntr] = done_line1[cntr++];
 10349  003398  501F               	movf	__display_done@cntr,w,c
 10350  00339A  0D01               	mullw	1
 10351  00339C  0EB9               	movlw	low _done_line1
 10352  00339E  24F3               	addwf	prodl,w,c
 10353  0033A0  6EF6               	movwf	tblptrl,c
 10354  0033A2  0E8D               	movlw	high _done_line1
 10355  0033A4  20F4               	addwfc	prodh,w,c
 10356  0033A6  6EF7               	movwf	tblptrh,c
 10357  0033A8                     	if	1	;There are 3 active tblptr bytes
 10358  0033A8  6AF8               	clrf	tblptru,c
 10359  0033AA  0E00               	movlw	low (__mediumconst shr (0+16))
 10360  0033AC  22F8               	addwfc	tblptru,f,c
 10361  0033AE                     	endif
 10362  0033AE  501F               	movf	__display_done@cntr,w,c
 10363  0033B0  0D01               	mullw	1
 10364  0033B2  0E6C               	movlw	low _display_content
 10365  0033B4  24F3               	addwf	prodl,w,c
 10366  0033B6  6ED9               	movwf	fsr2l,c
 10367  0033B8  0E01               	movlw	high _display_content
 10368  0033BA  20F4               	addwfc	prodh,w,c
 10369  0033BC  6EDA               	movwf	fsr2h,c
 10370  0033BE  0008               	tblrd		*
 10371  0033C0  CFF5 FFDF          	movff	tablat,indf2
 10372  0033C4  2A1F               	incf	__display_done@cntr,f,c
 10373  0033C6                     l1549:
 10374  0033C6  501F               	movf	__display_done@cntr,w,c
 10375  0033C8  0D01               	mullw	1
 10376  0033CA  0EB9               	movlw	low _done_line1
 10377  0033CC  24F3               	addwf	prodl,w,c
 10378  0033CE  6EF6               	movwf	tblptrl,c
 10379  0033D0  0E8D               	movlw	high _done_line1
 10380  0033D2  20F4               	addwfc	prodh,w,c
 10381  0033D4  6EF7               	movwf	tblptrh,c
 10382  0033D6                     	if	1	;There are 3 active tblptr bytes
 10383  0033D6  6AF8               	clrf	tblptru,c
 10384  0033D8  0E00               	movlw	low (__mediumconst shr (0+16))
 10385  0033DA  22F8               	addwfc	tblptru,f,c
 10386  0033DC                     	endif
 10387  0033DC  0008               	tblrd		*
 10388  0033DE  50F5               	movf	tablat,w,c
 10389  0033E0  0900               	iorlw	0
 10390  0033E2  A4D8               	btfss	status,2,c
 10391  0033E4  D7D9               	goto	l1550
 10392                           
 10393                           ;display.c: 446: cntr = 0;
 10394  0033E6  0E00               	movlw	0
 10395  0033E8  6E1F               	movwf	__display_done@cntr,c
 10396                           
 10397                           ;display.c: 447: while(done_line2[cntr])
 10398  0033EA  D017               	goto	l1552
 10399  0033EC                     
 10400                           ;display.c: 448: display_content[1][cntr] = done_line2[cntr++];
 10401  0033EC  501F               	movf	__display_done@cntr,w,c
 10402  0033EE  0D01               	mullw	1
 10403  0033F0  0E9F               	movlw	low _done_line2
 10404  0033F2  24F3               	addwf	prodl,w,c
 10405  0033F4  6EF6               	movwf	tblptrl,c
 10406  0033F6  0E8E               	movlw	high _done_line2
 10407  0033F8  20F4               	addwfc	prodh,w,c
 10408  0033FA  6EF7               	movwf	tblptrh,c
 10409  0033FC                     	if	1	;There are 3 active tblptr bytes
 10410  0033FC  6AF8               	clrf	tblptru,c
 10411  0033FE  0E00               	movlw	low (__mediumconst shr (0+16))
 10412  003400  22F8               	addwfc	tblptru,f,c
 10413  003402                     	endif
 10414  003402  501F               	movf	__display_done@cntr,w,c
 10415  003404  0D01               	mullw	1
 10416  003406  0E80               	movlw	low (_display_content+20)
 10417  003408  24F3               	addwf	prodl,w,c
 10418  00340A  6ED9               	movwf	fsr2l,c
 10419  00340C  0E01               	movlw	high (_display_content+20)
 10420  00340E  20F4               	addwfc	prodh,w,c
 10421  003410  6EDA               	movwf	fsr2h,c
 10422  003412  0008               	tblrd		*
 10423  003414  CFF5 FFDF          	movff	tablat,indf2
 10424  003418  2A1F               	incf	__display_done@cntr,f,c
 10425  00341A                     l1552:
 10426  00341A  501F               	movf	__display_done@cntr,w,c
 10427  00341C  0D01               	mullw	1
 10428  00341E  0E9F               	movlw	low _done_line2
 10429  003420  24F3               	addwf	prodl,w,c
 10430  003422  6EF6               	movwf	tblptrl,c
 10431  003424  0E8E               	movlw	high _done_line2
 10432  003426  20F4               	addwfc	prodh,w,c
 10433  003428  6EF7               	movwf	tblptrh,c
 10434  00342A                     	if	1	;There are 3 active tblptr bytes
 10435  00342A  6AF8               	clrf	tblptru,c
 10436  00342C  0E00               	movlw	low (__mediumconst shr (0+16))
 10437  00342E  22F8               	addwfc	tblptru,f,c
 10438  003430                     	endif
 10439  003430  0008               	tblrd		*
 10440  003432  50F5               	movf	tablat,w,c
 10441  003434  0900               	iorlw	0
 10442  003436  A4D8               	btfss	status,2,c
 10443  003438  D7D9               	goto	l1553
 10444                           
 10445                           ;display.c: 449: cntr = 0;
 10446  00343A  0E00               	movlw	0
 10447  00343C  6E1F               	movwf	__display_done@cntr,c
 10448                           
 10449                           ;display.c: 450: while(done_line3[cntr])
 10450  00343E  D017               	goto	l1555
 10451  003440                     
 10452                           ;display.c: 451: display_content[2][cntr] = done_line3[cntr++];
 10453  003440  501F               	movf	__display_done@cntr,w,c
 10454  003442  0D01               	mullw	1
 10455  003444  0EA9               	movlw	low _done_line3
 10456  003446  24F3               	addwf	prodl,w,c
 10457  003448  6EF6               	movwf	tblptrl,c
 10458  00344A  0E8D               	movlw	high _done_line3
 10459  00344C  20F4               	addwfc	prodh,w,c
 10460  00344E  6EF7               	movwf	tblptrh,c
 10461  003450                     	if	1	;There are 3 active tblptr bytes
 10462  003450  6AF8               	clrf	tblptru,c
 10463  003452  0E00               	movlw	low (__mediumconst shr (0+16))
 10464  003454  22F8               	addwfc	tblptru,f,c
 10465  003456                     	endif
 10466  003456  501F               	movf	__display_done@cntr,w,c
 10467  003458  0D01               	mullw	1
 10468  00345A  0E94               	movlw	low (_display_content+40)
 10469  00345C  24F3               	addwf	prodl,w,c
 10470  00345E  6ED9               	movwf	fsr2l,c
 10471  003460  0E01               	movlw	high (_display_content+40)
 10472  003462  20F4               	addwfc	prodh,w,c
 10473  003464  6EDA               	movwf	fsr2h,c
 10474  003466  0008               	tblrd		*
 10475  003468  CFF5 FFDF          	movff	tablat,indf2
 10476  00346C  2A1F               	incf	__display_done@cntr,f,c
 10477  00346E                     l1555:
 10478  00346E  501F               	movf	__display_done@cntr,w,c
 10479  003470  0D01               	mullw	1
 10480  003472  0EA9               	movlw	low _done_line3
 10481  003474  24F3               	addwf	prodl,w,c
 10482  003476  6EF6               	movwf	tblptrl,c
 10483  003478  0E8D               	movlw	high _done_line3
 10484  00347A  20F4               	addwfc	prodh,w,c
 10485  00347C  6EF7               	movwf	tblptrh,c
 10486  00347E                     	if	1	;There are 3 active tblptr bytes
 10487  00347E  6AF8               	clrf	tblptru,c
 10488  003480  0E00               	movlw	low (__mediumconst shr (0+16))
 10489  003482  22F8               	addwfc	tblptru,f,c
 10490  003484                     	endif
 10491  003484  0008               	tblrd		*
 10492  003486  50F5               	movf	tablat,w,c
 10493  003488  0900               	iorlw	0
 10494  00348A  A4D8               	btfss	status,2,c
 10495  00348C  D7D9               	goto	l1556
 10496                           
 10497                           ;display.c: 452: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 10498  00348E  EC85  F03D         	call	_bootloader_get_flashPagesWritten	;wreg free
 10499  003492  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 10500  003496  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 10501  00349A  6A1B               	clrf	__display_itoa_u16@value+2,c
 10502  00349C  6A1C               	clrf	__display_itoa_u16@value+3,c
 10503  00349E  501F               	movf	__display_done@cntr,w,c
 10504  0034A0  0D01               	mullw	1
 10505  0034A2  0E94               	movlw	low (_display_content+40)
 10506  0034A4  24F3               	addwf	prodl,w,c
 10507  0034A6  6E1D               	movwf	__display_itoa_u16@text,c
 10508  0034A8  0E01               	movlw	high (_display_content+40)
 10509  0034AA  20F4               	addwfc	prodh,w,c
 10510  0034AC  6E1E               	movwf	__display_itoa_u16@text+1,c
 10511  0034AE  EC4A  F027         	call	__display_itoa_u16	;wreg free
 10512                           
 10513                           ;display.c: 453: cntr = 0;
 10514  0034B2  0E00               	movlw	0
 10515  0034B4  6E1F               	movwf	__display_done@cntr,c
 10516                           
 10517                           ;display.c: 454: while(done_line4[cntr])
 10518  0034B6  D017               	goto	l1558
 10519  0034B8                     
 10520                           ;display.c: 455: display_content[3][cntr] = done_line4[cntr++];
 10521  0034B8  501F               	movf	__display_done@cntr,w,c
 10522  0034BA  0D01               	mullw	1
 10523  0034BC  0E99               	movlw	low _done_line4
 10524  0034BE  24F3               	addwf	prodl,w,c
 10525  0034C0  6EF6               	movwf	tblptrl,c
 10526  0034C2  0E8D               	movlw	high _done_line4
 10527  0034C4  20F4               	addwfc	prodh,w,c
 10528  0034C6  6EF7               	movwf	tblptrh,c
 10529  0034C8                     	if	1	;There are 3 active tblptr bytes
 10530  0034C8  6AF8               	clrf	tblptru,c
 10531  0034CA  0E00               	movlw	low (__mediumconst shr (0+16))
 10532  0034CC  22F8               	addwfc	tblptru,f,c
 10533  0034CE                     	endif
 10534  0034CE  501F               	movf	__display_done@cntr,w,c
 10535  0034D0  0D01               	mullw	1
 10536  0034D2  0EA8               	movlw	low (_display_content+60)
 10537  0034D4  24F3               	addwf	prodl,w,c
 10538  0034D6  6ED9               	movwf	fsr2l,c
 10539  0034D8  0E01               	movlw	high (_display_content+60)
 10540  0034DA  20F4               	addwfc	prodh,w,c
 10541  0034DC  6EDA               	movwf	fsr2h,c
 10542  0034DE  0008               	tblrd		*
 10543  0034E0  CFF5 FFDF          	movff	tablat,indf2
 10544  0034E4  2A1F               	incf	__display_done@cntr,f,c
 10545  0034E6                     l1558:
 10546  0034E6  501F               	movf	__display_done@cntr,w,c
 10547  0034E8  0D01               	mullw	1
 10548  0034EA  0E99               	movlw	low _done_line4
 10549  0034EC  24F3               	addwf	prodl,w,c
 10550  0034EE  6EF6               	movwf	tblptrl,c
 10551  0034F0  0E8D               	movlw	high _done_line4
 10552  0034F2  20F4               	addwfc	prodh,w,c
 10553  0034F4  6EF7               	movwf	tblptrh,c
 10554  0034F6                     	if	1	;There are 3 active tblptr bytes
 10555  0034F6  6AF8               	clrf	tblptru,c
 10556  0034F8  0E00               	movlw	low (__mediumconst shr (0+16))
 10557  0034FA  22F8               	addwfc	tblptru,f,c
 10558  0034FC                     	endif
 10559  0034FC  0008               	tblrd		*
 10560  0034FE  50F5               	movf	tablat,w,c
 10561  003500  0900               	iorlw	0
 10562  003502  B4D8               	btfsc	status,2,c
 10563  003504  0012               	return	
 10564  003506  D7D8               	goto	l1559
 10565  003508                     __end_of__display_done:
 10566                           	opt stack 0
 10567                           tblptru	equ	0xFF8
 10568                           tblptrh	equ	0xFF7
 10569                           tblptrl	equ	0xFF6
 10570                           tablat	equ	0xFF5
 10571                           prodh	equ	0xFF4
 10572                           prodl	equ	0xFF3
 10573                           intcon	equ	0xFF2
 10574                           intcon2	equ	0xFF1
 10575                           intcon3	equ	0xFF0
 10576                           postinc0	equ	0xFEE
 10577                           wreg	equ	0xFE8
 10578                           postdec1	equ	0xFE5
 10579                           plusw1	equ	0xFE3
 10580                           fsr1h	equ	0xFE2
 10581                           fsr1l	equ	0xFE1
 10582                           indf2	equ	0xFDF
 10583                           postinc2	equ	0xFDE
 10584                           plusw2	equ	0xFDB
 10585                           fsr2h	equ	0xFDA
 10586                           fsr2l	equ	0xFD9
 10587                           status	equ	0xFD8
 10588                           
 10589 ;; *************** function __display_clear *****************
 10590 ;; Defined at:
 10591 ;;		line 65 in file "display.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;		None
 10594 ;; Auto vars:     Size  Location     Type
 10595 ;;  col             1    3[COMRAM] unsigned char 
 10596 ;;  row             1    2[COMRAM] unsigned char 
 10597 ;; Return value:  Size  Location     Type
 10598 ;;                  1    wreg      void 
 10599 ;; Registers used:
 10600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10601 ;; Tracked objects:
 10602 ;;		On entry : 0/0
 10603 ;;		On exit  : 0/0
 10604 ;;		Unchanged: 0/0
 10605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10607 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10608 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10609 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10610 ;;Total ram usage:        4 bytes
 10611 ;; Hardware stack levels used:    1
 10612 ;; This function calls:
 10613 ;;		Nothing
 10614 ;; This function is called by:
 10615 ;;		_display_prepare
 10616 ;; This function uses a non-reentrant model
 10617 ;;
 10618                           
 10619                           	psect	text41
 10620  0070D2                     __ptext41:
 10621                           	opt stack 0
 10622  0070D2                     __display_clear:
 10623                           	opt stack 29
 10624                           
 10625                           ;display.c: 67: uint8_t row;;display.c: 68: uint8_t col;;display.c: 69: for(row=0;row<4;
      +                          ++row)
 10626                           
 10627                           ;incstack = 0
 10628  0070D2  0E00               	movlw	0
 10629  0070D4  6E03               	movwf	__display_clear@row,c
 10630  0070D6                     l13233:
 10631  0070D6  0E03               	movlw	3
 10632  0070D8  6403               	cpfsgt	__display_clear@row,c
 10633  0070DA  D001               	goto	l1369
 10634  0070DC  0012               	return	
 10635  0070DE                     l1369:
 10636                           
 10637                           ;display.c: 70: {;display.c: 71: for(col=0;col<20;++col)
 10638  0070DE  0E00               	movlw	0
 10639  0070E0  6E04               	movwf	__display_clear@col,c
 10640  0070E2                     l13239:
 10641  0070E2  0E13               	movlw	19
 10642  0070E4  6404               	cpfsgt	__display_clear@col,c
 10643  0070E6  D001               	goto	l1371
 10644  0070E8  D016               	goto	u10420
 10645  0070EA                     l1371:
 10646                           
 10647                           ;display.c: 72: {;display.c: 73: display_content[row][col] = ' ';
 10648  0070EA  5003               	movf	__display_clear@row,w,c
 10649  0070EC  0D14               	mullw	20
 10650  0070EE  0E6C               	movlw	low _display_content
 10651  0070F0  6E01               	movwf	??__display_clear& (0+255),c
 10652  0070F2  0E01               	movlw	high _display_content
 10653  0070F4  6E02               	movwf	(??__display_clear+1)& (0+255),c
 10654  0070F6  50F3               	movf	prodl,w,c
 10655  0070F8  2601               	addwf	??__display_clear,f,c
 10656  0070FA  50F4               	movf	prodh,w,c
 10657  0070FC  2202               	addwfc	??__display_clear+1,f,c
 10658  0070FE  5004               	movf	__display_clear@col,w,c
 10659  007100  0D01               	mullw	1
 10660  007102  50F3               	movf	prodl,w,c
 10661  007104  2401               	addwf	??__display_clear,w,c
 10662  007106  6ED9               	movwf	fsr2l,c
 10663  007108  50F4               	movf	prodh,w,c
 10664  00710A  2002               	addwfc	??__display_clear+1,w,c
 10665  00710C  6EDA               	movwf	fsr2h,c
 10666  00710E  0E20               	movlw	32
 10667  007110  6EDF               	movwf	indf2,c
 10668  007112  2A04               	incf	__display_clear@col,f,c
 10669  007114  D7E6               	goto	l13239
 10670  007116                     u10420:
 10671  007116  2A03               	incf	__display_clear@row,f,c
 10672  007118  D7DE               	goto	l13233
 10673  00711A                     __end_of__display_clear:
 10674                           	opt stack 0
 10675                           tblptru	equ	0xFF8
 10676                           tblptrh	equ	0xFF7
 10677                           tblptrl	equ	0xFF6
 10678                           tablat	equ	0xFF5
 10679                           prodh	equ	0xFF4
 10680                           prodl	equ	0xFF3
 10681                           intcon	equ	0xFF2
 10682                           intcon2	equ	0xFF1
 10683                           intcon3	equ	0xFF0
 10684                           postinc0	equ	0xFEE
 10685                           wreg	equ	0xFE8
 10686                           postdec1	equ	0xFE5
 10687                           plusw1	equ	0xFE3
 10688                           fsr1h	equ	0xFE2
 10689                           fsr1l	equ	0xFE1
 10690                           indf2	equ	0xFDF
 10691                           postinc2	equ	0xFDE
 10692                           plusw2	equ	0xFDB
 10693                           fsr2h	equ	0xFDA
 10694                           fsr2l	equ	0xFD9
 10695                           status	equ	0xFD8
 10696                           
 10697 ;; *************** function __display_checked *****************
 10698 ;; Defined at:
 10699 ;;		line 344 in file "display.c"
 10700 ;; Parameters:    Size  Location     Type
 10701 ;;		None
 10702 ;; Auto vars:     Size  Location     Type
 10703 ;;  cntr            1   33[COMRAM] unsigned char 
 10704 ;;  start           1   32[COMRAM] unsigned char 
 10705 ;; Return value:  Size  Location     Type
 10706 ;;                  1    wreg      void 
 10707 ;; Registers used:
 10708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10709 ;; Tracked objects:
 10710 ;;		On entry : 0/0
 10711 ;;		On exit  : 0/0
 10712 ;;		Unchanged: 0/0
 10713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10716 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10717 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10718 ;;Total ram usage:        4 bytes
 10719 ;; Hardware stack levels used:    1
 10720 ;; Hardware stack levels required when called:    4
 10721 ;; This function calls:
 10722 ;;		__display_itoa_u16
 10723 ;;		_bootloader_get_total_entries
 10724 ;; This function is called by:
 10725 ;;		_display_prepare
 10726 ;; This function uses a non-reentrant model
 10727 ;;
 10728                           
 10729                           	psect	text42
 10730  003216                     __ptext42:
 10731                           	opt stack 0
 10732  003216                     __display_checked:
 10733                           	opt stack 25
 10734                           
 10735                           ;display.c: 346: uint8_t cntr;;display.c: 347: uint8_t start;;display.c: 348: cntr = 0;
 10736                           
 10737                           ;incstack = 0
 10738  003216  0E00               	movlw	0
 10739  003218  6E22               	movwf	__display_checked@cntr,c
 10740                           
 10741                           ;display.c: 349: while(checked_line1[cntr])
 10742  00321A  D017               	goto	l1485
 10743  00321C                     
 10744                           ;display.c: 350: display_content[0][cntr] = checked_line1[cntr++];
 10745  00321C  5022               	movf	__display_checked@cntr,w,c
 10746  00321E  0D01               	mullw	1
 10747  003220  0EF9               	movlw	low _checked_line1
 10748  003222  24F3               	addwf	prodl,w,c
 10749  003224  6EF6               	movwf	tblptrl,c
 10750  003226  0E8D               	movlw	high _checked_line1
 10751  003228  20F4               	addwfc	prodh,w,c
 10752  00322A  6EF7               	movwf	tblptrh,c
 10753  00322C                     	if	1	;There are 3 active tblptr bytes
 10754  00322C  6AF8               	clrf	tblptru,c
 10755  00322E  0E00               	movlw	low (__mediumconst shr (0+16))
 10756  003230  22F8               	addwfc	tblptru,f,c
 10757  003232                     	endif
 10758  003232  5022               	movf	__display_checked@cntr,w,c
 10759  003234  0D01               	mullw	1
 10760  003236  0E6C               	movlw	low _display_content
 10761  003238  24F3               	addwf	prodl,w,c
 10762  00323A  6ED9               	movwf	fsr2l,c
 10763  00323C  0E01               	movlw	high _display_content
 10764  00323E  20F4               	addwfc	prodh,w,c
 10765  003240  6EDA               	movwf	fsr2h,c
 10766  003242  0008               	tblrd		*
 10767  003244  CFF5 FFDF          	movff	tablat,indf2
 10768  003248  2A22               	incf	__display_checked@cntr,f,c
 10769  00324A                     l1485:
 10770  00324A  5022               	movf	__display_checked@cntr,w,c
 10771  00324C  0D01               	mullw	1
 10772  00324E  0EF9               	movlw	low _checked_line1
 10773  003250  24F3               	addwf	prodl,w,c
 10774  003252  6EF6               	movwf	tblptrl,c
 10775  003254  0E8D               	movlw	high _checked_line1
 10776  003256  20F4               	addwfc	prodh,w,c
 10777  003258  6EF7               	movwf	tblptrh,c
 10778  00325A                     	if	1	;There are 3 active tblptr bytes
 10779  00325A  6AF8               	clrf	tblptru,c
 10780  00325C  0E00               	movlw	low (__mediumconst shr (0+16))
 10781  00325E  22F8               	addwfc	tblptru,f,c
 10782  003260                     	endif
 10783  003260  0008               	tblrd		*
 10784  003262  50F5               	movf	tablat,w,c
 10785  003264  0900               	iorlw	0
 10786  003266  A4D8               	btfss	status,2,c
 10787  003268  D7D9               	goto	l1486
 10788                           
 10789                           ;display.c: 351: cntr = 0;
 10790  00326A  0E00               	movlw	0
 10791  00326C  6E22               	movwf	__display_checked@cntr,c
 10792                           
 10793                           ;display.c: 352: while(checked_line2[cntr])
 10794  00326E  D017               	goto	l1488
 10795  003270                     
 10796                           ;display.c: 353: display_content[1][cntr] = checked_line2[cntr++];
 10797  003270  5022               	movf	__display_checked@cntr,w,c
 10798  003272  0D01               	mullw	1
 10799  003274  0ECD               	movlw	low _checked_line2
 10800  003276  24F3               	addwf	prodl,w,c
 10801  003278  6EF6               	movwf	tblptrl,c
 10802  00327A  0E8C               	movlw	high _checked_line2
 10803  00327C  20F4               	addwfc	prodh,w,c
 10804  00327E  6EF7               	movwf	tblptrh,c
 10805  003280                     	if	1	;There are 3 active tblptr bytes
 10806  003280  6AF8               	clrf	tblptru,c
 10807  003282  0E00               	movlw	low (__mediumconst shr (0+16))
 10808  003284  22F8               	addwfc	tblptru,f,c
 10809  003286                     	endif
 10810  003286  5022               	movf	__display_checked@cntr,w,c
 10811  003288  0D01               	mullw	1
 10812  00328A  0E80               	movlw	low (_display_content+20)
 10813  00328C  24F3               	addwf	prodl,w,c
 10814  00328E  6ED9               	movwf	fsr2l,c
 10815  003290  0E01               	movlw	high (_display_content+20)
 10816  003292  20F4               	addwfc	prodh,w,c
 10817  003294  6EDA               	movwf	fsr2h,c
 10818  003296  0008               	tblrd		*
 10819  003298  CFF5 FFDF          	movff	tablat,indf2
 10820  00329C  2A22               	incf	__display_checked@cntr,f,c
 10821  00329E                     l1488:
 10822  00329E  5022               	movf	__display_checked@cntr,w,c
 10823  0032A0  0D01               	mullw	1
 10824  0032A2  0ECD               	movlw	low _checked_line2
 10825  0032A4  24F3               	addwf	prodl,w,c
 10826  0032A6  6EF6               	movwf	tblptrl,c
 10827  0032A8  0E8C               	movlw	high _checked_line2
 10828  0032AA  20F4               	addwfc	prodh,w,c
 10829  0032AC  6EF7               	movwf	tblptrh,c
 10830  0032AE                     	if	1	;There are 3 active tblptr bytes
 10831  0032AE  6AF8               	clrf	tblptru,c
 10832  0032B0  0E00               	movlw	low (__mediumconst shr (0+16))
 10833  0032B2  22F8               	addwfc	tblptru,f,c
 10834  0032B4                     	endif
 10835  0032B4  0008               	tblrd		*
 10836  0032B6  50F5               	movf	tablat,w,c
 10837  0032B8  0900               	iorlw	0
 10838  0032BA  A4D8               	btfss	status,2,c
 10839  0032BC  D7D9               	goto	l1489
 10840                           
 10841                           ;display.c: 355: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 10842  0032BE  EC76  F03D         	call	_bootloader_get_total_entries	;wreg free
 10843  0032C2  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 10844  0032C6  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 10845  0032CA  6A1B               	clrf	__display_itoa_u16@value+2,c
 10846  0032CC  6A1C               	clrf	__display_itoa_u16@value+3,c
 10847  0032CE  0E94               	movlw	low (_display_content+40)
 10848  0032D0  6E1D               	movwf	__display_itoa_u16@text,c
 10849  0032D2  0E01               	movlw	high (_display_content+40)
 10850  0032D4  6E1E               	movwf	__display_itoa_u16@text+1,c
 10851  0032D6  EC4A  F027         	call	__display_itoa_u16	;wreg free
 10852  0032DA  6E21               	movwf	__display_checked@start,c
 10853                           
 10854                           ;display.c: 356: start++;
 10855  0032DC  2A21               	incf	__display_checked@start,f,c
 10856                           
 10857                           ;display.c: 357: cntr = 0;
 10858  0032DE  0E00               	movlw	0
 10859  0032E0  6E22               	movwf	__display_checked@cntr,c
 10860                           
 10861                           ;display.c: 358: while(checked_line3[cntr])
 10862  0032E2  D01C               	goto	l1491
 10863  0032E4                     
 10864                           ;display.c: 359: display_content[2][start+cntr] = checked_line3[cntr++];
 10865  0032E4  5022               	movf	__display_checked@cntr,w,c
 10866  0032E6  0D01               	mullw	1
 10867  0032E8  0E73               	movlw	low _checked_line3
 10868  0032EA  24F3               	addwf	prodl,w,c
 10869  0032EC  6EF6               	movwf	tblptrl,c
 10870  0032EE  0E8E               	movlw	high _checked_line3
 10871  0032F0  20F4               	addwfc	prodh,w,c
 10872  0032F2  6EF7               	movwf	tblptrh,c
 10873  0032F4                     	if	1	;There are 3 active tblptr bytes
 10874  0032F4  6AF8               	clrf	tblptru,c
 10875  0032F6  0E00               	movlw	low (__mediumconst shr (0+16))
 10876  0032F8  22F8               	addwfc	tblptru,f,c
 10877  0032FA                     	endif
 10878  0032FA  5022               	movf	__display_checked@cntr,w,c
 10879  0032FC  C021  F01F         	movff	__display_checked@start,??__display_checked
 10880  003300  6A20               	clrf	(??__display_checked+1)& (0+255),c
 10881  003302  261F               	addwf	??__display_checked,f,c
 10882  003304  0E00               	movlw	0
 10883  003306  2220               	addwfc	??__display_checked+1,f,c
 10884  003308  0E94               	movlw	low (_display_content+40)
 10885  00330A  241F               	addwf	??__display_checked,w,c
 10886  00330C  6ED9               	movwf	fsr2l,c
 10887  00330E  0E01               	movlw	high (_display_content+40)
 10888  003310  2020               	addwfc	??__display_checked+1,w,c
 10889  003312  6EDA               	movwf	fsr2h,c
 10890  003314  0008               	tblrd		*
 10891  003316  CFF5 FFDF          	movff	tablat,indf2
 10892  00331A  2A22               	incf	__display_checked@cntr,f,c
 10893  00331C                     l1491:
 10894  00331C  5022               	movf	__display_checked@cntr,w,c
 10895  00331E  0D01               	mullw	1
 10896  003320  0E73               	movlw	low _checked_line3
 10897  003322  24F3               	addwf	prodl,w,c
 10898  003324  6EF6               	movwf	tblptrl,c
 10899  003326  0E8E               	movlw	high _checked_line3
 10900  003328  20F4               	addwfc	prodh,w,c
 10901  00332A  6EF7               	movwf	tblptrh,c
 10902  00332C                     	if	1	;There are 3 active tblptr bytes
 10903  00332C  6AF8               	clrf	tblptru,c
 10904  00332E  0E00               	movlw	low (__mediumconst shr (0+16))
 10905  003330  22F8               	addwfc	tblptru,f,c
 10906  003332                     	endif
 10907  003332  0008               	tblrd		*
 10908  003334  50F5               	movf	tablat,w,c
 10909  003336  0900               	iorlw	0
 10910  003338  A4D8               	btfss	status,2,c
 10911  00333A  D7D4               	goto	l1492
 10912                           
 10913                           ;display.c: 361: cntr = 0;
 10914  00333C  0E00               	movlw	0
 10915  00333E  6E22               	movwf	__display_checked@cntr,c
 10916                           
 10917                           ;display.c: 362: while(checked_line4[cntr])
 10918  003340  D017               	goto	l1494
 10919  003342                     
 10920                           ;display.c: 363: display_content[3][cntr] = checked_line4[cntr++];
 10921  003342  5022               	movf	__display_checked@cntr,w,c
 10922  003344  0D01               	mullw	1
 10923  003346  0E66               	movlw	low _checked_line4
 10924  003348  24F3               	addwf	prodl,w,c
 10925  00334A  6EF6               	movwf	tblptrl,c
 10926  00334C  0E8D               	movlw	high _checked_line4
 10927  00334E  20F4               	addwfc	prodh,w,c
 10928  003350  6EF7               	movwf	tblptrh,c
 10929  003352                     	if	1	;There are 3 active tblptr bytes
 10930  003352  6AF8               	clrf	tblptru,c
 10931  003354  0E00               	movlw	low (__mediumconst shr (0+16))
 10932  003356  22F8               	addwfc	tblptru,f,c
 10933  003358                     	endif
 10934  003358  5022               	movf	__display_checked@cntr,w,c
 10935  00335A  0D01               	mullw	1
 10936  00335C  0EA8               	movlw	low (_display_content+60)
 10937  00335E  24F3               	addwf	prodl,w,c
 10938  003360  6ED9               	movwf	fsr2l,c
 10939  003362  0E01               	movlw	high (_display_content+60)
 10940  003364  20F4               	addwfc	prodh,w,c
 10941  003366  6EDA               	movwf	fsr2h,c
 10942  003368  0008               	tblrd		*
 10943  00336A  CFF5 FFDF          	movff	tablat,indf2
 10944  00336E  2A22               	incf	__display_checked@cntr,f,c
 10945  003370                     l1494:
 10946  003370  5022               	movf	__display_checked@cntr,w,c
 10947  003372  0D01               	mullw	1
 10948  003374  0E66               	movlw	low _checked_line4
 10949  003376  24F3               	addwf	prodl,w,c
 10950  003378  6EF6               	movwf	tblptrl,c
 10951  00337A  0E8D               	movlw	high _checked_line4
 10952  00337C  20F4               	addwfc	prodh,w,c
 10953  00337E  6EF7               	movwf	tblptrh,c
 10954  003380                     	if	1	;There are 3 active tblptr bytes
 10955  003380  6AF8               	clrf	tblptru,c
 10956  003382  0E00               	movlw	low (__mediumconst shr (0+16))
 10957  003384  22F8               	addwfc	tblptru,f,c
 10958  003386                     	endif
 10959  003386  0008               	tblrd		*
 10960  003388  50F5               	movf	tablat,w,c
 10961  00338A  0900               	iorlw	0
 10962  00338C  B4D8               	btfsc	status,2,c
 10963  00338E  0012               	return	
 10964  003390  D7D8               	goto	l1495
 10965  003392                     __end_of__display_checked:
 10966                           	opt stack 0
 10967                           tblptru	equ	0xFF8
 10968                           tblptrh	equ	0xFF7
 10969                           tblptrl	equ	0xFF6
 10970                           tablat	equ	0xFF5
 10971                           prodh	equ	0xFF4
 10972                           prodl	equ	0xFF3
 10973                           intcon	equ	0xFF2
 10974                           intcon2	equ	0xFF1
 10975                           intcon3	equ	0xFF0
 10976                           postinc0	equ	0xFEE
 10977                           wreg	equ	0xFE8
 10978                           postdec1	equ	0xFE5
 10979                           plusw1	equ	0xFE3
 10980                           fsr1h	equ	0xFE2
 10981                           fsr1l	equ	0xFE1
 10982                           indf2	equ	0xFDF
 10983                           postinc2	equ	0xFDE
 10984                           plusw2	equ	0xFDB
 10985                           fsr2h	equ	0xFDA
 10986                           fsr2l	equ	0xFD9
 10987                           status	equ	0xFD8
 10988                           
 10989 ;; *************** function __display_itoa_u16 *****************
 10990 ;; Defined at:
 10991 ;;		line 78 in file "display.c"
 10992 ;; Parameters:    Size  Location     Type
 10993 ;;  value           4   24[COMRAM] unsigned long 
 10994 ;;  text            2   28[COMRAM] PTR unsigned char 
 10995 ;;		 -> display_content(80), 
 10996 ;; Auto vars:     Size  Location     Type
 10997 ;;		None
 10998 ;; Return value:  Size  Location     Type
 10999 ;;                  1    wreg      unsigned char 
 11000 ;; Registers used:
 11001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11002 ;; Tracked objects:
 11003 ;;		On entry : 0/0
 11004 ;;		On exit  : 0/0
 11005 ;;		Unchanged: 0/0
 11006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11007 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11010 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11011 ;;Total ram usage:        6 bytes
 11012 ;; Hardware stack levels used:    1
 11013 ;; Hardware stack levels required when called:    3
 11014 ;; This function calls:
 11015 ;;		_itoa
 11016 ;; This function is called by:
 11017 ;;		__display_itoa_u32
 11018 ;;		__display_verify
 11019 ;;		__display_checked
 11020 ;;		__display_failed
 11021 ;;		__display_programming
 11022 ;;		__display_done
 11023 ;; This function uses a non-reentrant model
 11024 ;;
 11025                           
 11026                           	psect	text43
 11027  004E94                     __ptext43:
 11028                           	opt stack 0
 11029  004E94                     __display_itoa_u16:
 11030                           	opt stack 25
 11031                           
 11032                           ;display.c: 80: itoa(text, value, 10);
 11033                           
 11034                           ;incstack = 0
 11035  004E94  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 11036  004E98  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11037  004E9C  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 11038  004EA0  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 11039  004EA4  0E00               	movlw	0
 11040  004EA6  6E16               	movwf	itoa@base+1,c
 11041  004EA8  0E0A               	movlw	10
 11042  004EAA  6E15               	movwf	itoa@base,c
 11043  004EAC  ECF7  F038         	call	_itoa	;wreg free
 11044                           
 11045                           ;display.c: 81: if(value>9999)
 11046  004EB0  501C               	movf	__display_itoa_u16@value+3,w,c
 11047  004EB2  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11048  004EB4  E106               	bnz	u8690
 11049  004EB6  0E10               	movlw	16
 11050  004EB8  5C19               	subwf	__display_itoa_u16@value,w,c
 11051  004EBA  0E27               	movlw	39
 11052  004EBC  581A               	subwfb	__display_itoa_u16@value+1,w,c
 11053  004EBE  A0D8               	btfss	status,0,c
 11054  004EC0  D00A               	goto	l1376
 11055  004EC2                     u8690:
 11056                           
 11057                           ;display.c: 82: {;display.c: 83: *(text+5) = ' ';
 11058  004EC2  EE20 F005          	lfsr	2,5
 11059  004EC6  501D               	movf	__display_itoa_u16@text,w,c
 11060  004EC8  26D9               	addwf	fsr2l,f,c
 11061  004ECA  501E               	movf	__display_itoa_u16@text+1,w,c
 11062  004ECC  22DA               	addwfc	fsr2h,f,c
 11063  004ECE  0E20               	movlw	32
 11064  004ED0  6EDF               	movwf	indf2,c
 11065                           
 11066                           ;display.c: 84: return 5;
 11067  004ED2  0E05               	movlw	5
 11068                           
 11069                           ;display.c: 85: }
 11070  004ED4  0012               	return	
 11071  004ED6                     l1376:
 11072                           
 11073                           ;display.c: 86: else if (value>999)
 11074  004ED6  501C               	movf	__display_itoa_u16@value+3,w,c
 11075  004ED8  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11076  004EDA  E106               	bnz	u8700
 11077  004EDC  0EE8               	movlw	232
 11078  004EDE  5C19               	subwf	__display_itoa_u16@value,w,c
 11079  004EE0  0E03               	movlw	3
 11080  004EE2  581A               	subwfb	__display_itoa_u16@value+1,w,c
 11081  004EE4  A0D8               	btfss	status,0,c
 11082  004EE6  D00A               	goto	l1379
 11083  004EE8                     u8700:
 11084                           
 11085                           ;display.c: 87: {;display.c: 88: *(text+4) = ' ';
 11086  004EE8  EE20 F004          	lfsr	2,4
 11087  004EEC  501D               	movf	__display_itoa_u16@text,w,c
 11088  004EEE  26D9               	addwf	fsr2l,f,c
 11089  004EF0  501E               	movf	__display_itoa_u16@text+1,w,c
 11090  004EF2  22DA               	addwfc	fsr2h,f,c
 11091  004EF4  0E20               	movlw	32
 11092  004EF6  6EDF               	movwf	indf2,c
 11093                           
 11094                           ;display.c: 89: return 4;
 11095  004EF8  0E04               	movlw	4
 11096                           
 11097                           ;display.c: 90: }
 11098  004EFA  0012               	return	
 11099  004EFC                     l1379:
 11100                           
 11101                           ;display.c: 91: else if (value>99)
 11102  004EFC  501C               	movf	__display_itoa_u16@value+3,w,c
 11103  004EFE  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11104  004F00  101A               	iorwf	__display_itoa_u16@value+1,w,c
 11105  004F02  E104               	bnz	u8710
 11106  004F04  0E64               	movlw	100
 11107  004F06  5C19               	subwf	__display_itoa_u16@value,w,c
 11108  004F08  A0D8               	btfss	status,0,c
 11109  004F0A  D00A               	goto	l1381
 11110  004F0C                     u8710:
 11111                           
 11112                           ;display.c: 92: {;display.c: 93: *(text+3) = ' ';
 11113  004F0C  EE20 F003          	lfsr	2,3
 11114  004F10  501D               	movf	__display_itoa_u16@text,w,c
 11115  004F12  26D9               	addwf	fsr2l,f,c
 11116  004F14  501E               	movf	__display_itoa_u16@text+1,w,c
 11117  004F16  22DA               	addwfc	fsr2h,f,c
 11118  004F18  0E20               	movlw	32
 11119  004F1A  6EDF               	movwf	indf2,c
 11120                           
 11121                           ;display.c: 94: return 3;
 11122  004F1C  0E03               	movlw	3
 11123                           
 11124                           ;display.c: 95: }
 11125  004F1E  0012               	return	
 11126  004F20                     l1381:
 11127                           
 11128                           ;display.c: 96: else if (value>9)
 11129  004F20  501C               	movf	__display_itoa_u16@value+3,w,c
 11130  004F22  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11131  004F24  101A               	iorwf	__display_itoa_u16@value+1,w,c
 11132  004F26  E104               	bnz	u8720
 11133  004F28  0E0A               	movlw	10
 11134  004F2A  5C19               	subwf	__display_itoa_u16@value,w,c
 11135  004F2C  A0D8               	btfss	status,0,c
 11136  004F2E  D00A               	goto	l1383
 11137  004F30                     u8720:
 11138                           
 11139                           ;display.c: 97: {;display.c: 98: *(text+2) = ' ';
 11140  004F30  EE20 F002          	lfsr	2,2
 11141  004F34  501D               	movf	__display_itoa_u16@text,w,c
 11142  004F36  26D9               	addwf	fsr2l,f,c
 11143  004F38  501E               	movf	__display_itoa_u16@text+1,w,c
 11144  004F3A  22DA               	addwfc	fsr2h,f,c
 11145  004F3C  0E20               	movlw	32
 11146  004F3E  6EDF               	movwf	indf2,c
 11147                           
 11148                           ;display.c: 99: return 2;
 11149  004F40  0E02               	movlw	2
 11150                           
 11151                           ;display.c: 100: }
 11152  004F42  0012               	return	
 11153  004F44                     l1383:
 11154                           
 11155                           ;display.c: 101: else;display.c: 102: {;display.c: 103: *(text+1) = ' ';
 11156  004F44  EE20 F001          	lfsr	2,1
 11157  004F48  501D               	movf	__display_itoa_u16@text,w,c
 11158  004F4A  26D9               	addwf	fsr2l,f,c
 11159  004F4C  501E               	movf	__display_itoa_u16@text+1,w,c
 11160  004F4E  22DA               	addwfc	fsr2h,f,c
 11161  004F50  0E20               	movlw	32
 11162  004F52  6EDF               	movwf	indf2,c
 11163                           
 11164                           ;display.c: 104: return 1;
 11165  004F54  0E01               	movlw	1
 11166  004F56  0012               	return	
 11167  004F58                     __end_of__display_itoa_u16:
 11168                           	opt stack 0
 11169                           tblptru	equ	0xFF8
 11170                           tblptrh	equ	0xFF7
 11171                           tblptrl	equ	0xFF6
 11172                           tablat	equ	0xFF5
 11173                           prodh	equ	0xFF4
 11174                           prodl	equ	0xFF3
 11175                           intcon	equ	0xFF2
 11176                           intcon2	equ	0xFF1
 11177                           intcon3	equ	0xFF0
 11178                           postinc0	equ	0xFEE
 11179                           wreg	equ	0xFE8
 11180                           postdec1	equ	0xFE5
 11181                           plusw1	equ	0xFE3
 11182                           fsr1h	equ	0xFE2
 11183                           fsr1l	equ	0xFE1
 11184                           indf2	equ	0xFDF
 11185                           postinc2	equ	0xFDE
 11186                           plusw2	equ	0xFDB
 11187                           fsr2h	equ	0xFDA
 11188                           fsr2l	equ	0xFD9
 11189                           status	equ	0xFD8
 11190                           
 11191 ;; *************** function _itoa *****************
 11192 ;; Defined at:
 11193 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 11194 ;; Parameters:    Size  Location     Type
 11195 ;;  buf             2   16[COMRAM] PTR unsigned char 
 11196 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11197 ;;  val             2   18[COMRAM] int 
 11198 ;;  base            2   20[COMRAM] int 
 11199 ;; Auto vars:     Size  Location     Type
 11200 ;;  cp              2   22[COMRAM] PTR unsigned char 
 11201 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11202 ;; Return value:  Size  Location     Type
 11203 ;;                  2   16[COMRAM] PTR unsigned char 
 11204 ;; Registers used:
 11205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11206 ;; Tracked objects:
 11207 ;;		On entry : 0/0
 11208 ;;		On exit  : 0/0
 11209 ;;		Unchanged: 0/0
 11210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11211 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11214 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11215 ;;Total ram usage:        8 bytes
 11216 ;; Hardware stack levels used:    1
 11217 ;; Hardware stack levels required when called:    2
 11218 ;; This function calls:
 11219 ;;		_utoa
 11220 ;; This function is called by:
 11221 ;;		__display_itoa_u16
 11222 ;;		__display_itoa_u32
 11223 ;;		__display_itoa
 11224 ;; This function uses a non-reentrant model
 11225 ;;
 11226                           
 11227                           	psect	text44
 11228  0071EE                     __ptext44:
 11229                           	opt stack 0
 11230  0071EE                     _itoa:
 11231                           	opt stack 25
 11232                           
 11233                           ;incstack = 0
 11234  0071EE  C011  F017         	movff	itoa@buf,itoa@cp
 11235  0071F2  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 11236  0071F6  AE14               	btfss	itoa@val+1,7,c
 11237  0071F8  D00C               	goto	l3337
 11238  0071FA  C011  FFD9         	movff	itoa@buf,fsr2l
 11239  0071FE  C012  FFDA         	movff	itoa@buf+1,fsr2h
 11240  007202  0E2D               	movlw	45
 11241  007204  6EDF               	movwf	indf2,c
 11242  007206  4A11               	infsnz	itoa@buf,f,c
 11243  007208  2A12               	incf	itoa@buf+1,f,c
 11244  00720A  6C13               	negf	itoa@val,c
 11245  00720C  1E14               	comf	itoa@val+1,f,c
 11246  00720E  B0D8               	btfsc	status,0,c
 11247  007210  2A14               	incf	itoa@val+1,f,c
 11248  007212                     l3337:
 11249  007212  C011  F008         	movff	itoa@buf,utoa@buf
 11250  007216  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 11251  00721A  C013  F00A         	movff	itoa@val,utoa@val
 11252  00721E  C014  F00B         	movff	itoa@val+1,utoa@val+1
 11253  007222  C015  F00C         	movff	itoa@base,utoa@base
 11254  007226  C016  F00D         	movff	itoa@base+1,utoa@base+1
 11255  00722A  ECDA  F02A         	call	_utoa	;wreg free
 11256  00722E  0012               	return	
 11257  007230                     __end_of_itoa:
 11258                           	opt stack 0
 11259                           tblptru	equ	0xFF8
 11260                           tblptrh	equ	0xFF7
 11261                           tblptrl	equ	0xFF6
 11262                           tablat	equ	0xFF5
 11263                           prodh	equ	0xFF4
 11264                           prodl	equ	0xFF3
 11265                           intcon	equ	0xFF2
 11266                           intcon2	equ	0xFF1
 11267                           intcon3	equ	0xFF0
 11268                           postinc0	equ	0xFEE
 11269                           wreg	equ	0xFE8
 11270                           postdec1	equ	0xFE5
 11271                           plusw1	equ	0xFE3
 11272                           fsr1h	equ	0xFE2
 11273                           fsr1l	equ	0xFE1
 11274                           indf2	equ	0xFDF
 11275                           postinc2	equ	0xFDE
 11276                           plusw2	equ	0xFDB
 11277                           fsr2h	equ	0xFDA
 11278                           fsr2l	equ	0xFD9
 11279                           status	equ	0xFD8
 11280                           
 11281 ;; *************** function _utoa *****************
 11282 ;; Defined at:
 11283 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 11284 ;; Parameters:    Size  Location     Type
 11285 ;;  buf             2    7[COMRAM] PTR unsigned char 
 11286 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11287 ;;  val             2    9[COMRAM] unsigned int 
 11288 ;;  base            2   11[COMRAM] int 
 11289 ;; Auto vars:     Size  Location     Type
 11290 ;;  v               2   13[COMRAM] unsigned int 
 11291 ;;  c               1   15[COMRAM] unsigned char 
 11292 ;; Return value:  Size  Location     Type
 11293 ;;                  2    7[COMRAM] PTR unsigned char 
 11294 ;; Registers used:
 11295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11301 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11302 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11304 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11305 ;;Total ram usage:        9 bytes
 11306 ;; Hardware stack levels used:    1
 11307 ;; Hardware stack levels required when called:    1
 11308 ;; This function calls:
 11309 ;;		___lwdiv
 11310 ;;		___lwmod
 11311 ;; This function is called by:
 11312 ;;		_itoa
 11313 ;; This function uses a non-reentrant model
 11314 ;;
 11315                           
 11316                           	psect	text45
 11317  0055B4                     __ptext45:
 11318                           	opt stack 0
 11319  0055B4                     _utoa:
 11320                           	opt stack 25
 11321                           
 11322                           ;incstack = 0
 11323  0055B4  C00A  F00E         	movff	utoa@val,utoa@v
 11324  0055B8  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 11325  0055BC  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 11326  0055C0  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 11327  0055C4  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 11328  0055C8  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 11329  0055CC  ECA0  F037         	call	___lwdiv	;wreg free
 11330  0055D0  C001  F00E         	movff	?___lwdiv,utoa@v
 11331  0055D4  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 11332  0055D8  4A08               	infsnz	utoa@buf,f,c
 11333  0055DA  2A09               	incf	utoa@buf+1,f,c
 11334  0055DC  500E               	movf	utoa@v,w,c
 11335  0055DE  100F               	iorwf	utoa@v+1,w,c
 11336  0055E0  A4D8               	btfss	status,2,c
 11337  0055E2  D7EC               	goto	l3341
 11338  0055E4  C008  FFD9         	movff	utoa@buf,fsr2l
 11339  0055E8  C009  FFDA         	movff	utoa@buf+1,fsr2h
 11340  0055EC  0E00               	movlw	0
 11341  0055EE  6EDF               	movwf	indf2,c
 11342  0055F0  0608               	decf	utoa@buf,f,c
 11343  0055F2  A0D8               	btfss	status,0,c
 11344  0055F4  0609               	decf	utoa@buf+1,f,c
 11345  0055F6  C00A  F001         	movff	utoa@val,___lwmod@dividend
 11346  0055FA  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 11347  0055FE  C00C  F003         	movff	utoa@base,___lwmod@divisor
 11348  005602  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 11349  005606  EC18  F039         	call	___lwmod	;wreg free
 11350  00560A  5001               	movf	?___lwmod,w,c
 11351  00560C  6E10               	movwf	utoa@c,c
 11352  00560E  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 11353  005612  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 11354  005616  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 11355  00561A  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 11356  00561E  ECA0  F037         	call	___lwdiv	;wreg free
 11357  005622  C001  F00A         	movff	?___lwdiv,utoa@val
 11358  005626  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 11359  00562A  0E09               	movlw	9
 11360  00562C  6410               	cpfsgt	utoa@c,c
 11361  00562E  D002               	goto	l3344
 11362  005630  0E07               	movlw	7
 11363  005632  2610               	addwf	utoa@c,f,c
 11364  005634                     l3344:
 11365  005634  0E30               	movlw	48
 11366  005636  2610               	addwf	utoa@c,f,c
 11367  005638  C008  FFD9         	movff	utoa@buf,fsr2l
 11368  00563C  C009  FFDA         	movff	utoa@buf+1,fsr2h
 11369  005640  C010  FFDF         	movff	utoa@c,indf2
 11370  005644  0608               	decf	utoa@buf,f,c
 11371  005646  A0D8               	btfss	status,0,c
 11372  005648  0609               	decf	utoa@buf+1,f,c
 11373  00564A  500A               	movf	utoa@val,w,c
 11374  00564C  100B               	iorwf	utoa@val+1,w,c
 11375  00564E  A4D8               	btfss	status,2,c
 11376  005650  D7D2               	goto	l3343
 11377                           
 11378                           ;	Return value of _utoa is never used
 11379  005652  4A08               	infsnz	utoa@buf,f,c
 11380  005654  2A09               	incf	utoa@buf+1,f,c
 11381  005656  0012               	return	
 11382  005658                     __end_of_utoa:
 11383                           	opt stack 0
 11384                           tblptru	equ	0xFF8
 11385                           tblptrh	equ	0xFF7
 11386                           tblptrl	equ	0xFF6
 11387                           tablat	equ	0xFF5
 11388                           prodh	equ	0xFF4
 11389                           prodl	equ	0xFF3
 11390                           intcon	equ	0xFF2
 11391                           intcon2	equ	0xFF1
 11392                           intcon3	equ	0xFF0
 11393                           postinc0	equ	0xFEE
 11394                           wreg	equ	0xFE8
 11395                           postdec1	equ	0xFE5
 11396                           plusw1	equ	0xFE3
 11397                           fsr1h	equ	0xFE2
 11398                           fsr1l	equ	0xFE1
 11399                           indf2	equ	0xFDF
 11400                           postinc2	equ	0xFDE
 11401                           plusw2	equ	0xFDB
 11402                           fsr2h	equ	0xFDA
 11403                           fsr2l	equ	0xFD9
 11404                           status	equ	0xFD8
 11405                           
 11406 ;; *************** function ___lwmod *****************
 11407 ;; Defined at:
 11408 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 11409 ;; Parameters:    Size  Location     Type
 11410 ;;  dividend        2    0[COMRAM] unsigned int 
 11411 ;;  divisor         2    2[COMRAM] unsigned int 
 11412 ;; Auto vars:     Size  Location     Type
 11413 ;;  counter         1    4[COMRAM] unsigned char 
 11414 ;; Return value:  Size  Location     Type
 11415 ;;                  2    0[COMRAM] unsigned int 
 11416 ;; Registers used:
 11417 ;;		wreg, status,2, status,0
 11418 ;; Tracked objects:
 11419 ;;		On entry : 0/0
 11420 ;;		On exit  : 0/0
 11421 ;;		Unchanged: 0/0
 11422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11423 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11426 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11427 ;;Total ram usage:        5 bytes
 11428 ;; Hardware stack levels used:    1
 11429 ;; This function calls:
 11430 ;;		Nothing
 11431 ;; This function is called by:
 11432 ;;		_utoa
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436                           	psect	text46
 11437  007230                     __ptext46:
 11438                           	opt stack 0
 11439  007230                     ___lwmod:
 11440                           	opt stack 25
 11441                           
 11442                           ;incstack = 0
 11443  007230  5003               	movf	___lwmod@divisor,w,c
 11444  007232  1004               	iorwf	___lwmod@divisor+1,w,c
 11445  007234  B4D8               	btfsc	status,2,c
 11446  007236  D018               	goto	l3168
 11447  007238  0E01               	movlw	1
 11448  00723A  6E05               	movwf	___lwmod@counter,c
 11449  00723C  D004               	goto	l3163
 11450  00723E  90D8               	bcf	status,0,c
 11451  007240  3603               	rlcf	___lwmod@divisor,f,c
 11452  007242  3604               	rlcf	___lwmod@divisor+1,f,c
 11453  007244  2A05               	incf	___lwmod@counter,f,c
 11454  007246                     l3163:
 11455  007246  AE04               	btfss	___lwmod@divisor+1,7,c
 11456  007248  D7FA               	goto	l3164
 11457  00724A                     u6880:
 11458  00724A  5003               	movf	___lwmod@divisor,w,c
 11459  00724C  5C01               	subwf	___lwmod@dividend,w,c
 11460  00724E  5004               	movf	___lwmod@divisor+1,w,c
 11461  007250  5802               	subwfb	___lwmod@dividend+1,w,c
 11462  007252  A0D8               	btfss	status,0,c
 11463  007254  D004               	goto	l3167
 11464  007256  5003               	movf	___lwmod@divisor,w,c
 11465  007258  5E01               	subwf	___lwmod@dividend,f,c
 11466  00725A  5004               	movf	___lwmod@divisor+1,w,c
 11467  00725C  5A02               	subwfb	___lwmod@dividend+1,f,c
 11468  00725E                     l3167:
 11469  00725E  90D8               	bcf	status,0,c
 11470  007260  3204               	rrcf	___lwmod@divisor+1,f,c
 11471  007262  3203               	rrcf	___lwmod@divisor,f,c
 11472  007264  2E05               	decfsz	___lwmod@counter,f,c
 11473  007266  D7F1               	goto	u6880
 11474  007268                     l3168:
 11475  007268  C001  F001         	movff	___lwmod@dividend,?___lwmod
 11476  00726C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 11477  007270  0012               	return		;funcret
 11478  007272                     __end_of___lwmod:
 11479                           	opt stack 0
 11480                           tblptru	equ	0xFF8
 11481                           tblptrh	equ	0xFF7
 11482                           tblptrl	equ	0xFF6
 11483                           tablat	equ	0xFF5
 11484                           prodh	equ	0xFF4
 11485                           prodl	equ	0xFF3
 11486                           intcon	equ	0xFF2
 11487                           intcon2	equ	0xFF1
 11488                           intcon3	equ	0xFF0
 11489                           postinc0	equ	0xFEE
 11490                           wreg	equ	0xFE8
 11491                           postdec1	equ	0xFE5
 11492                           plusw1	equ	0xFE3
 11493                           fsr1h	equ	0xFE2
 11494                           fsr1l	equ	0xFE1
 11495                           indf2	equ	0xFDF
 11496                           postinc2	equ	0xFDE
 11497                           plusw2	equ	0xFDB
 11498                           fsr2h	equ	0xFDA
 11499                           fsr2l	equ	0xFD9
 11500                           status	equ	0xFD8
 11501                           
 11502 ;; *************** function ___lwdiv *****************
 11503 ;; Defined at:
 11504 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 11505 ;; Parameters:    Size  Location     Type
 11506 ;;  dividend        2    0[COMRAM] unsigned int 
 11507 ;;  divisor         2    2[COMRAM] unsigned int 
 11508 ;; Auto vars:     Size  Location     Type
 11509 ;;  quotient        2    4[COMRAM] unsigned int 
 11510 ;;  counter         1    6[COMRAM] unsigned char 
 11511 ;; Return value:  Size  Location     Type
 11512 ;;                  2    0[COMRAM] unsigned int 
 11513 ;; Registers used:
 11514 ;;		wreg, status,2, status,0
 11515 ;; Tracked objects:
 11516 ;;		On entry : 0/0
 11517 ;;		On exit  : 0/0
 11518 ;;		Unchanged: 0/0
 11519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11521 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11523 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11524 ;;Total ram usage:        7 bytes
 11525 ;; Hardware stack levels used:    1
 11526 ;; This function calls:
 11527 ;;		Nothing
 11528 ;; This function is called by:
 11529 ;;		_utoa
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           	psect	text47
 11534  006F40                     __ptext47:
 11535                           	opt stack 0
 11536  006F40                     ___lwdiv:
 11537                           	opt stack 25
 11538                           
 11539                           ;incstack = 0
 11540  006F40  0E00               	movlw	0
 11541  006F42  6E06               	movwf	___lwdiv@quotient+1,c
 11542  006F44  0E00               	movlw	0
 11543  006F46  6E05               	movwf	___lwdiv@quotient,c
 11544  006F48  5003               	movf	___lwdiv@divisor,w,c
 11545  006F4A  1004               	iorwf	___lwdiv@divisor+1,w,c
 11546  006F4C  B4D8               	btfsc	status,2,c
 11547  006F4E  D01C               	goto	l3158
 11548  006F50  0E01               	movlw	1
 11549  006F52  6E07               	movwf	___lwdiv@counter,c
 11550  006F54  D004               	goto	l3153
 11551  006F56  90D8               	bcf	status,0,c
 11552  006F58  3603               	rlcf	___lwdiv@divisor,f,c
 11553  006F5A  3604               	rlcf	___lwdiv@divisor+1,f,c
 11554  006F5C  2A07               	incf	___lwdiv@counter,f,c
 11555  006F5E                     l3153:
 11556  006F5E  AE04               	btfss	___lwdiv@divisor+1,7,c
 11557  006F60  D7FA               	goto	l3154
 11558  006F62                     u6850:
 11559  006F62  90D8               	bcf	status,0,c
 11560  006F64  3605               	rlcf	___lwdiv@quotient,f,c
 11561  006F66  3606               	rlcf	___lwdiv@quotient+1,f,c
 11562  006F68  5003               	movf	___lwdiv@divisor,w,c
 11563  006F6A  5C01               	subwf	___lwdiv@dividend,w,c
 11564  006F6C  5004               	movf	___lwdiv@divisor+1,w,c
 11565  006F6E  5802               	subwfb	___lwdiv@dividend+1,w,c
 11566  006F70  A0D8               	btfss	status,0,c
 11567  006F72  D005               	goto	l3157
 11568  006F74  5003               	movf	___lwdiv@divisor,w,c
 11569  006F76  5E01               	subwf	___lwdiv@dividend,f,c
 11570  006F78  5004               	movf	___lwdiv@divisor+1,w,c
 11571  006F7A  5A02               	subwfb	___lwdiv@dividend+1,f,c
 11572  006F7C  8005               	bsf	___lwdiv@quotient,0,c
 11573  006F7E                     l3157:
 11574  006F7E  90D8               	bcf	status,0,c
 11575  006F80  3204               	rrcf	___lwdiv@divisor+1,f,c
 11576  006F82  3203               	rrcf	___lwdiv@divisor,f,c
 11577  006F84  2E07               	decfsz	___lwdiv@counter,f,c
 11578  006F86  D7ED               	goto	u6850
 11579  006F88                     l3158:
 11580  006F88  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 11581  006F8C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11582  006F90  0012               	return		;funcret
 11583  006F92                     __end_of___lwdiv:
 11584                           	opt stack 0
 11585                           tblptru	equ	0xFF8
 11586                           tblptrh	equ	0xFF7
 11587                           tblptrl	equ	0xFF6
 11588                           tablat	equ	0xFF5
 11589                           prodh	equ	0xFF4
 11590                           prodl	equ	0xFF3
 11591                           intcon	equ	0xFF2
 11592                           intcon2	equ	0xFF1
 11593                           intcon3	equ	0xFF0
 11594                           postinc0	equ	0xFEE
 11595                           wreg	equ	0xFE8
 11596                           postdec1	equ	0xFE5
 11597                           plusw1	equ	0xFE3
 11598                           fsr1h	equ	0xFE2
 11599                           fsr1l	equ	0xFE1
 11600                           indf2	equ	0xFDF
 11601                           postinc2	equ	0xFDE
 11602                           plusw2	equ	0xFDB
 11603                           fsr2h	equ	0xFDA
 11604                           fsr2l	equ	0xFD9
 11605                           status	equ	0xFD8
 11606                           
 11607 ;; *************** function _bootloader_run *****************
 11608 ;; Defined at:
 11609 ;;		line 60 in file "bootloader.c"
 11610 ;; Parameters:    Size  Location     Type
 11611 ;;  timeslot        1    wreg     unsigned char 
 11612 ;; Auto vars:     Size  Location     Type
 11613 ;;  timeslot        1   93[COMRAM] unsigned char 
 11614 ;; Return value:  Size  Location     Type
 11615 ;;                  1    wreg      void 
 11616 ;; Registers used:
 11617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11618 ;; Tracked objects:
 11619 ;;		On entry : 0/0
 11620 ;;		On exit  : 0/0
 11621 ;;		Unchanged: 0/0
 11622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11624 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11626 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11627 ;;Total ram usage:        1 bytes
 11628 ;; Hardware stack levels used:    1
 11629 ;; Hardware stack levels required when called:   11
 11630 ;; This function calls:
 11631 ;;		__bootloader_find_file
 11632 ;;		__bootloader_program
 11633 ;;		__bootloader_verify_file
 11634 ;; This function is called by:
 11635 ;;		_main
 11636 ;; This function uses a non-reentrant model
 11637 ;;
 11638                           
 11639                           	psect	text48
 11640  007084                     __ptext48:
 11641                           	opt stack 0
 11642  007084                     _bootloader_run:
 11643                           	opt stack 19
 11644                           
 11645                           ;incstack = 0
 11646                           ;bootloader_run@timeslot stored from wreg
 11647  007084  6E5E               	movwf	bootloader_run@timeslot,c
 11648                           
 11649                           ;bootloader.c: 62: switch(os.bootloader_mode)
 11650  007086  D00F               	goto	l2154
 11651  007088                     
 11652                           ;bootloader.c: 65: _bootloader_find_file();
 11653  007088  EC7D  F02B         	call	__bootloader_find_file	;wreg free
 11654                           
 11655                           ;bootloader.c: 66: break;
 11656  00708C  0012               	return	
 11657  00708E                     
 11658                           ;bootloader.c: 69: _bootloader_find_file();
 11659  00708E  EC7D  F02B         	call	__bootloader_find_file	;wreg free
 11660                           
 11661                           ;bootloader.c: 70: break;
 11662  007092  0012               	return	
 11663  007094                     
 11664                           ;bootloader.c: 73: _bootloader_verify_file();
 11665  007094  EC13  F009         	call	__bootloader_verify_file	;wreg free
 11666                           
 11667                           ;bootloader.c: 80: break;
 11668                           
 11669                           ;bootloader.c: 79: case BOOTLOADER_MODE_CHECK_FAILED:
 11670                           
 11671                           ;bootloader.c: 77: break;
 11672                           
 11673                           ;bootloader.c: 76: case BOOTLOADER_MODE_CHECK_COMPLETE:
 11674                           
 11675                           ;bootloader.c: 74: break;
 11676  007098  0012               	return	
 11677  00709A                     
 11678                           ;bootloader.c: 83: if(timeslot==0)
 11679  00709A  505E               	movf	bootloader_run@timeslot,w,c
 11680  00709C  A4D8               	btfss	status,2,c
 11681  00709E  0012               	return	
 11682                           
 11683                           ;bootloader.c: 84: {;bootloader.c: 85: _bootloader_program();
 11684  0070A0  ECE4  F005         	call	__bootloader_program	;wreg free
 11685                           
 11686                           ;bootloader.c: 91: }
 11687                           
 11688                           ;bootloader.c: 90: break;
 11689                           
 11690                           ;bootloader.c: 89: case BOOTLOADER_MODE_DONE:
 11691                           
 11692                           ;bootloader.c: 86: };bootloader.c: 87: break;
 11693  0070A4  0012               	return	
 11694  0070A6                     l2154:
 11695  0070A6  0100               	movlb	0	; () banked
 11696  0070A8  5164               	movf	(_os+4)& (0+255),w,b	;volatile
 11697                           
 11698                           ; Switch size 1, requested type "space"
 11699                           ; Number of cases is 7, Range of values is 0 to 96
 11700                           ; switch strategies available:
 11701                           ; Name         Instructions Cycles
 11702                           ; simple_byte           22    12 (average)
 11703                           ;	Chosen strategy is simple_byte
 11704  0070AA  0A00               	xorlw	0	; case 0
 11705  0070AC  B4D8               	btfsc	status,2,c
 11706  0070AE  D7EC               	goto	l2155
 11707  0070B0  0A10               	xorlw	16	; case 16
 11708  0070B2  B4D8               	btfsc	status,2,c
 11709  0070B4  D7EC               	goto	l2157
 11710  0070B6  0A30               	xorlw	48	; case 32
 11711  0070B8  B4D8               	btfsc	status,2,c
 11712  0070BA  D7EC               	goto	l2158
 11713  0070BC  0A10               	xorlw	16	; case 48
 11714  0070BE  B4D8               	btfsc	status,2,c
 11715  0070C0  0012               	return	
 11716  0070C2  0A70               	xorlw	112	; case 64
 11717  0070C4  B4D8               	btfsc	status,2,c
 11718  0070C6  0012               	return	
 11719  0070C8  0A10               	xorlw	16	; case 80
 11720  0070CA  B4D8               	btfsc	status,2,c
 11721  0070CC  D7E6               	goto	l2161
 11722  0070CE  0A30               	xorlw	48	; case 96
 11723  0070D0  0012               	return	
 11724  0070D2                     __end_of_bootloader_run:
 11725                           	opt stack 0
 11726                           tblptru	equ	0xFF8
 11727                           tblptrh	equ	0xFF7
 11728                           tblptrl	equ	0xFF6
 11729                           tablat	equ	0xFF5
 11730                           prodh	equ	0xFF4
 11731                           prodl	equ	0xFF3
 11732                           intcon	equ	0xFF2
 11733                           intcon2	equ	0xFF1
 11734                           intcon3	equ	0xFF0
 11735                           postinc0	equ	0xFEE
 11736                           wreg	equ	0xFE8
 11737                           postdec1	equ	0xFE5
 11738                           plusw1	equ	0xFE3
 11739                           fsr1h	equ	0xFE2
 11740                           fsr1l	equ	0xFE1
 11741                           indf2	equ	0xFDF
 11742                           postinc2	equ	0xFDE
 11743                           plusw2	equ	0xFDB
 11744                           fsr2h	equ	0xFDA
 11745                           fsr2l	equ	0xFD9
 11746                           status	equ	0xFD8
 11747                           
 11748 ;; *************** function __bootloader_verify_file *****************
 11749 ;; Defined at:
 11750 ;;		line 167 in file "bootloader.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;		None
 11753 ;; Auto vars:     Size  Location     Type
 11754 ;;  address32       4   50[BANK0 ] unsigned long 
 11755 ;;  return_value    4   46[BANK0 ] unsigned long 
 11756 ;;  rec_counter     1   45[BANK0 ] unsigned char 
 11757 ;; Return value:  Size  Location     Type
 11758 ;;                  1    wreg      void 
 11759 ;; Registers used:
 11760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11761 ;; Tracked objects:
 11762 ;;		On entry : 0/0
 11763 ;;		On exit  : 0/0
 11764 ;;		Unchanged: 0/0
 11765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11767 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11768 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11769 ;;      Totals:         8       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11770 ;;Total ram usage:       17 bytes
 11771 ;; Hardware stack levels used:    1
 11772 ;; Hardware stack levels required when called:   10
 11773 ;; This function calls:
 11774 ;;		__bootloader_check_address
 11775 ;;		_fat_get_file_size
 11776 ;;		_fat_read_from_file
 11777 ;;		_parseHexFileEntry
 11778 ;; This function is called by:
 11779 ;;		_bootloader_run
 11780 ;; This function uses a non-reentrant model
 11781 ;;
 11782                           
 11783                           	psect	text49
 11784  001226                     __ptext49:
 11785                           	opt stack 0
 11786  001226                     __bootloader_verify_file:
 11787                           	opt stack 19
 11788                           
 11789                           ;bootloader.c: 169: uint8_t rec_counter;;bootloader.c: 170: uint32_t return_value = 0;
 11790                           
 11791                           ;incstack = 0
 11792  001226  0E00               	movlw	0
 11793  001228  0100               	movlb	0	; () banked
 11794  00122A  6FEC               	movwf	__bootloader_verify_file@return_value& (0+255),b
 11795  00122C  0E00               	movlw	0
 11796  00122E  6FED               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
 11797  001230  0E00               	movlw	0
 11798  001232  6FEE               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
 11799  001234  0E00               	movlw	0
 11800  001236  6FEF               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
 11801                           
 11802                           ; BSR set to: 0
 11803                           ;bootloader.c: 171: uint32_t address32;;bootloader.c: 174: hex_file_size = fat_get_file_
      +                          size(file_number);
 11804  001238  51FF               	movf	_file_number& (0+255),w,b
 11805  00123A  EC21  F032         	call	_fat_get_file_size
 11806  00123E  C031  F078         	movff	?_fat_get_file_size,_hex_file_size
 11807  001242  C032  F079         	movff	?_fat_get_file_size+1,_hex_file_size+1
 11808  001246  C033  F07A         	movff	?_fat_get_file_size+2,_hex_file_size+2
 11809  00124A  C034  F07B         	movff	?_fat_get_file_size+3,_hex_file_size+3
 11810                           
 11811                           ;bootloader.c: 177: for(rec_counter=0; rec_counter<1; ++rec_counter)
 11812  00124E  0E00               	movlw	0
 11813  001250  0100               	movlb	0	; () banked
 11814  001252  6FEB               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
 11815  001254                     l13557:
 11816                           
 11817                           ; BSR set to: 0
 11818  001254  51EB               	movf	__bootloader_verify_file@rec_counter& (0+255),w,b
 11819  001256  A4D8               	btfss	status,2,c
 11820  001258  0012               	return	
 11821                           
 11822                           ; BSR set to: 0
 11823                           ;bootloader.c: 178: {;bootloader.c: 180: if((hex_file_size-hex_file_offset)>=50)
 11824                           
 11825                           ; BSR set to: 0
 11826                           
 11827                           ; BSR set to: 0
 11828  00125A  C07C  F056         	movff	_hex_file_offset,??__bootloader_verify_file
 11829  00125E  C07D  F057         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 11830  001262  C07E  F058         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 11831  001266  C07F  F059         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 11832  00126A  1E56               	comf	??__bootloader_verify_file,f,c
 11833  00126C  1E57               	comf	??__bootloader_verify_file+1,f,c
 11834  00126E  1E58               	comf	??__bootloader_verify_file+2,f,c
 11835  001270  1E59               	comf	??__bootloader_verify_file+3,f,c
 11836  001272  2A56               	incf	??__bootloader_verify_file,f,c
 11837  001274  0E00               	movlw	0
 11838  001276  2257               	addwfc	??__bootloader_verify_file+1,f,c
 11839  001278  2258               	addwfc	??__bootloader_verify_file+2,f,c
 11840  00127A  2259               	addwfc	??__bootloader_verify_file+3,f,c
 11841  00127C  5178               	movf	_hex_file_size& (0+255),w,b
 11842  00127E  2456               	addwf	??__bootloader_verify_file,w,c
 11843  001280  6E5A               	movwf	(??__bootloader_verify_file+4)& (0+255),c
 11844  001282  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 11845  001284  2057               	addwfc	??__bootloader_verify_file+1,w,c
 11846  001286  6E5B               	movwf	(??__bootloader_verify_file+5)& (0+255),c
 11847  001288  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 11848  00128A  2058               	addwfc	??__bootloader_verify_file+2,w,c
 11849  00128C  6E5C               	movwf	(??__bootloader_verify_file+6)& (0+255),c
 11850  00128E  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 11851  001290  2059               	addwfc	??__bootloader_verify_file+3,w,c
 11852  001292  6E5D               	movwf	(??__bootloader_verify_file+7)& (0+255),c
 11853  001294  505D               	movf	??__bootloader_verify_file+7,w,c
 11854  001296  105C               	iorwf	??__bootloader_verify_file+6,w,c
 11855  001298  105B               	iorwf	??__bootloader_verify_file+5,w,c
 11856  00129A  E104               	bnz	u10780
 11857  00129C  0E32               	movlw	50
 11858  00129E  5C5A               	subwf	??__bootloader_verify_file+4,w,c
 11859  0012A0  A0D8               	btfss	status,0,c
 11860  0012A2  D018               	goto	l2186
 11861  0012A4                     u10780:
 11862                           
 11863                           ; BSR set to: 0
 11864                           ;bootloader.c: 181: fat_read_from_file(file_number, hex_file_offset, 50, file_buffer);
 11865  0012A4  C07C  F040         	movff	_hex_file_offset,fat_read_from_file@start_byte
 11866  0012A8  C07D  F041         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 11867  0012AC  C07E  F042         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 11868  0012B0  C07F  F043         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 11869  0012B4  0E32               	movlw	50
 11870  0012B6  6E44               	movwf	fat_read_from_file@length,c
 11871  0012B8  0E00               	movlw	0
 11872  0012BA  6E45               	movwf	fat_read_from_file@length+1,c
 11873  0012BC  0E00               	movlw	0
 11874  0012BE  6E46               	movwf	fat_read_from_file@length+2,c
 11875  0012C0  0E00               	movlw	0
 11876  0012C2  6E47               	movwf	fat_read_from_file@length+3,c
 11877  0012C4  0E80               	movlw	low _file_buffer
 11878  0012C6  6E48               	movwf	fat_read_from_file@data,c
 11879  0012C8  0E02               	movlw	high _file_buffer
 11880  0012CA  6E49               	movwf	fat_read_from_file@data+1,c
 11881  0012CC  51FF               	movf	_file_number& (0+255),w,b
 11882  0012CE  EC78  F00F         	call	_fat_read_from_file
 11883  0012D2  D02D               	goto	l2187
 11884  0012D4                     l2186:
 11885                           
 11886                           ;bootloader.c: 182: else;bootloader.c: 183: fat_read_from_file(file_number, hex_file_off
      +                          set, (hex_file_size-hex_file_offset), file_buffer);
 11887  0012D4  C07C  F040         	movff	_hex_file_offset,fat_read_from_file@start_byte
 11888  0012D8  C07D  F041         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 11889  0012DC  C07E  F042         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 11890  0012E0  C07F  F043         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 11891  0012E4  C07C  F056         	movff	_hex_file_offset,??__bootloader_verify_file
 11892  0012E8  C07D  F057         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 11893  0012EC  C07E  F058         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 11894  0012F0  C07F  F059         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 11895  0012F4  1E56               	comf	??__bootloader_verify_file,f,c
 11896  0012F6  1E57               	comf	??__bootloader_verify_file+1,f,c
 11897  0012F8  1E58               	comf	??__bootloader_verify_file+2,f,c
 11898  0012FA  1E59               	comf	??__bootloader_verify_file+3,f,c
 11899  0012FC  2A56               	incf	??__bootloader_verify_file,f,c
 11900  0012FE  0E00               	movlw	0
 11901  001300  2257               	addwfc	??__bootloader_verify_file+1,f,c
 11902  001302  2258               	addwfc	??__bootloader_verify_file+2,f,c
 11903  001304  2259               	addwfc	??__bootloader_verify_file+3,f,c
 11904  001306  0100               	movlb	0	; () banked
 11905  001308  5178               	movf	_hex_file_size& (0+255),w,b
 11906  00130A  2456               	addwf	??__bootloader_verify_file,w,c
 11907  00130C  6E44               	movwf	fat_read_from_file@length,c
 11908  00130E  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 11909  001310  2057               	addwfc	??__bootloader_verify_file+1,w,c
 11910  001312  6E45               	movwf	fat_read_from_file@length+1,c
 11911  001314  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 11912  001316  2058               	addwfc	??__bootloader_verify_file+2,w,c
 11913  001318  6E46               	movwf	fat_read_from_file@length+2,c
 11914  00131A  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 11915  00131C  2059               	addwfc	??__bootloader_verify_file+3,w,c
 11916  00131E  6E47               	movwf	fat_read_from_file@length+3,c
 11917  001320  0E80               	movlw	low _file_buffer
 11918  001322  6E48               	movwf	fat_read_from_file@data,c
 11919  001324  0E02               	movlw	high _file_buffer
 11920  001326  6E49               	movwf	fat_read_from_file@data+1,c
 11921  001328  51FF               	movf	_file_number& (0+255),w,b
 11922  00132A  EC78  F00F         	call	_fat_read_from_file
 11923  00132E                     l2187:
 11924                           
 11925                           ;bootloader.c: 185: return_value = parseHexFileEntry(file_buffer, 0, &hex_file_entry);
 11926  00132E  0E80               	movlw	low _file_buffer
 11927  001330  6E0C               	movwf	parseHexFileEntry@data,c
 11928  001332  0E02               	movlw	high _file_buffer
 11929  001334  6E0D               	movwf	parseHexFileEntry@data+1,c
 11930  001336  0E00               	movlw	0
 11931  001338  6E0E               	movwf	parseHexFileEntry@offset,c
 11932  00133A  0E00               	movlw	0
 11933  00133C  6E0F               	movwf	parseHexFileEntry@offset+1,c
 11934  00133E  0E00               	movlw	0
 11935  001340  6E10               	movwf	parseHexFileEntry@offset+2,c
 11936  001342  0E00               	movlw	0
 11937  001344  6E11               	movwf	parseHexFileEntry@offset+3,c
 11938  001346  0EBC               	movlw	low _hex_file_entry
 11939  001348  6E12               	movwf	parseHexFileEntry@hexEntry,c
 11940  00134A  0E01               	movlw	high _hex_file_entry
 11941  00134C  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 11942  00134E  EC10  F000         	call	_parseHexFileEntry	;wreg free
 11943  001352  C00C  F0EC         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
 11944  001356  C00D  F0ED         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
 11945  00135A  C00E  F0EE         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
 11946  00135E  C00F  F0EF         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
 11947                           
 11948                           ;bootloader.c: 188: ++hex_file_entries;
 11949  001362  0100               	movlb	0	; () banked
 11950  001364  4B84               	infsnz	_hex_file_entries& (0+255),f,b
 11951  001366  2B85               	incf	(_hex_file_entries+1)& (0+255),f,b
 11952                           
 11953                           ; BSR set to: 0
 11954                           ;bootloader.c: 191: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
 11955  001368  0E04               	movlw	4
 11956  00136A  0101               	movlb	1	; () banked
 11957  00136C  19C0               	xorwf	(_hex_file_entry+4)& (0+255),w,b
 11958  00136E  A4D8               	btfss	status,2,c
 11959  001370  D01C               	goto	l2188
 11960                           
 11961                           ; BSR set to: 1
 11962                           ;bootloader.c: 192: {;bootloader.c: 193: extended_linear_address = hex_file_entry.data[0
      +                          ];
 11963  001372  51C1               	movf	(_hex_file_entry+5)& (0+255),w,b
 11964  001374  6F40               	movwf	_extended_linear_address& (0+255),b
 11965  001376  6B41               	clrf	(_extended_linear_address+1)& (0+255),b
 11966  001378  6B42               	clrf	(_extended_linear_address+2)& (0+255),b
 11967  00137A  6B43               	clrf	(_extended_linear_address+3)& (0+255),b
 11968                           
 11969                           ; BSR set to: 1
 11970                           ;bootloader.c: 194: extended_linear_address <<= 8;
 11971  00137C  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 11972  001380  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 11973  001384  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 11974  001388  6B40               	clrf	_extended_linear_address& (0+255),b
 11975                           
 11976                           ; BSR set to: 1
 11977                           ;bootloader.c: 195: extended_linear_address |= hex_file_entry.data[1];
 11978  00138A  51C2               	movf	(_hex_file_entry+6)& (0+255),w,b
 11979  00138C  1340               	iorwf	_extended_linear_address& (0+255),f,b
 11980                           
 11981                           ; BSR set to: 1
 11982                           ;bootloader.c: 196: extended_linear_address <<= 8;
 11983  00138E  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 11984  001392  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 11985  001396  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 11986  00139A  6B40               	clrf	_extended_linear_address& (0+255),b
 11987                           
 11988                           ; BSR set to: 1
 11989                           ;bootloader.c: 197: extended_linear_address <<= 8;
 11990  00139C  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 11991  0013A0  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 11992  0013A4  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 11993  0013A8  6B40               	clrf	_extended_linear_address& (0+255),b
 11994  0013AA                     l2188:
 11995                           
 11996                           ; BSR set to: 1
 11997                           ;bootloader.c: 198: };bootloader.c: 201: if(hex_file_entry.recordType==RecordTypeData)
 11998                           
 11999                           ; BSR set to: 1
 12000  0013AA  51C0               	movf	(_hex_file_entry+4)& (0+255),w,b
 12001  0013AC  A4D8               	btfss	status,2,c
 12002  0013AE  D05D               	goto	l2192
 12003                           
 12004                           ; BSR set to: 1
 12005                           ;bootloader.c: 202: {;bootloader.c: 204: address32 = extended_linear_address + hex_file_
      +                          entry.address;
 12006  0013B0  51BE               	movf	(_hex_file_entry+2)& (0+255),w,b
 12007  0013B2  2540               	addwf	_extended_linear_address& (0+255),w,b
 12008  0013B4  0100               	movlb	0	; () banked
 12009  0013B6  6FF0               	movwf	__bootloader_verify_file@address32& (0+255),b
 12010  0013B8  0101               	movlb	1	; () banked
 12011  0013BA  51BF               	movf	(_hex_file_entry+3)& (0+255),w,b
 12012  0013BC  2141               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 12013  0013BE  0100               	movlb	0	; () banked
 12014  0013C0  6FF1               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
 12015  0013C2  0E00               	movlw	0
 12016  0013C4  0101               	movlb	1	; () banked
 12017  0013C6  2142               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 12018  0013C8  0100               	movlb	0	; () banked
 12019  0013CA  6FF2               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
 12020  0013CC  0E00               	movlw	0
 12021  0013CE  0101               	movlb	1	; () banked
 12022  0013D0  2143               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 12023  0013D2  0100               	movlb	0	; () banked
 12024  0013D4  6FF3               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
 12025                           
 12026                           ;bootloader.c: 207: if(address32<file_minimum_address)
 12027  0013D6  0101               	movlb	1	; () banked
 12028  0013D8  5148               	movf	_file_minimum_address& (0+255),w,b
 12029  0013DA  0100               	movlb	0	; () banked
 12030  0013DC  5DF0               	subwf	__bootloader_verify_file@address32& (0+255),w,b
 12031  0013DE  0101               	movlb	1	; () banked
 12032  0013E0  5149               	movf	(_file_minimum_address+1)& (0+255),w,b
 12033  0013E2  0100               	movlb	0	; () banked
 12034  0013E4  59F1               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
 12035  0013E6  0101               	movlb	1	; () banked
 12036  0013E8  514A               	movf	(_file_minimum_address+2)& (0+255),w,b
 12037  0013EA  0100               	movlb	0	; () banked
 12038  0013EC  59F2               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
 12039  0013EE  0101               	movlb	1	; () banked
 12040  0013F0  514B               	movf	(_file_minimum_address+3)& (0+255),w,b
 12041  0013F2  0100               	movlb	0	; () banked
 12042  0013F4  59F3               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
 12043  0013F6  B0D8               	btfsc	status,0,c
 12044  0013F8  D008               	goto	l2190
 12045                           
 12046                           ; BSR set to: 0
 12047                           ;bootloader.c: 208: {;bootloader.c: 209: file_minimum_address = address32;
 12048  0013FA  C0F0  F148         	movff	__bootloader_verify_file@address32,_file_minimum_address
 12049  0013FE  C0F1  F149         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
 12050  001402  C0F2  F14A         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
 12051  001406  C0F3  F14B         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
 12052  00140A                     l2190:
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;bootloader.c: 210: };bootloader.c: 211: if(address32>file_maximum_address)
 12056                           
 12057                           ; BSR set to: 0
 12058  00140A  51F0               	movf	__bootloader_verify_file@address32& (0+255),w,b
 12059  00140C  0101               	movlb	1	; () banked
 12060  00140E  5D44               	subwf	_file_maximum_address& (0+255),w,b
 12061  001410  0100               	movlb	0	; () banked
 12062  001412  51F1               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
 12063  001414  0101               	movlb	1	; () banked
 12064  001416  5945               	subwfb	(_file_maximum_address+1)& (0+255),w,b
 12065  001418  0100               	movlb	0	; () banked
 12066  00141A  51F2               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
 12067  00141C  0101               	movlb	1	; () banked
 12068  00141E  5946               	subwfb	(_file_maximum_address+2)& (0+255),w,b
 12069  001420  0100               	movlb	0	; () banked
 12070  001422  51F3               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
 12071  001424  0101               	movlb	1	; () banked
 12072  001426  5947               	subwfb	(_file_maximum_address+3)& (0+255),w,b
 12073  001428  B0D8               	btfsc	status,0,c
 12074  00142A  D008               	goto	l2191
 12075                           
 12076                           ; BSR set to: 1
 12077                           ;bootloader.c: 212: {;bootloader.c: 213: file_maximum_address = address32;
 12078  00142C  C0F0  F144         	movff	__bootloader_verify_file@address32,_file_maximum_address
 12079  001430  C0F1  F145         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
 12080  001434  C0F2  F146         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
 12081  001438  C0F3  F147         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
 12082  00143C                     l2191:
 12083                           
 12084                           ; BSR set to: 1
 12085                           ;bootloader.c: 214: };bootloader.c: 217: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
 12086                           
 12087                           ; BSR set to: 1
 12088  00143C  C0F0  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
 12089  001440  C0F1  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
 12090  001444  C0F2  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
 12091  001448  C0F3  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
 12092  00144C  C1BC  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
 12093  001450  EC11  F024         	call	__bootloader_check_address	;wreg free
 12094  001454  0AFF               	xorlw	255
 12095  001456  A4D8               	btfss	status,2,c
 12096  001458  D008               	goto	l2192
 12097                           
 12098                           ;bootloader.c: 218: {;bootloader.c: 220: last_error = ShortRecordErrorAddressRange;
 12099  00145A  0E0B               	movlw	11
 12100  00145C  0100               	movlb	0	; () banked
 12101  00145E  6F9E               	movwf	_last_error& (0+255),b
 12102                           
 12103                           ;bootloader.c: 222: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 12104  001460  0E40               	movlw	64
 12105  001462  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12106                           
 12107                           ;bootloader.c: 223: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12108  001464  0E40               	movlw	64
 12109  001466  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12110                           
 12111                           ;bootloader.c: 224: break;
 12112  001468  0012               	return	
 12113  00146A                     l2192:
 12114                           
 12115                           ;bootloader.c: 225: };bootloader.c: 226: };bootloader.c: 228: if(return_value==0)
 12116                           
 12117                           ; BSR set to: 0
 12118                           
 12119                           ; BSR set to: 0
 12120  00146A  0100               	movlb	0	; () banked
 12121  00146C  51EC               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 12122  00146E  11ED               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 12123  001470  11EE               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 12124  001472  11EF               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 12125  001474  A4D8               	btfss	status,2,c
 12126  001476  D025               	goto	l2193
 12127                           
 12128                           ; BSR set to: 0
 12129                           ;bootloader.c: 229: {;bootloader.c: 232: total_hex_file_entries = hex_file_entries;
 12130  001478  C084  F168         	movff	_hex_file_entries,_total_hex_file_entries
 12131  00147C  C085  F169         	movff	_hex_file_entries+1,_total_hex_file_entries+1
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;bootloader.c: 233: hex_file_entries = 0;
 12135  001480  0E00               	movlw	0
 12136  001482  6F85               	movwf	(_hex_file_entries+1)& (0+255),b
 12137  001484  0E00               	movlw	0
 12138  001486  6F84               	movwf	_hex_file_entries& (0+255),b
 12139                           
 12140                           ;bootloader.c: 234: hex_file_offset = 0;
 12141  001488  0E00               	movlw	0
 12142  00148A  6F7C               	movwf	_hex_file_offset& (0+255),b
 12143  00148C  0E00               	movlw	0
 12144  00148E  6F7D               	movwf	(_hex_file_offset+1)& (0+255),b
 12145  001490  0E00               	movlw	0
 12146  001492  6F7E               	movwf	(_hex_file_offset+2)& (0+255),b
 12147  001494  0E00               	movlw	0
 12148  001496  6F7F               	movwf	(_hex_file_offset+3)& (0+255),b
 12149                           
 12150                           ;bootloader.c: 235: extended_linear_address = 0;
 12151  001498  0E00               	movlw	0
 12152  00149A  0101               	movlb	1	; () banked
 12153  00149C  6F40               	movwf	_extended_linear_address& (0+255),b
 12154  00149E  0E00               	movlw	0
 12155  0014A0  6F41               	movwf	(_extended_linear_address+1)& (0+255),b
 12156  0014A2  0E00               	movlw	0
 12157  0014A4  6F42               	movwf	(_extended_linear_address+2)& (0+255),b
 12158  0014A6  0E00               	movlw	0
 12159  0014A8  6F43               	movwf	(_extended_linear_address+3)& (0+255),b
 12160                           
 12161                           ;bootloader.c: 236: flash_pages_written = 0;
 12162  0014AA  0E00               	movlw	0
 12163  0014AC  6F67               	movwf	(_flash_pages_written+1)& (0+255),b
 12164  0014AE  0E00               	movlw	0
 12165  0014B0  6F66               	movwf	_flash_pages_written& (0+255),b
 12166                           
 12167                           ;bootloader.c: 237: start_from_byte_next = 0;
 12168  0014B2  0E00               	movlw	0
 12169  0014B4  0100               	movlb	0	; () banked
 12170  0014B6  6F9D               	movwf	_start_from_byte_next& (0+255),b
 12171                           
 12172                           ;bootloader.c: 239: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
 12173  0014B8  0E30               	movlw	48
 12174  0014BA  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12175                           
 12176                           ;bootloader.c: 240: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
 12177  0014BC  0E30               	movlw	48
 12178  0014BE  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12179                           
 12180                           ;bootloader.c: 241: break;
 12181  0014C0  0012               	return	
 12182  0014C2                     l2193:
 12183                           
 12184                           ; BSR set to: 0
 12185                           ;bootloader.c: 243: else if(return_value>0xFFFFFFF0)
 12186                           
 12187                           ; BSR set to: 0
 12188  0014C2  0EF1               	movlw	241
 12189  0014C4  5DEC               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
 12190  0014C6  0EFF               	movlw	255
 12191  0014C8  59ED               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 12192  0014CA  0EFF               	movlw	255
 12193  0014CC  59EE               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 12194  0014CE  0EFF               	movlw	255
 12195  0014D0  59EF               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 12196  0014D2  A0D8               	btfss	status,0,c
 12197  0014D4  D007               	goto	l2195
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;bootloader.c: 244: {;bootloader.c: 246: last_error = return_value & 0xF;
 12201  0014D6  51EC               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 12202  0014D8  0B0F               	andlw	15
 12203  0014DA  6F9E               	movwf	_last_error& (0+255),b
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;bootloader.c: 248: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 12207  0014DC  0E40               	movlw	64
 12208  0014DE  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12209                           
 12210                           ; BSR set to: 0
 12211                           ;bootloader.c: 249: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12212  0014E0  0E40               	movlw	64
 12213  0014E2  D7ED               	goto	L1
 12214  0014E4                     l2195:
 12215                           
 12216                           ; BSR set to: 0
 12217                           ;bootloader.c: 252: else;bootloader.c: 253: {;bootloader.c: 255: hex_file_offset += retu
      +                          rn_value;
 12218                           
 12219                           ; BSR set to: 0
 12220  0014E4  51EC               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 12221  0014E6  277C               	addwf	_hex_file_offset& (0+255),f,b
 12222  0014E8  51ED               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 12223  0014EA  237D               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 12224  0014EC  51EE               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 12225  0014EE  237E               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 12226  0014F0  51EF               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 12227  0014F2  237F               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 12228                           
 12229                           ; BSR set to: 0
 12230                           
 12231                           ; BSR set to: 0
 12232                           
 12233                           ; BSR set to: 0
 12234  0014F4  2BEB               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
 12235  0014F6  D6AE               	goto	l13557
 12236  0014F8                     __end_of__bootloader_verify_file:
 12237                           	opt stack 0
 12238                           tblptru	equ	0xFF8
 12239                           tblptrh	equ	0xFF7
 12240                           tblptrl	equ	0xFF6
 12241                           tablat	equ	0xFF5
 12242                           prodh	equ	0xFF4
 12243                           prodl	equ	0xFF3
 12244                           intcon	equ	0xFF2
 12245                           intcon2	equ	0xFF1
 12246                           intcon3	equ	0xFF0
 12247                           postinc0	equ	0xFEE
 12248                           wreg	equ	0xFE8
 12249                           postdec1	equ	0xFE5
 12250                           plusw1	equ	0xFE3
 12251                           fsr1h	equ	0xFE2
 12252                           fsr1l	equ	0xFE1
 12253                           indf2	equ	0xFDF
 12254                           postinc2	equ	0xFDE
 12255                           plusw2	equ	0xFDB
 12256                           fsr2h	equ	0xFDA
 12257                           fsr2l	equ	0xFD9
 12258                           status	equ	0xFD8
 12259                           
 12260 ;; *************** function __bootloader_program *****************
 12261 ;; Defined at:
 12262 ;;		line 260 in file "bootloader.c"
 12263 ;; Parameters:    Size  Location     Type
 12264 ;;		None
 12265 ;; Auto vars:     Size  Location     Type
 12266 ;;  address32       4   55[BANK0 ] unsigned long 
 12267 ;;  return_value    4   51[BANK0 ] unsigned long 
 12268 ;;  page_to_writ    2   62[BANK0 ] unsigned int 
 12269 ;;  cntr            2   60[BANK0 ] unsigned int 
 12270 ;;  address_with    2   49[BANK0 ] unsigned int 
 12271 ;;  entry_page      2   47[BANK0 ] unsigned int 
 12272 ;;  buffer          2   45[BANK0 ] PTR unsigned char 
 12273 ;;		 -> pageBuffer(1024), 
 12274 ;;  start_from_b    1   59[BANK0 ] unsigned char 
 12275 ;; Return value:  Size  Location     Type
 12276 ;;                  1    wreg      void 
 12277 ;; Registers used:
 12278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12279 ;; Tracked objects:
 12280 ;;		On entry : 0/0
 12281 ;;		On exit  : 0/0
 12282 ;;		Unchanged: 0/0
 12283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12285 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12286 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12287 ;;      Totals:         8      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12288 ;;Total ram usage:       27 bytes
 12289 ;; Hardware stack levels used:    1
 12290 ;; Hardware stack levels required when called:   10
 12291 ;; This function calls:
 12292 ;;		__bootloader_check_address
 12293 ;;		_fat_read_from_file
 12294 ;;		_internalFlash_addressWithinPage
 12295 ;;		_internalFlash_erasePage
 12296 ;;		_internalFlash_getBuffer
 12297 ;;		_internalFlash_pageFromAddress
 12298 ;;		_internalFlash_readPage
 12299 ;;		_internalFlash_writePage
 12300 ;;		_parseHexFileEntry
 12301 ;; This function is called by:
 12302 ;;		_bootloader_run
 12303 ;; This function uses a non-reentrant model
 12304 ;;
 12305                           
 12306                           	psect	text50
 12307  000BC8                     __ptext50:
 12308                           	opt stack 0
 12309  000BC8                     __bootloader_program:
 12310                           	opt stack 19
 12311                           
 12312                           ;bootloader.c: 262: uint16_t cntr;;bootloader.c: 263: uint8_t* buffer;;bootloader.c: 264
      +                          : uint16_t entry_page;;bootloader.c: 265: uint16_t page_to_write = 0;
 12313                           
 12314                           ; BSR set to: 0
 12315                           ;incstack = 0
 12316  000BC8  0E00               	movlw	0
 12317  000BCA  0100               	movlb	0	; () banked
 12318  000BCC  6FFD               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
 12319  000BCE  0E00               	movlw	0
 12320  000BD0  6FFC               	movwf	__bootloader_program@page_to_write& (0+255),b
 12321                           
 12322                           ;bootloader.c: 266: uint8_t start_from_byte;;bootloader.c: 267: uint32_t address32;;boot
      +                          loader.c: 268: uint32_t return_value = 0;
 12323  000BD2  0E00               	movlw	0
 12324  000BD4  6FF1               	movwf	__bootloader_program@return_value& (0+255),b
 12325  000BD6  0E00               	movlw	0
 12326  000BD8  6FF2               	movwf	(__bootloader_program@return_value+1)& (0+255),b
 12327  000BDA  0E00               	movlw	0
 12328  000BDC  6FF3               	movwf	(__bootloader_program@return_value+2)& (0+255),b
 12329  000BDE  0E00               	movlw	0
 12330  000BE0  6FF4               	movwf	(__bootloader_program@return_value+3)& (0+255),b
 12331  000BE2                     
 12332                           ;bootloader.c: 274: {;bootloader.c: 276: if((hex_file_size-hex_file_offset)>=50)
 12333                           
 12334                           ; BSR set to: 0
 12335  000BE2  C07C  F056         	movff	_hex_file_offset,??__bootloader_program
 12336  000BE6  C07D  F057         	movff	_hex_file_offset+1,??__bootloader_program+1
 12337  000BEA  C07E  F058         	movff	_hex_file_offset+2,??__bootloader_program+2
 12338  000BEE  C07F  F059         	movff	_hex_file_offset+3,??__bootloader_program+3
 12339  000BF2  1E56               	comf	??__bootloader_program,f,c
 12340  000BF4  1E57               	comf	??__bootloader_program+1,f,c
 12341  000BF6  1E58               	comf	??__bootloader_program+2,f,c
 12342  000BF8  1E59               	comf	??__bootloader_program+3,f,c
 12343  000BFA  2A56               	incf	??__bootloader_program,f,c
 12344  000BFC  0E00               	movlw	0
 12345  000BFE  2257               	addwfc	??__bootloader_program+1,f,c
 12346  000C00  2258               	addwfc	??__bootloader_program+2,f,c
 12347  000C02  2259               	addwfc	??__bootloader_program+3,f,c
 12348  000C04  0100               	movlb	0	; () banked
 12349  000C06  5178               	movf	_hex_file_size& (0+255),w,b
 12350  000C08  2456               	addwf	??__bootloader_program,w,c
 12351  000C0A  6E5A               	movwf	(??__bootloader_program+4)& (0+255),c
 12352  000C0C  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12353  000C0E  2057               	addwfc	??__bootloader_program+1,w,c
 12354  000C10  6E5B               	movwf	(??__bootloader_program+5)& (0+255),c
 12355  000C12  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12356  000C14  2058               	addwfc	??__bootloader_program+2,w,c
 12357  000C16  6E5C               	movwf	(??__bootloader_program+6)& (0+255),c
 12358  000C18  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12359  000C1A  2059               	addwfc	??__bootloader_program+3,w,c
 12360  000C1C  6E5D               	movwf	(??__bootloader_program+7)& (0+255),c
 12361  000C1E  505D               	movf	??__bootloader_program+7,w,c
 12362  000C20  105C               	iorwf	??__bootloader_program+6,w,c
 12363  000C22  105B               	iorwf	??__bootloader_program+5,w,c
 12364  000C24  E104               	bnz	u10870
 12365  000C26  0E32               	movlw	50
 12366  000C28  5C5A               	subwf	??__bootloader_program+4,w,c
 12367  000C2A  A0D8               	btfss	status,0,c
 12368  000C2C  D018               	goto	l2201
 12369  000C2E                     u10870:
 12370                           
 12371                           ; BSR set to: 0
 12372                           ;bootloader.c: 277: {;bootloader.c: 278: fat_read_from_file(file_number, hex_file_offset
      +                          , 50, file_buffer);
 12373  000C2E  C07C  F040         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12374  000C32  C07D  F041         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12375  000C36  C07E  F042         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12376  000C3A  C07F  F043         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12377  000C3E  0E32               	movlw	50
 12378  000C40  6E44               	movwf	fat_read_from_file@length,c
 12379  000C42  0E00               	movlw	0
 12380  000C44  6E45               	movwf	fat_read_from_file@length+1,c
 12381  000C46  0E00               	movlw	0
 12382  000C48  6E46               	movwf	fat_read_from_file@length+2,c
 12383  000C4A  0E00               	movlw	0
 12384  000C4C  6E47               	movwf	fat_read_from_file@length+3,c
 12385  000C4E  0E80               	movlw	low _file_buffer
 12386  000C50  6E48               	movwf	fat_read_from_file@data,c
 12387  000C52  0E02               	movlw	high _file_buffer
 12388  000C54  6E49               	movwf	fat_read_from_file@data+1,c
 12389  000C56  51FF               	movf	_file_number& (0+255),w,b
 12390  000C58  EC78  F00F         	call	_fat_read_from_file
 12391                           
 12392                           ;bootloader.c: 279: }
 12393  000C5C  D02D               	goto	l2202
 12394  000C5E                     l2201:
 12395                           
 12396                           ;bootloader.c: 280: else;bootloader.c: 281: {;bootloader.c: 282: fat_read_from_file(file
      +                          _number, hex_file_offset, (hex_file_size-hex_file_offset), file_buffer);
 12397  000C5E  C07C  F040         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12398  000C62  C07D  F041         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12399  000C66  C07E  F042         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12400  000C6A  C07F  F043         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12401  000C6E  C07C  F056         	movff	_hex_file_offset,??__bootloader_program
 12402  000C72  C07D  F057         	movff	_hex_file_offset+1,??__bootloader_program+1
 12403  000C76  C07E  F058         	movff	_hex_file_offset+2,??__bootloader_program+2
 12404  000C7A  C07F  F059         	movff	_hex_file_offset+3,??__bootloader_program+3
 12405  000C7E  1E56               	comf	??__bootloader_program,f,c
 12406  000C80  1E57               	comf	??__bootloader_program+1,f,c
 12407  000C82  1E58               	comf	??__bootloader_program+2,f,c
 12408  000C84  1E59               	comf	??__bootloader_program+3,f,c
 12409  000C86  2A56               	incf	??__bootloader_program,f,c
 12410  000C88  0E00               	movlw	0
 12411  000C8A  2257               	addwfc	??__bootloader_program+1,f,c
 12412  000C8C  2258               	addwfc	??__bootloader_program+2,f,c
 12413  000C8E  2259               	addwfc	??__bootloader_program+3,f,c
 12414  000C90  0100               	movlb	0	; () banked
 12415  000C92  5178               	movf	_hex_file_size& (0+255),w,b
 12416  000C94  2456               	addwf	??__bootloader_program,w,c
 12417  000C96  6E44               	movwf	fat_read_from_file@length,c
 12418  000C98  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12419  000C9A  2057               	addwfc	??__bootloader_program+1,w,c
 12420  000C9C  6E45               	movwf	fat_read_from_file@length+1,c
 12421  000C9E  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12422  000CA0  2058               	addwfc	??__bootloader_program+2,w,c
 12423  000CA2  6E46               	movwf	fat_read_from_file@length+2,c
 12424  000CA4  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12425  000CA6  2059               	addwfc	??__bootloader_program+3,w,c
 12426  000CA8  6E47               	movwf	fat_read_from_file@length+3,c
 12427  000CAA  0E80               	movlw	low _file_buffer
 12428  000CAC  6E48               	movwf	fat_read_from_file@data,c
 12429  000CAE  0E02               	movlw	high _file_buffer
 12430  000CB0  6E49               	movwf	fat_read_from_file@data+1,c
 12431  000CB2  51FF               	movf	_file_number& (0+255),w,b
 12432  000CB4  EC78  F00F         	call	_fat_read_from_file
 12433  000CB8                     l2202:
 12434                           
 12435                           ;bootloader.c: 283: };bootloader.c: 286: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
 12436  000CB8  0E80               	movlw	low _file_buffer
 12437  000CBA  6E0C               	movwf	parseHexFileEntry@data,c
 12438  000CBC  0E02               	movlw	high _file_buffer
 12439  000CBE  6E0D               	movwf	parseHexFileEntry@data+1,c
 12440  000CC0  0E00               	movlw	0
 12441  000CC2  6E0E               	movwf	parseHexFileEntry@offset,c
 12442  000CC4  0E00               	movlw	0
 12443  000CC6  6E0F               	movwf	parseHexFileEntry@offset+1,c
 12444  000CC8  0E00               	movlw	0
 12445  000CCA  6E10               	movwf	parseHexFileEntry@offset+2,c
 12446  000CCC  0E00               	movlw	0
 12447  000CCE  6E11               	movwf	parseHexFileEntry@offset+3,c
 12448  000CD0  0EBC               	movlw	low _hex_file_entry
 12449  000CD2  6E12               	movwf	parseHexFileEntry@hexEntry,c
 12450  000CD4  0E01               	movlw	high _hex_file_entry
 12451  000CD6  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 12452  000CD8  EC10  F000         	call	_parseHexFileEntry	;wreg free
 12453  000CDC  C00C  F0F1         	movff	?_parseHexFileEntry,__bootloader_program@return_value
 12454  000CE0  C00D  F0F2         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
 12455  000CE4  C00E  F0F3         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
 12456  000CE8  C00F  F0F4         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
 12457                           
 12458                           ;bootloader.c: 289: ++hex_file_entries;
 12459  000CEC  0100               	movlb	0	; () banked
 12460  000CEE  4B84               	infsnz	_hex_file_entries& (0+255),f,b
 12461  000CF0  2B85               	incf	(_hex_file_entries+1)& (0+255),f,b
 12462                           
 12463                           ; BSR set to: 0
 12464                           ;bootloader.c: 292: if(return_value>RecordErrorNoError)
 12465  000CF2  0EF1               	movlw	241
 12466  000CF4  5DF1               	subwf	__bootloader_program@return_value& (0+255),w,b
 12467  000CF6  0EFF               	movlw	255
 12468  000CF8  59F2               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
 12469  000CFA  0EFF               	movlw	255
 12470  000CFC  59F3               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
 12471  000CFE  0EFF               	movlw	255
 12472  000D00  59F4               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
 12473  000D02  A0D8               	btfss	status,0,c
 12474  000D04  D005               	goto	l2203
 12475                           
 12476                           ; BSR set to: 0
 12477                           ;bootloader.c: 293: {;bootloader.c: 295: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
 12478  000D06  0E40               	movlw	64
 12479  000D08  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12480                           
 12481                           ;bootloader.c: 296: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12482  000D0A  0E40               	movlw	64
 12483  000D0C  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12484                           
 12485                           ; BSR set to: 0
 12486                           ;bootloader.c: 297: return;
 12487  000D0E  0012               	return	
 12488  000D10                     l2203:
 12489                           
 12490                           ; BSR set to: 0
 12491                           ;bootloader.c: 305: else;bootloader.c: 306: {;bootloader.c: 308: hex_file_offset += retu
      +                          rn_value;
 12492                           
 12493                           ; BSR set to: 0
 12494  000D10  51F1               	movf	__bootloader_program@return_value& (0+255),w,b
 12495  000D12  277C               	addwf	_hex_file_offset& (0+255),f,b
 12496  000D14  51F2               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 12497  000D16  237D               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 12498  000D18  51F3               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 12499  000D1A  237E               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 12500  000D1C  51F4               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 12501  000D1E  237F               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 12502                           
 12503                           ; BSR set to: 0
 12504                           ;bootloader.c: 309: };bootloader.c: 311: switch(hex_file_entry.recordType)
 12505  000D20  D0FB               	goto	l2206
 12506  000D22                     
 12507                           ;bootloader.c: 317: extended_linear_address = hex_file_entry.data[0];
 12508                           
 12509                           ; BSR set to: 0
 12510  000D22  0101               	movlb	1	; () banked
 12511  000D24  51C1               	movf	(_hex_file_entry+5)& (0+255),w,b
 12512  000D26  6F40               	movwf	_extended_linear_address& (0+255),b
 12513  000D28  6B41               	clrf	(_extended_linear_address+1)& (0+255),b
 12514  000D2A  6B42               	clrf	(_extended_linear_address+2)& (0+255),b
 12515  000D2C  6B43               	clrf	(_extended_linear_address+3)& (0+255),b
 12516                           
 12517                           ; BSR set to: 1
 12518                           ;bootloader.c: 318: extended_linear_address <<= 8;
 12519  000D2E  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12520  000D32  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12521  000D36  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12522  000D3A  6B40               	clrf	_extended_linear_address& (0+255),b
 12523                           
 12524                           ; BSR set to: 1
 12525                           ;bootloader.c: 319: extended_linear_address |= hex_file_entry.data[1];
 12526  000D3C  51C2               	movf	(_hex_file_entry+6)& (0+255),w,b
 12527  000D3E  1340               	iorwf	_extended_linear_address& (0+255),f,b
 12528                           
 12529                           ; BSR set to: 1
 12530                           ;bootloader.c: 320: extended_linear_address <<= 8;
 12531  000D40  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12532  000D44  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12533  000D48  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12534  000D4C  6B40               	clrf	_extended_linear_address& (0+255),b
 12535                           
 12536                           ; BSR set to: 1
 12537                           ;bootloader.c: 321: extended_linear_address <<= 8;
 12538  000D4E  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12539  000D52  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12540  000D56  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12541  000D5A  6B40               	clrf	_extended_linear_address& (0+255),b
 12542                           
 12543                           ; BSR set to: 1
 12544                           ;bootloader.c: 323: break;
 12545                           
 12546                           ;bootloader.c: 322: continue;
 12547  000D5C  D742               	goto	l2200
 12548  000D5E                     l2210:
 12549                           
 12550                           ; BSR set to: 1
 12551                           ;bootloader.c: 328: start_from_byte = start_from_byte_next;
 12552  000D5E  C09D  F0F9         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
 12553                           
 12554                           ; BSR set to: 1
 12555                           ;bootloader.c: 330: start_from_byte_next = 0;
 12556  000D62  0E00               	movlw	0
 12557  000D64  0100               	movlb	0	; () banked
 12558  000D66  6F9D               	movwf	_start_from_byte_next& (0+255),b
 12559                           
 12560                           ; BSR set to: 0
 12561                           ;bootloader.c: 333: address32 = extended_linear_address + hex_file_entry.address;
 12562  000D68  0101               	movlb	1	; () banked
 12563  000D6A  51BE               	movf	(_hex_file_entry+2)& (0+255),w,b
 12564  000D6C  2540               	addwf	_extended_linear_address& (0+255),w,b
 12565  000D6E  0100               	movlb	0	; () banked
 12566  000D70  6FF5               	movwf	__bootloader_program@address32& (0+255),b
 12567  000D72  0101               	movlb	1	; () banked
 12568  000D74  51BF               	movf	(_hex_file_entry+3)& (0+255),w,b
 12569  000D76  2141               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 12570  000D78  0100               	movlb	0	; () banked
 12571  000D7A  6FF6               	movwf	(__bootloader_program@address32+1)& (0+255),b
 12572  000D7C  0E00               	movlw	0
 12573  000D7E  0101               	movlb	1	; () banked
 12574  000D80  2142               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 12575  000D82  0100               	movlb	0	; () banked
 12576  000D84  6FF7               	movwf	(__bootloader_program@address32+2)& (0+255),b
 12577  000D86  0E00               	movlw	0
 12578  000D88  0101               	movlb	1	; () banked
 12579  000D8A  2143               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 12580  000D8C  0100               	movlb	0	; () banked
 12581  000D8E  6FF8               	movwf	(__bootloader_program@address32+3)& (0+255),b
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;bootloader.c: 334: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
 12585  000D90  51F9               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 12586  000D92  25F5               	addwf	__bootloader_program@address32& (0+255),w,b
 12587  000D94  6E01               	movwf	internalFlash_pageFromAddress@address,c
 12588  000D96  0E00               	movlw	0
 12589  000D98  21F6               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 12590  000D9A  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 12591  000D9C  0E00               	movlw	0
 12592  000D9E  21F7               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 12593  000DA0  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 12594  000DA2  0E00               	movlw	0
 12595  000DA4  21F8               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 12596  000DA6  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 12597  000DA8  ECC1  F03C         	call	_internalFlash_pageFromAddress	;wreg free
 12598  000DAC  C001  F0ED         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
 12599  000DB0  C002  F0EE         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
 12600                           
 12601                           ;bootloader.c: 337: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
 12602  000DB4  0100               	movlb	0	; () banked
 12603  000DB6  51F9               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 12604  000DB8  25F5               	addwf	__bootloader_program@address32& (0+255),w,b
 12605  000DBA  6E01               	movwf	__bootloader_check_address@address,c
 12606  000DBC  0E00               	movlw	0
 12607  000DBE  21F6               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 12608  000DC0  6E02               	movwf	__bootloader_check_address@address+1,c
 12609  000DC2  0E00               	movlw	0
 12610  000DC4  21F7               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 12611  000DC6  6E03               	movwf	__bootloader_check_address@address+2,c
 12612  000DC8  0E00               	movlw	0
 12613  000DCA  21F8               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 12614  000DCC  6E04               	movwf	__bootloader_check_address@address+3,c
 12615  000DCE  51F9               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 12616  000DD0  0800               	sublw	0
 12617  000DD2  0101               	movlb	1	; () banked
 12618  000DD4  25BC               	addwf	_hex_file_entry& (0+255),w,b
 12619  000DD6  6E05               	movwf	__bootloader_check_address@dataLength,c
 12620  000DD8  EC11  F024         	call	__bootloader_check_address	;wreg free
 12621  000DDC  0900               	iorlw	0
 12622  000DDE  A4D8               	btfss	status,2,c
 12623  000DE0  D700               	goto	l2200
 12624                           
 12625                           ;bootloader.c: 340: };bootloader.c: 342: if(page_to_write==0)
 12626                           
 12627                           ;bootloader.c: 338: {;bootloader.c: 339: break;
 12628  000DE2  0100               	movlb	0	; () banked
 12629  000DE4  51FC               	movf	__bootloader_program@page_to_write& (0+255),w,b
 12630  000DE6  11FD               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 12631  000DE8  A4D8               	btfss	status,2,c
 12632  000DEA  D010               	goto	l2212
 12633                           
 12634                           ; BSR set to: 0
 12635                           ;bootloader.c: 343: {;bootloader.c: 347: page_to_write = entry_page;
 12636  000DEC  C0ED  F0FC         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
 12637  000DF0  C0EE  F0FD         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;bootloader.c: 348: internalFlash_readPage(page_to_write);
 12641  000DF4  C0FC  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
 12642  000DF8  C0FD  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
 12643  000DFC  EC39  F039         	call	_internalFlash_readPage	;wreg free
 12644                           
 12645                           ;bootloader.c: 349: buffer = internalFlash_getBuffer();
 12646  000E00  EC5D  F03D         	call	_internalFlash_getBuffer	;wreg free
 12647  000E04  C001  F0EB         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
 12648  000E08  C002  F0EC         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
 12649  000E0C                     l2212:
 12650                           
 12651                           ;bootloader.c: 350: };bootloader.c: 352: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
 12652  000E0C  C0F9  F0FA         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
 12653  000E10  0100               	movlb	0	; () banked
 12654  000E12  6BFB               	clrf	(__bootloader_program@cntr+1)& (0+255),b
 12655  000E14  D05C               	goto	l2213
 12656  000E16                     
 12657                           ; BSR set to: 0
 12658                           ;bootloader.c: 353: {;bootloader.c: 356: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
 12659                           
 12660                           ; BSR set to: 0
 12661  000E16  51FA               	movf	__bootloader_program@cntr& (0+255),w,b
 12662  000E18  25F5               	addwf	__bootloader_program@address32& (0+255),w,b
 12663  000E1A  6E01               	movwf	internalFlash_pageFromAddress@address,c
 12664  000E1C  51FB               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 12665  000E1E  21F6               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 12666  000E20  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 12667  000E22  0E00               	movlw	0
 12668  000E24  21F7               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 12669  000E26  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 12670  000E28  0E00               	movlw	0
 12671  000E2A  21F8               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 12672  000E2C  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 12673  000E2E  ECC1  F03C         	call	_internalFlash_pageFromAddress	;wreg free
 12674  000E32  0100               	movlb	0	; () banked
 12675  000E34  51FC               	movf	__bootloader_program@page_to_write& (0+255),w,b
 12676  000E36  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
 12677  000E38  E12A               	bnz	l13681
 12678  000E3A  51FD               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 12679  000E3C  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
 12680  000E3E  A4D8               	btfss	status,2,c
 12681  000E40  D026               	goto	l2215
 12682                           
 12683                           ; BSR set to: 0
 12684                           ;bootloader.c: 357: {;bootloader.c: 358: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
 12685  000E42  51FA               	movf	__bootloader_program@cntr& (0+255),w,b
 12686  000E44  25F5               	addwf	__bootloader_program@address32& (0+255),w,b
 12687  000E46  6E09               	movwf	internalFlash_addressWithinPage@address,c
 12688  000E48  51FB               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 12689  000E4A  21F6               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 12690  000E4C  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 12691  000E4E  0E00               	movlw	0
 12692  000E50  21F7               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 12693  000E52  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 12694  000E54  0E00               	movlw	0
 12695  000E56  21F8               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 12696  000E58  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 12697  000E5A  C0FC  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
 12698  000E5E  C0FD  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
 12699  000E62  EC07  F035         	call	_internalFlash_addressWithinPage	;wreg free
 12700  000E66  C009  F0EF         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
 12701  000E6A  C00A  F0F0         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
 12702                           
 12703                           ;bootloader.c: 359: buffer[address_within_page] = hex_file_entry.data[cntr];
 12704  000E6E  0EC1               	movlw	low (_hex_file_entry+5)
 12705  000E70  0100               	movlb	0	; () banked
 12706  000E72  25FA               	addwf	__bootloader_program@cntr& (0+255),w,b
 12707  000E74  6ED9               	movwf	fsr2l,c
 12708  000E76  0E01               	movlw	high (_hex_file_entry+5)
 12709  000E78  21FB               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
 12710  000E7A  6EDA               	movwf	fsr2h,c
 12711  000E7C  51EF               	movf	__bootloader_program@address_within_page& (0+255),w,b
 12712  000E7E  25EB               	addwf	__bootloader_program@buffer& (0+255),w,b
 12713  000E80  6EE1               	movwf	fsr1l,c
 12714  000E82  51F0               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
 12715  000E84  21EC               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
 12716  000E86  6EE2               	movwf	fsr1h,c
 12717  000E88  CFDF FFE7          	movff	indf2,indf1
 12718                           
 12719                           ;bootloader.c: 360: }
 12720  000E8C  D01D               	goto	l2216
 12721  000E8E                     l2215:
 12722  000E8E                     l13681:
 12723                           
 12724                           ; BSR set to: 0
 12725                           ;bootloader.c: 361: else;bootloader.c: 362: {;bootloader.c: 364: hex_file_offset -= retu
      +                          rn_value;
 12726  000E8E  51F1               	movf	__bootloader_program@return_value& (0+255),w,b
 12727  000E90  5F7C               	subwf	_hex_file_offset& (0+255),f,b
 12728  000E92  51F2               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 12729  000E94  5B7D               	subwfb	(_hex_file_offset+1)& (0+255),f,b
 12730  000E96  51F3               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 12731  000E98  5B7E               	subwfb	(_hex_file_offset+2)& (0+255),f,b
 12732  000E9A  51F4               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 12733  000E9C  5B7F               	subwfb	(_hex_file_offset+3)& (0+255),f,b
 12734                           
 12735                           ; BSR set to: 0
 12736                           ;bootloader.c: 365: --hex_file_entries;
 12737  000E9E  0784               	decf	_hex_file_entries& (0+255),f,b
 12738  000EA0  A0D8               	btfss	status,0,c
 12739  000EA2  0785               	decf	(_hex_file_entries+1)& (0+255),f,b
 12740                           
 12741                           ; BSR set to: 0
 12742                           ;bootloader.c: 367: start_from_byte_next = cntr;
 12743  000EA4  C0FA  F09D         	movff	__bootloader_program@cntr,_start_from_byte_next
 12744                           
 12745                           ; BSR set to: 0
 12746                           ;bootloader.c: 369: internalFlash_erasePage(page_to_write);
 12747  000EA8  C0FC  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 12748  000EAC  C0FD  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 12749  000EB0  EC98  F03A         	call	_internalFlash_erasePage	;wreg free
 12750                           
 12751                           ;bootloader.c: 370: internalFlash_writePage(page_to_write);
 12752  000EB4  C0FC  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 12753  000EB8  C0FD  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 12754  000EBC  EC06  F030         	call	_internalFlash_writePage	;wreg free
 12755                           
 12756                           ;bootloader.c: 371: ++flash_pages_written;
 12757  000EC0  0101               	movlb	1	; () banked
 12758  000EC2  4B66               	infsnz	_flash_pages_written& (0+255),f,b
 12759  000EC4  2B67               	incf	(_flash_pages_written+1)& (0+255),f,b
 12760                           
 12761                           ; BSR set to: 1
 12762                           ;bootloader.c: 373: return;
 12763  000EC6  0012               	return	
 12764  000EC8                     l2216:
 12765                           
 12766                           ; BSR set to: 1
 12767  000EC8  0100               	movlb	0	; () banked
 12768  000ECA  4BFA               	infsnz	__bootloader_program@cntr& (0+255),f,b
 12769  000ECC  2BFB               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
 12770  000ECE                     l2213:
 12771                           
 12772                           ; BSR set to: 0
 12773                           
 12774                           ; BSR set to: 0
 12775  000ECE  0101               	movlb	1	; () banked
 12776  000ED0  51BC               	movf	_hex_file_entry& (0+255),w,b
 12777  000ED2  0100               	movlb	0	; () banked
 12778  000ED4  5DFA               	subwf	__bootloader_program@cntr& (0+255),w,b
 12779  000ED6  0101               	movlb	1	; () banked
 12780  000ED8  51BD               	movf	(_hex_file_entry+1)& (0+255),w,b
 12781  000EDA  0100               	movlb	0	; () banked
 12782  000EDC  59FB               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
 12783  000EDE  B0D8               	btfsc	status,0,c
 12784  000EE0  D680               	goto	l2200
 12785  000EE2  D799               	goto	l2214
 12786  000EE4                     
 12787                           ;bootloader.c: 381: if(page_to_write!=0)
 12788                           
 12789                           ; BSR set to: 0
 12790  000EE4  0100               	movlb	0	; () banked
 12791  000EE6  51FC               	movf	__bootloader_program@page_to_write& (0+255),w,b
 12792  000EE8  11FD               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 12793  000EEA  B4D8               	btfsc	status,2,c
 12794  000EEC  0012               	return	
 12795                           
 12796                           ; BSR set to: 0
 12797                           ;bootloader.c: 382: {;bootloader.c: 384: internalFlash_erasePage(page_to_write);
 12798  000EEE  C0FC  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 12799  000EF2  C0FD  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 12800  000EF6  EC98  F03A         	call	_internalFlash_erasePage	;wreg free
 12801                           
 12802                           ;bootloader.c: 385: internalFlash_writePage(page_to_write);
 12803  000EFA  C0FC  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 12804  000EFE  C0FD  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 12805  000F02  EC06  F030         	call	_internalFlash_writePage	;wreg free
 12806                           
 12807                           ;bootloader.c: 386: ++flash_pages_written;
 12808  000F06  0101               	movlb	1	; () banked
 12809  000F08  4B66               	infsnz	_flash_pages_written& (0+255),f,b
 12810  000F0A  2B67               	incf	(_flash_pages_written+1)& (0+255),f,b
 12811                           
 12812                           ; BSR set to: 1
 12813                           ;bootloader.c: 388: os.bootloader_mode = BOOTLOADER_MODE_DONE;
 12814  000F0C  0E60               	movlw	96
 12815  000F0E  0100               	movlb	0	; () banked
 12816  000F10  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12817                           
 12818                           ; BSR set to: 0
 12819                           ;bootloader.c: 389: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
 12820  000F12  0E60               	movlw	96
 12821  000F14  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12822                           
 12823                           ; BSR set to: 0
 12824                           ;bootloader.c: 390: };bootloader.c: 392: return;
 12825                           
 12826                           ; BSR set to: 0
 12827  000F16  0012               	return	
 12828  000F18                     l2206:
 12829                           
 12830                           ; BSR set to: 0
 12831                           
 12832                           ; BSR set to: 0
 12833  000F18  0101               	movlb	1	; () banked
 12834  000F1A  51C0               	movf	(_hex_file_entry+4)& (0+255),w,b
 12835                           
 12836                           ; Switch size 1, requested type "space"
 12837                           ; Number of cases is 3, Range of values is 0 to 4
 12838                           ; switch strategies available:
 12839                           ; Name         Instructions Cycles
 12840                           ; simple_byte           10     6 (average)
 12841                           ;	Chosen strategy is simple_byte
 12842  000F1C  0A00               	xorlw	0	; case 0
 12843  000F1E  B4D8               	btfsc	status,2,c
 12844  000F20  D71E               	goto	l2210
 12845  000F22  0A01               	xorlw	1	; case 1
 12846  000F24  B4D8               	btfsc	status,2,c
 12847  000F26  D7DE               	goto	l2218
 12848  000F28  0A05               	xorlw	5	; case 4
 12849  000F2A  B4D8               	btfsc	status,2,c
 12850  000F2C  D6FA               	goto	l2207
 12851                           
 12852                           ; BSR set to: 1
 12853                           
 12854                           ; BSR set to: 1
 12855  000F2E  D659               	goto	l2200
 12856  000F30                     __end_of__bootloader_program:
 12857                           	opt stack 0
 12858                           tblptru	equ	0xFF8
 12859                           tblptrh	equ	0xFF7
 12860                           tblptrl	equ	0xFF6
 12861                           tablat	equ	0xFF5
 12862                           prodh	equ	0xFF4
 12863                           prodl	equ	0xFF3
 12864                           intcon	equ	0xFF2
 12865                           intcon2	equ	0xFF1
 12866                           intcon3	equ	0xFF0
 12867                           postinc0	equ	0xFEE
 12868                           wreg	equ	0xFE8
 12869                           indf1	equ	0xFE7
 12870                           postdec1	equ	0xFE5
 12871                           plusw1	equ	0xFE3
 12872                           fsr1h	equ	0xFE2
 12873                           fsr1l	equ	0xFE1
 12874                           indf2	equ	0xFDF
 12875                           postinc2	equ	0xFDE
 12876                           plusw2	equ	0xFDB
 12877                           fsr2h	equ	0xFDA
 12878                           fsr2l	equ	0xFD9
 12879                           status	equ	0xFD8
 12880                           
 12881 ;; *************** function _parseHexFileEntry *****************
 12882 ;; Defined at:
 12883 ;;		line 59 in file "hex.c"
 12884 ;; Parameters:    Size  Location     Type
 12885 ;;  data            2   11[COMRAM] PTR unsigned char 
 12886 ;;		 -> file_buffer(50), 
 12887 ;;  offset          4   13[COMRAM] unsigned long 
 12888 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
 12889 ;;		 -> hex_file_entry(23), 
 12890 ;; Auto vars:     Size  Location     Type
 12891 ;;  i               1   27[COMRAM] unsigned char 
 12892 ;; Return value:  Size  Location     Type
 12893 ;;                  4   11[COMRAM] unsigned long 
 12894 ;; Registers used:
 12895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12896 ;; Tracked objects:
 12897 ;;		On entry : 0/0
 12898 ;;		On exit  : 0/0
 12899 ;;		Unchanged: 0/0
 12900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12901 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12903 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12904 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12905 ;;Total ram usage:       17 bytes
 12906 ;; Hardware stack levels used:    1
 12907 ;; Hardware stack levels required when called:    2
 12908 ;; This function calls:
 12909 ;;		_hexCharsToUint16
 12910 ;;		_hexCharsToUint8
 12911 ;; This function is called by:
 12912 ;;		__bootloader_verify_file
 12913 ;;		__bootloader_program
 12914 ;; This function uses a non-reentrant model
 12915 ;;
 12916                           
 12917                           	psect	text51
 12918  000020                     __ptext51:
 12919                           	opt stack 0
 12920  000020                     _parseHexFileEntry:
 12921                           	opt stack 26
 12922                           
 12923                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
 12924                           
 12925                           ;incstack = 0
 12926  000020  500E               	movf	parseHexFileEntry@offset,w,c
 12927  000022  240C               	addwf	parseHexFileEntry@data,w,c
 12928  000024  6ED9               	movwf	fsr2l,c
 12929  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
 12930  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
 12931  00002A  6EDA               	movwf	fsr2h,c
 12932  00002C  0E3A               	movlw	58
 12933  00002E  18DE               	xorwf	postinc2,w,c
 12934  000030  B4D8               	btfsc	status,2,c
 12935  000032  D005               	goto	l2072
 12936                           
 12937                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
 12938  000034  680C               	setf	?_parseHexFileEntry,c
 12939  000036  680D               	setf	?_parseHexFileEntry+1,c
 12940  000038  680E               	setf	?_parseHexFileEntry+2,c
 12941  00003A  680F               	setf	?_parseHexFileEntry+3,c
 12942  00003C  0012               	return	
 12943  00003E                     l2072:
 12944                           
 12945                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
 12946  00003E  0E02               	movlw	2
 12947  000040  240E               	addwf	parseHexFileEntry@offset,w,c
 12948  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 12949  000044  0E00               	movlw	0
 12950  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 12951  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 12952  00004A  5014               	movf	??_parseHexFileEntry,w,c
 12953  00004C  240C               	addwf	parseHexFileEntry@data,w,c
 12954  00004E  6ED9               	movwf	fsr2l,c
 12955  000050  5015               	movf	??_parseHexFileEntry+1,w,c
 12956  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
 12957  000054  6EDA               	movwf	fsr2h,c
 12958  000056  50DF               	movf	indf2,w,c
 12959  000058  6E03               	movwf	hexCharsToUint8@c2,c
 12960  00005A  0E01               	movlw	1
 12961  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
 12962  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 12963  000060  0E00               	movlw	0
 12964  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 12965  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 12966  000066  5016               	movf	??_parseHexFileEntry+2,w,c
 12967  000068  240C               	addwf	parseHexFileEntry@data,w,c
 12968  00006A  6ED9               	movwf	fsr2l,c
 12969  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
 12970  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 12971  000070  6EDA               	movwf	fsr2h,c
 12972  000072  50DF               	movf	indf2,w,c
 12973  000074  ECB3  F03C         	call	_hexCharsToUint8
 12974  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 12975  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
 12976  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 12977  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 12978  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
 12979  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
 12980                           
 12981                           ;hex.c: 71: if (hexEntry->dataLength > 16)
 12982  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 12983  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 12984  000094  0E01               	movlw	1
 12985  000096  50DB               	movf	plusw2,w,c
 12986  000098  E104               	bnz	u9600
 12987  00009A  0E11               	movlw	17
 12988  00009C  5CDE               	subwf	postinc2,w,c
 12989  00009E  A0D8               	btfss	status,0,c
 12990  0000A0  D009               	goto	l2074
 12991  0000A2                     u9600:
 12992                           
 12993                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
 12994  0000A2  0EFC               	movlw	252
 12995  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
 12996  0000A6  0EFF               	movlw	255
 12997  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
 12998  0000AA  0EFF               	movlw	255
 12999  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
 13000  0000AE  0EFF               	movlw	255
 13001  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
 13002  0000B2  0012               	return	
 13003  0000B4                     l2074:
 13004                           
 13005                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
 13006  0000B4  0E04               	movlw	4
 13007  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
 13008  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13009  0000BA  0E00               	movlw	0
 13010  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13011  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13012  0000C0  5014               	movf	??_parseHexFileEntry,w,c
 13013  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
 13014  0000C4  6ED9               	movwf	fsr2l,c
 13015  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
 13016  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13017  0000CA  6EDA               	movwf	fsr2h,c
 13018  0000CC  50DF               	movf	indf2,w,c
 13019  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
 13020  0000D0  0E05               	movlw	5
 13021  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
 13022  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13023  0000D6  0E00               	movlw	0
 13024  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13025  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13026  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
 13027  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
 13028  0000E0  6ED9               	movwf	fsr2l,c
 13029  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
 13030  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13031  0000E6  6EDA               	movwf	fsr2h,c
 13032  0000E8  50DF               	movf	indf2,w,c
 13033  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
 13034  0000EC  0E06               	movlw	6
 13035  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
 13036  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 13037  0000F2  0E00               	movlw	0
 13038  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13039  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 13040  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
 13041  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
 13042  0000FC  6ED9               	movwf	fsr2l,c
 13043  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
 13044  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13045  000102  6EDA               	movwf	fsr2h,c
 13046  000104  50DF               	movf	indf2,w,c
 13047  000106  6E05               	movwf	hexCharsToUint16@c4,c
 13048  000108  0E03               	movlw	3
 13049  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
 13050  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
 13051  00010E  0E00               	movlw	0
 13052  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13053  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
 13054  000114  501A               	movf	??_parseHexFileEntry+6,w,c
 13055  000116  240C               	addwf	parseHexFileEntry@data,w,c
 13056  000118  6ED9               	movwf	fsr2l,c
 13057  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
 13058  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13059  00011E  6EDA               	movwf	fsr2h,c
 13060  000120  50DF               	movf	indf2,w,c
 13061  000122  EC5A  F032         	call	_hexCharsToUint16
 13062  000126  EE20 F002          	lfsr	2,2
 13063  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13064  00012C  26D9               	addwf	fsr2l,f,c
 13065  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13066  000130  22DA               	addwfc	fsr2h,f,c
 13067  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
 13068  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
 13069                           
 13070                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
 13071  00013A  EE20 F004          	lfsr	2,4
 13072  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13073  000140  26D9               	addwf	fsr2l,f,c
 13074  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13075  000144  22DA               	addwfc	fsr2h,f,c
 13076  000146  0E08               	movlw	8
 13077  000148  240E               	addwf	parseHexFileEntry@offset,w,c
 13078  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13079  00014C  0E00               	movlw	0
 13080  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13081  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13082  000152  5014               	movf	??_parseHexFileEntry,w,c
 13083  000154  240C               	addwf	parseHexFileEntry@data,w,c
 13084  000156  6EE1               	movwf	fsr1l,c
 13085  000158  5015               	movf	??_parseHexFileEntry+1,w,c
 13086  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13087  00015C  6EE2               	movwf	fsr1h,c
 13088  00015E  50E7               	movf	indf1,w,c
 13089  000160  6E03               	movwf	hexCharsToUint8@c2,c
 13090  000162  0E07               	movlw	7
 13091  000164  240E               	addwf	parseHexFileEntry@offset,w,c
 13092  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13093  000168  0E00               	movlw	0
 13094  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13095  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13096  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
 13097  000170  240C               	addwf	parseHexFileEntry@data,w,c
 13098  000172  6EE1               	movwf	fsr1l,c
 13099  000174  5017               	movf	??_parseHexFileEntry+3,w,c
 13100  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13101  000178  6EE2               	movwf	fsr1h,c
 13102  00017A  50E7               	movf	indf1,w,c
 13103  00017C  ECB3  F03C         	call	_hexCharsToUint8
 13104  000180  6EDF               	movwf	indf2,c
 13105                           
 13106                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
 13107  000182  0E00               	movlw	0
 13108  000184  6E1C               	movwf	parseHexFileEntry@i,c
 13109  000186  D03D               	goto	l2075
 13110  000188                     
 13111                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
 13112  000188  501C               	movf	parseHexFileEntry@i,w,c
 13113  00018A  0D01               	mullw	1
 13114  00018C  0E05               	movlw	5
 13115  00018E  26F3               	addwf	prodl,f,c
 13116  000190  0E00               	movlw	0
 13117  000192  22F4               	addwfc	prodh,f,c
 13118  000194  50F3               	movf	prodl,w,c
 13119  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 13120  000198  6ED9               	movwf	fsr2l,c
 13121  00019A  50F4               	movf	prodh,w,c
 13122  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 13123  00019E  6EDA               	movwf	fsr2h,c
 13124  0001A0  501C               	movf	parseHexFileEntry@i,w,c
 13125  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13126  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13127  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
 13128  0001AA  0E00               	movlw	0
 13129  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13130  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
 13131  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
 13132  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
 13133  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13134  0001B6  0E0A               	movlw	10
 13135  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
 13136  0001BA  0E00               	movlw	0
 13137  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13138  0001BE  5014               	movf	??_parseHexFileEntry,w,c
 13139  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
 13140  0001C2  6EE1               	movwf	fsr1l,c
 13141  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
 13142  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13143  0001C8  6EE2               	movwf	fsr1h,c
 13144  0001CA  50E7               	movf	indf1,w,c
 13145  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
 13146  0001CE  501C               	movf	parseHexFileEntry@i,w,c
 13147  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 13148  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13149  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
 13150  0001D8  0E00               	movlw	0
 13151  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13152  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
 13153  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
 13154  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
 13155  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13156  0001E4  0E09               	movlw	9
 13157  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
 13158  0001E8  0E00               	movlw	0
 13159  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13160  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
 13161  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
 13162  0001F0  6EE1               	movwf	fsr1l,c
 13163  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
 13164  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13165  0001F6  6EE2               	movwf	fsr1h,c
 13166  0001F8  50E7               	movf	indf1,w,c
 13167  0001FA  ECB3  F03C         	call	_hexCharsToUint8
 13168  0001FE  6EDF               	movwf	indf2,c
 13169  000200  2A1C               	incf	parseHexFileEntry@i,f,c
 13170  000202                     l2075:
 13171  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13172  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13173  00020A  501C               	movf	parseHexFileEntry@i,w,c
 13174  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13175  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13176  000210  50DE               	movf	postinc2,w,c
 13177  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
 13178  000214  50DE               	movf	postinc2,w,c
 13179  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
 13180  000218  A0D8               	btfss	status,0,c
 13181  00021A  D7B6               	goto	l2076
 13182                           
 13183                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
 13184  00021C  EE20 F015          	lfsr	2,21
 13185  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13186  000222  26D9               	addwf	fsr2l,f,c
 13187  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13188  000226  22DA               	addwfc	fsr2h,f,c
 13189  000228  501C               	movf	parseHexFileEntry@i,w,c
 13190  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13191  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13192  000230  2614               	addwf	??_parseHexFileEntry,f,c
 13193  000232  0E00               	movlw	0
 13194  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13195  000236  500E               	movf	parseHexFileEntry@offset,w,c
 13196  000238  2614               	addwf	??_parseHexFileEntry,f,c
 13197  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
 13198  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13199  00023E  0E0A               	movlw	10
 13200  000240  2614               	addwf	??_parseHexFileEntry,f,c
 13201  000242  0E00               	movlw	0
 13202  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13203  000246  5014               	movf	??_parseHexFileEntry,w,c
 13204  000248  240C               	addwf	parseHexFileEntry@data,w,c
 13205  00024A  6EE1               	movwf	fsr1l,c
 13206  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
 13207  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13208  000250  6EE2               	movwf	fsr1h,c
 13209  000252  50E7               	movf	indf1,w,c
 13210  000254  6E03               	movwf	hexCharsToUint8@c2,c
 13211  000256  501C               	movf	parseHexFileEntry@i,w,c
 13212  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 13213  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13214  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
 13215  000260  0E00               	movlw	0
 13216  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13217  000264  500E               	movf	parseHexFileEntry@offset,w,c
 13218  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
 13219  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
 13220  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13221  00026C  0E09               	movlw	9
 13222  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
 13223  000270  0E00               	movlw	0
 13224  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13225  000274  5016               	movf	??_parseHexFileEntry+2,w,c
 13226  000276  240C               	addwf	parseHexFileEntry@data,w,c
 13227  000278  6EE1               	movwf	fsr1l,c
 13228  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
 13229  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13230  00027E  6EE2               	movwf	fsr1h,c
 13231  000280  50E7               	movf	indf1,w,c
 13232  000282  ECB3  F03C         	call	_hexCharsToUint8
 13233  000286  6EDF               	movwf	indf2,c
 13234                           
 13235                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
 13236  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13237  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13238  000290  EE10 F016          	lfsr	1,22
 13239  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13240  000296  26E1               	addwf	fsr1l,f,c
 13241  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13242  00029A  22E2               	addwfc	fsr1h,f,c
 13243  00029C  CFDF FFE7          	movff	indf2,indf1
 13244                           
 13245                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
 13246  0002A0  EE20 F002          	lfsr	2,2
 13247  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13248  0002A6  26D9               	addwf	fsr2l,f,c
 13249  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13250  0002AA  22DA               	addwfc	fsr2h,f,c
 13251  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
 13252  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
 13253  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
 13254  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
 13255  0002BA  EE20 F016          	lfsr	2,22
 13256  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13257  0002C0  26D9               	addwf	fsr2l,f,c
 13258  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13259  0002C4  22DA               	addwfc	fsr2h,f,c
 13260  0002C6  5014               	movf	??_parseHexFileEntry,w,c
 13261  0002C8  26DF               	addwf	indf2,f,c
 13262                           
 13263                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
 13264  0002CA  EE20 F002          	lfsr	2,2
 13265  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13266  0002D0  26D9               	addwf	fsr2l,f,c
 13267  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13268  0002D4  22DA               	addwfc	fsr2h,f,c
 13269  0002D6  50DF               	movf	indf2,w,c
 13270  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13271  0002DA  EE20 F016          	lfsr	2,22
 13272  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13273  0002E0  26D9               	addwf	fsr2l,f,c
 13274  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13275  0002E4  22DA               	addwfc	fsr2h,f,c
 13276  0002E6  5014               	movf	??_parseHexFileEntry,w,c
 13277  0002E8  26DF               	addwf	indf2,f,c
 13278                           
 13279                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
 13280  0002EA  EE20 F004          	lfsr	2,4
 13281  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13282  0002F0  26D9               	addwf	fsr2l,f,c
 13283  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13284  0002F4  22DA               	addwfc	fsr2h,f,c
 13285  0002F6  50DF               	movf	indf2,w,c
 13286  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13287  0002FA  EE20 F016          	lfsr	2,22
 13288  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13289  000300  26D9               	addwf	fsr2l,f,c
 13290  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13291  000304  22DA               	addwfc	fsr2h,f,c
 13292  000306  5014               	movf	??_parseHexFileEntry,w,c
 13293  000308  26DF               	addwf	indf2,f,c
 13294                           
 13295                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
 13296  00030A  0E00               	movlw	0
 13297  00030C  6E1C               	movwf	parseHexFileEntry@i,c
 13298  00030E  D017               	goto	l2078
 13299  000310                     
 13300                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
 13301  000310  501C               	movf	parseHexFileEntry@i,w,c
 13302  000312  0D01               	mullw	1
 13303  000314  0E05               	movlw	5
 13304  000316  26F3               	addwf	prodl,f,c
 13305  000318  0E00               	movlw	0
 13306  00031A  22F4               	addwfc	prodh,f,c
 13307  00031C  50F3               	movf	prodl,w,c
 13308  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 13309  000320  6ED9               	movwf	fsr2l,c
 13310  000322  50F4               	movf	prodh,w,c
 13311  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 13312  000326  6EDA               	movwf	fsr2h,c
 13313  000328  50DF               	movf	indf2,w,c
 13314  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13315  00032C  EE20 F016          	lfsr	2,22
 13316  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13317  000332  26D9               	addwf	fsr2l,f,c
 13318  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13319  000336  22DA               	addwfc	fsr2h,f,c
 13320  000338  5014               	movf	??_parseHexFileEntry,w,c
 13321  00033A  26DF               	addwf	indf2,f,c
 13322  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
 13323  00033E                     l2078:
 13324  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13325  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13326  000346  501C               	movf	parseHexFileEntry@i,w,c
 13327  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13328  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13329  00034C  50DE               	movf	postinc2,w,c
 13330  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
 13331  000350  50DE               	movf	postinc2,w,c
 13332  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
 13333  000354  A0D8               	btfss	status,0,c
 13334  000356  D7DC               	goto	l2079
 13335                           
 13336                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
 13337  000358  EE20 F015          	lfsr	2,21
 13338  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13339  00035E  26D9               	addwf	fsr2l,f,c
 13340  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13341  000362  22DA               	addwfc	fsr2h,f,c
 13342  000364  50DF               	movf	indf2,w,c
 13343  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13344  000368  EE20 F016          	lfsr	2,22
 13345  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13346  00036E  26D9               	addwf	fsr2l,f,c
 13347  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13348  000372  22DA               	addwfc	fsr2h,f,c
 13349  000374  5014               	movf	??_parseHexFileEntry,w,c
 13350  000376  26DF               	addwf	indf2,f,c
 13351                           
 13352                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
 13353  000378  EE20 F016          	lfsr	2,22
 13354  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13355  00037E  26D9               	addwf	fsr2l,f,c
 13356  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13357  000382  22DA               	addwfc	fsr2h,f,c
 13358  000384  50DF               	movf	indf2,w,c
 13359  000386  B4D8               	btfsc	status,2,c
 13360  000388  D009               	goto	l2081
 13361                           
 13362                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
 13363  00038A  0EFE               	movlw	254
 13364  00038C  6E0C               	movwf	?_parseHexFileEntry,c
 13365  00038E  0EFF               	movlw	255
 13366  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
 13367  000392  0EFF               	movlw	255
 13368  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
 13369  000396  0EFF               	movlw	255
 13370  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
 13371  00039A  0012               	return	
 13372  00039C                     l2081:
 13373                           
 13374                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
 13375  00039C  EE20 F004          	lfsr	2,4
 13376  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13377  0003A2  26D9               	addwf	fsr2l,f,c
 13378  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13379  0003A6  22DA               	addwfc	fsr2h,f,c
 13380  0003A8  04DE               	decf	postinc2,w,c
 13381  0003AA  A4D8               	btfss	status,2,c
 13382  0003AC  D009               	goto	l2082
 13383                           
 13384                           ;hex.c: 110: {;hex.c: 112: return 0;
 13385  0003AE  0E00               	movlw	0
 13386  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
 13387  0003B2  0E00               	movlw	0
 13388  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
 13389  0003B6  0E00               	movlw	0
 13390  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
 13391  0003BA  0E00               	movlw	0
 13392  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
 13393                           
 13394                           ;hex.c: 113: }
 13395  0003BE  0012               	return	
 13396  0003C0                     l2082:
 13397                           
 13398                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
 13399  0003C0  501C               	movf	parseHexFileEntry@i,w,c
 13400  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13401  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13402  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
 13403  0003CA  0E00               	movlw	0
 13404  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13405  0003CE  0E0B               	movlw	11
 13406  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
 13407  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13408  0003D4  0E00               	movlw	0
 13409  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
 13410  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13411  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
 13412  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
 13413  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
 13414  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
 13415  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 13416  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
 13417  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
 13418  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
 13419  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13420  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
 13421  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13422  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
 13423  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13424                           
 13425                           ;hex.c: 117: if (data[++offset] == ':')
 13426  0003F4  0E01               	movlw	1
 13427  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
 13428  0003F8  0E00               	movlw	0
 13429  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13430  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13431  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13432  000400  500E               	movf	parseHexFileEntry@offset,w,c
 13433  000402  240C               	addwf	parseHexFileEntry@data,w,c
 13434  000404  6ED9               	movwf	fsr2l,c
 13435  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
 13436  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13437  00040A  6EDA               	movwf	fsr2h,c
 13438  00040C  0E3A               	movlw	58
 13439  00040E  18DE               	xorwf	postinc2,w,c
 13440  000410  A4D8               	btfss	status,2,c
 13441  000412  D009               	goto	l2084
 13442                           
 13443                           ;hex.c: 118: {;hex.c: 119: return offset;
 13444  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13445  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13446  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13447  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13448                           
 13449                           ;hex.c: 120: }
 13450  000424  0012               	return	
 13451  000426                     l2084:
 13452                           
 13453                           ;hex.c: 121: else if (data[++offset] == ':')
 13454  000426  0E01               	movlw	1
 13455  000428  260E               	addwf	parseHexFileEntry@offset,f,c
 13456  00042A  0E00               	movlw	0
 13457  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13458  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13459  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13460  000432  500E               	movf	parseHexFileEntry@offset,w,c
 13461  000434  240C               	addwf	parseHexFileEntry@data,w,c
 13462  000436  6ED9               	movwf	fsr2l,c
 13463  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
 13464  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13465  00043C  6EDA               	movwf	fsr2h,c
 13466  00043E  0E3A               	movlw	58
 13467  000440  18DE               	xorwf	postinc2,w,c
 13468  000442  A4D8               	btfss	status,2,c
 13469  000444  D009               	goto	l2086
 13470                           
 13471                           ;hex.c: 122: {;hex.c: 123: return offset;
 13472  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13473  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13474  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13475  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13476                           
 13477                           ;hex.c: 124: }
 13478  000456  0012               	return	
 13479  000458                     l2086:
 13480                           
 13481                           ;hex.c: 125: else if (data[++offset] == ':')
 13482  000458  0E01               	movlw	1
 13483  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
 13484  00045C  0E00               	movlw	0
 13485  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13486  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13487  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13488  000464  500E               	movf	parseHexFileEntry@offset,w,c
 13489  000466  240C               	addwf	parseHexFileEntry@data,w,c
 13490  000468  6ED9               	movwf	fsr2l,c
 13491  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
 13492  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13493  00046E  6EDA               	movwf	fsr2h,c
 13494  000470  0E3A               	movlw	58
 13495  000472  18DE               	xorwf	postinc2,w,c
 13496  000474  A4D8               	btfss	status,2,c
 13497  000476  D009               	goto	l2088
 13498                           
 13499                           ;hex.c: 126: {;hex.c: 127: return offset;
 13500  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13501  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13502  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13503  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13504                           
 13505                           ;hex.c: 128: }
 13506  000488  0012               	return	
 13507  00048A                     l2088:
 13508                           
 13509                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
 13510  00048A  0EFD               	movlw	253
 13511  00048C  6E0C               	movwf	?_parseHexFileEntry,c
 13512  00048E  0EFF               	movlw	255
 13513  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
 13514  000492  0EFF               	movlw	255
 13515  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
 13516  000496  0EFF               	movlw	255
 13517  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
 13518  00049A  0012               	return	
 13519  00049C                     __end_of_parseHexFileEntry:
 13520                           	opt stack 0
 13521                           tblptru	equ	0xFF8
 13522                           tblptrh	equ	0xFF7
 13523                           tblptrl	equ	0xFF6
 13524                           tablat	equ	0xFF5
 13525                           prodh	equ	0xFF4
 13526                           prodl	equ	0xFF3
 13527                           intcon	equ	0xFF2
 13528                           intcon2	equ	0xFF1
 13529                           intcon3	equ	0xFF0
 13530                           postinc0	equ	0xFEE
 13531                           wreg	equ	0xFE8
 13532                           indf1	equ	0xFE7
 13533                           postdec1	equ	0xFE5
 13534                           plusw1	equ	0xFE3
 13535                           fsr1h	equ	0xFE2
 13536                           fsr1l	equ	0xFE1
 13537                           indf2	equ	0xFDF
 13538                           postinc2	equ	0xFDE
 13539                           postdec2	equ	0xFDD
 13540                           plusw2	equ	0xFDB
 13541                           fsr2h	equ	0xFDA
 13542                           fsr2l	equ	0xFD9
 13543                           status	equ	0xFD8
 13544                           
 13545 ;; *************** function _hexCharsToUint8 *****************
 13546 ;; Defined at:
 13547 ;;		line 42 in file "hex.c"
 13548 ;; Parameters:    Size  Location     Type
 13549 ;;  c1              1    wreg     unsigned char 
 13550 ;;  c2              1    2[COMRAM] unsigned char 
 13551 ;; Auto vars:     Size  Location     Type
 13552 ;;  c1              1    4[COMRAM] unsigned char 
 13553 ;;  retVal          1    5[COMRAM] unsigned char 
 13554 ;; Return value:  Size  Location     Type
 13555 ;;                  1    wreg      unsigned char 
 13556 ;; Registers used:
 13557 ;;		wreg, status,2, status,0, cstack
 13558 ;; Tracked objects:
 13559 ;;		On entry : 0/0
 13560 ;;		On exit  : 0/0
 13561 ;;		Unchanged: 0/0
 13562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13563 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13566 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13567 ;;Total ram usage:        4 bytes
 13568 ;; Hardware stack levels used:    1
 13569 ;; Hardware stack levels required when called:    1
 13570 ;; This function calls:
 13571 ;;		_hexCharToUint8
 13572 ;; This function is called by:
 13573 ;;		_parseHexFileEntry
 13574 ;; This function uses a non-reentrant model
 13575 ;;
 13576                           
 13577                           	psect	text52
 13578  007966                     __ptext52:
 13579                           	opt stack 0
 13580  007966                     _hexCharsToUint8:
 13581                           	opt stack 26
 13582                           
 13583                           ;incstack = 0
 13584                           ;hexCharsToUint8@c1 stored from wreg
 13585  007966  6E05               	movwf	hexCharsToUint8@c1,c
 13586                           
 13587                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
 13588  007968  5005               	movf	hexCharsToUint8@c1,w,c
 13589  00796A  EC75  F03B         	call	_hexCharToUint8
 13590  00796E  6E04               	movwf	??_hexCharsToUint8& (0+255),c
 13591  007970  3804               	swapf	??_hexCharsToUint8,w,c
 13592  007972  0BF0               	andlw	240
 13593  007974  6E06               	movwf	hexCharsToUint8@retVal,c
 13594                           
 13595                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
 13596  007976  5003               	movf	hexCharsToUint8@c2,w,c
 13597  007978  EC75  F03B         	call	_hexCharToUint8
 13598  00797C  1206               	iorwf	hexCharsToUint8@retVal,f,c
 13599                           
 13600                           ;hex.c: 46: return retVal;
 13601  00797E  5006               	movf	hexCharsToUint8@retVal,w,c
 13602  007980  0012               	return	
 13603  007982                     __end_of_hexCharsToUint8:
 13604                           	opt stack 0
 13605                           tblptru	equ	0xFF8
 13606                           tblptrh	equ	0xFF7
 13607                           tblptrl	equ	0xFF6
 13608                           tablat	equ	0xFF5
 13609                           prodh	equ	0xFF4
 13610                           prodl	equ	0xFF3
 13611                           intcon	equ	0xFF2
 13612                           intcon2	equ	0xFF1
 13613                           intcon3	equ	0xFF0
 13614                           postinc0	equ	0xFEE
 13615                           wreg	equ	0xFE8
 13616                           indf1	equ	0xFE7
 13617                           postdec1	equ	0xFE5
 13618                           plusw1	equ	0xFE3
 13619                           fsr1h	equ	0xFE2
 13620                           fsr1l	equ	0xFE1
 13621                           indf2	equ	0xFDF
 13622                           postinc2	equ	0xFDE
 13623                           postdec2	equ	0xFDD
 13624                           plusw2	equ	0xFDB
 13625                           fsr2h	equ	0xFDA
 13626                           fsr2l	equ	0xFD9
 13627                           status	equ	0xFD8
 13628                           
 13629 ;; *************** function _hexCharsToUint16 *****************
 13630 ;; Defined at:
 13631 ;;		line 49 in file "hex.c"
 13632 ;; Parameters:    Size  Location     Type
 13633 ;;  c1              1    wreg     unsigned char 
 13634 ;;  c2              1    2[COMRAM] unsigned char 
 13635 ;;  c3              1    3[COMRAM] unsigned char 
 13636 ;;  c4              1    4[COMRAM] unsigned char 
 13637 ;; Auto vars:     Size  Location     Type
 13638 ;;  c1              1    8[COMRAM] unsigned char 
 13639 ;;  retVal          2    9[COMRAM] unsigned int 
 13640 ;; Return value:  Size  Location     Type
 13641 ;;                  2    2[COMRAM] unsigned int 
 13642 ;; Registers used:
 13643 ;;		wreg, status,2, status,0, cstack
 13644 ;; Tracked objects:
 13645 ;;		On entry : 0/0
 13646 ;;		On exit  : 0/0
 13647 ;;		Unchanged: 0/0
 13648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13649 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13650 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13651 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13652 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13653 ;;Total ram usage:        9 bytes
 13654 ;; Hardware stack levels used:    1
 13655 ;; Hardware stack levels required when called:    1
 13656 ;; This function calls:
 13657 ;;		_hexCharToUint8
 13658 ;; This function is called by:
 13659 ;;		_parseHexFileEntry
 13660 ;; This function uses a non-reentrant model
 13661 ;;
 13662                           
 13663                           	psect	text53
 13664  0064B4                     __ptext53:
 13665                           	opt stack 0
 13666  0064B4                     _hexCharsToUint16:
 13667                           	opt stack 26
 13668                           
 13669                           ;incstack = 0
 13670                           ;hexCharsToUint16@c1 stored from wreg
 13671  0064B4  6E09               	movwf	hexCharsToUint16@c1,c
 13672                           
 13673                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
 13674  0064B6  5009               	movf	hexCharsToUint16@c1,w,c
 13675  0064B8  EC75  F03B         	call	_hexCharToUint8
 13676  0064BC  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 13677  0064BE  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 13678  0064C0  0E0C               	movlw	12
 13679  0064C2                     u8865:
 13680  0064C2  90D8               	bcf	status,0,c
 13681  0064C4  3606               	rlcf	??_hexCharsToUint16,f,c
 13682  0064C6  3607               	rlcf	??_hexCharsToUint16+1,f,c
 13683  0064C8  2EE8               	decfsz	wreg,f,c
 13684  0064CA  D7FB               	goto	u8865
 13685  0064CC  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
 13686  0064D0  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
 13687                           
 13688                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
 13689  0064D4  5003               	movf	hexCharsToUint16@c2,w,c
 13690  0064D6  EC75  F03B         	call	_hexCharToUint8
 13691  0064DA  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 13692  0064DC  5006               	movf	??_hexCharsToUint16,w,c
 13693  0064DE  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
 13694  0064E0  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 13695  0064E2  5007               	movf	??_hexCharsToUint16+1,w,c
 13696  0064E4  120A               	iorwf	hexCharsToUint16@retVal,f,c
 13697  0064E6  5008               	movf	??_hexCharsToUint16+2,w,c
 13698  0064E8  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 13699                           
 13700                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
 13701  0064EA  5004               	movf	hexCharsToUint16@c3,w,c
 13702  0064EC  EC75  F03B         	call	_hexCharToUint8
 13703  0064F0  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 13704  0064F2  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 13705  0064F4  3A06               	swapf	??_hexCharsToUint16,f,c
 13706  0064F6  3A07               	swapf	??_hexCharsToUint16+1,f,c
 13707  0064F8  0EF0               	movlw	240
 13708  0064FA  1607               	andwf	??_hexCharsToUint16+1,f,c
 13709  0064FC  5006               	movf	??_hexCharsToUint16,w,c
 13710  0064FE  0B0F               	andlw	15
 13711  006500  1207               	iorwf	??_hexCharsToUint16+1,f,c
 13712  006502  0EF0               	movlw	240
 13713  006504  1606               	andwf	??_hexCharsToUint16,f,c
 13714  006506  5006               	movf	??_hexCharsToUint16,w,c
 13715  006508  120A               	iorwf	hexCharsToUint16@retVal,f,c
 13716  00650A  5007               	movf	??_hexCharsToUint16+1,w,c
 13717  00650C  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 13718                           
 13719                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
 13720  00650E  5005               	movf	hexCharsToUint16@c4,w,c
 13721  006510  EC75  F03B         	call	_hexCharToUint8
 13722  006514  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 13723  006516  5006               	movf	??_hexCharsToUint16,w,c
 13724  006518  120A               	iorwf	hexCharsToUint16@retVal,f,c
 13725                           
 13726                           ;hex.c: 55: return retVal;
 13727  00651A  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
 13728  00651E  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
 13729  006522  0012               	return	
 13730  006524                     __end_of_hexCharsToUint16:
 13731                           	opt stack 0
 13732                           tblptru	equ	0xFF8
 13733                           tblptrh	equ	0xFF7
 13734                           tblptrl	equ	0xFF6
 13735                           tablat	equ	0xFF5
 13736                           prodh	equ	0xFF4
 13737                           prodl	equ	0xFF3
 13738                           intcon	equ	0xFF2
 13739                           intcon2	equ	0xFF1
 13740                           intcon3	equ	0xFF0
 13741                           postinc0	equ	0xFEE
 13742                           wreg	equ	0xFE8
 13743                           indf1	equ	0xFE7
 13744                           postdec1	equ	0xFE5
 13745                           plusw1	equ	0xFE3
 13746                           fsr1h	equ	0xFE2
 13747                           fsr1l	equ	0xFE1
 13748                           indf2	equ	0xFDF
 13749                           postinc2	equ	0xFDE
 13750                           postdec2	equ	0xFDD
 13751                           plusw2	equ	0xFDB
 13752                           fsr2h	equ	0xFDA
 13753                           fsr2l	equ	0xFD9
 13754                           status	equ	0xFD8
 13755                           
 13756 ;; *************** function _hexCharToUint8 *****************
 13757 ;; Defined at:
 13758 ;;		line 11 in file "hex.c"
 13759 ;; Parameters:    Size  Location     Type
 13760 ;;  c               1    wreg     unsigned char 
 13761 ;; Auto vars:     Size  Location     Type
 13762 ;;  c               1    0[COMRAM] unsigned char 
 13763 ;;  ascii           1    1[COMRAM] unsigned char 
 13764 ;; Return value:  Size  Location     Type
 13765 ;;                  1    wreg      unsigned char 
 13766 ;; Registers used:
 13767 ;;		wreg, status,2, status,0
 13768 ;; Tracked objects:
 13769 ;;		On entry : 0/0
 13770 ;;		On exit  : 0/0
 13771 ;;		Unchanged: 0/0
 13772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13774 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13777 ;;Total ram usage:        2 bytes
 13778 ;; Hardware stack levels used:    1
 13779 ;; This function calls:
 13780 ;;		Nothing
 13781 ;; This function is called by:
 13782 ;;		_hexCharsToUint8
 13783 ;;		_hexCharsToUint16
 13784 ;; This function uses a non-reentrant model
 13785 ;;
 13786                           
 13787                           	psect	text54
 13788  0076EA                     __ptext54:
 13789                           	opt stack 0
 13790  0076EA                     _hexCharToUint8:
 13791                           	opt stack 26
 13792                           
 13793                           ;incstack = 0
 13794                           ;hexCharToUint8@c stored from wreg
 13795  0076EA  6E01               	movwf	hexCharToUint8@c,c
 13796                           
 13797                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
 13798  0076EC  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
 13799                           
 13800                           ;hex.c: 16: if (ascii >= 97)
 13801  0076F0  0E60               	movlw	96
 13802  0076F2  6402               	cpfsgt	hexCharToUint8@ascii,c
 13803  0076F4  D002               	goto	l2057
 13804                           
 13805                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
 13806  0076F6  0E57               	movlw	87
 13807  0076F8  D006               	goto	L3
 13808  0076FA                     l2057:
 13809                           
 13810                           ;hex.c: 21: else if (ascii >= 65)
 13811  0076FA  0E40               	movlw	64
 13812  0076FC  6402               	cpfsgt	hexCharToUint8@ascii,c
 13813  0076FE  D002               	goto	l2059
 13814                           
 13815                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
 13816  007700  0E37               	movlw	55
 13817  007702  D001               	goto	L3
 13818  007704                     l2059:
 13819                           
 13820                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
 13821  007704  0E30               	movlw	48
 13822  007706                     L3:
 13823  007706  5E02               	subwf	hexCharToUint8@ascii,f,c
 13824                           
 13825                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
 13826  007708  0E0F               	movlw	15
 13827  00770A  6402               	cpfsgt	hexCharToUint8@ascii,c
 13828  00770C  D002               	goto	l2061
 13829                           
 13830                           ;hex.c: 32: {;hex.c: 33: return 0;
 13831  00770E  0E00               	movlw	0
 13832                           
 13833                           ;hex.c: 34: }
 13834  007710  0012               	return	
 13835  007712                     l2061:
 13836                           
 13837                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
 13838  007712  5002               	movf	hexCharToUint8@ascii,w,c
 13839  007714  0012               	return	
 13840  007716                     __end_of_hexCharToUint8:
 13841                           	opt stack 0
 13842                           tblptru	equ	0xFF8
 13843                           tblptrh	equ	0xFF7
 13844                           tblptrl	equ	0xFF6
 13845                           tablat	equ	0xFF5
 13846                           prodh	equ	0xFF4
 13847                           prodl	equ	0xFF3
 13848                           intcon	equ	0xFF2
 13849                           intcon2	equ	0xFF1
 13850                           intcon3	equ	0xFF0
 13851                           postinc0	equ	0xFEE
 13852                           wreg	equ	0xFE8
 13853                           indf1	equ	0xFE7
 13854                           postdec1	equ	0xFE5
 13855                           plusw1	equ	0xFE3
 13856                           fsr1h	equ	0xFE2
 13857                           fsr1l	equ	0xFE1
 13858                           indf2	equ	0xFDF
 13859                           postinc2	equ	0xFDE
 13860                           postdec2	equ	0xFDD
 13861                           plusw2	equ	0xFDB
 13862                           fsr2h	equ	0xFDA
 13863                           fsr2l	equ	0xFD9
 13864                           status	equ	0xFD8
 13865                           
 13866 ;; *************** function _internalFlash_writePage *****************
 13867 ;; Defined at:
 13868 ;;		line 63 in file "internal_flash.c"
 13869 ;; Parameters:    Size  Location     Type
 13870 ;;  page            2    2[COMRAM] unsigned int 
 13871 ;; Auto vars:     Size  Location     Type
 13872 ;;  address         4    4[COMRAM] unsigned long 
 13873 ;;  cntr            2    8[COMRAM] unsigned int 
 13874 ;;  byte_cntr       1   11[COMRAM] unsigned char 
 13875 ;;  block_cntr      1   10[COMRAM] unsigned char 
 13876 ;;  i               1    0        unsigned char 
 13877 ;;  gie             1    0        unsigned char 
 13878 ;; Return value:  Size  Location     Type
 13879 ;;                  1    wreg      void 
 13880 ;; Registers used:
 13881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13882 ;; Tracked objects:
 13883 ;;		On entry : 0/0
 13884 ;;		On exit  : 0/0
 13885 ;;		Unchanged: 0/0
 13886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13888 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13890 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13891 ;;Total ram usage:       10 bytes
 13892 ;; Hardware stack levels used:    1
 13893 ;; Hardware stack levels required when called:    1
 13894 ;; This function calls:
 13895 ;;		__internalFlash_unlockAndActivate
 13896 ;; This function is called by:
 13897 ;;		__bootloader_program
 13898 ;; This function uses a non-reentrant model
 13899 ;;
 13900                           
 13901                           	psect	text55
 13902  00600C                     __ptext55:
 13903                           	opt stack 0
 13904  00600C                     _internalFlash_writePage:
 13905                           	opt stack 27
 13906                           
 13907                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
 13908                           
 13909                           ;incstack = 0
 13910  00600C  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
 13911  006010  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
 13912  006014  6A07               	clrf	internalFlash_writePage@address+2,c
 13913  006016  6A08               	clrf	internalFlash_writePage@address+3,c
 13914                           
 13915                           ;internal_flash.c: 74: address <<= 10;
 13916  006018  0E0A               	movlw	10
 13917  00601A                     u9775:
 13918  00601A  90D8               	bcf	status,0,c
 13919  00601C  3605               	rlcf	internalFlash_writePage@address,f,c
 13920  00601E  3606               	rlcf	internalFlash_writePage@address+1,f,c
 13921  006020  3607               	rlcf	internalFlash_writePage@address+2,f,c
 13922  006022  3608               	rlcf	internalFlash_writePage@address+3,f,c
 13923  006024  2EE8               	decfsz	wreg,f,c
 13924  006026  D7F9               	goto	u9775
 13925                           
 13926                           ;internal_flash.c: 76: TBLPTR = address;
 13927  006028  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
 13928  00602C  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
 13929  006030  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
 13930                           
 13931                           ;internal_flash.c: 79: cntr = 0;
 13932  006034  0E00               	movlw	0
 13933  006036  6E0A               	movwf	internalFlash_writePage@cntr+1,c
 13934  006038  0E00               	movlw	0
 13935  00603A  6E09               	movwf	internalFlash_writePage@cntr,c
 13936                           
 13937                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
 13938  00603C  0E00               	movlw	0
 13939  00603E  6E0B               	movwf	internalFlash_writePage@block_cntr,c
 13940  006040                     l12483:
 13941  006040  0E0F               	movlw	15
 13942  006042  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
 13943  006044  D001               	goto	l2298
 13944  006046  0012               	return	
 13945  006048                     l2298:
 13946                           
 13947                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
 13948  006048  0E00               	movlw	0
 13949  00604A  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
 13950  00604C                     l12489:
 13951  00604C  0E3F               	movlw	63
 13952  00604E  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
 13953  006050  D001               	goto	l2300
 13954  006052  D00D               	goto	u9800
 13955  006054                     l2300:
 13956                           
 13957                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
 13958  006054  0E00               	movlw	low _pageBuffer
 13959  006056  2409               	addwf	internalFlash_writePage@cntr,w,c
 13960  006058  6ED9               	movwf	fsr2l,c
 13961  00605A  0E08               	movlw	high _pageBuffer
 13962  00605C  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
 13963  00605E  6EDA               	movwf	fsr2h,c
 13964  006060  50DF               	movf	indf2,w,c
 13965  006062  6EF5               	movwf	tablat,c	;volatile
 13966  006064  000D               	tblwt		*+	;# 
 13967                           
 13968                           ;internal_flash.c: 91: ++cntr;
 13969  006066  4A09               	infsnz	internalFlash_writePage@cntr,f,c
 13970  006068  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
 13971  00606A  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
 13972  00606C  D7EF               	goto	l12489
 13973  00606E                     u9800:
 13974  00606E  000A               	tblrd		*-	;# 
 13975                           
 13976                           ;internal_flash.c: 98: EECON1 = 0x84;
 13977  006070  0E84               	movlw	132
 13978  006072  6EA6               	movwf	4006,c	;volsfr
 13979                           
 13980                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 13981  006074  0EB5               	movlw	181
 13982  006076  ECE0  F03B         	call	__internalFlash_unlockAndActivate
 13983                           
 13984                           ;internal_flash.c: 100: TBLPTR++;
 13985  00607A  0E01               	movlw	1
 13986  00607C  26F6               	addwf	tblptrl,f,c	;volatile
 13987  00607E  0E00               	movlw	0
 13988  006080  22F7               	addwfc	tblptrh,f,c	;volatile
 13989  006082  0E00               	movlw	0
 13990  006084  22F8               	addwfc	tblptru,f,c	;volatile
 13991  006086  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
 13992  006088  D7DB               	goto	l12483
 13993  00608A                     __end_of_internalFlash_writePage:
 13994                           	opt stack 0
 13995                           tblptru	equ	0xFF8
 13996                           tblptrh	equ	0xFF7
 13997                           tblptrl	equ	0xFF6
 13998                           tablat	equ	0xFF5
 13999                           prodh	equ	0xFF4
 14000                           prodl	equ	0xFF3
 14001                           intcon	equ	0xFF2
 14002                           intcon2	equ	0xFF1
 14003                           intcon3	equ	0xFF0
 14004                           postinc0	equ	0xFEE
 14005                           wreg	equ	0xFE8
 14006                           indf1	equ	0xFE7
 14007                           postdec1	equ	0xFE5
 14008                           plusw1	equ	0xFE3
 14009                           fsr1h	equ	0xFE2
 14010                           fsr1l	equ	0xFE1
 14011                           indf2	equ	0xFDF
 14012                           postinc2	equ	0xFDE
 14013                           postdec2	equ	0xFDD
 14014                           plusw2	equ	0xFDB
 14015                           fsr2h	equ	0xFDA
 14016                           fsr2l	equ	0xFD9
 14017                           status	equ	0xFD8
 14018                           
 14019 ;; *************** function _internalFlash_readPage *****************
 14020 ;; Defined at:
 14021 ;;		line 37 in file "internal_flash.c"
 14022 ;; Parameters:    Size  Location     Type
 14023 ;;  page            2   21[COMRAM] unsigned int 
 14024 ;; Auto vars:     Size  Location     Type
 14025 ;;  address         4   23[COMRAM] unsigned long 
 14026 ;; Return value:  Size  Location     Type
 14027 ;;                  1    wreg      void 
 14028 ;; Registers used:
 14029 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14030 ;; Tracked objects:
 14031 ;;		On entry : 0/0
 14032 ;;		On exit  : 0/0
 14033 ;;		Unchanged: 0/0
 14034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14036 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14038 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14039 ;;Total ram usage:        6 bytes
 14040 ;; Hardware stack levels used:    1
 14041 ;; Hardware stack levels required when called:    2
 14042 ;; This function calls:
 14043 ;;		_internalFlash_addressFromPage
 14044 ;;		_internalFlash_read
 14045 ;; This function is called by:
 14046 ;;		__bootloader_program
 14047 ;; This function uses a non-reentrant model
 14048 ;;
 14049                           
 14050                           	psect	text56
 14051  007272                     __ptext56:
 14052                           	opt stack 0
 14053  007272                     _internalFlash_readPage:
 14054                           	opt stack 26
 14055                           
 14056                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
 14057                           
 14058                           ;incstack = 0
 14059  007272  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
 14060  007276  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
 14061  00727A  EC48  F03B         	call	_internalFlash_addressFromPage	;wreg free
 14062  00727E  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
 14063  007282  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
 14064  007286  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
 14065  00728A  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
 14066                           
 14067                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
 14068  00728E  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
 14069  007292  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
 14070  007296  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
 14071  00729A  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
 14072  00729E  0E04               	movlw	4
 14073  0072A0  6E13               	movwf	internalFlash_read@data_length+1,c
 14074  0072A2  0E00               	movlw	0
 14075  0072A4  6E12               	movwf	internalFlash_read@data_length,c
 14076  0072A6  0E00               	movlw	low _pageBuffer
 14077  0072A8  6E14               	movwf	internalFlash_read@buffer,c
 14078  0072AA  0E08               	movlw	high _pageBuffer
 14079  0072AC  6E15               	movwf	internalFlash_read@buffer+1,c
 14080  0072AE  EC47  F03A         	call	_internalFlash_read	;wreg free
 14081  0072B2  0012               	return		;funcret
 14082  0072B4                     __end_of_internalFlash_readPage:
 14083                           	opt stack 0
 14084                           tblptru	equ	0xFF8
 14085                           tblptrh	equ	0xFF7
 14086                           tblptrl	equ	0xFF6
 14087                           tablat	equ	0xFF5
 14088                           prodh	equ	0xFF4
 14089                           prodl	equ	0xFF3
 14090                           intcon	equ	0xFF2
 14091                           intcon2	equ	0xFF1
 14092                           intcon3	equ	0xFF0
 14093                           postinc0	equ	0xFEE
 14094                           wreg	equ	0xFE8
 14095                           indf1	equ	0xFE7
 14096                           postdec1	equ	0xFE5
 14097                           plusw1	equ	0xFE3
 14098                           fsr1h	equ	0xFE2
 14099                           fsr1l	equ	0xFE1
 14100                           indf2	equ	0xFDF
 14101                           postinc2	equ	0xFDE
 14102                           postdec2	equ	0xFDD
 14103                           plusw2	equ	0xFDB
 14104                           fsr2h	equ	0xFDA
 14105                           fsr2l	equ	0xFD9
 14106                           status	equ	0xFD8
 14107                           
 14108 ;; *************** function _internalFlash_read *****************
 14109 ;; Defined at:
 14110 ;;		line 144 in file "internal_flash.c"
 14111 ;; Parameters:    Size  Location     Type
 14112 ;;  address         4   13[COMRAM] unsigned long 
 14113 ;;  data_length     2   17[COMRAM] unsigned int 
 14114 ;;  buffer          2   19[COMRAM] PTR unsigned char 
 14115 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
 14116 ;; Auto vars:     Size  Location     Type
 14117 ;;		None
 14118 ;; Return value:  Size  Location     Type
 14119 ;;                  1    wreg      unsigned char 
 14120 ;; Registers used:
 14121 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14122 ;; Tracked objects:
 14123 ;;		On entry : 0/0
 14124 ;;		On exit  : 0/0
 14125 ;;		Unchanged: 0/0
 14126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14127 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14130 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14131 ;;Total ram usage:        8 bytes
 14132 ;; Hardware stack levels used:    1
 14133 ;; Hardware stack levels required when called:    1
 14134 ;; This function calls:
 14135 ;;		_memcpy
 14136 ;; This function is called by:
 14137 ;;		_internalFlash_readPage
 14138 ;;		__bootloader_verify_program_memory
 14139 ;; This function uses a non-reentrant model
 14140 ;;
 14141                           
 14142                           	psect	text57
 14143  00748E                     __ptext57:
 14144                           	opt stack 0
 14145  00748E                     _internalFlash_read:
 14146                           	opt stack 26
 14147                           
 14148                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
 14149                           
 14150                           ;incstack = 0
 14151  00748E  5011               	movf	internalFlash_read@address+3,w,c
 14152  007490  E118               	bnz	l2314
 14153  007492  280E               	incf	internalFlash_read@address,w,c
 14154  007494  0EFF               	movlw	255
 14155  007496  580F               	subwfb	internalFlash_read@address+1,w,c
 14156  007498  0E01               	movlw	1
 14157  00749A  5810               	subwfb	internalFlash_read@address+2,w,c
 14158  00749C  B0D8               	btfsc	status,0,c
 14159  00749E  0012               	return	
 14160                           
 14161                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
 14162                           
 14163                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
 14164  0074A0  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
 14165  0074A4  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
 14166  0074A8  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
 14167  0074AC  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
 14168  0074B0  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
 14169  0074B4  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
 14170  0074B8  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
 14171  0074BC  EC72  F034         	call	_memcpy	;wreg free
 14172  0074C0  0012               	return	
 14173  0074C2                     l2314:
 14174  0074C2  0012               	return		;funcret
 14175  0074C4                     __end_of_internalFlash_read:
 14176                           	opt stack 0
 14177                           tblptru	equ	0xFF8
 14178                           tblptrh	equ	0xFF7
 14179                           tblptrl	equ	0xFF6
 14180                           tablat	equ	0xFF5
 14181                           prodh	equ	0xFF4
 14182                           prodl	equ	0xFF3
 14183                           intcon	equ	0xFF2
 14184                           intcon2	equ	0xFF1
 14185                           intcon3	equ	0xFF0
 14186                           postinc0	equ	0xFEE
 14187                           wreg	equ	0xFE8
 14188                           indf1	equ	0xFE7
 14189                           postdec1	equ	0xFE5
 14190                           plusw1	equ	0xFE3
 14191                           fsr1h	equ	0xFE2
 14192                           fsr1l	equ	0xFE1
 14193                           indf2	equ	0xFDF
 14194                           postinc2	equ	0xFDE
 14195                           postdec2	equ	0xFDD
 14196                           plusw2	equ	0xFDB
 14197                           fsr2h	equ	0xFDA
 14198                           fsr2l	equ	0xFD9
 14199                           status	equ	0xFD8
 14200                           
 14201 ;; *************** function _internalFlash_pageFromAddress *****************
 14202 ;; Defined at:
 14203 ;;		line 308 in file "internal_flash.c"
 14204 ;; Parameters:    Size  Location     Type
 14205 ;;  address         4    0[COMRAM] unsigned long 
 14206 ;; Auto vars:     Size  Location     Type
 14207 ;;		None
 14208 ;; Return value:  Size  Location     Type
 14209 ;;                  2    0[COMRAM] unsigned int 
 14210 ;; Registers used:
 14211 ;;		wreg, status,2, status,0
 14212 ;; Tracked objects:
 14213 ;;		On entry : 0/0
 14214 ;;		On exit  : 0/0
 14215 ;;		Unchanged: 0/0
 14216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14217 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14220 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14221 ;;Total ram usage:        5 bytes
 14222 ;; Hardware stack levels used:    1
 14223 ;; This function calls:
 14224 ;;		Nothing
 14225 ;; This function is called by:
 14226 ;;		__bootloader_program
 14227 ;; This function uses a non-reentrant model
 14228 ;;
 14229                           
 14230                           	psect	text58
 14231  007982                     __ptext58:
 14232                           	opt stack 0
 14233  007982                     _internalFlash_pageFromAddress:
 14234                           	opt stack 28
 14235                           
 14236                           ;internal_flash.c: 310: address >>= 10;
 14237                           
 14238                           ;incstack = 0
 14239  007982  0E0A               	movlw	10
 14240  007984  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
 14241  007986                     u9755:
 14242  007986  90D8               	bcf	status,0,c
 14243  007988  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
 14244  00798A  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
 14245  00798C  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
 14246  00798E  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
 14247  007990  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
 14248  007992  D7F9               	goto	u9755
 14249                           
 14250                           ;internal_flash.c: 311: return (uint16_t) address;
 14251  007994  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
 14252  007998  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
 14253  00799C  0012               	return	
 14254  00799E                     __end_of_internalFlash_pageFromAddress:
 14255                           	opt stack 0
 14256                           tblptru	equ	0xFF8
 14257                           tblptrh	equ	0xFF7
 14258                           tblptrl	equ	0xFF6
 14259                           tablat	equ	0xFF5
 14260                           prodh	equ	0xFF4
 14261                           prodl	equ	0xFF3
 14262                           intcon	equ	0xFF2
 14263                           intcon2	equ	0xFF1
 14264                           intcon3	equ	0xFF0
 14265                           postinc0	equ	0xFEE
 14266                           wreg	equ	0xFE8
 14267                           indf1	equ	0xFE7
 14268                           postdec1	equ	0xFE5
 14269                           plusw1	equ	0xFE3
 14270                           fsr1h	equ	0xFE2
 14271                           fsr1l	equ	0xFE1
 14272                           indf2	equ	0xFDF
 14273                           postinc2	equ	0xFDE
 14274                           postdec2	equ	0xFDD
 14275                           plusw2	equ	0xFDB
 14276                           fsr2h	equ	0xFDA
 14277                           fsr2l	equ	0xFD9
 14278                           status	equ	0xFD8
 14279                           
 14280 ;; *************** function _internalFlash_getBuffer *****************
 14281 ;; Defined at:
 14282 ;;		line 32 in file "internal_flash.c"
 14283 ;; Parameters:    Size  Location     Type
 14284 ;;		None
 14285 ;; Auto vars:     Size  Location     Type
 14286 ;;		None
 14287 ;; Return value:  Size  Location     Type
 14288 ;;                  2    0[COMRAM] PTR unsigned char 
 14289 ;; Registers used:
 14290 ;;		wreg, status,2, status,0
 14291 ;; Tracked objects:
 14292 ;;		On entry : 0/0
 14293 ;;		On exit  : 0/0
 14294 ;;		Unchanged: 0/0
 14295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14299 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14300 ;;Total ram usage:        2 bytes
 14301 ;; Hardware stack levels used:    1
 14302 ;; This function calls:
 14303 ;;		Nothing
 14304 ;; This function is called by:
 14305 ;;		__bootloader_program
 14306 ;; This function uses a non-reentrant model
 14307 ;;
 14308                           
 14309                           	psect	text59
 14310  007ABA                     __ptext59:
 14311                           	opt stack 0
 14312  007ABA                     _internalFlash_getBuffer:
 14313                           	opt stack 28
 14314                           
 14315                           ;internal_flash.c: 34: return pageBuffer;
 14316                           
 14317                           ;incstack = 0
 14318  007ABA  0E00               	movlw	low _pageBuffer
 14319  007ABC  6E01               	movwf	?_internalFlash_getBuffer,c
 14320  007ABE  0E08               	movlw	high _pageBuffer
 14321  007AC0  6E02               	movwf	?_internalFlash_getBuffer+1,c
 14322  007AC2  0012               	return	
 14323  007AC4                     __end_of_internalFlash_getBuffer:
 14324                           	opt stack 0
 14325                           tblptru	equ	0xFF8
 14326                           tblptrh	equ	0xFF7
 14327                           tblptrl	equ	0xFF6
 14328                           tablat	equ	0xFF5
 14329                           prodh	equ	0xFF4
 14330                           prodl	equ	0xFF3
 14331                           intcon	equ	0xFF2
 14332                           intcon2	equ	0xFF1
 14333                           intcon3	equ	0xFF0
 14334                           postinc0	equ	0xFEE
 14335                           wreg	equ	0xFE8
 14336                           indf1	equ	0xFE7
 14337                           postdec1	equ	0xFE5
 14338                           plusw1	equ	0xFE3
 14339                           fsr1h	equ	0xFE2
 14340                           fsr1l	equ	0xFE1
 14341                           indf2	equ	0xFDF
 14342                           postinc2	equ	0xFDE
 14343                           postdec2	equ	0xFDD
 14344                           plusw2	equ	0xFDB
 14345                           fsr2h	equ	0xFDA
 14346                           fsr2l	equ	0xFD9
 14347                           status	equ	0xFD8
 14348                           
 14349 ;; *************** function _internalFlash_erasePage *****************
 14350 ;; Defined at:
 14351 ;;		line 44 in file "internal_flash.c"
 14352 ;; Parameters:    Size  Location     Type
 14353 ;;  page            2    2[COMRAM] unsigned int 
 14354 ;; Auto vars:     Size  Location     Type
 14355 ;;  address         4    4[COMRAM] unsigned long 
 14356 ;; Return value:  Size  Location     Type
 14357 ;;                  1    wreg      void 
 14358 ;; Registers used:
 14359 ;;		wreg, status,2, status,0, cstack
 14360 ;; Tracked objects:
 14361 ;;		On entry : 0/0
 14362 ;;		On exit  : 0/0
 14363 ;;		Unchanged: 0/0
 14364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14366 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14368 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14369 ;;Total ram usage:        6 bytes
 14370 ;; Hardware stack levels used:    1
 14371 ;; Hardware stack levels required when called:    1
 14372 ;; This function calls:
 14373 ;;		__internalFlash_unlockAndActivate
 14374 ;; This function is called by:
 14375 ;;		__bootloader_program
 14376 ;; This function uses a non-reentrant model
 14377 ;;
 14378                           
 14379                           	psect	text60
 14380  007530                     __ptext60:
 14381                           	opt stack 0
 14382  007530                     _internalFlash_erasePage:
 14383                           	opt stack 27
 14384                           
 14385                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
 14386                           
 14387                           ;incstack = 0
 14388  007530  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
 14389  007534  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
 14390  007538  6A07               	clrf	internalFlash_erasePage@address+2,c
 14391  00753A  6A08               	clrf	internalFlash_erasePage@address+3,c
 14392                           
 14393                           ;internal_flash.c: 50: address <<= 10;
 14394  00753C  0E0A               	movlw	10
 14395  00753E                     u9765:
 14396  00753E  90D8               	bcf	status,0,c
 14397  007540  3605               	rlcf	internalFlash_erasePage@address,f,c
 14398  007542  3606               	rlcf	internalFlash_erasePage@address+1,f,c
 14399  007544  3607               	rlcf	internalFlash_erasePage@address+2,f,c
 14400  007546  3608               	rlcf	internalFlash_erasePage@address+3,f,c
 14401  007548  2EE8               	decfsz	wreg,f,c
 14402  00754A  D7F9               	goto	u9765
 14403                           
 14404                           ;internal_flash.c: 51: TBLPTR = address;
 14405  00754C  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
 14406  007550  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
 14407  007554  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
 14408                           
 14409                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
 14410  007558  84A6               	bsf	4006,2,c	;volsfr
 14411                           
 14412                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
 14413  00755A  88A6               	bsf	4006,4,c	;volsfr
 14414                           
 14415                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 14416  00755C  0EB5               	movlw	181
 14417  00755E  ECE0  F03B         	call	__internalFlash_unlockAndActivate
 14418  007562  0012               	return		;funcret
 14419  007564                     __end_of_internalFlash_erasePage:
 14420                           	opt stack 0
 14421                           tblptru	equ	0xFF8
 14422                           tblptrh	equ	0xFF7
 14423                           tblptrl	equ	0xFF6
 14424                           tablat	equ	0xFF5
 14425                           prodh	equ	0xFF4
 14426                           prodl	equ	0xFF3
 14427                           intcon	equ	0xFF2
 14428                           intcon2	equ	0xFF1
 14429                           intcon3	equ	0xFF0
 14430                           postinc0	equ	0xFEE
 14431                           wreg	equ	0xFE8
 14432                           indf1	equ	0xFE7
 14433                           postdec1	equ	0xFE5
 14434                           plusw1	equ	0xFE3
 14435                           fsr1h	equ	0xFE2
 14436                           fsr1l	equ	0xFE1
 14437                           indf2	equ	0xFDF
 14438                           postinc2	equ	0xFDE
 14439                           postdec2	equ	0xFDD
 14440                           plusw2	equ	0xFDB
 14441                           fsr2h	equ	0xFDA
 14442                           fsr2l	equ	0xFD9
 14443                           status	equ	0xFD8
 14444                           
 14445 ;; *************** function __internalFlash_unlockAndActivate *****************
 14446 ;; Defined at:
 14447 ;;		line 106 in file "internal_flash.c"
 14448 ;; Parameters:    Size  Location     Type
 14449 ;;  UnlockKey       1    wreg     unsigned char 
 14450 ;; Auto vars:     Size  Location     Type
 14451 ;;  UnlockKey       1    0[COMRAM] unsigned char 
 14452 ;;  InterruptEna    1    1[COMRAM] unsigned char 
 14453 ;; Return value:  Size  Location     Type
 14454 ;;                  1    wreg      void 
 14455 ;; Registers used:
 14456 ;;		wreg, status,2, status,0
 14457 ;; Tracked objects:
 14458 ;;		On entry : 0/0
 14459 ;;		On exit  : 0/0
 14460 ;;		Unchanged: 0/0
 14461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14463 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14466 ;;Total ram usage:        2 bytes
 14467 ;; Hardware stack levels used:    1
 14468 ;; This function calls:
 14469 ;;		Nothing
 14470 ;; This function is called by:
 14471 ;;		_internalFlash_erasePage
 14472 ;;		_internalFlash_writePage
 14473 ;;		_EraseBlock
 14474 ;; This function uses a non-reentrant model
 14475 ;;
 14476                           
 14477                           	psect	text61
 14478  0077C0                     __ptext61:
 14479                           	opt stack 0
 14480  0077C0                     __internalFlash_unlockAndActivate:
 14481                           	opt stack 27
 14482                           
 14483                           ;incstack = 0
 14484                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
 14485  0077C0  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
 14486                           
 14487                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
 14488  0077C2  0EB5               	movlw	181
 14489  0077C4  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
 14490  0077C6  B4D8               	btfsc	status,2,c
 14491  0077C8  D002               	goto	l2305
 14492                           
 14493                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
 14494  0077CA  94A6               	bcf	4006,2,c	;volsfr
 14495                           
 14496                           ;internal_flash.c: 118: return;
 14497  0077CC  0012               	return	
 14498  0077CE                     l2305:
 14499                           
 14500                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
 14501  0077CE  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
 14502                           
 14503                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
 14504  0077D2  9EF2               	bcf	intcon,7,c	;volatile
 14505                           
 14506                           ;internal_flash.c: 123: EECON2 = 0x55;
 14507  0077D4  0E55               	movlw	85
 14508  0077D6  6EA7               	movwf	4007,c	;volsfr
 14509                           
 14510                           ;internal_flash.c: 124: EECON2 = 0xAA;
 14511  0077D8  0EAA               	movlw	170
 14512  0077DA  6EA7               	movwf	4007,c	;volsfr
 14513                           
 14514                           ;internal_flash.c: 125: EECON1bits.WR = 1;
 14515  0077DC  82A6               	bsf	4006,1,c	;volsfr
 14516                           
 14517                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
 14518  0077DE  94A6               	bcf	4006,2,c	;volsfr
 14519                           
 14520                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
 14521  0077E0  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
 14522  0077E2  0012               	return	
 14523                           
 14524                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
 14525  0077E4  8EF2               	bsf	intcon,7,c	;volatile
 14526  0077E6  0012               	return	
 14527  0077E8                     __end_of__internalFlash_unlockAndActivate:
 14528                           	opt stack 0
 14529                           tblptru	equ	0xFF8
 14530                           tblptrh	equ	0xFF7
 14531                           tblptrl	equ	0xFF6
 14532                           tablat	equ	0xFF5
 14533                           prodh	equ	0xFF4
 14534                           prodl	equ	0xFF3
 14535                           intcon	equ	0xFF2
 14536                           intcon2	equ	0xFF1
 14537                           intcon3	equ	0xFF0
 14538                           postinc0	equ	0xFEE
 14539                           wreg	equ	0xFE8
 14540                           indf1	equ	0xFE7
 14541                           postdec1	equ	0xFE5
 14542                           plusw1	equ	0xFE3
 14543                           fsr1h	equ	0xFE2
 14544                           fsr1l	equ	0xFE1
 14545                           indf2	equ	0xFDF
 14546                           postinc2	equ	0xFDE
 14547                           postdec2	equ	0xFDD
 14548                           plusw2	equ	0xFDB
 14549                           fsr2h	equ	0xFDA
 14550                           fsr2l	equ	0xFD9
 14551                           status	equ	0xFD8
 14552                           
 14553 ;; *************** function _internalFlash_addressWithinPage *****************
 14554 ;; Defined at:
 14555 ;;		line 322 in file "internal_flash.c"
 14556 ;; Parameters:    Size  Location     Type
 14557 ;;  address         4    8[COMRAM] unsigned long 
 14558 ;;  page            2   12[COMRAM] unsigned int 
 14559 ;; Auto vars:     Size  Location     Type
 14560 ;;  page_start_a    4   18[COMRAM] unsigned long 
 14561 ;; Return value:  Size  Location     Type
 14562 ;;                  2    8[COMRAM] unsigned int 
 14563 ;; Registers used:
 14564 ;;		wreg, status,2, status,0, cstack
 14565 ;; Tracked objects:
 14566 ;;		On entry : 0/0
 14567 ;;		On exit  : 0/0
 14568 ;;		Unchanged: 0/0
 14569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14570 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14571 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14572 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14573 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14574 ;;Total ram usage:       14 bytes
 14575 ;; Hardware stack levels used:    1
 14576 ;; Hardware stack levels required when called:    1
 14577 ;; This function calls:
 14578 ;;		_internalFlash_addressFromPage
 14579 ;; This function is called by:
 14580 ;;		__bootloader_program
 14581 ;; This function uses a non-reentrant model
 14582 ;;
 14583                           
 14584                           	psect	text62
 14585  006A0E                     __ptext62:
 14586                           	opt stack 0
 14587  006A0E                     _internalFlash_addressWithinPage:
 14588                           	opt stack 27
 14589                           
 14590                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
 14591                           
 14592                           ;incstack = 0
 14593  006A0E  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
 14594  006A12  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
 14595  006A16  EC48  F03B         	call	_internalFlash_addressFromPage	;wreg free
 14596  006A1A  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
 14597  006A1E  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
 14598  006A22  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
 14599  006A26  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
 14600                           
 14601                           ;internal_flash.c: 326: address = address - page_start_address;
 14602  006A2A  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
 14603  006A2E  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
 14604  006A32  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
 14605  006A36  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
 14606  006A3A  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
 14607  006A3C  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
 14608  006A3E  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
 14609  006A40  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
 14610  006A42  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
 14611  006A44  0E00               	movlw	0
 14612  006A46  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
 14613  006A48  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
 14614  006A4A  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
 14615  006A4C  5009               	movf	internalFlash_addressWithinPage@address,w,c
 14616  006A4E  240F               	addwf	??_internalFlash_addressWithinPage,w,c
 14617  006A50  6E09               	movwf	internalFlash_addressWithinPage@address,c
 14618  006A52  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
 14619  006A54  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
 14620  006A56  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 14621  006A58  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
 14622  006A5A  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
 14623  006A5C  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 14624  006A5E  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
 14625  006A60  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
 14626  006A62  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 14627                           
 14628                           ;internal_flash.c: 327: return (uint16_t) address;
 14629  006A64  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
 14630  006A68  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
 14631  006A6C  0012               	return	
 14632  006A6E                     __end_of_internalFlash_addressWithinPage:
 14633                           	opt stack 0
 14634                           tblptru	equ	0xFF8
 14635                           tblptrh	equ	0xFF7
 14636                           tblptrl	equ	0xFF6
 14637                           tablat	equ	0xFF5
 14638                           prodh	equ	0xFF4
 14639                           prodl	equ	0xFF3
 14640                           intcon	equ	0xFF2
 14641                           intcon2	equ	0xFF1
 14642                           intcon3	equ	0xFF0
 14643                           postinc0	equ	0xFEE
 14644                           wreg	equ	0xFE8
 14645                           indf1	equ	0xFE7
 14646                           postdec1	equ	0xFE5
 14647                           plusw1	equ	0xFE3
 14648                           fsr1h	equ	0xFE2
 14649                           fsr1l	equ	0xFE1
 14650                           indf2	equ	0xFDF
 14651                           postinc2	equ	0xFDE
 14652                           postdec2	equ	0xFDD
 14653                           plusw2	equ	0xFDB
 14654                           fsr2h	equ	0xFDA
 14655                           fsr2l	equ	0xFD9
 14656                           status	equ	0xFD8
 14657                           
 14658 ;; *************** function _internalFlash_addressFromPage *****************
 14659 ;; Defined at:
 14660 ;;		line 314 in file "internal_flash.c"
 14661 ;; Parameters:    Size  Location     Type
 14662 ;;  page            2    0[COMRAM] unsigned int 
 14663 ;; Auto vars:     Size  Location     Type
 14664 ;;  address         4    4[COMRAM] unsigned long 
 14665 ;; Return value:  Size  Location     Type
 14666 ;;                  4    0[COMRAM] unsigned long 
 14667 ;; Registers used:
 14668 ;;		wreg, status,2, status,0
 14669 ;; Tracked objects:
 14670 ;;		On entry : 0/0
 14671 ;;		On exit  : 0/0
 14672 ;;		Unchanged: 0/0
 14673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14675 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14677 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14678 ;;Total ram usage:        8 bytes
 14679 ;; Hardware stack levels used:    1
 14680 ;; This function calls:
 14681 ;;		Nothing
 14682 ;; This function is called by:
 14683 ;;		_internalFlash_readPage
 14684 ;;		_internalFlash_addressWithinPage
 14685 ;; This function uses a non-reentrant model
 14686 ;;
 14687                           
 14688                           	psect	text63
 14689  007690                     __ptext63:
 14690                           	opt stack 0
 14691  007690                     _internalFlash_addressFromPage:
 14692                           	opt stack 27
 14693                           
 14694                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
 14695                           
 14696                           ;incstack = 0
 14697  007690  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
 14698  007694  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
 14699  007698  6A07               	clrf	internalFlash_addressFromPage@address+2,c
 14700  00769A  6A08               	clrf	internalFlash_addressFromPage@address+3,c
 14701                           
 14702                           ;internal_flash.c: 318: address <<= 10;
 14703  00769C  0E0A               	movlw	10
 14704  00769E                     u8885:
 14705  00769E  90D8               	bcf	status,0,c
 14706  0076A0  3605               	rlcf	internalFlash_addressFromPage@address,f,c
 14707  0076A2  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
 14708  0076A4  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
 14709  0076A6  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
 14710  0076A8  2EE8               	decfsz	wreg,f,c
 14711  0076AA  D7F9               	goto	u8885
 14712                           
 14713                           ;internal_flash.c: 319: return address;
 14714  0076AC  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
 14715  0076B0  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
 14716  0076B4  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
 14717  0076B8  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
 14718  0076BC  0012               	return	
 14719  0076BE                     __end_of_internalFlash_addressFromPage:
 14720                           	opt stack 0
 14721                           tblptru	equ	0xFF8
 14722                           tblptrh	equ	0xFF7
 14723                           tblptrl	equ	0xFF6
 14724                           tablat	equ	0xFF5
 14725                           prodh	equ	0xFF4
 14726                           prodl	equ	0xFF3
 14727                           intcon	equ	0xFF2
 14728                           intcon2	equ	0xFF1
 14729                           intcon3	equ	0xFF0
 14730                           postinc0	equ	0xFEE
 14731                           wreg	equ	0xFE8
 14732                           indf1	equ	0xFE7
 14733                           postdec1	equ	0xFE5
 14734                           plusw1	equ	0xFE3
 14735                           fsr1h	equ	0xFE2
 14736                           fsr1l	equ	0xFE1
 14737                           indf2	equ	0xFDF
 14738                           postinc2	equ	0xFDE
 14739                           postdec2	equ	0xFDD
 14740                           plusw2	equ	0xFDB
 14741                           fsr2h	equ	0xFDA
 14742                           fsr2l	equ	0xFD9
 14743                           status	equ	0xFD8
 14744                           
 14745 ;; *************** function __bootloader_check_address *****************
 14746 ;; Defined at:
 14747 ;;		line 94 in file "bootloader.c"
 14748 ;; Parameters:    Size  Location     Type
 14749 ;;  address         4    0[COMRAM] unsigned long 
 14750 ;;  dataLength      1    4[COMRAM] unsigned char 
 14751 ;; Auto vars:     Size  Location     Type
 14752 ;;  cntr            1   11[COMRAM] unsigned char 
 14753 ;;  byte_status     1   10[COMRAM] enum E6919
 14754 ;;  worst_case      1    9[COMRAM] enum E6919
 14755 ;; Return value:  Size  Location     Type
 14756 ;;                  1    wreg      enum E6919
 14757 ;; Registers used:
 14758 ;;		wreg, status,2, status,0
 14759 ;; Tracked objects:
 14760 ;;		On entry : 0/0
 14761 ;;		On exit  : 0/0
 14762 ;;		Unchanged: 0/0
 14763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14764 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14765 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14766 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14767 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14768 ;;Total ram usage:       12 bytes
 14769 ;; Hardware stack levels used:    1
 14770 ;; This function calls:
 14771 ;;		Nothing
 14772 ;; This function is called by:
 14773 ;;		__bootloader_verify_file
 14774 ;;		__bootloader_program
 14775 ;; This function uses a non-reentrant model
 14776 ;;
 14777                           
 14778                           	psect	text64
 14779  004822                     __ptext64:
 14780                           	opt stack 0
 14781  004822                     __bootloader_check_address:
 14782                           	opt stack 28
 14783                           
 14784                           ;bootloader.c: 96: addressCheckResult_t byte_status;;bootloader.c: 97: addressCheckResul
      +                          t_t worst_case;;bootloader.c: 98: uint8_t cntr;;bootloader.c: 100: worst_case = ADDRESS_
      +                          CHECK_RESULT_OK;
 14785                           
 14786                           ;incstack = 0
 14787  004822  0E00               	movlw	0
 14788  004824  6E0A               	movwf	__bootloader_check_address@worst_case,c
 14789                           
 14790                           ;bootloader.c: 103: for(cntr=0; cntr<dataLength; ++cntr)
 14791  004826  0E00               	movlw	0
 14792  004828  6E0C               	movwf	__bootloader_check_address@cntr,c
 14793  00482A  D062               	goto	l2167
 14794  00482C                     
 14795                           ;bootloader.c: 104: {;bootloader.c: 106: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
 14796  00482C  500C               	movf	__bootloader_check_address@cntr,w,c
 14797  00482E  2401               	addwf	__bootloader_check_address@address,w,c
 14798  004830  6E06               	movwf	??__bootloader_check_address& (0+255),c
 14799  004832  0E00               	movlw	0
 14800  004834  2002               	addwfc	__bootloader_check_address@address+1,w,c
 14801  004836  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 14802  004838  0E00               	movlw	0
 14803  00483A  2003               	addwfc	__bootloader_check_address@address+2,w,c
 14804  00483C  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 14805  00483E  0E00               	movlw	0
 14806  004840  2004               	addwfc	__bootloader_check_address@address+3,w,c
 14807  004842  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 14808  004844  5009               	movf	??__bootloader_check_address+3,w,c
 14809  004846  1008               	iorwf	??__bootloader_check_address+2,w,c
 14810  004848  E104               	bnz	u9680
 14811  00484A  0E90               	movlw	144
 14812  00484C  5C07               	subwf	??__bootloader_check_address+1,w,c
 14813  00484E  A0D8               	btfss	status,0,c
 14814  004850  D018               	goto	l2169
 14815  004852                     u9680:
 14816  004852  500C               	movf	__bootloader_check_address@cntr,w,c
 14817  004854  2401               	addwf	__bootloader_check_address@address,w,c
 14818  004856  6E06               	movwf	??__bootloader_check_address& (0+255),c
 14819  004858  0E00               	movlw	0
 14820  00485A  2002               	addwfc	__bootloader_check_address@address+1,w,c
 14821  00485C  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 14822  00485E  0E00               	movlw	0
 14823  004860  2003               	addwfc	__bootloader_check_address@address+2,w,c
 14824  004862  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 14825  004864  0E00               	movlw	0
 14826  004866  2004               	addwfc	__bootloader_check_address@address+3,w,c
 14827  004868  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 14828  00486A  5009               	movf	??__bootloader_check_address+3,w,c
 14829  00486C  E10A               	bnz	l12415
 14830  00486E  0EF8               	movlw	248
 14831  004870  5C06               	subwf	??__bootloader_check_address,w,c
 14832  004872  0EFF               	movlw	255
 14833  004874  5807               	subwfb	??__bootloader_check_address+1,w,c
 14834  004876  0E01               	movlw	1
 14835  004878  5808               	subwfb	??__bootloader_check_address+2,w,c
 14836  00487A  B0D8               	btfsc	status,0,c
 14837  00487C  D002               	goto	l2169
 14838                           
 14839                           ;bootloader.c: 107: {;bootloader.c: 108: byte_status = ADDRESS_CHECK_RESULT_OK;
 14840  00487E  0E00               	movlw	0
 14841  004880  D029               	goto	L4
 14842  004882                     l2169:
 14843  004882                     l12415:
 14844                           
 14845                           ;bootloader.c: 112: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 14846  004882  500C               	movf	__bootloader_check_address@cntr,w,c
 14847  004884  2401               	addwf	__bootloader_check_address@address,w,c
 14848  004886  6E06               	movwf	??__bootloader_check_address& (0+255),c
 14849  004888  0E00               	movlw	0
 14850  00488A  2002               	addwfc	__bootloader_check_address@address+1,w,c
 14851  00488C  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 14852  00488E  0E00               	movlw	0
 14853  004890  2003               	addwfc	__bootloader_check_address@address+2,w,c
 14854  004892  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 14855  004894  0E00               	movlw	0
 14856  004896  2004               	addwfc	__bootloader_check_address@address+3,w,c
 14857  004898  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 14858  00489A  5009               	movf	??__bootloader_check_address+3,w,c
 14859  00489C  E108               	bnz	u9700
 14860  00489E  0EF8               	movlw	248
 14861  0048A0  5C06               	subwf	??__bootloader_check_address,w,c
 14862  0048A2  0EFF               	movlw	255
 14863  0048A4  5807               	subwfb	??__bootloader_check_address+1,w,c
 14864  0048A6  0E01               	movlw	1
 14865  0048A8  5808               	subwfb	??__bootloader_check_address+2,w,c
 14866  0048AA  A0D8               	btfss	status,0,c
 14867  0048AC  D015               	goto	l2171
 14868  0048AE                     u9700:
 14869  0048AE  500C               	movf	__bootloader_check_address@cntr,w,c
 14870  0048B0  2401               	addwf	__bootloader_check_address@address,w,c
 14871  0048B2  6E06               	movwf	??__bootloader_check_address& (0+255),c
 14872  0048B4  0E00               	movlw	0
 14873  0048B6  2002               	addwfc	__bootloader_check_address@address+1,w,c
 14874  0048B8  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 14875  0048BA  0E00               	movlw	0
 14876  0048BC  2003               	addwfc	__bootloader_check_address@address+2,w,c
 14877  0048BE  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 14878  0048C0  0E00               	movlw	0
 14879  0048C2  2004               	addwfc	__bootloader_check_address@address+3,w,c
 14880  0048C4  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 14881  0048C6  5009               	movf	??__bootloader_check_address+3,w,c
 14882  0048C8  E107               	bnz	l2171
 14883  0048CA  0E02               	movlw	2
 14884  0048CC  5C08               	subwf	??__bootloader_check_address+2,w,c
 14885  0048CE  B0D8               	btfsc	status,0,c
 14886  0048D0  D003               	goto	l2171
 14887                           
 14888                           ;bootloader.c: 113: {;bootloader.c: 114: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 14889  0048D2  0E01               	movlw	1
 14890  0048D4                     L4:
 14891  0048D4  6E0B               	movwf	__bootloader_check_address@byte_status,c
 14892                           
 14893                           ;bootloader.c: 115: }
 14894  0048D6  D001               	goto	l2172
 14895  0048D8                     l2171:
 14896                           
 14897                           ;bootloader.c: 116: else;bootloader.c: 117: {;bootloader.c: 118: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 14898  0048D8  680B               	setf	__bootloader_check_address@byte_status,c
 14899  0048DA                     l2172:
 14900                           
 14901                           ;bootloader.c: 119: };bootloader.c: 122: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 14902  0048DA  280B               	incf	__bootloader_check_address@byte_status,w,c
 14903  0048DC  A4D8               	btfss	status,2,c
 14904  0048DE  D002               	goto	l2173
 14905                           
 14906                           ;bootloader.c: 123: {;bootloader.c: 124: return ADDRESS_CHECK_RESULT_ERROR;
 14907  0048E0  0EFF               	movlw	255
 14908  0048E2  0012               	return	
 14909  0048E4                     l2173:
 14910                           
 14911                           ;bootloader.c: 125: };bootloader.c: 128: if(byte_status > worst_case)
 14912  0048E4  500B               	movf	__bootloader_check_address@byte_status,w,c
 14913  0048E6  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 14914  0048E8  A0D8               	btfss	status,0,c
 14915                           
 14916                           ;bootloader.c: 129: {;bootloader.c: 130: worst_case = byte_status;
 14917  0048EA  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 14918  0048EE  2A0C               	incf	__bootloader_check_address@cntr,f,c
 14919  0048F0                     l2167:
 14920  0048F0  5005               	movf	__bootloader_check_address@dataLength,w,c
 14921  0048F2  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 14922  0048F4  A0D8               	btfss	status,0,c
 14923  0048F6  D79A               	goto	l2168
 14924                           
 14925                           ;bootloader.c: 131: };bootloader.c: 132: };bootloader.c: 134: return worst_case;
 14926  0048F8  500A               	movf	__bootloader_check_address@worst_case,w,c
 14927  0048FA  0012               	return	
 14928  0048FC                     __end_of__bootloader_check_address:
 14929                           	opt stack 0
 14930                           tblptru	equ	0xFF8
 14931                           tblptrh	equ	0xFF7
 14932                           tblptrl	equ	0xFF6
 14933                           tablat	equ	0xFF5
 14934                           prodh	equ	0xFF4
 14935                           prodl	equ	0xFF3
 14936                           intcon	equ	0xFF2
 14937                           intcon2	equ	0xFF1
 14938                           intcon3	equ	0xFF0
 14939                           postinc0	equ	0xFEE
 14940                           wreg	equ	0xFE8
 14941                           indf1	equ	0xFE7
 14942                           postdec1	equ	0xFE5
 14943                           plusw1	equ	0xFE3
 14944                           fsr1h	equ	0xFE2
 14945                           fsr1l	equ	0xFE1
 14946                           indf2	equ	0xFDF
 14947                           postinc2	equ	0xFDE
 14948                           postdec2	equ	0xFDD
 14949                           plusw2	equ	0xFDB
 14950                           fsr2h	equ	0xFDA
 14951                           fsr2l	equ	0xFD9
 14952                           status	equ	0xFD8
 14953                           
 14954 ;; *************** function __bootloader_find_file *****************
 14955 ;; Defined at:
 14956 ;;		line 137 in file "bootloader.c"
 14957 ;; Parameters:    Size  Location     Type
 14958 ;;		None
 14959 ;; Auto vars:     Size  Location     Type
 14960 ;;		None
 14961 ;; Return value:  Size  Location     Type
 14962 ;;                  1    wreg      void 
 14963 ;; Registers used:
 14964 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14965 ;; Tracked objects:
 14966 ;;		On entry : 0/0
 14967 ;;		On exit  : 0/0
 14968 ;;		Unchanged: 0/0
 14969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14974 ;;Total ram usage:        0 bytes
 14975 ;; Hardware stack levels used:    1
 14976 ;; Hardware stack levels required when called:    8
 14977 ;; This function calls:
 14978 ;;		_fat_find_file
 14979 ;;		_fat_get_file_size
 14980 ;; This function is called by:
 14981 ;;		_bootloader_run
 14982 ;; This function uses a non-reentrant model
 14983 ;;
 14984                           
 14985                           	psect	text65
 14986  0056FA                     __ptext65:
 14987                           	opt stack 0
 14988  0056FA                     __bootloader_find_file:
 14989                           	opt stack 21
 14990                           
 14991                           ;bootloader.c: 140: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 14992                           
 14993                           ;incstack = 0
 14994  0056FA  0EB6               	movlw	low _bootloader_filename
 14995  0056FC  6E31               	movwf	fat_find_file@name,c
 14996  0056FE  0E8F               	movlw	high _bootloader_filename
 14997  005700  6E32               	movwf	fat_find_file@name+1,c
 14998  005702  0EC7               	movlw	low _bootloader_extension
 14999  005704  6E33               	movwf	fat_find_file@extension,c
 15000  005706  0E8F               	movlw	high _bootloader_extension
 15001  005708  6E34               	movwf	fat_find_file@extension+1,c
 15002  00570A  ECD0  F028         	call	_fat_find_file	;wreg free
 15003  00570E  0100               	movlb	0	; () banked
 15004  005710  6FFF               	movwf	_file_number& (0+255),b
 15005                           
 15006                           ; BSR set to: 0
 15007                           ;bootloader.c: 143: if(file_number!=0xFF)
 15008  005712  29FF               	incf	_file_number& (0+255),w,b
 15009  005714  B4D8               	btfsc	status,2,c
 15010  005716  D033               	goto	l2179
 15011                           
 15012                           ; BSR set to: 0
 15013                           ;bootloader.c: 144: {;bootloader.c: 146: hex_file_size = fat_get_file_size(file_number);
 15014  005718  51FF               	movf	_file_number& (0+255),w,b
 15015  00571A  EC21  F032         	call	_fat_get_file_size
 15016  00571E  C031  F078         	movff	?_fat_get_file_size,_hex_file_size
 15017  005722  C032  F079         	movff	?_fat_get_file_size+1,_hex_file_size+1
 15018  005726  C033  F07A         	movff	?_fat_get_file_size+2,_hex_file_size+2
 15019  00572A  C034  F07B         	movff	?_fat_get_file_size+3,_hex_file_size+3
 15020                           
 15021                           ;bootloader.c: 148: hex_file_entries = 0;
 15022  00572E  0E00               	movlw	0
 15023  005730  0100               	movlb	0	; () banked
 15024  005732  6F85               	movwf	(_hex_file_entries+1)& (0+255),b
 15025  005734  0E00               	movlw	0
 15026  005736  6F84               	movwf	_hex_file_entries& (0+255),b
 15027                           
 15028                           ; BSR set to: 0
 15029                           ;bootloader.c: 149: hex_file_offset = 0;
 15030  005738  0E00               	movlw	0
 15031  00573A  6F7C               	movwf	_hex_file_offset& (0+255),b
 15032  00573C  0E00               	movlw	0
 15033  00573E  6F7D               	movwf	(_hex_file_offset+1)& (0+255),b
 15034  005740  0E00               	movlw	0
 15035  005742  6F7E               	movwf	(_hex_file_offset+2)& (0+255),b
 15036  005744  0E00               	movlw	0
 15037  005746  6F7F               	movwf	(_hex_file_offset+3)& (0+255),b
 15038                           
 15039                           ; BSR set to: 0
 15040                           ;bootloader.c: 150: file_minimum_address = 0xFFFFFFFF;
 15041  005748  0101               	movlb	1	; () banked
 15042  00574A  6948               	setf	_file_minimum_address& (0+255),b
 15043  00574C  6949               	setf	(_file_minimum_address+1)& (0+255),b
 15044  00574E  694A               	setf	(_file_minimum_address+2)& (0+255),b
 15045  005750  694B               	setf	(_file_minimum_address+3)& (0+255),b
 15046                           
 15047                           ; BSR set to: 1
 15048                           ;bootloader.c: 151: file_maximum_address = 0x00000000;
 15049  005752  0E00               	movlw	0
 15050  005754  6F44               	movwf	_file_maximum_address& (0+255),b
 15051  005756  0E00               	movlw	0
 15052  005758  6F45               	movwf	(_file_maximum_address+1)& (0+255),b
 15053  00575A  0E00               	movlw	0
 15054  00575C  6F46               	movwf	(_file_maximum_address+2)& (0+255),b
 15055  00575E  0E00               	movlw	0
 15056  005760  6F47               	movwf	(_file_maximum_address+3)& (0+255),b
 15057                           
 15058                           ; BSR set to: 1
 15059                           ;bootloader.c: 152: extended_linear_address = 0x00000000;
 15060  005762  0E00               	movlw	0
 15061  005764  6F40               	movwf	_extended_linear_address& (0+255),b
 15062  005766  0E00               	movlw	0
 15063  005768  6F41               	movwf	(_extended_linear_address+1)& (0+255),b
 15064  00576A  0E00               	movlw	0
 15065  00576C  6F42               	movwf	(_extended_linear_address+2)& (0+255),b
 15066  00576E  0E00               	movlw	0
 15067  005770  6F43               	movwf	(_extended_linear_address+3)& (0+255),b
 15068                           
 15069                           ; BSR set to: 1
 15070                           ;bootloader.c: 153: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 15071  005772  0E10               	movlw	16
 15072  005774  0100               	movlb	0	; () banked
 15073  005776  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 15074                           
 15075                           ; BSR set to: 0
 15076                           ;bootloader.c: 154: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 15077  005778  0E10               	movlw	16
 15078  00577A  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 15079                           
 15080                           ;bootloader.c: 155: }
 15081  00577C  0012               	return	
 15082  00577E                     l2179:
 15083                           
 15084                           ; BSR set to: 0
 15085                           ;bootloader.c: 157: else;bootloader.c: 158: {;bootloader.c: 160: hex_file_size = 0;
 15086                           
 15087                           ; BSR set to: 0
 15088  00577E  0E00               	movlw	0
 15089  005780  6F78               	movwf	_hex_file_size& (0+255),b
 15090  005782  0E00               	movlw	0
 15091  005784  6F79               	movwf	(_hex_file_size+1)& (0+255),b
 15092  005786  0E00               	movlw	0
 15093  005788  6F7A               	movwf	(_hex_file_size+2)& (0+255),b
 15094  00578A  0E00               	movlw	0
 15095  00578C  6F7B               	movwf	(_hex_file_size+3)& (0+255),b
 15096                           
 15097                           ;bootloader.c: 162: os.bootloader_mode = BOOTLOADER_MODE_START;
 15098  00578E  0E00               	movlw	0
 15099  005790  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 15100                           
 15101                           ;bootloader.c: 163: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
 15102  005792  0E00               	movlw	0
 15103  005794  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 15104  005796  0012               	return	
 15105  005798                     __end_of__bootloader_find_file:
 15106                           	opt stack 0
 15107                           tblptru	equ	0xFF8
 15108                           tblptrh	equ	0xFF7
 15109                           tblptrl	equ	0xFF6
 15110                           tablat	equ	0xFF5
 15111                           prodh	equ	0xFF4
 15112                           prodl	equ	0xFF3
 15113                           intcon	equ	0xFF2
 15114                           intcon2	equ	0xFF1
 15115                           intcon3	equ	0xFF0
 15116                           postinc0	equ	0xFEE
 15117                           wreg	equ	0xFE8
 15118                           indf1	equ	0xFE7
 15119                           postdec1	equ	0xFE5
 15120                           plusw1	equ	0xFE3
 15121                           fsr1h	equ	0xFE2
 15122                           fsr1l	equ	0xFE1
 15123                           indf2	equ	0xFDF
 15124                           postinc2	equ	0xFDE
 15125                           postdec2	equ	0xFDD
 15126                           plusw2	equ	0xFDB
 15127                           fsr2h	equ	0xFDA
 15128                           fsr2l	equ	0xFD9
 15129                           status	equ	0xFD8
 15130                           
 15131 ;; *************** function __normal_mode *****************
 15132 ;; Defined at:
 15133 ;;		line 151 in file "main.c"
 15134 ;; Parameters:    Size  Location     Type
 15135 ;;		None
 15136 ;; Auto vars:     Size  Location     Type
 15137 ;;		None
 15138 ;; Return value:  Size  Location     Type
 15139 ;;                  1    wreg      unsigned char 
 15140 ;; Registers used:
 15141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15142 ;; Tracked objects:
 15143 ;;		On entry : 0/0
 15144 ;;		On exit  : 0/0
 15145 ;;		Unchanged: 0/0
 15146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15151 ;;Total ram usage:        0 bytes
 15152 ;; Hardware stack levels used:    1
 15153 ;; Hardware stack levels required when called:    3
 15154 ;; This function calls:
 15155 ;;		_i2c_eeprom_readByte
 15156 ;;		_i2c_eeprom_writeByte
 15157 ;; This function is called by:
 15158 ;;		_main
 15159 ;; This function uses a non-reentrant model
 15160 ;;
 15161                           
 15162                           	psect	text66
 15163  006B86                     __ptext66:
 15164                           	opt stack 0
 15165  006B86                     __normal_mode:
 15166                           	opt stack 27
 15167                           
 15168                           ;main.c: 153: if(i2c_eeprom_readByte(0x100)==0x94)
 15169                           
 15170                           ; BSR set to: 0
 15171                           ;incstack = 0
 15172  006B86  0E01               	movlw	1
 15173  006B88  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 15174  006B8A  0E00               	movlw	0
 15175  006B8C  6E12               	movwf	i2c_eeprom_readByte@address,c
 15176  006B8E  ECF2  F037         	call	_i2c_eeprom_readByte	;wreg free
 15177  006B92  0A94               	xorlw	148
 15178  006B94  A4D8               	btfss	status,2,c
 15179  006B96  D00A               	goto	l877
 15180                           
 15181                           ;main.c: 154: {;main.c: 156: i2c_eeprom_writeByte(0x100, 0x00);
 15182  006B98  0E01               	movlw	1
 15183  006B9A  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 15184  006B9C  0E00               	movlw	0
 15185  006B9E  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 15186  006BA0  0E00               	movlw	0
 15187  006BA2  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 15188  006BA4  EC5A  F039         	call	_i2c_eeprom_writeByte	;wreg free
 15189                           
 15190                           ;main.c: 158: return 0;
 15191  006BA8  0E00               	movlw	0
 15192                           
 15193                           ;main.c: 159: }
 15194  006BAA  0012               	return	
 15195  006BAC                     l877:
 15196                           
 15197                           ;main.c: 160: else if(i2c_eeprom_readByte(0x100)==0x78)
 15198  006BAC  0E01               	movlw	1
 15199  006BAE  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 15200  006BB0  0E00               	movlw	0
 15201  006BB2  6E12               	movwf	i2c_eeprom_readByte@address,c
 15202  006BB4  ECF2  F037         	call	_i2c_eeprom_readByte	;wreg free
 15203  006BB8  0A78               	xorlw	120
 15204  006BBA  A4D8               	btfss	status,2,c
 15205  006BBC  D00A               	goto	l880
 15206                           
 15207                           ;main.c: 161: {;main.c: 163: i2c_eeprom_writeByte(0x100, 0x00);
 15208  006BBE  0E01               	movlw	1
 15209  006BC0  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 15210  006BC2  0E00               	movlw	0
 15211  006BC4  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 15212  006BC6  0E00               	movlw	0
 15213  006BC8  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 15214  006BCA  EC5A  F039         	call	_i2c_eeprom_writeByte	;wreg free
 15215                           
 15216                           ;main.c: 165: return 1;
 15217  006BCE  0E01               	movlw	1
 15218                           
 15219                           ;main.c: 166: }
 15220  006BD0  0012               	return	
 15221  006BD2                     l880:
 15222                           
 15223                           ;main.c: 167: else if(!PORTAbits.RA0)
 15224  006BD2  B080               	btfsc	3968,0,c	;volatile
 15225  006BD4  D002               	goto	l882
 15226                           
 15227                           ;main.c: 168: {;main.c: 170: return 0;
 15228  006BD6  0E00               	movlw	0
 15229                           
 15230                           ;main.c: 171: }
 15231  006BD8  0012               	return	
 15232  006BDA                     l882:
 15233                           
 15234                           ;main.c: 172: else;main.c: 173: {;main.c: 175: return 1;
 15235  006BDA  0E01               	movlw	1
 15236  006BDC  0012               	return	
 15237  006BDE                     __end_of__normal_mode:
 15238                           	opt stack 0
 15239                           tblptru	equ	0xFF8
 15240                           tblptrh	equ	0xFF7
 15241                           tblptrl	equ	0xFF6
 15242                           tablat	equ	0xFF5
 15243                           prodh	equ	0xFF4
 15244                           prodl	equ	0xFF3
 15245                           intcon	equ	0xFF2
 15246                           intcon2	equ	0xFF1
 15247                           intcon3	equ	0xFF0
 15248                           postinc0	equ	0xFEE
 15249                           wreg	equ	0xFE8
 15250                           indf1	equ	0xFE7
 15251                           postdec1	equ	0xFE5
 15252                           plusw1	equ	0xFE3
 15253                           fsr1h	equ	0xFE2
 15254                           fsr1l	equ	0xFE1
 15255                           indf2	equ	0xFDF
 15256                           postinc2	equ	0xFDE
 15257                           postdec2	equ	0xFDD
 15258                           plusw2	equ	0xFDB
 15259                           fsr2h	equ	0xFDA
 15260                           fsr2l	equ	0xFD9
 15261                           status	equ	0xFD8
 15262                           
 15263 ;; *************** function _i2c_eeprom_readByte *****************
 15264 ;; Defined at:
 15265 ;;		line 359 in file "i2c.c"
 15266 ;; Parameters:    Size  Location     Type
 15267 ;;  address         2   17[COMRAM] unsigned int 
 15268 ;; Auto vars:     Size  Location     Type
 15269 ;;  addr            1   23[COMRAM] unsigned char 
 15270 ;;  slave_addres    1   22[COMRAM] unsigned char 
 15271 ;; Return value:  Size  Location     Type
 15272 ;;                  1    wreg      unsigned char 
 15273 ;; Registers used:
 15274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15275 ;; Tracked objects:
 15276 ;;		On entry : 0/0
 15277 ;;		On exit  : 0/0
 15278 ;;		Unchanged: 0/0
 15279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15280 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15282 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15283 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15284 ;;Total ram usage:        7 bytes
 15285 ;; Hardware stack levels used:    1
 15286 ;; Hardware stack levels required when called:    2
 15287 ;; This function calls:
 15288 ;;		__i2c_read
 15289 ;;		__i2c_write
 15290 ;;		_i2c_set_frequency
 15291 ;; This function is called by:
 15292 ;;		__normal_mode
 15293 ;; This function uses a non-reentrant model
 15294 ;;
 15295                           
 15296                           	psect	text67
 15297  006FE4                     __ptext67:
 15298                           	opt stack 0
 15299  006FE4                     _i2c_eeprom_readByte:
 15300                           	opt stack 27
 15301                           
 15302                           ;i2c.c: 361: uint8_t slave_address;;i2c.c: 362: uint8_t addr;;i2c.c: 363: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 15303                           
 15304                           ;incstack = 0
 15305  006FE4  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 15306  006FE8  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 15307  006FEC  0E07               	movlw	7
 15308  006FEE  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 15309  006FF0                     u10285:
 15310  006FF0  90D8               	bcf	status,0,c
 15311  006FF2  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 15312  006FF4  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 15313  006FF6  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 15314  006FF8  D7FB               	goto	u10285
 15315  006FFA  5014               	movf	??_i2c_eeprom_readByte,w,c
 15316  006FFC  0B0E               	andlw	14
 15317  006FFE  09A0               	iorlw	160
 15318  007000  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 15319                           
 15320                           ;i2c.c: 364: addr = address & 0xFF;
 15321  007002  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 15322                           
 15323                           ;i2c.c: 367: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 15324  007006  0E02               	movlw	2
 15325  007008  ECA1  F03B         	call	_i2c_set_frequency
 15326                           
 15327                           ;i2c.c: 369: _i2c_write(slave_address, &addr, 1);
 15328  00700C  0E18               	movlw	low i2c_eeprom_readByte@addr
 15329  00700E  6E06               	movwf	__i2c_write@data,c
 15330  007010  0E00               	movlw	high i2c_eeprom_readByte@addr
 15331  007012  6E07               	movwf	__i2c_write@data+1,c
 15332  007014  0E01               	movlw	1
 15333  007016  6E08               	movwf	__i2c_write@length,c
 15334  007018  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 15335  00701A  EC8D  F038         	call	__i2c_write
 15336                           
 15337                           ;i2c.c: 370: _i2c_read(slave_address, &addr, 1);
 15338  00701E  0E18               	movlw	low i2c_eeprom_readByte@addr
 15339  007020  6E06               	movwf	__i2c_read@data,c
 15340  007022  0E00               	movlw	high i2c_eeprom_readByte@addr
 15341  007024  6E07               	movwf	__i2c_read@data+1,c
 15342  007026  0E01               	movlw	1
 15343  007028  6E08               	movwf	__i2c_read@length,c
 15344  00702A  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 15345  00702C  ECB8  F02E         	call	__i2c_read
 15346                           
 15347                           ;i2c.c: 371: return addr;
 15348  007030  5018               	movf	i2c_eeprom_readByte@addr,w,c
 15349  007032  0012               	return	
 15350  007034                     __end_of_i2c_eeprom_readByte:
 15351                           	opt stack 0
 15352                           tblptru	equ	0xFF8
 15353                           tblptrh	equ	0xFF7
 15354                           tblptrl	equ	0xFF6
 15355                           tablat	equ	0xFF5
 15356                           prodh	equ	0xFF4
 15357                           prodl	equ	0xFF3
 15358                           intcon	equ	0xFF2
 15359                           intcon2	equ	0xFF1
 15360                           intcon3	equ	0xFF0
 15361                           postinc0	equ	0xFEE
 15362                           wreg	equ	0xFE8
 15363                           indf1	equ	0xFE7
 15364                           postdec1	equ	0xFE5
 15365                           plusw1	equ	0xFE3
 15366                           fsr1h	equ	0xFE2
 15367                           fsr1l	equ	0xFE1
 15368                           indf2	equ	0xFDF
 15369                           postinc2	equ	0xFDE
 15370                           postdec2	equ	0xFDD
 15371                           plusw2	equ	0xFDB
 15372                           fsr2h	equ	0xFDA
 15373                           fsr2l	equ	0xFD9
 15374                           status	equ	0xFD8
 15375                           
 15376 ;; *************** function __i2c_read *****************
 15377 ;; Defined at:
 15378 ;;		line 153 in file "i2c.c"
 15379 ;; Parameters:    Size  Location     Type
 15380 ;;  slave_addres    1    wreg     unsigned char 
 15381 ;;  data            2    5[COMRAM] PTR unsigned char 
 15382 ;;		 -> i2c_eeprom_readByte@addr(1), 
 15383 ;;  length          1    7[COMRAM] unsigned char 
 15384 ;; Auto vars:     Size  Location     Type
 15385 ;;  slave_addres    1   15[COMRAM] unsigned char 
 15386 ;;  cntr            1   16[COMRAM] unsigned char 
 15387 ;; Return value:  Size  Location     Type
 15388 ;;                  1    wreg      void 
 15389 ;; Registers used:
 15390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15391 ;; Tracked objects:
 15392 ;;		On entry : 0/0
 15393 ;;		On exit  : 0/0
 15394 ;;		Unchanged: 0/0
 15395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15396 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15397 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15398 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15399 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15400 ;;Total ram usage:       12 bytes
 15401 ;; Hardware stack levels used:    1
 15402 ;; Hardware stack levels required when called:    1
 15403 ;; This function calls:
 15404 ;;		__i2c_acknowledge
 15405 ;;		__i2c_get
 15406 ;;		__i2c_not_acknowledge
 15407 ;;		__i2c_send
 15408 ;;		__i2c_start
 15409 ;;		__i2c_stop
 15410 ;;		__i2c_wait_idle
 15411 ;; This function is called by:
 15412 ;;		_i2c_eeprom_readByte
 15413 ;;		_i2c_eeprom_read
 15414 ;; This function uses a non-reentrant model
 15415 ;;
 15416                           
 15417                           	psect	text68
 15418  005D70                     __ptext68:
 15419                           	opt stack 0
 15420  005D70                     __i2c_read:
 15421                           	opt stack 27
 15422                           
 15423                           ;incstack = 0
 15424                           ;__i2c_read@slave_address stored from wreg
 15425  005D70  6E10               	movwf	__i2c_read@slave_address,c
 15426                           
 15427                           ;i2c.c: 155: uint8_t cntr;;i2c.c: 157: _i2c_wait_idle();
 15428  005D72  ECEF  F035         	call	__i2c_wait_idle	;wreg free
 15429                           
 15430                           ;i2c.c: 158: _i2c_start();
 15431  005D76  EC9D  F03D         	call	__i2c_start	;wreg free
 15432                           
 15433                           ;i2c.c: 159: _i2c_wait_idle();
 15434  005D7A  ECEF  F035         	call	__i2c_wait_idle	;wreg free
 15435                           
 15436                           ;i2c.c: 160: _i2c_send(slave_address | 0x01);
 15437  005D7E  5010               	movf	__i2c_read@slave_address,w,c
 15438  005D80  0901               	iorlw	1
 15439  005D82  ECA1  F03D         	call	__i2c_send
 15440                           
 15441                           ;i2c.c: 161: _i2c_wait_idle();
 15442  005D86  ECEF  F035         	call	__i2c_wait_idle	;wreg free
 15443                           
 15444                           ;i2c.c: 163: for(cntr=0; cntr<length-1; ++cntr)
 15445  005D8A  0E00               	movlw	0
 15446  005D8C  6E11               	movwf	__i2c_read@cntr,c
 15447  005D8E  D00E               	goto	l1144
 15448  005D90                     
 15449                           ;i2c.c: 164: {;i2c.c: 165: data[cntr] = _i2c_get();
 15450  005D90  5011               	movf	__i2c_read@cntr,w,c
 15451  005D92  0D01               	mullw	1
 15452  005D94  50F3               	movf	prodl,w,c
 15453  005D96  2406               	addwf	__i2c_read@data,w,c
 15454  005D98  6ED9               	movwf	fsr2l,c
 15455  005D9A  50F4               	movf	prodh,w,c
 15456  005D9C  2007               	addwfc	__i2c_read@data+1,w,c
 15457  005D9E  6EDA               	movwf	fsr2h,c
 15458  005DA0  EC67  F03D         	call	__i2c_get	;wreg free
 15459  005DA4  6EDF               	movwf	indf2,c
 15460                           
 15461                           ;i2c.c: 166: _i2c_acknowledge();
 15462  005DA6  EC6C  F03D         	call	__i2c_acknowledge	;wreg free
 15463  005DAA  2A11               	incf	__i2c_read@cntr,f,c
 15464  005DAC                     l1144:
 15465  005DAC  0EFF               	movlw	255
 15466  005DAE  6E09               	movwf	??__i2c_read& (0+255),c
 15467  005DB0  0EFF               	movlw	255
 15468  005DB2  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 15469  005DB4  5008               	movf	__i2c_read@length,w,c
 15470  005DB6  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 15471  005DB8  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 15472  005DBA  5009               	movf	??__i2c_read,w,c
 15473  005DBC  260B               	addwf	??__i2c_read+2,f,c
 15474  005DBE  500A               	movf	??__i2c_read+1,w,c
 15475  005DC0  220C               	addwfc	??__i2c_read+3,f,c
 15476  005DC2  5011               	movf	__i2c_read@cntr,w,c
 15477  005DC4  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 15478  005DC6  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 15479  005DC8  500B               	movf	??__i2c_read+2,w,c
 15480  005DCA  5C0D               	subwf	??__i2c_read+4,w,c
 15481  005DCC  500E               	movf	??__i2c_read+5,w,c
 15482  005DCE  0A80               	xorlw	128
 15483  005DD0  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 15484  005DD2  500C               	movf	??__i2c_read+3,w,c
 15485  005DD4  0A80               	xorlw	128
 15486  005DD6  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 15487  005DD8  A0D8               	btfss	status,0,c
 15488  005DDA  D7DA               	goto	l1145
 15489                           
 15490                           ;i2c.c: 167: };i2c.c: 168: data[cntr] = _i2c_get();
 15491  005DDC  5011               	movf	__i2c_read@cntr,w,c
 15492  005DDE  0D01               	mullw	1
 15493  005DE0  50F3               	movf	prodl,w,c
 15494  005DE2  2406               	addwf	__i2c_read@data,w,c
 15495  005DE4  6ED9               	movwf	fsr2l,c
 15496  005DE6  50F4               	movf	prodh,w,c
 15497  005DE8  2007               	addwfc	__i2c_read@data+1,w,c
 15498  005DEA  6EDA               	movwf	fsr2h,c
 15499  005DEC  EC67  F03D         	call	__i2c_get	;wreg free
 15500  005DF0  6EDF               	movwf	indf2,c
 15501                           
 15502                           ;i2c.c: 169: _i2c_not_acknowledge();
 15503  005DF2  EC62  F03D         	call	__i2c_not_acknowledge	;wreg free
 15504                           
 15505                           ;i2c.c: 171: _i2c_stop();
 15506  005DF6  EC99  F03D         	call	__i2c_stop	;wreg free
 15507  005DFA  0012               	return		;funcret
 15508  005DFC                     __end_of__i2c_read:
 15509                           	opt stack 0
 15510                           tblptru	equ	0xFF8
 15511                           tblptrh	equ	0xFF7
 15512                           tblptrl	equ	0xFF6
 15513                           tablat	equ	0xFF5
 15514                           prodh	equ	0xFF4
 15515                           prodl	equ	0xFF3
 15516                           intcon	equ	0xFF2
 15517                           intcon2	equ	0xFF1
 15518                           intcon3	equ	0xFF0
 15519                           postinc0	equ	0xFEE
 15520                           wreg	equ	0xFE8
 15521                           indf1	equ	0xFE7
 15522                           postdec1	equ	0xFE5
 15523                           plusw1	equ	0xFE3
 15524                           fsr1h	equ	0xFE2
 15525                           fsr1l	equ	0xFE1
 15526                           indf2	equ	0xFDF
 15527                           postinc2	equ	0xFDE
 15528                           postdec2	equ	0xFDD
 15529                           plusw2	equ	0xFDB
 15530                           fsr2h	equ	0xFDA
 15531                           fsr2l	equ	0xFD9
 15532                           status	equ	0xFD8
 15533                           
 15534 ;; *************** function __i2c_not_acknowledge *****************
 15535 ;; Defined at:
 15536 ;;		line 90 in file "i2c.c"
 15537 ;; Parameters:    Size  Location     Type
 15538 ;;		None
 15539 ;; Auto vars:     Size  Location     Type
 15540 ;;		None
 15541 ;; Return value:  Size  Location     Type
 15542 ;;                  1    wreg      void 
 15543 ;; Registers used:
 15544 ;;		None
 15545 ;; Tracked objects:
 15546 ;;		On entry : 0/0
 15547 ;;		On exit  : 0/0
 15548 ;;		Unchanged: 0/0
 15549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15554 ;;Total ram usage:        0 bytes
 15555 ;; Hardware stack levels used:    1
 15556 ;; This function calls:
 15557 ;;		Nothing
 15558 ;; This function is called by:
 15559 ;;		__i2c_read
 15560 ;; This function uses a non-reentrant model
 15561 ;;
 15562                           
 15563                           	psect	text69
 15564  007AC4                     __ptext69:
 15565                           	opt stack 0
 15566  007AC4                     __i2c_not_acknowledge:
 15567                           	opt stack 27
 15568                           
 15569                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 15570                           
 15571                           ;incstack = 0
 15572  007AC4  8AC5               	bsf	4037,5,c	;volatile
 15573                           
 15574                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 15575  007AC6  88C5               	bsf	4037,4,c	;volatile
 15576  007AC8  A8C5               	btfss	4037,4,c	;volatile
 15577  007ACA  0012               	return	
 15578  007ACC  D7FD               	goto	l1119
 15579  007ACE                     __end_of__i2c_not_acknowledge:
 15580                           	opt stack 0
 15581                           tblptru	equ	0xFF8
 15582                           tblptrh	equ	0xFF7
 15583                           tblptrl	equ	0xFF6
 15584                           tablat	equ	0xFF5
 15585                           prodh	equ	0xFF4
 15586                           prodl	equ	0xFF3
 15587                           intcon	equ	0xFF2
 15588                           intcon2	equ	0xFF1
 15589                           intcon3	equ	0xFF0
 15590                           postinc0	equ	0xFEE
 15591                           wreg	equ	0xFE8
 15592                           indf1	equ	0xFE7
 15593                           postdec1	equ	0xFE5
 15594                           plusw1	equ	0xFE3
 15595                           fsr1h	equ	0xFE2
 15596                           fsr1l	equ	0xFE1
 15597                           indf2	equ	0xFDF
 15598                           postinc2	equ	0xFDE
 15599                           postdec2	equ	0xFDD
 15600                           plusw2	equ	0xFDB
 15601                           fsr2h	equ	0xFDA
 15602                           fsr2l	equ	0xFD9
 15603                           status	equ	0xFD8
 15604                           
 15605 ;; *************** function __i2c_get *****************
 15606 ;; Defined at:
 15607 ;;		line 67 in file "i2c.c"
 15608 ;; Parameters:    Size  Location     Type
 15609 ;;		None
 15610 ;; Auto vars:     Size  Location     Type
 15611 ;;		None
 15612 ;; Return value:  Size  Location     Type
 15613 ;;                  1    wreg      unsigned char 
 15614 ;; Registers used:
 15615 ;;		wreg, status,2
 15616 ;; Tracked objects:
 15617 ;;		On entry : 0/0
 15618 ;;		On exit  : 0/0
 15619 ;;		Unchanged: 0/0
 15620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15625 ;;Total ram usage:        0 bytes
 15626 ;; Hardware stack levels used:    1
 15627 ;; This function calls:
 15628 ;;		Nothing
 15629 ;; This function is called by:
 15630 ;;		__i2c_read
 15631 ;; This function uses a non-reentrant model
 15632 ;;
 15633                           
 15634                           	psect	text70
 15635  007ACE                     __ptext70:
 15636                           	opt stack 0
 15637  007ACE                     __i2c_get:
 15638                           	opt stack 27
 15639                           
 15640                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 15641                           
 15642                           ;incstack = 0
 15643  007ACE  86C5               	bsf	4037,3,c	;volatile
 15644  007AD0  B6C5               	btfsc	4037,3,c	;volatile
 15645  007AD2  D7FE               	goto	l1101
 15646                           
 15647                           ;i2c.c: 71: return SSP1BUF;
 15648  007AD4  50C9               	movf	4041,w,c	;volatile
 15649  007AD6  0012               	return	
 15650  007AD8                     __end_of__i2c_get:
 15651                           	opt stack 0
 15652                           tblptru	equ	0xFF8
 15653                           tblptrh	equ	0xFF7
 15654                           tblptrl	equ	0xFF6
 15655                           tablat	equ	0xFF5
 15656                           prodh	equ	0xFF4
 15657                           prodl	equ	0xFF3
 15658                           intcon	equ	0xFF2
 15659                           intcon2	equ	0xFF1
 15660                           intcon3	equ	0xFF0
 15661                           postinc0	equ	0xFEE
 15662                           wreg	equ	0xFE8
 15663                           indf1	equ	0xFE7
 15664                           postdec1	equ	0xFE5
 15665                           plusw1	equ	0xFE3
 15666                           fsr1h	equ	0xFE2
 15667                           fsr1l	equ	0xFE1
 15668                           indf2	equ	0xFDF
 15669                           postinc2	equ	0xFDE
 15670                           postdec2	equ	0xFDD
 15671                           plusw2	equ	0xFDB
 15672                           fsr2h	equ	0xFDA
 15673                           fsr2l	equ	0xFD9
 15674                           status	equ	0xFD8
 15675                           
 15676 ;; *************** function __i2c_acknowledge *****************
 15677 ;; Defined at:
 15678 ;;		line 82 in file "i2c.c"
 15679 ;; Parameters:    Size  Location     Type
 15680 ;;		None
 15681 ;; Auto vars:     Size  Location     Type
 15682 ;;		None
 15683 ;; Return value:  Size  Location     Type
 15684 ;;                  1    wreg      void 
 15685 ;; Registers used:
 15686 ;;		None
 15687 ;; Tracked objects:
 15688 ;;		On entry : 0/0
 15689 ;;		On exit  : 0/0
 15690 ;;		Unchanged: 0/0
 15691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15696 ;;Total ram usage:        0 bytes
 15697 ;; Hardware stack levels used:    1
 15698 ;; This function calls:
 15699 ;;		Nothing
 15700 ;; This function is called by:
 15701 ;;		__i2c_read
 15702 ;; This function uses a non-reentrant model
 15703 ;;
 15704                           
 15705                           	psect	text71
 15706  007AD8                     __ptext71:
 15707                           	opt stack 0
 15708  007AD8                     __i2c_acknowledge:
 15709                           	opt stack 27
 15710                           
 15711                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 15712                           
 15713                           ;incstack = 0
 15714  007AD8  9AC5               	bcf	4037,5,c	;volatile
 15715                           
 15716                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 15717  007ADA  88C5               	bsf	4037,4,c	;volatile
 15718  007ADC  A8C5               	btfss	4037,4,c	;volatile
 15719  007ADE  0012               	return	
 15720  007AE0  D7FD               	goto	l1113
 15721  007AE2                     __end_of__i2c_acknowledge:
 15722                           	opt stack 0
 15723                           tblptru	equ	0xFF8
 15724                           tblptrh	equ	0xFF7
 15725                           tblptrl	equ	0xFF6
 15726                           tablat	equ	0xFF5
 15727                           prodh	equ	0xFF4
 15728                           prodl	equ	0xFF3
 15729                           intcon	equ	0xFF2
 15730                           intcon2	equ	0xFF1
 15731                           intcon3	equ	0xFF0
 15732                           postinc0	equ	0xFEE
 15733                           wreg	equ	0xFE8
 15734                           indf1	equ	0xFE7
 15735                           postdec1	equ	0xFE5
 15736                           plusw1	equ	0xFE3
 15737                           fsr1h	equ	0xFE2
 15738                           fsr1l	equ	0xFE1
 15739                           indf2	equ	0xFDF
 15740                           postinc2	equ	0xFDE
 15741                           postdec2	equ	0xFDD
 15742                           plusw2	equ	0xFDB
 15743                           fsr2h	equ	0xFDA
 15744                           fsr2l	equ	0xFD9
 15745                           status	equ	0xFD8
 15746                           
 15747 ;; *************** function _USBDeviceTasks *****************
 15748 ;; Defined at:
 15749 ;;		line 477 in file "usb_device.c"
 15750 ;; Parameters:    Size  Location     Type
 15751 ;;		None
 15752 ;; Auto vars:     Size  Location     Type
 15753 ;;  i               1   31[COMRAM] unsigned char 
 15754 ;; Return value:  Size  Location     Type
 15755 ;;                  1    wreg      void 
 15756 ;; Registers used:
 15757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 15758 ;; Tracked objects:
 15759 ;;		On entry : 0/0
 15760 ;;		On exit  : 0/0
 15761 ;;		Unchanged: 0/0
 15762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15767 ;;Total ram usage:        1 bytes
 15768 ;; Hardware stack levels used:    1
 15769 ;; Hardware stack levels required when called:    8
 15770 ;; This function calls:
 15771 ;;		_USBCtrlEPAllowStatusStage
 15772 ;;		_USBCtrlEPService
 15773 ;;		_USBDeviceInit
 15774 ;;		_USBIncrement1msInternalTimers
 15775 ;;		_USBStallHandler
 15776 ;;		_USBSuspend
 15777 ;;		_USBWakeFromSuspend
 15778 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15779 ;; This function is called by:
 15780 ;;		_main
 15781 ;; This function uses a non-reentrant model
 15782 ;;
 15783                           
 15784                           	psect	text72
 15785  003508                     __ptext72:
 15786                           	opt stack 0
 15787  003508                     _USBDeviceTasks:
 15788                           	opt stack 22
 15789                           
 15790                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 15791                           
 15792                           ; BSR set to: 15
 15793                           
 15794                           ; BSR set to: 15
 15795                           ;usb_device.c: 543: return;
 15796                           
 15797                           ; BSR set to: 15
 15798                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 15799                           
 15800                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 15801                           
 15802                           ;usb_device.c: 511: UIE = 0;
 15803                           
 15804                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 15805                           
 15806                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 15807                           
 15808                           ;incstack = 0
 15809  003508  505F               	movf	_USBDeviceState,w,c
 15810  00350A  A4D8               	btfss	status,2,c
 15811  00350C  D011               	goto	l150
 15812                           
 15813                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 15814  00350E  0E00               	movlw	0
 15815  003510  6E65               	movwf	3941,c	;volatile
 15816                           
 15817                           ;usb_device.c: 572: UIE = 0;
 15818  003512  0E00               	movlw	0
 15819  003514  010F               	movlb	15	; () banked
 15820  003516  6F36               	movwf	54,b	;volatile
 15821                           
 15822                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 15823  003518  0E16               	movlw	22
 15824  00351A  6F39               	movwf	57,b	;volatile
 15825  00351C  0E9F               	movlw	159
 15826  00351E  6F37               	movwf	55,b	;volatile
 15827  003520  0E7B               	movlw	123
 15828  003522  6F36               	movwf	54,b	;volatile
 15829                           
 15830                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 15831  003524  D001               	goto	l151
 15832  003526                     l152:
 15833  003526  8665               	bsf	3941,3,c	;volatile
 15834  003528                     l151:
 15835  003528  A665               	btfss	3941,3,c	;volatile
 15836  00352A  D7FD               	goto	l152
 15837                           
 15838                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 15839  00352C  0E01               	movlw	1
 15840  00352E  6E5F               	movwf	_USBDeviceState,c
 15841  003530                     l150:
 15842                           
 15843                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 15844  003530  045F               	decf	_USBDeviceState,w,c
 15845  003532  B4D8               	btfsc	status,2,c
 15846                           
 15847                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 15848  003534  BA65               	btfsc	3941,5,c	;volatile
 15849  003536  D009               	goto	l155
 15850                           
 15851                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 15852  003538  0E00               	movlw	0
 15853  00353A  6E62               	movwf	3938,c	;volatile
 15854                           
 15855                           ;usb_device.c: 612: UIE=0;
 15856  00353C  0E00               	movlw	0
 15857  00353E  010F               	movlb	15	; () banked
 15858  003540  6F36               	movwf	54,b	;volatile
 15859                           
 15860                           ; BSR set to: 15
 15861                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 15862  003542  8136               	bsf	54,0,b	;volatile
 15863                           
 15864                           ; BSR set to: 15
 15865                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 15866  003544  8936               	bsf	54,4,b	;volatile
 15867                           
 15868                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 15869  003546  0E02               	movlw	2
 15870  003548  6E5F               	movwf	_USBDeviceState,c
 15871  00354A                     l155:
 15872                           
 15873                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 15874                           
 15875                           ; BSR set to: 15
 15876                           
 15877                           ; BSR set to: 15
 15878  00354A  A462               	btfss	3938,2,c	;volatile
 15879  00354C  D006               	goto	l156
 15880  00354E  010F               	movlb	15	; () banked
 15881  003550  A536               	btfss	54,2,b	;volatile
 15882  003552  D003               	goto	l156
 15883                           
 15884                           ; BSR set to: 15
 15885                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 15886  003554  9462               	bcf	3938,2,c	;volatile
 15887                           
 15888                           ; BSR set to: 15
 15889                           ;usb_device.c: 640: USBWakeFromSuspend();
 15890  003556  EC2B  F03A         	call	_USBWakeFromSuspend	;wreg free
 15891  00355A                     l156:
 15892                           
 15893                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 15894  00355A  A265               	btfss	3941,1,c	;volatile
 15895  00355C  D002               	goto	l157
 15896                           
 15897                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 15898  00355E  98A1               	bcf	4001,4,c	;volatile
 15899                           
 15900                           ;usb_device.c: 650: return;
 15901  003560  0012               	return	
 15902  003562                     l157:
 15903                           
 15904                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 15905  003562  A062               	btfss	3938,0,c	;volatile
 15906  003564  D008               	goto	l158
 15907  003566  010F               	movlb	15	; () banked
 15908  003568  A136               	btfss	54,0,b	;volatile
 15909  00356A  D005               	goto	l158
 15910                           
 15911                           ; BSR set to: 15
 15912                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 15913  00356C  ECE8  F01B         	call	_USBDeviceInit	;wreg free
 15914                           
 15915                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 15916  003570  0E04               	movlw	4
 15917  003572  6E5F               	movwf	_USBDeviceState,c
 15918                           
 15919                           ;usb_device.c: 681: (UIR &= 0xFE);
 15920  003574  9062               	bcf	3938,0,c	;volatile
 15921  003576                     l158:
 15922                           
 15923                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 15924  003576  A862               	btfss	3938,4,c	;volatile
 15925  003578  D004               	goto	l159
 15926  00357A  010F               	movlb	15	; () banked
 15927  00357C  B936               	btfsc	54,4,b	;volatile
 15928                           
 15929                           ; BSR set to: 15
 15930                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 15931  00357E  EC30  F03B         	call	_USBSuspend	;wreg free
 15932  003582                     l159:
 15933                           
 15934                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 15935  003582  AC62               	btfss	3938,6,c	;volatile
 15936  003584  D01C               	goto	l163
 15937                           
 15938                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 15939  003586  010F               	movlb	15	; () banked
 15940  003588  AD36               	btfss	54,6,b	;volatile
 15941  00358A  D00E               	goto	l161
 15942                           
 15943                           ; BSR set to: 15
 15944                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 15945  00358C  0E00               	movlw	0
 15946  00358E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15947  003590  0E73               	movlw	115
 15948  003592  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15949  003594  0E00               	movlw	0
 15950  003596  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15951  003598  0E00               	movlw	0
 15952  00359A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15953  00359C  0E00               	movlw	0
 15954  00359E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15955  0035A0  0E01               	movlw	1
 15956  0035A2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15957  0035A4  EC41  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15958  0035A8                     l161:
 15959                           
 15960                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 15961  0035A8  9C62               	bcf	3938,6,c	;volatile
 15962                           
 15963                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 15964  0035AA  EC72  F03C         	call	_USBIncrement1msInternalTimers	;wreg free
 15965                           
 15966                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 15967  0035AE  0100               	movlb	0	; () banked
 15968  0035B0  51B1               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 15969  0035B2  A4D8               	btfss	status,2,c
 15970                           
 15971                           ; BSR set to: 0
 15972                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 15973  0035B4  07B1               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 15974                           
 15975                           ; BSR set to: 0
 15976                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 15977                           
 15978                           ; BSR set to: 0
 15979  0035B6  51B1               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 15980  0035B8  B4D8               	btfsc	status,2,c
 15981                           
 15982                           ; BSR set to: 0
 15983                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 15984  0035BA  ECAC  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15985  0035BE                     l163:
 15986                           
 15987                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 15988  0035BE  AA62               	btfss	3938,5,c	;volatile
 15989  0035C0  D004               	goto	l164
 15990  0035C2  010F               	movlb	15	; () banked
 15991  0035C4  BB36               	btfsc	54,5,b	;volatile
 15992                           
 15993                           ; BSR set to: 15
 15994                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 15995  0035C6  ECD5  F038         	call	_USBStallHandler	;wreg free
 15996  0035CA                     l164:
 15997                           
 15998                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 15999  0035CA  A262               	btfss	3938,1,c	;volatile
 16000  0035CC  D012               	goto	l165
 16001  0035CE  010F               	movlb	15	; () banked
 16002  0035D0  A336               	btfss	54,1,b	;volatile
 16003  0035D2  D00F               	goto	l165
 16004                           
 16005                           ; BSR set to: 15
 16006                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 16007  0035D4  0E7F               	movlw	127
 16008  0035D6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16009  0035D8  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16010  0035DA  0E00               	movlw	0
 16011  0035DC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16012  0035DE  0E00               	movlw	0
 16013  0035E0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16014  0035E2  0E00               	movlw	0
 16015  0035E4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16016  0035E6  0E01               	movlw	1
 16017  0035E8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16018  0035EA  EC41  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16019                           
 16020                           ;usb_device.c: 759: {UEIR = 0;};
 16021  0035EE  0E00               	movlw	0
 16022  0035F0  6E63               	movwf	3939,c	;volatile
 16023  0035F2                     l165:
 16024                           
 16025                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 16026  0035F2  0E04               	movlw	4
 16027  0035F4  605F               	cpfslt	_USBDeviceState,c
 16028  0035F6  D002               	goto	l166
 16029                           
 16030                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 16031  0035F8  98A1               	bcf	4001,4,c	;volatile
 16032                           
 16033                           ;usb_device.c: 777: return;
 16034  0035FA  0012               	return	
 16035  0035FC                     l166:
 16036                           
 16037                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 16038  0035FC  010F               	movlb	15	; () banked
 16039  0035FE  A736               	btfss	54,3,b	;volatile
 16040  003600  D03C               	goto	u11190
 16041                           
 16042                           ; BSR set to: 15
 16043                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 16044  003602  0E00               	movlw	0
 16045  003604  6E20               	movwf	USBDeviceTasks@i,c
 16046  003606                     l13807:
 16047                           
 16048                           ; BSR set to: 15
 16049  003606  0E03               	movlw	3
 16050  003608  6420               	cpfsgt	USBDeviceTasks@i,c
 16051  00360A  D001               	goto	l168
 16052  00360C  D036               	goto	u11190
 16053  00360E                     l168:
 16054                           
 16055                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 16056  00360E  A662               	btfss	3938,3,c	;volatile
 16057  003610  D034               	goto	u11190
 16058                           
 16059                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 16060  003612  CF64 F0BC          	movff	3940,_USTATcopy	;volatile
 16061                           
 16062                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 16063  003616  0100               	movlb	0	; () banked
 16064  003618  31BC               	rrcf	_USTATcopy& (0+255),w,b
 16065  00361A  32E8               	rrcf	wreg,f,c
 16066  00361C  32E8               	rrcf	wreg,f,c
 16067  00361E  0B0F               	andlw	15
 16068  003620  6FB3               	movwf	_endpoint_number& (0+255),b
 16069                           
 16070                           ; BSR set to: 0
 16071                           ;usb_device.c: 793: (UIR &= 0xF7);
 16072  003622  9662               	bcf	3938,3,c	;volatile
 16073                           
 16074                           ; BSR set to: 0
 16075                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 16076  003624  B5BC               	btfsc	_USTATcopy& (0+255),2,b
 16077  003626  D007               	goto	l171
 16078                           
 16079                           ; BSR set to: 0
 16080                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 16081  003628  51B3               	movf	_endpoint_number& (0+255),w,b
 16082  00362A  0D01               	mullw	1
 16083  00362C  0E5E               	movlw	low _ep_data_out
 16084  00362E  24F3               	addwf	prodl,w,c
 16085  003630  6ED9               	movwf	fsr2l,c
 16086  003632  0E01               	movlw	high _ep_data_out
 16087  003634  D007               	goto	L5
 16088  003636                     l171:
 16089                           
 16090                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 16091                           
 16092                           ; BSR set to: 1
 16093  003636  0100               	movlb	0	; () banked
 16094  003638  51B3               	movf	_endpoint_number& (0+255),w,b
 16095  00363A  0D01               	mullw	1
 16096  00363C  0E61               	movlw	low _ep_data_in
 16097  00363E  24F3               	addwf	prodl,w,c
 16098  003640  6ED9               	movwf	fsr2l,c
 16099  003642  0E01               	movlw	high _ep_data_in
 16100  003644                     L5:
 16101  003644  20F4               	addwfc	prodh,w,c
 16102  003646  6EDA               	movwf	fsr2h,c
 16103  003648  0101               	movlb	1	; () banked
 16104  00364A  70DF               	btg	indf2,0,c
 16105                           
 16106                           ; BSR set to: 1
 16107                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 16108                           
 16109                           ; BSR set to: 1
 16110  00364C  0100               	movlb	0	; () banked
 16111  00364E  51B3               	movf	_endpoint_number& (0+255),w,b
 16112  003650  A4D8               	btfss	status,2,c
 16113  003652  D003               	goto	l173
 16114                           
 16115                           ; BSR set to: 0
 16116                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 16117  003654  EC8A  F029         	call	_USBCtrlEPService	;wreg free
 16118                           
 16119                           ;usb_device.c: 813: }
 16120  003658  D00E               	goto	l175
 16121  00365A                     l173:
 16122                           
 16123                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 16124  00365A  0E00               	movlw	0
 16125  00365C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16126  00365E  0E72               	movlw	114
 16127  003660  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16128  003662  0EBC               	movlw	low _USTATcopy
 16129  003664  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16130  003666  0E00               	movlw	high _USTATcopy
 16131  003668  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16132  00366A  0E00               	movlw	0
 16133  00366C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16134  00366E  0E00               	movlw	0
 16135  003670  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16136  003672  EC41  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16137  003676                     l175:
 16138  003676  2A20               	incf	USBDeviceTasks@i,f,c
 16139  003678  D7C6               	goto	l13807
 16140  00367A                     u11190:
 16141                           
 16142                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 16143  00367A  98A1               	bcf	4001,4,c	;volatile
 16144  00367C  0012               	return		;funcret
 16145  00367E                     __end_of_USBDeviceTasks:
 16146                           	opt stack 0
 16147                           tblptru	equ	0xFF8
 16148                           tblptrh	equ	0xFF7
 16149                           tblptrl	equ	0xFF6
 16150                           tablat	equ	0xFF5
 16151                           prodh	equ	0xFF4
 16152                           prodl	equ	0xFF3
 16153                           intcon	equ	0xFF2
 16154                           intcon2	equ	0xFF1
 16155                           intcon3	equ	0xFF0
 16156                           postinc0	equ	0xFEE
 16157                           wreg	equ	0xFE8
 16158                           indf1	equ	0xFE7
 16159                           postdec1	equ	0xFE5
 16160                           plusw1	equ	0xFE3
 16161                           fsr1h	equ	0xFE2
 16162                           fsr1l	equ	0xFE1
 16163                           indf2	equ	0xFDF
 16164                           postinc2	equ	0xFDE
 16165                           postdec2	equ	0xFDD
 16166                           plusw2	equ	0xFDB
 16167                           fsr2h	equ	0xFDA
 16168                           fsr2l	equ	0xFD9
 16169                           status	equ	0xFD8
 16170                           
 16171 ;; *************** function _USBWakeFromSuspend *****************
 16172 ;; Defined at:
 16173 ;;		line 2305 in file "usb_device.c"
 16174 ;; Parameters:    Size  Location     Type
 16175 ;;		None
 16176 ;; Auto vars:     Size  Location     Type
 16177 ;;		None
 16178 ;; Return value:  Size  Location     Type
 16179 ;;                  1    wreg      void 
 16180 ;; Registers used:
 16181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16182 ;; Tracked objects:
 16183 ;;		On entry : 0/0
 16184 ;;		On exit  : 0/0
 16185 ;;		Unchanged: 0/0
 16186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16191 ;;Total ram usage:        0 bytes
 16192 ;; Hardware stack levels used:    1
 16193 ;; Hardware stack levels required when called:    4
 16194 ;; This function calls:
 16195 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16196 ;; This function is called by:
 16197 ;;		_USBDeviceTasks
 16198 ;; This function uses a non-reentrant model
 16199 ;;
 16200                           
 16201                           	psect	text73
 16202  007456                     __ptext73:
 16203                           	opt stack 0
 16204  007456                     _USBWakeFromSuspend:
 16205                           	opt stack 25
 16206                           
 16207                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 16208                           
 16209                           ;incstack = 0
 16210  007456  0E00               	movlw	0
 16211  007458  0100               	movlb	0	; () banked
 16212  00745A  6FB4               	movwf	_USBBusIsSuspended& (0+255),b
 16213                           
 16214                           ; BSR set to: 0
 16215                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 16216  00745C  0E00               	movlw	0
 16217  00745E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16218  007460  0E74               	movlw	116
 16219  007462  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16220  007464  0E00               	movlw	0
 16221  007466  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16222  007468  0E00               	movlw	0
 16223  00746A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16224  00746C  0E00               	movlw	0
 16225  00746E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16226  007470  0E00               	movlw	0
 16227  007472  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16228  007474  EC41  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16229                           
 16230                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 16231  007478  9265               	bcf	3941,1,c	;volatile
 16232                           
 16233                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 16234  00747A  010F               	movlb	15	; () banked
 16235  00747C  9536               	bcf	54,2,b	;volatile
 16236                           
 16237                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 16238  00747E  D001               	goto	l303
 16239  007480                     
 16240                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 16241                           
 16242                           ; BSR set to: 15
 16243  007480  9462               	bcf	3938,2,c	;volatile
 16244  007482                     l303:
 16245  007482  B462               	btfsc	3938,2,c	;volatile
 16246  007484  D7FD               	goto	l304
 16247                           
 16248                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 16249  007486  0E00               	movlw	0
 16250  007488  0100               	movlb	0	; () banked
 16251  00748A  6FAB               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 16252                           
 16253                           ; BSR set to: 0
 16254  00748C  0012               	return		;funcret
 16255  00748E                     __end_of_USBWakeFromSuspend:
 16256                           	opt stack 0
 16257                           tblptru	equ	0xFF8
 16258                           tblptrh	equ	0xFF7
 16259                           tblptrl	equ	0xFF6
 16260                           tablat	equ	0xFF5
 16261                           prodh	equ	0xFF4
 16262                           prodl	equ	0xFF3
 16263                           intcon	equ	0xFF2
 16264                           intcon2	equ	0xFF1
 16265                           intcon3	equ	0xFF0
 16266                           postinc0	equ	0xFEE
 16267                           wreg	equ	0xFE8
 16268                           indf1	equ	0xFE7
 16269                           postdec1	equ	0xFE5
 16270                           plusw1	equ	0xFE3
 16271                           fsr1h	equ	0xFE2
 16272                           fsr1l	equ	0xFE1
 16273                           indf2	equ	0xFDF
 16274                           postinc2	equ	0xFDE
 16275                           postdec2	equ	0xFDD
 16276                           plusw2	equ	0xFDB
 16277                           fsr2h	equ	0xFDA
 16278                           fsr2l	equ	0xFD9
 16279                           status	equ	0xFD8
 16280                           
 16281 ;; *************** function _USBSuspend *****************
 16282 ;; Defined at:
 16283 ;;		line 2247 in file "usb_device.c"
 16284 ;; Parameters:    Size  Location     Type
 16285 ;;		None
 16286 ;; Auto vars:     Size  Location     Type
 16287 ;;		None
 16288 ;; Return value:  Size  Location     Type
 16289 ;;                  1    wreg      void 
 16290 ;; Registers used:
 16291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16292 ;; Tracked objects:
 16293 ;;		On entry : 0/0
 16294 ;;		On exit  : 0/0
 16295 ;;		Unchanged: 0/0
 16296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16301 ;;Total ram usage:        0 bytes
 16302 ;; Hardware stack levels used:    1
 16303 ;; Hardware stack levels required when called:    4
 16304 ;; This function calls:
 16305 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16306 ;; This function is called by:
 16307 ;;		_USBDeviceTasks
 16308 ;; This function uses a non-reentrant model
 16309 ;;
 16310                           
 16311                           	psect	text74
 16312  007660                     __ptext74:
 16313                           	opt stack 0
 16314  007660                     _USBSuspend:
 16315                           	opt stack 25
 16316                           
 16317                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 16318                           
 16319                           ; BSR set to: 0
 16320                           ;incstack = 0
 16321  007660  010F               	movlb	15	; () banked
 16322  007662  8536               	bsf	54,2,b	;volatile
 16323                           
 16324                           ; BSR set to: 15
 16325                           ;usb_device.c: 2273: (UIR &= 0xEF);
 16326  007664  9862               	bcf	3938,4,c	;volatile
 16327                           
 16328                           ; BSR set to: 15
 16329                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 16330  007666  8265               	bsf	3941,1,c	;volatile
 16331                           
 16332                           ; BSR set to: 15
 16333                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 16334  007668  0E01               	movlw	1
 16335  00766A  0100               	movlb	0	; () banked
 16336  00766C  6FB4               	movwf	_USBBusIsSuspended& (0+255),b
 16337                           
 16338                           ; BSR set to: 0
 16339                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 16340  00766E  0E00               	movlw	0
 16341  007670  6FAB               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 16345  007672  0E00               	movlw	0
 16346  007674  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16347  007676  0E75               	movlw	117
 16348  007678  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16349  00767A  0E00               	movlw	0
 16350  00767C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16351  00767E  0E00               	movlw	0
 16352  007680  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16353  007682  0E00               	movlw	0
 16354  007684  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16355  007686  0E00               	movlw	0
 16356  007688  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16357  00768A  EC41  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16358  00768E  0012               	return		;funcret
 16359  007690                     __end_of_USBSuspend:
 16360                           	opt stack 0
 16361                           tblptru	equ	0xFF8
 16362                           tblptrh	equ	0xFF7
 16363                           tblptrl	equ	0xFF6
 16364                           tablat	equ	0xFF5
 16365                           prodh	equ	0xFF4
 16366                           prodl	equ	0xFF3
 16367                           intcon	equ	0xFF2
 16368                           intcon2	equ	0xFF1
 16369                           intcon3	equ	0xFF0
 16370                           postinc0	equ	0xFEE
 16371                           wreg	equ	0xFE8
 16372                           indf1	equ	0xFE7
 16373                           postdec1	equ	0xFE5
 16374                           plusw1	equ	0xFE3
 16375                           fsr1h	equ	0xFE2
 16376                           fsr1l	equ	0xFE1
 16377                           indf2	equ	0xFDF
 16378                           postinc2	equ	0xFDE
 16379                           postdec2	equ	0xFDD
 16380                           plusw2	equ	0xFDB
 16381                           fsr2h	equ	0xFDA
 16382                           fsr2l	equ	0xFD9
 16383                           status	equ	0xFD8
 16384                           
 16385 ;; *************** function _USBStallHandler *****************
 16386 ;; Defined at:
 16387 ;;		line 2204 in file "usb_device.c"
 16388 ;; Parameters:    Size  Location     Type
 16389 ;;		None
 16390 ;; Auto vars:     Size  Location     Type
 16391 ;;		None
 16392 ;; Return value:  Size  Location     Type
 16393 ;;                  1    wreg      void 
 16394 ;; Registers used:
 16395 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16396 ;; Tracked objects:
 16397 ;;		On entry : 0/0
 16398 ;;		On exit  : 0/0
 16399 ;;		Unchanged: 0/0
 16400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16403 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16404 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16405 ;;Total ram usage:        1 bytes
 16406 ;; Hardware stack levels used:    1
 16407 ;; This function calls:
 16408 ;;		Nothing
 16409 ;; This function is called by:
 16410 ;;		_USBDeviceTasks
 16411 ;; This function uses a non-reentrant model
 16412 ;;
 16413                           
 16414                           	psect	text75
 16415  0071AA                     __ptext75:
 16416                           	opt stack 0
 16417  0071AA                     _USBStallHandler:
 16418                           	opt stack 29
 16419                           
 16420                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 16421                           
 16422                           ;incstack = 0
 16423  0071AA  010F               	movlb	15	; () banked
 16424  0071AC  A126               	btfss	38,0,b	;volatile
 16425  0071AE  D01D               	goto	l295
 16426                           
 16427                           ; BSR set to: 15
 16428                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 16429  0071B0  C09A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16430  0071B4  C09B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16431  0071B8  0E80               	movlw	128
 16432  0071BA  18DE               	xorwf	postinc2,w,c
 16433  0071BC  A4D8               	btfss	status,2,c
 16434  0071BE  D014               	goto	l296
 16435                           
 16436                           ; BSR set to: 15
 16437  0071C0  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 16438  0071C4  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16439  0071C8  0E84               	movlw	132
 16440  0071CA  18DE               	xorwf	postinc2,w,c
 16441  0071CC  A4D8               	btfss	status,2,c
 16442  0071CE  D00C               	goto	l296
 16443                           
 16444                           ; BSR set to: 15
 16445                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 16446  0071D0  C09A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16447  0071D4  C09B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16448  0071D8  0E0C               	movlw	12
 16449  0071DA  6EDF               	movwf	indf2,c
 16450                           
 16451                           ; BSR set to: 15
 16452                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16453  0071DC  C09A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16454  0071E0  C09B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16455  0071E4  0E00               	movlw	0
 16456  0071E6  8EDB               	bsf	plusw2,7,c
 16457  0071E8                     l296:
 16458                           
 16459                           ; BSR set to: 15
 16460                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 16461                           
 16462                           ; BSR set to: 15
 16463  0071E8  9126               	bcf	38,0,b	;volatile
 16464  0071EA                     l295:
 16465                           
 16466                           ; BSR set to: 15
 16467                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 16468  0071EA  9A62               	bcf	3938,5,c	;volatile
 16469                           
 16470                           ; BSR set to: 15
 16471  0071EC  0012               	return		;funcret
 16472  0071EE                     __end_of_USBStallHandler:
 16473                           	opt stack 0
 16474                           tblptru	equ	0xFF8
 16475                           tblptrh	equ	0xFF7
 16476                           tblptrl	equ	0xFF6
 16477                           tablat	equ	0xFF5
 16478                           prodh	equ	0xFF4
 16479                           prodl	equ	0xFF3
 16480                           intcon	equ	0xFF2
 16481                           intcon2	equ	0xFF1
 16482                           intcon3	equ	0xFF0
 16483                           postinc0	equ	0xFEE
 16484                           wreg	equ	0xFE8
 16485                           indf1	equ	0xFE7
 16486                           postdec1	equ	0xFE5
 16487                           plusw1	equ	0xFE3
 16488                           fsr1h	equ	0xFE2
 16489                           fsr1l	equ	0xFE1
 16490                           indf2	equ	0xFDF
 16491                           postinc2	equ	0xFDE
 16492                           postdec2	equ	0xFDD
 16493                           plusw2	equ	0xFDB
 16494                           fsr2h	equ	0xFDA
 16495                           fsr2l	equ	0xFD9
 16496                           status	equ	0xFD8
 16497                           
 16498 ;; *************** function _USBIncrement1msInternalTimers *****************
 16499 ;; Defined at:
 16500 ;;		line 3027 in file "usb_device.c"
 16501 ;; Parameters:    Size  Location     Type
 16502 ;;		None
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;		None
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  1    wreg      void 
 16507 ;; Registers used:
 16508 ;;		wreg, status,2, status,0
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16518 ;;Total ram usage:        0 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; This function calls:
 16521 ;;		Nothing
 16522 ;; This function is called by:
 16523 ;;		_USBDeviceTasks
 16524 ;; This function uses a non-reentrant model
 16525 ;;
 16526                           
 16527                           	psect	text76
 16528  0078E4                     __ptext76:
 16529                           	opt stack 0
 16530  0078E4                     _USBIncrement1msInternalTimers:
 16531                           	opt stack 29
 16532                           
 16533                           ;usb_device.c: 3035: USB1msTickCount++;
 16534                           
 16535                           ; BSR set to: 15
 16536                           ;incstack = 0
 16537  0078E4  0E01               	movlw	1
 16538  0078E6  0101               	movlb	1	; () banked
 16539  0078E8  2754               	addwf	_USB1msTickCount& (0+255),f,b
 16540  0078EA  0E00               	movlw	0
 16541  0078EC  2355               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 16542  0078EE  2356               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 16543  0078F0  2357               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 16544                           
 16545                           ; BSR set to: 1
 16546                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 16547  0078F2  0100               	movlb	0	; () banked
 16548  0078F4  51B4               	movf	_USBBusIsSuspended& (0+255),w,b
 16549  0078F6  A4D8               	btfss	status,2,c
 16550  0078F8  0012               	return	
 16551                           
 16552                           ; BSR set to: 0
 16553                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 16554  0078FA  2BAB               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 16555                           
 16556                           ; BSR set to: 0
 16557                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 16558  0078FC  51AB               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 16559  0078FE  A4D8               	btfss	status,2,c
 16560  007900  0012               	return	
 16561                           
 16562                           ; BSR set to: 0
 16563                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 16564  007902  69AB               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 16565                           
 16566                           ; BSR set to: 0
 16567  007904  0012               	return	
 16568  007906                     __end_of_USBIncrement1msInternalTimers:
 16569                           	opt stack 0
 16570                           tblptru	equ	0xFF8
 16571                           tblptrh	equ	0xFF7
 16572                           tblptrl	equ	0xFF6
 16573                           tablat	equ	0xFF5
 16574                           prodh	equ	0xFF4
 16575                           prodl	equ	0xFF3
 16576                           intcon	equ	0xFF2
 16577                           intcon2	equ	0xFF1
 16578                           intcon3	equ	0xFF0
 16579                           postinc0	equ	0xFEE
 16580                           wreg	equ	0xFE8
 16581                           indf1	equ	0xFE7
 16582                           postdec1	equ	0xFE5
 16583                           plusw1	equ	0xFE3
 16584                           fsr1h	equ	0xFE2
 16585                           fsr1l	equ	0xFE1
 16586                           indf2	equ	0xFDF
 16587                           postinc2	equ	0xFDE
 16588                           postdec2	equ	0xFDD
 16589                           plusw2	equ	0xFDB
 16590                           fsr2h	equ	0xFDA
 16591                           fsr2l	equ	0xFD9
 16592                           status	equ	0xFD8
 16593                           
 16594 ;; *************** function _USBDeviceInit *****************
 16595 ;; Defined at:
 16596 ;;		line 277 in file "usb_device.c"
 16597 ;; Parameters:    Size  Location     Type
 16598 ;;		None
 16599 ;; Auto vars:     Size  Location     Type
 16600 ;;  i               1    8[COMRAM] unsigned char 
 16601 ;; Return value:  Size  Location     Type
 16602 ;;                  1    wreg      void 
 16603 ;; Registers used:
 16604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16605 ;; Tracked objects:
 16606 ;;		On entry : 0/0
 16607 ;;		On exit  : 0/0
 16608 ;;		Unchanged: 0/0
 16609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16613 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16614 ;;Total ram usage:        1 bytes
 16615 ;; Hardware stack levels used:    1
 16616 ;; Hardware stack levels required when called:    1
 16617 ;; This function calls:
 16618 ;;		_memset
 16619 ;; This function is called by:
 16620 ;;		_USBDeviceTasks
 16621 ;;		_main
 16622 ;; This function uses a non-reentrant model
 16623 ;;
 16624                           
 16625                           	psect	text77
 16626  0037D0                     __ptext77:
 16627                           	opt stack 0
 16628  0037D0                     _USBDeviceInit:
 16629                           	opt stack 28
 16630                           
 16631                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 16632                           
 16633                           ; BSR set to: 0
 16634                           ;incstack = 0
 16635  0037D0  98A0               	bcf	4000,4,c	;volatile
 16636                           
 16637                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 16638  0037D2  0E00               	movlw	0
 16639  0037D4  6E63               	movwf	3939,c	;volatile
 16640                           
 16641                           ;usb_device.c: 291: {UIR = 0;};
 16642  0037D6  0E00               	movlw	0
 16643  0037D8  6E62               	movwf	3938,c	;volatile
 16644                           
 16645                           ;usb_device.c: 294: UEP0 = 0;
 16646  0037DA  0E00               	movlw	0
 16647  0037DC  010F               	movlb	15	; () banked
 16648  0037DE  6F26               	movwf	38,b	;volatile
 16649                           
 16650                           ; BSR set to: 15
 16651                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 16652  0037E0  0E27               	movlw	39
 16653  0037E2  6E01               	movwf	memset@p1,c
 16654  0037E4  0E0F               	movlw	15
 16655  0037E6  6E02               	movwf	memset@p1+1,c
 16656  0037E8  0E00               	movlw	0
 16657  0037EA  6E04               	movwf	memset@c+1,c
 16658  0037EC  0E00               	movlw	0
 16659  0037EE  6E03               	movwf	memset@c,c
 16660  0037F0  0E00               	movlw	0
 16661  0037F2  6E06               	movwf	memset@n+1,c
 16662  0037F4  0E02               	movlw	2
 16663  0037F6  6E05               	movwf	memset@n,c
 16664  0037F8  EC8B  F03B         	call	_memset	;wreg free
 16665                           
 16666                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16667  0037FC  0E16               	movlw	22
 16668  0037FE  010F               	movlb	15	; () banked
 16669  003800  6F39               	movwf	57,b	;volatile
 16670                           
 16671                           ; BSR set to: 15
 16672  003802  0E9F               	movlw	159
 16673  003804  6F37               	movwf	55,b	;volatile
 16674                           
 16675                           ; BSR set to: 15
 16676  003806  0E7B               	movlw	123
 16677  003808  6F36               	movwf	54,b	;volatile
 16678                           
 16679                           ; BSR set to: 15
 16680                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 16681  00380A  0E00               	movlw	0
 16682  00380C  6E09               	movwf	USBDeviceInit@i,c
 16683  00380E                     l12793:
 16684                           
 16685                           ; BSR set to: 15
 16686  00380E  0E0B               	movlw	11
 16687  003810  6409               	cpfsgt	USBDeviceInit@i,c
 16688  003812  D001               	goto	l139
 16689  003814  D00E               	goto	u9930
 16690  003816                     l139:
 16691                           
 16692                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 16693                           
 16694                           ; BSR set to: 15
 16695  003816  5009               	movf	USBDeviceInit@i,w,c
 16696  003818  0D04               	mullw	4
 16697  00381A  0E00               	movlw	0
 16698  00381C  24F3               	addwf	prodl,w,c
 16699  00381E  6ED9               	movwf	fsr2l,c
 16700  003820  0E0D               	movlw	13
 16701  003822  20F4               	addwfc	prodh,w,c
 16702  003824  6EDA               	movwf	fsr2h,c
 16703  003826  6ADE               	clrf	postinc2,c
 16704  003828  6ADE               	clrf	postinc2,c
 16705  00382A  6ADE               	clrf	postinc2,c
 16706  00382C  6ADD               	clrf	postdec2,c
 16707  00382E  2A09               	incf	USBDeviceInit@i,f,c
 16708  003830  D7EE               	goto	l12793
 16709  003832                     u9930:
 16710                           
 16711                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 16712  003832  8C65               	bsf	3941,6,c	;volatile
 16713                           
 16714                           ;usb_device.c: 316: UADDR = 0x00;
 16715  003834  0E00               	movlw	0
 16716  003836  010F               	movlb	15	; () banked
 16717  003838  6F38               	movwf	56,b	;volatile
 16718                           
 16719                           ; BSR set to: 15
 16720                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 16721  00383A  9865               	bcf	3941,4,c	;volatile
 16722                           
 16723                           ; BSR set to: 15
 16724                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 16725  00383C  9C65               	bcf	3941,6,c	;volatile
 16726  00383E                     
 16727                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 16728                           
 16729                           ; BSR set to: 15
 16730  00383E  9662               	bcf	3938,3,c	;volatile
 16731                           
 16732                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 16733  003840  0E00               	movlw	0
 16734  003842  0100               	movlb	0	; () banked
 16735  003844  6F69               	movwf	(_inPipes+3)& (0+255),b
 16736                           
 16737                           ; BSR set to: 0
 16738                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 16739  003846  0E00               	movlw	0
 16740  003848  0101               	movlb	1	; () banked
 16741  00384A  6F34               	movwf	(_outPipes+3)& (0+255),b
 16742                           
 16743                           ; BSR set to: 1
 16744                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 16745  00384C  0E00               	movlw	0
 16746  00384E  6F36               	movwf	(_outPipes+5)& (0+255),b
 16747  003850  0E00               	movlw	0
 16748  003852  6F35               	movwf	(_outPipes+4)& (0+255),b
 16749                           
 16750                           ; BSR set to: 1
 16751                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 16752  003854  B662               	btfsc	3938,3,c	;volatile
 16753  003856  D7F3               	goto	l141
 16754                           
 16755                           ; BSR set to: 1
 16756                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 16757                           
 16758                           ; BSR set to: 1
 16759  003858  0E01               	movlw	1
 16760  00385A  0100               	movlb	0	; () banked
 16761  00385C  6FAF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16762                           
 16763                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 16764  00385E  0E01               	movlw	1
 16765  003860  6FAE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16766                           
 16767                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 16768  003862  0E00               	movlw	0
 16769  003864  6FAD               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 16770                           
 16771                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 16772  003866  0E00               	movlw	0
 16773  003868  6FAC               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 16774                           
 16775                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 16776  00386A  0E00               	movlw	0
 16777  00386C  6FB4               	movwf	_USBBusIsSuspended& (0+255),b
 16778                           
 16779                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 16780  00386E  0E00               	movlw	0
 16781  003870  6E09               	movwf	USBDeviceInit@i,c
 16782  003872                     l12821:
 16783                           
 16784                           ; BSR set to: 0
 16785  003872  0E02               	movlw	2
 16786  003874  6409               	cpfsgt	USBDeviceInit@i,c
 16787  003876  D001               	goto	l143
 16788  003878  D02E               	goto	u9960
 16789  00387A                     l143:
 16790                           
 16791                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 16792                           
 16793                           ; BSR set to: 0
 16794  00387A  5009               	movf	USBDeviceInit@i,w,c
 16795  00387C  0D02               	mullw	2
 16796  00387E  0E6C               	movlw	low _pBDTEntryIn
 16797  003880  24F3               	addwf	prodl,w,c
 16798  003882  6ED9               	movwf	fsr2l,c
 16799  003884  0E00               	movlw	high _pBDTEntryIn
 16800  003886  20F4               	addwfc	prodh,w,c
 16801  003888  6EDA               	movwf	fsr2h,c
 16802  00388A  0E00               	movlw	0
 16803  00388C  6EDE               	movwf	postinc2,c
 16804  00388E  0E00               	movlw	0
 16805  003890  6EDD               	movwf	postdec2,c
 16806                           
 16807                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 16808  003892  5009               	movf	USBDeviceInit@i,w,c
 16809  003894  0D02               	mullw	2
 16810  003896  0E72               	movlw	low _pBDTEntryOut
 16811  003898  24F3               	addwf	prodl,w,c
 16812  00389A  6ED9               	movwf	fsr2l,c
 16813  00389C  0E00               	movlw	high _pBDTEntryOut
 16814  00389E  20F4               	addwfc	prodh,w,c
 16815  0038A0  6EDA               	movwf	fsr2h,c
 16816  0038A2  0E00               	movlw	0
 16817  0038A4  6EDE               	movwf	postinc2,c
 16818  0038A6  0E00               	movlw	0
 16819  0038A8  6EDD               	movwf	postdec2,c
 16820                           
 16821                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 16822  0038AA  5009               	movf	USBDeviceInit@i,w,c
 16823  0038AC  0D01               	mullw	1
 16824  0038AE  0E61               	movlw	low _ep_data_in
 16825  0038B0  24F3               	addwf	prodl,w,c
 16826  0038B2  6ED9               	movwf	fsr2l,c
 16827  0038B4  0E01               	movlw	high _ep_data_in
 16828  0038B6  20F4               	addwfc	prodh,w,c
 16829  0038B8  6EDA               	movwf	fsr2h,c
 16830  0038BA  0E00               	movlw	0
 16831  0038BC  6EDF               	movwf	indf2,c
 16832                           
 16833                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 16834  0038BE  5009               	movf	USBDeviceInit@i,w,c
 16835  0038C0  0D01               	mullw	1
 16836  0038C2  0E5E               	movlw	low _ep_data_out
 16837  0038C4  24F3               	addwf	prodl,w,c
 16838  0038C6  6ED9               	movwf	fsr2l,c
 16839  0038C8  0E01               	movlw	high _ep_data_out
 16840  0038CA  20F4               	addwfc	prodh,w,c
 16841  0038CC  6EDA               	movwf	fsr2h,c
 16842  0038CE  0E00               	movlw	0
 16843  0038D0  6EDF               	movwf	indf2,c
 16844  0038D2  2A09               	incf	USBDeviceInit@i,f,c
 16845  0038D4  D7CE               	goto	l12821
 16846  0038D6                     u9960:
 16847                           
 16848                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 16849  0038D6  0E08               	movlw	8
 16850  0038D8  0100               	movlb	0	; () banked
 16851  0038DA  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 16852  0038DC  0E0D               	movlw	13
 16853  0038DE  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16854                           
 16855                           ; BSR set to: 0
 16856                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 16857  0038E0  0E16               	movlw	22
 16858  0038E2  010F               	movlb	15	; () banked
 16859  0038E4  6F26               	movwf	38,b	;volatile
 16860                           
 16861                           ; BSR set to: 15
 16862                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 16863  0038E6  0E0D               	movlw	13
 16864  0038E8  010D               	movlb	13	; () banked
 16865  0038EA  6F03               	movwf	3,b	;volatile
 16866  0038EC  0E30               	movlw	48
 16867  0038EE  6F02               	movwf	2,b	;volatile
 16868                           
 16869                           ; BSR set to: 13
 16870                           ;usb_device.c: 359: BDT[0].CNT = 8;
 16871  0038F0  0E08               	movlw	8
 16872  0038F2  6F01               	movwf	1,b	;volatile
 16873                           
 16874                           ; BSR set to: 13
 16875                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 16876  0038F4  0E04               	movlw	4
 16877  0038F6  6F00               	movwf	0,b	;volatile
 16878                           
 16879                           ; BSR set to: 13
 16880                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 16881  0038F8  8F00               	bsf	0,7,b	;volatile
 16882                           
 16883                           ; BSR set to: 13
 16884                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 16885  0038FA  0E00               	movlw	0
 16886  0038FC  0100               	movlb	0	; () banked
 16887  0038FE  6FBD               	movwf	_USBActiveConfiguration& (0+255),b
 16888                           
 16889                           ; BSR set to: 0
 16890                           ;usb_device.c: 366: USB1msTickCount = 0;
 16891  003900  0E00               	movlw	0
 16892  003902  0101               	movlb	1	; () banked
 16893  003904  6F54               	movwf	_USB1msTickCount& (0+255),b
 16894  003906  0E00               	movlw	0
 16895  003908  6F55               	movwf	(_USB1msTickCount+1)& (0+255),b
 16896  00390A  0E00               	movlw	0
 16897  00390C  6F56               	movwf	(_USB1msTickCount+2)& (0+255),b
 16898  00390E  0E00               	movlw	0
 16899  003910  6F57               	movwf	(_USB1msTickCount+3)& (0+255),b
 16900                           
 16901                           ; BSR set to: 1
 16902                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 16903  003912  0E00               	movlw	0
 16904  003914  0100               	movlb	0	; () banked
 16905  003916  6FAB               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 16906                           
 16907                           ; BSR set to: 0
 16908                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 16909  003918  0E00               	movlw	0
 16910  00391A  6E5F               	movwf	_USBDeviceState,c
 16911                           
 16912                           ; BSR set to: 0
 16913  00391C  0012               	return		;funcret
 16914  00391E                     __end_of_USBDeviceInit:
 16915                           	opt stack 0
 16916                           tblptru	equ	0xFF8
 16917                           tblptrh	equ	0xFF7
 16918                           tblptrl	equ	0xFF6
 16919                           tablat	equ	0xFF5
 16920                           prodh	equ	0xFF4
 16921                           prodl	equ	0xFF3
 16922                           intcon	equ	0xFF2
 16923                           intcon2	equ	0xFF1
 16924                           intcon3	equ	0xFF0
 16925                           postinc0	equ	0xFEE
 16926                           wreg	equ	0xFE8
 16927                           indf1	equ	0xFE7
 16928                           postdec1	equ	0xFE5
 16929                           plusw1	equ	0xFE3
 16930                           fsr1h	equ	0xFE2
 16931                           fsr1l	equ	0xFE1
 16932                           indf2	equ	0xFDF
 16933                           postinc2	equ	0xFDE
 16934                           postdec2	equ	0xFDD
 16935                           plusw2	equ	0xFDB
 16936                           fsr2h	equ	0xFDA
 16937                           fsr2l	equ	0xFD9
 16938                           status	equ	0xFD8
 16939                           
 16940 ;; *************** function _USBCtrlEPService *****************
 16941 ;; Defined at:
 16942 ;;		line 2374 in file "usb_device.c"
 16943 ;; Parameters:    Size  Location     Type
 16944 ;;		None
 16945 ;; Auto vars:     Size  Location     Type
 16946 ;;		None
 16947 ;; Return value:  Size  Location     Type
 16948 ;;                  1    wreg      void 
 16949 ;; Registers used:
 16950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 16951 ;; Tracked objects:
 16952 ;;		On entry : 0/0
 16953 ;;		On exit  : 0/0
 16954 ;;		Unchanged: 0/0
 16955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16958 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16959 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16960 ;;Total ram usage:        2 bytes
 16961 ;; Hardware stack levels used:    1
 16962 ;; Hardware stack levels required when called:    7
 16963 ;; This function calls:
 16964 ;;		_USBCtrlTrfInHandler
 16965 ;;		_USBCtrlTrfOutHandler
 16966 ;;		_USBCtrlTrfSetupHandler
 16967 ;;		_memcpy
 16968 ;; This function is called by:
 16969 ;;		_USBDeviceTasks
 16970 ;; This function uses a non-reentrant model
 16971 ;;
 16972                           
 16973                           	psect	text78
 16974  005314                     __ptext78:
 16975                           	opt stack 0
 16976  005314                     _USBCtrlEPService:
 16977                           	opt stack 22
 16978                           
 16979                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 16980                           
 16981                           ; BSR set to: 0
 16982                           ;incstack = 0
 16983  005314  0E2D               	movlw	45
 16984  005316  0100               	movlb	0	; () banked
 16985  005318  6FB1               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 16986                           
 16987                           ; BSR set to: 0
 16988                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 16989  00531A  C0BC  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 16990  00531E  0EFD               	movlw	253
 16991  005320  161E               	andwf	??_USBCtrlEPService,f,c
 16992  005322  A4D8               	btfss	status,2,c
 16993  005324  D044               	goto	l309
 16994                           
 16995                           ; BSR set to: 0
 16996                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 16997  005326  C0BC  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 16998  00532A  90D8               	bcf	status,0,c
 16999  00532C  321E               	rrcf	??_USBCtrlEPService,f,c
 17000  00532E  0E3F               	movlw	63
 17001  005330  161E               	andwf	??_USBCtrlEPService,f,c
 17002  005332  501E               	movf	??_USBCtrlEPService,w,c
 17003  005334  0D04               	mullw	4
 17004  005336  0E00               	movlw	0
 17005  005338  24F3               	addwf	prodl,w,c
 17006  00533A  6F9A               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 17007  00533C  0E0D               	movlw	13
 17008  00533E  20F4               	addwfc	prodh,w,c
 17009  005340  6F9B               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 17010                           
 17011                           ; BSR set to: 0
 17012                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 17013  005342  C09A  F098         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 17014  005346  C09B  F099         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 17015                           
 17016                           ; BSR set to: 0
 17017                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 17018  00534A  0E04               	movlw	4
 17019  00534C  1998               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 17020  00534E  6F98               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 17021  005350  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17022  005352  6F99               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 17023                           
 17024                           ; BSR set to: 0
 17025                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 17026  005354  C09A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17027  005358  C09B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17028  00535C  30DF               	rrcf	223,w,c
 17029  00535E  32E8               	rrcf	wreg,f,c
 17030  005360  0B0F               	andlw	15
 17031  005362  0A0D               	xorlw	13
 17032  005364  A4D8               	btfss	status,2,c
 17033  005366  D020               	goto	l310
 17034                           
 17035                           ; BSR set to: 0
 17036                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 17037  005368  0E30               	movlw	48
 17038  00536A  6E01               	movwf	memcpy@d1,c
 17039  00536C  0E0D               	movlw	13
 17040  00536E  6E02               	movwf	memcpy@d1+1,c
 17041  005370  EE20 F002          	lfsr	2,2
 17042  005374  519A               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17043  005376  26D9               	addwf	fsr2l,f,c
 17044  005378  519B               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17045  00537A  22DA               	addwfc	fsr2h,f,c
 17046  00537C  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 17047  005380  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 17048  005384  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 17049  005388  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 17050  00538C  5003               	movf	memcpy@s1,w,c
 17051  00538E  1004               	iorwf	memcpy@s1+1,w,c
 17052  005390  A4D8               	btfss	status,2,c
 17053  005392  0E20               	movlw	32
 17054  005394  6E05               	movwf	memcpy@s1+2,c
 17055  005396  0E00               	movlw	0
 17056  005398  6E07               	movwf	memcpy@n+1,c
 17057  00539A  0E08               	movlw	8
 17058  00539C  6E06               	movwf	memcpy@n,c
 17059  00539E  EC72  F034         	call	_memcpy	;wreg free
 17060                           
 17061                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 17062  0053A2  EC99  F02D         	call	_USBCtrlTrfSetupHandler	;wreg free
 17063                           
 17064                           ;usb_device.c: 2411: }
 17065  0053A6  0012               	return	
 17066  0053A8                     l310:
 17067                           
 17068                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 17069  0053A8  EC37  F035         	call	_USBCtrlTrfOutHandler	;wreg free
 17070                           
 17071                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 17072  0053AC  0012               	return	
 17073  0053AE                     l309:
 17074                           
 17075                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 17076  0053AE  0100               	movlb	0	; () banked
 17077  0053B0  51BC               	movf	_USTATcopy& (0+255),w,b
 17078  0053B2  0BFD               	andlw	253
 17079  0053B4  0A04               	xorlw	4
 17080  0053B6  A4D8               	btfss	status,2,c
 17081  0053B8  0012               	return	
 17082                           
 17083                           ; BSR set to: 0
 17084                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 17085  0053BA  ECE6  F026         	call	_USBCtrlTrfInHandler	;wreg free
 17086  0053BE  0012               	return	
 17087  0053C0                     __end_of_USBCtrlEPService:
 17088                           	opt stack 0
 17089                           tblptru	equ	0xFF8
 17090                           tblptrh	equ	0xFF7
 17091                           tblptrl	equ	0xFF6
 17092                           tablat	equ	0xFF5
 17093                           prodh	equ	0xFF4
 17094                           prodl	equ	0xFF3
 17095                           intcon	equ	0xFF2
 17096                           intcon2	equ	0xFF1
 17097                           intcon3	equ	0xFF0
 17098                           postinc0	equ	0xFEE
 17099                           wreg	equ	0xFE8
 17100                           indf1	equ	0xFE7
 17101                           postdec1	equ	0xFE5
 17102                           plusw1	equ	0xFE3
 17103                           fsr1h	equ	0xFE2
 17104                           fsr1l	equ	0xFE1
 17105                           indf2	equ	0xFDF
 17106                           postinc2	equ	0xFDE
 17107                           postdec2	equ	0xFDD
 17108                           plusw2	equ	0xFDB
 17109                           fsr2h	equ	0xFDA
 17110                           fsr2l	equ	0xFD9
 17111                           status	equ	0xFD8
 17112                           
 17113 ;; *************** function _USBCtrlTrfSetupHandler *****************
 17114 ;; Defined at:
 17115 ;;		line 2467 in file "usb_device.c"
 17116 ;; Parameters:    Size  Location     Type
 17117 ;;		None
 17118 ;; Auto vars:     Size  Location     Type
 17119 ;;		None
 17120 ;; Return value:  Size  Location     Type
 17121 ;;                  1    wreg      void 
 17122 ;; Registers used:
 17123 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17124 ;; Tracked objects:
 17125 ;;		On entry : 0/0
 17126 ;;		On exit  : 0/0
 17127 ;;		Unchanged: 0/0
 17128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17133 ;;Total ram usage:        0 bytes
 17134 ;; Hardware stack levels used:    1
 17135 ;; Hardware stack levels required when called:    6
 17136 ;; This function calls:
 17137 ;;		_USBCheckStdRequest
 17138 ;;		_USBCtrlEPServiceComplete
 17139 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17140 ;; This function is called by:
 17141 ;;		_USBCtrlEPService
 17142 ;; This function uses a non-reentrant model
 17143 ;;
 17144                           
 17145                           	psect	text79
 17146  005B32                     __ptext79:
 17147                           	opt stack 0
 17148  005B32                     _USBCtrlTrfSetupHandler:
 17149                           	opt stack 22
 17150                           
 17151                           ;usb_device.c: 2472: shortPacketStatus = 0;
 17152                           
 17153                           ;incstack = 0
 17154  005B32  0E00               	movlw	0
 17155  005B34  0100               	movlb	0	; () banked
 17156  005B36  6FB7               	movwf	_shortPacketStatus& (0+255),b
 17157                           
 17158                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 17159  005B38  0E00               	movlw	0
 17160  005B3A  6FB0               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 17161                           
 17162                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 17163  005B3C  0E00               	movlw	0
 17164  005B3E  6FAD               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17165                           
 17166                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 17167  005B40  0E00               	movlw	0
 17168  005B42  6FAC               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17169                           
 17170                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 17171  005B44  0E00               	movlw	0
 17172  005B46  6FB2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17173                           
 17174                           ;usb_device.c: 2477: controlTransferState = 0;
 17175  005B48  0E00               	movlw	0
 17176  005B4A  6FB6               	movwf	_controlTransferState& (0+255),b
 17177                           
 17178                           ; BSR set to: 0
 17179                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 17180  005B4C  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17181  005B50  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17182  005B54  0E7F               	movlw	127
 17183  005B56  16DF               	andwf	indf2,f,c
 17184                           
 17185                           ; BSR set to: 0
 17186                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17187  005B58  0E04               	movlw	4
 17188  005B5A  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 17189  005B5C  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 17190  005B5E  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17191  005B60  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17192                           
 17193                           ; BSR set to: 0
 17194                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 17195  005B62  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17196  005B66  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17197  005B6A  0E7F               	movlw	127
 17198  005B6C  16DF               	andwf	indf2,f,c
 17199                           
 17200                           ; BSR set to: 0
 17201                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17202  005B6E  0E04               	movlw	4
 17203  005B70  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 17204  005B72  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 17205  005B74  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17206  005B76  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17207                           
 17208                           ; BSR set to: 0
 17209                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 17210  005B78  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17211  005B7C  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17212  005B80  0E7F               	movlw	127
 17213  005B82  16DF               	andwf	indf2,f,c
 17214                           
 17215                           ; BSR set to: 0
 17216                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 17217  005B84  0E00               	movlw	0
 17218  005B86  6F69               	movwf	(_inPipes+3)& (0+255),b
 17219                           
 17220                           ; BSR set to: 0
 17221                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 17222  005B88  0E00               	movlw	0
 17223  005B8A  6F6B               	movwf	(_inPipes+5)& (0+255),b
 17224  005B8C  0E00               	movlw	0
 17225  005B8E  6F6A               	movwf	(_inPipes+4)& (0+255),b
 17226                           
 17227                           ; BSR set to: 0
 17228                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 17229  005B90  0E00               	movlw	0
 17230  005B92  0101               	movlb	1	; () banked
 17231  005B94  6F34               	movwf	(_outPipes+3)& (0+255),b
 17232                           
 17233                           ; BSR set to: 1
 17234                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 17235  005B96  0E00               	movlw	0
 17236  005B98  6F36               	movwf	(_outPipes+5)& (0+255),b
 17237  005B9A  0E00               	movlw	0
 17238  005B9C  6F35               	movwf	(_outPipes+4)& (0+255),b
 17239                           
 17240                           ; BSR set to: 1
 17241                           ;usb_device.c: 2502: USBCheckStdRequest();
 17242  005B9E  ECDD  F021         	call	_USBCheckStdRequest	;wreg free
 17243                           
 17244                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 17245  005BA2  0E00               	movlw	0
 17246  005BA4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17247  005BA6  0E03               	movlw	3
 17248  005BA8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17249  005BAA  0E00               	movlw	0
 17250  005BAC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17251  005BAE  0E00               	movlw	0
 17252  005BB0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17253  005BB2  0E00               	movlw	0
 17254  005BB4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17255  005BB6  0E00               	movlw	0
 17256  005BB8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17257  005BBA  EC41  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17258                           
 17259                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 17260  005BBE  ECE4  F020         	call	_USBCtrlEPServiceComplete	;wreg free
 17261  005BC2  0012               	return		;funcret
 17262  005BC4                     __end_of_USBCtrlTrfSetupHandler:
 17263                           	opt stack 0
 17264                           tblptru	equ	0xFF8
 17265                           tblptrh	equ	0xFF7
 17266                           tblptrl	equ	0xFF6
 17267                           tablat	equ	0xFF5
 17268                           prodh	equ	0xFF4
 17269                           prodl	equ	0xFF3
 17270                           intcon	equ	0xFF2
 17271                           intcon2	equ	0xFF1
 17272                           intcon3	equ	0xFF0
 17273                           postinc0	equ	0xFEE
 17274                           wreg	equ	0xFE8
 17275                           indf1	equ	0xFE7
 17276                           postdec1	equ	0xFE5
 17277                           plusw1	equ	0xFE3
 17278                           fsr1h	equ	0xFE2
 17279                           fsr1l	equ	0xFE1
 17280                           indf2	equ	0xFDF
 17281                           postinc2	equ	0xFDE
 17282                           postdec2	equ	0xFDD
 17283                           plusw2	equ	0xFDB
 17284                           fsr2h	equ	0xFDA
 17285                           fsr2l	equ	0xFD9
 17286                           status	equ	0xFD8
 17287                           
 17288 ;; *************** function _USBCtrlEPServiceComplete *****************
 17289 ;; Defined at:
 17290 ;;		line 1618 in file "usb_device.c"
 17291 ;; Parameters:    Size  Location     Type
 17292 ;;		None
 17293 ;; Auto vars:     Size  Location     Type
 17294 ;;		None
 17295 ;; Return value:  Size  Location     Type
 17296 ;;                  1    wreg      void 
 17297 ;; Registers used:
 17298 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17299 ;; Tracked objects:
 17300 ;;		On entry : 0/0
 17301 ;;		On exit  : 0/0
 17302 ;;		Unchanged: 0/0
 17303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17308 ;;Total ram usage:        0 bytes
 17309 ;; Hardware stack levels used:    1
 17310 ;; Hardware stack levels required when called:    2
 17311 ;; This function calls:
 17312 ;;		_USBCtrlEPAllowDataStage
 17313 ;;		_USBCtrlEPAllowStatusStage
 17314 ;; This function is called by:
 17315 ;;		_USBCtrlTrfSetupHandler
 17316 ;; This function uses a non-reentrant model
 17317 ;;
 17318                           
 17319                           	psect	text80
 17320  0041C8                     __ptext80:
 17321                           	opt stack 0
 17322  0041C8                     _USBCtrlEPServiceComplete:
 17323                           	opt stack 25
 17324                           
 17325                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 17326                           
 17327                           ;incstack = 0
 17328  0041C8  9865               	bcf	3941,4,c	;volatile
 17329                           
 17330                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 17331  0041CA  0100               	movlb	0	; () banked
 17332  0041CC  BF69               	btfsc	(_inPipes+3)& (0+255),7,b
 17333  0041CE  D03C               	goto	l219
 17334                           
 17335                           ; BSR set to: 0
 17336                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 17337  0041D0  0101               	movlb	1	; () banked
 17338  0041D2  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 17339  0041D4  D00D               	goto	l220
 17340                           
 17341                           ; BSR set to: 1
 17342                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 17343  0041D6  0E02               	movlw	2
 17344  0041D8  0100               	movlb	0	; () banked
 17345  0041DA  6FB6               	movwf	_controlTransferState& (0+255),b
 17346                           
 17347                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 17348  0041DC  51AC               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 17349  0041DE  B4D8               	btfsc	status,2,c
 17350                           
 17351                           ; BSR set to: 0
 17352                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 17353  0041E0  ECCC  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 17354                           
 17355                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 17356  0041E4  0E00               	movlw	0
 17357  0041E6  0100               	movlb	0	; () banked
 17358  0041E8  6FAE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17359                           
 17360                           ; BSR set to: 0
 17361                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 17362  0041EA  0E00               	movlw	0
 17363  0041EC  6FAF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17364                           
 17365                           ;usb_device.c: 1654: }
 17366  0041EE  0012               	return	
 17367  0041F0                     l220:
 17368                           
 17369                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 17370                           
 17371                           ; BSR set to: 0
 17372  0041F0  0100               	movlb	0	; () banked
 17373  0041F2  EE20 F001          	lfsr	2,1
 17374  0041F6  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17375  0041F8  26D9               	addwf	fsr2l,f,c
 17376  0041FA  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17377  0041FC  22DA               	addwfc	fsr2h,f,c
 17378  0041FE  0E08               	movlw	8
 17379  004200  6EDF               	movwf	indf2,c
 17380                           
 17381                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17382  004202  EE20 F002          	lfsr	2,2
 17383  004206  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17384  004208  26D9               	addwf	fsr2l,f,c
 17385  00420A  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17386  00420C  22DA               	addwfc	fsr2h,f,c
 17387  00420E  0E30               	movlw	48
 17388  004210  6EDE               	movwf	postinc2,c
 17389  004212  0E0D               	movlw	13
 17390  004214  6EDD               	movwf	postdec2,c
 17391                           
 17392                           ; BSR set to: 0
 17393                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17394  004216  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17395  00421A  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17396  00421E  0E0C               	movlw	12
 17397  004220  6EDF               	movwf	indf2,c
 17398                           
 17399                           ; BSR set to: 0
 17400                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17401  004222  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17402  004226  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17403  00422A  0E00               	movlw	0
 17404  00422C  8EDB               	bsf	plusw2,7,c
 17405                           
 17406                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 17407  00422E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17408  004232  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17409  004236  0E04               	movlw	4
 17410  004238  6EDF               	movwf	indf2,c
 17411                           
 17412                           ; BSR set to: 0
 17413                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17414  00423A  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17415  00423E  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17416  004242  0E00               	movlw	0
 17417  004244  8EDB               	bsf	plusw2,7,c
 17418                           
 17419                           ; BSR set to: 0
 17420                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 17421  004246  0012               	return	
 17422  004248                     l219:
 17423                           
 17424                           ; BSR set to: 0
 17425                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 17426  004248  010D               	movlb	13	; () banked
 17427  00424A  AF30               	btfss	48,7,b	;volatile
 17428  00424C  D012               	goto	l224
 17429                           
 17430                           ; BSR set to: 13
 17431                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 17432  00424E  0E01               	movlw	1
 17433  004250  0100               	movlb	0	; () banked
 17434  004252  6FB6               	movwf	_controlTransferState& (0+255),b
 17435                           
 17436                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 17437  004254  51AD               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 17438  004256  B4D8               	btfsc	status,2,c
 17439                           
 17440                           ; BSR set to: 0
 17441                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 17442  004258  ECCC  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 17443                           
 17444                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 17445  00425C  0E00               	movlw	0
 17446  00425E  0100               	movlb	0	; () banked
 17447  004260  6FAE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17448                           
 17449                           ; BSR set to: 0
 17450                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 17451  004262  0E00               	movlw	0
 17452  004264  6FAF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17453                           
 17454                           ; BSR set to: 0
 17455                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 17456  004266  51B0               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17457  004268  A4D8               	btfss	status,2,c
 17458  00426A  0012               	return	
 17459                           
 17460                           ; BSR set to: 0
 17461                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 17462  00426C  ECAC  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17463                           
 17464                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 17465  004270  0012               	return	
 17466  004272                     l224:
 17467                           
 17468                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 17469  004272  0E02               	movlw	2
 17470  004274  0100               	movlb	0	; () banked
 17471  004276  6FB6               	movwf	_controlTransferState& (0+255),b
 17472                           
 17473                           ; BSR set to: 0
 17474                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 17475  004278  EE20 F001          	lfsr	2,1
 17476  00427C  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17477  00427E  26D9               	addwf	fsr2l,f,c
 17478  004280  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17479  004282  22DA               	addwfc	fsr2h,f,c
 17480  004284  0E08               	movlw	8
 17481  004286  6EDF               	movwf	indf2,c
 17482                           
 17483                           ; BSR set to: 0
 17484                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17485  004288  EE20 F002          	lfsr	2,2
 17486  00428C  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17487  00428E  26D9               	addwf	fsr2l,f,c
 17488  004290  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17489  004292  22DA               	addwfc	fsr2h,f,c
 17490  004294  0E30               	movlw	48
 17491  004296  6EDE               	movwf	postinc2,c
 17492  004298  0E0D               	movlw	13
 17493  00429A  6EDD               	movwf	postdec2,c
 17494                           
 17495                           ; BSR set to: 0
 17496                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 17497  00429C  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17498  0042A0  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17499  0042A4  0E04               	movlw	4
 17500  0042A6  6EDF               	movwf	indf2,c
 17501                           
 17502                           ; BSR set to: 0
 17503                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17504  0042A8  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17505  0042AC  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17506  0042B0  0E00               	movlw	0
 17507  0042B2  8EDB               	bsf	plusw2,7,c
 17508                           
 17509                           ; BSR set to: 0
 17510                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 17511  0042B4  0E00               	movlw	0
 17512  0042B6  6FAE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17513                           
 17514                           ; BSR set to: 0
 17515                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 17516  0042B8  0E00               	movlw	0
 17517  0042BA  6FAF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17518                           
 17519                           ; BSR set to: 0
 17520                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 17521  0042BC  51B0               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17522  0042BE  A4D8               	btfss	status,2,c
 17523  0042C0  0012               	return	
 17524                           
 17525                           ; BSR set to: 0
 17526                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 17527  0042C2  ECAC  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17528  0042C6  0012               	return	
 17529  0042C8                     __end_of_USBCtrlEPServiceComplete:
 17530                           	opt stack 0
 17531                           tblptru	equ	0xFF8
 17532                           tblptrh	equ	0xFF7
 17533                           tblptrl	equ	0xFF6
 17534                           tablat	equ	0xFF5
 17535                           prodh	equ	0xFF4
 17536                           prodl	equ	0xFF3
 17537                           intcon	equ	0xFF2
 17538                           intcon2	equ	0xFF1
 17539                           intcon3	equ	0xFF0
 17540                           postinc0	equ	0xFEE
 17541                           wreg	equ	0xFE8
 17542                           indf1	equ	0xFE7
 17543                           postdec1	equ	0xFE5
 17544                           plusw1	equ	0xFE3
 17545                           fsr1h	equ	0xFE2
 17546                           fsr1l	equ	0xFE1
 17547                           indf2	equ	0xFDF
 17548                           postinc2	equ	0xFDE
 17549                           postdec2	equ	0xFDD
 17550                           plusw2	equ	0xFDB
 17551                           fsr2h	equ	0xFDA
 17552                           fsr2l	equ	0xFD9
 17553                           status	equ	0xFD8
 17554                           
 17555 ;; *************** function _USBCtrlEPAllowDataStage *****************
 17556 ;; Defined at:
 17557 ;;		line 1490 in file "usb_device.c"
 17558 ;; Parameters:    Size  Location     Type
 17559 ;;		None
 17560 ;; Auto vars:     Size  Location     Type
 17561 ;;		None
 17562 ;; Return value:  Size  Location     Type
 17563 ;;                  1    wreg      void 
 17564 ;; Registers used:
 17565 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17566 ;; Tracked objects:
 17567 ;;		On entry : 0/0
 17568 ;;		On exit  : 0/0
 17569 ;;		Unchanged: 0/0
 17570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17575 ;;Total ram usage:        0 bytes
 17576 ;; Hardware stack levels used:    1
 17577 ;; Hardware stack levels required when called:    1
 17578 ;; This function calls:
 17579 ;;		_USBCtrlTrfTxService
 17580 ;; This function is called by:
 17581 ;;		_USBCtrlEPServiceComplete
 17582 ;; This function uses a non-reentrant model
 17583 ;;
 17584                           
 17585                           	psect	text81
 17586  005798                     __ptext81:
 17587                           	opt stack 0
 17588  005798                     _USBCtrlEPAllowDataStage:
 17589                           	opt stack 25
 17590                           
 17591                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 17592                           
 17593                           ;incstack = 0
 17594  005798  0E00               	movlw	0
 17595  00579A  0100               	movlb	0	; () banked
 17596  00579C  6FAD               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17597                           
 17598                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 17599  00579E  0E00               	movlw	0
 17600  0057A0  6FAC               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17601                           
 17602                           ; BSR set to: 0
 17603                           ;usb_device.c: 1495: if(controlTransferState == 2)
 17604  0057A2  0E02               	movlw	2
 17605  0057A4  19B6               	xorwf	_controlTransferState& (0+255),w,b
 17606  0057A6  A4D8               	btfss	status,2,c
 17607  0057A8  D01F               	goto	l208
 17608                           
 17609                           ; BSR set to: 0
 17610                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 17611  0057AA  EE20 F001          	lfsr	2,1
 17612  0057AE  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17613  0057B0  26D9               	addwf	fsr2l,f,c
 17614  0057B2  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17615  0057B4  22DA               	addwfc	fsr2h,f,c
 17616  0057B6  0E08               	movlw	8
 17617  0057B8  6EDF               	movwf	indf2,c
 17618                           
 17619                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 17620  0057BA  EE20 F002          	lfsr	2,2
 17621  0057BE  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17622  0057C0  26D9               	addwf	fsr2l,f,c
 17623  0057C2  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17624  0057C4  22DA               	addwfc	fsr2h,f,c
 17625  0057C6  0E38               	movlw	56
 17626  0057C8  6EDE               	movwf	postinc2,c
 17627  0057CA  0E0D               	movlw	13
 17628  0057CC  6EDD               	movwf	postdec2,c
 17629                           
 17630                           ; BSR set to: 0
 17631                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 17632  0057CE  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17633  0057D2  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17634  0057D6  0E48               	movlw	72
 17635  0057D8  6EDF               	movwf	indf2,c
 17636                           
 17637                           ; BSR set to: 0
 17638                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17639  0057DA  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17640  0057DE  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17641  0057E2  0E00               	movlw	0
 17642  0057E4  8EDB               	bsf	plusw2,7,c
 17643                           
 17644                           ;usb_device.c: 1502: }
 17645  0057E6  0012               	return	
 17646  0057E8                     l208:
 17647                           
 17648                           ; BSR set to: 0
 17649                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 17650                           
 17651                           ; BSR set to: 0
 17652  0057E8  516A               	movf	(_inPipes+4)& (0+255),w,b
 17653  0057EA  010D               	movlb	13	; () banked
 17654  0057EC  5D36               	subwf	54,w,b	;volatile
 17655  0057EE  0100               	movlb	0	; () banked
 17656  0057F0  516B               	movf	(_inPipes+5)& (0+255),w,b
 17657  0057F2  010D               	movlb	13	; () banked
 17658  0057F4  5937               	subwfb	55,w,b	;volatile
 17659  0057F6  B0D8               	btfsc	status,0,c
 17660  0057F8  D004               	goto	l210
 17661                           
 17662                           ; BSR set to: 13
 17663                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 17664  0057FA  CD36 F06A          	movff	3382,_inPipes+4	;volatile
 17665  0057FE  CD37 F06B          	movff	3383,_inPipes+5	;volatile
 17666  005802                     l210:
 17667                           
 17668                           ; BSR set to: 13
 17669                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 17670                           
 17671                           ; BSR set to: 13
 17672  005802  EC1C  F026         	call	_USBCtrlTrfTxService	;wreg free
 17673                           
 17674                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 17675  005806  0100               	movlb	0	; () banked
 17676  005808  EE20 F002          	lfsr	2,2
 17677  00580C  516C               	movf	_pBDTEntryIn& (0+255),w,b
 17678  00580E  26D9               	addwf	fsr2l,f,c
 17679  005810  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17680  005812  22DA               	addwfc	fsr2h,f,c
 17681  005814  0E38               	movlw	56
 17682  005816  6EDE               	movwf	postinc2,c
 17683  005818  0E0D               	movlw	13
 17684  00581A  6EDD               	movwf	postdec2,c
 17685                           
 17686                           ; BSR set to: 0
 17687                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 17688  00581C  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17689  005820  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17690  005824  0E48               	movlw	72
 17691  005826  6EDF               	movwf	indf2,c
 17692                           
 17693                           ; BSR set to: 0
 17694                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17695  005828  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17696  00582C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17697  005830  0E00               	movlw	0
 17698  005832  8EDB               	bsf	plusw2,7,c
 17699  005834  0012               	return	
 17700  005836                     __end_of_USBCtrlEPAllowDataStage:
 17701                           	opt stack 0
 17702                           tblptru	equ	0xFF8
 17703                           tblptrh	equ	0xFF7
 17704                           tblptrl	equ	0xFF6
 17705                           tablat	equ	0xFF5
 17706                           prodh	equ	0xFF4
 17707                           prodl	equ	0xFF3
 17708                           intcon	equ	0xFF2
 17709                           intcon2	equ	0xFF1
 17710                           intcon3	equ	0xFF0
 17711                           postinc0	equ	0xFEE
 17712                           wreg	equ	0xFE8
 17713                           indf1	equ	0xFE7
 17714                           postdec1	equ	0xFE5
 17715                           plusw1	equ	0xFE3
 17716                           fsr1h	equ	0xFE2
 17717                           fsr1l	equ	0xFE1
 17718                           indf2	equ	0xFDF
 17719                           postinc2	equ	0xFDE
 17720                           postdec2	equ	0xFDD
 17721                           plusw2	equ	0xFDB
 17722                           fsr2h	equ	0xFDA
 17723                           fsr2l	equ	0xFD9
 17724                           status	equ	0xFD8
 17725                           
 17726 ;; *************** function _USBCheckStdRequest *****************
 17727 ;; Defined at:
 17728 ;;		line 2688 in file "usb_device.c"
 17729 ;; Parameters:    Size  Location     Type
 17730 ;;		None
 17731 ;; Auto vars:     Size  Location     Type
 17732 ;;		None
 17733 ;; Return value:  Size  Location     Type
 17734 ;;                  1    wreg      void 
 17735 ;; Registers used:
 17736 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17737 ;; Tracked objects:
 17738 ;;		On entry : 0/0
 17739 ;;		On exit  : 0/0
 17740 ;;		Unchanged: 0/0
 17741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17746 ;;Total ram usage:        0 bytes
 17747 ;; Hardware stack levels used:    1
 17748 ;; Hardware stack levels required when called:    5
 17749 ;; This function calls:
 17750 ;;		_USBStdFeatureReqHandler
 17751 ;;		_USBStdGetDscHandler
 17752 ;;		_USBStdGetStatusHandler
 17753 ;;		_USBStdSetCfgHandler
 17754 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17755 ;; This function is called by:
 17756 ;;		_USBCtrlTrfSetupHandler
 17757 ;; This function uses a non-reentrant model
 17758 ;;
 17759                           
 17760                           	psect	text82
 17761  0043BA                     __ptext82:
 17762                           	opt stack 0
 17763  0043BA                     _USBCheckStdRequest:
 17764                           	opt stack 22
 17765                           
 17766                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 17767                           
 17768                           ; BSR set to: 0
 17769                           ;incstack = 0
 17770  0043BA  010D               	movlb	13	; () banked
 17771  0043BC  3930               	swapf	48,w,b	;volatile
 17772  0043BE  32E8               	rrcf	wreg,f,c
 17773  0043C0  0B03               	andlw	3
 17774  0043C2  0900               	iorlw	0
 17775  0043C4  A4D8               	btfss	status,2,c
 17776  0043C6  0012               	return	
 17777  0043C8  D047               	goto	l343
 17778  0043CA                     l344:
 17779                           
 17780                           ; BSR set to: 13
 17781                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 17782  0043CA  0100               	movlb	0	; () banked
 17783  0043CC  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 17784                           
 17785                           ; BSR set to: 0
 17786                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 17787  0043CE  0E08               	movlw	8
 17788  0043D0  6E5F               	movwf	_USBDeviceState,c
 17789                           
 17790                           ;usb_device.c: 2698: break;
 17791  0043D2  0012               	return	
 17792  0043D4                     
 17793                           ;usb_device.c: 2700: USBStdGetDscHandler();
 17794                           
 17795                           ; BSR set to: 0
 17796  0043D4  EC8F  F01C         	call	_USBStdGetDscHandler	;wreg free
 17797                           
 17798                           ;usb_device.c: 2701: break;
 17799  0043D8  0012               	return	
 17800  0043DA                     
 17801                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 17802  0043DA  ECA1  F023         	call	_USBStdSetCfgHandler	;wreg free
 17803                           
 17804                           ;usb_device.c: 2704: break;
 17805  0043DE  0012               	return	
 17806  0043E0                     
 17807                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 17808  0043E0  0EBD               	movlw	low _USBActiveConfiguration
 17809  0043E2  0100               	movlb	0	; () banked
 17810  0043E4  6F66               	movwf	_inPipes& (0+255),b
 17811  0043E6  0E00               	movlw	high _USBActiveConfiguration
 17812  0043E8  6F67               	movwf	(_inPipes+1)& (0+255),b
 17813                           
 17814                           ; BSR set to: 0
 17815                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17816  0043EA  8169               	bsf	(_inPipes+3)& (0+255),0,b
 17817                           
 17818                           ; BSR set to: 0
 17819                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 17820  0043EC  0E01               	movlw	1
 17821  0043EE  6F6A               	movwf	(_inPipes+4)& (0+255),b
 17822                           
 17823                           ; BSR set to: 0
 17824                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 17825  0043F0  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 17826                           
 17827                           ;usb_device.c: 2710: break;
 17828  0043F2  0012               	return	
 17829  0043F4                     
 17830                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 17831                           
 17832                           ; BSR set to: 0
 17833  0043F4  ECE0  F029         	call	_USBStdGetStatusHandler	;wreg free
 17834                           
 17835                           ;usb_device.c: 2713: break;
 17836  0043F8  0012               	return	
 17837  0043FA                     
 17838                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 17839  0043FA  ECD6  F00B         	call	_USBStdFeatureReqHandler	;wreg free
 17840                           
 17841                           ;usb_device.c: 2717: break;
 17842  0043FE  0012               	return	
 17843  004400                     
 17844                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 17845  004400  010D               	movlb	13	; () banked
 17846  004402  5134               	movf	52,w,b	;volatile
 17847  004404  0D01               	mullw	1
 17848  004406  0EB8               	movlw	low _USBAlternateInterface
 17849  004408  24F3               	addwf	prodl,w,c
 17850  00440A  0100               	movlb	0	; () banked
 17851  00440C  6F66               	movwf	_inPipes& (0+255),b
 17852  00440E  0E00               	movlw	high _USBAlternateInterface
 17853  004410  20F4               	addwfc	prodh,w,c
 17854  004412  6F67               	movwf	(_inPipes+1)& (0+255),b
 17855                           
 17856                           ; BSR set to: 0
 17857                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 17858  004414  8169               	bsf	(_inPipes+3)& (0+255),0,b
 17859                           
 17860                           ; BSR set to: 0
 17861                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 17862  004416  0E01               	movlw	1
 17863  004418  6F6A               	movwf	(_inPipes+4)& (0+255),b
 17864                           
 17865                           ; BSR set to: 0
 17866                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 17867  00441A  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 17868                           
 17869                           ;usb_device.c: 2723: break;
 17870  00441C  0012               	return	
 17871  00441E                     l353:
 17872                           
 17873                           ; BSR set to: 13
 17874                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 17875  00441E  0100               	movlb	0	; () banked
 17876  004420  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 17877                           
 17878                           ; BSR set to: 0
 17879                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 17880  004422  010D               	movlb	13	; () banked
 17881  004424  5134               	movf	52,w,b	;volatile
 17882  004426  0D01               	mullw	1
 17883  004428  0EB8               	movlw	low _USBAlternateInterface
 17884  00442A  24F3               	addwf	prodl,w,c
 17885  00442C  6ED9               	movwf	fsr2l,c
 17886  00442E  0E00               	movlw	high _USBAlternateInterface
 17887  004430  20F4               	addwfc	prodh,w,c
 17888  004432  6EDA               	movwf	fsr2h,c
 17889  004434  CD32 FFDF          	movff	3378,indf2	;volatile
 17890                           
 17891                           ;usb_device.c: 2727: break;
 17892  004438  0012               	return	
 17893  00443A                     
 17894                           ; BSR set to: 13
 17895                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 17896                           
 17897                           ; BSR set to: 13
 17898  00443A  0E00               	movlw	0
 17899  00443C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17900  00443E  0E02               	movlw	2
 17901  004440  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17902  004442  0E00               	movlw	0
 17903  004444  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17904  004446  0E00               	movlw	0
 17905  004448  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17906  00444A  0E00               	movlw	0
 17907  00444C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17908  00444E  0E00               	movlw	0
 17909  004450  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17910  004452  EC41  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17911                           
 17912                           ;usb_device.c: 2734: }
 17913                           
 17914                           ;usb_device.c: 2733: break;
 17915                           
 17916                           ;usb_device.c: 2732: default:
 17917                           
 17918                           ;usb_device.c: 2731: case 12:
 17919                           
 17920                           ;usb_device.c: 2730: break;
 17921  004456  0012               	return	
 17922  004458                     l343:
 17923  004458  010D               	movlb	13	; () banked
 17924  00445A  5131               	movf	49,w,b	;volatile
 17925                           
 17926                           ; Switch size 1, requested type "space"
 17927                           ; Number of cases is 11, Range of values is 0 to 12
 17928                           ; switch strategies available:
 17929                           ; Name         Instructions Cycles
 17930                           ; simple_byte           34    18 (average)
 17931                           ;	Chosen strategy is simple_byte
 17932  00445C  0A00               	xorlw	0	; case 0
 17933  00445E  B4D8               	btfsc	status,2,c
 17934  004460  D7C9               	goto	l349
 17935  004462  0A01               	xorlw	1	; case 1
 17936  004464  B4D8               	btfsc	status,2,c
 17937  004466  D7C9               	goto	l350
 17938  004468  0A02               	xorlw	2	; case 3
 17939  00446A  B4D8               	btfsc	status,2,c
 17940  00446C  D7C6               	goto	l350
 17941  00446E  0A06               	xorlw	6	; case 5
 17942  004470  B4D8               	btfsc	status,2,c
 17943  004472  D7AB               	goto	l344
 17944  004474  0A03               	xorlw	3	; case 6
 17945  004476  B4D8               	btfsc	status,2,c
 17946  004478  D7AD               	goto	l346
 17947  00447A  0A01               	xorlw	1	; case 7
 17948  00447C  B4D8               	btfsc	status,2,c
 17949  00447E  D7DD               	goto	l354
 17950  004480  0A0F               	xorlw	15	; case 8
 17951  004482  B4D8               	btfsc	status,2,c
 17952  004484  D7AD               	goto	l348
 17953  004486  0A01               	xorlw	1	; case 9
 17954  004488  B4D8               	btfsc	status,2,c
 17955  00448A  D7A7               	goto	l347
 17956  00448C  0A03               	xorlw	3	; case 10
 17957  00448E  B4D8               	btfsc	status,2,c
 17958  004490  D7B7               	goto	l352
 17959  004492  0A01               	xorlw	1	; case 11
 17960  004494  B4D8               	btfsc	status,2,c
 17961  004496  D7C3               	goto	l353
 17962  004498  0A07               	xorlw	7	; case 12
 17963  00449A  0012               	return	
 17964  00449C                     __end_of_USBCheckStdRequest:
 17965                           	opt stack 0
 17966                           tblptru	equ	0xFF8
 17967                           tblptrh	equ	0xFF7
 17968                           tblptrl	equ	0xFF6
 17969                           tablat	equ	0xFF5
 17970                           prodh	equ	0xFF4
 17971                           prodl	equ	0xFF3
 17972                           intcon	equ	0xFF2
 17973                           intcon2	equ	0xFF1
 17974                           intcon3	equ	0xFF0
 17975                           postinc0	equ	0xFEE
 17976                           wreg	equ	0xFE8
 17977                           indf1	equ	0xFE7
 17978                           postdec1	equ	0xFE5
 17979                           plusw1	equ	0xFE3
 17980                           fsr1h	equ	0xFE2
 17981                           fsr1l	equ	0xFE1
 17982                           indf2	equ	0xFDF
 17983                           postinc2	equ	0xFDE
 17984                           postdec2	equ	0xFDD
 17985                           plusw2	equ	0xFDB
 17986                           fsr2h	equ	0xFDA
 17987                           fsr2l	equ	0xFD9
 17988                           status	equ	0xFD8
 17989                           
 17990 ;; *************** function _USBStdSetCfgHandler *****************
 17991 ;; Defined at:
 17992 ;;		line 1970 in file "usb_device.c"
 17993 ;; Parameters:    Size  Location     Type
 17994 ;;		None
 17995 ;; Auto vars:     Size  Location     Type
 17996 ;;  i               1   23[COMRAM] unsigned char 
 17997 ;; Return value:  Size  Location     Type
 17998 ;;                  1    wreg      void 
 17999 ;; Registers used:
 18000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 18001 ;; Tracked objects:
 18002 ;;		On entry : 0/0
 18003 ;;		On exit  : 0/0
 18004 ;;		Unchanged: 0/0
 18005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18010 ;;Total ram usage:        1 bytes
 18011 ;; Hardware stack levels used:    1
 18012 ;; Hardware stack levels required when called:    4
 18013 ;; This function calls:
 18014 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18015 ;;		_memset
 18016 ;; This function is called by:
 18017 ;;		_USBCheckStdRequest
 18018 ;; This function uses a non-reentrant model
 18019 ;;
 18020                           
 18021                           	psect	text83
 18022  004742                     __ptext83:
 18023                           	opt stack 0
 18024  004742                     _USBStdSetCfgHandler:
 18025                           	opt stack 22
 18026                           
 18027                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 18028                           
 18029                           ;incstack = 0
 18030  004742  0100               	movlb	0	; () banked
 18031  004744  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18032                           
 18033                           ; BSR set to: 0
 18034                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 18035  004746  0E27               	movlw	39
 18036  004748  6E01               	movwf	memset@p1,c
 18037  00474A  0E0F               	movlw	15
 18038  00474C  6E02               	movwf	memset@p1+1,c
 18039  00474E  0E00               	movlw	0
 18040  004750  6E04               	movwf	memset@c+1,c
 18041  004752  0E00               	movlw	0
 18042  004754  6E03               	movwf	memset@c,c
 18043  004756  0E00               	movlw	0
 18044  004758  6E06               	movwf	memset@n+1,c
 18045  00475A  0E02               	movlw	2
 18046  00475C  6E05               	movwf	memset@n,c
 18047  00475E  EC8B  F03B         	call	_memset	;wreg free
 18048                           
 18049                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 18050  004762  0E00               	movlw	0
 18051  004764  6E01               	movwf	memset@p1,c
 18052  004766  0E0D               	movlw	13
 18053  004768  6E02               	movwf	memset@p1+1,c
 18054  00476A  0E00               	movlw	0
 18055  00476C  6E04               	movwf	memset@c+1,c
 18056  00476E  0E00               	movlw	0
 18057  004770  6E03               	movwf	memset@c,c
 18058  004772  0E00               	movlw	0
 18059  004774  6E06               	movwf	memset@n+1,c
 18060  004776  0E30               	movlw	48
 18061  004778  6E05               	movwf	memset@n,c
 18062  00477A  EC8B  F03B         	call	_memset	;wreg free
 18063                           
 18064                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 18065  00477E  8C65               	bsf	3941,6,c	;volatile
 18066                           
 18067                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 18068  004780  0E00               	movlw	0
 18069  004782  6E18               	movwf	USBStdSetCfgHandler@i,c
 18070  004784                     l10403:
 18071  004784  0E02               	movlw	2
 18072  004786  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 18073  004788  D001               	goto	l260
 18074  00478A  D016               	goto	u7750
 18075  00478C                     l260:
 18076                           
 18077                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 18078  00478C  5018               	movf	USBStdSetCfgHandler@i,w,c
 18079  00478E  0D01               	mullw	1
 18080  004790  0E61               	movlw	low _ep_data_in
 18081  004792  24F3               	addwf	prodl,w,c
 18082  004794  6ED9               	movwf	fsr2l,c
 18083  004796  0E01               	movlw	high _ep_data_in
 18084  004798  20F4               	addwfc	prodh,w,c
 18085  00479A  6EDA               	movwf	fsr2h,c
 18086  00479C  0E00               	movlw	0
 18087  00479E  6EDF               	movwf	indf2,c
 18088                           
 18089                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 18090  0047A0  5018               	movf	USBStdSetCfgHandler@i,w,c
 18091  0047A2  0D01               	mullw	1
 18092  0047A4  0E5E               	movlw	low _ep_data_out
 18093  0047A6  24F3               	addwf	prodl,w,c
 18094  0047A8  6ED9               	movwf	fsr2l,c
 18095  0047AA  0E01               	movlw	high _ep_data_out
 18096  0047AC  20F4               	addwfc	prodh,w,c
 18097  0047AE  6EDA               	movwf	fsr2h,c
 18098  0047B0  0E00               	movlw	0
 18099  0047B2  6EDF               	movwf	indf2,c
 18100  0047B4  2A18               	incf	USBStdSetCfgHandler@i,f,c
 18101  0047B6  D7E6               	goto	l10403
 18102  0047B8                     u7750:
 18103                           
 18104                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 18105  0047B8  0EB8               	movlw	low _USBAlternateInterface
 18106  0047BA  6E01               	movwf	memset@p1,c
 18107  0047BC  0E00               	movlw	high _USBAlternateInterface
 18108  0047BE  6E02               	movwf	memset@p1+1,c
 18109  0047C0  0E00               	movlw	0
 18110  0047C2  6E04               	movwf	memset@c+1,c
 18111  0047C4  0E00               	movlw	0
 18112  0047C6  6E03               	movwf	memset@c,c
 18113  0047C8  0E00               	movlw	0
 18114  0047CA  6E06               	movwf	memset@n+1,c
 18115  0047CC  0E02               	movlw	2
 18116  0047CE  6E05               	movwf	memset@n,c
 18117  0047D0  EC8B  F03B         	call	_memset	;wreg free
 18118                           
 18119                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 18120  0047D4  9C65               	bcf	3941,6,c	;volatile
 18121                           
 18122                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 18123  0047D6  0E08               	movlw	8
 18124  0047D8  0100               	movlb	0	; () banked
 18125  0047DA  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 18126  0047DC  0E0D               	movlw	13
 18127  0047DE  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18128                           
 18129                           ; BSR set to: 0
 18130                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 18131  0047E0  0E00               	movlw	0
 18132  0047E2  6F9A               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 18133  0047E4  0E0D               	movlw	13
 18134  0047E6  6F9B               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 18138  0047E8  C09A  F098         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 18139  0047EC  C09B  F099         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 18140                           
 18141                           ; BSR set to: 0
 18142                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 18143  0047F0  CD32 F0BD          	movff	3378,_USBActiveConfiguration	;volatile
 18144                           
 18145                           ; BSR set to: 0
 18146                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 18147  0047F4  51BD               	movf	_USBActiveConfiguration& (0+255),w,b
 18148  0047F6  A4D8               	btfss	status,2,c
 18149  0047F8  D003               	goto	l262
 18150                           
 18151                           ; BSR set to: 0
 18152                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 18153  0047FA  0E10               	movlw	16
 18154  0047FC  6E5F               	movwf	_USBDeviceState,c
 18155                           
 18156                           ;usb_device.c: 2015: }
 18157  0047FE  0012               	return	
 18158  004800                     l262:
 18159                           
 18160                           ; BSR set to: 0
 18161                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 18162                           
 18163                           ; BSR set to: 0
 18164  004800  0E00               	movlw	0
 18165  004802  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18166  004804  0E01               	movlw	1
 18167  004806  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18168  004808  0EBD               	movlw	low _USBActiveConfiguration
 18169  00480A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18170  00480C  0E00               	movlw	high _USBActiveConfiguration
 18171  00480E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18172  004810  0E00               	movlw	0
 18173  004812  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18174  004814  0E01               	movlw	1
 18175  004816  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18176  004818  EC41  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18177                           
 18178                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 18179  00481C  0E20               	movlw	32
 18180  00481E  6E5F               	movwf	_USBDeviceState,c
 18181  004820  0012               	return	
 18182  004822                     __end_of_USBStdSetCfgHandler:
 18183                           	opt stack 0
 18184                           tblptru	equ	0xFF8
 18185                           tblptrh	equ	0xFF7
 18186                           tblptrl	equ	0xFF6
 18187                           tablat	equ	0xFF5
 18188                           prodh	equ	0xFF4
 18189                           prodl	equ	0xFF3
 18190                           intcon	equ	0xFF2
 18191                           intcon2	equ	0xFF1
 18192                           intcon3	equ	0xFF0
 18193                           postinc0	equ	0xFEE
 18194                           wreg	equ	0xFE8
 18195                           indf1	equ	0xFE7
 18196                           postdec1	equ	0xFE5
 18197                           plusw1	equ	0xFE3
 18198                           fsr1h	equ	0xFE2
 18199                           fsr1l	equ	0xFE1
 18200                           indf2	equ	0xFDF
 18201                           postinc2	equ	0xFDE
 18202                           postdec2	equ	0xFDD
 18203                           plusw2	equ	0xFDB
 18204                           fsr2h	equ	0xFDA
 18205                           fsr2l	equ	0xFD9
 18206                           status	equ	0xFD8
 18207                           
 18208 ;; *************** function _memset *****************
 18209 ;; Defined at:
 18210 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 18211 ;; Parameters:    Size  Location     Type
 18212 ;;  p1              2    0[COMRAM] PTR void 
 18213 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18214 ;;  c               2    2[COMRAM] int 
 18215 ;;  n               2    4[COMRAM] unsigned int 
 18216 ;; Auto vars:     Size  Location     Type
 18217 ;;  p               2    6[COMRAM] PTR unsigned char 
 18218 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18219 ;; Return value:  Size  Location     Type
 18220 ;;                  2    0[COMRAM] PTR void 
 18221 ;; Registers used:
 18222 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18223 ;; Tracked objects:
 18224 ;;		On entry : 0/0
 18225 ;;		On exit  : 0/0
 18226 ;;		Unchanged: 0/0
 18227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18228 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18229 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18231 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18232 ;;Total ram usage:        8 bytes
 18233 ;; Hardware stack levels used:    1
 18234 ;; This function calls:
 18235 ;;		Nothing
 18236 ;; This function is called by:
 18237 ;;		_USBDeviceInit
 18238 ;;		_USBStdSetCfgHandler
 18239 ;; This function uses a non-reentrant model
 18240 ;;
 18241                           
 18242                           	psect	text84
 18243  007716                     __ptext84:
 18244                           	opt stack 0
 18245  007716                     _memset:
 18246                           	opt stack 28
 18247                           
 18248                           ;incstack = 0
 18249  007716  C001  F007         	movff	memset@p1,memset@p
 18250  00771A  C002  F008         	movff	memset@p1+1,memset@p+1
 18251  00771E  D008               	goto	l3355
 18252  007720                     l9831:
 18253  007720  C007  FFD9         	movff	memset@p,fsr2l
 18254  007724  C008  FFDA         	movff	memset@p+1,fsr2h
 18255  007728  C003  FFDF         	movff	memset@c,indf2
 18256  00772C  4A07               	infsnz	memset@p,f,c
 18257  00772E  2A08               	incf	memset@p+1,f,c
 18258  007730                     l3355:
 18259  007730  0605               	decf	memset@n,f,c
 18260  007732  A0D8               	btfss	status,0,c
 18261  007734  0606               	decf	memset@n+1,f,c
 18262  007736  2805               	incf	memset@n,w,c
 18263  007738  E1F3               	bnz	l9831
 18264  00773A  2806               	incf	memset@n+1,w,c
 18265  00773C  B4D8               	btfsc	status,2,c
 18266  00773E  0012               	return	
 18267  007740  D7EF               	goto	l3356
 18268  007742                     __end_of_memset:
 18269                           	opt stack 0
 18270                           tblptru	equ	0xFF8
 18271                           tblptrh	equ	0xFF7
 18272                           tblptrl	equ	0xFF6
 18273                           tablat	equ	0xFF5
 18274                           prodh	equ	0xFF4
 18275                           prodl	equ	0xFF3
 18276                           intcon	equ	0xFF2
 18277                           intcon2	equ	0xFF1
 18278                           intcon3	equ	0xFF0
 18279                           postinc0	equ	0xFEE
 18280                           wreg	equ	0xFE8
 18281                           indf1	equ	0xFE7
 18282                           postdec1	equ	0xFE5
 18283                           plusw1	equ	0xFE3
 18284                           fsr1h	equ	0xFE2
 18285                           fsr1l	equ	0xFE1
 18286                           indf2	equ	0xFDF
 18287                           postinc2	equ	0xFDE
 18288                           postdec2	equ	0xFDD
 18289                           plusw2	equ	0xFDB
 18290                           fsr2h	equ	0xFDA
 18291                           fsr2l	equ	0xFD9
 18292                           status	equ	0xFD8
 18293                           
 18294 ;; *************** function _USBStdGetStatusHandler *****************
 18295 ;; Defined at:
 18296 ;;		line 2131 in file "usb_device.c"
 18297 ;; Parameters:    Size  Location     Type
 18298 ;;		None
 18299 ;; Auto vars:     Size  Location     Type
 18300 ;;  p               2    1[COMRAM] PTR struct __BDT
 18301 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 18302 ;; Return value:  Size  Location     Type
 18303 ;;                  1    wreg      void 
 18304 ;; Registers used:
 18305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18306 ;; Tracked objects:
 18307 ;;		On entry : 0/0
 18308 ;;		On exit  : 0/0
 18309 ;;		Unchanged: 0/0
 18310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18312 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18313 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18314 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18315 ;;Total ram usage:        3 bytes
 18316 ;; Hardware stack levels used:    1
 18317 ;; This function calls:
 18318 ;;		Nothing
 18319 ;; This function is called by:
 18320 ;;		_USBCheckStdRequest
 18321 ;; This function uses a non-reentrant model
 18322 ;;
 18323                           
 18324                           	psect	text85
 18325  0053C0                     __ptext85:
 18326                           	opt stack 0
 18327  0053C0                     _USBStdGetStatusHandler:
 18328                           	opt stack 26
 18329                           
 18330                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 18331                           
 18332                           ;incstack = 0
 18333  0053C0  0E00               	movlw	0
 18334  0053C2  010D               	movlb	13	; () banked
 18335  0053C4  6F38               	movwf	56,b	;volatile
 18336                           
 18337                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 18338  0053C6  0E00               	movlw	0
 18339  0053C8  6F39               	movwf	57,b	;volatile
 18340                           
 18341                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 18342  0053CA  D039               	goto	l281
 18343  0053CC                     l282:
 18344                           
 18345                           ; BSR set to: 13
 18346                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 18347  0053CC  0100               	movlb	0	; () banked
 18348  0053CE  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18349                           
 18350                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 18351                           
 18352                           ; BSR set to: 13
 18353                           
 18354                           ; BSR set to: 0
 18355                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 18356                           
 18357                           ;usb_device.c: 2144: if(0 == 1)
 18358  0053D0  0100               	movlb	0	; () banked
 18359  0053D2  05B5               	decf	_RemoteWakeup& (0+255),w,b
 18360  0053D4  A4D8               	btfss	status,2,c
 18361  0053D6  D03E               	goto	l285
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 18365  0053D8  010D               	movlb	13	; () banked
 18366  0053DA  8338               	bsf	56,1,b	;volatile
 18367                           
 18368                           ; BSR set to: 13
 18369                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 18370  0053DC  D03B               	goto	l285
 18371  0053DE                     l286:
 18372                           
 18373                           ; BSR set to: 13
 18374                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 18375  0053DE  0100               	movlb	0	; () banked
 18376  0053E0  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18377                           
 18378                           ;usb_device.c: 2156: break;
 18379  0053E2  D038               	goto	l285
 18380  0053E4                     l287:
 18381                           
 18382                           ; BSR set to: 13
 18383                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 18384  0053E4  0100               	movlb	0	; () banked
 18385  0053E6  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18386                           
 18387                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 18388  0053E8  010D               	movlb	13	; () banked
 18389  0053EA  BF34               	btfsc	52,7,b	;volatile
 18390  0053EC  D00A               	goto	l288
 18391                           
 18392                           ; BSR set to: 13
 18393                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 18394  0053EE  5134               	movf	52,w,b	;volatile
 18395  0053F0  0B0F               	andlw	15
 18396  0053F2  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 18397  0053F4  5001               	movf	??_USBStdGetStatusHandler,w,c
 18398  0053F6  0D02               	mullw	2
 18399  0053F8  0E72               	movlw	low _pBDTEntryOut
 18400  0053FA  24F3               	addwf	prodl,w,c
 18401  0053FC  6ED9               	movwf	fsr2l,c
 18402  0053FE  0E00               	movlw	high _pBDTEntryOut
 18403  005400  D009               	goto	L6
 18404  005402                     l288:
 18405                           
 18406                           ; BSR set to: 13
 18407                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 18408                           
 18409                           ; BSR set to: 13
 18410  005402  5134               	movf	52,w,b	;volatile
 18411  005404  0B0F               	andlw	15
 18412  005406  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 18413  005408  5001               	movf	??_USBStdGetStatusHandler,w,c
 18414  00540A  0D02               	mullw	2
 18415  00540C  0E6C               	movlw	low _pBDTEntryIn
 18416  00540E  24F3               	addwf	prodl,w,c
 18417  005410  6ED9               	movwf	fsr2l,c
 18418  005412  0E00               	movlw	high _pBDTEntryIn
 18419  005414                     L6:
 18420  005414  20F4               	addwfc	prodh,w,c
 18421  005416  6EDA               	movwf	fsr2h,c
 18422  005418  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 18423  00541C  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 18424                           
 18425                           ; BSR set to: 13
 18426                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 18427                           
 18428                           ; BSR set to: 13
 18429  005420  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 18430  005424  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 18431  005428  AEDF               	btfss	indf2,7,c
 18432  00542A  D014               	goto	l285
 18433                           
 18434                           ; BSR set to: 13
 18435  00542C  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 18436  005430  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 18437  005434  A4DF               	btfss	indf2,2,c
 18438  005436  D00E               	goto	l285
 18439                           
 18440                           ; BSR set to: 13
 18441                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 18442  005438  0E01               	movlw	1
 18443  00543A  6F38               	movwf	56,b	;volatile
 18444                           
 18445                           ; BSR set to: 13
 18446                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 18447                           
 18448                           ; BSR set to: 13
 18449                           ;usb_device.c: 2176: break;
 18450  00543C  D00B               	goto	l285
 18451  00543E                     l281:
 18452                           
 18453                           ; BSR set to: 13
 18454                           
 18455                           ; BSR set to: 13
 18456  00543E  5130               	movf	48,w,b	;volatile
 18457  005440  0B1F               	andlw	31
 18458                           
 18459                           ; Switch size 1, requested type "space"
 18460                           ; Number of cases is 3, Range of values is 0 to 2
 18461                           ; switch strategies available:
 18462                           ; Name         Instructions Cycles
 18463                           ; simple_byte           10     6 (average)
 18464                           ;	Chosen strategy is simple_byte
 18465  005442  0A00               	xorlw	0	; case 0
 18466  005444  B4D8               	btfsc	status,2,c
 18467  005446  D7C2               	goto	l282
 18468  005448  0A01               	xorlw	1	; case 1
 18469  00544A  B4D8               	btfsc	status,2,c
 18470  00544C  D7C8               	goto	l286
 18471  00544E  0A03               	xorlw	3	; case 2
 18472  005450  B4D8               	btfsc	status,2,c
 18473  005452  D7C8               	goto	l287
 18474  005454                     l285:
 18475                           
 18476                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 18477  005454  0100               	movlb	0	; () banked
 18478  005456  AF69               	btfss	(_inPipes+3)& (0+255),7,b
 18479  005458  0012               	return	
 18480                           
 18481                           ; BSR set to: 0
 18482                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 18483  00545A  0E38               	movlw	56
 18484  00545C  6F66               	movwf	_inPipes& (0+255),b
 18485  00545E  0E0D               	movlw	13
 18486  005460  6F67               	movwf	(_inPipes+1)& (0+255),b
 18487                           
 18488                           ; BSR set to: 0
 18489                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18490  005462  8169               	bsf	(_inPipes+3)& (0+255),0,b
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 18494  005464  0E02               	movlw	2
 18495  005466  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18496  005468  0012               	return	
 18497  00546A                     __end_of_USBStdGetStatusHandler:
 18498                           	opt stack 0
 18499                           tblptru	equ	0xFF8
 18500                           tblptrh	equ	0xFF7
 18501                           tblptrl	equ	0xFF6
 18502                           tablat	equ	0xFF5
 18503                           prodh	equ	0xFF4
 18504                           prodl	equ	0xFF3
 18505                           intcon	equ	0xFF2
 18506                           intcon2	equ	0xFF1
 18507                           intcon3	equ	0xFF0
 18508                           postinc0	equ	0xFEE
 18509                           wreg	equ	0xFE8
 18510                           indf1	equ	0xFE7
 18511                           postdec1	equ	0xFE5
 18512                           plusw1	equ	0xFE3
 18513                           fsr1h	equ	0xFE2
 18514                           fsr1l	equ	0xFE1
 18515                           indf2	equ	0xFDF
 18516                           postinc2	equ	0xFDE
 18517                           postdec2	equ	0xFDD
 18518                           plusw2	equ	0xFDB
 18519                           fsr2h	equ	0xFDA
 18520                           fsr2l	equ	0xFD9
 18521                           status	equ	0xFD8
 18522                           
 18523 ;; *************** function _USBStdGetDscHandler *****************
 18524 ;; Defined at:
 18525 ;;		line 2045 in file "usb_device.c"
 18526 ;; Parameters:    Size  Location     Type
 18527 ;;		None
 18528 ;; Auto vars:     Size  Location     Type
 18529 ;;		None
 18530 ;; Return value:  Size  Location     Type
 18531 ;;                  1    wreg      void 
 18532 ;; Registers used:
 18533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18534 ;; Tracked objects:
 18535 ;;		On entry : 0/0
 18536 ;;		On exit  : 0/0
 18537 ;;		Unchanged: 0/0
 18538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18541 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18542 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18543 ;;Total ram usage:        2 bytes
 18544 ;; Hardware stack levels used:    1
 18545 ;; This function calls:
 18546 ;;		Nothing
 18547 ;; This function is called by:
 18548 ;;		_USBCheckStdRequest
 18549 ;; This function uses a non-reentrant model
 18550 ;;
 18551                           
 18552                           	psect	text86
 18553  00391E                     __ptext86:
 18554                           	opt stack 0
 18555  00391E                     _USBStdGetDscHandler:
 18556                           	opt stack 26
 18557                           
 18558                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 18559                           
 18560                           ; BSR set to: 0
 18561                           ;incstack = 0
 18562  00391E  0E80               	movlw	128
 18563  003920  010D               	movlb	13	; () banked
 18564  003922  1930               	xorwf	48,w,b	;volatile
 18565  003924  A4D8               	btfss	status,2,c
 18566  003926  0012               	return	
 18567                           
 18568                           ; BSR set to: 13
 18569                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 18570  003928  0EC0               	movlw	192
 18571  00392A  0100               	movlb	0	; () banked
 18572  00392C  6F69               	movwf	(_inPipes+3)& (0+255),b
 18573                           
 18574                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 18575  00392E  D088               	goto	l268
 18576  003930                     
 18577                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 18578                           
 18579                           ; BSR set to: 0
 18580  003930  0EA4               	movlw	low _device_dsc
 18581  003932  0100               	movlb	0	; () banked
 18582  003934  6F66               	movwf	_inPipes& (0+255),b
 18583  003936  0E8F               	movlw	high _device_dsc
 18584  003938  6F67               	movwf	(_inPipes+1)& (0+255),b
 18585                           
 18586                           ; BSR set to: 0
 18587                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 18588  00393A  0E00               	movlw	0
 18589  00393C  6F6B               	movwf	(_inPipes+5)& (0+255),b
 18590  00393E  0E12               	movlw	18
 18591  003940  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18592                           
 18593                           ;usb_device.c: 2060: break;
 18594  003942  0012               	return	
 18595  003944                     
 18596                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 18597                           
 18598                           ; BSR set to: 0
 18599  003944  010D               	movlb	13	; () banked
 18600  003946  5132               	movf	50,w,b	;volatile
 18601  003948  A4D8               	btfss	status,2,c
 18602  00394A  D043               	goto	l272
 18603                           
 18604                           ; BSR set to: 13
 18605                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 18606  00394C  5132               	movf	50,w,b	;volatile
 18607  00394E  0D02               	mullw	2
 18608  003950  0EA5               	movlw	low _USB_CD_Ptr
 18609  003952  24F3               	addwf	prodl,w,c
 18610  003954  6EF6               	movwf	tblptrl,c
 18611  003956  0E8E               	movlw	high _USB_CD_Ptr
 18612  003958  20F4               	addwfc	prodh,w,c
 18613  00395A  6EF7               	movwf	tblptrh,c
 18614  00395C                     	if	1	;There are 3 active tblptr bytes
 18615  00395C  6AF8               	clrf	tblptru,c
 18616  00395E  0E00               	movlw	low (__mediumconst shr (0+16))
 18617  003960  22F8               	addwfc	tblptru,f,c
 18618  003962                     	endif
 18619  003962  0009               	tblrd		*+
 18620  003964  CFF5 F066          	movff	tablat,_inPipes
 18621  003968  000A               	tblrd		*-
 18622  00396A  CFF5 F067          	movff	tablat,_inPipes+1
 18623                           
 18624                           ; BSR set to: 13
 18625                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 18626  00396E  0E02               	movlw	2
 18627  003970  0100               	movlb	0	; () banked
 18628  003972  2566               	addwf	_inPipes& (0+255),w,b
 18629  003974  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 18630  003976  0E00               	movlw	0
 18631  003978  2167               	addwfc	(_inPipes+1)& (0+255),w,b
 18632  00397A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 18633  00397C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 18634  003980  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 18635  003984  6AF8               	clrf	tblptru,c
 18636  003986  0E0E               	movlw	(high __ramtop+-1)
 18637  003988  64F7               	cpfsgt	tblptrh,c
 18638  00398A  D003               	bra	u7797
 18639  00398C  0008               	tblrd		*
 18640  00398E  50F5               	movf	tablat,w,c
 18641  003990  D005               	bra	u7790
 18642  003992                     u7797:
 18643  003992  CFF6 FFE9          	movff	tblptrl,fsr0l
 18644  003996  CFF7 FFEA          	movff	tblptrh,fsr0h
 18645  00399A  50EF               	movf	indf0,w,c
 18646  00399C                     u7790:
 18647  00399C  0100               	movlb	0	; () banked
 18648  00399E  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18649                           
 18650                           ; BSR set to: 0
 18651                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 18652  0039A0  0E03               	movlw	3
 18653  0039A2  2566               	addwf	_inPipes& (0+255),w,b
 18654  0039A4  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 18655  0039A6  0E00               	movlw	0
 18656  0039A8  2167               	addwfc	(_inPipes+1)& (0+255),w,b
 18657  0039AA  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 18658  0039AC  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 18659  0039B0  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 18660  0039B4  6AF8               	clrf	tblptru,c
 18661  0039B6  0E0E               	movlw	(high __ramtop+-1)
 18662  0039B8  64F7               	cpfsgt	tblptrh,c
 18663  0039BA  D003               	bra	u7807
 18664  0039BC  0008               	tblrd		*
 18665  0039BE  50F5               	movf	tablat,w,c
 18666  0039C0  D005               	bra	u7800
 18667  0039C2                     u7807:
 18668  0039C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 18669  0039C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 18670  0039CA  50EF               	movf	indf0,w,c
 18671  0039CC                     u7800:
 18672  0039CC  0100               	movlb	0	; () banked
 18673  0039CE  6F6B               	movwf	(_inPipes+5)& (0+255),b
 18674                           
 18675                           ;usb_device.c: 2078: }
 18676  0039D0  0012               	return	
 18677  0039D2                     l272:
 18678                           
 18679                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 18680                           
 18681                           ; BSR set to: 0
 18682  0039D2  0E00               	movlw	0
 18683  0039D4  0100               	movlb	0	; () banked
 18684  0039D6  6F69               	movwf	(_inPipes+3)& (0+255),b
 18685                           
 18686                           ; BSR set to: 0
 18687                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 18688  0039D8  0012               	return	
 18689  0039DA                     
 18690                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 18691                           
 18692                           ; BSR set to: 0
 18693  0039DA  0E04               	movlw	4
 18694  0039DC  010D               	movlb	13	; () banked
 18695  0039DE  6132               	cpfslt	50,b	;volatile
 18696  0039E0  D027               	goto	l275
 18697                           
 18698                           ; BSR set to: 13
 18699                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 18700  0039E2  5132               	movf	50,w,b	;volatile
 18701  0039E4  0D02               	mullw	2
 18702  0039E6  0E7B               	movlw	low _USB_SD_Ptr
 18703  0039E8  24F3               	addwf	prodl,w,c
 18704  0039EA  6EF6               	movwf	tblptrl,c
 18705  0039EC  0E8E               	movlw	high _USB_SD_Ptr
 18706  0039EE  20F4               	addwfc	prodh,w,c
 18707  0039F0  6EF7               	movwf	tblptrh,c
 18708  0039F2                     	if	1	;There are 3 active tblptr bytes
 18709  0039F2  6AF8               	clrf	tblptru,c
 18710  0039F4  0E00               	movlw	low (__mediumconst shr (0+16))
 18711  0039F6  22F8               	addwfc	tblptru,f,c
 18712  0039F8                     	endif
 18713  0039F8  0009               	tblrd		*+
 18714  0039FA  CFF5 F066          	movff	tablat,_inPipes
 18715  0039FE  000A               	tblrd		*-
 18716  003A00  CFF5 F067          	movff	tablat,_inPipes+1
 18717                           
 18718                           ; BSR set to: 13
 18719                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 18720  003A04  C066  FFF6         	movff	_inPipes,tblptrl
 18721  003A08  C067  FFF7         	movff	_inPipes+1,tblptrh
 18722  003A0C  6AF8               	clrf	tblptru,c
 18723  003A0E  0E0E               	movlw	(high __ramtop+-1)
 18724  003A10  64F7               	cpfsgt	tblptrh,c
 18725  003A12  D003               	bra	u7827
 18726  003A14  0008               	tblrd		*
 18727  003A16  50F5               	movf	tablat,w,c
 18728  003A18  D005               	bra	u7820
 18729  003A1A                     u7827:
 18730  003A1A  CFF6 FFE9          	movff	tblptrl,fsr0l
 18731  003A1E  CFF7 FFEA          	movff	tblptrh,fsr0h
 18732  003A22  50EF               	movf	indf0,w,c
 18733  003A24                     u7820:
 18734  003A24  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 18735  003A26  5001               	movf	??_USBStdGetDscHandler,w,c
 18736  003A28  0100               	movlb	0	; () banked
 18737  003A2A  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18738  003A2C  6B6B               	clrf	(_inPipes+5)& (0+255),b
 18739                           
 18740                           ;usb_device.c: 2094: }
 18741  003A2E  0012               	return	
 18742  003A30                     l275:
 18743                           
 18744                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 18745                           
 18746                           ; BSR set to: 0
 18747  003A30  0E00               	movlw	0
 18748  003A32  0100               	movlb	0	; () banked
 18749  003A34  6F69               	movwf	(_inPipes+3)& (0+255),b
 18750                           
 18751                           ; BSR set to: 0
 18752                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 18753  003A36  0012               	return	
 18754  003A38                     
 18755                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 18756                           
 18757                           ; BSR set to: 0
 18758  003A38  0E00               	movlw	0
 18759  003A3A  0100               	movlb	0	; () banked
 18760  003A3C  6F69               	movwf	(_inPipes+3)& (0+255),b
 18761                           
 18762                           ; BSR set to: 0
 18763                           ;usb_device.c: 2112: }
 18764                           
 18765                           ;usb_device.c: 2111: break;
 18766  003A3E  0012               	return	
 18767  003A40                     l268:
 18768                           
 18769                           ; BSR set to: 0
 18770                           
 18771                           ; BSR set to: 0
 18772  003A40  010D               	movlb	13	; () banked
 18773  003A42  5133               	movf	51,w,b	;volatile
 18774                           
 18775                           ; Switch size 1, requested type "space"
 18776                           ; Number of cases is 3, Range of values is 1 to 3
 18777                           ; switch strategies available:
 18778                           ; Name         Instructions Cycles
 18779                           ; simple_byte           10     6 (average)
 18780                           ;	Chosen strategy is simple_byte
 18781  003A44  0A01               	xorlw	1	; case 1
 18782  003A46  B4D8               	btfsc	status,2,c
 18783  003A48  D773               	goto	l269
 18784  003A4A  0A03               	xorlw	3	; case 2
 18785  003A4C  B4D8               	btfsc	status,2,c
 18786  003A4E  D77A               	goto	l271
 18787  003A50  0A01               	xorlw	1	; case 3
 18788  003A52  B4D8               	btfsc	status,2,c
 18789  003A54  D7C2               	goto	l274
 18790  003A56  D7F0               	goto	l277
 18791  003A58                     __end_of_USBStdGetDscHandler:
 18792                           	opt stack 0
 18793                           tblptru	equ	0xFF8
 18794                           tblptrh	equ	0xFF7
 18795                           tblptrl	equ	0xFF6
 18796                           tablat	equ	0xFF5
 18797                           prodh	equ	0xFF4
 18798                           prodl	equ	0xFF3
 18799                           intcon	equ	0xFF2
 18800                           intcon2	equ	0xFF1
 18801                           intcon3	equ	0xFF0
 18802                           indf0	equ	0xFEF
 18803                           postinc0	equ	0xFEE
 18804                           fsr0h	equ	0xFEA
 18805                           fsr0l	equ	0xFE9
 18806                           wreg	equ	0xFE8
 18807                           indf1	equ	0xFE7
 18808                           postdec1	equ	0xFE5
 18809                           plusw1	equ	0xFE3
 18810                           fsr1h	equ	0xFE2
 18811                           fsr1l	equ	0xFE1
 18812                           indf2	equ	0xFDF
 18813                           postinc2	equ	0xFDE
 18814                           postdec2	equ	0xFDD
 18815                           plusw2	equ	0xFDB
 18816                           fsr2h	equ	0xFDA
 18817                           fsr2l	equ	0xFD9
 18818                           status	equ	0xFD8
 18819                           
 18820 ;; *************** function _USBStdFeatureReqHandler *****************
 18821 ;; Defined at:
 18822 ;;		line 2756 in file "usb_device.c"
 18823 ;; Parameters:    Size  Location     Type
 18824 ;;		None
 18825 ;; Auto vars:     Size  Location     Type
 18826 ;;  p               2   27[COMRAM] PTR struct __BDT
 18827 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 18828 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 18829 ;;		 -> UEP0(1), 
 18830 ;;  current_ep_d    1   26[COMRAM] struct .
 18831 ;; Return value:  Size  Location     Type
 18832 ;;                  1    wreg      void 
 18833 ;; Registers used:
 18834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 18835 ;; Tracked objects:
 18836 ;;		On entry : 0/0
 18837 ;;		On exit  : 0/0
 18838 ;;		Unchanged: 0/0
 18839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18841 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18843 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18844 ;;Total ram usage:        6 bytes
 18845 ;; Hardware stack levels used:    1
 18846 ;; Hardware stack levels required when called:    4
 18847 ;; This function calls:
 18848 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18849 ;; This function is called by:
 18850 ;;		_USBCheckStdRequest
 18851 ;; This function uses a non-reentrant model
 18852 ;;
 18853                           
 18854                           	psect	text87
 18855  0017AC                     __ptext87:
 18856                           	opt stack 0
 18857  0017AC                     _USBStdFeatureReqHandler:
 18858                           	opt stack 22
 18859                           
 18860                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 18861                           
 18862                           ;incstack = 0
 18863  0017AC  010D               	movlb	13	; () banked
 18864  0017AE  0532               	decf	50,w,b	;volatile
 18865  0017B0  A4D8               	btfss	status,2,c
 18866  0017B2  D011               	goto	l361
 18867                           
 18868                           ; BSR set to: 13
 18869  0017B4  5130               	movf	48,w,b	;volatile
 18870  0017B6  0B1F               	andlw	31
 18871  0017B8  0900               	iorlw	0
 18872  0017BA  A4D8               	btfss	status,2,c
 18873  0017BC  D00C               	goto	l361
 18874                           
 18875                           ; BSR set to: 13
 18876                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 18877  0017BE  0100               	movlb	0	; () banked
 18878  0017C0  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18879                           
 18880                           ; BSR set to: 0
 18881                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 18882  0017C2  0E03               	movlw	3
 18883  0017C4  010D               	movlb	13	; () banked
 18884  0017C6  1931               	xorwf	49,w,b	;volatile
 18885  0017C8  A4D8               	btfss	status,2,c
 18886  0017CA  D002               	goto	l360
 18887                           
 18888                           ; BSR set to: 13
 18889                           ;usb_device.c: 2806: RemoteWakeup = 1;
 18890  0017CC  0E01               	movlw	1
 18891  0017CE  D001               	goto	L7
 18892  0017D0                     l360:
 18893                           
 18894                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 18895                           
 18896                           ; BSR set to: 0
 18897  0017D0  0E00               	movlw	0
 18898  0017D2                     L7:
 18899  0017D2  0100               	movlb	0	; () banked
 18900  0017D4  6FB5               	movwf	_RemoteWakeup& (0+255),b
 18901  0017D6                     l361:
 18902                           
 18903                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 18904                           
 18905                           ; BSR set to: 0
 18906  0017D6  010D               	movlb	13	; () banked
 18907  0017D8  5132               	movf	50,w,b	;volatile
 18908  0017DA  A4D8               	btfss	status,2,c
 18909  0017DC  0012               	return	
 18910                           
 18911                           ; BSR set to: 13
 18912  0017DE  5130               	movf	48,w,b	;volatile
 18913  0017E0  0B1F               	andlw	31
 18914  0017E2  0A02               	xorlw	2
 18915  0017E4  A4D8               	btfss	status,2,c
 18916  0017E6  0012               	return	
 18917                           
 18918                           ; BSR set to: 13
 18919  0017E8  5134               	movf	52,w,b	;volatile
 18920  0017EA  0B0F               	andlw	15
 18921  0017EC  0900               	iorlw	0
 18922  0017EE  B4D8               	btfsc	status,2,c
 18923  0017F0  0012               	return	
 18924                           
 18925                           ; BSR set to: 13
 18926  0017F2  5134               	movf	52,w,b	;volatile
 18927  0017F4  0B0F               	andlw	15
 18928  0017F6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18929  0017F8  0E03               	movlw	3
 18930  0017FA  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 18931  0017FC  0012               	return	
 18932                           
 18933                           ; BSR set to: 13
 18934  0017FE  0E20               	movlw	32
 18935  001800  185F               	xorwf	_USBDeviceState,w,c
 18936  001802  A4D8               	btfss	status,2,c
 18937  001804  0012               	return	
 18938                           
 18939                           ; BSR set to: 13
 18940                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 18941  001806  0100               	movlb	0	; () banked
 18942  001808  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18943                           
 18944                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 18945  00180A  010D               	movlb	13	; () banked
 18946  00180C  BF34               	btfsc	52,7,b	;volatile
 18947  00180E  D019               	goto	l363
 18948                           
 18949                           ; BSR set to: 13
 18950                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 18951  001810  5134               	movf	52,w,b	;volatile
 18952  001812  0B0F               	andlw	15
 18953  001814  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18954  001816  5018               	movf	??_USBStdFeatureReqHandler,w,c
 18955  001818  0D02               	mullw	2
 18956  00181A  0E72               	movlw	low _pBDTEntryOut
 18957  00181C  24F3               	addwf	prodl,w,c
 18958  00181E  6ED9               	movwf	fsr2l,c
 18959  001820  0E00               	movlw	high _pBDTEntryOut
 18960  001822  20F4               	addwfc	prodh,w,c
 18961  001824  6EDA               	movwf	fsr2h,c
 18962  001826  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 18963  00182A  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 18964                           
 18965                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 18966  00182E  5134               	movf	52,w,b	;volatile
 18967  001830  0B0F               	andlw	15
 18968  001832  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18969  001834  5018               	movf	??_USBStdFeatureReqHandler,w,c
 18970  001836  0D01               	mullw	1
 18971  001838  0E5E               	movlw	low _ep_data_out
 18972  00183A  24F3               	addwf	prodl,w,c
 18973  00183C  6ED9               	movwf	fsr2l,c
 18974  00183E  0E01               	movlw	high _ep_data_out
 18975  001840  D018               	goto	L8
 18976  001842                     l363:
 18977                           
 18978                           ; BSR set to: 13
 18979                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 18980                           
 18981                           ; BSR set to: 13
 18982  001842  5134               	movf	52,w,b	;volatile
 18983  001844  0B0F               	andlw	15
 18984  001846  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 18985  001848  5018               	movf	??_USBStdFeatureReqHandler,w,c
 18986  00184A  0D02               	mullw	2
 18987  00184C  0E6C               	movlw	low _pBDTEntryIn
 18988  00184E  24F3               	addwf	prodl,w,c
 18989  001850  6ED9               	movwf	fsr2l,c
 18990  001852  0E00               	movlw	high _pBDTEntryIn
 18991  001854  20F4               	addwfc	prodh,w,c
 18992  001856  6EDA               	movwf	fsr2h,c
 18993  001858  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 18994  00185C  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 18995                           
 18996                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 18997  001860  5134               	movf	52,w,b	;volatile
 18998  001862  0B0F               	andlw	15
 18999  001864  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19000  001866  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19001  001868  0D01               	mullw	1
 19002  00186A  0E61               	movlw	low _ep_data_in
 19003  00186C  24F3               	addwf	prodl,w,c
 19004  00186E  6ED9               	movwf	fsr2l,c
 19005  001870  0E01               	movlw	high _ep_data_in
 19006  001872                     L8:
 19007  001872  20F4               	addwfc	prodh,w,c
 19008  001874  6EDA               	movwf	fsr2h,c
 19009  001876  50DF               	movf	indf2,w,c
 19010  001878  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 19011                           
 19012                           ; BSR set to: 13
 19013                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 19014                           
 19015                           ; BSR set to: 13
 19016  00187A  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 19017  00187C  D006               	goto	l365
 19018                           
 19019                           ; BSR set to: 13
 19020                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 19021  00187E  0EFB               	movlw	251
 19022  001880  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 19023  001882  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19024  001884  0EFF               	movlw	255
 19025  001886  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 19026  001888  D004               	goto	L9
 19027  00188A                     l365:
 19028                           
 19029                           ; BSR set to: 13
 19030                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 19031                           
 19032                           ; BSR set to: 13
 19033  00188A  0E04               	movlw	4
 19034  00188C  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 19035  00188E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19036  001890  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19037  001892                     L9:
 19038  001892  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19039                           
 19040                           ; BSR set to: 13
 19041                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 19042                           
 19043                           ; BSR set to: 13
 19044  001894  BF34               	btfsc	52,7,b	;volatile
 19045  001896  D00A               	goto	l367
 19046                           
 19047                           ; BSR set to: 13
 19048                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 19049  001898  5134               	movf	52,w,b	;volatile
 19050  00189A  0B0F               	andlw	15
 19051  00189C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19052  00189E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19053  0018A0  0D02               	mullw	2
 19054  0018A2  0E72               	movlw	low _pBDTEntryOut
 19055  0018A4  24F3               	addwf	prodl,w,c
 19056  0018A6  6ED9               	movwf	fsr2l,c
 19057  0018A8  0E00               	movlw	high _pBDTEntryOut
 19058  0018AA  D009               	goto	L10
 19059  0018AC                     l367:
 19060                           
 19061                           ; BSR set to: 13
 19062                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 19063                           
 19064                           ; BSR set to: 13
 19065  0018AC  5134               	movf	52,w,b	;volatile
 19066  0018AE  0B0F               	andlw	15
 19067  0018B0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19068  0018B2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19069  0018B4  0D02               	mullw	2
 19070  0018B6  0E6C               	movlw	low _pBDTEntryIn
 19071  0018B8  24F3               	addwf	prodl,w,c
 19072  0018BA  6ED9               	movwf	fsr2l,c
 19073  0018BC  0E00               	movlw	high _pBDTEntryIn
 19074  0018BE                     L10:
 19075  0018BE  20F4               	addwfc	prodh,w,c
 19076  0018C0  6EDA               	movwf	fsr2h,c
 19077  0018C2  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 19078  0018C6  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 19079                           
 19080                           ; BSR set to: 13
 19081                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 19082                           
 19083                           ; BSR set to: 13
 19084  0018CA  0E03               	movlw	3
 19085  0018CC  1931               	xorwf	49,w,b	;volatile
 19086  0018CE  A4D8               	btfss	status,2,c
 19087  0018D0  D02D               	goto	l369
 19088                           
 19089                           ; BSR set to: 13
 19090                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 19091  0018D2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19092  0018D6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19093  0018DA  AEDF               	btfss	indf2,7,c
 19094  0018DC  D01A               	goto	l372
 19095                           
 19096                           ; BSR set to: 13
 19097                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 19098  0018DE  BF34               	btfsc	52,7,b	;volatile
 19099  0018E0  D00A               	goto	l371
 19100                           
 19101                           ; BSR set to: 13
 19102                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 19103  0018E2  5134               	movf	52,w,b	;volatile
 19104  0018E4  0B0F               	andlw	15
 19105  0018E6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19106  0018E8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19107  0018EA  0D01               	mullw	1
 19108  0018EC  0E5E               	movlw	low _ep_data_out
 19109  0018EE  24F3               	addwf	prodl,w,c
 19110  0018F0  6ED9               	movwf	fsr2l,c
 19111  0018F2  0E01               	movlw	high _ep_data_out
 19112  0018F4  D00A               	goto	L11
 19113  0018F6                     l371:
 19114                           
 19115                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 19116                           
 19117                           ; BSR set to: 1
 19118  0018F6  010D               	movlb	13	; () banked
 19119  0018F8  5134               	movf	52,w,b	;volatile
 19120  0018FA  0B0F               	andlw	15
 19121  0018FC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19122  0018FE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19123  001900  0D01               	mullw	1
 19124  001902  0E61               	movlw	low _ep_data_in
 19125  001904  24F3               	addwf	prodl,w,c
 19126  001906  6ED9               	movwf	fsr2l,c
 19127  001908  0E01               	movlw	high _ep_data_in
 19128  00190A                     L11:
 19129  00190A  20F4               	addwfc	prodh,w,c
 19130  00190C  6EDA               	movwf	fsr2h,c
 19131  00190E  0101               	movlb	1	; () banked
 19132  001910  82DF               	bsf	indf2,1,c
 19133  001912                     l372:
 19134                           
 19135                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 19136                           
 19137                           ; BSR set to: 1
 19138                           
 19139                           ; BSR set to: 1
 19140  001912  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19141  001916  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19142  00191A  0E00               	movlw	0
 19143  00191C  84DB               	bsf	plusw2,2,c
 19144                           
 19145                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 19146  00191E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19147  001922  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19148  001926  0E00               	movlw	0
 19149  001928  8EDB               	bsf	plusw2,7,c
 19150                           
 19151                           ;usb_device.c: 2878: }
 19152  00192A  0012               	return	
 19153  00192C                     l369:
 19154                           
 19155                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 19156  00192C  0E04               	movlw	4
 19157  00192E  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 19158  001930  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19159  001932  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19160  001934  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19161                           
 19162                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 19163  001936  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19164  00193A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19165  00193E  AEDF               	btfss	indf2,7,c
 19166  001940  D01B               	goto	l374
 19167                           
 19168                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 19169  001942  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19170  001946  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19171  00194A  0E7F               	movlw	127
 19172  00194C  16DF               	andwf	indf2,f,c
 19173                           
 19174                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 19175  00194E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19176  001952  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19177  001956  0E00               	movlw	0
 19178  001958  8CDB               	bsf	plusw2,6,c
 19179                           
 19180                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 19181  00195A  0E00               	movlw	0
 19182  00195C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19183  00195E  0E05               	movlw	5
 19184  001960  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19185  001962  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 19186  001966  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 19187  00196A  0E00               	movlw	0
 19188  00196C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19189  00196E  0E02               	movlw	2
 19190  001970  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19191  001972  EC41  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19192                           
 19193                           ;usb_device.c: 2893: }
 19194  001976  D006               	goto	l375
 19195  001978                     l374:
 19196                           
 19197                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 19198  001978  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19199  00197C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19200  001980  0E00               	movlw	0
 19201  001982  8CDB               	bsf	plusw2,6,c
 19202  001984                     l375:
 19203                           
 19204                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 19205  001984  0E04               	movlw	4
 19206  001986  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 19207  001988  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19208  00198A  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19209  00198C  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19210                           
 19211                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 19212  00198E  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 19213  001990  D006               	goto	u8040
 19214  001992  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19215  001996  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19216  00199A  AEDF               	btfss	indf2,7,c
 19217  00199C  D030               	goto	l376
 19218  00199E                     u8040:
 19219                           
 19220                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 19221  00199E  010D               	movlb	13	; () banked
 19222  0019A0  BF34               	btfsc	52,7,b	;volatile
 19223  0019A2  D00A               	goto	l379
 19224                           
 19225                           ; BSR set to: 13
 19226                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 19227  0019A4  5134               	movf	52,w,b	;volatile
 19228  0019A6  0B0F               	andlw	15
 19229  0019A8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19230  0019AA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19231  0019AC  0D01               	mullw	1
 19232  0019AE  0E5E               	movlw	low _ep_data_out
 19233  0019B0  24F3               	addwf	prodl,w,c
 19234  0019B2  6ED9               	movwf	fsr2l,c
 19235  0019B4  0E01               	movlw	high _ep_data_out
 19236  0019B6  D00A               	goto	L12
 19237  0019B8                     l379:
 19238                           
 19239                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 19240                           
 19241                           ; BSR set to: 1
 19242  0019B8  010D               	movlb	13	; () banked
 19243  0019BA  5134               	movf	52,w,b	;volatile
 19244  0019BC  0B0F               	andlw	15
 19245  0019BE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19246  0019C0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19247  0019C2  0D01               	mullw	1
 19248  0019C4  0E61               	movlw	low _ep_data_in
 19249  0019C6  24F3               	addwf	prodl,w,c
 19250  0019C8  6ED9               	movwf	fsr2l,c
 19251  0019CA  0E01               	movlw	high _ep_data_in
 19252  0019CC                     L12:
 19253  0019CC  20F4               	addwfc	prodh,w,c
 19254  0019CE  6EDA               	movwf	fsr2h,c
 19255  0019D0  0101               	movlb	1	; () banked
 19256  0019D2  92DF               	bcf	indf2,1,c
 19257                           
 19258                           ; BSR set to: 1
 19259                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 19260                           
 19261                           ; BSR set to: 1
 19262  0019D4  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19263  0019D8  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19264  0019DC  0E3B               	movlw	59
 19265  0019DE  16DF               	andwf	indf2,f,c
 19266                           
 19267                           ; BSR set to: 1
 19268                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 19269  0019E0  0E00               	movlw	0
 19270  0019E2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19271  0019E4  0E05               	movlw	5
 19272  0019E6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19273  0019E8  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 19274  0019EC  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 19275  0019F0  0E00               	movlw	0
 19276  0019F2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19277  0019F4  0E02               	movlw	2
 19278  0019F6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19279  0019F8  EC41  F02F         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19280                           
 19281                           ;usb_device.c: 2923: }
 19282  0019FC  D006               	goto	l381
 19283  0019FE                     l376:
 19284                           
 19285                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 19286  0019FE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19287  001A02  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19288  001A06  0E3B               	movlw	59
 19289  001A08  16DF               	andwf	indf2,f,c
 19290  001A0A                     l381:
 19291                           
 19292                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 19293  001A0A  010D               	movlb	13	; () banked
 19294  001A0C  5134               	movf	52,w,b	;volatile
 19295  001A0E  0B0F               	andlw	15
 19296  001A10  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19297  001A12  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19298  001A14  0D01               	mullw	1
 19299  001A16  0E26               	movlw	38
 19300  001A18  24F3               	addwf	prodl,w,c
 19301  001A1A  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 19302  001A1C  0E0F               	movlw	15
 19303  001A1E  20F4               	addwfc	prodh,w,c
 19304  001A20  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 19305                           
 19306                           ; BSR set to: 13
 19307                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 19308  001A22  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 19309  001A26  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 19310  001A2A  0EFE               	movlw	254
 19311  001A2C  16DF               	andwf	indf2,f,c
 19312                           
 19313                           ; BSR set to: 13
 19314  001A2E  0012               	return	
 19315  001A30                     __end_of_USBStdFeatureReqHandler:
 19316                           	opt stack 0
 19317                           tblptru	equ	0xFF8
 19318                           tblptrh	equ	0xFF7
 19319                           tblptrl	equ	0xFF6
 19320                           tablat	equ	0xFF5
 19321                           prodh	equ	0xFF4
 19322                           prodl	equ	0xFF3
 19323                           intcon	equ	0xFF2
 19324                           intcon2	equ	0xFF1
 19325                           intcon3	equ	0xFF0
 19326                           indf0	equ	0xFEF
 19327                           postinc0	equ	0xFEE
 19328                           fsr0h	equ	0xFEA
 19329                           fsr0l	equ	0xFE9
 19330                           wreg	equ	0xFE8
 19331                           indf1	equ	0xFE7
 19332                           postdec1	equ	0xFE5
 19333                           plusw1	equ	0xFE3
 19334                           fsr1h	equ	0xFE2
 19335                           fsr1l	equ	0xFE1
 19336                           indf2	equ	0xFDF
 19337                           postinc2	equ	0xFDE
 19338                           postdec2	equ	0xFDD
 19339                           plusw2	equ	0xFDB
 19340                           fsr2h	equ	0xFDA
 19341                           fsr2l	equ	0xFD9
 19342                           status	equ	0xFD8
 19343                           
 19344 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 19345 ;; Defined at:
 19346 ;;		line 54 in file "usb_events.c"
 19347 ;; Parameters:    Size  Location     Type
 19348 ;;  event           2   15[COMRAM] enum E6832
 19349 ;;  pdata           2   17[COMRAM] PTR void 
 19350 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 19351 ;;		 -> BDT(48), 
 19352 ;;  size            2   19[COMRAM] unsigned int 
 19353 ;; Auto vars:     Size  Location     Type
 19354 ;;		None
 19355 ;; Return value:  Size  Location     Type
 19356 ;;                  1    wreg      unsigned char 
 19357 ;; Registers used:
 19358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19359 ;; Tracked objects:
 19360 ;;		On entry : 0/0
 19361 ;;		On exit  : 0/0
 19362 ;;		Unchanged: 0/0
 19363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19364 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19366 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19367 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19368 ;;Total ram usage:        8 bytes
 19369 ;; Hardware stack levels used:    1
 19370 ;; Hardware stack levels required when called:    3
 19371 ;; This function calls:
 19372 ;;		_APP_DeviceCustomHIDInitialize
 19373 ;;		_APP_DeviceMSDInitialize
 19374 ;;		_MSDTransferTerminated
 19375 ;;		_SYSTEM_Initialize
 19376 ;;		_USBCheckHIDRequest
 19377 ;;		_USBCheckMSDRequest
 19378 ;; This function is called by:
 19379 ;;		_USBDeviceTasks
 19380 ;;		_USBStdSetCfgHandler
 19381 ;;		_USBSuspend
 19382 ;;		_USBWakeFromSuspend
 19383 ;;		_USBCtrlTrfSetupHandler
 19384 ;;		_USBCheckStdRequest
 19385 ;;		_USBStdFeatureReqHandler
 19386 ;; This function uses a non-reentrant model
 19387 ;;
 19388                           
 19389                           	psect	text88
 19390  005E82                     __ptext88:
 19391                           	opt stack 0
 19392  005E82                     _USER_USB_CALLBACK_EVENT_HANDLER:
 19393                           	opt stack 26
 19394                           
 19395                           ;usb_events.c: 56: switch((int)event)
 19396                           
 19397                           ;incstack = 0
 19398  005E82  D019               	goto	l800
 19399  005E84                     
 19400                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 19401  005E84  0E01               	movlw	1
 19402  005E86  EC76  F037         	call	_SYSTEM_Initialize
 19403                           
 19404                           ;usb_events.c: 79: break;
 19405  005E8A  0012               	return	
 19406  005E8C                     
 19407                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 19408  005E8C  0E02               	movlw	2
 19409  005E8E  EC76  F037         	call	_SYSTEM_Initialize
 19410                           
 19411                           ;usb_events.c: 90: break;
 19412  005E92  0012               	return	
 19413  005E94                     
 19414                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 19415  005E94  ECB2  F03A         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 19416                           
 19417                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 19418  005E98  EC48  F03D         	call	_APP_DeviceMSDInitialize	;wreg free
 19419                           
 19420                           ;usb_events.c: 100: break;
 19421                           
 19422                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 19423                           
 19424                           ;usb_events.c: 97: break;
 19425  005E9C  0012               	return	
 19426  005E9E                     
 19427                           ;usb_events.c: 105: USBCheckHIDRequest();
 19428  005E9E  EC4E  F022         	call	_USBCheckHIDRequest	;wreg free
 19429                           
 19430                           ;usb_events.c: 108: USBCheckMSDRequest();
 19431  005EA2  EC0E  F028         	call	_USBCheckMSDRequest	;wreg free
 19432                           
 19433                           ;usb_events.c: 112: break;
 19434                           
 19435                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 19436                           
 19437                           ;usb_events.c: 109: break;
 19438  005EA6  0012               	return	
 19439  005EA8                     
 19440                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 19441  005EA8  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 19442  005EAC  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 19443  005EB0  ECF5  F036         	call	_MSDTransferTerminated	;wreg free
 19444                           
 19445                           ;usb_events.c: 129: }
 19446                           
 19447                           ;usb_events.c: 128: break;
 19448                           
 19449                           ;usb_events.c: 127: default:
 19450                           
 19451                           ;usb_events.c: 125: break;
 19452  005EB4  0012               	return	
 19453  005EB6                     l800:
 19454  005EB6  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 19455  005EBA  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 19456                           
 19457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 19458                           ; Switch size 1, requested type "space"
 19459                           ; Number of cases is 2, Range of values is 0 to 127
 19460                           ; switch strategies available:
 19461                           ; Name         Instructions Cycles
 19462                           ; simple_byte            7     4 (average)
 19463                           ;	Chosen strategy is simple_byte
 19464  005EBE  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 19465  005EC0  0A00               	xorlw	0	; case 0
 19466  005EC2  B4D8               	btfsc	status,2,c
 19467  005EC4  D004               	goto	l14507
 19468  005EC6  0A7F               	xorlw	127	; case 127
 19469  005EC8  A4D8               	btfss	status,2,c
 19470  005ECA  0012               	return	
 19471  005ECC  D01A               	goto	l14509
 19472  005ECE                     l14507:
 19473                           
 19474                           ; Switch size 1, requested type "space"
 19475                           ; Number of cases is 8, Range of values is 1 to 117
 19476                           ; switch strategies available:
 19477                           ; Name         Instructions Cycles
 19478                           ; simple_byte           25    13 (average)
 19479                           ;	Chosen strategy is simple_byte
 19480  005ECE  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 19481  005ED0  0A01               	xorlw	1	; case 1
 19482  005ED2  B4D8               	btfsc	status,2,c
 19483  005ED4  D7DF               	goto	l806
 19484  005ED6  0A03               	xorlw	3	; case 2
 19485  005ED8  B4D8               	btfsc	status,2,c
 19486  005EDA  0012               	return	
 19487  005EDC  0A01               	xorlw	1	; case 3
 19488  005EDE  B4D8               	btfsc	status,2,c
 19489  005EE0  D7DE               	goto	l808
 19490  005EE2  0A06               	xorlw	6	; case 5
 19491  005EE4  B4D8               	btfsc	status,2,c
 19492  005EE6  D7E0               	goto	l810
 19493  005EE8  0A77               	xorlw	119	; case 114
 19494  005EEA  B4D8               	btfsc	status,2,c
 19495  005EEC  0012               	return	
 19496  005EEE  0A01               	xorlw	1	; case 115
 19497  005EF0  B4D8               	btfsc	status,2,c
 19498  005EF2  0012               	return	
 19499  005EF4  0A07               	xorlw	7	; case 116
 19500  005EF6  B4D8               	btfsc	status,2,c
 19501  005EF8  D7C9               	goto	l805
 19502  005EFA  0A01               	xorlw	1	; case 117
 19503  005EFC  A4D8               	btfss	status,2,c
 19504  005EFE  0012               	return	
 19505  005F00  D7C1               	goto	l804
 19506  005F02                     l14509:
 19507                           
 19508                           ; Switch size 1, requested type "space"
 19509                           ; Number of cases is 1, Range of values is 255 to 255
 19510                           ; switch strategies available:
 19511                           ; Name         Instructions Cycles
 19512                           ; simple_byte            4     3 (average)
 19513                           ;	Chosen strategy is simple_byte
 19514  005F02  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 19515  005F04  0AFF               	xorlw	255	; case 255
 19516  005F06  0012               	return	
 19517  005F08                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 19518                           	opt stack 0
 19519                           tblptru	equ	0xFF8
 19520                           tblptrh	equ	0xFF7
 19521                           tblptrl	equ	0xFF6
 19522                           tablat	equ	0xFF5
 19523                           prodh	equ	0xFF4
 19524                           prodl	equ	0xFF3
 19525                           intcon	equ	0xFF2
 19526                           intcon2	equ	0xFF1
 19527                           intcon3	equ	0xFF0
 19528                           indf0	equ	0xFEF
 19529                           postinc0	equ	0xFEE
 19530                           fsr0h	equ	0xFEA
 19531                           fsr0l	equ	0xFE9
 19532                           wreg	equ	0xFE8
 19533                           indf1	equ	0xFE7
 19534                           postdec1	equ	0xFE5
 19535                           plusw1	equ	0xFE3
 19536                           fsr1h	equ	0xFE2
 19537                           fsr1l	equ	0xFE1
 19538                           indf2	equ	0xFDF
 19539                           postinc2	equ	0xFDE
 19540                           postdec2	equ	0xFDD
 19541                           plusw2	equ	0xFDB
 19542                           fsr2h	equ	0xFDA
 19543                           fsr2l	equ	0xFD9
 19544                           status	equ	0xFD8
 19545                           
 19546 ;; *************** function _USBCheckMSDRequest *****************
 19547 ;; Defined at:
 19548 ;;		line 218 in file "usb_device_msd.c"
 19549 ;; Parameters:    Size  Location     Type
 19550 ;;		None
 19551 ;; Auto vars:     Size  Location     Type
 19552 ;;		None
 19553 ;; Return value:  Size  Location     Type
 19554 ;;                  1    wreg      void 
 19555 ;; Registers used:
 19556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19557 ;; Tracked objects:
 19558 ;;		On entry : 0/0
 19559 ;;		On exit  : 0/0
 19560 ;;		Unchanged: 0/0
 19561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19563 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19565 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19566 ;;Total ram usage:        4 bytes
 19567 ;; Hardware stack levels used:    1
 19568 ;; Hardware stack levels required when called:    1
 19569 ;; This function calls:
 19570 ;;		_USBTransferOnePacket
 19571 ;; This function is called by:
 19572 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19573 ;; This function uses a non-reentrant model
 19574 ;;
 19575                           
 19576                           	psect	text89
 19577  00501C                     __ptext89:
 19578                           	opt stack 0
 19579  00501C                     _USBCheckMSDRequest:
 19580                           	opt stack 27
 19581                           
 19582                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 19583                           
 19584                           ;incstack = 0
 19585  00501C  010D               	movlb	13	; () banked
 19586  00501E  5130               	movf	48,w,b	;volatile
 19587  005020  0B1F               	andlw	31
 19588  005022  06E8               	decf	wreg,f,c
 19589  005024  A4D8               	btfss	status,2,c
 19590  005026  0012               	return	
 19591                           
 19592                           ; BSR set to: 13
 19593                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 19594                           
 19595                           ; BSR set to: 13
 19596                           
 19597                           ; BSR set to: 13
 19598                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 19599  005028  5134               	movf	52,w,b	;volatile
 19600  00502A  A4D8               	btfss	status,2,c
 19601  00502C  0012               	return	
 19602  00502E  D04E               	goto	l529
 19603  005030                     
 19604                           ; BSR set to: 13
 19605                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 19606                           
 19607                           ; BSR set to: 13
 19608  005030  5132               	movf	50,w,b	;volatile
 19609  005032  1133               	iorwf	51,w,b	;volatile
 19610  005034  A4D8               	btfss	status,2,c
 19611  005036  0012               	return	
 19612                           
 19613                           ; BSR set to: 13
 19614  005038  5136               	movf	54,w,b	;volatile
 19615  00503A  1137               	iorwf	55,w,b	;volatile
 19616  00503C  A4D8               	btfss	status,2,c
 19617  00503E  0012               	return	
 19618                           
 19619                           ; BSR set to: 13
 19620                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 19621                           
 19622                           ; BSR set to: 13
 19623                           
 19624                           ; BSR set to: 13
 19625                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 19626  005040  0E00               	movlw	0
 19627  005042  0100               	movlb	0	; () banked
 19628  005044  6FAA               	movwf	_MSD_State& (0+255),b
 19629                           
 19630                           ; BSR set to: 0
 19631                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 19632  005046  69A9               	setf	_MSDCommandState& (0+255),b
 19633                           
 19634                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 19635  005048  0E00               	movlw	0
 19636  00504A  6FA8               	movwf	_MSDReadState& (0+255),b
 19637                           
 19638                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 19639  00504C  0E00               	movlw	0
 19640  00504E  6FA7               	movwf	_MSDWriteState& (0+255),b
 19641                           
 19642                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 19643  005050  0E01               	movlw	1
 19644  005052  6FA2               	movwf	_MSDCBWValid& (0+255),b
 19645                           
 19646                           ; BSR set to: 0
 19647                           
 19648                           ; BSR set to: 0
 19649                           
 19650                           ; BSR set to: 0
 19651                           
 19652                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 19653  005054  C076  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 19654  005058  C077  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 19655                           
 19656                           ; BSR set to: 0
 19657  00505C  500C               	movf	_USBCheckMSDRequest$2319,w,c
 19658  00505E  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 19659  005060  B4D8               	btfsc	status,2,c
 19660  005062  D00A               	goto	u6460
 19661                           
 19662                           ; BSR set to: 0
 19663                           
 19664                           ; BSR set to: 0
 19665                           
 19666                           ; BSR set to: 0
 19667                           
 19668                           ; BSR set to: 0
 19669  005064  C076  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 19670  005068  C077  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 19671                           
 19672                           ; BSR set to: 0
 19673                           
 19674                           ; BSR set to: 0
 19675  00506C  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 19676  005070  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 19677  005074  BEDF               	btfsc	indf2,7,c
 19678  005076  D00F               	goto	l534
 19679  005078                     u6460:
 19680                           
 19681                           ; BSR set to: 0
 19682                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 19683                           
 19684                           ; BSR set to: 0
 19685  005078  0E00               	movlw	0
 19686  00507A  6E01               	movwf	USBTransferOnePacket@dir,c
 19687  00507C  0E40               	movlw	64
 19688  00507E  6E02               	movwf	USBTransferOnePacket@data,c
 19689  005080  0E0D               	movlw	13
 19690  005082  6E03               	movwf	USBTransferOnePacket@data+1,c
 19691  005084  0E40               	movlw	64
 19692  005086  6E04               	movwf	USBTransferOnePacket@len,c
 19693  005088  0E02               	movlw	2
 19694  00508A  EC63  F020         	call	_USBTransferOnePacket
 19695  00508E  C001  F092         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19696  005092  C002  F093         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19697  005096                     l534:
 19698                           
 19699                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 19700  005096  0E80               	movlw	128
 19701  005098  0100               	movlb	0	; () banked
 19702  00509A  6F69               	movwf	(_inPipes+3)& (0+255),b
 19703                           
 19704                           ;usb_device_msd.c: 263: break;
 19705  00509C  0012               	return	
 19706  00509E                     
 19707                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 19708                           
 19709                           ; BSR set to: 0
 19710  00509E  010D               	movlb	13	; () banked
 19711  0050A0  5132               	movf	50,w,b	;volatile
 19712  0050A2  1133               	iorwf	51,w,b	;volatile
 19713  0050A4  A4D8               	btfss	status,2,c
 19714  0050A6  0012               	return	
 19715                           
 19716                           ; BSR set to: 13
 19717  0050A8  0536               	decf	54,w,b	;volatile
 19718  0050AA  1137               	iorwf	55,w,b	;volatile
 19719  0050AC  A4D8               	btfss	status,2,c
 19720  0050AE  0012               	return	
 19721                           
 19722                           ; BSR set to: 13
 19723                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 19724                           
 19725                           ; BSR set to: 13
 19726                           
 19727                           ; BSR set to: 13
 19728                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 19729  0050B0  0E00               	movlw	0
 19730  0050B2  6F38               	movwf	56,b	;volatile
 19731                           
 19732                           ; BSR set to: 13
 19733                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 19734  0050B4  0E38               	movlw	56
 19735  0050B6  0100               	movlb	0	; () banked
 19736  0050B8  6F66               	movwf	_inPipes& (0+255),b
 19737  0050BA  0E0D               	movlw	13
 19738  0050BC  6F67               	movwf	(_inPipes+1)& (0+255),b
 19739                           
 19740                           ; BSR set to: 0
 19741  0050BE  0E00               	movlw	0
 19742  0050C0  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19743  0050C2  0E01               	movlw	1
 19744  0050C4  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19745                           
 19746                           ; BSR set to: 0
 19747  0050C6  0EC1               	movlw	193
 19748  0050C8  6F69               	movwf	(_inPipes+3)& (0+255),b
 19749                           
 19750                           ; BSR set to: 0
 19751                           ;usb_device_msd.c: 278: }
 19752                           
 19753                           ;usb_device_msd.c: 277: break;
 19754  0050CA  0012               	return	
 19755  0050CC                     l529:
 19756                           
 19757                           ; BSR set to: 0
 19758  0050CC  010D               	movlb	13	; () banked
 19759  0050CE  5131               	movf	49,w,b	;volatile
 19760                           
 19761                           ; Switch size 1, requested type "space"
 19762                           ; Number of cases is 2, Range of values is 254 to 255
 19763                           ; switch strategies available:
 19764                           ; Name         Instructions Cycles
 19765                           ; simple_byte            7     4 (average)
 19766                           ;	Chosen strategy is simple_byte
 19767  0050D0  0AFE               	xorlw	254	; case 254
 19768  0050D2  B4D8               	btfsc	status,2,c
 19769  0050D4  D7E4               	goto	l546
 19770  0050D6  0A01               	xorlw	1	; case 255
 19771  0050D8  A4D8               	btfss	status,2,c
 19772  0050DA  0012               	return	
 19773  0050DC  D7A9               	goto	l530
 19774  0050DE                     __end_of_USBCheckMSDRequest:
 19775                           	opt stack 0
 19776                           tblptru	equ	0xFF8
 19777                           tblptrh	equ	0xFF7
 19778                           tblptrl	equ	0xFF6
 19779                           tablat	equ	0xFF5
 19780                           prodh	equ	0xFF4
 19781                           prodl	equ	0xFF3
 19782                           intcon	equ	0xFF2
 19783                           intcon2	equ	0xFF1
 19784                           intcon3	equ	0xFF0
 19785                           indf0	equ	0xFEF
 19786                           postinc0	equ	0xFEE
 19787                           fsr0h	equ	0xFEA
 19788                           fsr0l	equ	0xFE9
 19789                           wreg	equ	0xFE8
 19790                           indf1	equ	0xFE7
 19791                           postdec1	equ	0xFE5
 19792                           plusw1	equ	0xFE3
 19793                           fsr1h	equ	0xFE2
 19794                           fsr1l	equ	0xFE1
 19795                           indf2	equ	0xFDF
 19796                           postinc2	equ	0xFDE
 19797                           postdec2	equ	0xFDD
 19798                           plusw2	equ	0xFDB
 19799                           fsr2h	equ	0xFDA
 19800                           fsr2l	equ	0xFD9
 19801                           status	equ	0xFD8
 19802                           
 19803 ;; *************** function _USBCheckHIDRequest *****************
 19804 ;; Defined at:
 19805 ;;		line 153 in file "usb_device_hid.c"
 19806 ;; Parameters:    Size  Location     Type
 19807 ;;		None
 19808 ;; Auto vars:     Size  Location     Type
 19809 ;;		None
 19810 ;; Return value:  Size  Location     Type
 19811 ;;                  1    wreg      void 
 19812 ;; Registers used:
 19813 ;;		wreg, status,2, status,0
 19814 ;; Tracked objects:
 19815 ;;		On entry : 0/0
 19816 ;;		On exit  : 0/0
 19817 ;;		Unchanged: 0/0
 19818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19823 ;;Total ram usage:        0 bytes
 19824 ;; Hardware stack levels used:    1
 19825 ;; This function calls:
 19826 ;;		Nothing
 19827 ;; This function is called by:
 19828 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19829 ;; This function uses a non-reentrant model
 19830 ;;
 19831                           
 19832                           	psect	text90
 19833  00449C                     __ptext90:
 19834                           	opt stack 0
 19835  00449C                     _USBCheckHIDRequest:
 19836                           	opt stack 28
 19837                           
 19838                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 19839                           
 19840                           ;incstack = 0
 19841  00449C  010D               	movlb	13	; () banked
 19842  00449E  5130               	movf	48,w,b	;volatile
 19843  0044A0  0B1F               	andlw	31
 19844  0044A2  06E8               	decf	wreg,f,c
 19845  0044A4  A4D8               	btfss	status,2,c
 19846  0044A6  0012               	return	
 19847                           
 19848                           ; BSR set to: 13
 19849                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 19850                           
 19851                           ; BSR set to: 13
 19852                           
 19853                           ; BSR set to: 13
 19854  0044A8  5134               	movf	52,w,b	;volatile
 19855  0044AA  A4D8               	btfss	status,2,c
 19856  0044AC  0012               	return	
 19857                           
 19858                           ; BSR set to: 13
 19859                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 19860                           
 19861                           ; BSR set to: 13
 19862                           
 19863                           ; BSR set to: 13
 19864  0044AE  0E06               	movlw	6
 19865  0044B0  1931               	xorwf	49,w,b	;volatile
 19866  0044B2  B4D8               	btfsc	status,2,c
 19867  0044B4  D01A               	goto	l411
 19868  0044B6  D022               	goto	l414
 19869  0044B8                     
 19870                           ; BSR set to: 13
 19871                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 19872                           
 19873                           ; BSR set to: 13
 19874  0044B8  0100               	movlb	0	; () banked
 19875  0044BA  05BD               	decf	_USBActiveConfiguration& (0+255),w,b
 19876  0044BC  A4D8               	btfss	status,2,c
 19877  0044BE  D01E               	goto	l414
 19878                           
 19879                           ; BSR set to: 0
 19880                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 19881  0044C0  0EB9               	movlw	low (_configDescriptor1+18)
 19882  0044C2  6F66               	movwf	_inPipes& (0+255),b
 19883  0044C4  0E8E               	movlw	high (_configDescriptor1+18)
 19884  0044C6  6F67               	movwf	(_inPipes+1)& (0+255),b
 19885                           
 19886                           ; BSR set to: 0
 19887  0044C8  0E00               	movlw	0
 19888  0044CA  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19889  0044CC  0E09               	movlw	9
 19890  0044CE  D00B               	goto	L13
 19891  0044D0                     l9497:
 19892                           
 19893                           ; BSR set to: 0
 19894  0044D0  0EC0               	movlw	192
 19895  0044D2  6F69               	movwf	(_inPipes+3)& (0+255),b
 19896                           
 19897                           ; BSR set to: 0
 19898                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 19899  0044D4  D013               	goto	l414
 19900  0044D6                     
 19901                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 19902                           
 19903                           ; BSR set to: 0
 19904  0044D6  0E6D               	movlw	low _hid_rpt01
 19905  0044D8  0100               	movlb	0	; () banked
 19906  0044DA  6F66               	movwf	_inPipes& (0+255),b
 19907  0044DC  0E8F               	movlw	high _hid_rpt01
 19908  0044DE  6F67               	movwf	(_inPipes+1)& (0+255),b
 19909                           
 19910                           ; BSR set to: 0
 19911  0044E0  0E00               	movlw	0
 19912  0044E2  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19913  0044E4  0E1D               	movlw	29
 19914  0044E6                     L13:
 19915  0044E6  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19916  0044E8  D7F3               	goto	l9497
 19917  0044EA                     l411:
 19918                           
 19919                           ; BSR set to: 0
 19920  0044EA  010D               	movlb	13	; () banked
 19921  0044EC  5133               	movf	51,w,b	;volatile
 19922                           
 19923                           ; Switch size 1, requested type "space"
 19924                           ; Number of cases is 3, Range of values is 33 to 35
 19925                           ; switch strategies available:
 19926                           ; Name         Instructions Cycles
 19927                           ; simple_byte           10     6 (average)
 19928                           ;	Chosen strategy is simple_byte
 19929  0044EE  0A21               	xorlw	33	; case 33
 19930  0044F0  B4D8               	btfsc	status,2,c
 19931  0044F2  D7E2               	goto	l412
 19932  0044F4  0A03               	xorlw	3	; case 34
 19933  0044F6  B4D8               	btfsc	status,2,c
 19934  0044F8  D7EE               	goto	l415
 19935  0044FA  0A01               	xorlw	1	; case 35
 19936  0044FC                     l414:
 19937                           
 19938                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 19939                           
 19940                           ; BSR set to: 13
 19941                           
 19942                           ; BSR set to: 13
 19943  0044FC  010D               	movlb	13	; () banked
 19944  0044FE  3930               	swapf	48,w,b	;volatile
 19945  004500  32E8               	rrcf	wreg,f,c
 19946  004502  0B03               	andlw	3
 19947  004504  06E8               	decf	wreg,f,c
 19948  004506  A4D8               	btfss	status,2,c
 19949  004508  0012               	return	
 19950  00450A  D024               	goto	l418
 19951  00450C                     
 19952                           ; BSR set to: 13
 19953                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 19954                           
 19955                           ; BSR set to: 13
 19956  00450C  0EBB               	movlw	low _idle_rate
 19957  00450E  0100               	movlb	0	; () banked
 19958  004510  6F66               	movwf	_inPipes& (0+255),b
 19959  004512  0E00               	movlw	high _idle_rate
 19960  004514  6F67               	movwf	(_inPipes+1)& (0+255),b
 19961                           
 19962                           ; BSR set to: 0
 19963  004516  0E00               	movlw	0
 19964  004518  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19965  00451A  0E01               	movlw	1
 19966  00451C  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19967                           
 19968                           ; BSR set to: 0
 19969  00451E  0EC1               	movlw	193
 19970  004520  6F69               	movwf	(_inPipes+3)& (0+255),b
 19971                           
 19972                           ;usb_device_hid.c: 223: break;
 19973  004522  0012               	return	
 19974  004524                     
 19975                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 19976                           
 19977                           ; BSR set to: 0
 19978  004524  0E80               	movlw	128
 19979  004526  0100               	movlb	0	; () banked
 19980  004528  6F69               	movwf	(_inPipes+3)& (0+255),b
 19981                           
 19982                           ; BSR set to: 0
 19983                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 19984  00452A  CD33 F0BB          	movff	3379,_idle_rate	;volatile
 19985                           
 19986                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 19987  00452E  0012               	return	
 19988  004530                     
 19989                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 19990                           
 19991                           ; BSR set to: 0
 19992  004530  0EBA               	movlw	low _active_protocol
 19993  004532  0100               	movlb	0	; () banked
 19994  004534  6F66               	movwf	_inPipes& (0+255),b
 19995  004536  0E00               	movlw	high _active_protocol
 19996  004538  6F67               	movwf	(_inPipes+1)& (0+255),b
 19997                           
 19998                           ; BSR set to: 0
 19999  00453A  0E00               	movlw	0
 20000  00453C  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20001  00453E  0E01               	movlw	1
 20002  004540  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20003                           
 20004                           ; BSR set to: 0
 20005  004542  0E81               	movlw	129
 20006  004544  6F69               	movwf	(_inPipes+3)& (0+255),b
 20007                           
 20008                           ;usb_device_hid.c: 234: break;
 20009  004546  0012               	return	
 20010  004548                     
 20011                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 20012                           
 20013                           ; BSR set to: 0
 20014  004548  0E80               	movlw	128
 20015  00454A  0100               	movlb	0	; () banked
 20016  00454C  6F69               	movwf	(_inPipes+3)& (0+255),b
 20017                           
 20018                           ; BSR set to: 0
 20019                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 20020  00454E  CD32 F0BA          	movff	3378,_active_protocol	;volatile
 20021                           
 20022                           ; BSR set to: 0
 20023                           ;usb_device_hid.c: 239: }
 20024                           
 20025                           ;usb_device_hid.c: 238: break;
 20026  004552  0012               	return	
 20027  004554                     l418:
 20028                           
 20029                           ; BSR set to: 0
 20030  004554  010D               	movlb	13	; () banked
 20031  004556  5131               	movf	49,w,b	;volatile
 20032                           
 20033                           ; Switch size 1, requested type "space"
 20034                           ; Number of cases is 6, Range of values is 1 to 11
 20035                           ; switch strategies available:
 20036                           ; Name         Instructions Cycles
 20037                           ; simple_byte           19    10 (average)
 20038                           ;	Chosen strategy is simple_byte
 20039  004558  0A01               	xorlw	1	; case 1
 20040  00455A  B4D8               	btfsc	status,2,c
 20041  00455C  0012               	return	
 20042  00455E  0A03               	xorlw	3	; case 2
 20043  004560  B4D8               	btfsc	status,2,c
 20044  004562  D7D4               	goto	l422
 20045  004564  0A01               	xorlw	1	; case 3
 20046  004566  B4D8               	btfsc	status,2,c
 20047  004568  D7E3               	goto	l424
 20048  00456A  0A0A               	xorlw	10	; case 9
 20049  00456C  B4D8               	btfsc	status,2,c
 20050  00456E  0012               	return	
 20051  004570  0A03               	xorlw	3	; case 10
 20052  004572  B4D8               	btfsc	status,2,c
 20053  004574  D7D7               	goto	l423
 20054  004576  0A01               	xorlw	1	; case 11
 20055  004578  A4D8               	btfss	status,2,c
 20056  00457A  0012               	return	
 20057  00457C  D7E5               	goto	l425
 20058  00457E                     __end_of_USBCheckHIDRequest:
 20059                           	opt stack 0
 20060                           tblptru	equ	0xFF8
 20061                           tblptrh	equ	0xFF7
 20062                           tblptrl	equ	0xFF6
 20063                           tablat	equ	0xFF5
 20064                           prodh	equ	0xFF4
 20065                           prodl	equ	0xFF3
 20066                           intcon	equ	0xFF2
 20067                           intcon2	equ	0xFF1
 20068                           intcon3	equ	0xFF0
 20069                           indf0	equ	0xFEF
 20070                           postinc0	equ	0xFEE
 20071                           fsr0h	equ	0xFEA
 20072                           fsr0l	equ	0xFE9
 20073                           wreg	equ	0xFE8
 20074                           indf1	equ	0xFE7
 20075                           postdec1	equ	0xFE5
 20076                           plusw1	equ	0xFE3
 20077                           fsr1h	equ	0xFE2
 20078                           fsr1l	equ	0xFE1
 20079                           indf2	equ	0xFDF
 20080                           postinc2	equ	0xFDE
 20081                           postdec2	equ	0xFDD
 20082                           plusw2	equ	0xFDB
 20083                           fsr2h	equ	0xFDA
 20084                           fsr2l	equ	0xFD9
 20085                           status	equ	0xFD8
 20086                           
 20087 ;; *************** function _SYSTEM_Initialize *****************
 20088 ;; Defined at:
 20089 ;;		line 80 in file "system.c"
 20090 ;; Parameters:    Size  Location     Type
 20091 ;;  state           1    wreg     enum E6623
 20092 ;; Auto vars:     Size  Location     Type
 20093 ;;  state           1    4[COMRAM] enum E6623
 20094 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 20095 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 20096 ;; Return value:  Size  Location     Type
 20097 ;;                  1    wreg      void 
 20098 ;; Registers used:
 20099 ;;		wreg, status,2, status,0
 20100 ;; Tracked objects:
 20101 ;;		On entry : 0/0
 20102 ;;		On exit  : 0/0
 20103 ;;		Unchanged: 0/0
 20104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20106 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20108 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20109 ;;Total ram usage:        5 bytes
 20110 ;; Hardware stack levels used:    1
 20111 ;; This function calls:
 20112 ;;		Nothing
 20113 ;; This function is called by:
 20114 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20115 ;;		_main
 20116 ;; This function uses a non-reentrant model
 20117 ;;
 20118                           
 20119                           	psect	text91
 20120  006EEC                     __ptext91:
 20121                           	opt stack 0
 20122  006EEC                     _SYSTEM_Initialize:
 20123                           	opt stack 28
 20124                           
 20125                           ;incstack = 0
 20126                           ;SYSTEM_Initialize@state stored from wreg
 20127  006EEC  6E05               	movwf	SYSTEM_Initialize@state,c
 20128                           
 20129                           ;system.c: 82: switch(state)
 20130  006EEE  D01D               	goto	l890
 20131  006EF0                     
 20132                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 20133  006EF0  0E02               	movlw	2
 20134  006EF2  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 20135  006EF4  0E58               	movlw	88
 20136  006EF6  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 20137                           
 20138                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 20139  006EF8  8C9B               	bsf	3995,6,c	;volatile
 20140  006EFA                     l9683:
 20141  006EFA  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 20142  006EFC  A0D8               	btfss	status,0,c
 20143  006EFE  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 20144  006F00  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 20145  006F02  E1FB               	bnz	l9683
 20146  006F04  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 20147  006F06  B4D8               	btfsc	status,2,c
 20148  006F08  0012               	return	
 20149  006F0A  D7F7               	goto	l893
 20150  006F0C                     
 20151                           ;system.c: 119: OSCCON = 0x70;
 20152  006F0C  0E70               	movlw	112
 20153  006F0E  6ED3               	movwf	4051,c	;volatile
 20154                           
 20155                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 20156  006F10  0E03               	movlw	3
 20157  006F12  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_2849+1,c
 20158  006F14  0E20               	movlw	32
 20159  006F16  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_2849,c
 20160  006F18                     l9687:
 20161  006F18  0603               	decf	SYSTEM_Initialize@pll_startup_counter_2849,f,c
 20162  006F1A  A0D8               	btfss	status,0,c
 20163  006F1C  0604               	decf	SYSTEM_Initialize@pll_startup_counter_2849+1,f,c
 20164  006F1E  2803               	incf	SYSTEM_Initialize@pll_startup_counter_2849,w,c
 20165  006F20  E1FB               	bnz	l9687
 20166  006F22  2804               	incf	SYSTEM_Initialize@pll_startup_counter_2849+1,w,c
 20167  006F24  B4D8               	btfsc	status,2,c
 20168  006F26  0012               	return	
 20169  006F28  D7F7               	goto	l899
 20170  006F2A                     l890:
 20171  006F2A  5005               	movf	SYSTEM_Initialize@state,w,c
 20172                           
 20173                           ; Switch size 1, requested type "space"
 20174                           ; Number of cases is 3, Range of values is 0 to 2
 20175                           ; switch strategies available:
 20176                           ; Name         Instructions Cycles
 20177                           ; simple_byte           10     6 (average)
 20178                           ;	Chosen strategy is simple_byte
 20179  006F2C  0A00               	xorlw	0	; case 0
 20180  006F2E  B4D8               	btfsc	status,2,c
 20181  006F30  D7DF               	goto	l891
 20182  006F32  0A01               	xorlw	1	; case 1
 20183  006F34  B4D8               	btfsc	status,2,c
 20184  006F36  0012               	return	
 20185  006F38  0A03               	xorlw	3	; case 2
 20186  006F3A  A4D8               	btfss	status,2,c
 20187  006F3C  0012               	return	
 20188  006F3E  D7E6               	goto	l897
 20189  006F40                     __end_of_SYSTEM_Initialize:
 20190                           	opt stack 0
 20191                           tblptru	equ	0xFF8
 20192                           tblptrh	equ	0xFF7
 20193                           tblptrl	equ	0xFF6
 20194                           tablat	equ	0xFF5
 20195                           prodh	equ	0xFF4
 20196                           prodl	equ	0xFF3
 20197                           intcon	equ	0xFF2
 20198                           intcon2	equ	0xFF1
 20199                           intcon3	equ	0xFF0
 20200                           indf0	equ	0xFEF
 20201                           postinc0	equ	0xFEE
 20202                           fsr0h	equ	0xFEA
 20203                           fsr0l	equ	0xFE9
 20204                           wreg	equ	0xFE8
 20205                           indf1	equ	0xFE7
 20206                           postdec1	equ	0xFE5
 20207                           plusw1	equ	0xFE3
 20208                           fsr1h	equ	0xFE2
 20209                           fsr1l	equ	0xFE1
 20210                           indf2	equ	0xFDF
 20211                           postinc2	equ	0xFDE
 20212                           postdec2	equ	0xFDD
 20213                           plusw2	equ	0xFDB
 20214                           fsr2h	equ	0xFDA
 20215                           fsr2l	equ	0xFD9
 20216                           status	equ	0xFD8
 20217                           
 20218 ;; *************** function _MSDTransferTerminated *****************
 20219 ;; Defined at:
 20220 ;;		line 1674 in file "usb_device_msd.c"
 20221 ;; Parameters:    Size  Location     Type
 20222 ;;  handle          2   11[COMRAM] PTR void 
 20223 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 20224 ;;		 -> BDT(48), 
 20225 ;; Auto vars:     Size  Location     Type
 20226 ;;		None
 20227 ;; Return value:  Size  Location     Type
 20228 ;;                  1    wreg      void 
 20229 ;; Registers used:
 20230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20231 ;; Tracked objects:
 20232 ;;		On entry : 0/0
 20233 ;;		On exit  : 0/0
 20234 ;;		Unchanged: 0/0
 20235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20237 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20239 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20240 ;;Total ram usage:        4 bytes
 20241 ;; Hardware stack levels used:    1
 20242 ;; Hardware stack levels required when called:    1
 20243 ;; This function calls:
 20244 ;;		_USBStallEndpoint
 20245 ;;		_USBTransferOnePacket
 20246 ;; This function is called by:
 20247 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20248 ;; This function uses a non-reentrant model
 20249 ;;
 20250                           
 20251                           	psect	text92
 20252  006DEA                     __ptext92:
 20253                           	opt stack 0
 20254  006DEA                     _MSDTransferTerminated:
 20255                           	opt stack 27
 20256                           
 20257                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 20258                           
 20259                           ;incstack = 0
 20260  006DEA  0100               	movlb	0	; () banked
 20261  006DEC  51A2               	movf	_MSDCBWValid& (0+255),w,b
 20262  006DEE  A4D8               	btfss	status,2,c
 20263  006DF0  D00B               	goto	l764
 20264                           
 20265                           ; BSR set to: 0
 20266                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 20267  006DF2  0E01               	movlw	1
 20268  006DF4  6E01               	movwf	USBStallEndpoint@dir,c
 20269  006DF6  0E02               	movlw	2
 20270  006DF8  ECD9  F01E         	call	_USBStallEndpoint
 20271                           
 20272                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 20273  006DFC  0E00               	movlw	0
 20274  006DFE  6E01               	movwf	USBStallEndpoint@dir,c
 20275  006E00  0E02               	movlw	2
 20276  006E02  ECD9  F01E         	call	_USBStallEndpoint
 20277                           
 20278                           ;usb_device_msd.c: 1681: }
 20279  006E06  0012               	return	
 20280  006E08                     l764:
 20281  006E08  C076  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 20282  006E0C  C077  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 20283  006E10  500E               	movf	_MSDTransferTerminated$2407,w,c
 20284  006E12  180C               	xorwf	MSDTransferTerminated@handle,w,c
 20285  006E14  E114               	bnz	l767
 20286  006E16  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 20287  006E18  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 20288  006E1A  A4D8               	btfss	status,2,c
 20289  006E1C  0012               	return	
 20290                           
 20291                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 20292  006E1E  0E00               	movlw	0
 20293  006E20  6E01               	movwf	USBTransferOnePacket@dir,c
 20294  006E22  0E40               	movlw	64
 20295  006E24  6E02               	movwf	USBTransferOnePacket@data,c
 20296  006E26  0E0D               	movlw	13
 20297  006E28  6E03               	movwf	USBTransferOnePacket@data+1,c
 20298  006E2A  0E40               	movlw	64
 20299  006E2C  6E04               	movwf	USBTransferOnePacket@len,c
 20300  006E2E  0E02               	movlw	2
 20301  006E30  EC63  F020         	call	_USBTransferOnePacket
 20302  006E34  C001  F092         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20303  006E38  C002  F093         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20304  006E3C  0012               	return	
 20305  006E3E                     l767:
 20306  006E3E  0012               	return		;funcret
 20307  006E40                     __end_of_MSDTransferTerminated:
 20308                           	opt stack 0
 20309                           tblptru	equ	0xFF8
 20310                           tblptrh	equ	0xFF7
 20311                           tblptrl	equ	0xFF6
 20312                           tablat	equ	0xFF5
 20313                           prodh	equ	0xFF4
 20314                           prodl	equ	0xFF3
 20315                           intcon	equ	0xFF2
 20316                           intcon2	equ	0xFF1
 20317                           intcon3	equ	0xFF0
 20318                           indf0	equ	0xFEF
 20319                           postinc0	equ	0xFEE
 20320                           fsr0h	equ	0xFEA
 20321                           fsr0l	equ	0xFE9
 20322                           wreg	equ	0xFE8
 20323                           indf1	equ	0xFE7
 20324                           postdec1	equ	0xFE5
 20325                           plusw1	equ	0xFE3
 20326                           fsr1h	equ	0xFE2
 20327                           fsr1l	equ	0xFE1
 20328                           indf2	equ	0xFDF
 20329                           postinc2	equ	0xFDE
 20330                           postdec2	equ	0xFDD
 20331                           plusw2	equ	0xFDB
 20332                           fsr2h	equ	0xFDA
 20333                           fsr2l	equ	0xFD9
 20334                           status	equ	0xFD8
 20335                           
 20336 ;; *************** function _APP_DeviceMSDInitialize *****************
 20337 ;; Defined at:
 20338 ;;		line 84 in file "app_device_msd.c"
 20339 ;; Parameters:    Size  Location     Type
 20340 ;;		None
 20341 ;; Auto vars:     Size  Location     Type
 20342 ;;		None
 20343 ;; Return value:  Size  Location     Type
 20344 ;;                  1    wreg      void 
 20345 ;; Registers used:
 20346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20347 ;; Tracked objects:
 20348 ;;		On entry : 0/0
 20349 ;;		On exit  : 0/0
 20350 ;;		Unchanged: 0/0
 20351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20356 ;;Total ram usage:        0 bytes
 20357 ;; Hardware stack levels used:    1
 20358 ;; Hardware stack levels required when called:    2
 20359 ;; This function calls:
 20360 ;;		_USBEnableEndpoint
 20361 ;;		_USBMSDInit
 20362 ;; This function is called by:
 20363 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20364 ;; This function uses a non-reentrant model
 20365 ;;
 20366                           
 20367                           	psect	text93
 20368  007A90                     __ptext93:
 20369                           	opt stack 0
 20370  007A90                     _APP_DeviceMSDInitialize:
 20371                           	opt stack 26
 20372                           
 20373                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 20374                           
 20375                           ;incstack = 0
 20376  007A90  0E1E               	movlw	30
 20377  007A92  6E09               	movwf	USBEnableEndpoint@options,c
 20378  007A94  0E02               	movlw	2
 20379  007A96  ECB8  F039         	call	_USBEnableEndpoint
 20380                           
 20381                           ;app_device_msd.c: 93: USBMSDInit();
 20382  007A9A  EC5D  F01F         	call	_USBMSDInit	;wreg free
 20383  007A9E  0012               	return		;funcret
 20384  007AA0                     __end_of_APP_DeviceMSDInitialize:
 20385                           	opt stack 0
 20386                           tblptru	equ	0xFF8
 20387                           tblptrh	equ	0xFF7
 20388                           tblptrl	equ	0xFF6
 20389                           tablat	equ	0xFF5
 20390                           prodh	equ	0xFF4
 20391                           prodl	equ	0xFF3
 20392                           intcon	equ	0xFF2
 20393                           intcon2	equ	0xFF1
 20394                           intcon3	equ	0xFF0
 20395                           indf0	equ	0xFEF
 20396                           postinc0	equ	0xFEE
 20397                           fsr0h	equ	0xFEA
 20398                           fsr0l	equ	0xFE9
 20399                           wreg	equ	0xFE8
 20400                           indf1	equ	0xFE7
 20401                           postdec1	equ	0xFE5
 20402                           plusw1	equ	0xFE3
 20403                           fsr1h	equ	0xFE2
 20404                           fsr1l	equ	0xFE1
 20405                           indf2	equ	0xFDF
 20406                           postinc2	equ	0xFDE
 20407                           postdec2	equ	0xFDD
 20408                           plusw2	equ	0xFDB
 20409                           fsr2h	equ	0xFDA
 20410                           fsr2l	equ	0xFD9
 20411                           status	equ	0xFD8
 20412                           
 20413 ;; *************** function _USBMSDInit *****************
 20414 ;; Defined at:
 20415 ;;		line 142 in file "usb_device_msd.c"
 20416 ;; Parameters:    Size  Location     Type
 20417 ;;		None
 20418 ;; Auto vars:     Size  Location     Type
 20419 ;;		None
 20420 ;; Return value:  Size  Location     Type
 20421 ;;                  1    wreg      void 
 20422 ;; Registers used:
 20423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20424 ;; Tracked objects:
 20425 ;;		On entry : 0/0
 20426 ;;		On exit  : 0/0
 20427 ;;		Unchanged: 0/0
 20428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20431 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20432 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20433 ;;Total ram usage:        3 bytes
 20434 ;; Hardware stack levels used:    1
 20435 ;; Hardware stack levels required when called:    1
 20436 ;; This function calls:
 20437 ;;		_ExternalFlash_MediaDetect
 20438 ;;		_ExternalFlash_MediaInitialize
 20439 ;;		_ResetSenseData
 20440 ;;		_USBTransferOnePacket
 20441 ;; This function is called by:
 20442 ;;		_APP_DeviceMSDInitialize
 20443 ;; This function uses a non-reentrant model
 20444 ;;
 20445                           
 20446                           	psect	text94
 20447  003EBA                     __ptext94:
 20448                           	opt stack 0
 20449  003EBA                     _USBMSDInit:
 20450                           	opt stack 26
 20451                           
 20452                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 20453                           
 20454                           ;incstack = 0
 20455  003EBA  0E00               	movlw	0
 20456  003EBC  6E01               	movwf	USBTransferOnePacket@dir,c
 20457  003EBE  0E40               	movlw	64
 20458  003EC0  6E02               	movwf	USBTransferOnePacket@data,c
 20459  003EC2  0E0D               	movlw	13
 20460  003EC4  6E03               	movwf	USBTransferOnePacket@data+1,c
 20461  003EC6  0E40               	movlw	64
 20462  003EC8  6E04               	movwf	USBTransferOnePacket@len,c
 20463  003ECA  0E02               	movlw	2
 20464  003ECC  EC63  F020         	call	_USBTransferOnePacket
 20465  003ED0  C001  F092         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20466  003ED4  C002  F093         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20467  003ED8  C070  F090         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 20468  003EDC  C071  F091         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 20469                           
 20470                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 20471  003EE0  0E00               	movlw	0
 20472  003EE2  0100               	movlb	0	; () banked
 20473  003EE4  6FAA               	movwf	_MSD_State& (0+255),b
 20474                           
 20475                           ; BSR set to: 0
 20476                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 20477  003EE6  69A9               	setf	_MSDCommandState& (0+255),b
 20478                           
 20479                           ; BSR set to: 0
 20480                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 20481  003EE8  0E00               	movlw	0
 20482  003EEA  6FA8               	movwf	_MSDReadState& (0+255),b
 20483                           
 20484                           ; BSR set to: 0
 20485                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 20486  003EEC  0E00               	movlw	0
 20487  003EEE  6FA7               	movwf	_MSDWriteState& (0+255),b
 20488                           
 20489                           ; BSR set to: 0
 20490                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 20491  003EF0  0E00               	movlw	0
 20492  003EF2  6FA3               	movwf	_MSDHostNoData& (0+255),b
 20493                           
 20494                           ; BSR set to: 0
 20495                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 20496  003EF4  0E00               	movlw	0
 20497  003EF6  0101               	movlb	1	; () banked
 20498  003EF8  6F50               	movwf	_gblNumBLKS& (0+255),b
 20499  003EFA  0E00               	movlw	0
 20500  003EFC  6F51               	movwf	(_gblNumBLKS+1)& (0+255),b
 20501  003EFE  0E00               	movlw	0
 20502  003F00  6F52               	movwf	(_gblNumBLKS+2)& (0+255),b
 20503  003F02  0E00               	movlw	0
 20504  003F04  6F53               	movwf	(_gblNumBLKS+3)& (0+255),b
 20505                           
 20506                           ; BSR set to: 1
 20507                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 20508  003F06  0E00               	movlw	0
 20509  003F08  6F4C               	movwf	_gblBLKLen& (0+255),b
 20510  003F0A  0E00               	movlw	0
 20511  003F0C  6F4D               	movwf	(_gblBLKLen+1)& (0+255),b
 20512  003F0E  0E00               	movlw	0
 20513  003F10  6F4E               	movwf	(_gblBLKLen+2)& (0+255),b
 20514  003F12  0E00               	movlw	0
 20515  003F14  6F4F               	movwf	(_gblBLKLen+3)& (0+255),b
 20516                           
 20517                           ; BSR set to: 1
 20518                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 20519  003F16  0E01               	movlw	1
 20520  003F18  0100               	movlb	0	; () banked
 20521  003F1A  6FA2               	movwf	_MSDCBWValid& (0+255),b
 20522                           
 20523                           ; BSR set to: 0
 20524                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 20525  003F1C  0E00               	movlw	0
 20526  003F1E  6F8F               	movwf	(_gblMediaPresent+1)& (0+255),b
 20527  003F20  0E00               	movlw	0
 20528  003F22  6F8E               	movwf	_gblMediaPresent& (0+255),b
 20529                           
 20530                           ; BSR set to: 0
 20531                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 20532  003F24  0E00               	movlw	0
 20533  003F26  0101               	movlb	1	; () banked
 20534  003F28  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 20535  003F2A  D046               	goto	l518
 20536  003F2C                     
 20537                           ; BSR set to: 1
 20538                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 20539                           
 20540                           ; BSR set to: 1
 20541  003F2C  510D               	movf	(_gblCBW+13)& (0+255),w,b
 20542  003F2E  0D01               	mullw	1
 20543  003F30  0EA4               	movlw	low _SoftDetach
 20544  003F32  24F3               	addwf	prodl,w,c
 20545  003F34  6ED9               	movwf	fsr2l,c
 20546  003F36  0E00               	movlw	high _SoftDetach
 20547  003F38  20F4               	addwfc	prodh,w,c
 20548  003F3A  6EDA               	movwf	fsr2h,c
 20549  003F3C  0E00               	movlw	0
 20550  003F3E  6EDF               	movwf	indf2,c
 20551                           
 20552                           ; BSR set to: 1
 20553                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 20554  003F40  C1E6  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 20555  003F44  C1E7  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 20556  003F48  D801               	call	u6198
 20557  003F4A  D009               	goto	u6199
 20558  003F4C                     u6198:
 20559  003F4C  0005               	push	
 20560  003F4E  6EFA               	movwf	pclath,c
 20561  003F50  51DE               	movf	(_LUN+6)& (0+255),w,b
 20562  003F52  6EFD               	movwf	tosl,c
 20563  003F54  51DF               	movf	(_LUN+7)& (0+255),w,b
 20564  003F56  6EFE               	movwf	tosh,c
 20565  003F58  6AFF               	clrf	tosu,c
 20566  003F5A  50FA               	movf	pclath,w,c
 20567  003F5C  0012               	return		;indir
 20568  003F5E                     u6199:
 20569  003F5E  0900               	iorlw	0
 20570  003F60  B4D8               	btfsc	status,2,c
 20571  003F62  D026               	goto	l521
 20572                           
 20573                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 20574  003F64  C1E6  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 20575  003F68  C1E7  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 20576  003F6C  D801               	call	u6218
 20577  003F6E  D00A               	goto	u6219
 20578  003F70                     u6218:
 20579  003F70  0005               	push	
 20580  003F72  6EFA               	movwf	pclath,c
 20581  003F74  0101               	movlb	1	; () banked
 20582  003F76  51D8               	movf	_LUN& (0+255),w,b
 20583  003F78  6EFD               	movwf	tosl,c
 20584  003F7A  51D9               	movf	(_LUN+1)& (0+255),w,b
 20585  003F7C  6EFE               	movwf	tosh,c
 20586  003F7E  6AFF               	clrf	tosu,c
 20587  003F80  50FA               	movf	pclath,w,c
 20588  003F82  0012               	return		;indir
 20589  003F84                     u6219:
 20590  003F84  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 20591  003F86  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 20592  003F88  B4D8               	btfsc	status,2,c
 20593  003F8A  D012               	goto	l521
 20594                           
 20595                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 20596  003F8C  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 20597  003F90  0E01               	movlw	1
 20598  003F92  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 20599  003F94  0E00               	movlw	0
 20600  003F96  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 20601  003F98  2A0C               	incf	??_USBMSDInit,f,c
 20602  003F9A  D003               	goto	u6234
 20603  003F9C                     u6235:
 20604  003F9C  90D8               	bcf	status,0,c
 20605  003F9E  360D               	rlcf	??_USBMSDInit+1,f,c
 20606  003FA0  360E               	rlcf	??_USBMSDInit+2,f,c
 20607  003FA2                     u6234:
 20608  003FA2  2E0C               	decfsz	??_USBMSDInit,f,c
 20609  003FA4  D7FB               	goto	u6235
 20610  003FA6  500D               	movf	??_USBMSDInit+1,w,c
 20611  003FA8  0100               	movlb	0	; () banked
 20612  003FAA  138E               	iorwf	_gblMediaPresent& (0+255),f,b
 20613  003FAC  500E               	movf	??_USBMSDInit+2,w,c
 20614  003FAE  138F               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 20615  003FB0                     l521:
 20616                           
 20617                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 20618                           
 20619                           ; BSR set to: 0
 20620                           
 20621                           ; BSR set to: 0
 20622  003FB0  ECD6  F034         	call	_ResetSenseData	;wreg free
 20623  003FB4  0101               	movlb	1	; () banked
 20624  003FB6  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 20625  003FB8                     l518:
 20626                           
 20627                           ; BSR set to: 1
 20628                           
 20629                           ; BSR set to: 1
 20630  003FB8  510D               	movf	(_gblCBW+13)& (0+255),w,b
 20631  003FBA  A4D8               	btfss	status,2,c
 20632  003FBC  0012               	return	
 20633  003FBE  D7B6               	goto	l519
 20634  003FC0                     __end_of_USBMSDInit:
 20635                           	opt stack 0
 20636                           tosu	equ	0xFFF
 20637                           tosh	equ	0xFFE
 20638                           tosl	equ	0xFFD
 20639                           pclath	equ	0xFFA
 20640                           tblptru	equ	0xFF8
 20641                           tblptrh	equ	0xFF7
 20642                           tblptrl	equ	0xFF6
 20643                           tablat	equ	0xFF5
 20644                           prodh	equ	0xFF4
 20645                           prodl	equ	0xFF3
 20646                           intcon	equ	0xFF2
 20647                           intcon2	equ	0xFF1
 20648                           intcon3	equ	0xFF0
 20649                           indf0	equ	0xFEF
 20650                           postinc0	equ	0xFEE
 20651                           fsr0h	equ	0xFEA
 20652                           fsr0l	equ	0xFE9
 20653                           wreg	equ	0xFE8
 20654                           indf1	equ	0xFE7
 20655                           postdec1	equ	0xFE5
 20656                           plusw1	equ	0xFE3
 20657                           fsr1h	equ	0xFE2
 20658                           fsr1l	equ	0xFE1
 20659                           indf2	equ	0xFDF
 20660                           postinc2	equ	0xFDE
 20661                           postdec2	equ	0xFDD
 20662                           plusw2	equ	0xFDB
 20663                           fsr2h	equ	0xFDA
 20664                           fsr2l	equ	0xFD9
 20665                           status	equ	0xFD8
 20666                           
 20667 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 20668 ;; Defined at:
 20669 ;;		line 47 in file "app_device_custom_hid.c"
 20670 ;; Parameters:    Size  Location     Type
 20671 ;;		None
 20672 ;; Auto vars:     Size  Location     Type
 20673 ;;		None
 20674 ;; Return value:  Size  Location     Type
 20675 ;;                  1    wreg      void 
 20676 ;; Registers used:
 20677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20678 ;; Tracked objects:
 20679 ;;		On entry : 0/0
 20680 ;;		On exit  : 0/0
 20681 ;;		Unchanged: 0/0
 20682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20687 ;;Total ram usage:        0 bytes
 20688 ;; Hardware stack levels used:    1
 20689 ;; Hardware stack levels required when called:    2
 20690 ;; This function calls:
 20691 ;;		_USBEnableEndpoint
 20692 ;;		_USBTransferOnePacket
 20693 ;; This function is called by:
 20694 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20695 ;; This function uses a non-reentrant model
 20696 ;;
 20697                           
 20698                           	psect	text95
 20699  007564                     __ptext95:
 20700                           	opt stack 0
 20701  007564                     _APP_DeviceCustomHIDInitialize:
 20702                           	opt stack 26
 20703                           
 20704                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 20705                           
 20706                           ; BSR set to: 1
 20707                           ;incstack = 0
 20708  007564  0E00               	movlw	0
 20709  007566  0100               	movlb	0	; () banked
 20710  007568  6F88               	movwf	_USBInHandle& (0+255),b
 20711  00756A  0E00               	movlw	0
 20712  00756C  6F89               	movwf	(_USBInHandle+1)& (0+255),b
 20713                           
 20714                           ; BSR set to: 0
 20715                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 20716  00756E  0E1E               	movlw	30
 20717  007570  6E09               	movwf	USBEnableEndpoint@options,c
 20718  007572  0E01               	movlw	1
 20719  007574  ECB8  F039         	call	_USBEnableEndpoint
 20720                           
 20721                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 20722  007578  0E00               	movlw	0
 20723  00757A  6E01               	movwf	USBTransferOnePacket@dir,c
 20724  00757C  0E40               	movlw	low _ReceivedDataBuffer
 20725  00757E  6E02               	movwf	USBTransferOnePacket@data,c
 20726  007580  0E02               	movlw	high _ReceivedDataBuffer
 20727  007582  6E03               	movwf	USBTransferOnePacket@data+1,c
 20728  007584  0E40               	movlw	64
 20729  007586  6E04               	movwf	USBTransferOnePacket@len,c
 20730  007588  0E01               	movlw	1
 20731  00758A  EC63  F020         	call	_USBTransferOnePacket
 20732  00758E  C001  F08A         	movff	?_USBTransferOnePacket,_USBOutHandle
 20733  007592  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 20734  007596  0012               	return		;funcret
 20735  007598                     __end_of_APP_DeviceCustomHIDInitialize:
 20736                           	opt stack 0
 20737                           tosu	equ	0xFFF
 20738                           tosh	equ	0xFFE
 20739                           tosl	equ	0xFFD
 20740                           pclath	equ	0xFFA
 20741                           tblptru	equ	0xFF8
 20742                           tblptrh	equ	0xFF7
 20743                           tblptrl	equ	0xFF6
 20744                           tablat	equ	0xFF5
 20745                           prodh	equ	0xFF4
 20746                           prodl	equ	0xFF3
 20747                           intcon	equ	0xFF2
 20748                           intcon2	equ	0xFF1
 20749                           intcon3	equ	0xFF0
 20750                           indf0	equ	0xFEF
 20751                           postinc0	equ	0xFEE
 20752                           fsr0h	equ	0xFEA
 20753                           fsr0l	equ	0xFE9
 20754                           wreg	equ	0xFE8
 20755                           indf1	equ	0xFE7
 20756                           postdec1	equ	0xFE5
 20757                           plusw1	equ	0xFE3
 20758                           fsr1h	equ	0xFE2
 20759                           fsr1l	equ	0xFE1
 20760                           indf2	equ	0xFDF
 20761                           postinc2	equ	0xFDE
 20762                           postdec2	equ	0xFDD
 20763                           plusw2	equ	0xFDB
 20764                           fsr2h	equ	0xFDA
 20765                           fsr2l	equ	0xFD9
 20766                           status	equ	0xFD8
 20767                           
 20768 ;; *************** function _USBEnableEndpoint *****************
 20769 ;; Defined at:
 20770 ;;		line 878 in file "usb_device.c"
 20771 ;; Parameters:    Size  Location     Type
 20772 ;;  ep              1    wreg     unsigned char 
 20773 ;;  options         1    8[COMRAM] unsigned char 
 20774 ;; Auto vars:     Size  Location     Type
 20775 ;;  ep              1   11[COMRAM] unsigned char 
 20776 ;;  p               2    9[COMRAM] PTR unsigned char 
 20777 ;;		 -> UEP0(1), 
 20778 ;; Return value:  Size  Location     Type
 20779 ;;                  1    wreg      void 
 20780 ;; Registers used:
 20781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20782 ;; Tracked objects:
 20783 ;;		On entry : 0/0
 20784 ;;		On exit  : 0/0
 20785 ;;		Unchanged: 0/0
 20786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20787 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20788 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20790 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20791 ;;Total ram usage:        4 bytes
 20792 ;; Hardware stack levels used:    1
 20793 ;; Hardware stack levels required when called:    1
 20794 ;; This function calls:
 20795 ;;		_USBConfigureEndpoint
 20796 ;; This function is called by:
 20797 ;;		_APP_DeviceCustomHIDInitialize
 20798 ;;		_APP_DeviceMSDInitialize
 20799 ;; This function uses a non-reentrant model
 20800 ;;
 20801                           
 20802                           	psect	text96
 20803  007370                     __ptext96:
 20804                           	opt stack 0
 20805  007370                     _USBEnableEndpoint:
 20806                           	opt stack 26
 20807                           
 20808                           ;incstack = 0
 20809                           ;USBEnableEndpoint@ep stored from wreg
 20810  007370  6E0C               	movwf	USBEnableEndpoint@ep,c
 20811                           
 20812                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 20813  007372  A409               	btfss	USBEnableEndpoint@options,2,c
 20814  007374  D005               	goto	l178
 20815                           
 20816                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 20817  007376  0E00               	movlw	0
 20818  007378  6E01               	movwf	USBConfigureEndpoint@direction,c
 20819  00737A  500C               	movf	USBEnableEndpoint@ep,w,c
 20820  00737C  EC4F  F02D         	call	_USBConfigureEndpoint
 20821  007380                     l178:
 20822                           
 20823                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 20824  007380  A209               	btfss	USBEnableEndpoint@options,1,c
 20825  007382  D005               	goto	l179
 20826                           
 20827                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 20828  007384  0E01               	movlw	1
 20829  007386  6E01               	movwf	USBConfigureEndpoint@direction,c
 20830  007388  500C               	movf	USBEnableEndpoint@ep,w,c
 20831  00738A  EC4F  F02D         	call	_USBConfigureEndpoint
 20832  00738E                     l179:
 20833                           
 20834                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 20835  00738E  500C               	movf	USBEnableEndpoint@ep,w,c
 20836  007390  0D01               	mullw	1
 20837  007392  0E26               	movlw	38
 20838  007394  24F3               	addwf	prodl,w,c
 20839  007396  6E0A               	movwf	USBEnableEndpoint@p,c
 20840  007398  0E0F               	movlw	15
 20841  00739A  20F4               	addwfc	prodh,w,c
 20842  00739C  6E0B               	movwf	USBEnableEndpoint@p+1,c
 20843                           
 20844                           ;usb_device.c: 901: *p = options;
 20845  00739E  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 20846  0073A2  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 20847  0073A6  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 20848  0073AA  0012               	return		;funcret
 20849  0073AC                     __end_of_USBEnableEndpoint:
 20850                           	opt stack 0
 20851                           tosu	equ	0xFFF
 20852                           tosh	equ	0xFFE
 20853                           tosl	equ	0xFFD
 20854                           pclath	equ	0xFFA
 20855                           tblptru	equ	0xFF8
 20856                           tblptrh	equ	0xFF7
 20857                           tblptrl	equ	0xFF6
 20858                           tablat	equ	0xFF5
 20859                           prodh	equ	0xFF4
 20860                           prodl	equ	0xFF3
 20861                           intcon	equ	0xFF2
 20862                           intcon2	equ	0xFF1
 20863                           intcon3	equ	0xFF0
 20864                           indf0	equ	0xFEF
 20865                           postinc0	equ	0xFEE
 20866                           fsr0h	equ	0xFEA
 20867                           fsr0l	equ	0xFE9
 20868                           wreg	equ	0xFE8
 20869                           indf1	equ	0xFE7
 20870                           postdec1	equ	0xFE5
 20871                           plusw1	equ	0xFE3
 20872                           fsr1h	equ	0xFE2
 20873                           fsr1l	equ	0xFE1
 20874                           indf2	equ	0xFDF
 20875                           postinc2	equ	0xFDE
 20876                           postdec2	equ	0xFDD
 20877                           plusw2	equ	0xFDB
 20878                           fsr2h	equ	0xFDA
 20879                           fsr2l	equ	0xFD9
 20880                           status	equ	0xFD8
 20881                           
 20882 ;; *************** function _USBConfigureEndpoint *****************
 20883 ;; Defined at:
 20884 ;;		line 1545 in file "usb_device.c"
 20885 ;; Parameters:    Size  Location     Type
 20886 ;;  EPNum           1    wreg     unsigned char 
 20887 ;;  direction       1    0[COMRAM] unsigned char 
 20888 ;; Auto vars:     Size  Location     Type
 20889 ;;  EPNum           1    5[COMRAM] unsigned char 
 20890 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 20891 ;;		 -> BDT(48), 
 20892 ;; Return value:  Size  Location     Type
 20893 ;;                  1    wreg      void 
 20894 ;; Registers used:
 20895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20896 ;; Tracked objects:
 20897 ;;		On entry : 0/0
 20898 ;;		On exit  : 0/0
 20899 ;;		Unchanged: 0/0
 20900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20901 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20902 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20903 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20904 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20905 ;;Total ram usage:        8 bytes
 20906 ;; Hardware stack levels used:    1
 20907 ;; This function calls:
 20908 ;;		Nothing
 20909 ;; This function is called by:
 20910 ;;		_USBEnableEndpoint
 20911 ;; This function uses a non-reentrant model
 20912 ;;
 20913                           
 20914                           	psect	text97
 20915  005A9E                     __ptext97:
 20916                           	opt stack 0
 20917  005A9E                     _USBConfigureEndpoint:
 20918                           	opt stack 26
 20919                           
 20920                           ;incstack = 0
 20921                           ;USBConfigureEndpoint@EPNum stored from wreg
 20922  005A9E  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 20923                           
 20924                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 20925  005AA0  0E00               	movlw	0
 20926  005AA2  6E07               	movwf	USBConfigureEndpoint@handle,c
 20927  005AA4  0E0D               	movlw	13
 20928  005AA6  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 20929                           
 20930                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 20931  005AA8  5001               	movf	USBConfigureEndpoint@direction,w,c
 20932  005AAA  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 20933  005AAC  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 20934  005AAE  90D8               	bcf	status,0,c
 20935  005AB0  3602               	rlcf	??_USBConfigureEndpoint,f,c
 20936  005AB2  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 20937  005AB4  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 20938  005AB6  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 20939  005AB8  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 20940  005ABA  90D8               	bcf	status,0,c
 20941  005ABC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 20942  005ABE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 20943  005AC0  90D8               	bcf	status,0,c
 20944  005AC2  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 20945  005AC4  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 20946  005AC6  5002               	movf	??_USBConfigureEndpoint,w,c
 20947  005AC8  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 20948  005ACA  5003               	movf	??_USBConfigureEndpoint+1,w,c
 20949  005ACC  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 20950  005ACE  90D8               	bcf	status,0,c
 20951  005AD0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 20952  005AD2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 20953  005AD4  90D8               	bcf	status,0,c
 20954  005AD6  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 20955  005AD8  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 20956  005ADA  5004               	movf	??_USBConfigureEndpoint+2,w,c
 20957  005ADC  2607               	addwf	USBConfigureEndpoint@handle,f,c
 20958  005ADE  5005               	movf	??_USBConfigureEndpoint+3,w,c
 20959  005AE0  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 20960                           
 20961                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 20962  005AE2  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 20963  005AE6  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 20964  005AEA  9EDF               	bcf	indf2,7,c
 20965                           
 20966                           ;usb_device.c: 1559: if(direction == 0)
 20967  005AEC  5001               	movf	USBConfigureEndpoint@direction,w,c
 20968  005AEE  A4D8               	btfss	status,2,c
 20969  005AF0  D007               	goto	l214
 20970                           
 20971                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 20972  005AF2  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 20973  005AF4  0D02               	mullw	2
 20974  005AF6  0E72               	movlw	low _pBDTEntryOut
 20975  005AF8  24F3               	addwf	prodl,w,c
 20976  005AFA  6ED9               	movwf	fsr2l,c
 20977  005AFC  0E00               	movlw	high _pBDTEntryOut
 20978  005AFE  D006               	goto	L14
 20979  005B00                     l214:
 20980                           
 20981                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 20982  005B00  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 20983  005B02  0D02               	mullw	2
 20984  005B04  0E6C               	movlw	low _pBDTEntryIn
 20985  005B06  24F3               	addwf	prodl,w,c
 20986  005B08  6ED9               	movwf	fsr2l,c
 20987  005B0A  0E00               	movlw	high _pBDTEntryIn
 20988  005B0C                     L14:
 20989  005B0C  20F4               	addwfc	prodh,w,c
 20990  005B0E  6EDA               	movwf	fsr2h,c
 20991  005B10  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 20992  005B14  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 20993                           
 20994                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 20995  005B18  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 20996  005B1C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 20997  005B20  9CDF               	bcf	indf2,6,c
 20998                           
 20999                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 21000  005B22  EE20 F004          	lfsr	2,4
 21001  005B26  5007               	movf	USBConfigureEndpoint@handle,w,c
 21002  005B28  26D9               	addwf	fsr2l,f,c
 21003  005B2A  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 21004  005B2C  22DA               	addwfc	fsr2h,f,c
 21005  005B2E  8CDF               	bsf	indf2,6,c
 21006  005B30  0012               	return		;funcret
 21007  005B32                     __end_of_USBConfigureEndpoint:
 21008                           	opt stack 0
 21009                           tosu	equ	0xFFF
 21010                           tosh	equ	0xFFE
 21011                           tosl	equ	0xFFD
 21012                           pclath	equ	0xFFA
 21013                           tblptru	equ	0xFF8
 21014                           tblptrh	equ	0xFF7
 21015                           tblptrl	equ	0xFF6
 21016                           tablat	equ	0xFF5
 21017                           prodh	equ	0xFF4
 21018                           prodl	equ	0xFF3
 21019                           intcon	equ	0xFF2
 21020                           intcon2	equ	0xFF1
 21021                           intcon3	equ	0xFF0
 21022                           indf0	equ	0xFEF
 21023                           postinc0	equ	0xFEE
 21024                           fsr0h	equ	0xFEA
 21025                           fsr0l	equ	0xFE9
 21026                           wreg	equ	0xFE8
 21027                           indf1	equ	0xFE7
 21028                           postdec1	equ	0xFE5
 21029                           plusw1	equ	0xFE3
 21030                           fsr1h	equ	0xFE2
 21031                           fsr1l	equ	0xFE1
 21032                           indf2	equ	0xFDF
 21033                           postinc2	equ	0xFDE
 21034                           postdec2	equ	0xFDD
 21035                           plusw2	equ	0xFDB
 21036                           fsr2h	equ	0xFDA
 21037                           fsr2l	equ	0xFD9
 21038                           status	equ	0xFD8
 21039                           
 21040 ;; *************** function _USBCtrlTrfOutHandler *****************
 21041 ;; Defined at:
 21042 ;;		line 2540 in file "usb_device.c"
 21043 ;; Parameters:    Size  Location     Type
 21044 ;;		None
 21045 ;; Auto vars:     Size  Location     Type
 21046 ;;		None
 21047 ;; Return value:  Size  Location     Type
 21048 ;;                  1    wreg      void 
 21049 ;; Registers used:
 21050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21051 ;; Tracked objects:
 21052 ;;		On entry : 0/0
 21053 ;;		On exit  : 0/0
 21054 ;;		Unchanged: 0/0
 21055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21060 ;;Total ram usage:        0 bytes
 21061 ;; Hardware stack levels used:    1
 21062 ;; Hardware stack levels required when called:    2
 21063 ;; This function calls:
 21064 ;;		_USBCtrlTrfRxService
 21065 ;; This function is called by:
 21066 ;;		_USBCtrlEPService
 21067 ;; This function uses a non-reentrant model
 21068 ;;
 21069                           
 21070                           	psect	text98
 21071  006A6E                     __ptext98:
 21072                           	opt stack 0
 21073  006A6E                     _USBCtrlTrfOutHandler:
 21074                           	opt stack 26
 21075                           
 21076                           ;usb_device.c: 2542: if(controlTransferState == 2)
 21077                           
 21078                           ;incstack = 0
 21079  006A6E  0E02               	movlw	2
 21080  006A70  0100               	movlb	0	; () banked
 21081  006A72  19B6               	xorwf	_controlTransferState& (0+255),w,b
 21082  006A74  A4D8               	btfss	status,2,c
 21083  006A76  D003               	goto	l320
 21084                           
 21085                           ; BSR set to: 0
 21086                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 21087  006A78  ECC2  F01D         	call	_USBCtrlTrfRxService	;wreg free
 21088                           
 21089                           ;usb_device.c: 2545: }
 21090  006A7C  0012               	return	
 21091  006A7E                     l320:
 21092                           
 21093                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 21094  006A7E  0E00               	movlw	0
 21095  006A80  0100               	movlb	0	; () banked
 21096  006A82  6FB6               	movwf	_controlTransferState& (0+255),b
 21097                           
 21098                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 21099  006A84  51B2               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 21100  006A86  A4D8               	btfss	status,2,c
 21101  006A88  D01F               	goto	l322
 21102                           
 21103                           ; BSR set to: 0
 21104                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 21105  006A8A  EE20 F001          	lfsr	2,1
 21106  006A8E  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21107  006A90  26D9               	addwf	fsr2l,f,c
 21108  006A92  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21109  006A94  22DA               	addwfc	fsr2h,f,c
 21110  006A96  0E08               	movlw	8
 21111  006A98  6EDF               	movwf	indf2,c
 21112                           
 21113                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21114  006A9A  EE20 F002          	lfsr	2,2
 21115  006A9E  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21116  006AA0  26D9               	addwf	fsr2l,f,c
 21117  006AA2  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21118  006AA4  22DA               	addwfc	fsr2h,f,c
 21119  006AA6  0E30               	movlw	48
 21120  006AA8  6EDE               	movwf	postinc2,c
 21121  006AAA  0E0D               	movlw	13
 21122  006AAC  6EDD               	movwf	postdec2,c
 21123                           
 21124                           ; BSR set to: 0
 21125                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21126  006AAE  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21127  006AB2  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21128  006AB6  0E0C               	movlw	12
 21129  006AB8  6EDF               	movwf	indf2,c
 21130                           
 21131                           ; BSR set to: 0
 21132                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21133  006ABA  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21134  006ABE  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21135  006AC2  0E00               	movlw	0
 21136  006AC4  8EDB               	bsf	plusw2,7,c
 21137                           
 21138                           ;usb_device.c: 2563: }
 21139  006AC6  0012               	return	
 21140  006AC8                     l322:
 21141                           
 21142                           ; BSR set to: 0
 21143                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 21144                           
 21145                           ; BSR set to: 0
 21146  006AC8  0E00               	movlw	0
 21147  006ACA  6FB2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 21148                           
 21149                           ; BSR set to: 0
 21150  006ACC  0012               	return	
 21151  006ACE                     __end_of_USBCtrlTrfOutHandler:
 21152                           	opt stack 0
 21153                           tosu	equ	0xFFF
 21154                           tosh	equ	0xFFE
 21155                           tosl	equ	0xFFD
 21156                           pclath	equ	0xFFA
 21157                           tblptru	equ	0xFF8
 21158                           tblptrh	equ	0xFF7
 21159                           tblptrl	equ	0xFF6
 21160                           tablat	equ	0xFF5
 21161                           prodh	equ	0xFF4
 21162                           prodl	equ	0xFF3
 21163                           intcon	equ	0xFF2
 21164                           intcon2	equ	0xFF1
 21165                           intcon3	equ	0xFF0
 21166                           indf0	equ	0xFEF
 21167                           postinc0	equ	0xFEE
 21168                           fsr0h	equ	0xFEA
 21169                           fsr0l	equ	0xFE9
 21170                           wreg	equ	0xFE8
 21171                           indf1	equ	0xFE7
 21172                           postdec1	equ	0xFE5
 21173                           plusw1	equ	0xFE3
 21174                           fsr1h	equ	0xFE2
 21175                           fsr1l	equ	0xFE1
 21176                           indf2	equ	0xFDF
 21177                           postinc2	equ	0xFDE
 21178                           postdec2	equ	0xFDD
 21179                           plusw2	equ	0xFDB
 21180                           fsr2h	equ	0xFDA
 21181                           fsr2l	equ	0xFD9
 21182                           status	equ	0xFD8
 21183                           
 21184 ;; *************** function _USBCtrlTrfRxService *****************
 21185 ;; Defined at:
 21186 ;;		line 1854 in file "usb_device.c"
 21187 ;; Parameters:    Size  Location     Type
 21188 ;;		None
 21189 ;; Auto vars:     Size  Location     Type
 21190 ;;  byteToRead      1    1[COMRAM] unsigned char 
 21191 ;;  i               1    0[COMRAM] unsigned char 
 21192 ;; Return value:  Size  Location     Type
 21193 ;;                  1    wreg      void 
 21194 ;; Registers used:
 21195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21196 ;; Tracked objects:
 21197 ;;		On entry : 0/0
 21198 ;;		On exit  : 0/0
 21199 ;;		Unchanged: 0/0
 21200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21204 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21205 ;;Total ram usage:        2 bytes
 21206 ;; Hardware stack levels used:    1
 21207 ;; Hardware stack levels required when called:    1
 21208 ;; This function calls:
 21209 ;;		_USBCtrlEPAllowStatusStage
 21210 ;; This function is called by:
 21211 ;;		_USBCtrlTrfOutHandler
 21212 ;; This function uses a non-reentrant model
 21213 ;;
 21214                           
 21215                           	psect	text99
 21216  003B84                     __ptext99:
 21217                           	opt stack 0
 21218  003B84                     _USBCtrlTrfRxService:
 21219                           	opt stack 26
 21220                           
 21221                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 21222                           
 21223                           ;incstack = 0
 21224  003B84  0100               	movlb	0	; () banked
 21225  003B86  EE20 F001          	lfsr	2,1
 21226  003B8A  519A               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 21227  003B8C  26D9               	addwf	fsr2l,f,c
 21228  003B8E  519B               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 21229  003B90  22DA               	addwfc	fsr2h,f,c
 21230  003B92  50DF               	movf	indf2,w,c
 21231  003B94  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 21232                           
 21233                           ; BSR set to: 0
 21234                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 21235  003B96  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21236  003B98  0101               	movlb	1	; () banked
 21237  003B9A  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 21238  003B9C  0E00               	movlw	0
 21239  003B9E  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 21240  003BA0  A0D8               	btfss	status,0,c
 21241                           
 21242                           ; BSR set to: 1
 21243                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 21244  003BA2  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 21245                           
 21246                           ; BSR set to: 1
 21247                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 21248                           
 21249                           ; BSR set to: 1
 21250  003BA6  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21251  003BA8  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 21252  003BAA  0E00               	movlw	0
 21253  003BAC  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 21254                           
 21255                           ; BSR set to: 1
 21256                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 21257  003BAE  0E00               	movlw	0
 21258  003BB0  6E01               	movwf	USBCtrlTrfRxService@i,c
 21259  003BB2  D011               	goto	l248
 21260  003BB4                     
 21261                           ; BSR set to: 1
 21262                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 21263                           
 21264                           ; BSR set to: 1
 21265  003BB4  5001               	movf	USBCtrlTrfRxService@i,w,c
 21266  003BB6  0D01               	mullw	1
 21267  003BB8  0E38               	movlw	56
 21268  003BBA  24F3               	addwf	prodl,w,c
 21269  003BBC  6ED9               	movwf	fsr2l,c
 21270  003BBE  0E0D               	movlw	13
 21271  003BC0  20F4               	addwfc	prodh,w,c
 21272  003BC2  6EDA               	movwf	fsr2h,c
 21273  003BC4  C131  FFE1         	movff	_outPipes,fsr1l
 21274  003BC8  C132  FFE2         	movff	_outPipes+1,fsr1h
 21275  003BCC  CFDF FFE7          	movff	indf2,indf1
 21276                           
 21277                           ; BSR set to: 1
 21278  003BD0  4B31               	infsnz	_outPipes& (0+255),f,b
 21279  003BD2  2B32               	incf	(_outPipes+1)& (0+255),f,b
 21280                           
 21281                           ; BSR set to: 1
 21282  003BD4  2A01               	incf	USBCtrlTrfRxService@i,f,c
 21283  003BD6                     l248:
 21284                           
 21285                           ; BSR set to: 1
 21286                           
 21287                           ; BSR set to: 1
 21288  003BD6  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21289  003BD8  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 21290  003BDA  A0D8               	btfss	status,0,c
 21291  003BDC  D7EB               	goto	l249
 21292                           
 21293                           ; BSR set to: 1
 21294                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 21295                           
 21296                           ; BSR set to: 1
 21297  003BDE  5135               	movf	(_outPipes+4)& (0+255),w,b
 21298  003BE0  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 21299  003BE2  B4D8               	btfsc	status,2,c
 21300  003BE4  D033               	goto	l251
 21301                           
 21302                           ; BSR set to: 1
 21303                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 21304  003BE6  0100               	movlb	0	; () banked
 21305  003BE8  EE20 F001          	lfsr	2,1
 21306  003BEC  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21307  003BEE  26D9               	addwf	fsr2l,f,c
 21308  003BF0  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21309  003BF2  22DA               	addwfc	fsr2h,f,c
 21310  003BF4  0E08               	movlw	8
 21311  003BF6  6EDF               	movwf	indf2,c
 21312                           
 21313                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 21314  003BF8  EE20 F002          	lfsr	2,2
 21315  003BFC  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21316  003BFE  26D9               	addwf	fsr2l,f,c
 21317  003C00  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21318  003C02  22DA               	addwfc	fsr2h,f,c
 21319  003C04  0E38               	movlw	56
 21320  003C06  6EDE               	movwf	postinc2,c
 21321  003C08  0E0D               	movlw	13
 21322  003C0A  6EDD               	movwf	postdec2,c
 21323                           
 21324                           ; BSR set to: 0
 21325                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 21326  003C0C  C09A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21327  003C10  C09B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21328  003C14  BCDF               	btfsc	indf2,6,c
 21329  003C16  D00D               	goto	l252
 21330                           
 21331                           ; BSR set to: 0
 21332                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 21333  003C18  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21334  003C1C  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21335  003C20  0E48               	movlw	72
 21336  003C22  6EDF               	movwf	indf2,c
 21337                           
 21338                           ; BSR set to: 0
 21339                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21340  003C24  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21341  003C28  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21342  003C2C  0E00               	movlw	0
 21343  003C2E  8EDB               	bsf	plusw2,7,c
 21344                           
 21345                           ;usb_device.c: 1891: }
 21346  003C30  0012               	return	
 21347  003C32                     l252:
 21348                           
 21349                           ; BSR set to: 0
 21350                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 21351                           
 21352                           ; BSR set to: 0
 21353  003C32  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21354  003C36  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21355  003C3A  0E08               	movlw	8
 21356  003C3C  6EDF               	movwf	indf2,c
 21357                           
 21358                           ; BSR set to: 0
 21359                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21360  003C3E  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21361  003C42  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21362  003C46  0E00               	movlw	0
 21363  003C48  8EDB               	bsf	plusw2,7,c
 21364                           
 21365                           ; BSR set to: 0
 21366                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 21367  003C4A  0012               	return	
 21368  003C4C                     l251:
 21369                           
 21370                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 21371                           
 21372                           ; BSR set to: 0
 21373  003C4C  0100               	movlb	0	; () banked
 21374  003C4E  EE20 F001          	lfsr	2,1
 21375  003C52  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21376  003C54  26D9               	addwf	fsr2l,f,c
 21377  003C56  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21378  003C58  22DA               	addwfc	fsr2h,f,c
 21379  003C5A  0E08               	movlw	8
 21380  003C5C  6EDF               	movwf	indf2,c
 21381                           
 21382                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21383  003C5E  EE20 F002          	lfsr	2,2
 21384  003C62  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21385  003C64  26D9               	addwf	fsr2l,f,c
 21386  003C66  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21387  003C68  22DA               	addwfc	fsr2h,f,c
 21388  003C6A  0E30               	movlw	48
 21389  003C6C  6EDE               	movwf	postinc2,c
 21390  003C6E  0E0D               	movlw	13
 21391  003C70  6EDD               	movwf	postdec2,c
 21392                           
 21393                           ; BSR set to: 0
 21394                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 21395  003C72  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21396  003C76  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21397  003C7A  0E04               	movlw	4
 21398  003C7C  6EDF               	movwf	indf2,c
 21399                           
 21400                           ; BSR set to: 0
 21401                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21402  003C7E  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21403  003C82  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21404  003C86  0E00               	movlw	0
 21405  003C88  8EDB               	bsf	plusw2,7,c
 21406                           
 21407                           ; BSR set to: 0
 21408                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 21409                           
 21410                           ; BSR set to: 0
 21411  003C8A  0101               	movlb	1	; () banked
 21412  003C8C  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 21413                           
 21414                           ; BSR set to: 1
 21415                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 21416  003C8E  0100               	movlb	0	; () banked
 21417  003C90  51B0               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 21418  003C92  A4D8               	btfss	status,2,c
 21419  003C94  0012               	return	
 21420                           
 21421                           ; BSR set to: 0
 21422                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 21423  003C96  ECAC  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21424  003C9A  0012               	return	
 21425  003C9C                     __end_of_USBCtrlTrfRxService:
 21426                           	opt stack 0
 21427                           tosu	equ	0xFFF
 21428                           tosh	equ	0xFFE
 21429                           tosl	equ	0xFFD
 21430                           pclath	equ	0xFFA
 21431                           tblptru	equ	0xFF8
 21432                           tblptrh	equ	0xFF7
 21433                           tblptrl	equ	0xFF6
 21434                           tablat	equ	0xFF5
 21435                           prodh	equ	0xFF4
 21436                           prodl	equ	0xFF3
 21437                           intcon	equ	0xFF2
 21438                           intcon2	equ	0xFF1
 21439                           intcon3	equ	0xFF0
 21440                           indf0	equ	0xFEF
 21441                           postinc0	equ	0xFEE
 21442                           fsr0h	equ	0xFEA
 21443                           fsr0l	equ	0xFE9
 21444                           wreg	equ	0xFE8
 21445                           indf1	equ	0xFE7
 21446                           postdec1	equ	0xFE5
 21447                           plusw1	equ	0xFE3
 21448                           fsr1h	equ	0xFE2
 21449                           fsr1l	equ	0xFE1
 21450                           indf2	equ	0xFDF
 21451                           postinc2	equ	0xFDE
 21452                           postdec2	equ	0xFDD
 21453                           plusw2	equ	0xFDB
 21454                           fsr2h	equ	0xFDA
 21455                           fsr2l	equ	0xFD9
 21456                           status	equ	0xFD8
 21457                           
 21458 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 21459 ;; Defined at:
 21460 ;;		line 1418 in file "usb_device.c"
 21461 ;; Parameters:    Size  Location     Type
 21462 ;;		None
 21463 ;; Auto vars:     Size  Location     Type
 21464 ;;		None
 21465 ;; Return value:  Size  Location     Type
 21466 ;;                  1    wreg      void 
 21467 ;; Registers used:
 21468 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21469 ;; Tracked objects:
 21470 ;;		On entry : 0/0
 21471 ;;		On exit  : 0/0
 21472 ;;		Unchanged: 0/0
 21473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21478 ;;Total ram usage:        0 bytes
 21479 ;; Hardware stack levels used:    1
 21480 ;; This function calls:
 21481 ;;		Nothing
 21482 ;; This function is called by:
 21483 ;;		_USBDeviceTasks
 21484 ;;		_USBCtrlEPServiceComplete
 21485 ;;		_USBCtrlTrfRxService
 21486 ;; This function uses a non-reentrant model
 21487 ;;
 21488                           
 21489                           	psect	text100
 21490  004F58                     __ptext100:
 21491                           	opt stack 0
 21492  004F58                     _USBCtrlEPAllowStatusStage:
 21493                           	opt stack 26
 21494                           
 21495                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 21496                           
 21497                           ;incstack = 0
 21498  004F58  0100               	movlb	0	; () banked
 21499  004F5A  51AF               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 21500  004F5C  A4D8               	btfss	status,2,c
 21501  004F5E  0012               	return	
 21502                           
 21503                           ; BSR set to: 0
 21504                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 21505  004F60  0E01               	movlw	1
 21506  004F62  6FAF               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21507                           
 21508                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 21509  004F64  51AE               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 21510  004F66  A4D8               	btfss	status,2,c
 21511  004F68  0012               	return	
 21512                           
 21513                           ; BSR set to: 0
 21514                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 21515  004F6A  0E01               	movlw	1
 21516  004F6C  6FAE               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21517                           
 21518                           ; BSR set to: 0
 21519                           ;usb_device.c: 1434: if(controlTransferState == 2)
 21520  004F6E  0E02               	movlw	2
 21521  004F70  19B6               	xorwf	_controlTransferState& (0+255),w,b
 21522  004F72  A4D8               	btfss	status,2,c
 21523  004F74  D015               	goto	l202
 21524                           
 21525                           ; BSR set to: 0
 21526                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 21527  004F76  EE20 F001          	lfsr	2,1
 21528  004F7A  516C               	movf	_pBDTEntryIn& (0+255),w,b
 21529  004F7C  26D9               	addwf	fsr2l,f,c
 21530  004F7E  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21531  004F80  22DA               	addwfc	fsr2h,f,c
 21532  004F82  0E00               	movlw	0
 21533  004F84  6EDF               	movwf	indf2,c
 21534                           
 21535                           ; BSR set to: 0
 21536                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 21537  004F86  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21538  004F8A  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21539  004F8E  0E48               	movlw	72
 21540  004F90  6EDF               	movwf	indf2,c
 21541                           
 21542                           ; BSR set to: 0
 21543                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21544  004F92  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21545  004F96  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21546  004F9A  0E00               	movlw	0
 21547  004F9C  8EDB               	bsf	plusw2,7,c
 21548                           
 21549                           ;usb_device.c: 1439: }
 21550  004F9E  0012               	return	
 21551  004FA0                     l202:
 21552                           
 21553                           ; BSR set to: 0
 21554                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 21555                           
 21556                           ; BSR set to: 0
 21557  004FA0  05B6               	decf	_controlTransferState& (0+255),w,b
 21558  004FA2  A4D8               	btfss	status,2,c
 21559  004FA4  0012               	return	
 21560                           
 21561                           ; BSR set to: 0
 21562                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 21563  004FA6  0E00               	movlw	0
 21564  004FA8  6FB2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 21565                           
 21566                           ; BSR set to: 0
 21567                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 21568  004FAA  EE20 F001          	lfsr	2,1
 21569  004FAE  519A               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 21570  004FB0  26D9               	addwf	fsr2l,f,c
 21571  004FB2  519B               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 21572  004FB4  22DA               	addwfc	fsr2h,f,c
 21573  004FB6  0E08               	movlw	8
 21574  004FB8  6EDF               	movwf	indf2,c
 21575                           
 21576                           ; BSR set to: 0
 21577                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 21578  004FBA  EE20 F002          	lfsr	2,2
 21579  004FBE  519A               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 21580  004FC0  26D9               	addwf	fsr2l,f,c
 21581  004FC2  519B               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 21582  004FC4  22DA               	addwfc	fsr2h,f,c
 21583  004FC6  0E30               	movlw	48
 21584  004FC8  6EDE               	movwf	postinc2,c
 21585  004FCA  0E0D               	movlw	13
 21586  004FCC  6EDD               	movwf	postdec2,c
 21587                           
 21588                           ; BSR set to: 0
 21589                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 21590  004FCE  C09A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21591  004FD2  C09B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21592  004FD6  0E04               	movlw	4
 21593  004FD8  6EDF               	movwf	indf2,c
 21594                           
 21595                           ; BSR set to: 0
 21596                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 21597  004FDA  C09A  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21598  004FDE  C09B  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21599  004FE2  0E00               	movlw	0
 21600  004FE4  8EDB               	bsf	plusw2,7,c
 21601                           
 21602                           ; BSR set to: 0
 21603                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 21604  004FE6  0E01               	movlw	1
 21605  004FE8  6FB2               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 21606                           
 21607                           ; BSR set to: 0
 21608                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 21609  004FEA  EE20 F001          	lfsr	2,1
 21610  004FEE  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21611  004FF0  26D9               	addwf	fsr2l,f,c
 21612  004FF2  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21613  004FF4  22DA               	addwfc	fsr2h,f,c
 21614  004FF6  0E08               	movlw	8
 21615  004FF8  6EDF               	movwf	indf2,c
 21616                           
 21617                           ; BSR set to: 0
 21618                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21619  004FFA  EE20 F002          	lfsr	2,2
 21620  004FFE  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21621  005000  26D9               	addwf	fsr2l,f,c
 21622  005002  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21623  005004  22DA               	addwfc	fsr2h,f,c
 21624  005006  0E30               	movlw	48
 21625  005008  6EDE               	movwf	postinc2,c
 21626  00500A  0E0D               	movlw	13
 21627  00500C  6EDD               	movwf	postdec2,c
 21628                           
 21629                           ; BSR set to: 0
 21630                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 21631  00500E  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21632  005012  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21633  005016  0E80               	movlw	128
 21634  005018  6EDF               	movwf	indf2,c
 21635                           
 21636                           ; BSR set to: 0
 21637                           
 21638                           ; BSR set to: 0
 21639                           
 21640                           ; BSR set to: 0
 21641  00501A  0012               	return	
 21642  00501C                     __end_of_USBCtrlEPAllowStatusStage:
 21643                           	opt stack 0
 21644                           tosu	equ	0xFFF
 21645                           tosh	equ	0xFFE
 21646                           tosl	equ	0xFFD
 21647                           pclath	equ	0xFFA
 21648                           tblptru	equ	0xFF8
 21649                           tblptrh	equ	0xFF7
 21650                           tblptrl	equ	0xFF6
 21651                           tablat	equ	0xFF5
 21652                           prodh	equ	0xFF4
 21653                           prodl	equ	0xFF3
 21654                           intcon	equ	0xFF2
 21655                           intcon2	equ	0xFF1
 21656                           intcon3	equ	0xFF0
 21657                           indf0	equ	0xFEF
 21658                           postinc0	equ	0xFEE
 21659                           fsr0h	equ	0xFEA
 21660                           fsr0l	equ	0xFE9
 21661                           wreg	equ	0xFE8
 21662                           indf1	equ	0xFE7
 21663                           postdec1	equ	0xFE5
 21664                           plusw1	equ	0xFE3
 21665                           fsr1h	equ	0xFE2
 21666                           fsr1l	equ	0xFE1
 21667                           indf2	equ	0xFDF
 21668                           postinc2	equ	0xFDE
 21669                           postdec2	equ	0xFDD
 21670                           plusw2	equ	0xFDB
 21671                           fsr2h	equ	0xFDA
 21672                           fsr2l	equ	0xFD9
 21673                           status	equ	0xFD8
 21674                           
 21675 ;; *************** function _USBCtrlTrfInHandler *****************
 21676 ;; Defined at:
 21677 ;;		line 2594 in file "usb_device.c"
 21678 ;; Parameters:    Size  Location     Type
 21679 ;;		None
 21680 ;; Auto vars:     Size  Location     Type
 21681 ;;  lastDTS         1    1[COMRAM] unsigned char 
 21682 ;; Return value:  Size  Location     Type
 21683 ;;                  1    wreg      void 
 21684 ;; Registers used:
 21685 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21686 ;; Tracked objects:
 21687 ;;		On entry : 0/0
 21688 ;;		On exit  : 0/0
 21689 ;;		Unchanged: 0/0
 21690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21694 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21695 ;;Total ram usage:        1 bytes
 21696 ;; Hardware stack levels used:    1
 21697 ;; Hardware stack levels required when called:    1
 21698 ;; This function calls:
 21699 ;;		_USBCtrlTrfTxService
 21700 ;; This function is called by:
 21701 ;;		_USBCtrlEPService
 21702 ;; This function uses a non-reentrant model
 21703 ;;
 21704                           
 21705                           	psect	text101
 21706  004DCC                     __ptext101:
 21707                           	opt stack 0
 21708  004DCC                     _USBCtrlTrfInHandler:
 21709                           	opt stack 27
 21710                           
 21711                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 21712                           
 21713                           ; BSR set to: 0
 21714                           ;incstack = 0
 21715  004DCC  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21716  004DD0  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21717  004DD4  0100               	movlb	0	; () banked
 21718  004DD6  0E00               	movlw	0
 21719  004DD8  BCDF               	btfsc	indf2,6,c
 21720  004DDA  0E01               	movlw	1
 21721  004DDC  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 21722                           
 21723                           ; BSR set to: 0
 21724                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 21725  004DDE  0E04               	movlw	4
 21726  004DE0  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 21727  004DE2  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 21728  004DE4  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21729  004DE6  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 21730                           
 21731                           ; BSR set to: 0
 21732                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 21733  004DE8  0E08               	movlw	8
 21734  004DEA  185F               	xorwf	_USBDeviceState,w,c
 21735  004DEC  A4D8               	btfss	status,2,c
 21736  004DEE  D00C               	goto	l329
 21737                           
 21738                           ; BSR set to: 0
 21739                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 21740  004DF0  010D               	movlb	13	; () banked
 21741  004DF2  5132               	movf	50,w,b	;volatile
 21742  004DF4  0B7F               	andlw	127
 21743  004DF6  010F               	movlb	15	; () banked
 21744  004DF8  6F38               	movwf	56,b	;volatile
 21745                           
 21746                           ; BSR set to: 15
 21747                           ;usb_device.c: 2609: if(UADDR != 0u)
 21748  004DFA  5138               	movf	56,w,b	;volatile
 21749  004DFC  B4D8               	btfsc	status,2,c
 21750  004DFE  D002               	goto	l328
 21751                           
 21752                           ; BSR set to: 15
 21753                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 21754  004E00  0E10               	movlw	16
 21755  004E02  D001               	goto	L15
 21756  004E04                     l328:
 21757                           
 21758                           ; BSR set to: 15
 21759                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 21760                           
 21761                           ; BSR set to: 15
 21762  004E04  0E04               	movlw	4
 21763  004E06                     L15:
 21764  004E06  6E5F               	movwf	_USBDeviceState,c
 21765  004E08                     l329:
 21766                           
 21767                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 21768                           
 21769                           ; BSR set to: 15
 21770                           
 21771                           ; BSR set to: 15
 21772  004E08  0100               	movlb	0	; () banked
 21773  004E0A  05B6               	decf	_controlTransferState& (0+255),w,b
 21774  004E0C  A4D8               	btfss	status,2,c
 21775  004E0E  D03B               	goto	l330
 21776                           
 21777                           ; BSR set to: 0
 21778                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 21779  004E10  EE20 F002          	lfsr	2,2
 21780  004E14  516C               	movf	_pBDTEntryIn& (0+255),w,b
 21781  004E16  26D9               	addwf	fsr2l,f,c
 21782  004E18  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21783  004E1A  22DA               	addwfc	fsr2h,f,c
 21784  004E1C  0E38               	movlw	56
 21785  004E1E  6EDE               	movwf	postinc2,c
 21786  004E20  0E0D               	movlw	13
 21787  004E22  6EDD               	movwf	postdec2,c
 21788                           
 21789                           ; BSR set to: 0
 21790                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 21791  004E24  EC1C  F026         	call	_USBCtrlTrfTxService	;wreg free
 21792                           
 21793                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 21794  004E28  0E02               	movlw	2
 21795  004E2A  0100               	movlb	0	; () banked
 21796  004E2C  19B7               	xorwf	_shortPacketStatus& (0+255),w,b
 21797  004E2E  A4D8               	btfss	status,2,c
 21798  004E30  D00D               	goto	l331
 21799                           
 21800                           ; BSR set to: 0
 21801                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 21802  004E32  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21803  004E36  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21804  004E3A  0E04               	movlw	4
 21805  004E3C  6EDF               	movwf	indf2,c
 21806                           
 21807                           ; BSR set to: 0
 21808                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21809  004E3E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21810  004E42  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21811  004E46  0E00               	movlw	0
 21812  004E48  8EDB               	bsf	plusw2,7,c
 21813                           
 21814                           ;usb_device.c: 2635: }
 21815  004E4A  0012               	return	
 21816  004E4C                     l331:
 21817                           
 21818                           ; BSR set to: 0
 21819                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 21820                           
 21821                           ; BSR set to: 0
 21822  004E4C  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 21823  004E4E  A4D8               	btfss	status,2,c
 21824  004E50  D00D               	goto	l333
 21825                           
 21826                           ; BSR set to: 0
 21827                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 21828  004E52  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21829  004E56  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21830  004E5A  0E48               	movlw	72
 21831  004E5C  6EDF               	movwf	indf2,c
 21832                           
 21833                           ; BSR set to: 0
 21834                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21835  004E5E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21836  004E62  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21837  004E66  0E00               	movlw	0
 21838  004E68  8EDB               	bsf	plusw2,7,c
 21839                           
 21840                           ;usb_device.c: 2642: }
 21841  004E6A  0012               	return	
 21842  004E6C                     l333:
 21843                           
 21844                           ; BSR set to: 0
 21845                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 21846                           
 21847                           ; BSR set to: 0
 21848  004E6C  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21849  004E70  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21850  004E74  0E08               	movlw	8
 21851  004E76  6EDF               	movwf	indf2,c
 21852                           
 21853                           ; BSR set to: 0
 21854                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21855  004E78  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21856  004E7C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21857  004E80  0E00               	movlw	0
 21858  004E82  8EDB               	bsf	plusw2,7,c
 21859                           
 21860                           ; BSR set to: 0
 21861                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 21862                           
 21863                           ; BSR set to: 0
 21864  004E84  0012               	return	
 21865  004E86                     l330:
 21866                           
 21867                           ; BSR set to: 0
 21868                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 21869  004E86  0101               	movlb	1	; () banked
 21870  004E88  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 21871                           
 21872                           ; BSR set to: 1
 21873                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 21874                           
 21875                           ; BSR set to: 1
 21876  004E8A  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 21877                           
 21878                           ; BSR set to: 1
 21879                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 21880                           
 21881                           ; BSR set to: 1
 21882  004E8C  0E00               	movlw	0
 21883  004E8E  0100               	movlb	0	; () banked
 21884  004E90  6FB6               	movwf	_controlTransferState& (0+255),b
 21885  004E92  0012               	return	
 21886  004E94                     __end_of_USBCtrlTrfInHandler:
 21887                           	opt stack 0
 21888                           tosu	equ	0xFFF
 21889                           tosh	equ	0xFFE
 21890                           tosl	equ	0xFFD
 21891                           pclath	equ	0xFFA
 21892                           tblptru	equ	0xFF8
 21893                           tblptrh	equ	0xFF7
 21894                           tblptrl	equ	0xFF6
 21895                           tablat	equ	0xFF5
 21896                           prodh	equ	0xFF4
 21897                           prodl	equ	0xFF3
 21898                           intcon	equ	0xFF2
 21899                           intcon2	equ	0xFF1
 21900                           intcon3	equ	0xFF0
 21901                           indf0	equ	0xFEF
 21902                           postinc0	equ	0xFEE
 21903                           fsr0h	equ	0xFEA
 21904                           fsr0l	equ	0xFE9
 21905                           wreg	equ	0xFE8
 21906                           indf1	equ	0xFE7
 21907                           postdec1	equ	0xFE5
 21908                           plusw1	equ	0xFE3
 21909                           fsr1h	equ	0xFE2
 21910                           fsr1l	equ	0xFE1
 21911                           indf2	equ	0xFDF
 21912                           postinc2	equ	0xFDE
 21913                           postdec2	equ	0xFDD
 21914                           plusw2	equ	0xFDB
 21915                           fsr2h	equ	0xFDA
 21916                           fsr2l	equ	0xFD9
 21917                           status	equ	0xFD8
 21918                           
 21919 ;; *************** function _USBCtrlTrfTxService *****************
 21920 ;; Defined at:
 21921 ;;		line 1773 in file "usb_device.c"
 21922 ;; Parameters:    Size  Location     Type
 21923 ;;		None
 21924 ;; Auto vars:     Size  Location     Type
 21925 ;;  byteToSend      1    0[COMRAM] unsigned char 
 21926 ;; Return value:  Size  Location     Type
 21927 ;;                  1    wreg      void 
 21928 ;; Registers used:
 21929 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21930 ;; Tracked objects:
 21931 ;;		On entry : 0/0
 21932 ;;		On exit  : 0/0
 21933 ;;		Unchanged: 0/0
 21934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21939 ;;Total ram usage:        1 bytes
 21940 ;; Hardware stack levels used:    1
 21941 ;; This function calls:
 21942 ;;		Nothing
 21943 ;; This function is called by:
 21944 ;;		_USBCtrlEPAllowDataStage
 21945 ;;		_USBCtrlTrfInHandler
 21946 ;; This function uses a non-reentrant model
 21947 ;;
 21948                           
 21949                           	psect	text102
 21950  004C38                     __ptext102:
 21951                           	opt stack 0
 21952  004C38                     _USBCtrlTrfTxService:
 21953                           	opt stack 25
 21954                           
 21955                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 21956                           
 21957                           ; BSR set to: 0
 21958                           ;incstack = 0
 21959  004C38  0E08               	movlw	8
 21960  004C3A  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 21961                           
 21962                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 21963  004C3C  0100               	movlb	0	; () banked
 21964  004C3E  516B               	movf	(_inPipes+5)& (0+255),w,b
 21965  004C40  E110               	bnz	l9879
 21966  004C42  0E08               	movlw	8
 21967  004C44  5D6A               	subwf	(_inPipes+4)& (0+255),w,b
 21968  004C46  B0D8               	btfsc	status,0,c
 21969  004C48  D00C               	goto	l235
 21970                           
 21971                           ; BSR set to: 0
 21972                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 21973  004C4A  C06A  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 21974                           
 21975                           ; BSR set to: 0
 21976                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 21977  004C4E  51B7               	movf	_shortPacketStatus& (0+255),w,b
 21978  004C50  A4D8               	btfss	status,2,c
 21979  004C52  D002               	goto	l233
 21980                           
 21981                           ; BSR set to: 0
 21982                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 21983  004C54  0E01               	movlw	1
 21984  004C56  D004               	goto	L16
 21985  004C58                     l233:
 21986                           
 21987                           ; BSR set to: 0
 21988                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 21989                           
 21990                           ; BSR set to: 0
 21991  004C58  05B7               	decf	_shortPacketStatus& (0+255),w,b
 21992  004C5A  A4D8               	btfss	status,2,c
 21993  004C5C  D002               	goto	l235
 21994                           
 21995                           ; BSR set to: 0
 21996                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 21997  004C5E  0E02               	movlw	2
 21998  004C60                     L16:
 21999  004C60  6FB7               	movwf	_shortPacketStatus& (0+255),b
 22000  004C62                     l235:
 22001  004C62                     l9879:
 22002                           
 22003                           ; BSR set to: 0
 22004                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 22005  004C62  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22006  004C64  5F6A               	subwf	(_inPipes+4)& (0+255),f,b
 22007  004C66  0E00               	movlw	0
 22008  004C68  5B6B               	subwfb	(_inPipes+5)& (0+255),f,b
 22009                           
 22010                           ; BSR set to: 0
 22011                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 22012  004C6A  EE20 F001          	lfsr	2,1
 22013  004C6E  516C               	movf	_pBDTEntryIn& (0+255),w,b
 22014  004C70  26D9               	addwf	fsr2l,f,c
 22015  004C72  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22016  004C74  22DA               	addwfc	fsr2h,f,c
 22017  004C76  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 22018                           
 22019                           ; BSR set to: 0
 22020                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 22021  004C7A  0E38               	movlw	56
 22022  004C7C  6F96               	movwf	_pDst& (0+255),b
 22023  004C7E  0E0D               	movlw	13
 22024  004C80  6F97               	movwf	(_pDst+1)& (0+255),b
 22025                           
 22026                           ; BSR set to: 0
 22027                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 22028  004C82  A169               	btfss	(_inPipes+3)& (0+255),0,b
 22029  004C84  D01C               	goto	l237
 22030  004C86  D03A               	goto	l241
 22031  004C88                     
 22032                           ; BSR set to: 0
 22033                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 22034                           
 22035                           ; BSR set to: 0
 22036  004C88  C066  FFF6         	movff	_inPipes,tblptrl
 22037  004C8C  C067  FFF7         	movff	_inPipes+1,tblptrh
 22038  004C90  6AF8               	clrf	tblptru,c
 22039  004C92  C096  FFD9         	movff	_pDst,fsr2l
 22040  004C96  C097  FFDA         	movff	_pDst+1,fsr2h
 22041  004C9A  0E0E               	movlw	(high __ramtop+-1)
 22042  004C9C  64F7               	cpfsgt	tblptrh,c
 22043  004C9E  D003               	bra	u6957
 22044  004CA0  0008               	tblrd		*
 22045  004CA2  50F5               	movf	tablat,w,c
 22046  004CA4  D005               	bra	u6950
 22047  004CA6                     u6957:
 22048  004CA6  CFF6 FFE9          	movff	tblptrl,fsr0l
 22049  004CAA  CFF7 FFEA          	movff	tblptrh,fsr0h
 22050  004CAE  50EF               	movf	indf0,w,c
 22051  004CB0                     u6950:
 22052  004CB0  6EDF               	movwf	indf2,c
 22053  004CB2  0100               	movlb	0	; () banked
 22054  004CB4  4B66               	infsnz	_inPipes& (0+255),f,b
 22055  004CB6  2B67               	incf	(_inPipes+1)& (0+255),f,b
 22056                           
 22057                           ; BSR set to: 0
 22058  004CB8  4B96               	infsnz	_pDst& (0+255),f,b
 22059  004CBA  2B97               	incf	(_pDst+1)& (0+255),f,b
 22060                           
 22061                           ; BSR set to: 0
 22062                           ;usb_device.c: 1816: byteToSend--;
 22063  004CBC  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22064  004CBE                     l237:
 22065                           
 22066                           ; BSR set to: 0
 22067                           
 22068                           ; BSR set to: 0
 22069  004CBE  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22070  004CC0  B4D8               	btfsc	status,2,c
 22071  004CC2  0012               	return	
 22072  004CC4  D7E1               	goto	l238
 22073  004CC6                     
 22074                           ; BSR set to: 0
 22075                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 22076                           
 22077                           ; BSR set to: 0
 22078  004CC6  C066  FFF6         	movff	_inPipes,tblptrl
 22079  004CCA  C067  FFF7         	movff	_inPipes+1,tblptrh
 22080  004CCE  6AF8               	clrf	tblptru,c
 22081  004CD0  C096  FFD9         	movff	_pDst,fsr2l
 22082  004CD4  C097  FFDA         	movff	_pDst+1,fsr2h
 22083  004CD8  0E0E               	movlw	(high __ramtop+-1)
 22084  004CDA  64F7               	cpfsgt	tblptrh,c
 22085  004CDC  D003               	bra	u6977
 22086  004CDE  0008               	tblrd		*
 22087  004CE0  50F5               	movf	tablat,w,c
 22088  004CE2  D005               	bra	u6970
 22089  004CE4                     u6977:
 22090  004CE4  CFF6 FFE9          	movff	tblptrl,fsr0l
 22091  004CE8  CFF7 FFEA          	movff	tblptrh,fsr0h
 22092  004CEC  50EF               	movf	indf0,w,c
 22093  004CEE                     u6970:
 22094  004CEE  6EDF               	movwf	indf2,c
 22095  004CF0  0100               	movlb	0	; () banked
 22096  004CF2  4B66               	infsnz	_inPipes& (0+255),f,b
 22097  004CF4  2B67               	incf	(_inPipes+1)& (0+255),f,b
 22098                           
 22099                           ; BSR set to: 0
 22100  004CF6  4B96               	infsnz	_pDst& (0+255),f,b
 22101  004CF8  2B97               	incf	(_pDst+1)& (0+255),f,b
 22102                           
 22103                           ; BSR set to: 0
 22104                           ;usb_device.c: 1824: byteToSend--;
 22105  004CFA  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22106  004CFC                     l241:
 22107                           
 22108                           ; BSR set to: 0
 22109                           
 22110                           ; BSR set to: 0
 22111  004CFC  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22112  004CFE  B4D8               	btfsc	status,2,c
 22113  004D00  0012               	return	
 22114  004D02  D7E1               	goto	l242
 22115  004D04                     __end_of_USBCtrlTrfTxService:
 22116                           	opt stack 0
 22117                           tosu	equ	0xFFF
 22118                           tosh	equ	0xFFE
 22119                           tosl	equ	0xFFD
 22120                           pclath	equ	0xFFA
 22121                           tblptru	equ	0xFF8
 22122                           tblptrh	equ	0xFF7
 22123                           tblptrl	equ	0xFF6
 22124                           tablat	equ	0xFF5
 22125                           prodh	equ	0xFF4
 22126                           prodl	equ	0xFF3
 22127                           intcon	equ	0xFF2
 22128                           intcon2	equ	0xFF1
 22129                           intcon3	equ	0xFF0
 22130                           indf0	equ	0xFEF
 22131                           postinc0	equ	0xFEE
 22132                           fsr0h	equ	0xFEA
 22133                           fsr0l	equ	0xFE9
 22134                           wreg	equ	0xFE8
 22135                           indf1	equ	0xFE7
 22136                           postdec1	equ	0xFE5
 22137                           plusw1	equ	0xFE3
 22138                           fsr1h	equ	0xFE2
 22139                           fsr1l	equ	0xFE1
 22140                           indf2	equ	0xFDF
 22141                           postinc2	equ	0xFDE
 22142                           postdec2	equ	0xFDD
 22143                           plusw2	equ	0xFDB
 22144                           fsr2h	equ	0xFDA
 22145                           fsr2l	equ	0xFD9
 22146                           status	equ	0xFD8
 22147                           
 22148 ;; *************** function _APP_DeviceMSDTasks *****************
 22149 ;; Defined at:
 22150 ;;		line 110 in file "app_device_msd.c"
 22151 ;; Parameters:    Size  Location     Type
 22152 ;;		None
 22153 ;; Auto vars:     Size  Location     Type
 22154 ;;		None
 22155 ;; Return value:  Size  Location     Type
 22156 ;;                  1    wreg      void 
 22157 ;; Registers used:
 22158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22159 ;; Tracked objects:
 22160 ;;		On entry : 0/0
 22161 ;;		On exit  : 0/0
 22162 ;;		Unchanged: 0/0
 22163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22168 ;;Total ram usage:        0 bytes
 22169 ;; Hardware stack levels used:    1
 22170 ;; Hardware stack levels required when called:   13
 22171 ;; This function calls:
 22172 ;;		_MSDTasks
 22173 ;; This function is called by:
 22174 ;;		_main
 22175 ;; This function uses a non-reentrant model
 22176 ;;
 22177                           
 22178                           	psect	text103
 22179  007A3A                     __ptext103:
 22180                           	opt stack 0
 22181  007A3A                     _APP_DeviceMSDTasks:
 22182                           	opt stack 17
 22183                           
 22184                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 22185                           
 22186                           ; BSR set to: 0
 22187                           ;incstack = 0
 22188  007A3A  0E20               	movlw	32
 22189  007A3C  605F               	cpfslt	_USBDeviceState,c
 22190  007A3E  D001               	goto	l972
 22191  007A40  0012               	return	
 22192  007A42                     l972:
 22193                           
 22194                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 22195  007A42  B265               	btfsc	3941,1,c	;volatile
 22196  007A44  0012               	return	
 22197                           
 22198                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 22199                           
 22200                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 22201  007A46  EC4C  F00E         	call	_MSDTasks	;wreg free
 22202  007A4A  0012               	return		;funcret
 22203  007A4C                     __end_of_APP_DeviceMSDTasks:
 22204                           	opt stack 0
 22205                           tosu	equ	0xFFF
 22206                           tosh	equ	0xFFE
 22207                           tosl	equ	0xFFD
 22208                           pclath	equ	0xFFA
 22209                           tblptru	equ	0xFF8
 22210                           tblptrh	equ	0xFF7
 22211                           tblptrl	equ	0xFF6
 22212                           tablat	equ	0xFF5
 22213                           prodh	equ	0xFF4
 22214                           prodl	equ	0xFF3
 22215                           intcon	equ	0xFF2
 22216                           intcon2	equ	0xFF1
 22217                           intcon3	equ	0xFF0
 22218                           indf0	equ	0xFEF
 22219                           postinc0	equ	0xFEE
 22220                           fsr0h	equ	0xFEA
 22221                           fsr0l	equ	0xFE9
 22222                           wreg	equ	0xFE8
 22223                           indf1	equ	0xFE7
 22224                           postdec1	equ	0xFE5
 22225                           plusw1	equ	0xFE3
 22226                           fsr1h	equ	0xFE2
 22227                           fsr1l	equ	0xFE1
 22228                           indf2	equ	0xFDF
 22229                           postinc2	equ	0xFDE
 22230                           postdec2	equ	0xFDD
 22231                           plusw2	equ	0xFDB
 22232                           fsr2h	equ	0xFDA
 22233                           fsr2l	equ	0xFD9
 22234                           status	equ	0xFD8
 22235                           
 22236 ;; *************** function _MSDTasks *****************
 22237 ;; Defined at:
 22238 ;;		line 335 in file "usb_device_msd.c"
 22239 ;; Parameters:    Size  Location     Type
 22240 ;;		None
 22241 ;; Auto vars:     Size  Location     Type
 22242 ;;  i               1   82[COMRAM] unsigned char 
 22243 ;; Return value:  Size  Location     Type
 22244 ;;                  1    wreg      unsigned char 
 22245 ;; Registers used:
 22246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22247 ;; Tracked objects:
 22248 ;;		On entry : 0/0
 22249 ;;		On exit  : 0/0
 22250 ;;		Unchanged: 0/0
 22251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22253 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22254 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22255 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22256 ;;Total ram usage:        6 bytes
 22257 ;; Hardware stack levels used:    1
 22258 ;; Hardware stack levels required when called:   12
 22259 ;; This function calls:
 22260 ;;		_MSDProcessCommand
 22261 ;;		_USBStallEndpoint
 22262 ;;		_USBTransferOnePacket
 22263 ;; This function is called by:
 22264 ;;		_APP_DeviceMSDTasks
 22265 ;; This function uses a non-reentrant model
 22266 ;;
 22267                           
 22268                           	psect	text104
 22269  001C98                     __ptext104:
 22270                           	opt stack 0
 22271  001C98                     _MSDTasks:
 22272                           	opt stack 17
 22273                           
 22274                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 22275                           
 22276                           ;incstack = 0
 22277  001C98  0E20               	movlw	32
 22278  001C9A  185F               	xorwf	_USBDeviceState,w,c
 22279  001C9C  A4D8               	btfss	status,2,c
 22280  001C9E  0012               	return	
 22281  001CA0  D118               	goto	l554
 22282  001CA2                     
 22283                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 22284  001CA2  0100               	movlb	0	; () banked
 22285  001CA4  5192               	movf	_USBMSDOutHandle& (0+255),w,b
 22286  001CA6  1193               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22287  001CA8  B4D8               	btfsc	status,2,c
 22288  001CAA  D006               	goto	u10080
 22289                           
 22290                           ; BSR set to: 0
 22291  001CAC  C092  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22292  001CB0  C093  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22293  001CB4  BEDF               	btfsc	indf2,7,c
 22294  001CB6  0012               	return	
 22295  001CB8                     u10080:
 22296                           
 22297                           ; BSR set to: 0
 22298                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 22299                           
 22300                           ; BSR set to: 0
 22301  001CB8  0E00               	movlw	0
 22302  001CBA  6E53               	movwf	MSDTasks@i,c
 22303  001CBC                     l12931:
 22304                           
 22305                           ; BSR set to: 0
 22306  001CBC  0E1E               	movlw	30
 22307  001CBE  6453               	cpfsgt	MSDTasks@i,c
 22308  001CC0  D001               	goto	l559
 22309  001CC2  D014               	goto	u10100
 22310  001CC4                     l559:
 22311                           
 22312                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 22313                           
 22314                           ; BSR set to: 0
 22315  001CC4  5053               	movf	MSDTasks@i,w,c
 22316  001CC6  0D01               	mullw	1
 22317  001CC8  0E40               	movlw	64
 22318  001CCA  24F3               	addwf	prodl,w,c
 22319  001CCC  6ED9               	movwf	fsr2l,c
 22320  001CCE  0E0D               	movlw	13
 22321  001CD0  20F4               	addwfc	prodh,w,c
 22322  001CD2  6EDA               	movwf	fsr2h,c
 22323  001CD4  5053               	movf	MSDTasks@i,w,c
 22324  001CD6  0D01               	mullw	1
 22325  001CD8  0E00               	movlw	low _gblCBW
 22326  001CDA  24F3               	addwf	prodl,w,c
 22327  001CDC  6EE1               	movwf	fsr1l,c
 22328  001CDE  0E01               	movlw	high _gblCBW
 22329  001CE0  20F4               	addwfc	prodh,w,c
 22330  001CE2  6EE2               	movwf	fsr1h,c
 22331  001CE4  CFDF FFE7          	movff	indf2,indf1
 22332  001CE8  2A53               	incf	MSDTasks@i,f,c
 22333  001CEA  D7E8               	goto	l12931
 22334  001CEC                     u10100:
 22335                           
 22336                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 22337  001CEC  0100               	movlb	0	; () banked
 22338  001CEE  EE20 F001          	lfsr	2,1
 22339  001CF2  5192               	movf	_USBMSDOutHandle& (0+255),w,b
 22340  001CF4  26D9               	addwf	fsr2l,f,c
 22341  001CF6  5193               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 22342  001CF8  22DA               	addwfc	fsr2h,f,c
 22343  001CFA  0E1F               	movlw	31
 22344  001CFC  18DE               	xorwf	postinc2,w,c
 22345  001CFE  A4D8               	btfss	status,2,c
 22346  001D00  D072               	goto	l561
 22347                           
 22348                           ; BSR set to: 0
 22349  001D02  0E55               	movlw	85
 22350  001D04  0101               	movlb	1	; () banked
 22351  001D06  1900               	xorwf	_gblCBW& (0+255),w,b
 22352  001D08  E16E               	bnz	l561
 22353  001D0A  0E53               	movlw	83
 22354  001D0C  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 22355  001D0E  E16B               	bnz	l561
 22356  001D10  0E42               	movlw	66
 22357  001D12  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 22358  001D14  E168               	bnz	l561
 22359  001D16  0E43               	movlw	67
 22360  001D18  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 22361  001D1A  A4D8               	btfss	status,2,c
 22362  001D1C  D064               	goto	l561
 22363                           
 22364                           ; BSR set to: 1
 22365                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 22366  001D1E  0E01               	movlw	1
 22367  001D20  0100               	movlb	0	; () banked
 22368  001D22  6FA2               	movwf	_MSDCBWValid& (0+255),b
 22369                           
 22370                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 22371  001D24  0101               	movlb	1	; () banked
 22372  001D26  510D               	movf	(_gblCBW+13)& (0+255),w,b
 22373  001D28  A4D8               	btfss	status,2,c
 22374  001D2A  D052               	goto	l562
 22375                           
 22376                           ; BSR set to: 1
 22377  001D2C  0E11               	movlw	17
 22378  001D2E  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 22379  001D30  D04F               	goto	l562
 22380                           
 22381                           ; BSR set to: 1
 22382  001D32  510E               	movf	(_gblCBW+14)& (0+255),w,b
 22383  001D34  B4D8               	btfsc	status,2,c
 22384  001D36  D04C               	goto	l562
 22385                           
 22386                           ; BSR set to: 1
 22387  001D38  C10C  F04E         	movff	_gblCBW+12,??_MSDTasks
 22388  001D3C  0E3F               	movlw	63
 22389  001D3E  164E               	andwf	??_MSDTasks,f,c
 22390  001D40  A4D8               	btfss	status,2,c
 22391  001D42  D046               	goto	l562
 22392                           
 22393                           ; BSR set to: 1
 22394                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 22395  001D44  0E55               	movlw	85
 22396  001D46  010D               	movlb	13	; () banked
 22397  001D48  6F80               	movwf	128,b	;volatile
 22398  001D4A  0E53               	movlw	83
 22399  001D4C  6F81               	movwf	129,b	;volatile
 22400  001D4E  0E42               	movlw	66
 22401  001D50  6F82               	movwf	130,b	;volatile
 22402  001D52  0E53               	movlw	83
 22403  001D54  6F83               	movwf	131,b	;volatile
 22404                           
 22405                           ; BSR set to: 13
 22406                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 22407  001D56  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 22408  001D5A  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 22409  001D5E  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 22410  001D62  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 22411                           
 22412                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 22413  001D66  0E00               	movlw	0
 22414  001D68  6F88               	movwf	136,b	;volatile
 22415  001D6A  0E00               	movlw	0
 22416  001D6C  6F89               	movwf	137,b	;volatile
 22417  001D6E  0E00               	movlw	0
 22418  001D70  6F8A               	movwf	138,b	;volatile
 22419  001D72  0E00               	movlw	0
 22420  001D74  6F8B               	movwf	139,b	;volatile
 22421                           
 22422                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 22423  001D76  0E00               	movlw	0
 22424  001D78  6F8C               	movwf	140,b	;volatile
 22425                           
 22426                           ; BSR set to: 13
 22427                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 22428  001D7A  0100               	movlb	0	; () banked
 22429  001D7C  69A9               	setf	_MSDCommandState& (0+255),b
 22430                           
 22431                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 22432  001D7E  0E00               	movlw	0
 22433  001D80  6FA8               	movwf	_MSDReadState& (0+255),b
 22434                           
 22435                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 22436  001D82  0E00               	movlw	0
 22437  001D84  6FA7               	movwf	_MSDWriteState& (0+255),b
 22438                           
 22439                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 22440  001D86  0E00               	movlw	0
 22441  001D88  6FA6               	movwf	_MSDRetryAttempt& (0+255),b
 22442                           
 22443                           ; BSR set to: 0
 22444                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 22445  001D8A  0E03               	movlw	3
 22446  001D8C  0101               	movlb	1	; () banked
 22447  001D8E  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 22448  001D90  B4D8               	btfsc	status,2,c
 22449  001D92  D008               	goto	l563
 22450                           
 22451                           ; BSR set to: 1
 22452                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 22453  001D94  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 22454  001D96  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 22455  001D98  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 22456  001D9A  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 22457                           
 22458                           ; BSR set to: 1
 22459                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 22460  001D9C  0E00               	movlw	0
 22461  001D9E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22462                           
 22463                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 22464  001DA0  0E00               	movlw	0
 22465  001DA2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22466  001DA4                     l563:
 22467                           
 22468                           ; BSR set to: 1
 22469                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 22470                           
 22471                           ; BSR set to: 1
 22472  001DA4  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 22473  001DA6  D002               	goto	l564
 22474                           
 22475                           ; BSR set to: 1
 22476                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 22477  001DA8  0E01               	movlw	1
 22478  001DAA  D001               	goto	L17
 22479  001DAC                     l564:
 22480                           
 22481                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 22482                           
 22483                           ; BSR set to: 0
 22484  001DAC  0E02               	movlw	2
 22485  001DAE                     L17:
 22486  001DAE  0100               	movlb	0	; () banked
 22487  001DB0  6FAA               	movwf	_MSD_State& (0+255),b
 22488                           
 22489                           ; BSR set to: 0
 22490                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 22491                           
 22492                           ; BSR set to: 0
 22493  001DB2  0101               	movlb	1	; () banked
 22494  001DB4  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22495  001DB6  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 22496  001DB8  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 22497  001DBA  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 22498  001DBC  B4D8               	btfsc	status,2,c
 22499  001DBE  D002               	goto	l566
 22500                           
 22501                           ; BSR set to: 1
 22502                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 22503  001DC0  0E00               	movlw	0
 22504  001DC2  D001               	goto	L18
 22505  001DC4                     l566:
 22506                           
 22507                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 22508                           
 22509                           ; BSR set to: 0
 22510  001DC4  0E01               	movlw	1
 22511  001DC6                     L18:
 22512  001DC6  0100               	movlb	0	; () banked
 22513  001DC8  6FA3               	movwf	_MSDHostNoData& (0+255),b
 22514                           
 22515                           ; BSR set to: 0
 22516                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 22517                           
 22518                           ; BSR set to: 0
 22519  001DCA  C10F  F0A9         	movff	_gblCBW+15,_MSDCommandState
 22520                           
 22521                           ;usb_device_msd.c: 454: }
 22522  001DCE  0012               	return	
 22523  001DD0                     l562:
 22524                           
 22525                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 22526                           
 22527                           ; BSR set to: 0
 22528  001DD0  0E01               	movlw	1
 22529  001DD2  6E01               	movwf	USBStallEndpoint@dir,c
 22530  001DD4  0E02               	movlw	2
 22531  001DD6  ECD9  F01E         	call	_USBStallEndpoint
 22532                           
 22533                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 22534  001DDA  0E00               	movlw	0
 22535  001DDC  6E01               	movwf	USBStallEndpoint@dir,c
 22536  001DDE  0E02               	movlw	2
 22537  001DE0  ECD9  F01E         	call	_USBStallEndpoint
 22538                           
 22539                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 22540  001DE4  0012               	return	
 22541  001DE6                     l561:
 22542                           
 22543                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 22544  001DE6  0E01               	movlw	1
 22545  001DE8  6E01               	movwf	USBStallEndpoint@dir,c
 22546  001DEA  0E02               	movlw	2
 22547  001DEC  ECD9  F01E         	call	_USBStallEndpoint
 22548                           
 22549                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 22550  001DF0  0E00               	movlw	0
 22551  001DF2  6E01               	movwf	USBStallEndpoint@dir,c
 22552  001DF4  0E02               	movlw	2
 22553  001DF6  ECD9  F01E         	call	_USBStallEndpoint
 22554                           
 22555                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 22556  001DFA  0E00               	movlw	0
 22557  001DFC  0100               	movlb	0	; () banked
 22558  001DFE  6FA2               	movwf	_MSDCBWValid& (0+255),b
 22559                           
 22560                           ; BSR set to: 0
 22561                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 22562                           
 22563                           ; BSR set to: 0
 22564  001E00  0012               	return	
 22565  001E02                     
 22566                           ; BSR set to: 0
 22567                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 22568                           
 22569                           ; BSR set to: 0
 22570  001E02  EC4E  F01E         	call	_MSDProcessCommand	;wreg free
 22571  001E06  0AFF               	xorlw	255
 22572  001E08  A4D8               	btfss	status,2,c
 22573  001E0A  0012               	return	
 22574                           
 22575                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 22576  001E0C  0E03               	movlw	3
 22577  001E0E  0100               	movlb	0	; () banked
 22578  001E10  6FAA               	movwf	_MSD_State& (0+255),b
 22579                           
 22580                           ; BSR set to: 0
 22581                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 22582  001E12  0012               	return	
 22583  001E14                     
 22584                           ; BSR set to: 0
 22585                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 22586                           
 22587                           ; BSR set to: 0
 22588  001E14  EC4E  F01E         	call	_MSDProcessCommand	;wreg free
 22589  001E18  0AFF               	xorlw	255
 22590  001E1A  A4D8               	btfss	status,2,c
 22591  001E1C  0012               	return	
 22592                           
 22593                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 22594  001E1E  010D               	movlb	13	; () banked
 22595  001E20  518C               	movf	140,w,b	;volatile
 22596  001E22  A4D8               	btfss	status,2,c
 22597  001E24  D008               	goto	l575
 22598                           
 22599                           ; BSR set to: 13
 22600  001E26  5188               	movf	136,w,b	;volatile
 22601  001E28  1189               	iorwf	137,w,b	;volatile
 22602  001E2A  118A               	iorwf	138,w,b	;volatile
 22603  001E2C  118B               	iorwf	139,w,b	;volatile
 22604  001E2E  B4D8               	btfsc	status,2,c
 22605  001E30  D002               	goto	l575
 22606                           
 22607                           ; BSR set to: 13
 22608                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 22609  001E32  0E02               	movlw	2
 22610  001E34  6F8C               	movwf	140,b	;volatile
 22611  001E36                     l575:
 22612                           
 22613                           ; BSR set to: 13
 22614                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 22615  001E36  0E03               	movlw	3
 22616  001E38  0100               	movlb	0	; () banked
 22617  001E3A  6FAA               	movwf	_MSD_State& (0+255),b
 22618                           
 22619                           ; BSR set to: 0
 22620                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 22621  001E3C  0012               	return	
 22622  001E3E                     
 22623                           ; BSR set to: 0
 22624                           
 22625                           ; BSR set to: 0
 22626  001E3E  C070  F04F         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 22627  001E42  C071  F050         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 22628                           
 22629                           ; BSR set to: 0
 22630                           
 22631                           ; BSR set to: 0
 22632                           
 22633                           ; BSR set to: 0
 22634  001E46  504F               	movf	_MSDTasks$2372,w,c
 22635  001E48  1050               	iorwf	_MSDTasks$2372+1,w,c
 22636  001E4A  B4D8               	btfsc	status,2,c
 22637  001E4C  D00A               	goto	l577
 22638                           
 22639                           ; BSR set to: 0
 22640  001E4E  C070  F051         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 22641  001E52  C071  F052         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 22642                           
 22643                           ; BSR set to: 0
 22644                           
 22645                           ; BSR set to: 0
 22646                           
 22647                           ; BSR set to: 0
 22648                           
 22649                           ; BSR set to: 0
 22650  001E56  C051  FFD9         	movff	_MSDTasks$2373,fsr2l
 22651  001E5A  C052  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 22652  001E5E  BEDF               	btfsc	indf2,7,c
 22653  001E60  0012               	return	
 22654  001E62                     l577:
 22655                           
 22656                           ; BSR set to: 0
 22657                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 22658                           
 22659                           ; BSR set to: 0
 22660  001E62  0E01               	movlw	1
 22661  001E64  6E01               	movwf	USBTransferOnePacket@dir,c
 22662  001E66  0E80               	movlw	128
 22663  001E68  6E02               	movwf	USBTransferOnePacket@data,c
 22664  001E6A  0E0D               	movlw	13
 22665  001E6C  6E03               	movwf	USBTransferOnePacket@data+1,c
 22666  001E6E  0E0D               	movlw	13
 22667  001E70  6E04               	movwf	USBTransferOnePacket@len,c
 22668  001E72  0E02               	movlw	2
 22669  001E74  EC63  F020         	call	_USBTransferOnePacket
 22670  001E78  C001  F090         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 22671  001E7C  C002  F091         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 22672                           
 22673                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 22674  001E80  0100               	movlb	0	; () banked
 22675  001E82  5192               	movf	_USBMSDOutHandle& (0+255),w,b
 22676  001E84  1193               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22677  001E86  B4D8               	btfsc	status,2,c
 22678  001E88  D006               	goto	u10270
 22679                           
 22680                           ; BSR set to: 0
 22681  001E8A  C092  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22682  001E8E  C093  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22683  001E92  BEDF               	btfsc	indf2,7,c
 22684  001E94  D00F               	goto	l586
 22685  001E96                     u10270:
 22686                           
 22687                           ; BSR set to: 0
 22688                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 22689                           
 22690                           ; BSR set to: 0
 22691  001E96  0E00               	movlw	0
 22692  001E98  6E01               	movwf	USBTransferOnePacket@dir,c
 22693  001E9A  0E40               	movlw	64
 22694  001E9C  6E02               	movwf	USBTransferOnePacket@data,c
 22695  001E9E  0E0D               	movlw	13
 22696  001EA0  6E03               	movwf	USBTransferOnePacket@data+1,c
 22697  001EA2  0E40               	movlw	64
 22698  001EA4  6E04               	movwf	USBTransferOnePacket@len,c
 22699  001EA6  0E02               	movlw	2
 22700  001EA8  EC63  F020         	call	_USBTransferOnePacket
 22701  001EAC  C001  F092         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 22702  001EB0  C002  F093         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 22703  001EB4                     l586:
 22704                           
 22705                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 22706  001EB4  0E00               	movlw	0
 22707  001EB6  0100               	movlb	0	; () banked
 22708  001EB8  6FAA               	movwf	_MSD_State& (0+255),b
 22709                           
 22710                           ;usb_device_msd.c: 513: break;
 22711  001EBA  0012               	return	
 22712  001EBC                     
 22713                           ; BSR set to: 0
 22714                           ;usb_device_msd.c: 518: MSD_State=0x00;
 22715                           
 22716                           ; BSR set to: 0
 22717  001EBC  0E00               	movlw	0
 22718  001EBE  6FAA               	movwf	_MSD_State& (0+255),b
 22719                           
 22720                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 22721  001EC0  0E02               	movlw	2
 22722  001EC2  010D               	movlb	13	; () banked
 22723  001EC4  6F8C               	movwf	140,b	;volatile
 22724                           
 22725                           ; BSR set to: 13
 22726                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 22727  001EC6  0E00               	movlw	0
 22728  001EC8  6E01               	movwf	USBStallEndpoint@dir,c
 22729  001ECA  0E02               	movlw	2
 22730  001ECC  ECD9  F01E         	call	_USBStallEndpoint
 22731                           
 22732                           ;usb_device_msd.c: 521: }
 22733  001ED0  0012               	return	
 22734  001ED2                     l554:
 22735  001ED2  0100               	movlb	0	; () banked
 22736  001ED4  51AA               	movf	_MSD_State& (0+255),w,b
 22737                           
 22738                           ; Switch size 1, requested type "space"
 22739                           ; Number of cases is 4, Range of values is 0 to 3
 22740                           ; switch strategies available:
 22741                           ; Name         Instructions Cycles
 22742                           ; simple_byte           13     7 (average)
 22743                           ;	Chosen strategy is simple_byte
 22744  001ED6  0A00               	xorlw	0	; case 0
 22745  001ED8  B4D8               	btfsc	status,2,c
 22746  001EDA  D6E3               	goto	l555
 22747  001EDC  0A01               	xorlw	1	; case 1
 22748  001EDE  B4D8               	btfsc	status,2,c
 22749  001EE0  D790               	goto	l571
 22750  001EE2  0A03               	xorlw	3	; case 2
 22751  001EE4  B4D8               	btfsc	status,2,c
 22752  001EE6  D796               	goto	l573
 22753  001EE8  0A01               	xorlw	1	; case 3
 22754  001EEA  B4D8               	btfsc	status,2,c
 22755  001EEC  D7A8               	goto	l576
 22756  001EEE  D7E6               	goto	l589
 22757  001EF0                     __end_of_MSDTasks:
 22758                           	opt stack 0
 22759                           tosu	equ	0xFFF
 22760                           tosh	equ	0xFFE
 22761                           tosl	equ	0xFFD
 22762                           pclath	equ	0xFFA
 22763                           tblptru	equ	0xFF8
 22764                           tblptrh	equ	0xFF7
 22765                           tblptrl	equ	0xFF6
 22766                           tablat	equ	0xFF5
 22767                           prodh	equ	0xFF4
 22768                           prodl	equ	0xFF3
 22769                           intcon	equ	0xFF2
 22770                           intcon2	equ	0xFF1
 22771                           intcon3	equ	0xFF0
 22772                           indf0	equ	0xFEF
 22773                           postinc0	equ	0xFEE
 22774                           fsr0h	equ	0xFEA
 22775                           fsr0l	equ	0xFE9
 22776                           wreg	equ	0xFE8
 22777                           indf1	equ	0xFE7
 22778                           postdec1	equ	0xFE5
 22779                           plusw1	equ	0xFE3
 22780                           fsr1h	equ	0xFE2
 22781                           fsr1l	equ	0xFE1
 22782                           indf2	equ	0xFDF
 22783                           postinc2	equ	0xFDE
 22784                           postdec2	equ	0xFDD
 22785                           plusw2	equ	0xFDB
 22786                           fsr2h	equ	0xFDA
 22787                           fsr2l	equ	0xFD9
 22788                           status	equ	0xFD8
 22789                           
 22790 ;; *************** function _MSDProcessCommand *****************
 22791 ;; Defined at:
 22792 ;;		line 553 in file "usb_device_msd.c"
 22793 ;; Parameters:    Size  Location     Type
 22794 ;;		None
 22795 ;; Auto vars:     Size  Location     Type
 22796 ;;		None
 22797 ;; Return value:  Size  Location     Type
 22798 ;;                  1    wreg      unsigned char 
 22799 ;; Registers used:
 22800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22801 ;; Tracked objects:
 22802 ;;		On entry : 0/0
 22803 ;;		On exit  : 0/0
 22804 ;;		Unchanged: 0/0
 22805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22808 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22809 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22810 ;;Total ram usage:        5 bytes
 22811 ;; Hardware stack levels used:    1
 22812 ;; Hardware stack levels required when called:   11
 22813 ;; This function calls:
 22814 ;;		_ExternalFlash_MediaDetect
 22815 ;;		_ExternalFlash_MediaInitialize
 22816 ;;		_MSDProcessCommandMediaAbsent
 22817 ;;		_MSDProcessCommandMediaPresent
 22818 ;; This function is called by:
 22819 ;;		_MSDTasks
 22820 ;; This function uses a non-reentrant model
 22821 ;;
 22822                           
 22823                           	psect	text105
 22824  003C9C                     __ptext105:
 22825                           	opt stack 0
 22826  003C9C                     _MSDProcessCommand:
 22827                           	opt stack 17
 22828                           
 22829                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 22830                           
 22831                           ;incstack = 0
 22832  003C9C  C1E6  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 22833  003CA0  C1E7  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 22834  003CA4  D801               	call	u9178
 22835  003CA6  D00A               	goto	u9179
 22836  003CA8                     u9178:
 22837  003CA8  0005               	push	
 22838  003CAA  6EFA               	movwf	pclath,c
 22839  003CAC  0101               	movlb	1	; () banked
 22840  003CAE  51DE               	movf	(_LUN+6)& (0+255),w,b
 22841  003CB0  6EFD               	movwf	tosl,c
 22842  003CB2  51DF               	movf	(_LUN+7)& (0+255),w,b
 22843  003CB4  6EFE               	movwf	tosh,c
 22844  003CB6  6AFF               	clrf	tosu,c
 22845  003CB8  50FA               	movf	pclath,w,c
 22846  003CBA  0012               	return		;indir
 22847  003CBC                     u9179:
 22848  003CBC  0900               	iorlw	0
 22849  003CBE  B4D8               	btfsc	status,2,c
 22850  003CC0  D00C               	goto	u9190
 22851  003CC2  0101               	movlb	1	; () banked
 22852  003CC4  510D               	movf	(_gblCBW+13)& (0+255),w,b
 22853  003CC6  0D01               	mullw	1
 22854  003CC8  0EA4               	movlw	low _SoftDetach
 22855  003CCA  24F3               	addwf	prodl,w,c
 22856  003CCC  6ED9               	movwf	fsr2l,c
 22857  003CCE  0E00               	movlw	high _SoftDetach
 22858  003CD0  20F4               	addwfc	prodh,w,c
 22859  003CD2  6EDA               	movwf	fsr2h,c
 22860  003CD4  04DE               	decf	postinc2,w,c
 22861  003CD6  A4D8               	btfss	status,2,c
 22862  003CD8  D019               	goto	l592
 22863  003CDA                     u9190:
 22864                           
 22865                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 22866                           
 22867                           ; BSR set to: 1
 22868  003CDA  C10D  F049         	movff	_gblCBW+13,??_MSDProcessCommand
 22869  003CDE  0E01               	movlw	1
 22870  003CE0  6E4A               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 22871  003CE2  0E00               	movlw	0
 22872  003CE4  6E4B               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 22873  003CE6  2A49               	incf	??_MSDProcessCommand,f,c
 22874  003CE8  D003               	goto	u9204
 22875  003CEA                     u9205:
 22876  003CEA  90D8               	bcf	status,0,c
 22877  003CEC  364A               	rlcf	??_MSDProcessCommand+1,f,c
 22878  003CEE  364B               	rlcf	??_MSDProcessCommand+2,f,c
 22879  003CF0                     u9204:
 22880  003CF0  2E49               	decfsz	??_MSDProcessCommand,f,c
 22881  003CF2  D7FB               	goto	u9205
 22882  003CF4  1C4A               	comf	??_MSDProcessCommand+1,w,c
 22883  003CF6  6E4C               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 22884  003CF8  1C4B               	comf	??_MSDProcessCommand+2,w,c
 22885  003CFA  6E4D               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 22886  003CFC  504C               	movf	??_MSDProcessCommand+3,w,c
 22887  003CFE  0100               	movlb	0	; () banked
 22888  003D00  178E               	andwf	_gblMediaPresent& (0+255),f,b
 22889  003D02  504D               	movf	??_MSDProcessCommand+4,w,c
 22890  003D04  178F               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 22891                           
 22892                           ; BSR set to: 0
 22893                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 22894  003D06  ECA5  F034         	call	_MSDProcessCommandMediaAbsent	;wreg free
 22895                           
 22896                           ;usb_device_msd.c: 563: }
 22897  003D0A  D050               	goto	l599
 22898  003D0C                     l592:
 22899                           
 22900                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 22901  003D0C  C10D  F049         	movff	_gblCBW+13,??_MSDProcessCommand
 22902  003D10  0E01               	movlw	1
 22903  003D12  6E4A               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 22904  003D14  0E00               	movlw	0
 22905  003D16  6E4B               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 22906  003D18  2A49               	incf	??_MSDProcessCommand,f,c
 22907  003D1A  D003               	goto	u9214
 22908  003D1C                     u9215:
 22909  003D1C  90D8               	bcf	status,0,c
 22910  003D1E  364A               	rlcf	??_MSDProcessCommand+1,f,c
 22911  003D20  364B               	rlcf	??_MSDProcessCommand+2,f,c
 22912  003D22                     u9214:
 22913  003D22  2E49               	decfsz	??_MSDProcessCommand,f,c
 22914  003D24  D7FB               	goto	u9215
 22915  003D26  0100               	movlb	0	; () banked
 22916  003D28  518E               	movf	_gblMediaPresent& (0+255),w,b
 22917  003D2A  164A               	andwf	??_MSDProcessCommand+1,f,c
 22918  003D2C  518F               	movf	(_gblMediaPresent+1)& (0+255),w,b
 22919  003D2E  164B               	andwf	??_MSDProcessCommand+2,f,c
 22920  003D30  504A               	movf	??_MSDProcessCommand+1,w,c
 22921  003D32  104B               	iorwf	??_MSDProcessCommand+2,w,c
 22922  003D34  A4D8               	btfss	status,2,c
 22923  003D36  D038               	goto	l596
 22924                           
 22925                           ; BSR set to: 0
 22926                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 22927  003D38  C1E6  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 22928  003D3C  C1E7  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 22929  003D40  D801               	call	u9238
 22930  003D42  D00A               	goto	u9239
 22931  003D44                     u9238:
 22932  003D44  0005               	push	
 22933  003D46  6EFA               	movwf	pclath,c
 22934  003D48  0101               	movlb	1	; () banked
 22935  003D4A  51D8               	movf	_LUN& (0+255),w,b
 22936  003D4C  6EFD               	movwf	tosl,c
 22937  003D4E  51D9               	movf	(_LUN+1)& (0+255),w,b
 22938  003D50  6EFE               	movwf	tosh,c
 22939  003D52  6AFF               	clrf	tosu,c
 22940  003D54  50FA               	movf	pclath,w,c
 22941  003D56  0012               	return		;indir
 22942  003D58                     u9239:
 22943  003D58  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 22944  003D5A  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 22945  003D5C  B4D8               	btfsc	status,2,c
 22946  003D5E  D021               	goto	l597
 22947                           
 22948                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 22949  003D60  C10D  F049         	movff	_gblCBW+13,??_MSDProcessCommand
 22950  003D64  0E01               	movlw	1
 22951  003D66  6E4A               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 22952  003D68  0E00               	movlw	0
 22953  003D6A  6E4B               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 22954  003D6C  2A49               	incf	??_MSDProcessCommand,f,c
 22955  003D6E  D003               	goto	u9254
 22956  003D70                     u9255:
 22957  003D70  90D8               	bcf	status,0,c
 22958  003D72  364A               	rlcf	??_MSDProcessCommand+1,f,c
 22959  003D74  364B               	rlcf	??_MSDProcessCommand+2,f,c
 22960  003D76                     u9254:
 22961  003D76  2E49               	decfsz	??_MSDProcessCommand,f,c
 22962  003D78  D7FB               	goto	u9255
 22963  003D7A  504A               	movf	??_MSDProcessCommand+1,w,c
 22964  003D7C  0100               	movlb	0	; () banked
 22965  003D7E  138E               	iorwf	_gblMediaPresent& (0+255),f,b
 22966  003D80  504B               	movf	??_MSDProcessCommand+2,w,c
 22967  003D82  138F               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 22968                           
 22969                           ; BSR set to: 0
 22970                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 22971  003D84  0101               	movlb	1	; () banked
 22972  003D86  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 22973  003D88  0BF0               	andlw	-16
 22974  003D8A  0906               	iorlw	6
 22975  003D8C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 22976                           
 22977                           ; BSR set to: 1
 22978                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 22979  003D8E  0E28               	movlw	40
 22980  003D90  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22981                           
 22982                           ; BSR set to: 1
 22983                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 22984  003D92  0E00               	movlw	0
 22985  003D94  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22986                           
 22987                           ; BSR set to: 1
 22988                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 22989  003D96  0E01               	movlw	1
 22990  003D98  010D               	movlb	13	; () banked
 22991  003D9A  6F8C               	movwf	140,b	;volatile
 22992                           
 22993                           ; BSR set to: 13
 22994                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 22995  003D9C  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 22996                           
 22997                           ;usb_device_msd.c: 589: }
 22998  003DA0  D005               	goto	l599
 22999  003DA2                     l597:
 23000                           
 23001                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 23002  003DA2  ECA5  F034         	call	_MSDProcessCommandMediaAbsent	;wreg free
 23003                           
 23004                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 23005  003DA6  D002               	goto	l599
 23006  003DA8                     l596:
 23007                           
 23008                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 23009  003DA8  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23010  003DAC                     l599:
 23011                           
 23012                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 23013  003DAC  0100               	movlb	0	; () banked
 23014  003DAE  51A9               	movf	_MSDCommandState& (0+255),w,b
 23015  003DB0  0012               	return	
 23016  003DB2                     __end_of_MSDProcessCommand:
 23017                           	opt stack 0
 23018                           tosu	equ	0xFFF
 23019                           tosh	equ	0xFFE
 23020                           tosl	equ	0xFFD
 23021                           pclath	equ	0xFFA
 23022                           tblptru	equ	0xFF8
 23023                           tblptrh	equ	0xFF7
 23024                           tblptrl	equ	0xFF6
 23025                           tablat	equ	0xFF5
 23026                           prodh	equ	0xFF4
 23027                           prodl	equ	0xFF3
 23028                           intcon	equ	0xFF2
 23029                           intcon2	equ	0xFF1
 23030                           intcon3	equ	0xFF0
 23031                           indf0	equ	0xFEF
 23032                           postinc0	equ	0xFEE
 23033                           fsr0h	equ	0xFEA
 23034                           fsr0l	equ	0xFE9
 23035                           wreg	equ	0xFE8
 23036                           indf1	equ	0xFE7
 23037                           postdec1	equ	0xFE5
 23038                           plusw1	equ	0xFE3
 23039                           fsr1h	equ	0xFE2
 23040                           fsr1l	equ	0xFE1
 23041                           indf2	equ	0xFDF
 23042                           postinc2	equ	0xFDE
 23043                           postdec2	equ	0xFDD
 23044                           plusw2	equ	0xFDB
 23045                           fsr2h	equ	0xFDA
 23046                           fsr2l	equ	0xFD9
 23047                           status	equ	0xFD8
 23048                           
 23049 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 23050 ;; Defined at:
 23051 ;;		line 635 in file "usb_device_msd.c"
 23052 ;; Parameters:    Size  Location     Type
 23053 ;;		None
 23054 ;; Auto vars:     Size  Location     Type
 23055 ;;		None
 23056 ;; Return value:  Size  Location     Type
 23057 ;;                  1    wreg      void 
 23058 ;; Registers used:
 23059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23060 ;; Tracked objects:
 23061 ;;		On entry : 0/0
 23062 ;;		On exit  : 0/0
 23063 ;;		Unchanged: 0/0
 23064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23069 ;;Total ram usage:        0 bytes
 23070 ;; Hardware stack levels used:    1
 23071 ;; Hardware stack levels required when called:   10
 23072 ;; This function calls:
 23073 ;;		_MSDErrorHandler
 23074 ;;		_MSDProcessCommandMediaPresent
 23075 ;;		_ResetSenseData
 23076 ;; This function is called by:
 23077 ;;		_MSDProcessCommand
 23078 ;; This function uses a non-reentrant model
 23079 ;;
 23080                           
 23081                           	psect	text106
 23082  00694A                     __ptext106:
 23083                           	opt stack 0
 23084  00694A                     _MSDProcessCommandMediaAbsent:
 23085                           	opt stack 17
 23086                           
 23087                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 23088                           
 23089                           ; BSR set to: 0
 23090                           ;incstack = 0
 23091  00694A  D01E               	goto	l603
 23092  00694C                     
 23093                           ;usb_device_msd.c: 646: ResetSenseData();
 23094  00694C  ECD6  F034         	call	_ResetSenseData	;wreg free
 23095                           
 23096                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 23097  006950  0101               	movlb	1	; () banked
 23098  006952  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23099  006954  0BF0               	andlw	-16
 23100  006956  0902               	iorlw	2
 23101  006958  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23102                           
 23103                           ; BSR set to: 1
 23104                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 23105  00695A  0E3A               	movlw	58
 23106  00695C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23107                           
 23108                           ; BSR set to: 1
 23109                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 23110  00695E  0E00               	movlw	0
 23111  006960  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23112                           
 23113                           ; BSR set to: 1
 23114                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 23115  006962  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23116                           
 23117                           ;usb_device_msd.c: 655: break;
 23118  006966  0012               	return	
 23119  006968                     
 23120                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 23121  006968  0E01               	movlw	1
 23122  00696A  010D               	movlb	13	; () banked
 23123  00696C  6F8C               	movwf	140,b	;volatile
 23124                           
 23125                           ; BSR set to: 13
 23126                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 23127  00696E  0100               	movlb	0	; () banked
 23128  006970  69A9               	setf	_MSDCommandState& (0+255),b
 23129                           
 23130                           ;usb_device_msd.c: 665: break;
 23131  006972  0012               	return	
 23132  006974                     
 23133                           ; BSR set to: 0
 23134                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 23135                           
 23136                           ; BSR set to: 0
 23137  006974  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23138                           
 23139                           ;usb_device_msd.c: 671: break;
 23140  006978  0012               	return	
 23141  00697A                     
 23142                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 23143  00697A  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23144                           
 23145                           ;usb_device_msd.c: 677: break;
 23146  00697E  0012               	return	
 23147  006980                     
 23148                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 23149  006980  0E7F               	movlw	127
 23150  006982  ECE0  F01F         	call	_MSDErrorHandler
 23151                           
 23152                           ;usb_device_msd.c: 685: }
 23153                           
 23154                           ;usb_device_msd.c: 684: break;
 23155  006986  0012               	return	
 23156  006988                     l603:
 23157  006988  0100               	movlb	0	; () banked
 23158  00698A  51A9               	movf	_MSDCommandState& (0+255),w,b
 23159                           
 23160                           ; Switch size 1, requested type "space"
 23161                           ; Number of cases is 5, Range of values is 0 to 253
 23162                           ; switch strategies available:
 23163                           ; Name         Instructions Cycles
 23164                           ; simple_byte           16     9 (average)
 23165                           ;	Chosen strategy is simple_byte
 23166  00698C  0A00               	xorlw	0	; case 0
 23167  00698E  B4D8               	btfsc	status,2,c
 23168  006990  D7EB               	goto	l606
 23169  006992  0A03               	xorlw	3	; case 3
 23170  006994  B4D8               	btfsc	status,2,c
 23171  006996  D7DA               	goto	l604
 23172  006998  0A11               	xorlw	17	; case 18
 23173  00699A  B4D8               	btfsc	status,2,c
 23174  00699C  D7EB               	goto	l608
 23175  00699E  0A0C               	xorlw	12	; case 30
 23176  0069A0  B4D8               	btfsc	status,2,c
 23177  0069A2  D7E2               	goto	l606
 23178  0069A4  0AE3               	xorlw	227	; case 253
 23179  0069A6  B4D8               	btfsc	status,2,c
 23180  0069A8  D7E8               	goto	l609
 23181  0069AA  D7EA               	goto	l610
 23182  0069AC                     __end_of_MSDProcessCommandMediaAbsent:
 23183                           	opt stack 0
 23184                           tosu	equ	0xFFF
 23185                           tosh	equ	0xFFE
 23186                           tosl	equ	0xFFD
 23187                           pclath	equ	0xFFA
 23188                           tblptru	equ	0xFF8
 23189                           tblptrh	equ	0xFF7
 23190                           tblptrl	equ	0xFF6
 23191                           tablat	equ	0xFF5
 23192                           prodh	equ	0xFF4
 23193                           prodl	equ	0xFF3
 23194                           intcon	equ	0xFF2
 23195                           intcon2	equ	0xFF1
 23196                           intcon3	equ	0xFF0
 23197                           indf0	equ	0xFEF
 23198                           postinc0	equ	0xFEE
 23199                           fsr0h	equ	0xFEA
 23200                           fsr0l	equ	0xFE9
 23201                           wreg	equ	0xFE8
 23202                           indf1	equ	0xFE7
 23203                           postdec1	equ	0xFE5
 23204                           plusw1	equ	0xFE3
 23205                           fsr1h	equ	0xFE2
 23206                           fsr1l	equ	0xFE1
 23207                           indf2	equ	0xFDF
 23208                           postinc2	equ	0xFDE
 23209                           postdec2	equ	0xFDD
 23210                           plusw2	equ	0xFDB
 23211                           fsr2h	equ	0xFDA
 23212                           fsr2l	equ	0xFD9
 23213                           status	equ	0xFD8
 23214                           
 23215 ;; *************** function _MSDProcessCommandMediaPresent *****************
 23216 ;; Defined at:
 23217 ;;		line 712 in file "usb_device_msd.c"
 23218 ;; Parameters:    Size  Location     Type
 23219 ;;		None
 23220 ;; Auto vars:     Size  Location     Type
 23221 ;;  capacity        4   67[COMRAM] struct .
 23222 ;;  sectorSize      4   63[COMRAM] struct .
 23223 ;;  i               1   71[COMRAM] unsigned char 
 23224 ;;  NumBytesInPa    1   62[COMRAM] unsigned char 
 23225 ;; Return value:  Size  Location     Type
 23226 ;;                  1    wreg      void 
 23227 ;; Registers used:
 23228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23229 ;; Tracked objects:
 23230 ;;		On entry : 0/0
 23231 ;;		On exit  : 0/0
 23232 ;;		Unchanged: 0/0
 23233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23235 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23237 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23238 ;;Total ram usage:       14 bytes
 23239 ;; Hardware stack levels used:    1
 23240 ;; Hardware stack levels required when called:    9
 23241 ;; This function calls:
 23242 ;;		_ExternalFlash_CapacityRead
 23243 ;;		_ExternalFlash_SectorSizeRead
 23244 ;;		_ExternalFlash_WriteProtectStateGet
 23245 ;;		_MSDCheckForErrorCases
 23246 ;;		_MSDComputeDeviceInAndResidue
 23247 ;;		_MSDErrorHandler
 23248 ;;		_MSDReadHandler
 23249 ;;		_MSDWriteHandler
 23250 ;;		_ResetSenseData
 23251 ;;		_USBTransferOnePacket
 23252 ;;		_memcpy
 23253 ;; This function is called by:
 23254 ;;		_MSDProcessCommand
 23255 ;;		_MSDProcessCommandMediaAbsent
 23256 ;; This function uses a non-reentrant model
 23257 ;;
 23258                           
 23259                           	psect	text107
 23260  00049C                     __ptext107:
 23261                           	opt stack 0
 23262  00049C                     _MSDProcessCommandMediaPresent:
 23263                           	opt stack 18
 23264                           
 23265                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 23266                           
 23267                           ;incstack = 0
 23268  00049C  D1B9               	goto	l614
 23269  00049E                     
 23270                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 23271  00049E  EC8B  F015         	call	_MSDReadHandler	;wreg free
 23272  0004A2  0900               	iorlw	0
 23273  0004A4  A4D8               	btfss	status,2,c
 23274  0004A6  0012               	return	
 23275                           
 23276                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 23277  0004A8  0100               	movlb	0	; () banked
 23278  0004AA  69A9               	setf	_MSDCommandState& (0+255),b
 23279                           
 23280                           ; BSR set to: 0
 23281                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 23282  0004AC  0012               	return	
 23283  0004AE                     
 23284                           ; BSR set to: 0
 23285                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 23286                           
 23287                           ; BSR set to: 0
 23288  0004AE  EC7C  F00A         	call	_MSDWriteHandler	;wreg free
 23289  0004B2  0900               	iorlw	0
 23290  0004B4  A4D8               	btfss	status,2,c
 23291  0004B6  0012               	return	
 23292                           
 23293                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 23294  0004B8  0100               	movlb	0	; () banked
 23295  0004BA  69A9               	setf	_MSDCommandState& (0+255),b
 23296                           
 23297                           ; BSR set to: 0
 23298                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 23299  0004BC  0012               	return	
 23300  0004BE                     
 23301                           ; BSR set to: 0
 23302                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 23303                           
 23304                           ; BSR set to: 0
 23305  0004BE  05A3               	decf	_MSDHostNoData& (0+255),w,b
 23306  0004C0  A4D8               	btfss	status,2,c
 23307  0004C2  D002               	goto	l621
 23308                           
 23309                           ; BSR set to: 0
 23310                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 23311  0004C4  69A9               	setf	_MSDCommandState& (0+255),b
 23312                           
 23313                           ;usb_device_msd.c: 751: break;
 23314  0004C6  0012               	return	
 23315  0004C8                     l621:
 23316                           
 23317                           ; BSR set to: 0
 23318                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 23319  0004C8  C112  F08D         	movff	_gblCBW+18,_TransferLength+1
 23320                           
 23321                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 23322  0004CC  C113  F08C         	movff	_gblCBW+19,_TransferLength
 23323                           
 23324                           ; BSR set to: 0
 23325                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 23326  0004D0  C08C  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 23327  0004D4  C08D  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 23328  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 23329  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 23330  0004DC  ECBF  F022         	call	_MSDCheckForErrorCases	;wreg free
 23331  0004E0  0900               	iorlw	0
 23332  0004E2  A4D8               	btfss	status,2,c
 23333  0004E4  0012               	return	
 23334                           
 23335                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 23336                           
 23337                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 23338  0004E6  0E00               	movlw	0
 23339  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23340  0004EA  0E24               	movlw	36
 23341  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23342  0004EE  EC6A  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23343                           
 23344                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 23345  0004F2  0E00               	movlw	0
 23346  0004F4  6E01               	movwf	memcpy@d1,c
 23347  0004F6  0E06               	movlw	6
 23348  0004F8  6E02               	movwf	memcpy@d1+1,c
 23349  0004FA  0E49               	movlw	low _inq_resp
 23350  0004FC  6E03               	movwf	memcpy@s1,c
 23351  0004FE  0E8F               	movlw	high _inq_resp
 23352  000500  6E04               	movwf	memcpy@s1+1,c
 23353  000502  5003               	movf	memcpy@s1,w,c
 23354  000504  1004               	iorwf	memcpy@s1+1,w,c
 23355  000506  A4D8               	btfss	status,2,c
 23356  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 23357  00050A  6E05               	movwf	memcpy@s1+2,c
 23358  00050C  0E00               	movlw	0
 23359  00050E  6E07               	movwf	memcpy@n+1,c
 23360  000510  0E24               	movlw	36
 23361  000512  6E06               	movwf	memcpy@n,c
 23362  000514  EC72  F034         	call	_memcpy	;wreg free
 23363                           
 23364                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 23365  000518  0EFD               	movlw	253
 23366  00051A  0100               	movlb	0	; () banked
 23367  00051C  6FA9               	movwf	_MSDCommandState& (0+255),b
 23368                           
 23369                           ;usb_device_msd.c: 773: break;
 23370  00051E  0012               	return	
 23371  000520                     
 23372                           ; BSR set to: 0
 23373                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 23374                           
 23375                           ; BSR set to: 0
 23376  000520  C1E6  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 23377  000524  C1E7  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 23378  000528  D801               	call	u8108
 23379  00052A  D00A               	goto	u8109
 23380  00052C                     u8108:
 23381  00052C  0005               	push	
 23382  00052E  6EFA               	movwf	pclath,c
 23383  000530  0101               	movlb	1	; () banked
 23384  000532  51DA               	movf	(_LUN+2)& (0+255),w,b
 23385  000534  6EFD               	movwf	tosl,c
 23386  000536  51DB               	movf	(_LUN+3)& (0+255),w,b
 23387  000538  6EFE               	movwf	tosh,c
 23388  00053A  6AFF               	clrf	tosu,c
 23389  00053C  50FA               	movf	pclath,w,c
 23390  00053E  0012               	return		;indir
 23391  000540                     u8109:
 23392  000540  C001  F044         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 23393  000544  C002  F045         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 23394  000548  C003  F046         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 23395  00054C  C004  F047         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 23396                           
 23397                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 23398  000550  C1E6  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 23399  000554  C1E7  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 23400  000558  D801               	call	u8118
 23401  00055A  D00A               	goto	u8119
 23402  00055C                     u8118:
 23403  00055C  0005               	push	
 23404  00055E  6EFA               	movwf	pclath,c
 23405  000560  0101               	movlb	1	; () banked
 23406  000562  51DC               	movf	(_LUN+4)& (0+255),w,b
 23407  000564  6EFD               	movwf	tosl,c
 23408  000566  51DD               	movf	(_LUN+5)& (0+255),w,b
 23409  000568  6EFE               	movwf	tosh,c
 23410  00056A  6AFF               	clrf	tosu,c
 23411  00056C  50FA               	movf	pclath,w,c
 23412  00056E  0012               	return		;indir
 23413  000570                     u8119:
 23414  000570  C001  F040         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 23415  000574  C002  F041         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 23416  000578  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 23417  00057A  6A43               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 23418                           
 23419                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 23420  00057C  EE26 F000          	lfsr	2,1536
 23421  000580  C047  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 23422                           
 23423                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 23424  000584  EE26 F001          	lfsr	2,1537	;volatile
 23425  000588  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 23426                           
 23427                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 23428  00058C  EE26 F002          	lfsr	2,1538	;volatile
 23429  000590  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 23430                           
 23431                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 23432  000594  EE26 F003          	lfsr	2,1539	;volatile
 23433  000598  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 23434                           
 23435                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 23436  00059C  EE26 F004          	lfsr	2,1540	;volatile
 23437  0005A0  C043  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 23438                           
 23439                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 23440  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 23441  0005A8  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 23442                           
 23443                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 23444  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 23445  0005B0  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 23446                           
 23447                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 23448  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 23449  0005B8  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 23450                           
 23451                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 23452  0005BC  0E00               	movlw	0
 23453  0005BE  0100               	movlb	0	; () banked
 23454  0005C0  6F8D               	movwf	(_TransferLength+1)& (0+255),b
 23455  0005C2  0E08               	movlw	8
 23456  0005C4  6F8C               	movwf	_TransferLength& (0+255),b
 23457                           
 23458                           ; BSR set to: 0
 23459                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 23460  0005C6  0E00               	movlw	0
 23461  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23462  0005CA  0E08               	movlw	8
 23463  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23464  0005CE  EC6A  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23465                           
 23466                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 23467  0005D2  0EFD               	movlw	253
 23468  0005D4  0100               	movlb	0	; () banked
 23469  0005D6  6FA9               	movwf	_MSDCommandState& (0+255),b
 23470                           
 23471                           ;usb_device_msd.c: 802: break;
 23472  0005D8  0012               	return	
 23473  0005DA                     
 23474                           ; BSR set to: 0
 23475                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 23476                           
 23477                           ; BSR set to: 0
 23478  0005DA  05A3               	decf	_MSDHostNoData& (0+255),w,b
 23479  0005DC  A4D8               	btfss	status,2,c
 23480  0005DE  D002               	goto	l625
 23481                           
 23482                           ; BSR set to: 0
 23483                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 23484  0005E0  69A9               	setf	_MSDCommandState& (0+255),b
 23485                           
 23486                           ;usb_device_msd.c: 814: break;
 23487  0005E2  0012               	return	
 23488  0005E4                     l625:
 23489                           
 23490                           ; BSR set to: 0
 23491                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 23492                           
 23493                           ; BSR set to: 0
 23494  0005E4  0E00               	movlw	0
 23495  0005E6  6F8D               	movwf	(_TransferLength+1)& (0+255),b
 23496  0005E8  0E12               	movlw	18
 23497  0005EA  6F8C               	movwf	_TransferLength& (0+255),b
 23498                           
 23499                           ; BSR set to: 0
 23500                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 23501  0005EC  0E00               	movlw	0
 23502  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23503  0005F0  0E12               	movlw	18
 23504  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23505  0005F4  EC6A  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23506                           
 23507                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 23508  0005F8  0E00               	movlw	0
 23509  0005FA  6E48               	movwf	MSDProcessCommandMediaPresent@i,c
 23510  0005FC                     l10635:
 23511  0005FC  0E11               	movlw	17
 23512  0005FE  6448               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 23513  000600  D001               	goto	l626
 23514  000602  D014               	goto	u8140
 23515  000604                     l626:
 23516                           
 23517                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 23518  000604  5048               	movf	MSDProcessCommandMediaPresent@i,w,c
 23519  000606  0D01               	mullw	1
 23520  000608  0E1F               	movlw	low _gblSenseData
 23521  00060A  24F3               	addwf	prodl,w,c
 23522  00060C  6ED9               	movwf	fsr2l,c
 23523  00060E  0E01               	movlw	high _gblSenseData
 23524  000610  20F4               	addwfc	prodh,w,c
 23525  000612  6EDA               	movwf	fsr2h,c
 23526  000614  5048               	movf	MSDProcessCommandMediaPresent@i,w,c
 23527  000616  0D01               	mullw	1
 23528  000618  0E00               	movlw	0
 23529  00061A  24F3               	addwf	prodl,w,c
 23530  00061C  6EE1               	movwf	fsr1l,c
 23531  00061E  0E06               	movlw	6
 23532  000620  20F4               	addwfc	prodh,w,c
 23533  000622  6EE2               	movwf	fsr1h,c
 23534  000624  CFDF FFE7          	movff	indf2,indf1
 23535  000628  2A48               	incf	MSDProcessCommandMediaPresent@i,f,c
 23536  00062A  D7E8               	goto	l10635
 23537  00062C                     u8140:
 23538                           
 23539                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 23540  00062C  0EFD               	movlw	253
 23541  00062E  0100               	movlb	0	; () banked
 23542  000630  6FA9               	movwf	_MSDCommandState& (0+255),b
 23543                           
 23544                           ;usb_device_msd.c: 827: break;
 23545  000632  0012               	return	
 23546  000634                     l628:
 23547                           
 23548                           ; BSR set to: 0
 23549                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 23550  000634  0E03               	movlw	3
 23551  000636  CFE8 F600          	movff	wreg,1536
 23552                           
 23553                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 23554  00063A  0E00               	movlw	0
 23555  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 23556                           
 23557                           ; BSR set to: 0
 23558                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 23559  000640  C1E6  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 23560  000644  C1E7  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 23561  000648  D801               	call	u8158
 23562  00064A  D00A               	goto	u8159
 23563  00064C                     u8158:
 23564  00064C  0005               	push	
 23565  00064E  6EFA               	movwf	pclath,c
 23566  000650  0101               	movlb	1	; () banked
 23567  000652  51E2               	movf	(_LUN+10)& (0+255),w,b
 23568  000654  6EFD               	movwf	tosl,c
 23569  000656  51E3               	movf	(_LUN+11)& (0+255),w,b
 23570  000658  6EFE               	movwf	tosh,c
 23571  00065A  6AFF               	clrf	tosu,c
 23572  00065C  50FA               	movf	pclath,w,c
 23573  00065E  0012               	return		;indir
 23574  000660                     u8159:
 23575  000660  0900               	iorlw	0
 23576  000662  A4D8               	btfss	status,2,c
 23577  000664  D004               	goto	l630
 23578  000666  0E00               	movlw	0
 23579  000668  6E3E               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 23580  00066A  0E00               	movlw	0
 23581  00066C  D003               	goto	L19
 23582  00066E                     l630:
 23583  00066E  0E00               	movlw	0
 23584  000670  6E3E               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 23585  000672  0E80               	movlw	128
 23586  000674                     L19:
 23587  000674  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390,c
 23588  000676  EE26 F002          	lfsr	2,1538	;volatile
 23589  00067A  C03D  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 23590                           
 23591                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 23592  00067E  0E00               	movlw	0
 23593  000680  CFE8 F603          	movff	wreg,1539	;volatile
 23594                           
 23595                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 23596  000684  0E00               	movlw	0
 23597  000686  0100               	movlb	0	; () banked
 23598  000688  6F8D               	movwf	(_TransferLength+1)& (0+255),b
 23599  00068A  0E04               	movlw	4
 23600  00068C  6F8C               	movwf	_TransferLength& (0+255),b
 23601                           
 23602                           ; BSR set to: 0
 23603                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 23604  00068E  0E00               	movlw	0
 23605  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23606  000692  0E04               	movlw	4
 23607  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23608  000696  EC6A  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23609                           
 23610                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 23611  00069A  0EFD               	movlw	253
 23612  00069C  0100               	movlb	0	; () banked
 23613  00069E  6FA9               	movwf	_MSDCommandState& (0+255),b
 23614                           
 23615                           ;usb_device_msd.c: 839: break;
 23616  0006A0  0012               	return	
 23617  0006A2                     
 23618                           ; BSR set to: 0
 23619                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 23620                           
 23621                           ; BSR set to: 0
 23622  0006A2  0101               	movlb	1	; () banked
 23623  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23624  0006A6  0BF0               	andlw	-16
 23625  0006A8  0905               	iorlw	5
 23626  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23627                           
 23628                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 23629  0006AC  0E20               	movlw	32
 23630  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23631                           
 23632                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 23633  0006B0  0E00               	movlw	0
 23634  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23635                           
 23636                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 23637  0006B4  0E01               	movlw	1
 23638  0006B6  010D               	movlb	13	; () banked
 23639  0006B8  6F8C               	movwf	140,b	;volatile
 23640                           
 23641                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 23642  0006BA  0E00               	movlw	0
 23643  0006BC  6F88               	movwf	136,b	;volatile
 23644  0006BE  0E00               	movlw	0
 23645  0006C0  6F89               	movwf	137,b	;volatile
 23646  0006C2  0E00               	movlw	0
 23647  0006C4  6F8A               	movwf	138,b	;volatile
 23648  0006C6  0E00               	movlw	0
 23649  0006C8  6F8B               	movwf	139,b	;volatile
 23650                           
 23651                           ; BSR set to: 13
 23652                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 23653  0006CA  0100               	movlb	0	; () banked
 23654  0006CC  69A9               	setf	_MSDCommandState& (0+255),b
 23655                           
 23656                           ;usb_device_msd.c: 848: break;
 23657  0006CE  0012               	return	
 23658  0006D0                     
 23659                           ; BSR set to: 0
 23660                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 23661                           
 23662                           ; BSR set to: 0
 23663  0006D0  0E00               	movlw	0
 23664  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 23665  0006D4  0E00               	movlw	0
 23666  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 23667  0006D8  0E00               	movlw	0
 23668  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 23669  0006DC  0E00               	movlw	0
 23670  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 23671  0006E0  ECBF  F022         	call	_MSDCheckForErrorCases	;wreg free
 23672  0006E4  0900               	iorlw	0
 23673  0006E6  A4D8               	btfss	status,2,c
 23674  0006E8  0012               	return	
 23675                           
 23676                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 23677                           
 23678                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 23679  0006EA  0101               	movlb	1	; () banked
 23680  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23681  0006EE  0B0F               	andlw	15
 23682  0006F0  0A06               	xorlw	6
 23683  0006F2  A4D8               	btfss	status,2,c
 23684  0006F4  D007               	goto	l636
 23685                           
 23686                           ; BSR set to: 1
 23687  0006F6  010D               	movlb	13	; () banked
 23688  0006F8  058C               	decf	140,w,b	;volatile
 23689  0006FA  A4D8               	btfss	status,2,c
 23690  0006FC  D003               	goto	l636
 23691                           
 23692                           ; BSR set to: 13
 23693                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 23694  0006FE  0100               	movlb	0	; () banked
 23695  000700  69A9               	setf	_MSDCommandState& (0+255),b
 23696                           
 23697                           ;usb_device_msd.c: 870: }
 23698  000702  0012               	return	
 23699  000704                     l636:
 23700                           
 23701                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 23702                           
 23703                           ; BSR set to: 0
 23704  000704  ECD6  F034         	call	_ResetSenseData	;wreg free
 23705                           
 23706                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 23707  000708  0E00               	movlw	0
 23708  00070A  010D               	movlb	13	; () banked
 23709  00070C  6F88               	movwf	136,b	;volatile
 23710  00070E  0E00               	movlw	0
 23711  000710  6F89               	movwf	137,b	;volatile
 23712  000712  0E00               	movlw	0
 23713  000714  6F8A               	movwf	138,b	;volatile
 23714  000716  0E00               	movlw	0
 23715  000718  6F8B               	movwf	139,b	;volatile
 23716                           
 23717                           ; BSR set to: 13
 23718                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 23719  00071A  0100               	movlb	0	; () banked
 23720  00071C  69A9               	setf	_MSDCommandState& (0+255),b
 23721                           
 23722                           ; BSR set to: 0
 23723                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 23724  00071E  0012               	return	
 23725  000720                     
 23726                           ; BSR set to: 0
 23727                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 23728                           
 23729                           ; BSR set to: 0
 23730                           
 23731                           ; BSR set to: 0
 23732  000720  0E00               	movlw	0
 23733  000722  010D               	movlb	13	; () banked
 23734  000724  6F88               	movwf	136,b	;volatile
 23735  000726  0E00               	movlw	0
 23736  000728  6F89               	movwf	137,b	;volatile
 23737  00072A  0E00               	movlw	0
 23738  00072C  6F8A               	movwf	138,b	;volatile
 23739  00072E  0E00               	movlw	0
 23740  000730  6F8B               	movwf	139,b	;volatile
 23741                           
 23742                           ; BSR set to: 13
 23743                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 23744  000732  0100               	movlb	0	; () banked
 23745  000734  69A9               	setf	_MSDCommandState& (0+255),b
 23746                           
 23747                           ;usb_device_msd.c: 885: break;
 23748  000736  0012               	return	
 23749  000738                     
 23750                           ; BSR set to: 0
 23751                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 23752                           
 23753                           ; BSR set to: 0
 23754  000738  5190               	movf	_USBMSDInHandle& (0+255),w,b
 23755  00073A  1191               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 23756  00073C  B4D8               	btfsc	status,2,c
 23757  00073E  D006               	goto	u8210
 23758                           
 23759                           ; BSR set to: 0
 23760  000740  C090  FFD9         	movff	_USBMSDInHandle,fsr2l
 23761  000744  C091  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 23762  000748  BEDF               	btfsc	indf2,7,c
 23763  00074A  0012               	return	
 23764  00074C                     u8210:
 23765                           
 23766                           ; BSR set to: 0
 23767                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 23768                           
 23769                           ; BSR set to: 0
 23770  00074C  0101               	movlb	1	; () banked
 23771  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 23772  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 23773  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 23774  000754  E104               	bnz	u8220
 23775  000756  0E40               	movlw	64
 23776  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 23777  00075A  A0D8               	btfss	status,0,c
 23778  00075C  D009               	goto	l644
 23779  00075E                     u8220:
 23780                           
 23781                           ; BSR set to: 1
 23782                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 23783  00075E  0E40               	movlw	64
 23784  000760  6E3F               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 23785                           
 23786                           ; BSR set to: 1
 23787                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 23788  000762  0E40               	movlw	64
 23789  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 23790  000766  0E00               	movlw	0
 23791  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 23792  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 23793  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 23794                           
 23795                           ;usb_device_msd.c: 900: }
 23796  00076E  D00A               	goto	l645
 23797  000770                     l644:
 23798                           
 23799                           ; BSR set to: 1
 23800                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 23801  000770  C108  F03F         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 23802                           
 23803                           ; BSR set to: 1
 23804                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 23805  000774  0E00               	movlw	0
 23806  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 23807  000778  0E00               	movlw	0
 23808  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 23809  00077C  0E00               	movlw	0
 23810  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 23811  000780  0E00               	movlw	0
 23812  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 23813  000784                     l645:
 23814                           
 23815                           ; BSR set to: 1
 23816                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 23817                           
 23818                           ; BSR set to: 1
 23819  000784  503F               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 23820  000786  6E3B               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 23821  000788  6A3C               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 23822  00078A  503B               	movf	??_MSDProcessCommandMediaPresent,w,c
 23823  00078C  0100               	movlb	0	; () banked
 23824  00078E  5D8C               	subwf	_TransferLength& (0+255),w,b
 23825  000790  503C               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 23826  000792  598D               	subwfb	(_TransferLength+1)& (0+255),w,b
 23827  000794  A0D8               	btfss	status,0,c
 23828  000796  D005               	goto	l646
 23829                           
 23830                           ; BSR set to: 0
 23831                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 23832  000798  503F               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 23833  00079A  5F8C               	subwf	_TransferLength& (0+255),f,b
 23834  00079C  0E00               	movlw	0
 23835  00079E  5B8D               	subwfb	(_TransferLength+1)& (0+255),f,b
 23836                           
 23837                           ;usb_device_msd.c: 918: }
 23838  0007A0  D01A               	goto	u8250
 23839  0007A2                     l646:
 23840                           
 23841                           ; BSR set to: 0
 23842                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 23843                           
 23844                           ; BSR set to: 0
 23845  0007A2  0E00               	movlw	0
 23846  0007A4  6E48               	movwf	MSDProcessCommandMediaPresent@i,c
 23847  0007A6  D013               	goto	l648
 23848  0007A8                     
 23849                           ; BSR set to: 0
 23850                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 23851                           
 23852                           ; BSR set to: 0
 23853  0007A8  518C               	movf	_TransferLength& (0+255),w,b
 23854  0007AA  118D               	iorwf	(_TransferLength+1)& (0+255),w,b
 23855  0007AC  B4D8               	btfsc	status,2,c
 23856  0007AE  D004               	goto	l650
 23857                           
 23858                           ; BSR set to: 0
 23859                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 23860  0007B0  078C               	decf	_TransferLength& (0+255),f,b
 23861  0007B2  A0D8               	btfss	status,0,c
 23862  0007B4  078D               	decf	(_TransferLength+1)& (0+255),f,b
 23863                           
 23864                           ;usb_device_msd.c: 932: }
 23865  0007B6  D00A               	goto	l651
 23866  0007B8                     l650:
 23867                           
 23868                           ; BSR set to: 0
 23869                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 23870                           
 23871                           ; BSR set to: 0
 23872  0007B8  5048               	movf	MSDProcessCommandMediaPresent@i,w,c
 23873  0007BA  0D01               	mullw	1
 23874  0007BC  0E00               	movlw	0
 23875  0007BE  24F3               	addwf	prodl,w,c
 23876  0007C0  6ED9               	movwf	fsr2l,c
 23877  0007C2  0E06               	movlw	6
 23878  0007C4  20F4               	addwfc	prodh,w,c
 23879  0007C6  6EDA               	movwf	fsr2h,c
 23880  0007C8  0E00               	movlw	0
 23881  0007CA  6EDF               	movwf	indf2,c
 23882  0007CC                     l651:
 23883                           
 23884                           ; BSR set to: 0
 23885                           
 23886                           ; BSR set to: 0
 23887  0007CC  2A48               	incf	MSDProcessCommandMediaPresent@i,f,c
 23888  0007CE                     l648:
 23889                           
 23890                           ; BSR set to: 0
 23891                           
 23892                           ; BSR set to: 0
 23893  0007CE  503F               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 23894  0007D0  5C48               	subwf	MSDProcessCommandMediaPresent@i,w,c
 23895  0007D2  A0D8               	btfss	status,0,c
 23896  0007D4  D7E9               	goto	l649
 23897  0007D6                     u8250:
 23898                           
 23899                           ; BSR set to: 0
 23900                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 23901                           
 23902                           ; BSR set to: 0
 23903                           
 23904                           ; BSR set to: 0
 23905  0007D6  0E01               	movlw	1
 23906  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 23907  0007DA  0E00               	movlw	0
 23908  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 23909  0007DE  0E06               	movlw	6
 23910  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 23911  0007E2  C03F  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 23912  0007E6  0E02               	movlw	2
 23913  0007E8  EC63  F020         	call	_USBTransferOnePacket
 23914  0007EC  C001  F090         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 23915  0007F0  C002  F091         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 23916                           
 23917                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 23918  0007F4  0101               	movlb	1	; () banked
 23919  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 23920  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 23921  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 23922  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 23923  0007FE  A4D8               	btfss	status,2,c
 23924  000800  0012               	return	
 23925                           
 23926                           ; BSR set to: 1
 23927                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 23928  000802  0100               	movlb	0	; () banked
 23929  000804  69A9               	setf	_MSDCommandState& (0+255),b
 23930                           
 23931                           ; BSR set to: 0
 23932                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 23933                           
 23934                           ; BSR set to: 0
 23935                           
 23936                           ;usb_device_msd.c: 949: break;
 23937  000806  0012               	return	
 23938  000808                     
 23939                           ; BSR set to: 0
 23940                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 23941                           
 23942                           ; BSR set to: 0
 23943                           
 23944                           ;usb_device_msd.c: 954: default:
 23945                           
 23946                           ; BSR set to: 0
 23947  000808  0E7F               	movlw	127
 23948  00080A  ECE0  F01F         	call	_MSDErrorHandler
 23949                           
 23950                           ;usb_device_msd.c: 960: }
 23951                           
 23952                           ;usb_device_msd.c: 959: break;
 23953  00080E  0012               	return	
 23954  000810                     l614:
 23955  000810  0100               	movlb	0	; () banked
 23956  000812  51A9               	movf	_MSDCommandState& (0+255),w,b
 23957                           
 23958                           ; Switch size 1, requested type "space"
 23959                           ; Number of cases is 12, Range of values is 0 to 254
 23960                           ; switch strategies available:
 23961                           ; Name         Instructions Cycles
 23962                           ; simple_byte           37    19 (average)
 23963                           ;	Chosen strategy is simple_byte
 23964  000814  0A00               	xorlw	0	; case 0
 23965  000816  B4D8               	btfsc	status,2,c
 23966  000818  D75B               	goto	l634
 23967  00081A  0A03               	xorlw	3	; case 3
 23968  00081C  B4D8               	btfsc	status,2,c
 23969  00081E  D6DD               	goto	l624
 23970  000820  0A11               	xorlw	17	; case 18
 23971  000822  B4D8               	btfsc	status,2,c
 23972  000824  D64C               	goto	l620
 23973  000826  0A08               	xorlw	8	; case 26
 23974  000828  B4D8               	btfsc	status,2,c
 23975  00082A  D704               	goto	l628
 23976  00082C  0A01               	xorlw	1	; case 27
 23977  00082E  B4D8               	btfsc	status,2,c
 23978  000830  D777               	goto	l638
 23979  000832  0A05               	xorlw	5	; case 30
 23980  000834  B4D8               	btfsc	status,2,c
 23981  000836  D735               	goto	l633
 23982  000838  0A3B               	xorlw	59	; case 37
 23983  00083A  B4D8               	btfsc	status,2,c
 23984  00083C  D671               	goto	l623
 23985  00083E  0A0D               	xorlw	13	; case 40
 23986  000840  B4D8               	btfsc	status,2,c
 23987  000842  D62D               	goto	l615
 23988  000844  0A02               	xorlw	2	; case 42
 23989  000846  B4D8               	btfsc	status,2,c
 23990  000848  D632               	goto	l618
 23991  00084A  0A05               	xorlw	5	; case 47
 23992  00084C  B4D8               	btfsc	status,2,c
 23993  00084E  D768               	goto	l638
 23994  000850  0AD2               	xorlw	210	; case 253
 23995  000852  B4D8               	btfsc	status,2,c
 23996  000854  D771               	goto	l640
 23997  000856  0A03               	xorlw	3	; case 254
 23998  000858  D7D7               	goto	l654
 23999  00085A                     __end_of_MSDProcessCommandMediaPresent:
 24000                           	opt stack 0
 24001                           tosu	equ	0xFFF
 24002                           tosh	equ	0xFFE
 24003                           tosl	equ	0xFFD
 24004                           pclath	equ	0xFFA
 24005                           tblptru	equ	0xFF8
 24006                           tblptrh	equ	0xFF7
 24007                           tblptrl	equ	0xFF6
 24008                           tablat	equ	0xFF5
 24009                           prodh	equ	0xFF4
 24010                           prodl	equ	0xFF3
 24011                           intcon	equ	0xFF2
 24012                           intcon2	equ	0xFF1
 24013                           intcon3	equ	0xFF0
 24014                           indf0	equ	0xFEF
 24015                           postinc0	equ	0xFEE
 24016                           fsr0h	equ	0xFEA
 24017                           fsr0l	equ	0xFE9
 24018                           wreg	equ	0xFE8
 24019                           indf1	equ	0xFE7
 24020                           postdec1	equ	0xFE5
 24021                           plusw1	equ	0xFE3
 24022                           fsr1h	equ	0xFE2
 24023                           fsr1l	equ	0xFE1
 24024                           indf2	equ	0xFDF
 24025                           postinc2	equ	0xFDE
 24026                           postdec2	equ	0xFDD
 24027                           plusw2	equ	0xFDB
 24028                           fsr2h	equ	0xFDA
 24029                           fsr2l	equ	0xFD9
 24030                           status	equ	0xFD8
 24031                           
 24032 ;; *************** function _MSDWriteHandler *****************
 24033 ;; Defined at:
 24034 ;;		line 1188 in file "usb_device_msd.c"
 24035 ;; Parameters:    Size  Location     Type
 24036 ;;		None
 24037 ;; Auto vars:     Size  Location     Type
 24038 ;;		None
 24039 ;; Return value:  Size  Location     Type
 24040 ;;                  1    wreg      unsigned char 
 24041 ;; Registers used:
 24042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24043 ;; Tracked objects:
 24044 ;;		On entry : 0/0
 24045 ;;		On exit  : 0/0
 24046 ;;		Unchanged: 0/0
 24047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24050 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24051 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24052 ;;Total ram usage:        5 bytes
 24053 ;; Hardware stack levels used:    1
 24054 ;; Hardware stack levels required when called:    7
 24055 ;; This function calls:
 24056 ;;		_ExternalFlash_SectorWrite
 24057 ;;		_ExternalFlash_WriteProtectStateGet
 24058 ;;		_MSDCheckForErrorCases
 24059 ;;		_USBStallEndpoint
 24060 ;;		_USBTransferOnePacket
 24061 ;; This function is called by:
 24062 ;;		_MSDProcessCommandMediaPresent
 24063 ;; This function uses a non-reentrant model
 24064 ;;
 24065                           
 24066                           	psect	text108
 24067  0014F8                     __ptext108:
 24068                           	opt stack 0
 24069  0014F8                     _MSDWriteHandler:
 24070                           	opt stack 19
 24071                           
 24072                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 24073                           
 24074                           ;incstack = 0
 24075  0014F8  D144               	goto	l684
 24076  0014FA                     l685:
 24077                           
 24078                           ; BSR set to: 0
 24079                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 24080  0014FA  C111  F083         	movff	_gblCBW+17,_LBA+3
 24081                           
 24082                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 24083  0014FE  C112  F082         	movff	_gblCBW+18,_LBA+2
 24084                           
 24085                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 24086  001502  C113  F081         	movff	_gblCBW+19,_LBA+1
 24087                           
 24088                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 24089  001506  C114  F080         	movff	_gblCBW+20,_LBA
 24090                           
 24091                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 24092  00150A  C116  F08D         	movff	_gblCBW+22,_TransferLength+1
 24093                           
 24094                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 24095  00150E  C117  F08C         	movff	_gblCBW+23,_TransferLength
 24096                           
 24097                           ; BSR set to: 0
 24098                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 24099  001512  518C               	movf	_TransferLength& (0+255),w,b
 24100  001514  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24101  001516  518D               	movf	(_TransferLength+1)& (0+255),w,b
 24102  001518  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 24103  00151A  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24104  00151C  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24105  00151E  0E09               	movlw	9
 24106  001520                     u7125:
 24107  001520  90D8               	bcf	status,0,c
 24108  001522  3630               	rlcf	??_MSDWriteHandler,f,c
 24109  001524  3631               	rlcf	??_MSDWriteHandler+1,f,c
 24110  001526  3632               	rlcf	??_MSDWriteHandler+2,f,c
 24111  001528  3633               	rlcf	??_MSDWriteHandler+3,f,c
 24112  00152A  2EE8               	decfsz	wreg,f,c
 24113  00152C  D7F9               	goto	u7125
 24114  00152E  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 24115  001532  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 24116  001536  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 24117  00153A  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 24118  00153E  ECBF  F022         	call	_MSDCheckForErrorCases	;wreg free
 24119  001542  0900               	iorlw	0
 24120  001544  A4D8               	btfss	status,2,c
 24121  001546  D12F               	goto	l687
 24122                           
 24123                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 24124                           
 24125                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 24126  001548  C1E6  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 24127  00154C  C1E7  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 24128  001550  D801               	call	u7148
 24129  001552  D00A               	goto	u7149
 24130  001554                     u7148:
 24131  001554  0005               	push	
 24132  001556  6EFA               	movwf	pclath,c
 24133  001558  0101               	movlb	1	; () banked
 24134  00155A  51E2               	movf	(_LUN+10)& (0+255),w,b
 24135  00155C  6EFD               	movwf	tosl,c
 24136  00155E  51E3               	movf	(_LUN+11)& (0+255),w,b
 24137  001560  6EFE               	movwf	tosh,c
 24138  001562  6AFF               	clrf	tosu,c
 24139  001564  50FA               	movf	pclath,w,c
 24140  001566  0012               	return		;indir
 24141  001568                     u7149:
 24142  001568  0900               	iorlw	0
 24143  00156A  B4D8               	btfsc	status,2,c
 24144  00156C  D016               	goto	l688
 24145                           
 24146                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 24147  00156E  0E01               	movlw	1
 24148  001570  010D               	movlb	13	; () banked
 24149  001572  6F8C               	movwf	140,b	;volatile
 24150                           
 24151                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 24152  001574  0101               	movlb	1	; () banked
 24153  001576  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24154  001578  0BF0               	andlw	-16
 24155  00157A  0907               	iorlw	7
 24156  00157C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24157                           
 24158                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 24159  00157E  0E27               	movlw	39
 24160  001580  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24161                           
 24162                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 24163  001582  0E00               	movlw	0
 24164  001584  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24165                           
 24166                           ; BSR set to: 1
 24167                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 24168  001586  0E00               	movlw	0
 24169  001588  6E01               	movwf	USBStallEndpoint@dir,c
 24170  00158A  0E02               	movlw	2
 24171  00158C  ECD9  F01E         	call	_USBStallEndpoint
 24172                           
 24173                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 24174  001590  0E00               	movlw	0
 24175  001592  0100               	movlb	0	; () banked
 24176  001594  6FA7               	movwf	_MSDWriteState& (0+255),b
 24177                           
 24178                           ; BSR set to: 0
 24179                           ;usb_device_msd.c: 1228: return MSDWriteState;
 24180  001596  51A7               	movf	_MSDWriteState& (0+255),w,b
 24181                           
 24182                           ; BSR set to: 0
 24183  001598  0012               	return	
 24184  00159A                     l688:
 24185                           
 24186                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 24187                           
 24188                           ; BSR set to: 0
 24189  00159A  0E01               	movlw	1
 24190  00159C  0100               	movlb	0	; () banked
 24191  00159E  6FAA               	movwf	_MSD_State& (0+255),b
 24192  0015A0                     
 24193                           ; BSR set to: 0
 24194                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 24195                           
 24196                           ; BSR set to: 0
 24197  0015A0  518C               	movf	_TransferLength& (0+255),w,b
 24198  0015A2  118D               	iorwf	(_TransferLength+1)& (0+255),w,b
 24199  0015A4  A4D8               	btfss	status,2,c
 24200  0015A6  D002               	goto	l691
 24201                           
 24202                           ; BSR set to: 0
 24203                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 24204  0015A8  0E00               	movlw	0
 24205  0015AA  D0E9               	goto	L23
 24206  0015AC                     l691:
 24207                           
 24208                           ; BSR set to: 0
 24209                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 24210                           
 24211                           ; BSR set to: 0
 24212  0015AC  0E03               	movlw	3
 24213  0015AE  6FA7               	movwf	_MSDWriteState& (0+255),b
 24214                           
 24215                           ; BSR set to: 0
 24216                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 24217  0015B0  0E00               	movlw	0
 24218  0015B2  6F94               	movwf	_ptrNextData& (0+255),b
 24219  0015B4  0E06               	movlw	6
 24220  0015B6  6F95               	movwf	(_ptrNextData+1)& (0+255),b
 24221                           
 24222                           ; BSR set to: 0
 24223                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 24224  0015B8  0E00               	movlw	0
 24225  0015BA  010D               	movlb	13	; () banked
 24226  0015BC  6F88               	movwf	136,b	;volatile
 24227  0015BE  0E02               	movlw	2
 24228  0015C0  6F89               	movwf	137,b	;volatile
 24229  0015C2  0E00               	movlw	0
 24230  0015C4  6F8A               	movwf	138,b	;volatile
 24231  0015C6  0E00               	movlw	0
 24232  0015C8  6F8B               	movwf	139,b	;volatile
 24233  0015CA                     l692:
 24234                           
 24235                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 24236  0015CA  010D               	movlb	13	; () banked
 24237  0015CC  5188               	movf	136,w,b	;volatile
 24238  0015CE  1189               	iorwf	137,w,b	;volatile
 24239  0015D0  118A               	iorwf	138,w,b	;volatile
 24240  0015D2  118B               	iorwf	139,w,b	;volatile
 24241  0015D4  B4D8               	btfsc	status,2,c
 24242  0015D6  D01E               	goto	l693
 24243                           
 24244                           ; BSR set to: 13
 24245                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 24246  0015D8  0100               	movlb	0	; () banked
 24247  0015DA  5192               	movf	_USBMSDOutHandle& (0+255),w,b
 24248  0015DC  1193               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 24249  0015DE  B4D8               	btfsc	status,2,c
 24250  0015E0  D006               	goto	l694
 24251                           
 24252                           ; BSR set to: 0
 24253  0015E2  C092  FFD9         	movff	_USBMSDOutHandle,fsr2l
 24254  0015E6  C093  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 24255  0015EA  BEDF               	btfsc	indf2,7,c
 24256  0015EC  D0DC               	goto	l687
 24257  0015EE                     l694:
 24258                           
 24259                           ; BSR set to: 0
 24260                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 24261                           
 24262                           ; BSR set to: 0
 24263  0015EE  0E00               	movlw	0
 24264  0015F0  6E01               	movwf	USBTransferOnePacket@dir,c
 24265  0015F2  C094  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 24266  0015F6  C095  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 24267  0015FA  0E40               	movlw	64
 24268  0015FC  6E04               	movwf	USBTransferOnePacket@len,c
 24269  0015FE  0E02               	movlw	2
 24270  001600  EC63  F020         	call	_USBTransferOnePacket
 24271  001604  C001  F092         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 24272  001608  C002  F093         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 24273                           
 24274                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 24275  00160C  0E04               	movlw	4
 24276  00160E  0100               	movlb	0	; () banked
 24277  001610  6FA7               	movwf	_MSDWriteState& (0+255),b
 24278                           
 24279                           ;usb_device_msd.c: 1260: }
 24280  001612  D021               	goto	l695
 24281  001614                     l693:
 24282                           
 24283                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 24284                           
 24285                           ; BSR set to: 0
 24286  001614  C1E6  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 24287  001618  C1E7  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 24288  00161C  D801               	call	u7208
 24289  00161E  D00A               	goto	u7209
 24290  001620                     u7208:
 24291  001620  0005               	push	
 24292  001622  6EFA               	movwf	pclath,c
 24293  001624  0101               	movlb	1	; () banked
 24294  001626  51E2               	movf	(_LUN+10)& (0+255),w,b
 24295  001628  6EFD               	movwf	tosl,c
 24296  00162A  51E3               	movf	(_LUN+11)& (0+255),w,b
 24297  00162C  6EFE               	movwf	tosh,c
 24298  00162E  6AFF               	clrf	tosu,c
 24299  001630  50FA               	movf	pclath,w,c
 24300  001632  0012               	return		;indir
 24301  001634                     u7209:
 24302  001634  0900               	iorlw	0
 24303  001636  B4D8               	btfsc	status,2,c
 24304  001638  D00C               	goto	l696
 24305                           
 24306                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 24307  00163A  0E01               	movlw	1
 24308  00163C  010D               	movlb	13	; () banked
 24309  00163E  6F8C               	movwf	140,b	;volatile
 24310                           
 24311                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 24312  001640  0101               	movlb	1	; () banked
 24313  001642  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24314  001644  0BF0               	andlw	-16
 24315  001646  0902               	iorlw	2
 24316  001648  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24317                           
 24318                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 24319  00164A  0E27               	movlw	39
 24320  00164C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24321                           
 24322                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 24323  00164E  0E00               	movlw	0
 24324  001650  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24325  001652                     l696:
 24326                           
 24327                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 24328  001652  0E02               	movlw	2
 24329  001654  D093               	goto	L43
 24330  001656                     l695:
 24331                           
 24332                           ; BSR set to: 0
 24333                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 24334                           
 24335                           ; BSR set to: 0
 24336                           
 24337                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 24338                           
 24339                           ; BSR set to: 0
 24340  001656  5192               	movf	_USBMSDOutHandle& (0+255),w,b
 24341  001658  1193               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 24342  00165A  B4D8               	btfsc	status,2,c
 24343  00165C  D006               	goto	l698
 24344                           
 24345                           ; BSR set to: 0
 24346  00165E  C092  FFD9         	movff	_USBMSDOutHandle,fsr2l
 24347  001662  C093  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 24348  001666  BEDF               	btfsc	indf2,7,c
 24349  001668  D09E               	goto	l687
 24350  00166A                     l698:
 24351                           
 24352                           ; BSR set to: 0
 24353                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 24354                           
 24355                           ; BSR set to: 0
 24356  00166A  EE20 F001          	lfsr	2,1
 24357  00166E  5192               	movf	_USBMSDOutHandle& (0+255),w,b
 24358  001670  26D9               	addwf	fsr2l,f,c
 24359  001672  5193               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 24360  001674  22DA               	addwfc	fsr2h,f,c
 24361  001676  50DF               	movf	indf2,w,c
 24362  001678  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24363  00167A  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 24364  00167E  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24365  001680  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24366  001682  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 24367  001684  5031               	movf	??_MSDWriteHandler+1,w,c
 24368  001686  0101               	movlb	1	; () banked
 24369  001688  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 24370  00168A  5032               	movf	??_MSDWriteHandler+2,w,c
 24371  00168C  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 24372  00168E  5033               	movf	??_MSDWriteHandler+3,w,c
 24373  001690  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 24374  001692  5034               	movf	??_MSDWriteHandler+4,w,c
 24375  001694  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 24376                           
 24377                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 24378  001696  0100               	movlb	0	; () banked
 24379  001698  EE20 F001          	lfsr	2,1
 24380  00169C  5192               	movf	_USBMSDOutHandle& (0+255),w,b
 24381  00169E  26D9               	addwf	fsr2l,f,c
 24382  0016A0  5193               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 24383  0016A2  22DA               	addwfc	fsr2h,f,c
 24384  0016A4  50DF               	movf	indf2,w,c
 24385  0016A6  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24386  0016A8  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 24387  0016AC  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24388  0016AE  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24389  0016B0  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 24390  0016B2  5031               	movf	??_MSDWriteHandler+1,w,c
 24391  0016B4  010D               	movlb	13	; () banked
 24392  0016B6  5F88               	subwf	136,f,b	;volatile
 24393  0016B8  5032               	movf	??_MSDWriteHandler+2,w,c
 24394  0016BA  5B89               	subwfb	137,f,b	;volatile
 24395  0016BC  5033               	movf	??_MSDWriteHandler+3,w,c
 24396  0016BE  5B8A               	subwfb	138,f,b	;volatile
 24397  0016C0  5034               	movf	??_MSDWriteHandler+4,w,c
 24398  0016C2  5B8B               	subwfb	139,f,b	;volatile
 24399                           
 24400                           ; BSR set to: 13
 24401                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 24402  0016C4  0E40               	movlw	64
 24403  0016C6  0100               	movlb	0	; () banked
 24404  0016C8  2794               	addwf	_ptrNextData& (0+255),f,b
 24405  0016CA  0E00               	movlw	0
 24406  0016CC  2395               	addwfc	(_ptrNextData+1)& (0+255),f,b
 24407                           
 24408                           ; BSR set to: 0
 24409                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 24410  0016CE  0E03               	movlw	3
 24411  0016D0  D056               	goto	L23
 24412  0016D2                     
 24413                           ; BSR set to: 0
 24414                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 24415                           
 24416                           ; BSR set to: 0
 24417  0016D2  010D               	movlb	13	; () banked
 24418  0016D4  518C               	movf	140,w,b	;volatile
 24419  0016D6  A4D8               	btfss	status,2,c
 24420  0016D8  D03C               	goto	l703
 24421                           
 24422                           ; BSR set to: 13
 24423                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 24424  0016DA  C1E6  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 24425  0016DE  C1E7  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 24426  0016E2  C080  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 24427  0016E6  C081  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 24428  0016EA  C082  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 24429  0016EE  C083  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 24430  0016F2  0E00               	movlw	0
 24431  0016F4  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 24432  0016F6  0E06               	movlw	6
 24433  0016F8  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 24434  0016FA  0100               	movlb	0	; () banked
 24435  0016FC  5180               	movf	_LBA& (0+255),w,b
 24436  0016FE  1181               	iorwf	(_LBA+1)& (0+255),w,b
 24437  001700  1182               	iorwf	(_LBA+2)& (0+255),w,b
 24438  001702  1183               	iorwf	(_LBA+3)& (0+255),w,b
 24439  001704  A4D8               	btfss	status,2,c
 24440  001706  D002               	goto	u7250
 24441  001708  0E01               	movlw	1
 24442  00170A  D001               	goto	u7260
 24443  00170C                     u7250:
 24444  00170C  0E00               	movlw	0
 24445  00170E                     u7260:
 24446  00170E  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 24447  001710  D801               	call	u7278
 24448  001712  D00A               	goto	u7279
 24449  001714                     u7278:
 24450  001714  0005               	push	
 24451  001716  6EFA               	movwf	pclath,c
 24452  001718  0101               	movlb	1	; () banked
 24453  00171A  51E4               	movf	(_LUN+12)& (0+255),w,b
 24454  00171C  6EFD               	movwf	tosl,c
 24455  00171E  51E5               	movf	(_LUN+13)& (0+255),w,b
 24456  001720  6EFE               	movwf	tosh,c
 24457  001722  6AFF               	clrf	tosu,c
 24458  001724  50FA               	movf	pclath,w,c
 24459  001726  0012               	return		;indir
 24460  001728                     u7279:
 24461  001728  06E8               	decf	wreg,f,c
 24462  00172A  B4D8               	btfsc	status,2,c
 24463  00172C  D012               	goto	l703
 24464                           
 24465                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 24466  00172E  0E64               	movlw	100
 24467  001730  0100               	movlb	0	; () banked
 24468  001732  61A6               	cpfslt	_MSDRetryAttempt& (0+255),b
 24469  001734  D002               	goto	l702
 24470                           
 24471                           ; BSR set to: 0
 24472                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 24473  001736  2BA6               	incf	_MSDRetryAttempt& (0+255),f,b
 24474                           
 24475                           ;usb_device_msd.c: 1314: break;
 24476  001738  D036               	goto	l687
 24477  00173A                     l702:
 24478                           
 24479                           ; BSR set to: 0
 24480                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 24481                           
 24482                           ; BSR set to: 0
 24483  00173A  0E01               	movlw	1
 24484  00173C  010D               	movlb	13	; () banked
 24485  00173E  6F8C               	movwf	140,b	;volatile
 24486                           
 24487                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 24488  001740  0101               	movlb	1	; () banked
 24489  001742  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24490  001744  0BF0               	andlw	-16
 24491  001746  0903               	iorlw	3
 24492  001748  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24493                           
 24494                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 24495  00174A  0E00               	movlw	0
 24496  00174C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24497                           
 24498                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 24499  00174E  0E00               	movlw	0
 24500  001750  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24501  001752                     l703:
 24502                           
 24503                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 24504                           
 24505                           ; BSR set to: 1
 24506                           
 24507                           ; BSR set to: 1
 24508                           
 24509                           ; BSR set to: 1
 24510  001752  0E01               	movlw	1
 24511  001754  0100               	movlb	0	; () banked
 24512  001756  2780               	addwf	_LBA& (0+255),f,b
 24513  001758  0E00               	movlw	0
 24514  00175A  2381               	addwfc	(_LBA+1)& (0+255),f,b
 24515  00175C  2382               	addwfc	(_LBA+2)& (0+255),f,b
 24516  00175E  2383               	addwfc	(_LBA+3)& (0+255),f,b
 24517                           
 24518                           ; BSR set to: 0
 24519                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 24520  001760  078C               	decf	_TransferLength& (0+255),f,b
 24521  001762  A0D8               	btfss	status,0,c
 24522  001764  078D               	decf	(_TransferLength+1)& (0+255),f,b
 24523                           
 24524                           ; BSR set to: 0
 24525                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 24526  001766  0E01               	movlw	1
 24527  001768  D00A               	goto	L23
 24528  00176A                     
 24529                           ; BSR set to: 0
 24530                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 24531                           
 24532                           ; BSR set to: 0
 24533  00176A  0E02               	movlw	2
 24534  00176C  010D               	movlb	13	; () banked
 24535  00176E  6F8C               	movwf	140,b	;volatile
 24536                           
 24537                           ; BSR set to: 13
 24538                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 24539  001770  0E00               	movlw	0
 24540  001772  6E01               	movwf	USBStallEndpoint@dir,c
 24541  001774  0E02               	movlw	2
 24542  001776  ECD9  F01E         	call	_USBStallEndpoint
 24543                           
 24544                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 24545  00177A  0E00               	movlw	0
 24546  00177C                     L43:
 24547  00177C  0100               	movlb	0	; () banked
 24548  00177E                     L23:
 24549  00177E  6FA7               	movwf	_MSDWriteState& (0+255),b
 24550                           
 24551                           ; BSR set to: 0
 24552                           ;usb_device_msd.c: 1345: }
 24553                           
 24554                           ;usb_device_msd.c: 1344: break;
 24555  001780  D012               	goto	l687
 24556  001782                     l684:
 24557                           
 24558                           ; BSR set to: 0
 24559  001782  0100               	movlb	0	; () banked
 24560  001784  51A7               	movf	_MSDWriteState& (0+255),w,b
 24561                           
 24562                           ; Switch size 1, requested type "space"
 24563                           ; Number of cases is 5, Range of values is 0 to 4
 24564                           ; switch strategies available:
 24565                           ; Name         Instructions Cycles
 24566                           ; simple_byte           16     9 (average)
 24567                           ;	Chosen strategy is simple_byte
 24568  001786  0A00               	xorlw	0	; case 0
 24569  001788  B4D8               	btfsc	status,2,c
 24570  00178A  D6B7               	goto	l685
 24571  00178C  0A01               	xorlw	1	; case 1
 24572  00178E  B4D8               	btfsc	status,2,c
 24573  001790  D707               	goto	l690
 24574  001792  0A03               	xorlw	3	; case 2
 24575  001794  B4D8               	btfsc	status,2,c
 24576  001796  D79D               	goto	l699
 24577  001798  0A01               	xorlw	1	; case 3
 24578  00179A  B4D8               	btfsc	status,2,c
 24579  00179C  D716               	goto	l692
 24580  00179E  0A07               	xorlw	7	; case 4
 24581  0017A0  B4D8               	btfsc	status,2,c
 24582  0017A2  D759               	goto	l695
 24583  0017A4  D7E2               	goto	l704
 24584  0017A6                     l687:
 24585                           
 24586                           ;usb_device_msd.c: 1347: return MSDWriteState;
 24587                           
 24588                           ; BSR set to: 0
 24589  0017A6  0100               	movlb	0	; () banked
 24590  0017A8  51A7               	movf	_MSDWriteState& (0+255),w,b
 24591  0017AA  0012               	return	
 24592  0017AC                     __end_of_MSDWriteHandler:
 24593                           	opt stack 0
 24594                           tosu	equ	0xFFF
 24595                           tosh	equ	0xFFE
 24596                           tosl	equ	0xFFD
 24597                           pclath	equ	0xFFA
 24598                           tblptru	equ	0xFF8
 24599                           tblptrh	equ	0xFF7
 24600                           tblptrl	equ	0xFF6
 24601                           tablat	equ	0xFF5
 24602                           prodh	equ	0xFF4
 24603                           prodl	equ	0xFF3
 24604                           intcon	equ	0xFF2
 24605                           intcon2	equ	0xFF1
 24606                           intcon3	equ	0xFF0
 24607                           indf0	equ	0xFEF
 24608                           postinc0	equ	0xFEE
 24609                           fsr0h	equ	0xFEA
 24610                           fsr0l	equ	0xFE9
 24611                           wreg	equ	0xFE8
 24612                           indf1	equ	0xFE7
 24613                           postdec1	equ	0xFE5
 24614                           plusw1	equ	0xFE3
 24615                           fsr1h	equ	0xFE2
 24616                           fsr1l	equ	0xFE1
 24617                           indf2	equ	0xFDF
 24618                           postinc2	equ	0xFDE
 24619                           postdec2	equ	0xFDD
 24620                           plusw2	equ	0xFDB
 24621                           fsr2h	equ	0xFDA
 24622                           fsr2l	equ	0xFD9
 24623                           status	equ	0xFD8
 24624                           
 24625 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 24626 ;; Defined at:
 24627 ;;		line 34 in file "external_flash.c"
 24628 ;; Parameters:    Size  Location     Type
 24629 ;;  config          2    0[COMRAM] PTR void 
 24630 ;;		 -> NULL(0), 
 24631 ;; Auto vars:     Size  Location     Type
 24632 ;;		None
 24633 ;; Return value:  Size  Location     Type
 24634 ;;                  1    wreg      unsigned char 
 24635 ;; Registers used:
 24636 ;;		wreg
 24637 ;; Tracked objects:
 24638 ;;		On entry : 0/0
 24639 ;;		On exit  : 0/0
 24640 ;;		Unchanged: 0/0
 24641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24646 ;;Total ram usage:        2 bytes
 24647 ;; Hardware stack levels used:    1
 24648 ;; This function calls:
 24649 ;;		Nothing
 24650 ;; This function is called by:
 24651 ;;		_MSDWriteHandler
 24652 ;;		_MSDProcessCommandMediaPresent
 24653 ;; This function uses a non-reentrant model
 24654 ;;
 24655                           
 24656                           	psect	text109
 24657  007B68                     __ptext109:
 24658                           	opt stack 0
 24659  007B68                     _ExternalFlash_WriteProtectStateGet:
 24660                           	opt stack 25
 24661                           
 24662                           ;external_flash.c: 37: return 0;
 24663                           
 24664                           ; BSR set to: 0
 24665                           ;incstack = 0
 24666  007B68  0E00               	movlw	0
 24667  007B6A  0012               	return	
 24668  007B6C                     __end_of_ExternalFlash_WriteProtectStateGet:
 24669                           	opt stack 0
 24670                           tosu	equ	0xFFF
 24671                           tosh	equ	0xFFE
 24672                           tosl	equ	0xFFD
 24673                           pclath	equ	0xFFA
 24674                           tblptru	equ	0xFF8
 24675                           tblptrh	equ	0xFF7
 24676                           tblptrl	equ	0xFF6
 24677                           tablat	equ	0xFF5
 24678                           prodh	equ	0xFF4
 24679                           prodl	equ	0xFF3
 24680                           intcon	equ	0xFF2
 24681                           intcon2	equ	0xFF1
 24682                           intcon3	equ	0xFF0
 24683                           indf0	equ	0xFEF
 24684                           postinc0	equ	0xFEE
 24685                           fsr0h	equ	0xFEA
 24686                           fsr0l	equ	0xFE9
 24687                           wreg	equ	0xFE8
 24688                           indf1	equ	0xFE7
 24689                           postdec1	equ	0xFE5
 24690                           plusw1	equ	0xFE3
 24691                           fsr1h	equ	0xFE2
 24692                           fsr1l	equ	0xFE1
 24693                           indf2	equ	0xFDF
 24694                           postinc2	equ	0xFDE
 24695                           postdec2	equ	0xFDD
 24696                           plusw2	equ	0xFDB
 24697                           fsr2h	equ	0xFDA
 24698                           fsr2l	equ	0xFD9
 24699                           status	equ	0xFD8
 24700                           
 24701 ;; *************** function _ExternalFlash_SectorWrite *****************
 24702 ;; Defined at:
 24703 ;;		line 56 in file "external_flash.c"
 24704 ;; Parameters:    Size  Location     Type
 24705 ;;  config          2   36[COMRAM] PTR void 
 24706 ;;		 -> NULL(0), 
 24707 ;;  sector_addr     4   38[COMRAM] unsigned long 
 24708 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 24709 ;;		 -> msd_buffer(512), 
 24710 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 24711 ;; Auto vars:     Size  Location     Type
 24712 ;;  page            2   45[COMRAM] unsigned int 
 24713 ;; Return value:  Size  Location     Type
 24714 ;;                  1    wreg      unsigned char 
 24715 ;; Registers used:
 24716 ;;		wreg, status,2, status,0, cstack
 24717 ;; Tracked objects:
 24718 ;;		On entry : 0/0
 24719 ;;		On exit  : 0/0
 24720 ;;		Unchanged: 0/0
 24721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24722 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24723 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24725 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24726 ;;Total ram usage:       11 bytes
 24727 ;; Hardware stack levels used:    1
 24728 ;; Hardware stack levels required when called:    6
 24729 ;; This function calls:
 24730 ;;		_flash_page_write
 24731 ;; This function is called by:
 24732 ;;		_MSDWriteHandler
 24733 ;; This function uses a non-reentrant model
 24734 ;;
 24735                           
 24736                           	psect	text110
 24737  0074C4                     __ptext110:
 24738                           	opt stack 0
 24739  0074C4                     _ExternalFlash_SectorWrite:
 24740                           	opt stack 19
 24741                           
 24742                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 24743                           
 24744                           ;incstack = 0
 24745  0074C4  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 24746  0074C8  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 24747                           
 24748                           ;external_flash.c: 61: if(sector_addr >= 8196)
 24749  0074CC  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 24750  0074CE  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 24751  0074D0  E106               	bnz	u6740
 24752  0074D2  0E04               	movlw	4
 24753  0074D4  5C27               	subwf	ExternalFlash_SectorWrite@sector_addr,w,c
 24754  0074D6  0E20               	movlw	32
 24755  0074D8  5828               	subwfb	ExternalFlash_SectorWrite@sector_addr+1,w,c
 24756  0074DA  A0D8               	btfss	status,0,c
 24757  0074DC  D002               	goto	l1739
 24758  0074DE                     u6740:
 24759                           
 24760                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 24761  0074DE  0E00               	movlw	0
 24762  0074E0  0012               	return	
 24763  0074E2                     l1739:
 24764                           
 24765                           ;external_flash.c: 64: };external_flash.c: 67: flash_page_write(page, buffer);
 24766  0074E2  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 24767  0074E6  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 24768  0074EA  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 24769  0074EE  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 24770  0074F2  EC20  F037         	call	_flash_page_write	;wreg free
 24771                           
 24772                           ;external_flash.c: 69: return 1;
 24773  0074F6  0E01               	movlw	1
 24774  0074F8  0012               	return	
 24775  0074FA                     __end_of_ExternalFlash_SectorWrite:
 24776                           	opt stack 0
 24777                           tosu	equ	0xFFF
 24778                           tosh	equ	0xFFE
 24779                           tosl	equ	0xFFD
 24780                           pclath	equ	0xFFA
 24781                           tblptru	equ	0xFF8
 24782                           tblptrh	equ	0xFF7
 24783                           tblptrl	equ	0xFF6
 24784                           tablat	equ	0xFF5
 24785                           prodh	equ	0xFF4
 24786                           prodl	equ	0xFF3
 24787                           intcon	equ	0xFF2
 24788                           intcon2	equ	0xFF1
 24789                           intcon3	equ	0xFF0
 24790                           indf0	equ	0xFEF
 24791                           postinc0	equ	0xFEE
 24792                           fsr0h	equ	0xFEA
 24793                           fsr0l	equ	0xFE9
 24794                           wreg	equ	0xFE8
 24795                           indf1	equ	0xFE7
 24796                           postdec1	equ	0xFE5
 24797                           plusw1	equ	0xFE3
 24798                           fsr1h	equ	0xFE2
 24799                           fsr1l	equ	0xFE1
 24800                           indf2	equ	0xFDF
 24801                           postinc2	equ	0xFDE
 24802                           postdec2	equ	0xFDD
 24803                           plusw2	equ	0xFDB
 24804                           fsr2h	equ	0xFDA
 24805                           fsr2l	equ	0xFD9
 24806                           status	equ	0xFD8
 24807                           
 24808 ;; *************** function _flash_page_write *****************
 24809 ;; Defined at:
 24810 ;;		line 429 in file "flash.c"
 24811 ;; Parameters:    Size  Location     Type
 24812 ;;  page            2   31[COMRAM] unsigned int 
 24813 ;;  data            2   33[COMRAM] PTR unsigned char 
 24814 ;;		 -> buffer(512), msd_buffer(512), 
 24815 ;; Auto vars:     Size  Location     Type
 24816 ;;  match           1   35[COMRAM] enum E6878
 24817 ;; Return value:  Size  Location     Type
 24818 ;;                  1    wreg      void 
 24819 ;; Registers used:
 24820 ;;		wreg, status,2, status,0, cstack
 24821 ;; Tracked objects:
 24822 ;;		On entry : 0/0
 24823 ;;		On exit  : 0/0
 24824 ;;		Unchanged: 0/0
 24825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24829 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24830 ;;Total ram usage:        5 bytes
 24831 ;; Hardware stack levels used:    1
 24832 ;; Hardware stack levels required when called:    5
 24833 ;; This function calls:
 24834 ;;		__flash_compare_page_to_buffer
 24835 ;;		__flash_write_page_from_buffer
 24836 ;;		__flash_write_to_buffer
 24837 ;;		_spi_set_configuration
 24838 ;; This function is called by:
 24839 ;;		_ExternalFlash_SectorWrite
 24840 ;;		_fat_format
 24841 ;; This function uses a non-reentrant model
 24842 ;;
 24843                           
 24844                           	psect	text111
 24845  006E40                     __ptext111:
 24846                           	opt stack 0
 24847  006E40                     _flash_page_write:
 24848                           	opt stack 22
 24849                           
 24850                           ;flash.c: 431: flashMatchResult_t match;;flash.c: 434: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 24851                           
 24852                           ;incstack = 0
 24853  006E40  0E00               	movlw	0
 24854  006E42  ECE8  F03C         	call	_spi_set_configuration
 24855                           
 24856                           ;flash.c: 437: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 24857  006E46  0E00               	movlw	0
 24858  006E48  6E15               	movwf	__flash_write_to_buffer@start+1,c
 24859  006E4A  0E00               	movlw	0
 24860  006E4C  6E14               	movwf	__flash_write_to_buffer@start,c
 24861  006E4E  C022  F016         	movff	flash_page_write@data,__flash_write_to_buffer@data
 24862  006E52  C023  F017         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 24863  006E56  0E02               	movlw	2
 24864  006E58  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 24865  006E5A  0E00               	movlw	0
 24866  006E5C  6E18               	movwf	__flash_write_to_buffer@data_length,c
 24867  006E5E  0E00               	movlw	0
 24868  006E60  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 24869  006E62  EC1A  F038         	call	__flash_write_to_buffer	;wreg free
 24870                           
 24871                           ;flash.c: 440: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 24872  006E66  C020  F014         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 24873  006E6A  C021  F015         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 24874  006E6E  0E00               	movlw	0
 24875  006E70  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 24876  006E72  ECC0  F030         	call	__flash_compare_page_to_buffer	;wreg free
 24877  006E76  6E24               	movwf	flash_page_write@match,c
 24878                           
 24879                           ;flash.c: 443: if(match==DATA_DOES_NOT_MATCH)
 24880  006E78  0424               	decf	flash_page_write@match,w,c
 24881  006E7A  A4D8               	btfss	status,2,c
 24882  006E7C  D008               	goto	l1696
 24883                           
 24884                           ;flash.c: 444: {;flash.c: 445: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 24885  006E7E  C020  F014         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 24886  006E82  C021  F015         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 24887  006E86  0E00               	movlw	0
 24888  006E88  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 24889  006E8A  EC47  F036         	call	__flash_write_page_from_buffer	;wreg free
 24890  006E8E                     l1696:
 24891                           
 24892                           ;flash.c: 446: };flash.c: 449: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 24893  006E8E  0E01               	movlw	1
 24894  006E90  ECE8  F03C         	call	_spi_set_configuration
 24895  006E94  0012               	return		;funcret
 24896  006E96                     __end_of_flash_page_write:
 24897                           	opt stack 0
 24898                           tosu	equ	0xFFF
 24899                           tosh	equ	0xFFE
 24900                           tosl	equ	0xFFD
 24901                           pclath	equ	0xFFA
 24902                           tblptru	equ	0xFF8
 24903                           tblptrh	equ	0xFF7
 24904                           tblptrl	equ	0xFF6
 24905                           tablat	equ	0xFF5
 24906                           prodh	equ	0xFF4
 24907                           prodl	equ	0xFF3
 24908                           intcon	equ	0xFF2
 24909                           intcon2	equ	0xFF1
 24910                           intcon3	equ	0xFF0
 24911                           indf0	equ	0xFEF
 24912                           postinc0	equ	0xFEE
 24913                           fsr0h	equ	0xFEA
 24914                           fsr0l	equ	0xFE9
 24915                           wreg	equ	0xFE8
 24916                           indf1	equ	0xFE7
 24917                           postdec1	equ	0xFE5
 24918                           plusw1	equ	0xFE3
 24919                           fsr1h	equ	0xFE2
 24920                           fsr1l	equ	0xFE1
 24921                           indf2	equ	0xFDF
 24922                           postinc2	equ	0xFDE
 24923                           postdec2	equ	0xFDD
 24924                           plusw2	equ	0xFDB
 24925                           fsr2h	equ	0xFDA
 24926                           fsr2l	equ	0xFD9
 24927                           status	equ	0xFD8
 24928                           
 24929 ;; *************** function _MSDReadHandler *****************
 24930 ;; Defined at:
 24931 ;;		line 1038 in file "usb_device_msd.c"
 24932 ;; Parameters:    Size  Location     Type
 24933 ;;		None
 24934 ;; Auto vars:     Size  Location     Type
 24935 ;;		None
 24936 ;; Return value:  Size  Location     Type
 24937 ;;                  1    wreg      unsigned char 
 24938 ;; Registers used:
 24939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24940 ;; Tracked objects:
 24941 ;;		On entry : 0/0
 24942 ;;		On exit  : 0/0
 24943 ;;		Unchanged: 0/0
 24944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24947 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24948 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24949 ;;Total ram usage:        4 bytes
 24950 ;; Hardware stack levels used:    1
 24951 ;; Hardware stack levels required when called:    8
 24952 ;; This function calls:
 24953 ;;		_ExternalFlash_SectorRead
 24954 ;;		_MSDCheckForErrorCases
 24955 ;;		_USBStallEndpoint
 24956 ;;		_USBTransferOnePacket
 24957 ;; This function is called by:
 24958 ;;		_MSDProcessCommandMediaPresent
 24959 ;; This function uses a non-reentrant model
 24960 ;;
 24961                           
 24962                           	psect	text112
 24963  002B16                     __ptext112:
 24964                           	opt stack 0
 24965  002B16                     _MSDReadHandler:
 24966                           	opt stack 18
 24967                           
 24968                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 24969                           
 24970                           ;incstack = 0
 24971  002B16  D0D6               	goto	l665
 24972  002B18                     l666:
 24973                           
 24974                           ; BSR set to: 0
 24975                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 24976  002B18  C111  F083         	movff	_gblCBW+17,_LBA+3
 24977                           
 24978                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 24979  002B1C  C112  F082         	movff	_gblCBW+18,_LBA+2
 24980                           
 24981                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 24982  002B20  C113  F081         	movff	_gblCBW+19,_LBA+1
 24983                           
 24984                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 24985  002B24  C114  F080         	movff	_gblCBW+20,_LBA
 24986                           
 24987                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 24988  002B28  C116  F08D         	movff	_gblCBW+22,_TransferLength+1
 24989                           
 24990                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 24991  002B2C  C117  F08C         	movff	_gblCBW+23,_TransferLength
 24992                           
 24993                           ; BSR set to: 0
 24994                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 24995  002B30  518C               	movf	_TransferLength& (0+255),w,b
 24996  002B32  6E37               	movwf	??_MSDReadHandler& (0+255),c
 24997  002B34  518D               	movf	(_TransferLength+1)& (0+255),w,b
 24998  002B36  6E38               	movwf	(??_MSDReadHandler+1)& (0+255),c
 24999  002B38  6A39               	clrf	(??_MSDReadHandler+2)& (0+255),c
 25000  002B3A  6A3A               	clrf	(??_MSDReadHandler+3)& (0+255),c
 25001  002B3C  0E09               	movlw	9
 25002  002B3E                     u7015:
 25003  002B3E  90D8               	bcf	status,0,c
 25004  002B40  3637               	rlcf	??_MSDReadHandler,f,c
 25005  002B42  3638               	rlcf	??_MSDReadHandler+1,f,c
 25006  002B44  3639               	rlcf	??_MSDReadHandler+2,f,c
 25007  002B46  363A               	rlcf	??_MSDReadHandler+3,f,c
 25008  002B48  2EE8               	decfsz	wreg,f,c
 25009  002B4A  D7F9               	goto	u7015
 25010  002B4C  C037  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 25011  002B50  C038  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 25012  002B54  C039  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 25013  002B58  C03A  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 25014  002B5C  ECBF  F022         	call	_MSDCheckForErrorCases	;wreg free
 25015  002B60  0900               	iorlw	0
 25016  002B62  A4D8               	btfss	status,2,c
 25017  002B64  D0C1               	goto	l668
 25018                           
 25019                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 25020                           
 25021                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 25022  002B66  0E01               	movlw	1
 25023  002B68  0100               	movlb	0	; () banked
 25024  002B6A  6FA8               	movwf	_MSDReadState& (0+255),b
 25025  002B6C                     
 25026                           ; BSR set to: 0
 25027                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 25028                           
 25029                           ; BSR set to: 0
 25030  002B6C  518C               	movf	_TransferLength& (0+255),w,b
 25031  002B6E  118D               	iorwf	(_TransferLength+1)& (0+255),w,b
 25032  002B70  A4D8               	btfss	status,2,c
 25033  002B72  D002               	goto	l670
 25034                           
 25035                           ; BSR set to: 0
 25036                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 25037  002B74  0E00               	movlw	0
 25038  002B76  D046               	goto	L24
 25039  002B78                     l670:
 25040                           
 25041                           ; BSR set to: 0
 25042                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 25043                           
 25044                           ; BSR set to: 0
 25045  002B78  078C               	decf	_TransferLength& (0+255),f,b
 25046  002B7A  A0D8               	btfss	status,0,c
 25047  002B7C  078D               	decf	(_TransferLength+1)& (0+255),f,b
 25048                           
 25049                           ; BSR set to: 0
 25050                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 25051  002B7E  0E02               	movlw	2
 25052  002B80  6FA8               	movwf	_MSDReadState& (0+255),b
 25053  002B82                     
 25054                           ; BSR set to: 0
 25055                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 25056                           
 25057                           ; BSR set to: 0
 25058  002B82  5190               	movf	_USBMSDInHandle& (0+255),w,b
 25059  002B84  1191               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25060  002B86  B4D8               	btfsc	status,2,c
 25061  002B88  D006               	goto	l672
 25062                           
 25063                           ; BSR set to: 0
 25064  002B8A  C090  FFD9         	movff	_USBMSDInHandle,fsr2l
 25065  002B8E  C091  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25066  002B92  BEDF               	btfsc	indf2,7,c
 25067  002B94  D0A9               	goto	l668
 25068  002B96                     l672:
 25069                           
 25070                           ; BSR set to: 0
 25071                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 25072                           
 25073                           ; BSR set to: 0
 25074  002B96  C1E6  F02D         	movff	_LUN+14,ExternalFlash_SectorRead@config
 25075  002B9A  C1E7  F02E         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 25076  002B9E  C080  F02F         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 25077  002BA2  C081  F030         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 25078  002BA6  C082  F031         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 25079  002BAA  C083  F032         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 25080  002BAE  0E00               	movlw	0
 25081  002BB0  6E33               	movwf	ExternalFlash_SectorRead@buffer,c
 25082  002BB2  0E06               	movlw	6
 25083  002BB4  6E34               	movwf	ExternalFlash_SectorRead@buffer+1,c
 25084  002BB6  D801               	call	u7068
 25085  002BB8  D00A               	goto	u7069
 25086  002BBA                     u7068:
 25087  002BBA  0005               	push	
 25088  002BBC  6EFA               	movwf	pclath,c
 25089  002BBE  0101               	movlb	1	; () banked
 25090  002BC0  51E0               	movf	(_LUN+8)& (0+255),w,b
 25091  002BC2  6EFD               	movwf	tosl,c
 25092  002BC4  51E1               	movf	(_LUN+9)& (0+255),w,b
 25093  002BC6  6EFE               	movwf	tosh,c
 25094  002BC8  6AFF               	clrf	tosu,c
 25095  002BCA  50FA               	movf	pclath,w,c
 25096  002BCC  0012               	return		;indir
 25097  002BCE                     u7069:
 25098  002BCE  06E8               	decf	wreg,f,c
 25099  002BD0  B4D8               	btfsc	status,2,c
 25100  002BD2  D01A               	goto	l675
 25101                           
 25102                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 25103  002BD4  0E64               	movlw	100
 25104  002BD6  0100               	movlb	0	; () banked
 25105  002BD8  61A6               	cpfslt	_MSDRetryAttempt& (0+255),b
 25106  002BDA  D002               	goto	l674
 25107                           
 25108                           ; BSR set to: 0
 25109                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 25110  002BDC  2BA6               	incf	_MSDRetryAttempt& (0+255),f,b
 25111                           
 25112                           ;usb_device_msd.c: 1088: break;
 25113  002BDE  D084               	goto	l668
 25114  002BE0                     l674:
 25115                           
 25116                           ; BSR set to: 0
 25117                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 25118                           
 25119                           ; BSR set to: 0
 25120  002BE0  0E02               	movlw	2
 25121  002BE2  010D               	movlb	13	; () banked
 25122  002BE4  6F8C               	movwf	140,b	;volatile
 25123                           
 25124                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 25125  002BE6  0101               	movlb	1	; () banked
 25126  002BE8  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25127  002BEA  0BF0               	andlw	-16
 25128  002BEC  0903               	iorlw	3
 25129  002BEE  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25130                           
 25131                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 25132  002BF0  0E00               	movlw	0
 25133  002BF2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25134                           
 25135                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 25136  002BF4  0E00               	movlw	0
 25137  002BF6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25138                           
 25139                           ; BSR set to: 1
 25140                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 25141  002BF8  0E01               	movlw	1
 25142  002BFA  6E01               	movwf	USBStallEndpoint@dir,c
 25143  002BFC  0E02               	movlw	2
 25144  002BFE  ECD9  F01E         	call	_USBStallEndpoint
 25145  002C02  D05D               	goto	l9989
 25146  002C04                     L24:
 25147  002C04  6FA8               	movwf	_MSDReadState& (0+255),b
 25148                           
 25149                           ;usb_device_msd.c: 1109: break;
 25150  002C06  D070               	goto	l668
 25151  002C08                     l675:
 25152                           
 25153                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 25154                           
 25155                           ; BSR set to: 0
 25156                           
 25157                           ; BSR set to: 0
 25158  002C08  0E01               	movlw	1
 25159  002C0A  0100               	movlb	0	; () banked
 25160  002C0C  2780               	addwf	_LBA& (0+255),f,b
 25161  002C0E  0E00               	movlw	0
 25162  002C10  2381               	addwfc	(_LBA+1)& (0+255),f,b
 25163  002C12  2382               	addwfc	(_LBA+2)& (0+255),f,b
 25164  002C14  2383               	addwfc	(_LBA+3)& (0+255),f,b
 25165                           
 25166                           ; BSR set to: 0
 25167                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 25168  002C16  0E00               	movlw	0
 25169  002C18  010D               	movlb	13	; () banked
 25170  002C1A  6F88               	movwf	136,b	;volatile
 25171  002C1C  0E02               	movlw	2
 25172  002C1E  6F89               	movwf	137,b	;volatile
 25173  002C20  0E00               	movlw	0
 25174  002C22  6F8A               	movwf	138,b	;volatile
 25175  002C24  0E00               	movlw	0
 25176  002C26  6F8B               	movwf	139,b	;volatile
 25177                           
 25178                           ; BSR set to: 13
 25179                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 25180  002C28  0E00               	movlw	0
 25181  002C2A  0100               	movlb	0	; () banked
 25182  002C2C  6F94               	movwf	_ptrNextData& (0+255),b
 25183  002C2E  0E06               	movlw	6
 25184  002C30  6F95               	movwf	(_ptrNextData+1)& (0+255),b
 25185                           
 25186                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 25187  002C32  0E03               	movlw	3
 25188  002C34  6FA8               	movwf	_MSDReadState& (0+255),b
 25189  002C36                     
 25190                           ; BSR set to: 0
 25191                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 25192                           
 25193                           ; BSR set to: 0
 25194  002C36  010D               	movlb	13	; () banked
 25195  002C38  5188               	movf	136,w,b	;volatile
 25196  002C3A  1189               	iorwf	137,w,b	;volatile
 25197  002C3C  118A               	iorwf	138,w,b	;volatile
 25198  002C3E  118B               	iorwf	139,w,b	;volatile
 25199  002C40  A4D8               	btfss	status,2,c
 25200  002C42  D002               	goto	l677
 25201                           
 25202                           ; BSR set to: 13
 25203                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 25204  002C44  0E01               	movlw	1
 25205  002C46  D03C               	goto	L26
 25206  002C48                     l677:
 25207                           
 25208                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 25209                           
 25210                           ; BSR set to: 0
 25211  002C48  0E04               	movlw	4
 25212  002C4A  0100               	movlb	0	; () banked
 25213  002C4C  6FA8               	movwf	_MSDReadState& (0+255),b
 25214  002C4E                     
 25215                           ; BSR set to: 0
 25216                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 25217                           
 25218                           ; BSR set to: 0
 25219  002C4E  5190               	movf	_USBMSDInHandle& (0+255),w,b
 25220  002C50  1191               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25221  002C52  B4D8               	btfsc	status,2,c
 25222  002C54  D006               	goto	l679
 25223                           
 25224                           ; BSR set to: 0
 25225  002C56  C090  FFD9         	movff	_USBMSDInHandle,fsr2l
 25226  002C5A  C091  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25227  002C5E  BEDF               	btfsc	indf2,7,c
 25228  002C60  D043               	goto	l668
 25229  002C62                     l679:
 25230                           
 25231                           ; BSR set to: 0
 25232                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 25233                           
 25234                           ; BSR set to: 0
 25235  002C62  0E01               	movlw	1
 25236  002C64  6E01               	movwf	USBTransferOnePacket@dir,c
 25237  002C66  C094  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 25238  002C6A  C095  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 25239  002C6E  0E40               	movlw	64
 25240  002C70  6E04               	movwf	USBTransferOnePacket@len,c
 25241  002C72  0E02               	movlw	2
 25242  002C74  EC63  F020         	call	_USBTransferOnePacket
 25243  002C78  C001  F090         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 25244  002C7C  C002  F091         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 25245                           
 25246                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 25247  002C80  0E03               	movlw	3
 25248  002C82  0100               	movlb	0	; () banked
 25249  002C84  6FA8               	movwf	_MSDReadState& (0+255),b
 25250                           
 25251                           ; BSR set to: 0
 25252                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 25253  002C86  0E40               	movlw	64
 25254  002C88  0101               	movlb	1	; () banked
 25255  002C8A  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 25256  002C8C  0E00               	movlw	0
 25257  002C8E  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 25258  002C90  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 25259  002C92  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 25260                           
 25261                           ; BSR set to: 1
 25262                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 25263  002C94  0E40               	movlw	64
 25264  002C96  010D               	movlb	13	; () banked
 25265  002C98  5F88               	subwf	136,f,b	;volatile
 25266  002C9A  0E00               	movlw	0
 25267  002C9C  5B89               	subwfb	137,f,b	;volatile
 25268  002C9E  5B8A               	subwfb	138,f,b	;volatile
 25269  002CA0  5B8B               	subwfb	139,f,b	;volatile
 25270                           
 25271                           ; BSR set to: 13
 25272                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 25273  002CA2  0E40               	movlw	64
 25274  002CA4  0100               	movlb	0	; () banked
 25275  002CA6  2794               	addwf	_ptrNextData& (0+255),f,b
 25276  002CA8  0E00               	movlw	0
 25277  002CAA  2395               	addwfc	(_ptrNextData+1)& (0+255),f,b
 25278                           
 25279                           ;usb_device_msd.c: 1149: break;
 25280  002CAC  D01D               	goto	l668
 25281  002CAE                     
 25282                           ; BSR set to: 0
 25283                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 25284                           
 25285                           ; BSR set to: 0
 25286  002CAE  0E02               	movlw	2
 25287  002CB0  010D               	movlb	13	; () banked
 25288  002CB2  6F8C               	movwf	140,b	;volatile
 25289                           
 25290                           ; BSR set to: 13
 25291                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 25292  002CB4  0E01               	movlw	1
 25293  002CB6  6E01               	movwf	USBStallEndpoint@dir,c
 25294  002CB8  0E02               	movlw	2
 25295  002CBA  ECD9  F01E         	call	_USBStallEndpoint
 25296  002CBE                     l9989:
 25297                           
 25298                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 25299  002CBE  0E00               	movlw	0
 25300  002CC0                     L26:
 25301  002CC0  0100               	movlb	0	; () banked
 25302  002CC2  D7A0               	goto	L24
 25303  002CC4                     l665:
 25304                           
 25305                           ; BSR set to: 0
 25306  002CC4  0100               	movlb	0	; () banked
 25307  002CC6  51A8               	movf	_MSDReadState& (0+255),w,b
 25308                           
 25309                           ; Switch size 1, requested type "space"
 25310                           ; Number of cases is 5, Range of values is 0 to 4
 25311                           ; switch strategies available:
 25312                           ; Name         Instructions Cycles
 25313                           ; simple_byte           16     9 (average)
 25314                           ;	Chosen strategy is simple_byte
 25315  002CC8  0A00               	xorlw	0	; case 0
 25316  002CCA  B4D8               	btfsc	status,2,c
 25317  002CCC  D725               	goto	l666
 25318  002CCE  0A01               	xorlw	1	; case 1
 25319  002CD0  B4D8               	btfsc	status,2,c
 25320  002CD2  D74C               	goto	l669
 25321  002CD4  0A03               	xorlw	3	; case 2
 25322  002CD6  B4D8               	btfsc	status,2,c
 25323  002CD8  D754               	goto	l671
 25324  002CDA  0A01               	xorlw	1	; case 3
 25325  002CDC  B4D8               	btfsc	status,2,c
 25326  002CDE  D7AB               	goto	l676
 25327  002CE0  0A07               	xorlw	7	; case 4
 25328  002CE2  B4D8               	btfsc	status,2,c
 25329  002CE4  D7B4               	goto	l678
 25330  002CE6  D7E3               	goto	l680
 25331  002CE8                     l668:
 25332                           
 25333                           ;usb_device_msd.c: 1161: return MSDReadState;
 25334                           
 25335                           ; BSR set to: 0
 25336  002CE8  0100               	movlb	0	; () banked
 25337  002CEA  51A8               	movf	_MSDReadState& (0+255),w,b
 25338  002CEC  0012               	return	
 25339  002CEE                     __end_of_MSDReadHandler:
 25340                           	opt stack 0
 25341                           tosu	equ	0xFFF
 25342                           tosh	equ	0xFFE
 25343                           tosl	equ	0xFFD
 25344                           pclath	equ	0xFFA
 25345                           tblptru	equ	0xFF8
 25346                           tblptrh	equ	0xFF7
 25347                           tblptrl	equ	0xFF6
 25348                           tablat	equ	0xFF5
 25349                           prodh	equ	0xFF4
 25350                           prodl	equ	0xFF3
 25351                           intcon	equ	0xFF2
 25352                           intcon2	equ	0xFF1
 25353                           intcon3	equ	0xFF0
 25354                           indf0	equ	0xFEF
 25355                           postinc0	equ	0xFEE
 25356                           fsr0h	equ	0xFEA
 25357                           fsr0l	equ	0xFE9
 25358                           wreg	equ	0xFE8
 25359                           indf1	equ	0xFE7
 25360                           postdec1	equ	0xFE5
 25361                           plusw1	equ	0xFE3
 25362                           fsr1h	equ	0xFE2
 25363                           fsr1l	equ	0xFE1
 25364                           indf2	equ	0xFDF
 25365                           postinc2	equ	0xFDE
 25366                           postdec2	equ	0xFDD
 25367                           plusw2	equ	0xFDB
 25368                           fsr2h	equ	0xFDA
 25369                           fsr2l	equ	0xFD9
 25370                           status	equ	0xFD8
 25371                           
 25372 ;; *************** function _MSDCheckForErrorCases *****************
 25373 ;; Defined at:
 25374 ;;		line 1434 in file "usb_device_msd.c"
 25375 ;; Parameters:    Size  Location     Type
 25376 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 25377 ;; Auto vars:     Size  Location     Type
 25378 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 25379 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 25380 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 25381 ;; Return value:  Size  Location     Type
 25382 ;;                  1    wreg      unsigned char 
 25383 ;; Registers used:
 25384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25385 ;; Tracked objects:
 25386 ;;		On entry : 0/0
 25387 ;;		On exit  : 0/0
 25388 ;;		Unchanged: 0/0
 25389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25391 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25393 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25394 ;;Total ram usage:        7 bytes
 25395 ;; Hardware stack levels used:    1
 25396 ;; Hardware stack levels required when called:    2
 25397 ;; This function calls:
 25398 ;;		_MSDErrorHandler
 25399 ;; This function is called by:
 25400 ;;		_MSDProcessCommandMediaPresent
 25401 ;;		_MSDReadHandler
 25402 ;;		_MSDWriteHandler
 25403 ;; This function uses a non-reentrant model
 25404 ;;
 25405                           
 25406                           	psect	text113
 25407  00457E                     __ptext113:
 25408                           	opt stack 0
 25409  00457E                     _MSDCheckForErrorCases:
 25410                           	opt stack 23
 25411                           
 25412                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 25413                           
 25414                           ; BSR set to: 0
 25415                           ;incstack = 0
 25416  00457E  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 25417  004580  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25418  004582  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25419  004584  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25420  004586  A4D8               	btfss	status,2,c
 25421  004588  D002               	goto	l710
 25422                           
 25423                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 25424  00458A  0E01               	movlw	1
 25425  00458C  D001               	goto	L27
 25426  00458E                     l710:
 25427                           
 25428                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 25429  00458E  0E00               	movlw	0
 25430  004590                     L27:
 25431  004590  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 25432                           
 25433                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 25434  004592  0100               	movlb	0	; () banked
 25435  004594  05A3               	decf	_MSDHostNoData& (0+255),w,b
 25436  004596  A4D8               	btfss	status,2,c
 25437  004598  D005               	goto	l712
 25438                           
 25439                           ; BSR set to: 0
 25440  00459A  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 25441  00459C  A4D8               	btfss	status,2,c
 25442  00459E  D002               	goto	l712
 25443                           
 25444                           ; BSR set to: 0
 25445                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 25446  0045A0  0E00               	movlw	0
 25447                           
 25448                           ; BSR set to: 0
 25449  0045A2  0012               	return	
 25450  0045A4                     l712:
 25451                           
 25452                           ; BSR set to: 0
 25453                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 25454                           
 25455                           ; BSR set to: 0
 25456  0045A4  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 25457  0045A6  0101               	movlb	1	; () banked
 25458  0045A8  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 25459  0045AA  E11A               	bnz	l9615
 25460  0045AC  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25461  0045AE  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 25462  0045B0  E117               	bnz	l9615
 25463  0045B2  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25464  0045B4  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 25465  0045B6  E114               	bnz	l9615
 25466  0045B8  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25467  0045BA  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 25468  0045BC  A4D8               	btfss	status,2,c
 25469  0045BE  D010               	goto	l718
 25470                           
 25471                           ; BSR set to: 1
 25472                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 25473  0045C0  0100               	movlb	0	; () banked
 25474  0045C2  05AA               	decf	_MSD_State& (0+255),w,b
 25475  0045C4  A4D8               	btfss	status,2,c
 25476  0045C6  D006               	goto	l715
 25477                           
 25478                           ; BSR set to: 0
 25479                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 25480  0045C8  0E2A               	movlw	42
 25481  0045CA  19A9               	xorwf	_MSDCommandState& (0+255),w,b
 25482  0045CC  B4D8               	btfsc	status,2,c
 25483  0045CE  D008               	goto	l718
 25484                           
 25485                           ; BSR set to: 0
 25486                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 25487  0045D0  0E00               	movlw	0
 25488                           
 25489                           ; BSR set to: 0
 25490  0045D2  0012               	return	
 25491  0045D4                     l715:
 25492                           
 25493                           ; BSR set to: 0
 25494                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 25495                           
 25496                           ; BSR set to: 0
 25497  0045D4  0E2A               	movlw	42
 25498  0045D6  19A9               	xorwf	_MSDCommandState& (0+255),w,b
 25499  0045D8  A4D8               	btfss	status,2,c
 25500  0045DA  D002               	goto	l718
 25501                           
 25502                           ; BSR set to: 0
 25503                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 25504  0045DC  0E00               	movlw	0
 25505                           
 25506                           ; BSR set to: 0
 25507  0045DE  0012               	return	
 25508  0045E0                     l718:
 25509  0045E0                     l9615:
 25510                           
 25511                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 25512  0045E0  0101               	movlb	1	; () banked
 25513  0045E2  5108               	movf	(_gblCBW+8)& (0+255),w,b
 25514  0045E4  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 25515  0045E6  5109               	movf	(_gblCBW+9)& (0+255),w,b
 25516  0045E8  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25517  0045EA  510A               	movf	(_gblCBW+10)& (0+255),w,b
 25518  0045EC  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25519  0045EE  510B               	movf	(_gblCBW+11)& (0+255),w,b
 25520  0045F0  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25521  0045F2  B0D8               	btfsc	status,0,c
 25522  0045F4  D002               	goto	l719
 25523                           
 25524                           ; BSR set to: 1
 25525                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 25526  0045F6  0E01               	movlw	1
 25527  0045F8  D001               	goto	L28
 25528  0045FA                     l719:
 25529                           
 25530                           ; BSR set to: 1
 25531                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 25532                           
 25533                           ; BSR set to: 1
 25534  0045FA  0E00               	movlw	0
 25535  0045FC                     L28:
 25536  0045FC  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 25537                           
 25538                           ; BSR set to: 1
 25539                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 25540                           
 25541                           ; BSR set to: 1
 25542  0045FE  0E02               	movlw	2
 25543  004600  0100               	movlb	0	; () banked
 25544  004602  19AA               	xorwf	_MSD_State& (0+255),w,b
 25545  004604  A4D8               	btfss	status,2,c
 25546  004606  D014               	goto	l721
 25547                           
 25548                           ; BSR set to: 0
 25549                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 25550  004608  0E2A               	movlw	42
 25551  00460A  19A9               	xorwf	_MSDCommandState& (0+255),w,b
 25552  00460C  B4D8               	btfsc	status,2,c
 25553  00460E  D005               	goto	l722
 25554                           
 25555                           ; BSR set to: 0
 25556  004610  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 25557  004612  A4D8               	btfss	status,2,c
 25558  004614  D002               	goto	l722
 25559  004616                     u6590:
 25560                           
 25561                           ; BSR set to: 0
 25562                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 25563  004616  0E05               	movlw	5
 25564  004618  D01D               	goto	L31
 25565  00461A                     l722:
 25566                           
 25567                           ; BSR set to: 0
 25568                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 25569                           
 25570                           ; BSR set to: 0
 25571  00461A  05A3               	decf	_MSDHostNoData& (0+255),w,b
 25572  00461C  B4D8               	btfsc	status,2,c
 25573  00461E  D00F               	goto	u6640
 25574                           
 25575                           ; BSR set to: 0
 25576                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 25577                           
 25578                           ; BSR set to: 0
 25579                           
 25580                           ; BSR set to: 0
 25581                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 25582  004620  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 25583  004622  B4D8               	btfsc	status,2,c
 25584  004624  D003               	goto	u6620
 25585                           
 25586                           ; BSR set to: 0
 25587                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 25588                           
 25589                           ; BSR set to: 0
 25590                           
 25591                           ; BSR set to: 0
 25592                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 25593  004626  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 25594  004628  A4D8               	btfss	status,2,c
 25595  00462A  D7F5               	goto	u6590
 25596  00462C                     u6620:
 25597                           
 25598                           ; BSR set to: 0
 25599                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 25600  00462C  0E04               	movlw	4
 25601  00462E  D012               	goto	L31
 25602  004630                     l721:
 25603                           
 25604                           ; BSR set to: 0
 25605                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 25606                           
 25607                           ; BSR set to: 0
 25608  004630  0E2A               	movlw	42
 25609  004632  19A9               	xorwf	_MSDCommandState& (0+255),w,b
 25610  004634  B4D8               	btfsc	status,2,c
 25611  004636  D00D               	goto	l737
 25612                           
 25613                           ; BSR set to: 0
 25614                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 25615                           
 25616                           ; BSR set to: 0
 25617                           
 25618                           ; BSR set to: 0
 25619                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 25620  004638  05A3               	decf	_MSDHostNoData& (0+255),w,b
 25621  00463A  A4D8               	btfss	status,2,c
 25622  00463C  D002               	goto	l733
 25623  00463E                     u6640:
 25624                           
 25625                           ; BSR set to: 0
 25626                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 25627  00463E  0E01               	movlw	1
 25628  004640  D009               	goto	L31
 25629  004642                     l733:
 25630                           
 25631                           ; BSR set to: 0
 25632                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 25633                           
 25634                           ; BSR set to: 0
 25635  004642  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 25636  004644  B4D8               	btfsc	status,2,c
 25637  004646  D003               	goto	u6660
 25638                           
 25639                           ; BSR set to: 0
 25640                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 25641                           
 25642                           ; BSR set to: 0
 25643                           
 25644                           ; BSR set to: 0
 25645                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 25646  004648  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 25647  00464A  A4D8               	btfss	status,2,c
 25648  00464C  D002               	goto	l737
 25649  00464E                     u6660:
 25650                           
 25651                           ; BSR set to: 0
 25652                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 25653  00464E  0E02               	movlw	2
 25654  004650  D001               	goto	L31
 25655  004652                     l737:
 25656                           
 25657                           ; BSR set to: 0
 25658                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 25659                           
 25660                           ; BSR set to: 0
 25661  004652  0E03               	movlw	3
 25662  004654                     L31:
 25663  004654  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 25664                           
 25665                           ; BSR set to: 0
 25666                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 25667                           
 25668                           ; BSR set to: 0
 25669                           
 25670                           ; BSR set to: 0
 25671                           
 25672                           ; BSR set to: 0
 25673                           
 25674                           ; BSR set to: 0
 25675                           
 25676                           ; BSR set to: 0
 25677  004656  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 25678  004658  ECE0  F01F         	call	_MSDErrorHandler
 25679                           
 25680                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 25681  00465C  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 25682  00465E  0012               	return	
 25683  004660                     __end_of_MSDCheckForErrorCases:
 25684                           	opt stack 0
 25685                           tosu	equ	0xFFF
 25686                           tosh	equ	0xFFE
 25687                           tosl	equ	0xFFD
 25688                           pclath	equ	0xFFA
 25689                           tblptru	equ	0xFF8
 25690                           tblptrh	equ	0xFF7
 25691                           tblptrl	equ	0xFF6
 25692                           tablat	equ	0xFF5
 25693                           prodh	equ	0xFF4
 25694                           prodl	equ	0xFF3
 25695                           intcon	equ	0xFF2
 25696                           intcon2	equ	0xFF1
 25697                           intcon3	equ	0xFF0
 25698                           indf0	equ	0xFEF
 25699                           postinc0	equ	0xFEE
 25700                           fsr0h	equ	0xFEA
 25701                           fsr0l	equ	0xFE9
 25702                           wreg	equ	0xFE8
 25703                           indf1	equ	0xFE7
 25704                           postdec1	equ	0xFE5
 25705                           plusw1	equ	0xFE3
 25706                           fsr1h	equ	0xFE2
 25707                           fsr1l	equ	0xFE1
 25708                           indf2	equ	0xFDF
 25709                           postinc2	equ	0xFDE
 25710                           postdec2	equ	0xFDD
 25711                           plusw2	equ	0xFDB
 25712                           fsr2h	equ	0xFDA
 25713                           fsr2l	equ	0xFD9
 25714                           status	equ	0xFD8
 25715                           
 25716 ;; *************** function _MSDErrorHandler *****************
 25717 ;; Defined at:
 25718 ;;		line 1577 in file "usb_device_msd.c"
 25719 ;; Parameters:    Size  Location     Type
 25720 ;;  ErrorCase       1    wreg     unsigned char 
 25721 ;; Auto vars:     Size  Location     Type
 25722 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 25723 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 25724 ;; Return value:  Size  Location     Type
 25725 ;;                  1    wreg      void 
 25726 ;; Registers used:
 25727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25728 ;; Tracked objects:
 25729 ;;		On entry : 0/0
 25730 ;;		On exit  : 0/0
 25731 ;;		Unchanged: 0/0
 25732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25734 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25737 ;;Total ram usage:        2 bytes
 25738 ;; Hardware stack levels used:    1
 25739 ;; Hardware stack levels required when called:    1
 25740 ;; This function calls:
 25741 ;;		_ResetSenseData
 25742 ;;		_USBStallEndpoint
 25743 ;; This function is called by:
 25744 ;;		_MSDProcessCommandMediaAbsent
 25745 ;;		_MSDProcessCommandMediaPresent
 25746 ;;		_MSDCheckForErrorCases
 25747 ;; This function uses a non-reentrant model
 25748 ;;
 25749                           
 25750                           	psect	text114
 25751  003FC0                     __ptext114:
 25752                           	opt stack 0
 25753  003FC0                     _MSDErrorHandler:
 25754                           	opt stack 23
 25755                           
 25756                           ;incstack = 0
 25757                           ;MSDErrorHandler@ErrorCase stored from wreg
 25758  003FC0  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 25759                           
 25760                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 25761  003FC2  0100               	movlb	0	; () banked
 25762  003FC4  5190               	movf	_USBMSDInHandle& (0+255),w,b
 25763  003FC6  1191               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25764  003FC8  B4D8               	btfsc	status,2,c
 25765  003FCA  D006               	goto	u6260
 25766                           
 25767                           ; BSR set to: 0
 25768  003FCC  C090  FFD9         	movff	_USBMSDInHandle,fsr2l
 25769  003FD0  C091  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25770  003FD4  BEDF               	btfsc	indf2,7,c
 25771  003FD6  0012               	return	
 25772  003FD8                     u6260:
 25773                           
 25774                           ; BSR set to: 0
 25775                           
 25776                           ; BSR set to: 0
 25777  003FD8  5192               	movf	_USBMSDOutHandle& (0+255),w,b
 25778  003FDA  1193               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 25779  003FDC  B4D8               	btfsc	status,2,c
 25780  003FDE  D006               	goto	l741
 25781                           
 25782                           ; BSR set to: 0
 25783  003FE0  C092  FFD9         	movff	_USBMSDOutHandle,fsr2l
 25784  003FE4  C093  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 25785  003FE8  BEDF               	btfsc	indf2,7,c
 25786  003FEA  0012               	return	
 25787  003FEC                     l741:
 25788                           
 25789                           ; BSR set to: 0
 25790                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 25791  003FEC  C0AA  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 25792                           
 25793                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 25794  003FF0  69A9               	setf	_MSDCommandState& (0+255),b
 25795                           
 25796                           ; BSR set to: 0
 25797                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 25798  003FF2  0E00               	movlw	0
 25799  003FF4  6FA8               	movwf	_MSDReadState& (0+255),b
 25800                           
 25801                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 25802  003FF6  0E00               	movlw	0
 25803  003FF8  6FA7               	movwf	_MSDWriteState& (0+255),b
 25804                           
 25805                           ; BSR set to: 0
 25806                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 25807  003FFA  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 25808  003FFE  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 25809  004002  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 25810  004006  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 25811                           
 25812                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 25813  00400A  0E01               	movlw	1
 25814  00400C  010D               	movlb	13	; () banked
 25815  00400E  6F8C               	movwf	140,b	;volatile
 25816                           
 25817                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 25818  004010  0E03               	movlw	3
 25819  004012  0100               	movlb	0	; () banked
 25820  004014  6FAA               	movwf	_MSD_State& (0+255),b
 25821                           
 25822                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 25823  004016  D043               	goto	l747
 25824  004018                     
 25825                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 25826                           
 25827                           ; BSR set to: 0
 25828  004018  0E02               	movlw	2
 25829  00401A  010D               	movlb	13	; () banked
 25830  00401C  6F8C               	movwf	140,b	;volatile
 25831                           
 25832                           ;usb_device_msd.c: 1607: break;
 25833  00401E  0012               	return	
 25834  004020                     
 25835                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 25836                           
 25837                           ; BSR set to: 13
 25838  004020  0E01               	movlw	1
 25839  004022  6E01               	movwf	USBStallEndpoint@dir,c
 25840  004024  0E02               	movlw	2
 25841  004026  ECD9  F01E         	call	_USBStallEndpoint
 25842                           
 25843                           ;usb_device_msd.c: 1611: break;
 25844  00402A  0012               	return	
 25845  00402C                     
 25846                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 25847  00402C  0E02               	movlw	2
 25848  00402E  010D               	movlb	13	; () banked
 25849  004030  6F8C               	movwf	140,b	;volatile
 25850                           
 25851                           ; BSR set to: 13
 25852                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 25853  004032  0E01               	movlw	1
 25854  004034  6E01               	movwf	USBStallEndpoint@dir,c
 25855  004036  0E02               	movlw	2
 25856  004038  ECD9  F01E         	call	_USBStallEndpoint
 25857                           
 25858                           ;usb_device_msd.c: 1616: break;
 25859  00403C  0012               	return	
 25860  00403E                     
 25861                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 25862  00403E  0E00               	movlw	0
 25863  004040  6E01               	movwf	USBStallEndpoint@dir,c
 25864  004042  0E02               	movlw	2
 25865  004044  ECD9  F01E         	call	_USBStallEndpoint
 25866                           
 25867                           ;usb_device_msd.c: 1620: break;
 25868  004048  0012               	return	
 25869  00404A                     
 25870                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 25871  00404A  0E02               	movlw	2
 25872  00404C  010D               	movlb	13	; () banked
 25873  00404E  6F8C               	movwf	140,b	;volatile
 25874                           
 25875                           ; BSR set to: 13
 25876                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 25877  004050  0E00               	movlw	0
 25878  004052  6E01               	movwf	USBStallEndpoint@dir,c
 25879  004054  0E02               	movlw	2
 25880  004056  ECD9  F01E         	call	_USBStallEndpoint
 25881                           
 25882                           ;usb_device_msd.c: 1625: break;
 25883  00405A  0012               	return	
 25884  00405C                     
 25885                           ;usb_device_msd.c: 1628: ResetSenseData();
 25886  00405C  ECD6  F034         	call	_ResetSenseData	;wreg free
 25887                           
 25888                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 25889  004060  0101               	movlb	1	; () banked
 25890  004062  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25891  004064  0BF0               	andlw	-16
 25892  004066  0905               	iorlw	5
 25893  004068  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25894                           
 25895                           ; BSR set to: 1
 25896                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 25897  00406A  0E20               	movlw	32
 25898  00406C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25899                           
 25900                           ; BSR set to: 1
 25901                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 25902  00406E  0E00               	movlw	0
 25903  004070  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25904                           
 25905                           ; BSR set to: 1
 25906                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 25907  004072  0E02               	movlw	2
 25908  004074  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 25909  004076  A4D8               	btfss	status,2,c
 25910  004078  D00C               	goto	l755
 25911                           
 25912                           ; BSR set to: 1
 25913  00407A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 25914  00407C  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 25915  00407E  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 25916  004080  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 25917  004082  B4D8               	btfsc	status,2,c
 25918  004084  D006               	goto	l755
 25919                           
 25920                           ; BSR set to: 1
 25921                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 25922  004086  0E00               	movlw	0
 25923  004088  6E01               	movwf	USBStallEndpoint@dir,c
 25924  00408A  0E02               	movlw	2
 25925  00408C  ECD9  F01E         	call	_USBStallEndpoint
 25926                           
 25927                           ;usb_device_msd.c: 1636: }
 25928  004090  0012               	return	
 25929  004092                     l755:
 25930                           
 25931                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 25932  004092  0E01               	movlw	1
 25933  004094  6E01               	movwf	USBStallEndpoint@dir,c
 25934  004096  0E02               	movlw	2
 25935  004098  ECD9  F01E         	call	_USBStallEndpoint
 25936                           
 25937                           ;usb_device_msd.c: 1644: }
 25938                           
 25939                           ;usb_device_msd.c: 1643: break;
 25940                           
 25941                           ;usb_device_msd.c: 1642: default:
 25942                           
 25943                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 25944  00409C  0012               	return	
 25945  00409E                     l747:
 25946  00409E  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 25947                           
 25948                           ; Switch size 1, requested type "space"
 25949                           ; Number of cases is 6, Range of values is 1 to 127
 25950                           ; switch strategies available:
 25951                           ; Name         Instructions Cycles
 25952                           ; simple_byte           19    10 (average)
 25953                           ;	Chosen strategy is simple_byte
 25954  0040A0  0A01               	xorlw	1	; case 1
 25955  0040A2  B4D8               	btfsc	status,2,c
 25956  0040A4  D7B9               	goto	l748
 25957  0040A6  0A03               	xorlw	3	; case 2
 25958  0040A8  B4D8               	btfsc	status,2,c
 25959  0040AA  D7BA               	goto	l750
 25960  0040AC  0A01               	xorlw	1	; case 3
 25961  0040AE  B4D8               	btfsc	status,2,c
 25962  0040B0  D7BD               	goto	l751
 25963  0040B2  0A07               	xorlw	7	; case 4
 25964  0040B4  B4D8               	btfsc	status,2,c
 25965  0040B6  D7C3               	goto	l752
 25966  0040B8  0A01               	xorlw	1	; case 5
 25967  0040BA  B4D8               	btfsc	status,2,c
 25968  0040BC  D7C6               	goto	l753
 25969  0040BE  0A7A               	xorlw	122	; case 127
 25970  0040C0  A4D8               	btfss	status,2,c
 25971  0040C2  0012               	return	
 25972  0040C4  D7CB               	goto	l754
 25973  0040C6                     __end_of_MSDErrorHandler:
 25974                           	opt stack 0
 25975                           tosu	equ	0xFFF
 25976                           tosh	equ	0xFFE
 25977                           tosl	equ	0xFFD
 25978                           pclath	equ	0xFFA
 25979                           tblptru	equ	0xFF8
 25980                           tblptrh	equ	0xFF7
 25981                           tblptrl	equ	0xFF6
 25982                           tablat	equ	0xFF5
 25983                           prodh	equ	0xFF4
 25984                           prodl	equ	0xFF3
 25985                           intcon	equ	0xFF2
 25986                           intcon2	equ	0xFF1
 25987                           intcon3	equ	0xFF0
 25988                           indf0	equ	0xFEF
 25989                           postinc0	equ	0xFEE
 25990                           fsr0h	equ	0xFEA
 25991                           fsr0l	equ	0xFE9
 25992                           wreg	equ	0xFE8
 25993                           indf1	equ	0xFE7
 25994                           postdec1	equ	0xFE5
 25995                           plusw1	equ	0xFE3
 25996                           fsr1h	equ	0xFE2
 25997                           fsr1l	equ	0xFE1
 25998                           indf2	equ	0xFDF
 25999                           postinc2	equ	0xFDE
 26000                           postdec2	equ	0xFDD
 26001                           plusw2	equ	0xFDB
 26002                           fsr2h	equ	0xFDA
 26003                           fsr2l	equ	0xFD9
 26004                           status	equ	0xFD8
 26005                           
 26006 ;; *************** function _USBStallEndpoint *****************
 26007 ;; Defined at:
 26008 ;;		line 1073 in file "usb_device.c"
 26009 ;; Parameters:    Size  Location     Type
 26010 ;;  ep              1    wreg     unsigned char 
 26011 ;;  dir             1    0[COMRAM] unsigned char 
 26012 ;; Auto vars:     Size  Location     Type
 26013 ;;  ep              1    5[COMRAM] unsigned char 
 26014 ;;  p               2    6[COMRAM] PTR struct __BDT
 26015 ;;		 -> BDT(48), 
 26016 ;; Return value:  Size  Location     Type
 26017 ;;                  1    wreg      void 
 26018 ;; Registers used:
 26019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26020 ;; Tracked objects:
 26021 ;;		On entry : 0/0
 26022 ;;		On exit  : 0/0
 26023 ;;		Unchanged: 0/0
 26024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26025 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26026 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26027 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26028 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26029 ;;Total ram usage:        8 bytes
 26030 ;; Hardware stack levels used:    1
 26031 ;; This function calls:
 26032 ;;		Nothing
 26033 ;; This function is called by:
 26034 ;;		_MSDTasks
 26035 ;;		_MSDReadHandler
 26036 ;;		_MSDWriteHandler
 26037 ;;		_MSDErrorHandler
 26038 ;;		_MSDTransferTerminated
 26039 ;; This function uses a non-reentrant model
 26040 ;;
 26041                           
 26042                           	psect	text115
 26043  003DB2                     __ptext115:
 26044                           	opt stack 0
 26045  003DB2                     _USBStallEndpoint:
 26046                           	opt stack 27
 26047                           
 26048                           ;incstack = 0
 26049                           ;USBStallEndpoint@ep stored from wreg
 26050  003DB2  6E06               	movwf	USBStallEndpoint@ep,c
 26051                           
 26052                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 26053  003DB4  5006               	movf	USBStallEndpoint@ep,w,c
 26054  003DB6  A4D8               	btfss	status,2,c
 26055  003DB8  D02C               	goto	l191
 26056                           
 26057                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 26058  003DBA  0100               	movlb	0	; () banked
 26059  003DBC  EE20 F001          	lfsr	2,1
 26060  003DC0  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 26061  003DC2  26D9               	addwf	fsr2l,f,c
 26062  003DC4  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 26063  003DC6  22DA               	addwfc	fsr2h,f,c
 26064  003DC8  0E08               	movlw	8
 26065  003DCA  6EDF               	movwf	indf2,c
 26066                           
 26067                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26068  003DCC  EE20 F002          	lfsr	2,2
 26069  003DD0  5198               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 26070  003DD2  26D9               	addwf	fsr2l,f,c
 26071  003DD4  5199               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 26072  003DD6  22DA               	addwfc	fsr2h,f,c
 26073  003DD8  0E30               	movlw	48
 26074  003DDA  6EDE               	movwf	postinc2,c
 26075  003DDC  0E0D               	movlw	13
 26076  003DDE  6EDD               	movwf	postdec2,c
 26077                           
 26078                           ; BSR set to: 0
 26079                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26080  003DE0  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26081  003DE4  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26082  003DE8  0E0C               	movlw	12
 26083  003DEA  6EDF               	movwf	indf2,c
 26084                           
 26085                           ; BSR set to: 0
 26086                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26087  003DEC  C098  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26088  003DF0  C099  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26089  003DF4  0E00               	movlw	0
 26090  003DF6  8EDB               	bsf	plusw2,7,c
 26091                           
 26092                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 26093  003DF8  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 26094  003DFC  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26095  003E00  0E04               	movlw	4
 26096  003E02  6EDF               	movwf	indf2,c
 26097                           
 26098                           ; BSR set to: 0
 26099                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26100  003E04  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 26101  003E08  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26102  003E0C  0E00               	movlw	0
 26103  003E0E  8EDB               	bsf	plusw2,7,c
 26104                           
 26105                           ;usb_device.c: 1089: }
 26106  003E10  0012               	return	
 26107  003E12                     l191:
 26108                           
 26109                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 26110                           
 26111                           ; BSR set to: 0
 26112  003E12  5001               	movf	USBStallEndpoint@dir,w,c
 26113  003E14  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 26114  003E16  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 26115  003E18  90D8               	bcf	status,0,c
 26116  003E1A  3602               	rlcf	??_USBStallEndpoint,f,c
 26117  003E1C  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26118  003E1E  5006               	movf	USBStallEndpoint@ep,w,c
 26119  003E20  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 26120  003E22  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 26121  003E24  90D8               	bcf	status,0,c
 26122  003E26  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26123  003E28  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26124  003E2A  90D8               	bcf	status,0,c
 26125  003E2C  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26126  003E2E  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26127  003E30  5002               	movf	??_USBStallEndpoint,w,c
 26128  003E32  2604               	addwf	??_USBStallEndpoint+2,f,c
 26129  003E34  5003               	movf	??_USBStallEndpoint+1,w,c
 26130  003E36  2205               	addwfc	??_USBStallEndpoint+3,f,c
 26131  003E38  90D8               	bcf	status,0,c
 26132  003E3A  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26133  003E3C  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26134  003E3E  90D8               	bcf	status,0,c
 26135  003E40  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26136  003E42  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26137  003E44  0E00               	movlw	0
 26138  003E46  2404               	addwf	??_USBStallEndpoint+2,w,c
 26139  003E48  6E07               	movwf	USBStallEndpoint@p,c
 26140  003E4A  0E0D               	movlw	13
 26141  003E4C  2005               	addwfc	??_USBStallEndpoint+3,w,c
 26142  003E4E  6E08               	movwf	USBStallEndpoint@p+1,c
 26143                           
 26144                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 26145  003E50  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26146  003E54  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26147  003E58  0E00               	movlw	0
 26148  003E5A  84DB               	bsf	plusw2,2,c
 26149                           
 26150                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 26151  003E5C  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26152  003E60  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26153  003E64  0E00               	movlw	0
 26154  003E66  8EDB               	bsf	plusw2,7,c
 26155                           
 26156                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 26157  003E68  5006               	movf	USBStallEndpoint@ep,w,c
 26158  003E6A  0D04               	mullw	4
 26159  003E6C  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 26160  003E70  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 26161  003E74  5001               	movf	USBStallEndpoint@dir,w,c
 26162  003E76  0D02               	mullw	2
 26163  003E78  50F3               	movf	prodl,w,c
 26164  003E7A  2602               	addwf	??_USBStallEndpoint,f,c
 26165  003E7C  50F4               	movf	prodh,w,c
 26166  003E7E  2203               	addwfc	??_USBStallEndpoint+1,f,c
 26167  003E80  90D8               	bcf	status,0,c
 26168  003E82  3602               	rlcf	??_USBStallEndpoint,f,c
 26169  003E84  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26170  003E86  90D8               	bcf	status,0,c
 26171  003E88  3602               	rlcf	??_USBStallEndpoint,f,c
 26172  003E8A  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26173  003E8C  0E04               	movlw	4
 26174  003E8E  2602               	addwf	??_USBStallEndpoint,f,c
 26175  003E90  0E00               	movlw	0
 26176  003E92  2203               	addwfc	??_USBStallEndpoint+1,f,c
 26177  003E94  0E00               	movlw	0
 26178  003E96  2402               	addwf	??_USBStallEndpoint,w,c
 26179  003E98  6E07               	movwf	USBStallEndpoint@p,c
 26180  003E9A  0E0D               	movlw	13
 26181  003E9C  2003               	addwfc	??_USBStallEndpoint+1,w,c
 26182  003E9E  6E08               	movwf	USBStallEndpoint@p+1,c
 26183                           
 26184                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 26185  003EA0  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26186  003EA4  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26187  003EA8  0E00               	movlw	0
 26188  003EAA  84DB               	bsf	plusw2,2,c
 26189                           
 26190                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 26191  003EAC  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26192  003EB0  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26193  003EB4  0E00               	movlw	0
 26194  003EB6  8EDB               	bsf	plusw2,7,c
 26195  003EB8  0012               	return	
 26196  003EBA                     __end_of_USBStallEndpoint:
 26197                           	opt stack 0
 26198                           tosu	equ	0xFFF
 26199                           tosh	equ	0xFFE
 26200                           tosl	equ	0xFFD
 26201                           pclath	equ	0xFFA
 26202                           tblptru	equ	0xFF8
 26203                           tblptrh	equ	0xFF7
 26204                           tblptrl	equ	0xFF6
 26205                           tablat	equ	0xFF5
 26206                           prodh	equ	0xFF4
 26207                           prodl	equ	0xFF3
 26208                           intcon	equ	0xFF2
 26209                           intcon2	equ	0xFF1
 26210                           intcon3	equ	0xFF0
 26211                           indf0	equ	0xFEF
 26212                           postinc0	equ	0xFEE
 26213                           fsr0h	equ	0xFEA
 26214                           fsr0l	equ	0xFE9
 26215                           wreg	equ	0xFE8
 26216                           indf1	equ	0xFE7
 26217                           postdec1	equ	0xFE5
 26218                           plusw1	equ	0xFE3
 26219                           fsr1h	equ	0xFE2
 26220                           fsr1l	equ	0xFE1
 26221                           indf2	equ	0xFDF
 26222                           postinc2	equ	0xFDE
 26223                           postdec2	equ	0xFDD
 26224                           plusw2	equ	0xFDB
 26225                           fsr2h	equ	0xFDA
 26226                           fsr2l	equ	0xFD9
 26227                           status	equ	0xFD8
 26228                           
 26229 ;; *************** function _ResetSenseData *****************
 26230 ;; Defined at:
 26231 ;;		line 1373 in file "usb_device_msd.c"
 26232 ;; Parameters:    Size  Location     Type
 26233 ;;		None
 26234 ;; Auto vars:     Size  Location     Type
 26235 ;;		None
 26236 ;; Return value:  Size  Location     Type
 26237 ;;                  1    wreg      void 
 26238 ;; Registers used:
 26239 ;;		wreg, status,2
 26240 ;; Tracked objects:
 26241 ;;		On entry : 0/0
 26242 ;;		On exit  : 0/0
 26243 ;;		Unchanged: 0/0
 26244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26249 ;;Total ram usage:        0 bytes
 26250 ;; Hardware stack levels used:    1
 26251 ;; This function calls:
 26252 ;;		Nothing
 26253 ;; This function is called by:
 26254 ;;		_USBMSDInit
 26255 ;;		_MSDProcessCommandMediaAbsent
 26256 ;;		_MSDProcessCommandMediaPresent
 26257 ;;		_MSDErrorHandler
 26258 ;; This function uses a non-reentrant model
 26259 ;;
 26260                           
 26261                           	psect	text116
 26262  0069AC                     __ptext116:
 26263                           	opt stack 0
 26264  0069AC                     _ResetSenseData:
 26265                           	opt stack 26
 26266                           
 26267                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 26268                           
 26269                           ;incstack = 0
 26270  0069AC  0101               	movlb	1	; () banked
 26271  0069AE  911F               	bcf	_gblSenseData& (0+255),0,b
 26272  0069B0  931F               	bcf	_gblSenseData& (0+255),1,b
 26273  0069B2  951F               	bcf	_gblSenseData& (0+255),2,b
 26274  0069B4  971F               	bcf	_gblSenseData& (0+255),3,b
 26275  0069B6  891F               	bsf	_gblSenseData& (0+255),4,b
 26276  0069B8  8B1F               	bsf	_gblSenseData& (0+255),5,b
 26277  0069BA  8D1F               	bsf	_gblSenseData& (0+255),6,b
 26278                           
 26279                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 26280  0069BC  9F1F               	bcf	_gblSenseData& (0+255),7,b
 26281                           
 26282                           ; BSR set to: 1
 26283                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 26284  0069BE  0E00               	movlw	0
 26285  0069C0  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 26286                           
 26287                           ; BSR set to: 1
 26288                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 26289  0069C2  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 26290  0069C4  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 26291  0069C6  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 26292  0069C8  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 26293                           
 26294                           ; BSR set to: 1
 26295                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 26296  0069CA  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 26297                           
 26298                           ; BSR set to: 1
 26299                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 26300  0069CC  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 26301                           
 26302                           ; BSR set to: 1
 26303                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 26304  0069CE  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 26305                           
 26306                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 26307  0069D0  0E00               	movlw	0
 26308  0069D2  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 26309                           
 26310                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 26311  0069D4  0E00               	movlw	0
 26312  0069D6  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 26313                           
 26314                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 26315  0069D8  0E00               	movlw	0
 26316  0069DA  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 26317                           
 26318                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 26319  0069DC  0E00               	movlw	0
 26320  0069DE  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 26321                           
 26322                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 26323  0069E0  0E0A               	movlw	10
 26324  0069E2  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 26325                           
 26326                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 26327  0069E4  0E00               	movlw	0
 26328  0069E6  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 26329  0069E8  0E00               	movlw	0
 26330  0069EA  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 26331  0069EC  0E00               	movlw	0
 26332  0069EE  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 26333  0069F0  0E00               	movlw	0
 26334  0069F2  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 26335                           
 26336                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 26337  0069F4  0E00               	movlw	0
 26338  0069F6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26339                           
 26340                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 26341  0069F8  0E00               	movlw	0
 26342  0069FA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26343                           
 26344                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 26345  0069FC  0E00               	movlw	0
 26346  0069FE  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 26347                           
 26348                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 26349  006A00  0E00               	movlw	0
 26350  006A02  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 26351                           
 26352                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 26353  006A04  0E00               	movlw	0
 26354  006A06  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 26355                           
 26356                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 26357  006A08  0E00               	movlw	0
 26358  006A0A  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 26359                           
 26360                           ; BSR set to: 1
 26361  006A0C  0012               	return		;funcret
 26362  006A0E                     __end_of_ResetSenseData:
 26363                           	opt stack 0
 26364                           tosu	equ	0xFFF
 26365                           tosh	equ	0xFFE
 26366                           tosl	equ	0xFFD
 26367                           pclath	equ	0xFFA
 26368                           tblptru	equ	0xFF8
 26369                           tblptrh	equ	0xFF7
 26370                           tblptrl	equ	0xFF6
 26371                           tablat	equ	0xFF5
 26372                           prodh	equ	0xFF4
 26373                           prodl	equ	0xFF3
 26374                           intcon	equ	0xFF2
 26375                           intcon2	equ	0xFF1
 26376                           intcon3	equ	0xFF0
 26377                           indf0	equ	0xFEF
 26378                           postinc0	equ	0xFEE
 26379                           fsr0h	equ	0xFEA
 26380                           fsr0l	equ	0xFE9
 26381                           wreg	equ	0xFE8
 26382                           indf1	equ	0xFE7
 26383                           postdec1	equ	0xFE5
 26384                           plusw1	equ	0xFE3
 26385                           fsr1h	equ	0xFE2
 26386                           fsr1l	equ	0xFE1
 26387                           indf2	equ	0xFDF
 26388                           postinc2	equ	0xFDE
 26389                           postdec2	equ	0xFDD
 26390                           plusw2	equ	0xFDB
 26391                           fsr2h	equ	0xFDA
 26392                           fsr2l	equ	0xFD9
 26393                           status	equ	0xFD8
 26394                           
 26395 ;; *************** function _ExternalFlash_SectorRead *****************
 26396 ;; Defined at:
 26397 ;;		line 40 in file "external_flash.c"
 26398 ;; Parameters:    Size  Location     Type
 26399 ;;  config          2   44[COMRAM] PTR void 
 26400 ;;		 -> NULL(0), 
 26401 ;;  sector_addr     4   46[COMRAM] unsigned long 
 26402 ;;  buffer          2   50[COMRAM] PTR unsigned char 
 26403 ;;		 -> msd_buffer(512), 
 26404 ;; Auto vars:     Size  Location     Type
 26405 ;;  page            2   52[COMRAM] unsigned int 
 26406 ;; Return value:  Size  Location     Type
 26407 ;;                  1    wreg      unsigned char 
 26408 ;; Registers used:
 26409 ;;		wreg, status,2, status,0, cstack
 26410 ;; Tracked objects:
 26411 ;;		On entry : 0/0
 26412 ;;		On exit  : 0/0
 26413 ;;		Unchanged: 0/0
 26414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26415 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26418 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26419 ;;Total ram usage:       10 bytes
 26420 ;; Hardware stack levels used:    1
 26421 ;; Hardware stack levels required when called:    7
 26422 ;; This function calls:
 26423 ;;		_flash_page_read
 26424 ;; This function is called by:
 26425 ;;		_MSDReadHandler
 26426 ;; This function uses a non-reentrant model
 26427 ;;
 26428                           
 26429                           	psect	text117
 26430  0074FA                     __ptext117:
 26431                           	opt stack 0
 26432  0074FA                     _ExternalFlash_SectorRead:
 26433                           	opt stack 18
 26434                           
 26435                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 26436                           
 26437                           ; BSR set to: 1
 26438                           ;incstack = 0
 26439  0074FA  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 26440  0074FE  C030  F036         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 26441                           
 26442                           ;external_flash.c: 45: if(sector_addr >= 8196)
 26443  007502  5032               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 26444  007504  1031               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 26445  007506  E106               	bnz	u6730
 26446  007508  0E04               	movlw	4
 26447  00750A  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr,w,c
 26448  00750C  0E20               	movlw	32
 26449  00750E  5830               	subwfb	ExternalFlash_SectorRead@sector_addr+1,w,c
 26450  007510  A0D8               	btfss	status,0,c
 26451  007512  D002               	goto	l1735
 26452  007514                     u6730:
 26453                           
 26454                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 26455  007514  0E00               	movlw	0
 26456  007516  0012               	return	
 26457  007518                     l1735:
 26458                           
 26459                           ;external_flash.c: 48: };external_flash.c: 51: flash_page_read(page, buffer);
 26460  007518  C035  F029         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 26461  00751C  C036  F02A         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 26462  007520  C033  F02B         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 26463  007524  C034  F02C         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 26464  007528  ECCC  F03A         	call	_flash_page_read	;wreg free
 26465                           
 26466                           ;external_flash.c: 53: return 1;
 26467  00752C  0E01               	movlw	1
 26468  00752E  0012               	return	
 26469  007530                     __end_of_ExternalFlash_SectorRead:
 26470                           	opt stack 0
 26471                           tosu	equ	0xFFF
 26472                           tosh	equ	0xFFE
 26473                           tosl	equ	0xFFD
 26474                           pclath	equ	0xFFA
 26475                           tblptru	equ	0xFF8
 26476                           tblptrh	equ	0xFF7
 26477                           tblptrl	equ	0xFF6
 26478                           tablat	equ	0xFF5
 26479                           prodh	equ	0xFF4
 26480                           prodl	equ	0xFF3
 26481                           intcon	equ	0xFF2
 26482                           intcon2	equ	0xFF1
 26483                           intcon3	equ	0xFF0
 26484                           indf0	equ	0xFEF
 26485                           postinc0	equ	0xFEE
 26486                           fsr0h	equ	0xFEA
 26487                           fsr0l	equ	0xFE9
 26488                           wreg	equ	0xFE8
 26489                           indf1	equ	0xFE7
 26490                           postdec1	equ	0xFE5
 26491                           plusw1	equ	0xFE3
 26492                           fsr1h	equ	0xFE2
 26493                           fsr1l	equ	0xFE1
 26494                           indf2	equ	0xFDF
 26495                           postinc2	equ	0xFDE
 26496                           postdec2	equ	0xFDD
 26497                           plusw2	equ	0xFDB
 26498                           fsr2h	equ	0xFDA
 26499                           fsr2l	equ	0xFD9
 26500                           status	equ	0xFD8
 26501                           
 26502 ;; *************** function _flash_page_read *****************
 26503 ;; Defined at:
 26504 ;;		line 415 in file "flash.c"
 26505 ;; Parameters:    Size  Location     Type
 26506 ;;  page            2   40[COMRAM] unsigned int 
 26507 ;;  data            2   42[COMRAM] PTR unsigned char 
 26508 ;;		 -> buffer(512), msd_buffer(512), 
 26509 ;; Auto vars:     Size  Location     Type
 26510 ;;		None
 26511 ;; Return value:  Size  Location     Type
 26512 ;;                  1    wreg      void 
 26513 ;; Registers used:
 26514 ;;		wreg, status,2, status,0, cstack
 26515 ;; Tracked objects:
 26516 ;;		On entry : 0/0
 26517 ;;		On exit  : 0/0
 26518 ;;		Unchanged: 0/0
 26519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26523 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26524 ;;Total ram usage:        4 bytes
 26525 ;; Hardware stack levels used:    1
 26526 ;; Hardware stack levels required when called:    6
 26527 ;; This function calls:
 26528 ;;		__flash_partial_read
 26529 ;;		_spi_set_configuration
 26530 ;; This function is called by:
 26531 ;;		_ExternalFlash_SectorRead
 26532 ;;		_fat_get_format_status
 26533 ;; This function uses a non-reentrant model
 26534 ;;
 26535                           
 26536                           	psect	text118
 26537  007598                     __ptext118:
 26538                           	opt stack 0
 26539  007598                     _flash_page_read:
 26540                           	opt stack 21
 26541                           
 26542                           ;flash.c: 418: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 26543                           
 26544                           ;incstack = 0
 26545  007598  0E00               	movlw	0
 26546  00759A  ECE8  F03C         	call	_spi_set_configuration
 26547                           
 26548                           ;flash.c: 421: _flash_partial_read(page, 0, 512, data);
 26549  00759E  C029  F015         	movff	flash_page_read@page,__flash_partial_read@page
 26550  0075A2  C02A  F016         	movff	flash_page_read@page+1,__flash_partial_read@page+1
 26551  0075A6  0E00               	movlw	0
 26552  0075A8  6E18               	movwf	__flash_partial_read@start+1,c
 26553  0075AA  0E00               	movlw	0
 26554  0075AC  6E17               	movwf	__flash_partial_read@start,c
 26555  0075AE  0E02               	movlw	2
 26556  0075B0  6E1A               	movwf	__flash_partial_read@length+1,c
 26557  0075B2  0E00               	movlw	0
 26558  0075B4  6E19               	movwf	__flash_partial_read@length,c
 26559  0075B6  C02B  F01B         	movff	flash_page_read@data,__flash_partial_read@data
 26560  0075BA  C02C  F01C         	movff	flash_page_read@data+1,__flash_partial_read@data+1
 26561  0075BE  ECFC  F030         	call	__flash_partial_read	;wreg free
 26562                           
 26563                           ;flash.c: 424: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 26564  0075C2  0E01               	movlw	1
 26565  0075C4  ECE8  F03C         	call	_spi_set_configuration
 26566  0075C8  0012               	return		;funcret
 26567  0075CA                     __end_of_flash_page_read:
 26568                           	opt stack 0
 26569                           tosu	equ	0xFFF
 26570                           tosh	equ	0xFFE
 26571                           tosl	equ	0xFFD
 26572                           pclath	equ	0xFFA
 26573                           tblptru	equ	0xFF8
 26574                           tblptrh	equ	0xFF7
 26575                           tblptrl	equ	0xFF6
 26576                           tablat	equ	0xFF5
 26577                           prodh	equ	0xFF4
 26578                           prodl	equ	0xFF3
 26579                           intcon	equ	0xFF2
 26580                           intcon2	equ	0xFF1
 26581                           intcon3	equ	0xFF0
 26582                           indf0	equ	0xFEF
 26583                           postinc0	equ	0xFEE
 26584                           fsr0h	equ	0xFEA
 26585                           fsr0l	equ	0xFE9
 26586                           wreg	equ	0xFE8
 26587                           indf1	equ	0xFE7
 26588                           postdec1	equ	0xFE5
 26589                           plusw1	equ	0xFE3
 26590                           fsr1h	equ	0xFE2
 26591                           fsr1l	equ	0xFE1
 26592                           indf2	equ	0xFDF
 26593                           postinc2	equ	0xFDE
 26594                           postdec2	equ	0xFDD
 26595                           plusw2	equ	0xFDB
 26596                           fsr2h	equ	0xFDA
 26597                           fsr2l	equ	0xFD9
 26598                           status	equ	0xFD8
 26599                           
 26600 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 26601 ;; Defined at:
 26602 ;;		line 993 in file "usb_device_msd.c"
 26603 ;; Parameters:    Size  Location     Type
 26604 ;;  DiExpected      2    0[COMRAM] unsigned int 
 26605 ;; Auto vars:     Size  Location     Type
 26606 ;;		None
 26607 ;; Return value:  Size  Location     Type
 26608 ;;                  1    wreg      void 
 26609 ;; Registers used:
 26610 ;;		wreg, status,2, status,0
 26611 ;; Tracked objects:
 26612 ;;		On entry : 0/0
 26613 ;;		On exit  : 0/0
 26614 ;;		Unchanged: 0/0
 26615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26618 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26619 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26620 ;;Total ram usage:        6 bytes
 26621 ;; Hardware stack levels used:    1
 26622 ;; This function calls:
 26623 ;;		Nothing
 26624 ;; This function is called by:
 26625 ;;		_MSDProcessCommandMediaPresent
 26626 ;; This function uses a non-reentrant model
 26627 ;;
 26628                           
 26629                           	psect	text119
 26630  0058D4                     __ptext119:
 26631                           	opt stack 0
 26632  0058D4                     _MSDComputeDeviceInAndResidue:
 26633                           	opt stack 26
 26634                           
 26635                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 26636                           
 26637                           ;incstack = 0
 26638  0058D4  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 26639  0058D6  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 26640  0058D8  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 26641  0058DA  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 26642  0058DC  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 26643  0058DE  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 26644  0058E0  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 26645  0058E2  0101               	movlb	1	; () banked
 26646  0058E4  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 26647  0058E6  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 26648  0058E8  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 26649  0058EA  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 26650  0058EC  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 26651  0058EE  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 26652  0058F0  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 26653  0058F2  B0D8               	btfsc	status,0,c
 26654  0058F4  D00E               	goto	l659
 26655                           
 26656                           ; BSR set to: 1
 26657                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 26658  0058F6  0E00               	movlw	0
 26659  0058F8  010D               	movlb	13	; () banked
 26660  0058FA  6F88               	movwf	136,b	;volatile
 26661  0058FC  0E00               	movlw	0
 26662  0058FE  6F89               	movwf	137,b	;volatile
 26663  005900  0E00               	movlw	0
 26664  005902  6F8A               	movwf	138,b	;volatile
 26665  005904  0E00               	movlw	0
 26666  005906  6F8B               	movwf	139,b	;volatile
 26667                           
 26668                           ; BSR set to: 13
 26669                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 26670  005908  C108  F08C         	movff	_gblCBW+8,_TransferLength
 26671  00590C  C109  F08D         	movff	_gblCBW+9,_TransferLength+1
 26672                           
 26673                           ;usb_device_msd.c: 1002: }
 26674  005910  0012               	return	
 26675  005912                     l659:
 26676                           
 26677                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 26678                           
 26679                           ; BSR set to: 13
 26680  005912  0100               	movlb	0	; () banked
 26681  005914  518C               	movf	_TransferLength& (0+255),w,b
 26682  005916  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 26683  005918  518D               	movf	(_TransferLength+1)& (0+255),w,b
 26684  00591A  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 26685  00591C  B0D8               	btfsc	status,0,c
 26686  00591E  D004               	goto	l661
 26687                           
 26688                           ; BSR set to: 0
 26689                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 26690  005920  C001  F08C         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 26691  005924  C002  F08D         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 26692  005928                     l661:
 26693                           
 26694                           ; BSR set to: 0
 26695                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 26696                           
 26697                           ; BSR set to: 0
 26698  005928  518C               	movf	_TransferLength& (0+255),w,b
 26699  00592A  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 26700  00592C  518D               	movf	(_TransferLength+1)& (0+255),w,b
 26701  00592E  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 26702  005930  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 26703  005932  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 26704  005934  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 26705  005936  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 26706  005938  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 26707  00593A  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 26708  00593C  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 26709  00593E  0E00               	movlw	0
 26710  005940  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 26711  005942  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 26712  005944  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 26713  005946  0101               	movlb	1	; () banked
 26714  005948  5108               	movf	(_gblCBW+8)& (0+255),w,b
 26715  00594A  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 26716  00594C  010D               	movlb	13	; () banked
 26717  00594E  6F88               	movwf	136,b	;volatile
 26718  005950  0101               	movlb	1	; () banked
 26719  005952  5109               	movf	(_gblCBW+9)& (0+255),w,b
 26720  005954  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 26721  005956  010D               	movlb	13	; () banked
 26722  005958  6F89               	movwf	137,b	;volatile
 26723  00595A  0101               	movlb	1	; () banked
 26724  00595C  510A               	movf	(_gblCBW+10)& (0+255),w,b
 26725  00595E  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 26726  005960  010D               	movlb	13	; () banked
 26727  005962  6F8A               	movwf	138,b	;volatile
 26728  005964  0101               	movlb	1	; () banked
 26729  005966  510B               	movf	(_gblCBW+11)& (0+255),w,b
 26730  005968  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 26731  00596A  010D               	movlb	13	; () banked
 26732  00596C  6F8B               	movwf	139,b	;volatile
 26733  00596E  0012               	return	
 26734  005970                     __end_of_MSDComputeDeviceInAndResidue:
 26735                           	opt stack 0
 26736                           tosu	equ	0xFFF
 26737                           tosh	equ	0xFFE
 26738                           tosl	equ	0xFFD
 26739                           pclath	equ	0xFFA
 26740                           tblptru	equ	0xFF8
 26741                           tblptrh	equ	0xFF7
 26742                           tblptrl	equ	0xFF6
 26743                           tablat	equ	0xFF5
 26744                           prodh	equ	0xFF4
 26745                           prodl	equ	0xFF3
 26746                           intcon	equ	0xFF2
 26747                           intcon2	equ	0xFF1
 26748                           intcon3	equ	0xFF0
 26749                           indf0	equ	0xFEF
 26750                           postinc0	equ	0xFEE
 26751                           fsr0h	equ	0xFEA
 26752                           fsr0l	equ	0xFE9
 26753                           wreg	equ	0xFE8
 26754                           indf1	equ	0xFE7
 26755                           postdec1	equ	0xFE5
 26756                           plusw1	equ	0xFE3
 26757                           fsr1h	equ	0xFE2
 26758                           fsr1l	equ	0xFE1
 26759                           indf2	equ	0xFDF
 26760                           postinc2	equ	0xFDE
 26761                           postdec2	equ	0xFDD
 26762                           plusw2	equ	0xFDB
 26763                           fsr2h	equ	0xFDA
 26764                           fsr2l	equ	0xFD9
 26765                           status	equ	0xFD8
 26766                           
 26767 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 26768 ;; Defined at:
 26769 ;;		line 18 in file "external_flash.c"
 26770 ;; Parameters:    Size  Location     Type
 26771 ;;  config          2    0[COMRAM] PTR void 
 26772 ;;		 -> NULL(0), 
 26773 ;; Auto vars:     Size  Location     Type
 26774 ;;		None
 26775 ;; Return value:  Size  Location     Type
 26776 ;;                  2    0[COMRAM] unsigned int 
 26777 ;; Registers used:
 26778 ;;		wreg, status,2
 26779 ;; Tracked objects:
 26780 ;;		On entry : 0/0
 26781 ;;		On exit  : 0/0
 26782 ;;		Unchanged: 0/0
 26783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26788 ;;Total ram usage:        2 bytes
 26789 ;; Hardware stack levels used:    1
 26790 ;; This function calls:
 26791 ;;		Nothing
 26792 ;; This function is called by:
 26793 ;;		_MSDProcessCommandMediaPresent
 26794 ;; This function uses a non-reentrant model
 26795 ;;
 26796                           
 26797                           	psect	text120
 26798  007AE2                     __ptext120:
 26799                           	opt stack 0
 26800  007AE2                     _ExternalFlash_SectorSizeRead:
 26801                           	opt stack 26
 26802                           
 26803                           ;external_flash.c: 20: return 512;
 26804                           
 26805                           ; BSR set to: 13
 26806                           ;incstack = 0
 26807  007AE2  0E02               	movlw	2
 26808  007AE4  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 26809  007AE6  0E00               	movlw	0
 26810  007AE8  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 26811  007AEA  0012               	return	
 26812  007AEC                     __end_of_ExternalFlash_SectorSizeRead:
 26813                           	opt stack 0
 26814                           tosu	equ	0xFFF
 26815                           tosh	equ	0xFFE
 26816                           tosl	equ	0xFFD
 26817                           pclath	equ	0xFFA
 26818                           tblptru	equ	0xFF8
 26819                           tblptrh	equ	0xFF7
 26820                           tblptrl	equ	0xFF6
 26821                           tablat	equ	0xFF5
 26822                           prodh	equ	0xFF4
 26823                           prodl	equ	0xFF3
 26824                           intcon	equ	0xFF2
 26825                           intcon2	equ	0xFF1
 26826                           intcon3	equ	0xFF0
 26827                           indf0	equ	0xFEF
 26828                           postinc0	equ	0xFEE
 26829                           fsr0h	equ	0xFEA
 26830                           fsr0l	equ	0xFE9
 26831                           wreg	equ	0xFE8
 26832                           indf1	equ	0xFE7
 26833                           postdec1	equ	0xFE5
 26834                           plusw1	equ	0xFE3
 26835                           fsr1h	equ	0xFE2
 26836                           fsr1l	equ	0xFE1
 26837                           indf2	equ	0xFDF
 26838                           postinc2	equ	0xFDE
 26839                           postdec2	equ	0xFDD
 26840                           plusw2	equ	0xFDB
 26841                           fsr2h	equ	0xFDA
 26842                           fsr2l	equ	0xFD9
 26843                           status	equ	0xFD8
 26844                           
 26845 ;; *************** function _ExternalFlash_CapacityRead *****************
 26846 ;; Defined at:
 26847 ;;		line 23 in file "external_flash.c"
 26848 ;; Parameters:    Size  Location     Type
 26849 ;;  config          2    0[COMRAM] PTR void 
 26850 ;;		 -> NULL(0), 
 26851 ;; Auto vars:     Size  Location     Type
 26852 ;;		None
 26853 ;; Return value:  Size  Location     Type
 26854 ;;                  4    0[COMRAM] unsigned long 
 26855 ;; Registers used:
 26856 ;;		wreg, status,2
 26857 ;; Tracked objects:
 26858 ;;		On entry : 0/0
 26859 ;;		On exit  : 0/0
 26860 ;;		Unchanged: 0/0
 26861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26865 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26866 ;;Total ram usage:        4 bytes
 26867 ;; Hardware stack levels used:    1
 26868 ;; This function calls:
 26869 ;;		Nothing
 26870 ;; This function is called by:
 26871 ;;		_MSDProcessCommandMediaPresent
 26872 ;; This function uses a non-reentrant model
 26873 ;;
 26874                           
 26875                           	psect	text121
 26876  007A4C                     __ptext121:
 26877                           	opt stack 0
 26878  007A4C                     _ExternalFlash_CapacityRead:
 26879                           	opt stack 26
 26880                           
 26881                           ;external_flash.c: 26: return ((uint32_t) 8196 - 1);
 26882                           
 26883                           ;incstack = 0
 26884  007A4C  0E03               	movlw	3
 26885  007A4E  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 26886  007A50  0E20               	movlw	32
 26887  007A52  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 26888  007A54  0E00               	movlw	0
 26889  007A56  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 26890  007A58  0E00               	movlw	0
 26891  007A5A  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 26892  007A5C  0012               	return	
 26893  007A5E                     __end_of_ExternalFlash_CapacityRead:
 26894                           	opt stack 0
 26895                           tosu	equ	0xFFF
 26896                           tosh	equ	0xFFE
 26897                           tosl	equ	0xFFD
 26898                           pclath	equ	0xFFA
 26899                           tblptru	equ	0xFF8
 26900                           tblptrh	equ	0xFF7
 26901                           tblptrl	equ	0xFF6
 26902                           tablat	equ	0xFF5
 26903                           prodh	equ	0xFF4
 26904                           prodl	equ	0xFF3
 26905                           intcon	equ	0xFF2
 26906                           intcon2	equ	0xFF1
 26907                           intcon3	equ	0xFF0
 26908                           indf0	equ	0xFEF
 26909                           postinc0	equ	0xFEE
 26910                           fsr0h	equ	0xFEA
 26911                           fsr0l	equ	0xFE9
 26912                           wreg	equ	0xFE8
 26913                           indf1	equ	0xFE7
 26914                           postdec1	equ	0xFE5
 26915                           plusw1	equ	0xFE3
 26916                           fsr1h	equ	0xFE2
 26917                           fsr1l	equ	0xFE1
 26918                           indf2	equ	0xFDF
 26919                           postinc2	equ	0xFDE
 26920                           postdec2	equ	0xFDD
 26921                           plusw2	equ	0xFDB
 26922                           fsr2h	equ	0xFDA
 26923                           fsr2l	equ	0xFD9
 26924                           status	equ	0xFD8
 26925                           
 26926 ;; *************** function _ExternalFlash_MediaInitialize *****************
 26927 ;; Defined at:
 26928 ;;		line 10 in file "external_flash.c"
 26929 ;; Parameters:    Size  Location     Type
 26930 ;;  config          2    0[COMRAM] PTR void 
 26931 ;;		 -> NULL(0), 
 26932 ;; Auto vars:     Size  Location     Type
 26933 ;;		None
 26934 ;; Return value:  Size  Location     Type
 26935 ;;                  2    0[COMRAM] PTR struct .
 26936 ;; Registers used:
 26937 ;;		wreg, status,2, status,0
 26938 ;; Tracked objects:
 26939 ;;		On entry : 0/0
 26940 ;;		On exit  : 0/0
 26941 ;;		Unchanged: 0/0
 26942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26947 ;;Total ram usage:        2 bytes
 26948 ;; Hardware stack levels used:    1
 26949 ;; This function calls:
 26950 ;;		Nothing
 26951 ;; This function is called by:
 26952 ;;		_USBMSDInit
 26953 ;;		_MSDProcessCommand
 26954 ;; This function uses a non-reentrant model
 26955 ;;
 26956                           
 26957                           	psect	text122
 26958  00799E                     __ptext122:
 26959                           	opt stack 0
 26960  00799E                     _ExternalFlash_MediaInitialize:
 26961                           	opt stack 26
 26962                           
 26963                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 26964                           
 26965                           ;incstack = 0
 26966  00799E  0101               	movlb	1	; () banked
 26967  0079A0  81D4               	bsf	(_mediaInformation+1)& (0+255),0,b
 26968                           
 26969                           ; BSR set to: 1
 26970                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 26971  0079A2  0E02               	movlw	2
 26972  0079A4  6FD6               	movwf	(_mediaInformation+3)& (0+255),b
 26973  0079A6  0E00               	movlw	0
 26974  0079A8  6FD5               	movwf	(_mediaInformation+2)& (0+255),b
 26975                           
 26976                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 26977  0079AA  0E00               	movlw	0
 26978  0079AC  6FD3               	movwf	_mediaInformation& (0+255),b
 26979                           
 26980                           ; BSR set to: 1
 26981                           ;external_flash.c: 15: return &mediaInformation;
 26982  0079AE  0ED3               	movlw	low _mediaInformation
 26983  0079B0  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 26984  0079B2  0E01               	movlw	high _mediaInformation
 26985  0079B4  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 26986  0079B6  0012               	return	
 26987  0079B8                     __end_of_ExternalFlash_MediaInitialize:
 26988                           	opt stack 0
 26989                           tosu	equ	0xFFF
 26990                           tosh	equ	0xFFE
 26991                           tosl	equ	0xFFD
 26992                           pclath	equ	0xFFA
 26993                           tblptru	equ	0xFF8
 26994                           tblptrh	equ	0xFF7
 26995                           tblptrl	equ	0xFF6
 26996                           tablat	equ	0xFF5
 26997                           prodh	equ	0xFF4
 26998                           prodl	equ	0xFF3
 26999                           intcon	equ	0xFF2
 27000                           intcon2	equ	0xFF1
 27001                           intcon3	equ	0xFF0
 27002                           indf0	equ	0xFEF
 27003                           postinc0	equ	0xFEE
 27004                           fsr0h	equ	0xFEA
 27005                           fsr0l	equ	0xFE9
 27006                           wreg	equ	0xFE8
 27007                           indf1	equ	0xFE7
 27008                           postdec1	equ	0xFE5
 27009                           plusw1	equ	0xFE3
 27010                           fsr1h	equ	0xFE2
 27011                           fsr1l	equ	0xFE1
 27012                           indf2	equ	0xFDF
 27013                           postinc2	equ	0xFDE
 27014                           postdec2	equ	0xFDD
 27015                           plusw2	equ	0xFDB
 27016                           fsr2h	equ	0xFDA
 27017                           fsr2l	equ	0xFD9
 27018                           status	equ	0xFD8
 27019                           
 27020 ;; *************** function _ExternalFlash_MediaDetect *****************
 27021 ;; Defined at:
 27022 ;;		line 29 in file "external_flash.c"
 27023 ;; Parameters:    Size  Location     Type
 27024 ;;  config          2    0[COMRAM] PTR void 
 27025 ;;		 -> NULL(0), 
 27026 ;; Auto vars:     Size  Location     Type
 27027 ;;		None
 27028 ;; Return value:  Size  Location     Type
 27029 ;;                  1    wreg      unsigned char 
 27030 ;; Registers used:
 27031 ;;		wreg
 27032 ;; Tracked objects:
 27033 ;;		On entry : 0/0
 27034 ;;		On exit  : 0/0
 27035 ;;		Unchanged: 0/0
 27036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27041 ;;Total ram usage:        2 bytes
 27042 ;; Hardware stack levels used:    1
 27043 ;; This function calls:
 27044 ;;		Nothing
 27045 ;; This function is called by:
 27046 ;;		_USBMSDInit
 27047 ;;		_MSDProcessCommand
 27048 ;; This function uses a non-reentrant model
 27049 ;;
 27050                           
 27051                           	psect	text123
 27052  007B6C                     __ptext123:
 27053                           	opt stack 0
 27054  007B6C                     _ExternalFlash_MediaDetect:
 27055                           	opt stack 26
 27056                           
 27057                           ;external_flash.c: 31: return 1;
 27058                           
 27059                           ; BSR set to: 1
 27060                           ;incstack = 0
 27061  007B6C  0E01               	movlw	1
 27062  007B6E  0012               	return	
 27063  007B70                     __end_of_ExternalFlash_MediaDetect:
 27064                           	opt stack 0
 27065                           tosu	equ	0xFFF
 27066                           tosh	equ	0xFFE
 27067                           tosl	equ	0xFFD
 27068                           pclath	equ	0xFFA
 27069                           tblptru	equ	0xFF8
 27070                           tblptrh	equ	0xFF7
 27071                           tblptrl	equ	0xFF6
 27072                           tablat	equ	0xFF5
 27073                           prodh	equ	0xFF4
 27074                           prodl	equ	0xFF3
 27075                           intcon	equ	0xFF2
 27076                           intcon2	equ	0xFF1
 27077                           intcon3	equ	0xFF0
 27078                           indf0	equ	0xFEF
 27079                           postinc0	equ	0xFEE
 27080                           fsr0h	equ	0xFEA
 27081                           fsr0l	equ	0xFE9
 27082                           wreg	equ	0xFE8
 27083                           indf1	equ	0xFE7
 27084                           postdec1	equ	0xFE5
 27085                           plusw1	equ	0xFE3
 27086                           fsr1h	equ	0xFE2
 27087                           fsr1l	equ	0xFE1
 27088                           indf2	equ	0xFDF
 27089                           postinc2	equ	0xFDE
 27090                           postdec2	equ	0xFDD
 27091                           plusw2	equ	0xFDB
 27092                           fsr2h	equ	0xFDA
 27093                           fsr2l	equ	0xFD9
 27094                           status	equ	0xFD8
 27095                           
 27096 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 27097 ;; Defined at:
 27098 ;;		line 74 in file "app_device_custom_hid.c"
 27099 ;; Parameters:    Size  Location     Type
 27100 ;;		None
 27101 ;; Auto vars:     Size  Location     Type
 27102 ;;  idx             1    0        unsigned char 
 27103 ;; Return value:  Size  Location     Type
 27104 ;;                  1    wreg      void 
 27105 ;; Registers used:
 27106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27107 ;; Tracked objects:
 27108 ;;		On entry : 0/0
 27109 ;;		On exit  : 0/0
 27110 ;;		Unchanged: 0/0
 27111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27114 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27115 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27116 ;;Total ram usage:        4 bytes
 27117 ;; Hardware stack levels used:    1
 27118 ;; Hardware stack levels required when called:   13
 27119 ;; This function calls:
 27120 ;;		_USBTransferOnePacket
 27121 ;;		_api_parse
 27122 ;;		_api_prepare
 27123 ;; This function is called by:
 27124 ;;		_main
 27125 ;; This function uses a non-reentrant model
 27126 ;;
 27127                           
 27128                           	psect	text124
 27129  00546A                     __ptext124:
 27130                           	opt stack 0
 27131  00546A                     _APP_DeviceCustomHIDTasks:
 27132                           	opt stack 17
 27133                           
 27134                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 27135                           
 27136                           ;incstack = 0
 27137  00546A  0E20               	movlw	32
 27138  00546C  605F               	cpfslt	_USBDeviceState,c
 27139  00546E  D001               	goto	l930
 27140  005470  0012               	return	
 27141  005472                     l930:
 27142                           
 27143                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 27144  005472  B265               	btfsc	3941,1,c	;volatile
 27145  005474  0012               	return	
 27146                           
 27147                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 27148                           
 27149                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 27150  005476  0100               	movlb	0	; () banked
 27151  005478  518A               	movf	_USBOutHandle& (0+255),w,b
 27152  00547A  118B               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 27153  00547C  B4D8               	btfsc	status,2,c
 27154  00547E  D006               	goto	u11280
 27155                           
 27156                           ; BSR set to: 0
 27157  005480  C08A  FFD9         	movff	_USBOutHandle,fsr2l
 27158  005484  C08B  FFDA         	movff	_USBOutHandle+1,fsr2h
 27159  005488  BEDF               	btfsc	indf2,7,c
 27160  00548A  0012               	return	
 27161  00548C                     u11280:
 27162                           
 27163                           ; BSR set to: 0
 27164                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 27165                           
 27166                           ; BSR set to: 0
 27167  00548C  5188               	movf	_USBInHandle& (0+255),w,b
 27168  00548E  1189               	iorwf	(_USBInHandle+1)& (0+255),w,b
 27169  005490  B4D8               	btfsc	status,2,c
 27170  005492  D006               	goto	u11300
 27171                           
 27172                           ; BSR set to: 0
 27173  005494  C088  FFD9         	movff	_USBInHandle,fsr2l
 27174  005498  C089  FFDA         	movff	_USBInHandle+1,fsr2h
 27175  00549C  BEDF               	btfsc	indf2,7,c
 27176  00549E  D01F               	goto	l936
 27177  0054A0                     u11300:
 27178                           
 27179                           ; BSR set to: 0
 27180                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 27181                           
 27182                           ; BSR set to: 0
 27183  0054A0  0E40               	movlw	_ReceivedDataBuffer& (0+255)
 27184  0054A2  6FFB               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 27185  0054A4  6BFC               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 27186  0054A6  C0FB  F0F7         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 27187  0054AA  C0FC  F0F8         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 27188  0054AE  0E00               	movlw	_ToSendDataBuffer& (0+255)
 27189  0054B0  6FFD               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 27190  0054B2  6BFE               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 27191  0054B4  C0FD  F0F9         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 27192  0054B8  C0FE  F0FA         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 27193  0054BC  EC64  F021         	call	_api_prepare	;wreg free
 27194                           
 27195                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 27196  0054C0  0E01               	movlw	1
 27197  0054C2  6E01               	movwf	USBTransferOnePacket@dir,c
 27198  0054C4  0E00               	movlw	low _ToSendDataBuffer
 27199  0054C6  6E02               	movwf	USBTransferOnePacket@data,c
 27200  0054C8  0E02               	movlw	high _ToSendDataBuffer
 27201  0054CA  6E03               	movwf	USBTransferOnePacket@data+1,c
 27202  0054CC  0E40               	movlw	64
 27203  0054CE  6E04               	movwf	USBTransferOnePacket@len,c
 27204  0054D0  0E01               	movlw	1
 27205  0054D2  EC63  F020         	call	_USBTransferOnePacket
 27206  0054D6  C001  F088         	movff	?_USBTransferOnePacket,_USBInHandle
 27207  0054DA  C002  F089         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 27208  0054DE                     l936:
 27209                           
 27210                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 27211  0054DE  0E40               	movlw	low _ReceivedDataBuffer
 27212  0054E0  0100               	movlb	0	; () banked
 27213  0054E2  6FF1               	movwf	api_parse@inBuffer& (0+255),b
 27214  0054E4  0E02               	movlw	high _ReceivedDataBuffer
 27215  0054E6  6FF2               	movwf	(api_parse@inBuffer+1)& (0+255),b
 27216  0054E8  0E40               	movlw	64
 27217  0054EA  6FF3               	movwf	api_parse@receivedDataLength& (0+255),b
 27218  0054EC  EC7E  F024         	call	_api_parse	;wreg free
 27219                           
 27220                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 27221  0054F0  0E00               	movlw	0
 27222  0054F2  6E01               	movwf	USBTransferOnePacket@dir,c
 27223  0054F4  0E40               	movlw	low _ReceivedDataBuffer
 27224  0054F6  6E02               	movwf	USBTransferOnePacket@data,c
 27225  0054F8  0E02               	movlw	high _ReceivedDataBuffer
 27226  0054FA  6E03               	movwf	USBTransferOnePacket@data+1,c
 27227  0054FC  0E40               	movlw	64
 27228  0054FE  6E04               	movwf	USBTransferOnePacket@len,c
 27229  005500  0E01               	movlw	1
 27230  005502  EC63  F020         	call	_USBTransferOnePacket
 27231  005506  C001  F08A         	movff	?_USBTransferOnePacket,_USBOutHandle
 27232  00550A  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 27233  00550E  0012               	return	
 27234  005510                     __end_of_APP_DeviceCustomHIDTasks:
 27235                           	opt stack 0
 27236                           tosu	equ	0xFFF
 27237                           tosh	equ	0xFFE
 27238                           tosl	equ	0xFFD
 27239                           pclath	equ	0xFFA
 27240                           tblptru	equ	0xFF8
 27241                           tblptrh	equ	0xFF7
 27242                           tblptrl	equ	0xFF6
 27243                           tablat	equ	0xFF5
 27244                           prodh	equ	0xFF4
 27245                           prodl	equ	0xFF3
 27246                           intcon	equ	0xFF2
 27247                           intcon2	equ	0xFF1
 27248                           intcon3	equ	0xFF0
 27249                           indf0	equ	0xFEF
 27250                           postinc0	equ	0xFEE
 27251                           fsr0h	equ	0xFEA
 27252                           fsr0l	equ	0xFE9
 27253                           wreg	equ	0xFE8
 27254                           indf1	equ	0xFE7
 27255                           postdec1	equ	0xFE5
 27256                           plusw1	equ	0xFE3
 27257                           fsr1h	equ	0xFE2
 27258                           fsr1l	equ	0xFE1
 27259                           indf2	equ	0xFDF
 27260                           postinc2	equ	0xFDE
 27261                           postdec2	equ	0xFDD
 27262                           plusw2	equ	0xFDB
 27263                           fsr2h	equ	0xFDA
 27264                           fsr2l	equ	0xFD9
 27265                           status	equ	0xFD8
 27266                           
 27267 ;; *************** function _api_prepare *****************
 27268 ;; Defined at:
 27269 ;;		line 52 in file "api.c"
 27270 ;; Parameters:    Size  Location     Type
 27271 ;;  inBuffer        2   57[BANK0 ] PTR unsigned char 
 27272 ;;		 -> RAM(3759), 
 27273 ;;  outBuffer       2   59[BANK0 ] PTR unsigned char 
 27274 ;;		 -> RAM(3759), 
 27275 ;; Auto vars:     Size  Location     Type
 27276 ;;  command         1   93[COMRAM] enum E6715
 27277 ;; Return value:  Size  Location     Type
 27278 ;;                  1    wreg      void 
 27279 ;; Registers used:
 27280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27281 ;; Tracked objects:
 27282 ;;		On entry : 0/0
 27283 ;;		On exit  : 0/0
 27284 ;;		Unchanged: 0/0
 27285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27286 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27289 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27290 ;;Total ram usage:        5 bytes
 27291 ;; Hardware stack levels used:    1
 27292 ;; Hardware stack levels required when called:   11
 27293 ;; This function calls:
 27294 ;;		__fill_buffer_find_file
 27295 ;;		__fill_buffer_get_bootloader_details
 27296 ;;		__fill_buffer_get_configuration
 27297 ;;		__fill_buffer_get_display
 27298 ;;		__fill_buffer_get_file_details
 27299 ;;		__fill_buffer_get_status
 27300 ;;		__fill_buffer_read_file
 27301 ;;		_flash_is_busy
 27302 ;; This function is called by:
 27303 ;;		_APP_DeviceCustomHIDTasks
 27304 ;; This function uses a non-reentrant model
 27305 ;;
 27306                           
 27307                           	psect	text125
 27308  0042C8                     __ptext125:
 27309                           	opt stack 0
 27310  0042C8                     _api_prepare:
 27311                           	opt stack 18
 27312                           
 27313                           ;api.c: 54: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 27314                           
 27315                           ;incstack = 0
 27316  0042C8  C0F7  FFD9         	movff	api_prepare@inBuffer,fsr2l
 27317  0042CC  C0F8  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 27318  0042D0  50DF               	movf	indf2,w,c
 27319  0042D2  6E5E               	movwf	api_prepare@command,c
 27320                           
 27321                           ;api.c: 56: if(command>0x7F)
 27322  0042D4  0E7F               	movlw	127
 27323  0042D6  645E               	cpfsgt	api_prepare@command,c
 27324  0042D8  D05F               	goto	l2425
 27325                           
 27326                           ;api.c: 57: {;api.c: 61: if(flash_is_busy())
 27327  0042DA  ECFF  F03C         	call	_flash_is_busy	;wreg free
 27328  0042DE  0900               	iorlw	0
 27329  0042E0  B4D8               	btfsc	status,2,c
 27330  0042E2  D028               	goto	l2419
 27331                           
 27332                           ;api.c: 62: {;api.c: 63: _fill_buffer_get_status(outBuffer);
 27333  0042E4  C0F9  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 27334  0042E8  C0FA  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 27335  0042EC  EC30  F023         	call	__fill_buffer_get_status	;wreg free
 27336                           
 27337                           ;api.c: 64: return;
 27338  0042F0  0012               	return	
 27339  0042F2                     
 27340                           ;api.c: 72: _fill_buffer_get_file_details(inBuffer, outBuffer);
 27341  0042F2  C0F7  F040         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 27342  0042F6  C0F8  F041         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 27343  0042FA  C0F9  F042         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 27344  0042FE  C0FA  F043         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 27345  004302  ECCA  F032         	call	__fill_buffer_get_file_details	;wreg free
 27346                           
 27347                           ;api.c: 73: break;
 27348  004306  0012               	return	
 27349  004308                     
 27350                           ;api.c: 77: _fill_buffer_find_file(inBuffer, outBuffer);
 27351  004308  C0F7  F045         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 27352  00430C  C0F8  F046         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 27353  004310  C0F9  F047         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 27354  004314  C0FA  F048         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 27355  004318  EC2C  F02B         	call	__fill_buffer_find_file	;wreg free
 27356                           
 27357                           ;api.c: 78: break;
 27358  00431C  0012               	return	
 27359  00431E                     
 27360                           ;api.c: 82: _fill_buffer_read_file(inBuffer, outBuffer);
 27361  00431E  C0F7  F056         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 27362  004322  C0F8  F057         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 27363  004326  C0F9  F058         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 27364  00432A  C0FA  F059         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 27365  00432E  EC9B  F011         	call	__fill_buffer_read_file	;wreg free
 27366                           
 27367                           ;api.c: 84: }
 27368                           
 27369                           ;api.c: 83: break;
 27370  004332  0012               	return	
 27371  004334                     l2419:
 27372  004334  505E               	movf	api_prepare@command,w,c
 27373                           
 27374                           ; Switch size 1, requested type "space"
 27375                           ; Number of cases is 3, Range of values is 128 to 130
 27376                           ; switch strategies available:
 27377                           ; Name         Instructions Cycles
 27378                           ; simple_byte           10     6 (average)
 27379                           ;	Chosen strategy is simple_byte
 27380  004336  0A80               	xorlw	128	; case 128
 27381  004338  B4D8               	btfsc	status,2,c
 27382  00433A  D7DB               	goto	l2420
 27383  00433C  0A01               	xorlw	1	; case 129
 27384  00433E  B4D8               	btfsc	status,2,c
 27385  004340  D7E3               	goto	l2422
 27386  004342  0A03               	xorlw	3	; case 130
 27387  004344  A4D8               	btfss	status,2,c
 27388                           
 27389                           ;api.c: 85: }
 27390  004346  0012               	return	
 27391  004348  D7EA               	goto	l2423
 27392  00434A                     
 27393                           ;api.c: 93: _fill_buffer_get_status(outBuffer);
 27394  00434A  C0F9  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 27395  00434E  C0FA  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 27396  004352  EC30  F023         	call	__fill_buffer_get_status	;wreg free
 27397                           
 27398                           ;api.c: 94: break;
 27399  004356  0012               	return	
 27400  004358                     
 27401                           ;api.c: 98: _fill_buffer_get_display(outBuffer, 0);
 27402  004358  C0F9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 27403  00435C  C0FA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 27404  004360  0E00               	movlw	0
 27405  004362  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 27406  004364  EC30  F029         	call	__fill_buffer_get_display	;wreg free
 27407                           
 27408                           ;api.c: 99: break;
 27409  004368  0012               	return	
 27410  00436A                     
 27411                           ;api.c: 103: _fill_buffer_get_display(outBuffer, 1);
 27412  00436A  C0F9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 27413  00436E  C0FA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 27414  004372  0E01               	movlw	1
 27415  004374  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 27416  004376  EC30  F029         	call	__fill_buffer_get_display	;wreg free
 27417                           
 27418                           ;api.c: 104: break;
 27419  00437A  0012               	return	
 27420  00437C                     
 27421                           ;api.c: 108: _fill_buffer_get_bootloader_details(outBuffer);
 27422  00437C  C0F9  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 27423  004380  C0FA  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 27424  004384  ECA5  F013         	call	__fill_buffer_get_bootloader_details	;wreg free
 27425                           
 27426                           ;api.c: 109: break;
 27427  004388  0012               	return	
 27428  00438A                     
 27429                           ;api.c: 113: _fill_buffer_get_configuration(outBuffer);
 27430  00438A  C0F9  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 27431  00438E  C0FA  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 27432  004392  EC1B  F02C         	call	__fill_buffer_get_configuration	;wreg free
 27433                           
 27434                           ;api.c: 115: }
 27435                           
 27436                           ;api.c: 114: break;
 27437  004396  0012               	return	
 27438  004398                     l2425:
 27439  004398  505E               	movf	api_prepare@command,w,c
 27440                           
 27441                           ; Switch size 1, requested type "space"
 27442                           ; Number of cases is 5, Range of values is 16 to 20
 27443                           ; switch strategies available:
 27444                           ; Name         Instructions Cycles
 27445                           ; simple_byte           16     9 (average)
 27446                           ;	Chosen strategy is simple_byte
 27447  00439A  0A10               	xorlw	16	; case 16
 27448  00439C  B4D8               	btfsc	status,2,c
 27449  00439E  D7D5               	goto	l2426
 27450  0043A0  0A01               	xorlw	1	; case 17
 27451  0043A2  B4D8               	btfsc	status,2,c
 27452  0043A4  D7D9               	goto	l2428
 27453  0043A6  0A03               	xorlw	3	; case 18
 27454  0043A8  B4D8               	btfsc	status,2,c
 27455  0043AA  D7DF               	goto	l2429
 27456  0043AC  0A01               	xorlw	1	; case 19
 27457  0043AE  B4D8               	btfsc	status,2,c
 27458  0043B0  D7E5               	goto	l2430
 27459  0043B2  0A07               	xorlw	7	; case 20
 27460  0043B4  A4D8               	btfss	status,2,c
 27461  0043B6  0012               	return	
 27462  0043B8  D7E8               	goto	l2431
 27463  0043BA                     __end_of_api_prepare:
 27464                           	opt stack 0
 27465                           tosu	equ	0xFFF
 27466                           tosh	equ	0xFFE
 27467                           tosl	equ	0xFFD
 27468                           pclath	equ	0xFFA
 27469                           tblptru	equ	0xFF8
 27470                           tblptrh	equ	0xFF7
 27471                           tblptrl	equ	0xFF6
 27472                           tablat	equ	0xFF5
 27473                           prodh	equ	0xFF4
 27474                           prodl	equ	0xFF3
 27475                           intcon	equ	0xFF2
 27476                           intcon2	equ	0xFF1
 27477                           intcon3	equ	0xFF0
 27478                           indf0	equ	0xFEF
 27479                           postinc0	equ	0xFEE
 27480                           fsr0h	equ	0xFEA
 27481                           fsr0l	equ	0xFE9
 27482                           wreg	equ	0xFE8
 27483                           indf1	equ	0xFE7
 27484                           postdec1	equ	0xFE5
 27485                           plusw1	equ	0xFE3
 27486                           fsr1h	equ	0xFE2
 27487                           fsr1l	equ	0xFE1
 27488                           indf2	equ	0xFDF
 27489                           postinc2	equ	0xFDE
 27490                           postdec2	equ	0xFDD
 27491                           plusw2	equ	0xFDB
 27492                           fsr2h	equ	0xFDA
 27493                           fsr2l	equ	0xFD9
 27494                           status	equ	0xFD8
 27495                           
 27496 ;; *************** function __fill_buffer_read_file *****************
 27497 ;; Defined at:
 27498 ;;		line 367 in file "api.c"
 27499 ;; Parameters:    Size  Location     Type
 27500 ;;  inBuffer        2   85[COMRAM] PTR unsigned char 
 27501 ;;		 -> RAM(3759), 
 27502 ;;  outBuffer       2   87[COMRAM] PTR unsigned char 
 27503 ;;		 -> RAM(3759), 
 27504 ;; Auto vars:     Size  Location     Type
 27505 ;;  start           4   53[BANK0 ] unsigned long 
 27506 ;;  data_length     4   49[BANK0 ] unsigned long 
 27507 ;;  file_size       4   45[BANK0 ] unsigned long 
 27508 ;; Return value:  Size  Location     Type
 27509 ;;                  1    wreg      void 
 27510 ;; Registers used:
 27511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 27512 ;; Tracked objects:
 27513 ;;		On entry : 0/0
 27514 ;;		On exit  : 0/0
 27515 ;;		Unchanged: 0/0
 27516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27517 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27518 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27519 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27520 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27521 ;;Total ram usage:       20 bytes
 27522 ;; Hardware stack levels used:    1
 27523 ;; Hardware stack levels required when called:   10
 27524 ;; This function calls:
 27525 ;;		_fat_get_file_size
 27526 ;;		_fat_read_from_file
 27527 ;; This function is called by:
 27528 ;;		_api_prepare
 27529 ;; This function uses a non-reentrant model
 27530 ;;
 27531                           
 27532                           	psect	text126
 27533  002336                     __ptext126:
 27534                           	opt stack 0
 27535  002336                     __fill_buffer_read_file:
 27536                           	opt stack 18
 27537                           
 27538                           ;api.c: 369: uint32_t start;;api.c: 370: uint32_t file_size;;api.c: 371: uint32_t data_l
      +                          ength;;api.c: 374: outBuffer[0] = DATAREQUEST_FIND_FILE;
 27539                           
 27540                           ;incstack = 0
 27541  002336  C058  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 27542  00233A  C059  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 27543  00233E  0E81               	movlw	129
 27544  002340  6EDF               	movwf	indf2,c
 27545                           
 27546                           ;api.c: 377: outBuffer[1] = (uint8_t) 0xC125;
 27547  002342  EE20 F001          	lfsr	2,1
 27548  002346  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27549  002348  26D9               	addwf	fsr2l,f,c
 27550  00234A  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27551  00234C  22DA               	addwfc	fsr2h,f,c
 27552  00234E  0E25               	movlw	37
 27553  002350  6EDF               	movwf	indf2,c
 27554                           
 27555                           ;api.c: 378: outBuffer[2] = 0xC125 >> 8;
 27556  002352  EE20 F002          	lfsr	2,2
 27557  002356  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27558  002358  26D9               	addwf	fsr2l,f,c
 27559  00235A  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27560  00235C  22DA               	addwfc	fsr2h,f,c
 27561  00235E  0EC1               	movlw	193
 27562  002360  6EDF               	movwf	indf2,c
 27563                           
 27564                           ;api.c: 381: outBuffer[3] = inBuffer[1];
 27565  002362  EE20 F001          	lfsr	2,1
 27566  002366  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27567  002368  26D9               	addwf	fsr2l,f,c
 27568  00236A  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27569  00236C  22DA               	addwfc	fsr2h,f,c
 27570  00236E  EE10 F003          	lfsr	1,3
 27571  002372  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27572  002374  26E1               	addwf	fsr1l,f,c
 27573  002376  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27574  002378  22E2               	addwfc	fsr1h,f,c
 27575  00237A  CFDF FFE7          	movff	indf2,indf1
 27576                           
 27577                           ;api.c: 384: outBuffer[4] = inBuffer[1];
 27578  00237E  EE20 F001          	lfsr	2,1
 27579  002382  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27580  002384  26D9               	addwf	fsr2l,f,c
 27581  002386  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27582  002388  22DA               	addwfc	fsr2h,f,c
 27583  00238A  EE10 F004          	lfsr	1,4
 27584  00238E  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27585  002390  26E1               	addwf	fsr1l,f,c
 27586  002392  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27587  002394  22E2               	addwfc	fsr1h,f,c
 27588  002396  CFDF FFE7          	movff	indf2,indf1
 27589                           
 27590                           ;api.c: 385: outBuffer[5] = inBuffer[2];
 27591  00239A  EE20 F002          	lfsr	2,2
 27592  00239E  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27593  0023A0  26D9               	addwf	fsr2l,f,c
 27594  0023A2  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27595  0023A4  22DA               	addwfc	fsr2h,f,c
 27596  0023A6  EE10 F005          	lfsr	1,5
 27597  0023AA  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27598  0023AC  26E1               	addwf	fsr1l,f,c
 27599  0023AE  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27600  0023B0  22E2               	addwfc	fsr1h,f,c
 27601  0023B2  CFDF FFE7          	movff	indf2,indf1
 27602                           
 27603                           ;api.c: 386: outBuffer[6] = inBuffer[3];
 27604  0023B6  EE20 F003          	lfsr	2,3
 27605  0023BA  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27606  0023BC  26D9               	addwf	fsr2l,f,c
 27607  0023BE  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27608  0023C0  22DA               	addwfc	fsr2h,f,c
 27609  0023C2  EE10 F006          	lfsr	1,6
 27610  0023C6  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27611  0023C8  26E1               	addwf	fsr1l,f,c
 27612  0023CA  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27613  0023CC  22E2               	addwfc	fsr1h,f,c
 27614  0023CE  CFDF FFE7          	movff	indf2,indf1
 27615                           
 27616                           ;api.c: 387: outBuffer[7] = inBuffer[4];
 27617  0023D2  EE20 F004          	lfsr	2,4
 27618  0023D6  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27619  0023D8  26D9               	addwf	fsr2l,f,c
 27620  0023DA  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27621  0023DC  22DA               	addwfc	fsr2h,f,c
 27622  0023DE  EE10 F007          	lfsr	1,7
 27623  0023E2  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27624  0023E4  26E1               	addwf	fsr1l,f,c
 27625  0023E6  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27626  0023E8  22E2               	addwfc	fsr1h,f,c
 27627  0023EA  CFDF FFE7          	movff	indf2,indf1
 27628                           
 27629                           ;api.c: 390: start = inBuffer[4];
 27630  0023EE  EE20 F004          	lfsr	2,4
 27631  0023F2  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27632  0023F4  26D9               	addwf	fsr2l,f,c
 27633  0023F6  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27634  0023F8  22DA               	addwfc	fsr2h,f,c
 27635  0023FA  50DF               	movf	indf2,w,c
 27636  0023FC  6E5A               	movwf	??__fill_buffer_read_file& (0+255),c
 27637  0023FE  505A               	movf	??__fill_buffer_read_file,w,c
 27638  002400  0100               	movlb	0	; () banked
 27639  002402  6FF3               	movwf	__fill_buffer_read_file@start& (0+255),b
 27640  002404  6BF4               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 27641  002406  6BF5               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 27642  002408  6BF6               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 27643                           
 27644                           ; BSR set to: 0
 27645                           ;api.c: 391: start <<= 8;
 27646  00240A  C0F5  F0F6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 27647  00240E  C0F4  F0F5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 27648  002412  C0F3  F0F4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 27649  002416  6BF3               	clrf	__fill_buffer_read_file@start& (0+255),b
 27650                           
 27651                           ; BSR set to: 0
 27652                           ;api.c: 392: start |= inBuffer[3];
 27653  002418  EE20 F003          	lfsr	2,3
 27654  00241C  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27655  00241E  26D9               	addwf	fsr2l,f,c
 27656  002420  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27657  002422  22DA               	addwfc	fsr2h,f,c
 27658  002424  50DF               	movf	indf2,w,c
 27659  002426  6E5A               	movwf	??__fill_buffer_read_file& (0+255),c
 27660  002428  505A               	movf	??__fill_buffer_read_file,w,c
 27661  00242A  13F3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 27662                           
 27663                           ; BSR set to: 0
 27664                           ;api.c: 393: start <<= 8;
 27665  00242C  C0F5  F0F6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 27666  002430  C0F4  F0F5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 27667  002434  C0F3  F0F4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 27668  002438  6BF3               	clrf	__fill_buffer_read_file@start& (0+255),b
 27669                           
 27670                           ; BSR set to: 0
 27671                           ;api.c: 394: start |= inBuffer[2];
 27672  00243A  EE20 F002          	lfsr	2,2
 27673  00243E  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27674  002440  26D9               	addwf	fsr2l,f,c
 27675  002442  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27676  002444  22DA               	addwfc	fsr2h,f,c
 27677  002446  50DF               	movf	indf2,w,c
 27678  002448  6E5A               	movwf	??__fill_buffer_read_file& (0+255),c
 27679  00244A  505A               	movf	??__fill_buffer_read_file,w,c
 27680  00244C  13F3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 27681                           
 27682                           ; BSR set to: 0
 27683                           ;api.c: 395: start <<= 8;
 27684  00244E  C0F5  F0F6         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 27685  002452  C0F4  F0F5         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 27686  002456  C0F3  F0F4         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 27687  00245A  6BF3               	clrf	__fill_buffer_read_file@start& (0+255),b
 27688                           
 27689                           ; BSR set to: 0
 27690                           ;api.c: 396: start |= inBuffer[1];
 27691  00245C  EE20 F001          	lfsr	2,1
 27692  002460  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27693  002462  26D9               	addwf	fsr2l,f,c
 27694  002464  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27695  002466  22DA               	addwfc	fsr2h,f,c
 27696  002468  50DF               	movf	indf2,w,c
 27697  00246A  6E5A               	movwf	??__fill_buffer_read_file& (0+255),c
 27698  00246C  505A               	movf	??__fill_buffer_read_file,w,c
 27699  00246E  13F3               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 27700                           
 27701                           ; BSR set to: 0
 27702                           ;api.c: 399: file_size = fat_get_file_size(inBuffer[1]);
 27703  002470  EE20 F001          	lfsr	2,1
 27704  002474  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27705  002476  26D9               	addwf	fsr2l,f,c
 27706  002478  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27707  00247A  22DA               	addwfc	fsr2h,f,c
 27708  00247C  50DF               	movf	indf2,w,c
 27709  00247E  EC21  F032         	call	_fat_get_file_size
 27710  002482  C031  F0EB         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 27711  002486  C032  F0EC         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 27712  00248A  C033  F0ED         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 27713  00248E  C034  F0EE         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 27714                           
 27715                           ;api.c: 400: data_length = file_size - start;
 27716  002492  C0F3  F05A         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 27717  002496  C0F4  F05B         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 27718  00249A  C0F5  F05C         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 27719  00249E  C0F6  F05D         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 27720  0024A2  1E5A               	comf	??__fill_buffer_read_file,f,c
 27721  0024A4  1E5B               	comf	??__fill_buffer_read_file+1,f,c
 27722  0024A6  1E5C               	comf	??__fill_buffer_read_file+2,f,c
 27723  0024A8  1E5D               	comf	??__fill_buffer_read_file+3,f,c
 27724  0024AA  2A5A               	incf	??__fill_buffer_read_file,f,c
 27725  0024AC  0E00               	movlw	0
 27726  0024AE  225B               	addwfc	??__fill_buffer_read_file+1,f,c
 27727  0024B0  225C               	addwfc	??__fill_buffer_read_file+2,f,c
 27728  0024B2  225D               	addwfc	??__fill_buffer_read_file+3,f,c
 27729  0024B4  0100               	movlb	0	; () banked
 27730  0024B6  51EB               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 27731  0024B8  245A               	addwf	??__fill_buffer_read_file,w,c
 27732  0024BA  6FEF               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 27733  0024BC  51EC               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 27734  0024BE  205B               	addwfc	??__fill_buffer_read_file+1,w,c
 27735  0024C0  6FF0               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 27736  0024C2  51ED               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 27737  0024C4  205C               	addwfc	??__fill_buffer_read_file+2,w,c
 27738  0024C6  6FF1               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 27739  0024C8  51EE               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 27740  0024CA  205D               	addwfc	??__fill_buffer_read_file+3,w,c
 27741  0024CC  6FF2               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 27742                           
 27743                           ; BSR set to: 0
 27744                           ;api.c: 401: if(data_length>54)
 27745  0024CE  51F2               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 27746  0024D0  11F1               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 27747  0024D2  11F0               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 27748  0024D4  E104               	bnz	u9840
 27749  0024D6  0E37               	movlw	55
 27750  0024D8  5DEF               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 27751  0024DA  A0D8               	btfss	status,0,c
 27752  0024DC  D008               	goto	l2481
 27753  0024DE                     u9840:
 27754                           
 27755                           ; BSR set to: 0
 27756                           ;api.c: 402: {;api.c: 404: data_length = 54;
 27757  0024DE  0E36               	movlw	54
 27758  0024E0  6FEF               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 27759  0024E2  0E00               	movlw	0
 27760  0024E4  6FF0               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 27761  0024E6  0E00               	movlw	0
 27762  0024E8  6FF1               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 27763  0024EA  0E00               	movlw	0
 27764  0024EC  6FF2               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 27765  0024EE                     l2481:
 27766                           
 27767                           ; BSR set to: 0
 27768                           ;api.c: 405: };api.c: 408: outBuffer[8] = (uint8_t) data_length;
 27769                           
 27770                           ; BSR set to: 0
 27771  0024EE  EE20 F008          	lfsr	2,8
 27772  0024F2  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27773  0024F4  26D9               	addwf	fsr2l,f,c
 27774  0024F6  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27775  0024F8  22DA               	addwfc	fsr2h,f,c
 27776  0024FA  C0EF  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 27777                           
 27778                           ; BSR set to: 0
 27779                           ;api.c: 411: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 27780  0024FE  EE20 F009          	lfsr	2,9
 27781  002502  5058               	movf	__fill_buffer_read_file@outBuffer,w,c
 27782  002504  26D9               	addwf	fsr2l,f,c
 27783  002506  5059               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 27784  002508  22DA               	addwfc	fsr2h,f,c
 27785  00250A  C0F3  F040         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 27786  00250E  C0F4  F041         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 27787  002512  C0F5  F042         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 27788  002516  C0F6  F043         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 27789  00251A  C0EF  F044         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 27790  00251E  C0F0  F045         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 27791  002522  C0F1  F046         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 27792  002526  C0F2  F047         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 27793  00252A  0E0A               	movlw	10
 27794  00252C  2458               	addwf	__fill_buffer_read_file@outBuffer,w,c
 27795  00252E  6E48               	movwf	fat_read_from_file@data,c
 27796  002530  0E00               	movlw	0
 27797  002532  2059               	addwfc	__fill_buffer_read_file@outBuffer+1,w,c
 27798  002534  6E49               	movwf	fat_read_from_file@data+1,c
 27799  002536  EE10 F001          	lfsr	1,1
 27800  00253A  5056               	movf	__fill_buffer_read_file@inBuffer,w,c
 27801  00253C  26E1               	addwf	fsr1l,f,c
 27802  00253E  5057               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 27803  002540  22E2               	addwfc	fsr1h,f,c
 27804  002542  50E7               	movf	indf1,w,c
 27805  002544  EC78  F00F         	call	_fat_read_from_file
 27806  002548  6EDF               	movwf	indf2,c
 27807  00254A  0012               	return		;funcret
 27808  00254C                     __end_of__fill_buffer_read_file:
 27809                           	opt stack 0
 27810                           tosu	equ	0xFFF
 27811                           tosh	equ	0xFFE
 27812                           tosl	equ	0xFFD
 27813                           pclath	equ	0xFFA
 27814                           tblptru	equ	0xFF8
 27815                           tblptrh	equ	0xFF7
 27816                           tblptrl	equ	0xFF6
 27817                           tablat	equ	0xFF5
 27818                           prodh	equ	0xFF4
 27819                           prodl	equ	0xFF3
 27820                           intcon	equ	0xFF2
 27821                           intcon2	equ	0xFF1
 27822                           intcon3	equ	0xFF0
 27823                           indf0	equ	0xFEF
 27824                           postinc0	equ	0xFEE
 27825                           fsr0h	equ	0xFEA
 27826                           fsr0l	equ	0xFE9
 27827                           wreg	equ	0xFE8
 27828                           indf1	equ	0xFE7
 27829                           postdec1	equ	0xFE5
 27830                           plusw1	equ	0xFE3
 27831                           fsr1h	equ	0xFE2
 27832                           fsr1l	equ	0xFE1
 27833                           indf2	equ	0xFDF
 27834                           postinc2	equ	0xFDE
 27835                           postdec2	equ	0xFDD
 27836                           plusw2	equ	0xFDB
 27837                           fsr2h	equ	0xFDA
 27838                           fsr2l	equ	0xFD9
 27839                           status	equ	0xFD8
 27840                           
 27841 ;; *************** function _fat_read_from_file *****************
 27842 ;; Defined at:
 27843 ;;		line 559 in file "fat16.c"
 27844 ;; Parameters:    Size  Location     Type
 27845 ;;  file_number     1    wreg     unsigned char 
 27846 ;;  start_byte      4   63[COMRAM] unsigned long 
 27847 ;;  length          4   67[COMRAM] unsigned long 
 27848 ;;  data            2   71[COMRAM] PTR unsigned char 
 27849 ;;		 -> file_buffer(50), RAM(3759), 
 27850 ;; Auto vars:     Size  Location     Type
 27851 ;;  file_number     1    2[BANK0 ] unsigned char 
 27852 ;;  root           32    3[BANK0 ] struct .
 27853 ;;  position        4   41[BANK0 ] unsigned long 
 27854 ;;  read_length     2   39[BANK0 ] unsigned int 
 27855 ;;  offset          2   37[BANK0 ] unsigned int 
 27856 ;;  cluster         2   35[BANK0 ] unsigned int 
 27857 ;;  sector          2    0[BANK0 ] unsigned int 
 27858 ;; Return value:  Size  Location     Type
 27859 ;;                  1    wreg      unsigned char 
 27860 ;; Registers used:
 27861 ;;		wreg, status,2, status,0, cstack
 27862 ;; Tracked objects:
 27863 ;;		On entry : 0/0
 27864 ;;		On exit  : 0/0
 27865 ;;		Unchanged: 0/0
 27866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27867 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27868 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27869 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27870 ;;      Totals:        22      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27871 ;;Total ram usage:       67 bytes
 27872 ;; Hardware stack levels used:    1
 27873 ;; Hardware stack levels required when called:    9
 27874 ;; This function calls:
 27875 ;;		__read_fat
 27876 ;;		__sector_from_cluster
 27877 ;;		_fat_get_file_information
 27878 ;;		_flash_partial_read
 27879 ;; This function is called by:
 27880 ;;		__bootloader_verify_file
 27881 ;;		__bootloader_program
 27882 ;;		__fill_buffer_read_file
 27883 ;; This function uses a non-reentrant model
 27884 ;;
 27885                           
 27886                           	psect	text127
 27887  001EF0                     __ptext127:
 27888                           	opt stack 0
 27889  001EF0                     _fat_read_from_file:
 27890                           	opt stack 19
 27891                           
 27892                           ;incstack = 0
 27893                           ;fat_read_from_file@file_number stored from wreg
 27894  001EF0  0100               	movlb	0	; () banked
 27895  001EF2  6FC0               	movwf	fat_read_from_file@file_number& (0+255),b
 27896                           
 27897                           ;fat16.c: 561: rootEntry_t root;;fat16.c: 562: uint32_t position;;fat16.c: 563: uint16_t
      +                           cluster;;fat16.c: 564: uint16_t offset;;fat16.c: 565: uint16_t sector;;fat16.c: 566: ui
      +                          nt16_t read_length;;fat16.c: 569: fat_get_file_information(file_number, &root);
 27898  001EF4  0EC1               	movlw	low fat_read_from_file@root
 27899  001EF6  6E38               	movwf	fat_get_file_information@data,c
 27900  001EF8  0E00               	movlw	high fat_read_from_file@root
 27901  001EFA  6E39               	movwf	fat_get_file_information@data+1,c
 27902  001EFC  0100               	movlb	0	; () banked
 27903  001EFE  51C0               	movf	fat_read_from_file@file_number& (0+255),w,b
 27904  001F00  ECAD  F031         	call	_fat_get_file_information
 27905                           
 27906                           ;fat16.c: 570: cluster = root.firstCluster;
 27907  001F04  C0DB  F0E1         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 27908  001F08  C0DC  F0E2         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 27909                           
 27910                           ;fat16.c: 573: if(start_byte+length > root.fileSize)
 27911  001F0C  5044               	movf	fat_read_from_file@length,w,c
 27912  001F0E  2440               	addwf	fat_read_from_file@start_byte,w,c
 27913  001F10  6E4A               	movwf	??_fat_read_from_file& (0+255),c
 27914  001F12  5045               	movf	fat_read_from_file@length+1,w,c
 27915  001F14  2041               	addwfc	fat_read_from_file@start_byte+1,w,c
 27916  001F16  6E4B               	movwf	(??_fat_read_from_file+1)& (0+255),c
 27917  001F18  5046               	movf	fat_read_from_file@length+2,w,c
 27918  001F1A  2042               	addwfc	fat_read_from_file@start_byte+2,w,c
 27919  001F1C  6E4C               	movwf	(??_fat_read_from_file+2)& (0+255),c
 27920  001F1E  5047               	movf	fat_read_from_file@length+3,w,c
 27921  001F20  2043               	addwfc	fat_read_from_file@start_byte+3,w,c
 27922  001F22  6E4D               	movwf	(??_fat_read_from_file+3)& (0+255),c
 27923  001F24  504A               	movf	??_fat_read_from_file,w,c
 27924  001F26  0100               	movlb	0	; () banked
 27925  001F28  5DDD               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 27926  001F2A  504B               	movf	??_fat_read_from_file+1,w,c
 27927  001F2C  59DE               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 27928  001F2E  504C               	movf	??_fat_read_from_file+2,w,c
 27929  001F30  59DF               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 27930  001F32  504D               	movf	??_fat_read_from_file+3,w,c
 27931  001F34  59E0               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 27932  001F36  B0D8               	btfsc	status,0,c
 27933  001F38  D002               	goto	l1880
 27934                           
 27935                           ; BSR set to: 0
 27936                           ;fat16.c: 574: {;fat16.c: 576: return 0xFF;
 27937  001F3A  0EFF               	movlw	255
 27938                           
 27939                           ; BSR set to: 0
 27940  001F3C  0012               	return	
 27941  001F3E                     l1880:
 27942                           
 27943                           ; BSR set to: 0
 27944                           ;fat16.c: 577: };fat16.c: 580: position = 0;
 27945                           
 27946                           ; BSR set to: 0
 27947  001F3E  0E00               	movlw	0
 27948  001F40  6FE7               	movwf	fat_read_from_file@position& (0+255),b
 27949  001F42  0E00               	movlw	0
 27950  001F44  6FE8               	movwf	(fat_read_from_file@position+1)& (0+255),b
 27951  001F46  0E00               	movlw	0
 27952  001F48  6FE9               	movwf	(fat_read_from_file@position+2)& (0+255),b
 27953  001F4A  0E00               	movlw	0
 27954  001F4C  6FEA               	movwf	(fat_read_from_file@position+3)& (0+255),b
 27955                           
 27956                           ;fat16.c: 581: while((start_byte-position) >= 512)
 27957  001F4E  D013               	goto	l1882
 27958  001F50                     l11237:
 27959                           
 27960                           ; BSR set to: 0
 27961                           ;fat16.c: 582: {;fat16.c: 583: cluster = _read_fat(cluster);
 27962  001F50  C0E1  F031         	movff	fat_read_from_file@cluster,__read_fat@cluster
 27963  001F54  C0E2  F032         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 27964  001F58  ECB1  F038         	call	__read_fat	;wreg free
 27965  001F5C  C031  F0E1         	movff	?__read_fat,fat_read_from_file@cluster
 27966  001F60  C032  F0E2         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 27967                           
 27968                           ;fat16.c: 584: position += 512;
 27969  001F64  0E00               	movlw	0
 27970  001F66  0100               	movlb	0	; () banked
 27971  001F68  27E7               	addwf	fat_read_from_file@position& (0+255),f,b
 27972  001F6A  0E02               	movlw	2
 27973  001F6C  23E8               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 27974  001F6E  0E00               	movlw	0
 27975  001F70  23E9               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 27976  001F72  0E00               	movlw	0
 27977  001F74  23EA               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 27978  001F76                     l1882:
 27979                           
 27980                           ; BSR set to: 0
 27981                           
 27982                           ; BSR set to: 0
 27983  001F76  C0E7  F04A         	movff	fat_read_from_file@position,??_fat_read_from_file
 27984  001F7A  C0E8  F04B         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 27985  001F7E  C0E9  F04C         	movff	fat_read_from_file@position+2,??_fat_read_from_file+2
 27986  001F82  C0EA  F04D         	movff	fat_read_from_file@position+3,??_fat_read_from_file+3
 27987  001F86  1E4A               	comf	??_fat_read_from_file,f,c
 27988  001F88  1E4B               	comf	??_fat_read_from_file+1,f,c
 27989  001F8A  1E4C               	comf	??_fat_read_from_file+2,f,c
 27990  001F8C  1E4D               	comf	??_fat_read_from_file+3,f,c
 27991  001F8E  2A4A               	incf	??_fat_read_from_file,f,c
 27992  001F90  0E00               	movlw	0
 27993  001F92  224B               	addwfc	??_fat_read_from_file+1,f,c
 27994  001F94  224C               	addwfc	??_fat_read_from_file+2,f,c
 27995  001F96  224D               	addwfc	??_fat_read_from_file+3,f,c
 27996  001F98  5040               	movf	fat_read_from_file@start_byte,w,c
 27997  001F9A  244A               	addwf	??_fat_read_from_file,w,c
 27998  001F9C  6E4E               	movwf	(??_fat_read_from_file+4)& (0+255),c
 27999  001F9E  5041               	movf	fat_read_from_file@start_byte+1,w,c
 28000  001FA0  204B               	addwfc	??_fat_read_from_file+1,w,c
 28001  001FA2  6E4F               	movwf	(??_fat_read_from_file+5)& (0+255),c
 28002  001FA4  5042               	movf	fat_read_from_file@start_byte+2,w,c
 28003  001FA6  204C               	addwfc	??_fat_read_from_file+2,w,c
 28004  001FA8  6E50               	movwf	(??_fat_read_from_file+6)& (0+255),c
 28005  001FAA  5043               	movf	fat_read_from_file@start_byte+3,w,c
 28006  001FAC  204D               	addwfc	??_fat_read_from_file+3,w,c
 28007  001FAE  6E51               	movwf	(??_fat_read_from_file+7)& (0+255),c
 28008  001FB0  5051               	movf	??_fat_read_from_file+7,w,c
 28009  001FB2  1050               	iorwf	??_fat_read_from_file+6,w,c
 28010  001FB4  E1CD               	bnz	l11237
 28011  001FB6  0E02               	movlw	2
 28012  001FB8  5C4F               	subwf	??_fat_read_from_file+5,w,c
 28013  001FBA  B0D8               	btfsc	status,0,c
 28014  001FBC  D7C9               	goto	l1883
 28015                           
 28016                           ; BSR set to: 0
 28017                           ;fat16.c: 585: };fat16.c: 588: offset = start_byte - position;
 28018                           
 28019                           ; BSR set to: 0
 28020  001FBE  C0E7  F04A         	movff	fat_read_from_file@position,??_fat_read_from_file
 28021  001FC2  C0E8  F04B         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28022  001FC6  1E4A               	comf	??_fat_read_from_file,f,c
 28023  001FC8  1E4B               	comf	??_fat_read_from_file+1,f,c
 28024  001FCA  4A4A               	infsnz	??_fat_read_from_file,f,c
 28025  001FCC  2A4B               	incf	??_fat_read_from_file+1,f,c
 28026  001FCE  5040               	movf	fat_read_from_file@start_byte,w,c
 28027  001FD0  244A               	addwf	??_fat_read_from_file,w,c
 28028  001FD2  6FE3               	movwf	fat_read_from_file@offset& (0+255),b
 28029  001FD4  5041               	movf	fat_read_from_file@start_byte+1,w,c
 28030  001FD6  204B               	addwfc	??_fat_read_from_file+1,w,c
 28031  001FD8  6FE4               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 28032                           
 28033                           ; BSR set to: 0
 28034                           ;fat16.c: 591: position = 0;
 28035  001FDA  0E00               	movlw	0
 28036  001FDC  6FE7               	movwf	fat_read_from_file@position& (0+255),b
 28037  001FDE  0E00               	movlw	0
 28038  001FE0  6FE8               	movwf	(fat_read_from_file@position+1)& (0+255),b
 28039  001FE2  0E00               	movlw	0
 28040  001FE4  6FE9               	movwf	(fat_read_from_file@position+2)& (0+255),b
 28041  001FE6  0E00               	movlw	0
 28042  001FE8  6FEA               	movwf	(fat_read_from_file@position+3)& (0+255),b
 28043                           
 28044                           ;fat16.c: 592: while(position < length)
 28045  001FEA  D089               	goto	l1885
 28046  001FEC                     
 28047                           ; BSR set to: 0
 28048                           ;fat16.c: 593: {;fat16.c: 595: if(offset==512)
 28049                           
 28050                           ; BSR set to: 0
 28051  001FEC  0E02               	movlw	2
 28052  001FEE  19E4               	xorwf	(fat_read_from_file@offset+1)& (0+255),w,b
 28053  001FF0  11E3               	iorwf	fat_read_from_file@offset& (0+255),w,b
 28054  001FF2  A4D8               	btfss	status,2,c
 28055  001FF4  D00F               	goto	l1887
 28056                           
 28057                           ; BSR set to: 0
 28058                           ;fat16.c: 596: {;fat16.c: 598: cluster = _read_fat(cluster);
 28059  001FF6  C0E1  F031         	movff	fat_read_from_file@cluster,__read_fat@cluster
 28060  001FFA  C0E2  F032         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 28061  001FFE  ECB1  F038         	call	__read_fat	;wreg free
 28062  002002  C031  F0E1         	movff	?__read_fat,fat_read_from_file@cluster
 28063  002006  C032  F0E2         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 28064                           
 28065                           ;fat16.c: 599: offset = 0;
 28066  00200A  0E00               	movlw	0
 28067  00200C  0100               	movlb	0	; () banked
 28068  00200E  6FE4               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 28069  002010  0E00               	movlw	0
 28070  002012  6FE3               	movwf	fat_read_from_file@offset& (0+255),b
 28071  002014                     l1887:
 28072                           
 28073                           ; BSR set to: 0
 28074                           ;fat16.c: 600: };fat16.c: 603: sector = _sector_from_cluster(cluster);
 28075                           
 28076                           ; BSR set to: 0
 28077  002014  C0E1  F001         	movff	fat_read_from_file@cluster,__sector_from_cluster@fat_cluster
 28078  002018  C0E2  F002         	movff	fat_read_from_file@cluster+1,__sector_from_cluster@fat_cluster+1
 28079  00201C  EC50  F03D         	call	__sector_from_cluster	;wreg free
 28080  002020  C001  F0BE         	movff	?__sector_from_cluster,fat_read_from_file@sector
 28081  002024  C002  F0BF         	movff	?__sector_from_cluster+1,fat_read_from_file@sector+1
 28082                           
 28083                           ;fat16.c: 606: read_length = 512 - offset;
 28084  002028  C0E3  F04A         	movff	fat_read_from_file@offset,??_fat_read_from_file
 28085  00202C  C0E4  F04B         	movff	fat_read_from_file@offset+1,??_fat_read_from_file+1
 28086  002030  1E4A               	comf	??_fat_read_from_file,f,c
 28087  002032  1E4B               	comf	??_fat_read_from_file+1,f,c
 28088  002034  4A4A               	infsnz	??_fat_read_from_file,f,c
 28089  002036  2A4B               	incf	??_fat_read_from_file+1,f,c
 28090  002038  0E00               	movlw	0
 28091  00203A  244A               	addwf	??_fat_read_from_file,w,c
 28092  00203C  0100               	movlb	0	; () banked
 28093  00203E  6FE5               	movwf	fat_read_from_file@read_length& (0+255),b
 28094  002040  0E02               	movlw	2
 28095  002042  204B               	addwfc	??_fat_read_from_file+1,w,c
 28096  002044  6FE6               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 28097                           
 28098                           ; BSR set to: 0
 28099                           ;fat16.c: 607: if(read_length > (length-position))
 28100  002046  51E5               	movf	fat_read_from_file@read_length& (0+255),w,b
 28101  002048  6E4A               	movwf	??_fat_read_from_file& (0+255),c
 28102  00204A  51E6               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28103  00204C  6E4B               	movwf	(??_fat_read_from_file+1)& (0+255),c
 28104  00204E  6A4C               	clrf	(??_fat_read_from_file+2)& (0+255),c
 28105  002050  6A4D               	clrf	(??_fat_read_from_file+3)& (0+255),c
 28106  002052  C0E7  F04E         	movff	fat_read_from_file@position,??_fat_read_from_file+4
 28107  002056  C0E8  F04F         	movff	fat_read_from_file@position+1,??_fat_read_from_file+5
 28108  00205A  C0E9  F050         	movff	fat_read_from_file@position+2,??_fat_read_from_file+6
 28109  00205E  C0EA  F051         	movff	fat_read_from_file@position+3,??_fat_read_from_file+7
 28110  002062  1E4E               	comf	??_fat_read_from_file+4,f,c
 28111  002064  1E4F               	comf	??_fat_read_from_file+5,f,c
 28112  002066  1E50               	comf	??_fat_read_from_file+6,f,c
 28113  002068  1E51               	comf	??_fat_read_from_file+7,f,c
 28114  00206A  2A4E               	incf	??_fat_read_from_file+4,f,c
 28115  00206C  0E00               	movlw	0
 28116  00206E  224F               	addwfc	??_fat_read_from_file+5,f,c
 28117  002070  2250               	addwfc	??_fat_read_from_file+6,f,c
 28118  002072  2251               	addwfc	??_fat_read_from_file+7,f,c
 28119  002074  5044               	movf	fat_read_from_file@length,w,c
 28120  002076  244E               	addwf	??_fat_read_from_file+4,w,c
 28121  002078  6E52               	movwf	(??_fat_read_from_file+8)& (0+255),c
 28122  00207A  5045               	movf	fat_read_from_file@length+1,w,c
 28123  00207C  204F               	addwfc	??_fat_read_from_file+5,w,c
 28124  00207E  6E53               	movwf	(??_fat_read_from_file+9)& (0+255),c
 28125  002080  5046               	movf	fat_read_from_file@length+2,w,c
 28126  002082  2050               	addwfc	??_fat_read_from_file+6,w,c
 28127  002084  6E54               	movwf	(??_fat_read_from_file+10)& (0+255),c
 28128  002086  5047               	movf	fat_read_from_file@length+3,w,c
 28129  002088  2051               	addwfc	??_fat_read_from_file+7,w,c
 28130  00208A  6E55               	movwf	(??_fat_read_from_file+11)& (0+255),c
 28131  00208C  504A               	movf	??_fat_read_from_file,w,c
 28132  00208E  5C52               	subwf	??_fat_read_from_file+8,w,c
 28133  002090  504B               	movf	??_fat_read_from_file+1,w,c
 28134  002092  5853               	subwfb	??_fat_read_from_file+9,w,c
 28135  002094  504C               	movf	??_fat_read_from_file+2,w,c
 28136  002096  5854               	subwfb	??_fat_read_from_file+10,w,c
 28137  002098  504D               	movf	??_fat_read_from_file+3,w,c
 28138  00209A  5855               	subwfb	??_fat_read_from_file+11,w,c
 28139  00209C  B0D8               	btfsc	status,0,c
 28140  00209E  D00E               	goto	l1888
 28141                           
 28142                           ; BSR set to: 0
 28143                           ;fat16.c: 608: {;fat16.c: 610: read_length = length - position;
 28144  0020A0  C0E7  F04A         	movff	fat_read_from_file@position,??_fat_read_from_file
 28145  0020A4  C0E8  F04B         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28146  0020A8  1E4A               	comf	??_fat_read_from_file,f,c
 28147  0020AA  1E4B               	comf	??_fat_read_from_file+1,f,c
 28148  0020AC  4A4A               	infsnz	??_fat_read_from_file,f,c
 28149  0020AE  2A4B               	incf	??_fat_read_from_file+1,f,c
 28150  0020B0  5044               	movf	fat_read_from_file@length,w,c
 28151  0020B2  244A               	addwf	??_fat_read_from_file,w,c
 28152  0020B4  6FE5               	movwf	fat_read_from_file@read_length& (0+255),b
 28153  0020B6  5045               	movf	fat_read_from_file@length+1,w,c
 28154  0020B8  204B               	addwfc	??_fat_read_from_file+1,w,c
 28155  0020BA  6FE6               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 28156  0020BC                     l1888:
 28157                           
 28158                           ; BSR set to: 0
 28159                           ;fat16.c: 611: };fat16.c: 614: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 28160                           
 28161                           ; BSR set to: 0
 28162  0020BC  C0BE  F029         	movff	fat_read_from_file@sector,flash_partial_read@page
 28163  0020C0  C0BF  F02A         	movff	fat_read_from_file@sector+1,flash_partial_read@page+1
 28164  0020C4  C0E3  F02B         	movff	fat_read_from_file@offset,flash_partial_read@start
 28165  0020C8  C0E4  F02C         	movff	fat_read_from_file@offset+1,flash_partial_read@start+1
 28166  0020CC  C0E5  F02D         	movff	fat_read_from_file@read_length,flash_partial_read@length
 28167  0020D0  C0E6  F02E         	movff	fat_read_from_file@read_length+1,flash_partial_read@length+1
 28168  0020D4  51E7               	movf	fat_read_from_file@position& (0+255),w,b
 28169  0020D6  2448               	addwf	fat_read_from_file@data,w,c
 28170  0020D8  6E2F               	movwf	flash_partial_read@data,c
 28171  0020DA  51E8               	movf	(fat_read_from_file@position+1)& (0+255),w,b
 28172  0020DC  2049               	addwfc	fat_read_from_file@data+1,w,c
 28173  0020DE  6E30               	movwf	flash_partial_read@data+1,c
 28174  0020E0  ECFE  F03A         	call	_flash_partial_read	;wreg free
 28175                           
 28176                           ;fat16.c: 617: position += read_length;
 28177  0020E4  0100               	movlb	0	; () banked
 28178  0020E6  51E5               	movf	fat_read_from_file@read_length& (0+255),w,b
 28179  0020E8  27E7               	addwf	fat_read_from_file@position& (0+255),f,b
 28180  0020EA  51E6               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28181  0020EC  23E8               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 28182  0020EE  0E00               	movlw	0
 28183  0020F0  23E9               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 28184  0020F2  0E00               	movlw	0
 28185  0020F4  23EA               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 28186                           
 28187                           ; BSR set to: 0
 28188                           ;fat16.c: 618: offset += read_length;
 28189  0020F6  51E5               	movf	fat_read_from_file@read_length& (0+255),w,b
 28190  0020F8  27E3               	addwf	fat_read_from_file@offset& (0+255),f,b
 28191  0020FA  51E6               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28192  0020FC  23E4               	addwfc	(fat_read_from_file@offset+1)& (0+255),f,b
 28193  0020FE                     l1885:
 28194                           
 28195                           ; BSR set to: 0
 28196                           
 28197                           ; BSR set to: 0
 28198  0020FE  5044               	movf	fat_read_from_file@length,w,c
 28199  002100  5DE7               	subwf	fat_read_from_file@position& (0+255),w,b
 28200  002102  5045               	movf	fat_read_from_file@length+1,w,c
 28201  002104  59E8               	subwfb	(fat_read_from_file@position+1)& (0+255),w,b
 28202  002106  5046               	movf	fat_read_from_file@length+2,w,c
 28203  002108  59E9               	subwfb	(fat_read_from_file@position+2)& (0+255),w,b
 28204  00210A  5047               	movf	fat_read_from_file@length+3,w,c
 28205  00210C  59EA               	subwfb	(fat_read_from_file@position+3)& (0+255),w,b
 28206  00210E  A0D8               	btfss	status,0,c
 28207  002110  D76D               	goto	l1886
 28208                           
 28209                           ; BSR set to: 0
 28210                           ;fat16.c: 619: };fat16.c: 622: return 0x00;
 28211                           
 28212                           ; BSR set to: 0
 28213  002112  0E00               	movlw	0
 28214  002114  0012               	return	
 28215  002116                     __end_of_fat_read_from_file:
 28216                           	opt stack 0
 28217                           tosu	equ	0xFFF
 28218                           tosh	equ	0xFFE
 28219                           tosl	equ	0xFFD
 28220                           pclath	equ	0xFFA
 28221                           tblptru	equ	0xFF8
 28222                           tblptrh	equ	0xFF7
 28223                           tblptrl	equ	0xFF6
 28224                           tablat	equ	0xFF5
 28225                           prodh	equ	0xFF4
 28226                           prodl	equ	0xFF3
 28227                           intcon	equ	0xFF2
 28228                           intcon2	equ	0xFF1
 28229                           intcon3	equ	0xFF0
 28230                           indf0	equ	0xFEF
 28231                           postinc0	equ	0xFEE
 28232                           fsr0h	equ	0xFEA
 28233                           fsr0l	equ	0xFE9
 28234                           wreg	equ	0xFE8
 28235                           indf1	equ	0xFE7
 28236                           postdec1	equ	0xFE5
 28237                           plusw1	equ	0xFE3
 28238                           fsr1h	equ	0xFE2
 28239                           fsr1l	equ	0xFE1
 28240                           indf2	equ	0xFDF
 28241                           postinc2	equ	0xFDE
 28242                           postdec2	equ	0xFDD
 28243                           plusw2	equ	0xFDB
 28244                           fsr2h	equ	0xFDA
 28245                           fsr2l	equ	0xFD9
 28246                           status	equ	0xFD8
 28247                           
 28248 ;; *************** function _fat_get_file_size *****************
 28249 ;; Defined at:
 28250 ;;		line 294 in file "fat16.c"
 28251 ;; Parameters:    Size  Location     Type
 28252 ;;  file_number     1    wreg     unsigned char 
 28253 ;; Auto vars:     Size  Location     Type
 28254 ;;  file_number     1   61[COMRAM] unsigned char 
 28255 ;;  file_size       4   55[COMRAM] unsigned long 
 28256 ;;  offset          2   59[COMRAM] unsigned int 
 28257 ;;  sector          2   53[COMRAM] unsigned int 
 28258 ;; Return value:  Size  Location     Type
 28259 ;;                  4   48[COMRAM] unsigned long 
 28260 ;; Registers used:
 28261 ;;		wreg, status,2, status,0, cstack
 28262 ;; Tracked objects:
 28263 ;;		On entry : 0/0
 28264 ;;		On exit  : 0/0
 28265 ;;		Unchanged: 0/0
 28266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28268 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28269 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28270 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28271 ;;Total ram usage:       14 bytes
 28272 ;; Hardware stack levels used:    1
 28273 ;; Hardware stack levels required when called:    7
 28274 ;; This function calls:
 28275 ;;		_flash_partial_read
 28276 ;; This function is called by:
 28277 ;;		__bootloader_find_file
 28278 ;;		__bootloader_verify_file
 28279 ;;		__fill_buffer_read_file
 28280 ;; This function uses a non-reentrant model
 28281 ;;
 28282                           
 28283                           	psect	text128
 28284  006442                     __ptext128:
 28285                           	opt stack 0
 28286  006442                     _fat_get_file_size:
 28287                           	opt stack 21
 28288                           
 28289                           ; BSR set to: 0
 28290                           ;incstack = 0
 28291                           ;fat_get_file_size@file_number stored from wreg
 28292  006442  6E3E               	movwf	fat_get_file_size@file_number,c
 28293                           
 28294                           ;fat16.c: 296: uint16_t sector;;fat16.c: 297: uint16_t offset;;fat16.c: 298: uint32_t fi
      +                          le_size;;fat16.c: 299: sector = file_number >> 4;
 28295  006444  C03E  F035         	movff	fat_get_file_size@file_number,??_fat_get_file_size
 28296  006448  3A35               	swapf	??_fat_get_file_size,f,c
 28297  00644A  0E0F               	movlw	15
 28298  00644C  1635               	andwf	??_fat_get_file_size,f,c
 28299  00644E  5035               	movf	??_fat_get_file_size,w,c
 28300  006450  6E36               	movwf	fat_get_file_size@sector,c
 28301  006452  6A37               	clrf	fat_get_file_size@sector+1,c
 28302                           
 28303                           ;fat16.c: 300: sector += 18;
 28304  006454  0E12               	movlw	18
 28305  006456  2636               	addwf	fat_get_file_size@sector,f,c
 28306  006458  0E00               	movlw	0
 28307  00645A  2237               	addwfc	fat_get_file_size@sector+1,f,c
 28308                           
 28309                           ;fat16.c: 301: offset = file_number;
 28310  00645C  C03E  F03C         	movff	fat_get_file_size@file_number,fat_get_file_size@offset
 28311  006460  6A3D               	clrf	fat_get_file_size@offset+1,c
 28312                           
 28313                           ;fat16.c: 302: offset <<= 5;
 28314  006462  0E05               	movlw	5
 28315  006464                     u8735:
 28316  006464  90D8               	bcf	status,0,c
 28317  006466  363C               	rlcf	fat_get_file_size@offset,f,c
 28318  006468  363D               	rlcf	fat_get_file_size@offset+1,f,c
 28319  00646A  2EE8               	decfsz	wreg,f,c
 28320  00646C  D7FB               	goto	u8735
 28321                           
 28322                           ;fat16.c: 303: offset &= 0b111111111;
 28323  00646E  0EFF               	movlw	255
 28324  006470  163C               	andwf	fat_get_file_size@offset,f,c
 28325  006472  0E01               	movlw	1
 28326  006474  163D               	andwf	fat_get_file_size@offset+1,f,c
 28327                           
 28328                           ;fat16.c: 304: offset += 28;
 28329  006476  0E1C               	movlw	28
 28330  006478  263C               	addwf	fat_get_file_size@offset,f,c
 28331  00647A  0E00               	movlw	0
 28332  00647C  223D               	addwfc	fat_get_file_size@offset+1,f,c
 28333                           
 28334                           ;fat16.c: 305: flash_partial_read(sector, offset, 4, &file_size);
 28335  00647E  C036  F029         	movff	fat_get_file_size@sector,flash_partial_read@page
 28336  006482  C037  F02A         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 28337  006486  C03C  F02B         	movff	fat_get_file_size@offset,flash_partial_read@start
 28338  00648A  C03D  F02C         	movff	fat_get_file_size@offset+1,flash_partial_read@start+1
 28339  00648E  0E00               	movlw	0
 28340  006490  6E2E               	movwf	flash_partial_read@length+1,c
 28341  006492  0E04               	movlw	4
 28342  006494  6E2D               	movwf	flash_partial_read@length,c
 28343  006496  0E38               	movlw	low fat_get_file_size@file_size
 28344  006498  6E2F               	movwf	flash_partial_read@data,c
 28345  00649A  0E00               	movlw	high fat_get_file_size@file_size
 28346  00649C  6E30               	movwf	flash_partial_read@data+1,c
 28347  00649E  ECFE  F03A         	call	_flash_partial_read	;wreg free
 28348                           
 28349                           ;fat16.c: 306: return file_size;
 28350  0064A2  C038  F031         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 28351  0064A6  C039  F032         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 28352  0064AA  C03A  F033         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 28353  0064AE  C03B  F034         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 28354  0064B2  0012               	return	
 28355  0064B4                     __end_of_fat_get_file_size:
 28356                           	opt stack 0
 28357                           tosu	equ	0xFFF
 28358                           tosh	equ	0xFFE
 28359                           tosl	equ	0xFFD
 28360                           pclath	equ	0xFFA
 28361                           tblptru	equ	0xFF8
 28362                           tblptrh	equ	0xFF7
 28363                           tblptrl	equ	0xFF6
 28364                           tablat	equ	0xFF5
 28365                           prodh	equ	0xFF4
 28366                           prodl	equ	0xFF3
 28367                           intcon	equ	0xFF2
 28368                           intcon2	equ	0xFF1
 28369                           intcon3	equ	0xFF0
 28370                           indf0	equ	0xFEF
 28371                           postinc0	equ	0xFEE
 28372                           fsr0h	equ	0xFEA
 28373                           fsr0l	equ	0xFE9
 28374                           wreg	equ	0xFE8
 28375                           indf1	equ	0xFE7
 28376                           postdec1	equ	0xFE5
 28377                           plusw1	equ	0xFE3
 28378                           fsr1h	equ	0xFE2
 28379                           fsr1l	equ	0xFE1
 28380                           indf2	equ	0xFDF
 28381                           postinc2	equ	0xFDE
 28382                           postdec2	equ	0xFDD
 28383                           plusw2	equ	0xFDB
 28384                           fsr2h	equ	0xFDA
 28385                           fsr2l	equ	0xFD9
 28386                           status	equ	0xFD8
 28387                           
 28388 ;; *************** function __fill_buffer_get_status *****************
 28389 ;; Defined at:
 28390 ;;		line 171 in file "api.c"
 28391 ;; Parameters:    Size  Location     Type
 28392 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 28393 ;;		 -> RAM(3759), 
 28394 ;; Auto vars:     Size  Location     Type
 28395 ;;		None
 28396 ;; Return value:  Size  Location     Type
 28397 ;;                  1    wreg      void 
 28398 ;; Registers used:
 28399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28400 ;; Tracked objects:
 28401 ;;		On entry : 0/0
 28402 ;;		On exit  : 0/0
 28403 ;;		Unchanged: 0/0
 28404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28409 ;;Total ram usage:        2 bytes
 28410 ;; Hardware stack levels used:    1
 28411 ;; Hardware stack levels required when called:    5
 28412 ;; This function calls:
 28413 ;;		_flash_is_busy
 28414 ;;		_ui_get_status
 28415 ;; This function is called by:
 28416 ;;		_api_prepare
 28417 ;; This function uses a non-reentrant model
 28418 ;;
 28419                           
 28420                           	psect	text129
 28421  004660                     __ptext129:
 28422                           	opt stack 0
 28423  004660                     __fill_buffer_get_status:
 28424                           	opt stack 23
 28425                           
 28426                           ;api.c: 174: outBuffer[0] = DATAREQUEST_GET_STATUS;
 28427                           
 28428                           ;incstack = 0
 28429  004660  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 28430  004664  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 28431  004668  0E10               	movlw	16
 28432  00466A  6EDF               	movwf	indf2,c
 28433                           
 28434                           ;api.c: 177: outBuffer[1] = (uint8_t) 0xC125;
 28435  00466C  EE20 F001          	lfsr	2,1
 28436  004670  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28437  004672  26D9               	addwf	fsr2l,f,c
 28438  004674  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28439  004676  22DA               	addwfc	fsr2h,f,c
 28440  004678  0E25               	movlw	37
 28441  00467A  6EDF               	movwf	indf2,c
 28442                           
 28443                           ;api.c: 178: outBuffer[2] = 0xC125 >> 8;
 28444  00467C  EE20 F002          	lfsr	2,2
 28445  004680  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28446  004682  26D9               	addwf	fsr2l,f,c
 28447  004684  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28448  004686  22DA               	addwfc	fsr2h,f,c
 28449  004688  0EC1               	movlw	193
 28450  00468A  6EDF               	movwf	indf2,c
 28451                           
 28452                           ;api.c: 181: outBuffer[3] = (uint8_t) flash_is_busy();
 28453  00468C  EE20 F003          	lfsr	2,3
 28454  004690  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28455  004692  26D9               	addwf	fsr2l,f,c
 28456  004694  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28457  004696  22DA               	addwfc	fsr2h,f,c
 28458  004698  ECFF  F03C         	call	_flash_is_busy	;wreg free
 28459  00469C  6EDF               	movwf	indf2,c
 28460                           
 28461                           ;api.c: 184: outBuffer[4] = 0x00;
 28462  00469E  EE20 F004          	lfsr	2,4
 28463  0046A2  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28464  0046A4  26D9               	addwf	fsr2l,f,c
 28465  0046A6  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28466  0046A8  22DA               	addwfc	fsr2h,f,c
 28467  0046AA  0E00               	movlw	0
 28468  0046AC  6EDF               	movwf	indf2,c
 28469                           
 28470                           ;api.c: 185: outBuffer[5] = 0x01;
 28471  0046AE  EE20 F005          	lfsr	2,5
 28472  0046B2  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28473  0046B4  26D9               	addwf	fsr2l,f,c
 28474  0046B6  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28475  0046B8  22DA               	addwfc	fsr2h,f,c
 28476  0046BA  0E01               	movlw	1
 28477  0046BC  6EDF               	movwf	indf2,c
 28478                           
 28479                           ;api.c: 186: outBuffer[6] = 0x00;
 28480  0046BE  EE20 F006          	lfsr	2,6
 28481  0046C2  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28482  0046C4  26D9               	addwf	fsr2l,f,c
 28483  0046C6  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28484  0046C8  22DA               	addwfc	fsr2h,f,c
 28485  0046CA  0E00               	movlw	0
 28486  0046CC  6EDF               	movwf	indf2,c
 28487                           
 28488                           ;api.c: 189: outBuffer[7] = ui_get_status();
 28489  0046CE  EE20 F007          	lfsr	2,7
 28490  0046D2  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28491  0046D4  26D9               	addwf	fsr2l,f,c
 28492  0046D6  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28493  0046D8  22DA               	addwfc	fsr2h,f,c
 28494  0046DA  ECA5  F03D         	call	_ui_get_status	;wreg free
 28495  0046DE  6EDF               	movwf	indf2,c
 28496                           
 28497                           ;api.c: 192: outBuffer[8] = os.encoderCount;
 28498  0046E0  EE20 F008          	lfsr	2,8
 28499  0046E4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28500  0046E6  26D9               	addwf	fsr2l,f,c
 28501  0046E8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28502  0046EA  22DA               	addwfc	fsr2h,f,c
 28503  0046EC  C060  FFDF         	movff	_os,indf2	;volatile
 28504                           
 28505                           ;api.c: 193: outBuffer[9] = os.buttonCount;
 28506  0046F0  EE20 F009          	lfsr	2,9
 28507  0046F4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28508  0046F6  26D9               	addwf	fsr2l,f,c
 28509  0046F8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28510  0046FA  22DA               	addwfc	fsr2h,f,c
 28511  0046FC  C061  FFDF         	movff	_os+1,indf2	;volatile
 28512                           
 28513                           ;api.c: 194: outBuffer[10] = os.timeSlot;
 28514  004700  EE20 F00A          	lfsr	2,10
 28515  004704  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28516  004706  26D9               	addwf	fsr2l,f,c
 28517  004708  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28518  00470A  22DA               	addwfc	fsr2h,f,c
 28519  00470C  C062  FFDF         	movff	_os+2,indf2	;volatile
 28520                           
 28521                           ;api.c: 195: outBuffer[11] = os.done;
 28522  004710  EE20 F00B          	lfsr	2,11
 28523  004714  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28524  004716  26D9               	addwf	fsr2l,f,c
 28525  004718  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28526  00471A  22DA               	addwfc	fsr2h,f,c
 28527  00471C  C063  FFDF         	movff	_os+3,indf2	;volatile
 28528                           
 28529                           ;api.c: 196: outBuffer[12] = os.bootloader_mode;
 28530  004720  EE20 F00C          	lfsr	2,12
 28531  004724  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28532  004726  26D9               	addwf	fsr2l,f,c
 28533  004728  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28534  00472A  22DA               	addwfc	fsr2h,f,c
 28535  00472C  C064  FFDF         	movff	_os+4,indf2	;volatile
 28536                           
 28537                           ;api.c: 197: outBuffer[13] = os.display_mode;
 28538  004730  EE20 F00D          	lfsr	2,13
 28539  004734  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28540  004736  26D9               	addwf	fsr2l,f,c
 28541  004738  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28542  00473A  22DA               	addwfc	fsr2h,f,c
 28543  00473C  C065  FFDF         	movff	_os+5,indf2	;volatile
 28544  004740  0012               	return		;funcret
 28545  004742                     __end_of__fill_buffer_get_status:
 28546                           	opt stack 0
 28547                           tosu	equ	0xFFF
 28548                           tosh	equ	0xFFE
 28549                           tosl	equ	0xFFD
 28550                           pclath	equ	0xFFA
 28551                           tblptru	equ	0xFF8
 28552                           tblptrh	equ	0xFF7
 28553                           tblptrl	equ	0xFF6
 28554                           tablat	equ	0xFF5
 28555                           prodh	equ	0xFF4
 28556                           prodl	equ	0xFF3
 28557                           intcon	equ	0xFF2
 28558                           intcon2	equ	0xFF1
 28559                           intcon3	equ	0xFF0
 28560                           indf0	equ	0xFEF
 28561                           postinc0	equ	0xFEE
 28562                           fsr0h	equ	0xFEA
 28563                           fsr0l	equ	0xFE9
 28564                           wreg	equ	0xFE8
 28565                           indf1	equ	0xFE7
 28566                           postdec1	equ	0xFE5
 28567                           plusw1	equ	0xFE3
 28568                           fsr1h	equ	0xFE2
 28569                           fsr1l	equ	0xFE1
 28570                           indf2	equ	0xFDF
 28571                           postinc2	equ	0xFDE
 28572                           postdec2	equ	0xFDD
 28573                           plusw2	equ	0xFDB
 28574                           fsr2h	equ	0xFDA
 28575                           fsr2l	equ	0xFD9
 28576                           status	equ	0xFD8
 28577                           
 28578 ;; *************** function _ui_get_status *****************
 28579 ;; Defined at:
 28580 ;;		line 72 in file "ui.c"
 28581 ;; Parameters:    Size  Location     Type
 28582 ;;		None
 28583 ;; Auto vars:     Size  Location     Type
 28584 ;;		None
 28585 ;; Return value:  Size  Location     Type
 28586 ;;                  1    wreg      enum E7912
 28587 ;; Registers used:
 28588 ;;		wreg, status,2
 28589 ;; Tracked objects:
 28590 ;;		On entry : 0/0
 28591 ;;		On exit  : 0/0
 28592 ;;		Unchanged: 0/0
 28593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28598 ;;Total ram usage:        0 bytes
 28599 ;; Hardware stack levels used:    1
 28600 ;; This function calls:
 28601 ;;		Nothing
 28602 ;; This function is called by:
 28603 ;;		_main
 28604 ;;		__fill_buffer_get_status
 28605 ;; This function uses a non-reentrant model
 28606 ;;
 28607                           
 28608                           	psect	text130
 28609  007B4A                     __ptext130:
 28610                           	opt stack 0
 28611  007B4A                     _ui_get_status:
 28612                           	opt stack 30
 28613                           
 28614                           ;ui.c: 74: return userInterfaceStatus;
 28615                           
 28616                           ;incstack = 0
 28617  007B4A  0100               	movlb	0	; () banked
 28618  007B4C  51A0               	movf	_userInterfaceStatus& (0+255),w,b
 28619  007B4E  0012               	return	
 28620  007B50                     __end_of_ui_get_status:
 28621                           	opt stack 0
 28622                           tosu	equ	0xFFF
 28623                           tosh	equ	0xFFE
 28624                           tosl	equ	0xFFD
 28625                           pclath	equ	0xFFA
 28626                           tblptru	equ	0xFF8
 28627                           tblptrh	equ	0xFF7
 28628                           tblptrl	equ	0xFF6
 28629                           tablat	equ	0xFF5
 28630                           prodh	equ	0xFF4
 28631                           prodl	equ	0xFF3
 28632                           intcon	equ	0xFF2
 28633                           intcon2	equ	0xFF1
 28634                           intcon3	equ	0xFF0
 28635                           indf0	equ	0xFEF
 28636                           postinc0	equ	0xFEE
 28637                           fsr0h	equ	0xFEA
 28638                           fsr0l	equ	0xFE9
 28639                           wreg	equ	0xFE8
 28640                           indf1	equ	0xFE7
 28641                           postdec1	equ	0xFE5
 28642                           plusw1	equ	0xFE3
 28643                           fsr1h	equ	0xFE2
 28644                           fsr1l	equ	0xFE1
 28645                           indf2	equ	0xFDF
 28646                           postinc2	equ	0xFDE
 28647                           postdec2	equ	0xFDD
 28648                           plusw2	equ	0xFDB
 28649                           fsr2h	equ	0xFDA
 28650                           fsr2l	equ	0xFD9
 28651                           status	equ	0xFD8
 28652                           
 28653 ;; *************** function __fill_buffer_get_file_details *****************
 28654 ;; Defined at:
 28655 ;;		line 328 in file "api.c"
 28656 ;; Parameters:    Size  Location     Type
 28657 ;;  inBuffer        2   63[COMRAM] PTR unsigned char 
 28658 ;;		 -> RAM(3759), 
 28659 ;;  outBuffer       2   65[COMRAM] PTR unsigned char 
 28660 ;;		 -> RAM(3759), 
 28661 ;; Auto vars:     Size  Location     Type
 28662 ;;  file_number     1   67[COMRAM] unsigned char 
 28663 ;; Return value:  Size  Location     Type
 28664 ;;                  1    wreg      void 
 28665 ;; Registers used:
 28666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28667 ;; Tracked objects:
 28668 ;;		On entry : 0/0
 28669 ;;		On exit  : 0/0
 28670 ;;		Unchanged: 0/0
 28671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28675 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28676 ;;Total ram usage:        5 bytes
 28677 ;; Hardware stack levels used:    1
 28678 ;; Hardware stack levels required when called:    9
 28679 ;; This function calls:
 28680 ;;		_fat_get_file_information
 28681 ;; This function is called by:
 28682 ;;		_api_prepare
 28683 ;; This function uses a non-reentrant model
 28684 ;;
 28685                           
 28686                           	psect	text131
 28687  006594                     __ptext131:
 28688                           	opt stack 0
 28689  006594                     __fill_buffer_get_file_details:
 28690                           	opt stack 19
 28691                           
 28692                           ;api.c: 330: uint8_t file_number = inBuffer[2];
 28693                           
 28694                           ; BSR set to: 0
 28695                           ;incstack = 0
 28696  006594  EE20 F002          	lfsr	2,2
 28697  006598  5040               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 28698  00659A  26D9               	addwf	fsr2l,f,c
 28699  00659C  5041               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 28700  00659E  22DA               	addwfc	fsr2h,f,c
 28701  0065A0  50DF               	movf	indf2,w,c
 28702  0065A2  6E44               	movwf	__fill_buffer_get_file_details@file_number,c
 28703                           
 28704                           ;api.c: 333: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 28705  0065A4  C042  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 28706  0065A8  C043  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 28707  0065AC  0E80               	movlw	128
 28708  0065AE  6EDF               	movwf	indf2,c
 28709                           
 28710                           ;api.c: 336: outBuffer[1] = (uint8_t) 0xC125;
 28711  0065B0  EE20 F001          	lfsr	2,1
 28712  0065B4  5042               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 28713  0065B6  26D9               	addwf	fsr2l,f,c
 28714  0065B8  5043               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 28715  0065BA  22DA               	addwfc	fsr2h,f,c
 28716  0065BC  0E25               	movlw	37
 28717  0065BE  6EDF               	movwf	indf2,c
 28718                           
 28719                           ;api.c: 337: outBuffer[2] = 0xC125 >> 8;
 28720  0065C0  EE20 F002          	lfsr	2,2
 28721  0065C4  5042               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 28722  0065C6  26D9               	addwf	fsr2l,f,c
 28723  0065C8  5043               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 28724  0065CA  22DA               	addwfc	fsr2h,f,c
 28725  0065CC  0EC1               	movlw	193
 28726  0065CE  6EDF               	movwf	indf2,c
 28727                           
 28728                           ;api.c: 340: outBuffer[3] = file_number;
 28729  0065D0  EE20 F003          	lfsr	2,3
 28730  0065D4  5042               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 28731  0065D6  26D9               	addwf	fsr2l,f,c
 28732  0065D8  5043               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 28733  0065DA  22DA               	addwfc	fsr2h,f,c
 28734  0065DC  C044  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 28735                           
 28736                           ;api.c: 343: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 28737  0065E0  EE20 F004          	lfsr	2,4
 28738  0065E4  5042               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 28739  0065E6  26D9               	addwf	fsr2l,f,c
 28740  0065E8  5043               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 28741  0065EA  22DA               	addwfc	fsr2h,f,c
 28742  0065EC  0E05               	movlw	5
 28743  0065EE  2442               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 28744  0065F0  6E38               	movwf	fat_get_file_information@data,c
 28745  0065F2  0E00               	movlw	0
 28746  0065F4  2043               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 28747  0065F6  6E39               	movwf	fat_get_file_information@data+1,c
 28748  0065F8  5044               	movf	__fill_buffer_get_file_details@file_number,w,c
 28749  0065FA  ECAD  F031         	call	_fat_get_file_information
 28750  0065FE  6EDF               	movwf	indf2,c
 28751  006600  0012               	return		;funcret
 28752  006602                     __end_of__fill_buffer_get_file_details:
 28753                           	opt stack 0
 28754                           tosu	equ	0xFFF
 28755                           tosh	equ	0xFFE
 28756                           tosl	equ	0xFFD
 28757                           pclath	equ	0xFFA
 28758                           tblptru	equ	0xFF8
 28759                           tblptrh	equ	0xFF7
 28760                           tblptrl	equ	0xFF6
 28761                           tablat	equ	0xFF5
 28762                           prodh	equ	0xFF4
 28763                           prodl	equ	0xFF3
 28764                           intcon	equ	0xFF2
 28765                           intcon2	equ	0xFF1
 28766                           intcon3	equ	0xFF0
 28767                           indf0	equ	0xFEF
 28768                           postinc0	equ	0xFEE
 28769                           fsr0h	equ	0xFEA
 28770                           fsr0l	equ	0xFE9
 28771                           wreg	equ	0xFE8
 28772                           indf1	equ	0xFE7
 28773                           postdec1	equ	0xFE5
 28774                           plusw1	equ	0xFE3
 28775                           fsr1h	equ	0xFE2
 28776                           fsr1l	equ	0xFE1
 28777                           indf2	equ	0xFDF
 28778                           postinc2	equ	0xFDE
 28779                           postdec2	equ	0xFDD
 28780                           plusw2	equ	0xFDB
 28781                           fsr2h	equ	0xFDA
 28782                           fsr2l	equ	0xFD9
 28783                           status	equ	0xFD8
 28784                           
 28785 ;; *************** function __fill_buffer_get_display *****************
 28786 ;; Defined at:
 28787 ;;		line 201 in file "api.c"
 28788 ;; Parameters:    Size  Location     Type
 28789 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 28790 ;;		 -> RAM(3759), 
 28791 ;;  secondHalf      1    6[COMRAM] unsigned char 
 28792 ;; Auto vars:     Size  Location     Type
 28793 ;;  position        1   15[COMRAM] unsigned char 
 28794 ;;  start_line      1   14[COMRAM] unsigned char 
 28795 ;;  line            1   13[COMRAM] unsigned char 
 28796 ;;  cntr            1   12[COMRAM] unsigned char 
 28797 ;; Return value:  Size  Location     Type
 28798 ;;                  1    wreg      void 
 28799 ;; Registers used:
 28800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28801 ;; Tracked objects:
 28802 ;;		On entry : 0/0
 28803 ;;		On exit  : 0/0
 28804 ;;		Unchanged: 0/0
 28805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28806 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28807 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28808 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28809 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28810 ;;Total ram usage:       12 bytes
 28811 ;; Hardware stack levels used:    1
 28812 ;; Hardware stack levels required when called:    1
 28813 ;; This function calls:
 28814 ;;		_display_get_character
 28815 ;; This function is called by:
 28816 ;;		_api_prepare
 28817 ;; This function uses a non-reentrant model
 28818 ;;
 28819                           
 28820                           	psect	text132
 28821  005260                     __ptext132:
 28822                           	opt stack 0
 28823  005260                     __fill_buffer_get_display:
 28824                           	opt stack 27
 28825                           
 28826                           ;api.c: 203: uint8_t cntr;;api.c: 204: uint8_t line;;api.c: 205: uint8_t start_line;;api
      +                          .c: 206: uint8_t position;;api.c: 209: if(secondHalf)
 28827                           
 28828                           ;incstack = 0
 28829  005260  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 28830  005262  B4D8               	btfsc	status,2,c
 28831  005264  D006               	goto	l2451
 28832                           
 28833                           ;api.c: 210: {;api.c: 211: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 28834  005266  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 28835  00526A  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 28836  00526E  0E12               	movlw	18
 28837  005270  D005               	goto	L32
 28838  005272                     l2451:
 28839                           
 28840                           ;api.c: 213: else;api.c: 214: {;api.c: 215: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 28841  005272  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 28842  005276  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 28843  00527A  0E11               	movlw	17
 28844  00527C                     L32:
 28845  00527C  6EDF               	movwf	indf2,c
 28846                           
 28847                           ;api.c: 216: };api.c: 219: outBuffer[1] = (uint8_t) 0xC125;
 28848  00527E  EE20 F001          	lfsr	2,1
 28849  005282  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 28850  005284  26D9               	addwf	fsr2l,f,c
 28851  005286  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 28852  005288  22DA               	addwfc	fsr2h,f,c
 28853  00528A  0E25               	movlw	37
 28854  00528C  6EDF               	movwf	indf2,c
 28855                           
 28856                           ;api.c: 220: outBuffer[2] = 0xC125 >> 8;
 28857  00528E  EE20 F002          	lfsr	2,2
 28858  005292  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 28859  005294  26D9               	addwf	fsr2l,f,c
 28860  005296  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 28861  005298  22DA               	addwfc	fsr2h,f,c
 28862  00529A  0EC1               	movlw	193
 28863  00529C  6EDF               	movwf	indf2,c
 28864                           
 28865                           ;api.c: 223: cntr = 3;
 28866  00529E  0E03               	movlw	3
 28867  0052A0  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 28868                           
 28869                           ;api.c: 224: if(secondHalf)
 28870  0052A2  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 28871  0052A4  B4D8               	btfsc	status,2,c
 28872  0052A6  D002               	goto	l2453
 28873                           
 28874                           ;api.c: 225: {;api.c: 226: start_line = 2;
 28875  0052A8  0E02               	movlw	2
 28876  0052AA  D001               	goto	L33
 28877  0052AC                     l2453:
 28878                           
 28879                           ;api.c: 228: else;api.c: 229: {;api.c: 230: start_line = 0;
 28880  0052AC  0E00               	movlw	0
 28881  0052AE                     L33:
 28882  0052AE  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 28883                           
 28884                           ;api.c: 231: };api.c: 232: for(line=start_line; line<start_line+2; ++line)
 28885  0052B0  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 28886  0052B4  D01A               	goto	l2455
 28887  0052B6                     
 28888                           ;api.c: 233: {;api.c: 234: for(position=0; position<20; ++position)
 28889  0052B6  0E00               	movlw	0
 28890  0052B8  6E10               	movwf	__fill_buffer_get_display@position,c
 28891  0052BA                     l12635:
 28892  0052BA  0E13               	movlw	19
 28893  0052BC  6410               	cpfsgt	__fill_buffer_get_display@position,c
 28894  0052BE  D001               	goto	l2457
 28895  0052C0  D013               	goto	u9880
 28896  0052C2                     l2457:
 28897                           
 28898                           ;api.c: 235: {;api.c: 236: outBuffer[cntr] = display_get_character(line, position);
 28899  0052C2  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 28900  0052C6  500E               	movf	__fill_buffer_get_display@line,w,c
 28901  0052C8  ECB7  F03B         	call	_display_get_character
 28902  0052CC  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 28903  0052CE  500D               	movf	__fill_buffer_get_display@cntr,w,c
 28904  0052D0  0D01               	mullw	1
 28905  0052D2  50F3               	movf	prodl,w,c
 28906  0052D4  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 28907  0052D6  6ED9               	movwf	fsr2l,c
 28908  0052D8  50F4               	movf	prodh,w,c
 28909  0052DA  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 28910  0052DC  6EDA               	movwf	fsr2h,c
 28911  0052DE  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 28912                           
 28913                           ;api.c: 237: ++cntr;
 28914  0052E2  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 28915  0052E4  2A10               	incf	__fill_buffer_get_display@position,f,c
 28916  0052E6  D7E9               	goto	l12635
 28917  0052E8                     u9880:
 28918  0052E8  2A0E               	incf	__fill_buffer_get_display@line,f,c
 28919  0052EA                     l2455:
 28920  0052EA  500F               	movf	__fill_buffer_get_display@start_line,w,c
 28921  0052EC  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 28922  0052EE  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 28923  0052F0  0E02               	movlw	2
 28924  0052F2  2608               	addwf	??__fill_buffer_get_display,f,c
 28925  0052F4  0E00               	movlw	0
 28926  0052F6  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 28927  0052F8  500E               	movf	__fill_buffer_get_display@line,w,c
 28928  0052FA  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 28929  0052FC  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 28930  0052FE  5008               	movf	??__fill_buffer_get_display,w,c
 28931  005300  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 28932  005302  500B               	movf	??__fill_buffer_get_display+3,w,c
 28933  005304  0A80               	xorlw	128
 28934  005306  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 28935  005308  5009               	movf	??__fill_buffer_get_display+1,w,c
 28936  00530A  0A80               	xorlw	128
 28937  00530C  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 28938  00530E  B0D8               	btfsc	status,0,c
 28939  005310  0012               	return	
 28940  005312  D7D1               	goto	l2456
 28941  005314                     __end_of__fill_buffer_get_display:
 28942                           	opt stack 0
 28943                           tosu	equ	0xFFF
 28944                           tosh	equ	0xFFE
 28945                           tosl	equ	0xFFD
 28946                           pclath	equ	0xFFA
 28947                           tblptru	equ	0xFF8
 28948                           tblptrh	equ	0xFF7
 28949                           tblptrl	equ	0xFF6
 28950                           tablat	equ	0xFF5
 28951                           prodh	equ	0xFF4
 28952                           prodl	equ	0xFF3
 28953                           intcon	equ	0xFF2
 28954                           intcon2	equ	0xFF1
 28955                           intcon3	equ	0xFF0
 28956                           indf0	equ	0xFEF
 28957                           postinc0	equ	0xFEE
 28958                           fsr0h	equ	0xFEA
 28959                           fsr0l	equ	0xFE9
 28960                           wreg	equ	0xFE8
 28961                           indf1	equ	0xFE7
 28962                           postdec1	equ	0xFE5
 28963                           plusw1	equ	0xFE3
 28964                           fsr1h	equ	0xFE2
 28965                           fsr1l	equ	0xFE1
 28966                           indf2	equ	0xFDF
 28967                           postinc2	equ	0xFDE
 28968                           postdec2	equ	0xFDD
 28969                           plusw2	equ	0xFDB
 28970                           fsr2h	equ	0xFDA
 28971                           fsr2l	equ	0xFD9
 28972                           status	equ	0xFD8
 28973                           
 28974 ;; *************** function _display_get_character *****************
 28975 ;; Defined at:
 28976 ;;		line 60 in file "display.c"
 28977 ;; Parameters:    Size  Location     Type
 28978 ;;  line            1    wreg     unsigned char 
 28979 ;;  position        1    0[COMRAM] unsigned char 
 28980 ;; Auto vars:     Size  Location     Type
 28981 ;;  line            1    3[COMRAM] unsigned char 
 28982 ;; Return value:  Size  Location     Type
 28983 ;;                  1    wreg      unsigned char 
 28984 ;; Registers used:
 28985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28986 ;; Tracked objects:
 28987 ;;		On entry : 0/0
 28988 ;;		On exit  : 0/0
 28989 ;;		Unchanged: 0/0
 28990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28991 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28993 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28994 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28995 ;;Total ram usage:        4 bytes
 28996 ;; Hardware stack levels used:    1
 28997 ;; This function calls:
 28998 ;;		Nothing
 28999 ;; This function is called by:
 29000 ;;		__fill_buffer_get_display
 29001 ;; This function uses a non-reentrant model
 29002 ;;
 29003                           
 29004                           	psect	text133
 29005  00776E                     __ptext133:
 29006                           	opt stack 0
 29007  00776E                     _display_get_character:
 29008                           	opt stack 27
 29009                           
 29010                           ;incstack = 0
 29011                           ;display_get_character@line stored from wreg
 29012  00776E  6E04               	movwf	display_get_character@line,c
 29013                           
 29014                           ;display.c: 62: return display_content[line][position];
 29015  007770  5004               	movf	display_get_character@line,w,c
 29016  007772  0D14               	mullw	20
 29017  007774  0E6C               	movlw	low _display_content
 29018  007776  6E02               	movwf	??_display_get_character& (0+255),c
 29019  007778  0E01               	movlw	high _display_content
 29020  00777A  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 29021  00777C  50F3               	movf	prodl,w,c
 29022  00777E  2602               	addwf	??_display_get_character,f,c
 29023  007780  50F4               	movf	prodh,w,c
 29024  007782  2203               	addwfc	??_display_get_character+1,f,c
 29025  007784  5001               	movf	display_get_character@position,w,c
 29026  007786  0D01               	mullw	1
 29027  007788  50F3               	movf	prodl,w,c
 29028  00778A  2402               	addwf	??_display_get_character,w,c
 29029  00778C  6ED9               	movwf	fsr2l,c
 29030  00778E  50F4               	movf	prodh,w,c
 29031  007790  2003               	addwfc	??_display_get_character+1,w,c
 29032  007792  6EDA               	movwf	fsr2h,c
 29033  007794  50DF               	movf	indf2,w,c
 29034  007796  0012               	return	
 29035  007798                     __end_of_display_get_character:
 29036                           	opt stack 0
 29037                           tosu	equ	0xFFF
 29038                           tosh	equ	0xFFE
 29039                           tosl	equ	0xFFD
 29040                           pclath	equ	0xFFA
 29041                           tblptru	equ	0xFF8
 29042                           tblptrh	equ	0xFF7
 29043                           tblptrl	equ	0xFF6
 29044                           tablat	equ	0xFF5
 29045                           prodh	equ	0xFF4
 29046                           prodl	equ	0xFF3
 29047                           intcon	equ	0xFF2
 29048                           intcon2	equ	0xFF1
 29049                           intcon3	equ	0xFF0
 29050                           indf0	equ	0xFEF
 29051                           postinc0	equ	0xFEE
 29052                           fsr0h	equ	0xFEA
 29053                           fsr0l	equ	0xFE9
 29054                           wreg	equ	0xFE8
 29055                           indf1	equ	0xFE7
 29056                           postdec1	equ	0xFE5
 29057                           plusw1	equ	0xFE3
 29058                           fsr1h	equ	0xFE2
 29059                           fsr1l	equ	0xFE1
 29060                           indf2	equ	0xFDF
 29061                           postinc2	equ	0xFDE
 29062                           postdec2	equ	0xFDD
 29063                           plusw2	equ	0xFDB
 29064                           fsr2h	equ	0xFDA
 29065                           fsr2l	equ	0xFD9
 29066                           status	equ	0xFD8
 29067                           
 29068 ;; *************** function __fill_buffer_get_configuration *****************
 29069 ;; Defined at:
 29070 ;;		line 302 in file "api.c"
 29071 ;; Parameters:    Size  Location     Type
 29072 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 29073 ;;		 -> RAM(3759), 
 29074 ;; Auto vars:     Size  Location     Type
 29075 ;;  buffer_large    4    0        unsigned long 
 29076 ;;  buffer_small    2    0        unsigned int 
 29077 ;;  data_length     1    0        unsigned char 
 29078 ;;  cntr            1    0        unsigned char 
 29079 ;; Return value:  Size  Location     Type
 29080 ;;                  1    wreg      void 
 29081 ;; Registers used:
 29082 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29083 ;; Tracked objects:
 29084 ;;		On entry : 0/0
 29085 ;;		On exit  : 0/0
 29086 ;;		Unchanged: 0/0
 29087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29092 ;;Total ram usage:        2 bytes
 29093 ;; Hardware stack levels used:    1
 29094 ;; This function calls:
 29095 ;;		Nothing
 29096 ;; This function is called by:
 29097 ;;		_api_prepare
 29098 ;; This function uses a non-reentrant model
 29099 ;;
 29100                           
 29101                           	psect	text134
 29102  005836                     __ptext134:
 29103                           	opt stack 0
 29104  005836                     __fill_buffer_get_configuration:
 29105                           	opt stack 28
 29106                           
 29107                           ;api.c: 304: uint8_t cntr;;api.c: 305: uint8_t data_length;;api.c: 306: uint16_t buffer_
      +                          small;;api.c: 307: uint32_t buffer_large;;api.c: 310: outBuffer[0] = DATAREQUEST_GET_STA
      +                          TUS;
 29108                           
 29109                           ;incstack = 0
 29110  005836  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 29111  00583A  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 29112  00583E  0E10               	movlw	16
 29113  005840  6EDF               	movwf	indf2,c
 29114                           
 29115                           ;api.c: 313: outBuffer[1] = (uint8_t) 0xC125;
 29116  005842  EE20 F001          	lfsr	2,1
 29117  005846  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29118  005848  26D9               	addwf	fsr2l,f,c
 29119  00584A  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29120  00584C  22DA               	addwfc	fsr2h,f,c
 29121  00584E  0E25               	movlw	37
 29122  005850  6EDF               	movwf	indf2,c
 29123                           
 29124                           ;api.c: 314: outBuffer[2] = 0xC125 >> 8;
 29125  005852  EE20 F002          	lfsr	2,2
 29126  005856  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29127  005858  26D9               	addwf	fsr2l,f,c
 29128  00585A  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29129  00585C  22DA               	addwfc	fsr2h,f,c
 29130  00585E  0EC1               	movlw	193
 29131  005860  6EDF               	movwf	indf2,c
 29132                           
 29133                           ;api.c: 317: outBuffer[3] = communicationSettings.spiMode;
 29134  005862  EE20 F003          	lfsr	2,3
 29135  005866  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29136  005868  26D9               	addwf	fsr2l,f,c
 29137  00586A  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29138  00586C  22DA               	addwfc	fsr2h,f,c
 29139  00586E  C139  FFDF         	movff	_communicationSettings,indf2
 29140                           
 29141                           ;api.c: 318: outBuffer[4] = communicationSettings.spiFrequency;
 29142  005872  EE20 F004          	lfsr	2,4
 29143  005876  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29144  005878  26D9               	addwf	fsr2l,f,c
 29145  00587A  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29146  00587C  22DA               	addwfc	fsr2h,f,c
 29147  00587E  C13A  FFDF         	movff	_communicationSettings+1,indf2
 29148                           
 29149                           ;api.c: 319: outBuffer[5] = communicationSettings.spiPolarity;
 29150  005882  EE20 F005          	lfsr	2,5
 29151  005886  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29152  005888  26D9               	addwf	fsr2l,f,c
 29153  00588A  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29154  00588C  22DA               	addwfc	fsr2h,f,c
 29155  00588E  C13B  FFDF         	movff	_communicationSettings+2,indf2
 29156                           
 29157                           ;api.c: 322: outBuffer[6] = communicationSettings.i2cMode;
 29158  005892  EE20 F006          	lfsr	2,6
 29159  005896  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29160  005898  26D9               	addwf	fsr2l,f,c
 29161  00589A  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29162  00589C  22DA               	addwfc	fsr2h,f,c
 29163  00589E  C13C  FFDF         	movff	_communicationSettings+3,indf2
 29164                           
 29165                           ;api.c: 323: outBuffer[7] = communicationSettings.i2cFrequency;
 29166  0058A2  EE20 F007          	lfsr	2,7
 29167  0058A6  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29168  0058A8  26D9               	addwf	fsr2l,f,c
 29169  0058AA  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29170  0058AC  22DA               	addwfc	fsr2h,f,c
 29171  0058AE  C13D  FFDF         	movff	_communicationSettings+4,indf2
 29172                           
 29173                           ;api.c: 324: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 29174  0058B2  EE20 F008          	lfsr	2,8
 29175  0058B6  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29176  0058B8  26D9               	addwf	fsr2l,f,c
 29177  0058BA  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29178  0058BC  22DA               	addwfc	fsr2h,f,c
 29179  0058BE  C13E  FFDF         	movff	_communicationSettings+5,indf2
 29180                           
 29181                           ;api.c: 325: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 29182  0058C2  EE20 F009          	lfsr	2,9
 29183  0058C6  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29184  0058C8  26D9               	addwf	fsr2l,f,c
 29185  0058CA  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29186  0058CC  22DA               	addwfc	fsr2h,f,c
 29187  0058CE  C13F  FFDF         	movff	_communicationSettings+6,indf2
 29188  0058D2  0012               	return		;funcret
 29189  0058D4                     __end_of__fill_buffer_get_configuration:
 29190                           	opt stack 0
 29191                           tosu	equ	0xFFF
 29192                           tosh	equ	0xFFE
 29193                           tosl	equ	0xFFD
 29194                           pclath	equ	0xFFA
 29195                           tblptru	equ	0xFF8
 29196                           tblptrh	equ	0xFF7
 29197                           tblptrl	equ	0xFF6
 29198                           tablat	equ	0xFF5
 29199                           prodh	equ	0xFF4
 29200                           prodl	equ	0xFF3
 29201                           intcon	equ	0xFF2
 29202                           intcon2	equ	0xFF1
 29203                           intcon3	equ	0xFF0
 29204                           indf0	equ	0xFEF
 29205                           postinc0	equ	0xFEE
 29206                           fsr0h	equ	0xFEA
 29207                           fsr0l	equ	0xFE9
 29208                           wreg	equ	0xFE8
 29209                           indf1	equ	0xFE7
 29210                           postdec1	equ	0xFE5
 29211                           plusw1	equ	0xFE3
 29212                           fsr1h	equ	0xFE2
 29213                           fsr1l	equ	0xFE1
 29214                           indf2	equ	0xFDF
 29215                           postinc2	equ	0xFDE
 29216                           postdec2	equ	0xFDD
 29217                           plusw2	equ	0xFDB
 29218                           fsr2h	equ	0xFDA
 29219                           fsr2l	equ	0xFD9
 29220                           status	equ	0xFD8
 29221                           
 29222 ;; *************** function __fill_buffer_get_bootloader_details *****************
 29223 ;; Defined at:
 29224 ;;		line 242 in file "api.c"
 29225 ;; Parameters:    Size  Location     Type
 29226 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 29227 ;;		 -> RAM(3759), 
 29228 ;; Auto vars:     Size  Location     Type
 29229 ;;  buffer_large    4   11[COMRAM] unsigned long 
 29230 ;;  buffer_small    2   15[COMRAM] unsigned int 
 29231 ;;  cntr            1   10[COMRAM] unsigned char 
 29232 ;;  data_length     1    9[COMRAM] unsigned char 
 29233 ;; Return value:  Size  Location     Type
 29234 ;;                  1    wreg      void 
 29235 ;; Registers used:
 29236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29237 ;; Tracked objects:
 29238 ;;		On entry : 0/0
 29239 ;;		On exit  : 0/0
 29240 ;;		Unchanged: 0/0
 29241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29243 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29244 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29245 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29246 ;;Total ram usage:       13 bytes
 29247 ;; Hardware stack levels used:    1
 29248 ;; Hardware stack levels required when called:    1
 29249 ;; This function calls:
 29250 ;;		_bootloader_get_entries
 29251 ;;		_bootloader_get_error
 29252 ;;		_bootloader_get_file_size
 29253 ;;		_bootloader_get_flashPagesWritten
 29254 ;;		_bootloader_get_rec_address
 29255 ;;		_bootloader_get_rec_checksum
 29256 ;;		_bootloader_get_rec_checksumCheck
 29257 ;;		_bootloader_get_rec_data
 29258 ;;		_bootloader_get_rec_dataLength
 29259 ;;		_bootloader_get_rec_recordType
 29260 ;;		_bootloader_get_total_entries
 29261 ;; This function is called by:
 29262 ;;		_api_prepare
 29263 ;; This function uses a non-reentrant model
 29264 ;;
 29265                           
 29266                           	psect	text135
 29267  00274A                     __ptext135:
 29268                           	opt stack 0
 29269  00274A                     __fill_buffer_get_bootloader_details:
 29270                           	opt stack 27
 29271                           
 29272                           ;api.c: 244: uint8_t cntr;;api.c: 245: uint8_t data_length;;api.c: 246: uint16_t buffer_
      +                          small;;api.c: 247: uint32_t buffer_large;;api.c: 250: outBuffer[0] = DATAREQUEST_GET_STA
      +                          TUS;
 29273                           
 29274                           ;incstack = 0
 29275  00274A  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 29276  00274E  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 29277  002752  0E10               	movlw	16
 29278  002754  6EDF               	movwf	indf2,c
 29279                           
 29280                           ;api.c: 253: outBuffer[1] = (uint8_t) 0xC125;
 29281  002756  EE20 F001          	lfsr	2,1
 29282  00275A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29283  00275C  26D9               	addwf	fsr2l,f,c
 29284  00275E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29285  002760  22DA               	addwfc	fsr2h,f,c
 29286  002762  0E25               	movlw	37
 29287  002764  6EDF               	movwf	indf2,c
 29288                           
 29289                           ;api.c: 254: outBuffer[2] = 0xC125 >> 8;
 29290  002766  EE20 F002          	lfsr	2,2
 29291  00276A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29292  00276C  26D9               	addwf	fsr2l,f,c
 29293  00276E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29294  002770  22DA               	addwfc	fsr2h,f,c
 29295  002772  0EC1               	movlw	193
 29296  002774  6EDF               	movwf	indf2,c
 29297                           
 29298                           ;api.c: 257: buffer_large = bootloader_get_file_size();
 29299  002776  EC2F  F03D         	call	_bootloader_get_file_size	;wreg free
 29300  00277A  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 29301  00277E  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 29302  002782  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 29303  002786  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 29304                           
 29305                           ;api.c: 258: outBuffer[3] = (uint8_t) buffer_large;
 29306  00278A  EE20 F003          	lfsr	2,3
 29307  00278E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29308  002790  26D9               	addwf	fsr2l,f,c
 29309  002792  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29310  002794  22DA               	addwfc	fsr2h,f,c
 29311  002796  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 29312                           
 29313                           ;api.c: 259: outBuffer[4] = (uint8_t) (buffer_large>>8);
 29314  00279A  EE20 F004          	lfsr	2,4
 29315  00279E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29316  0027A0  26D9               	addwf	fsr2l,f,c
 29317  0027A2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29318  0027A4  22DA               	addwfc	fsr2h,f,c
 29319  0027A6  C00D  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+1,indf2
 29320                           
 29321                           ;api.c: 260: outBuffer[5] = (uint8_t) (buffer_large>>16);
 29322  0027AA  EE20 F005          	lfsr	2,5
 29323  0027AE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29324  0027B0  26D9               	addwf	fsr2l,f,c
 29325  0027B2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29326  0027B4  22DA               	addwfc	fsr2h,f,c
 29327  0027B6  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 29328                           
 29329                           ;api.c: 261: outBuffer[6] = (uint8_t) (buffer_large>>32);
 29330  0027BA  EE20 F006          	lfsr	2,6
 29331  0027BE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29332  0027C0  26D9               	addwf	fsr2l,f,c
 29333  0027C2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29334  0027C4  22DA               	addwfc	fsr2h,f,c
 29335  0027C6  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 29336                           
 29337                           ;api.c: 263: buffer_small = bootloader_get_entries();
 29338  0027CA  EC8A  F03D         	call	_bootloader_get_entries	;wreg free
 29339  0027CE  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 29340  0027D2  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 29341                           
 29342                           ;api.c: 264: outBuffer[7] = (uint8_t) buffer_small;
 29343  0027D6  EE20 F007          	lfsr	2,7
 29344  0027DA  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29345  0027DC  26D9               	addwf	fsr2l,f,c
 29346  0027DE  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29347  0027E0  22DA               	addwfc	fsr2h,f,c
 29348  0027E2  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29349                           
 29350                           ;api.c: 265: outBuffer[8] = (uint8_t) (buffer_small>>8);
 29351  0027E6  EE20 F008          	lfsr	2,8
 29352  0027EA  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29353  0027EC  26D9               	addwf	fsr2l,f,c
 29354  0027EE  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29355  0027F0  22DA               	addwfc	fsr2h,f,c
 29356  0027F2  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29357  0027F4  6EDF               	movwf	indf2,c
 29358                           
 29359                           ;api.c: 267: buffer_small = bootloader_get_total_entries();
 29360  0027F6  EC76  F03D         	call	_bootloader_get_total_entries	;wreg free
 29361  0027FA  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 29362  0027FE  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 29363                           
 29364                           ;api.c: 268: outBuffer[9] = (uint8_t) buffer_small;
 29365  002802  EE20 F009          	lfsr	2,9
 29366  002806  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29367  002808  26D9               	addwf	fsr2l,f,c
 29368  00280A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29369  00280C  22DA               	addwfc	fsr2h,f,c
 29370  00280E  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29371                           
 29372                           ;api.c: 269: outBuffer[10] = (uint8_t) (buffer_small>>8);
 29373  002812  EE20 F00A          	lfsr	2,10
 29374  002816  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29375  002818  26D9               	addwf	fsr2l,f,c
 29376  00281A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29377  00281C  22DA               	addwfc	fsr2h,f,c
 29378  00281E  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29379  002820  6EDF               	movwf	indf2,c
 29380                           
 29381                           ;api.c: 271: outBuffer[11] = (uint8_t) bootloader_get_error();
 29382  002822  EE20 F00B          	lfsr	2,11
 29383  002826  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29384  002828  26D9               	addwf	fsr2l,f,c
 29385  00282A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29386  00282C  22DA               	addwfc	fsr2h,f,c
 29387  00282E  ECB1  F03D         	call	_bootloader_get_error	;wreg free
 29388  002832  6EDF               	movwf	indf2,c
 29389                           
 29390                           ;api.c: 273: buffer_small = bootloader_get_flashPagesWritten();
 29391  002834  EC85  F03D         	call	_bootloader_get_flashPagesWritten	;wreg free
 29392  002838  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 29393  00283C  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 29394                           
 29395                           ;api.c: 274: outBuffer[12] = (uint8_t) buffer_small;
 29396  002840  EE20 F00C          	lfsr	2,12
 29397  002844  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29398  002846  26D9               	addwf	fsr2l,f,c
 29399  002848  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29400  00284A  22DA               	addwfc	fsr2h,f,c
 29401  00284C  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29402                           
 29403                           ;api.c: 275: outBuffer[13] = (uint8_t) (buffer_small>>8);
 29404  002850  EE20 F00D          	lfsr	2,13
 29405  002854  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29406  002856  26D9               	addwf	fsr2l,f,c
 29407  002858  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29408  00285A  22DA               	addwfc	fsr2h,f,c
 29409  00285C  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29410  00285E  6EDF               	movwf	indf2,c
 29411                           
 29412                           ;api.c: 278: buffer_small = bootloader_get_rec_dataLength();
 29413  002860  EC7B  F03D         	call	_bootloader_get_rec_dataLength	;wreg free
 29414  002864  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 29415  002868  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 29416                           
 29417                           ;api.c: 279: outBuffer[14] = (uint8_t) buffer_small;
 29418  00286C  EE20 F00E          	lfsr	2,14
 29419  002870  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29420  002872  26D9               	addwf	fsr2l,f,c
 29421  002874  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29422  002876  22DA               	addwfc	fsr2h,f,c
 29423  002878  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29424                           
 29425                           ;api.c: 280: outBuffer[15] = (uint8_t) (buffer_small>>8);
 29426  00287C  EE20 F00F          	lfsr	2,15
 29427  002880  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29428  002882  26D9               	addwf	fsr2l,f,c
 29429  002884  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29430  002886  22DA               	addwfc	fsr2h,f,c
 29431  002888  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29432  00288A  6EDF               	movwf	indf2,c
 29433                           
 29434                           ;api.c: 282: buffer_small = bootloader_get_rec_address();
 29435  00288C  EC80  F03D         	call	_bootloader_get_rec_address	;wreg free
 29436  002890  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 29437  002894  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 29438                           
 29439                           ;api.c: 283: outBuffer[16] = (uint8_t) buffer_small;
 29440  002898  EE20 F010          	lfsr	2,16
 29441  00289C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29442  00289E  26D9               	addwf	fsr2l,f,c
 29443  0028A0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29444  0028A2  22DA               	addwfc	fsr2h,f,c
 29445  0028A4  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29446                           
 29447                           ;api.c: 284: outBuffer[17] = (uint8_t) (buffer_small>>8);
 29448  0028A8  EE20 F011          	lfsr	2,17
 29449  0028AC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29450  0028AE  26D9               	addwf	fsr2l,f,c
 29451  0028B0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29452  0028B2  22DA               	addwfc	fsr2h,f,c
 29453  0028B4  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29454  0028B6  6EDF               	movwf	indf2,c
 29455                           
 29456                           ;api.c: 286: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 29457  0028B8  EE20 F012          	lfsr	2,18
 29458  0028BC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29459  0028BE  26D9               	addwf	fsr2l,f,c
 29460  0028C0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29461  0028C2  22DA               	addwfc	fsr2h,f,c
 29462  0028C4  ECA8  F03D         	call	_bootloader_get_rec_recordType	;wreg free
 29463  0028C8  6EDF               	movwf	indf2,c
 29464                           
 29465                           ;api.c: 287: outBuffer[19] = bootloader_get_rec_checksum();
 29466  0028CA  EE20 F013          	lfsr	2,19
 29467  0028CE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29468  0028D0  26D9               	addwf	fsr2l,f,c
 29469  0028D2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29470  0028D4  22DA               	addwfc	fsr2h,f,c
 29471  0028D6  ECAE  F03D         	call	_bootloader_get_rec_checksum	;wreg free
 29472  0028DA  6EDF               	movwf	indf2,c
 29473                           
 29474                           ;api.c: 288: outBuffer[20] = bootloader_get_rec_checksumCheck();
 29475  0028DC  EE20 F014          	lfsr	2,20
 29476  0028E0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29477  0028E2  26D9               	addwf	fsr2l,f,c
 29478  0028E4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29479  0028E6  22DA               	addwfc	fsr2h,f,c
 29480  0028E8  ECAB  F03D         	call	_bootloader_get_rec_checksumCheck	;wreg free
 29481  0028EC  6EDF               	movwf	indf2,c
 29482                           
 29483                           ;api.c: 290: data_length = (uint8_t) bootloader_get_rec_dataLength();
 29484  0028EE  EC7B  F03D         	call	_bootloader_get_rec_dataLength	;wreg free
 29485  0028F2  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 29486  0028F4  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 29487                           
 29488                           ;api.c: 291: if(data_length>43)
 29489  0028F6  0E2B               	movlw	43
 29490  0028F8  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 29491  0028FA  D002               	goto	l2463
 29492                           
 29493                           ;api.c: 292: {;api.c: 294: data_length = 43;
 29494  0028FC  0E2B               	movlw	43
 29495  0028FE  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 29496  002900                     l2463:
 29497                           
 29498                           ;api.c: 295: };api.c: 296: for(cntr=0; cntr<data_length; ++cntr)
 29499  002900  0E00               	movlw	0
 29500  002902  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 29501  002904  D014               	goto	l2464
 29502  002906                     
 29503                           ;api.c: 297: {;api.c: 298: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 29504  002906  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 29505  002908  ECF4  F03C         	call	_bootloader_get_rec_data
 29506  00290C  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 29507  00290E  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 29508  002910  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 29509  002912  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 29510  002914  0E15               	movlw	21
 29511  002916  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 29512  002918  0E00               	movlw	0
 29513  00291A  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 29514  00291C  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 29515  00291E  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29516  002920  6ED9               	movwf	fsr2l,c
 29517  002922  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 29518  002924  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29519  002926  6EDA               	movwf	fsr2h,c
 29520  002928  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 29521  00292C  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 29522  00292E                     l2464:
 29523  00292E  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 29524  002930  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 29525  002932  B0D8               	btfsc	status,0,c
 29526  002934  0012               	return	
 29527  002936  D7E7               	goto	l2465
 29528  002938                     __end_of__fill_buffer_get_bootloader_details:
 29529                           	opt stack 0
 29530                           tosu	equ	0xFFF
 29531                           tosh	equ	0xFFE
 29532                           tosl	equ	0xFFD
 29533                           pclath	equ	0xFFA
 29534                           tblptru	equ	0xFF8
 29535                           tblptrh	equ	0xFF7
 29536                           tblptrl	equ	0xFF6
 29537                           tablat	equ	0xFF5
 29538                           prodh	equ	0xFF4
 29539                           prodl	equ	0xFF3
 29540                           intcon	equ	0xFF2
 29541                           intcon2	equ	0xFF1
 29542                           intcon3	equ	0xFF0
 29543                           indf0	equ	0xFEF
 29544                           postinc0	equ	0xFEE
 29545                           fsr0h	equ	0xFEA
 29546                           fsr0l	equ	0xFE9
 29547                           wreg	equ	0xFE8
 29548                           indf1	equ	0xFE7
 29549                           postdec1	equ	0xFE5
 29550                           plusw1	equ	0xFE3
 29551                           fsr1h	equ	0xFE2
 29552                           fsr1l	equ	0xFE1
 29553                           indf2	equ	0xFDF
 29554                           postinc2	equ	0xFDE
 29555                           postdec2	equ	0xFDD
 29556                           plusw2	equ	0xFDB
 29557                           fsr2h	equ	0xFDA
 29558                           fsr2l	equ	0xFD9
 29559                           status	equ	0xFD8
 29560                           
 29561 ;; *************** function _bootloader_get_total_entries *****************
 29562 ;; Defined at:
 29563 ;;		line 432 in file "bootloader.c"
 29564 ;; Parameters:    Size  Location     Type
 29565 ;;		None
 29566 ;; Auto vars:     Size  Location     Type
 29567 ;;		None
 29568 ;; Return value:  Size  Location     Type
 29569 ;;                  2    0[COMRAM] unsigned int 
 29570 ;; Registers used:
 29571 ;;		None
 29572 ;; Tracked objects:
 29573 ;;		On entry : 0/0
 29574 ;;		On exit  : 0/0
 29575 ;;		Unchanged: 0/0
 29576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29580 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29581 ;;Total ram usage:        2 bytes
 29582 ;; Hardware stack levels used:    1
 29583 ;; This function calls:
 29584 ;;		Nothing
 29585 ;; This function is called by:
 29586 ;;		__display_checked
 29587 ;;		__display_programming
 29588 ;;		__fill_buffer_get_bootloader_details
 29589 ;; This function uses a non-reentrant model
 29590 ;;
 29591                           
 29592                           	psect	text136
 29593  007AEC                     __ptext136:
 29594                           	opt stack 0
 29595  007AEC                     _bootloader_get_total_entries:
 29596                           	opt stack 28
 29597                           
 29598                           ;bootloader.c: 434: return total_hex_file_entries;
 29599                           
 29600                           ;incstack = 0
 29601  007AEC  C168  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 29602  007AF0  C169  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 29603  007AF4  0012               	return		;funcret
 29604  007AF6                     __end_of_bootloader_get_total_entries:
 29605                           	opt stack 0
 29606                           tosu	equ	0xFFF
 29607                           tosh	equ	0xFFE
 29608                           tosl	equ	0xFFD
 29609                           pclath	equ	0xFFA
 29610                           tblptru	equ	0xFF8
 29611                           tblptrh	equ	0xFF7
 29612                           tblptrl	equ	0xFF6
 29613                           tablat	equ	0xFF5
 29614                           prodh	equ	0xFF4
 29615                           prodl	equ	0xFF3
 29616                           intcon	equ	0xFF2
 29617                           intcon2	equ	0xFF1
 29618                           intcon3	equ	0xFF0
 29619                           indf0	equ	0xFEF
 29620                           postinc0	equ	0xFEE
 29621                           fsr0h	equ	0xFEA
 29622                           fsr0l	equ	0xFE9
 29623                           wreg	equ	0xFE8
 29624                           indf1	equ	0xFE7
 29625                           postdec1	equ	0xFE5
 29626                           plusw1	equ	0xFE3
 29627                           fsr1h	equ	0xFE2
 29628                           fsr1l	equ	0xFE1
 29629                           indf2	equ	0xFDF
 29630                           postinc2	equ	0xFDE
 29631                           postdec2	equ	0xFDD
 29632                           plusw2	equ	0xFDB
 29633                           fsr2h	equ	0xFDA
 29634                           fsr2l	equ	0xFD9
 29635                           status	equ	0xFD8
 29636                           
 29637 ;; *************** function _bootloader_get_rec_recordType *****************
 29638 ;; Defined at:
 29639 ;;		line 453 in file "bootloader.c"
 29640 ;; Parameters:    Size  Location     Type
 29641 ;;		None
 29642 ;; Auto vars:     Size  Location     Type
 29643 ;;		None
 29644 ;; Return value:  Size  Location     Type
 29645 ;;                  1    wreg      enum E6756
 29646 ;; Registers used:
 29647 ;;		wreg, status,2
 29648 ;; Tracked objects:
 29649 ;;		On entry : 0/0
 29650 ;;		On exit  : 0/0
 29651 ;;		Unchanged: 0/0
 29652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29657 ;;Total ram usage:        0 bytes
 29658 ;; Hardware stack levels used:    1
 29659 ;; This function calls:
 29660 ;;		Nothing
 29661 ;; This function is called by:
 29662 ;;		__fill_buffer_get_bootloader_details
 29663 ;; This function uses a non-reentrant model
 29664 ;;
 29665                           
 29666                           	psect	text137
 29667  007B50                     __ptext137:
 29668                           	opt stack 0
 29669  007B50                     _bootloader_get_rec_recordType:
 29670                           	opt stack 27
 29671                           
 29672                           ;bootloader.c: 455: return hex_file_entry.recordType;
 29673                           
 29674                           ;incstack = 0
 29675  007B50  0101               	movlb	1	; () banked
 29676  007B52  51C0               	movf	(_hex_file_entry+4)& (0+255),w,b
 29677  007B54  0012               	return	
 29678  007B56                     __end_of_bootloader_get_rec_recordType:
 29679                           	opt stack 0
 29680                           tosu	equ	0xFFF
 29681                           tosh	equ	0xFFE
 29682                           tosl	equ	0xFFD
 29683                           pclath	equ	0xFFA
 29684                           tblptru	equ	0xFF8
 29685                           tblptrh	equ	0xFF7
 29686                           tblptrl	equ	0xFF6
 29687                           tablat	equ	0xFF5
 29688                           prodh	equ	0xFF4
 29689                           prodl	equ	0xFF3
 29690                           intcon	equ	0xFF2
 29691                           intcon2	equ	0xFF1
 29692                           intcon3	equ	0xFF0
 29693                           indf0	equ	0xFEF
 29694                           postinc0	equ	0xFEE
 29695                           fsr0h	equ	0xFEA
 29696                           fsr0l	equ	0xFE9
 29697                           wreg	equ	0xFE8
 29698                           indf1	equ	0xFE7
 29699                           postdec1	equ	0xFE5
 29700                           plusw1	equ	0xFE3
 29701                           fsr1h	equ	0xFE2
 29702                           fsr1l	equ	0xFE1
 29703                           indf2	equ	0xFDF
 29704                           postinc2	equ	0xFDE
 29705                           postdec2	equ	0xFDD
 29706                           plusw2	equ	0xFDB
 29707                           fsr2h	equ	0xFDA
 29708                           fsr2l	equ	0xFD9
 29709                           status	equ	0xFD8
 29710                           
 29711 ;; *************** function _bootloader_get_rec_dataLength *****************
 29712 ;; Defined at:
 29713 ;;		line 442 in file "bootloader.c"
 29714 ;; Parameters:    Size  Location     Type
 29715 ;;		None
 29716 ;; Auto vars:     Size  Location     Type
 29717 ;;		None
 29718 ;; Return value:  Size  Location     Type
 29719 ;;                  2    0[COMRAM] unsigned int 
 29720 ;; Registers used:
 29721 ;;		None
 29722 ;; Tracked objects:
 29723 ;;		On entry : 0/0
 29724 ;;		On exit  : 0/0
 29725 ;;		Unchanged: 0/0
 29726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29731 ;;Total ram usage:        2 bytes
 29732 ;; Hardware stack levels used:    1
 29733 ;; This function calls:
 29734 ;;		Nothing
 29735 ;; This function is called by:
 29736 ;;		__fill_buffer_get_bootloader_details
 29737 ;; This function uses a non-reentrant model
 29738 ;;
 29739                           
 29740                           	psect	text138
 29741  007AF6                     __ptext138:
 29742                           	opt stack 0
 29743  007AF6                     _bootloader_get_rec_dataLength:
 29744                           	opt stack 27
 29745                           
 29746                           ;bootloader.c: 444: return hex_file_entry.dataLength;
 29747                           
 29748                           ; BSR set to: 1
 29749                           ;incstack = 0
 29750  007AF6  C1BC  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 29751  007AFA  C1BD  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 29752  007AFE  0012               	return		;funcret
 29753  007B00                     __end_of_bootloader_get_rec_dataLength:
 29754                           	opt stack 0
 29755                           tosu	equ	0xFFF
 29756                           tosh	equ	0xFFE
 29757                           tosl	equ	0xFFD
 29758                           pclath	equ	0xFFA
 29759                           tblptru	equ	0xFF8
 29760                           tblptrh	equ	0xFF7
 29761                           tblptrl	equ	0xFF6
 29762                           tablat	equ	0xFF5
 29763                           prodh	equ	0xFF4
 29764                           prodl	equ	0xFF3
 29765                           intcon	equ	0xFF2
 29766                           intcon2	equ	0xFF1
 29767                           intcon3	equ	0xFF0
 29768                           indf0	equ	0xFEF
 29769                           postinc0	equ	0xFEE
 29770                           fsr0h	equ	0xFEA
 29771                           fsr0l	equ	0xFE9
 29772                           wreg	equ	0xFE8
 29773                           indf1	equ	0xFE7
 29774                           postdec1	equ	0xFE5
 29775                           plusw1	equ	0xFE3
 29776                           fsr1h	equ	0xFE2
 29777                           fsr1l	equ	0xFE1
 29778                           indf2	equ	0xFDF
 29779                           postinc2	equ	0xFDE
 29780                           postdec2	equ	0xFDD
 29781                           plusw2	equ	0xFDB
 29782                           fsr2h	equ	0xFDA
 29783                           fsr2l	equ	0xFD9
 29784                           status	equ	0xFD8
 29785                           
 29786 ;; *************** function _bootloader_get_rec_data *****************
 29787 ;; Defined at:
 29788 ;;		line 458 in file "bootloader.c"
 29789 ;; Parameters:    Size  Location     Type
 29790 ;;  index           1    wreg     unsigned char 
 29791 ;; Auto vars:     Size  Location     Type
 29792 ;;  index           1    0[COMRAM] unsigned char 
 29793 ;; Return value:  Size  Location     Type
 29794 ;;                  1    wreg      unsigned char 
 29795 ;; Registers used:
 29796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29797 ;; Tracked objects:
 29798 ;;		On entry : 0/0
 29799 ;;		On exit  : 0/0
 29800 ;;		Unchanged: 0/0
 29801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29806 ;;Total ram usage:        1 bytes
 29807 ;; Hardware stack levels used:    1
 29808 ;; This function calls:
 29809 ;;		Nothing
 29810 ;; This function is called by:
 29811 ;;		__fill_buffer_get_bootloader_details
 29812 ;; This function uses a non-reentrant model
 29813 ;;
 29814                           
 29815                           	psect	text139
 29816  0079E8                     __ptext139:
 29817                           	opt stack 0
 29818  0079E8                     _bootloader_get_rec_data:
 29819                           	opt stack 27
 29820                           
 29821                           ;incstack = 0
 29822                           ;bootloader_get_rec_data@index stored from wreg
 29823  0079E8  6E01               	movwf	bootloader_get_rec_data@index,c
 29824                           
 29825                           ;bootloader.c: 460: return hex_file_entry.data[index];
 29826  0079EA  5001               	movf	bootloader_get_rec_data@index,w,c
 29827  0079EC  0D01               	mullw	1
 29828  0079EE  0EC1               	movlw	low (_hex_file_entry+5)
 29829  0079F0  24F3               	addwf	prodl,w,c
 29830  0079F2  6ED9               	movwf	fsr2l,c
 29831  0079F4  0E01               	movlw	high (_hex_file_entry+5)
 29832  0079F6  20F4               	addwfc	prodh,w,c
 29833  0079F8  6EDA               	movwf	fsr2h,c
 29834  0079FA  50DF               	movf	indf2,w,c
 29835  0079FC  0012               	return	
 29836  0079FE                     __end_of_bootloader_get_rec_data:
 29837                           	opt stack 0
 29838                           tosu	equ	0xFFF
 29839                           tosh	equ	0xFFE
 29840                           tosl	equ	0xFFD
 29841                           pclath	equ	0xFFA
 29842                           tblptru	equ	0xFF8
 29843                           tblptrh	equ	0xFF7
 29844                           tblptrl	equ	0xFF6
 29845                           tablat	equ	0xFF5
 29846                           prodh	equ	0xFF4
 29847                           prodl	equ	0xFF3
 29848                           intcon	equ	0xFF2
 29849                           intcon2	equ	0xFF1
 29850                           intcon3	equ	0xFF0
 29851                           indf0	equ	0xFEF
 29852                           postinc0	equ	0xFEE
 29853                           fsr0h	equ	0xFEA
 29854                           fsr0l	equ	0xFE9
 29855                           wreg	equ	0xFE8
 29856                           indf1	equ	0xFE7
 29857                           postdec1	equ	0xFE5
 29858                           plusw1	equ	0xFE3
 29859                           fsr1h	equ	0xFE2
 29860                           fsr1l	equ	0xFE1
 29861                           indf2	equ	0xFDF
 29862                           postinc2	equ	0xFDE
 29863                           postdec2	equ	0xFDD
 29864                           plusw2	equ	0xFDB
 29865                           fsr2h	equ	0xFDA
 29866                           fsr2l	equ	0xFD9
 29867                           status	equ	0xFD8
 29868                           
 29869 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 29870 ;; Defined at:
 29871 ;;		line 468 in file "bootloader.c"
 29872 ;; Parameters:    Size  Location     Type
 29873 ;;		None
 29874 ;; Auto vars:     Size  Location     Type
 29875 ;;		None
 29876 ;; Return value:  Size  Location     Type
 29877 ;;                  1    wreg      unsigned char 
 29878 ;; Registers used:
 29879 ;;		wreg, status,2
 29880 ;; Tracked objects:
 29881 ;;		On entry : 0/0
 29882 ;;		On exit  : 0/0
 29883 ;;		Unchanged: 0/0
 29884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29889 ;;Total ram usage:        0 bytes
 29890 ;; Hardware stack levels used:    1
 29891 ;; This function calls:
 29892 ;;		Nothing
 29893 ;; This function is called by:
 29894 ;;		__fill_buffer_get_bootloader_details
 29895 ;; This function uses a non-reentrant model
 29896 ;;
 29897                           
 29898                           	psect	text140
 29899  007B56                     __ptext140:
 29900                           	opt stack 0
 29901  007B56                     _bootloader_get_rec_checksumCheck:
 29902                           	opt stack 27
 29903                           
 29904                           ;bootloader.c: 470: return hex_file_entry.checksumCheck;
 29905                           
 29906                           ;incstack = 0
 29907  007B56  0101               	movlb	1	; () banked
 29908  007B58  51D2               	movf	(_hex_file_entry+22)& (0+255),w,b
 29909  007B5A  0012               	return	
 29910  007B5C                     __end_of_bootloader_get_rec_checksumCheck:
 29911                           	opt stack 0
 29912                           tosu	equ	0xFFF
 29913                           tosh	equ	0xFFE
 29914                           tosl	equ	0xFFD
 29915                           pclath	equ	0xFFA
 29916                           tblptru	equ	0xFF8
 29917                           tblptrh	equ	0xFF7
 29918                           tblptrl	equ	0xFF6
 29919                           tablat	equ	0xFF5
 29920                           prodh	equ	0xFF4
 29921                           prodl	equ	0xFF3
 29922                           intcon	equ	0xFF2
 29923                           intcon2	equ	0xFF1
 29924                           intcon3	equ	0xFF0
 29925                           indf0	equ	0xFEF
 29926                           postinc0	equ	0xFEE
 29927                           fsr0h	equ	0xFEA
 29928                           fsr0l	equ	0xFE9
 29929                           wreg	equ	0xFE8
 29930                           indf1	equ	0xFE7
 29931                           postdec1	equ	0xFE5
 29932                           plusw1	equ	0xFE3
 29933                           fsr1h	equ	0xFE2
 29934                           fsr1l	equ	0xFE1
 29935                           indf2	equ	0xFDF
 29936                           postinc2	equ	0xFDE
 29937                           postdec2	equ	0xFDD
 29938                           plusw2	equ	0xFDB
 29939                           fsr2h	equ	0xFDA
 29940                           fsr2l	equ	0xFD9
 29941                           status	equ	0xFD8
 29942                           
 29943 ;; *************** function _bootloader_get_rec_checksum *****************
 29944 ;; Defined at:
 29945 ;;		line 463 in file "bootloader.c"
 29946 ;; Parameters:    Size  Location     Type
 29947 ;;		None
 29948 ;; Auto vars:     Size  Location     Type
 29949 ;;		None
 29950 ;; Return value:  Size  Location     Type
 29951 ;;                  1    wreg      unsigned char 
 29952 ;; Registers used:
 29953 ;;		wreg, status,2
 29954 ;; Tracked objects:
 29955 ;;		On entry : 0/0
 29956 ;;		On exit  : 0/0
 29957 ;;		Unchanged: 0/0
 29958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29963 ;;Total ram usage:        0 bytes
 29964 ;; Hardware stack levels used:    1
 29965 ;; This function calls:
 29966 ;;		Nothing
 29967 ;; This function is called by:
 29968 ;;		__fill_buffer_get_bootloader_details
 29969 ;; This function uses a non-reentrant model
 29970 ;;
 29971                           
 29972                           	psect	text141
 29973  007B5C                     __ptext141:
 29974                           	opt stack 0
 29975  007B5C                     _bootloader_get_rec_checksum:
 29976                           	opt stack 27
 29977                           
 29978                           ;bootloader.c: 465: return hex_file_entry.checksum;
 29979                           
 29980                           ; BSR set to: 1
 29981                           ;incstack = 0
 29982  007B5C  0101               	movlb	1	; () banked
 29983  007B5E  51D1               	movf	(_hex_file_entry+21)& (0+255),w,b
 29984  007B60  0012               	return	
 29985  007B62                     __end_of_bootloader_get_rec_checksum:
 29986                           	opt stack 0
 29987                           tosu	equ	0xFFF
 29988                           tosh	equ	0xFFE
 29989                           tosl	equ	0xFFD
 29990                           pclath	equ	0xFFA
 29991                           tblptru	equ	0xFF8
 29992                           tblptrh	equ	0xFF7
 29993                           tblptrl	equ	0xFF6
 29994                           tablat	equ	0xFF5
 29995                           prodh	equ	0xFF4
 29996                           prodl	equ	0xFF3
 29997                           intcon	equ	0xFF2
 29998                           intcon2	equ	0xFF1
 29999                           intcon3	equ	0xFF0
 30000                           indf0	equ	0xFEF
 30001                           postinc0	equ	0xFEE
 30002                           fsr0h	equ	0xFEA
 30003                           fsr0l	equ	0xFE9
 30004                           wreg	equ	0xFE8
 30005                           indf1	equ	0xFE7
 30006                           postdec1	equ	0xFE5
 30007                           plusw1	equ	0xFE3
 30008                           fsr1h	equ	0xFE2
 30009                           fsr1l	equ	0xFE1
 30010                           indf2	equ	0xFDF
 30011                           postinc2	equ	0xFDE
 30012                           postdec2	equ	0xFDD
 30013                           plusw2	equ	0xFDB
 30014                           fsr2h	equ	0xFDA
 30015                           fsr2l	equ	0xFD9
 30016                           status	equ	0xFD8
 30017                           
 30018 ;; *************** function _bootloader_get_rec_address *****************
 30019 ;; Defined at:
 30020 ;;		line 447 in file "bootloader.c"
 30021 ;; Parameters:    Size  Location     Type
 30022 ;;		None
 30023 ;; Auto vars:     Size  Location     Type
 30024 ;;		None
 30025 ;; Return value:  Size  Location     Type
 30026 ;;                  2    0[COMRAM] unsigned int 
 30027 ;; Registers used:
 30028 ;;		None
 30029 ;; Tracked objects:
 30030 ;;		On entry : 0/0
 30031 ;;		On exit  : 0/0
 30032 ;;		Unchanged: 0/0
 30033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30037 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30038 ;;Total ram usage:        2 bytes
 30039 ;; Hardware stack levels used:    1
 30040 ;; This function calls:
 30041 ;;		Nothing
 30042 ;; This function is called by:
 30043 ;;		__display_failed
 30044 ;;		__fill_buffer_get_bootloader_details
 30045 ;; This function uses a non-reentrant model
 30046 ;;
 30047                           
 30048                           	psect	text142
 30049  007B00                     __ptext142:
 30050                           	opt stack 0
 30051  007B00                     _bootloader_get_rec_address:
 30052                           	opt stack 28
 30053                           
 30054                           ;bootloader.c: 450: return hex_file_entry.address;
 30055                           
 30056                           ; BSR set to: 1
 30057                           ;incstack = 0
 30058  007B00  C1BE  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 30059  007B04  C1BF  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 30060  007B08  0012               	return		;funcret
 30061  007B0A                     __end_of_bootloader_get_rec_address:
 30062                           	opt stack 0
 30063                           tosu	equ	0xFFF
 30064                           tosh	equ	0xFFE
 30065                           tosl	equ	0xFFD
 30066                           pclath	equ	0xFFA
 30067                           tblptru	equ	0xFF8
 30068                           tblptrh	equ	0xFF7
 30069                           tblptrl	equ	0xFF6
 30070                           tablat	equ	0xFF5
 30071                           prodh	equ	0xFF4
 30072                           prodl	equ	0xFF3
 30073                           intcon	equ	0xFF2
 30074                           intcon2	equ	0xFF1
 30075                           intcon3	equ	0xFF0
 30076                           indf0	equ	0xFEF
 30077                           postinc0	equ	0xFEE
 30078                           fsr0h	equ	0xFEA
 30079                           fsr0l	equ	0xFE9
 30080                           wreg	equ	0xFE8
 30081                           indf1	equ	0xFE7
 30082                           postdec1	equ	0xFE5
 30083                           plusw1	equ	0xFE3
 30084                           fsr1h	equ	0xFE2
 30085                           fsr1l	equ	0xFE1
 30086                           indf2	equ	0xFDF
 30087                           postinc2	equ	0xFDE
 30088                           postdec2	equ	0xFDD
 30089                           plusw2	equ	0xFDB
 30090                           fsr2h	equ	0xFDA
 30091                           fsr2l	equ	0xFD9
 30092                           status	equ	0xFD8
 30093                           
 30094 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30095 ;; Defined at:
 30096 ;;		line 473 in file "bootloader.c"
 30097 ;; Parameters:    Size  Location     Type
 30098 ;;		None
 30099 ;; Auto vars:     Size  Location     Type
 30100 ;;		None
 30101 ;; Return value:  Size  Location     Type
 30102 ;;                  2    0[COMRAM] unsigned int 
 30103 ;; Registers used:
 30104 ;;		None
 30105 ;; Tracked objects:
 30106 ;;		On entry : 0/0
 30107 ;;		On exit  : 0/0
 30108 ;;		Unchanged: 0/0
 30109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30114 ;;Total ram usage:        2 bytes
 30115 ;; Hardware stack levels used:    1
 30116 ;; This function calls:
 30117 ;;		Nothing
 30118 ;; This function is called by:
 30119 ;;		__display_programming
 30120 ;;		__display_done
 30121 ;;		__fill_buffer_get_bootloader_details
 30122 ;; This function uses a non-reentrant model
 30123 ;;
 30124                           
 30125                           	psect	text143
 30126  007B0A                     __ptext143:
 30127                           	opt stack 0
 30128  007B0A                     _bootloader_get_flashPagesWritten:
 30129                           	opt stack 28
 30130                           
 30131                           ;bootloader.c: 475: return flash_pages_written;
 30132                           
 30133                           ;incstack = 0
 30134  007B0A  C166  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 30135  007B0E  C167  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 30136  007B12  0012               	return		;funcret
 30137  007B14                     __end_of_bootloader_get_flashPagesWritten:
 30138                           	opt stack 0
 30139                           tosu	equ	0xFFF
 30140                           tosh	equ	0xFFE
 30141                           tosl	equ	0xFFD
 30142                           pclath	equ	0xFFA
 30143                           tblptru	equ	0xFF8
 30144                           tblptrh	equ	0xFF7
 30145                           tblptrl	equ	0xFF6
 30146                           tablat	equ	0xFF5
 30147                           prodh	equ	0xFF4
 30148                           prodl	equ	0xFF3
 30149                           intcon	equ	0xFF2
 30150                           intcon2	equ	0xFF1
 30151                           intcon3	equ	0xFF0
 30152                           indf0	equ	0xFEF
 30153                           postinc0	equ	0xFEE
 30154                           fsr0h	equ	0xFEA
 30155                           fsr0l	equ	0xFE9
 30156                           wreg	equ	0xFE8
 30157                           indf1	equ	0xFE7
 30158                           postdec1	equ	0xFE5
 30159                           plusw1	equ	0xFE3
 30160                           fsr1h	equ	0xFE2
 30161                           fsr1l	equ	0xFE1
 30162                           indf2	equ	0xFDF
 30163                           postinc2	equ	0xFDE
 30164                           postdec2	equ	0xFDD
 30165                           plusw2	equ	0xFDB
 30166                           fsr2h	equ	0xFDA
 30167                           fsr2l	equ	0xFD9
 30168                           status	equ	0xFD8
 30169                           
 30170 ;; *************** function _bootloader_get_file_size *****************
 30171 ;; Defined at:
 30172 ;;		line 422 in file "bootloader.c"
 30173 ;; Parameters:    Size  Location     Type
 30174 ;;		None
 30175 ;; Auto vars:     Size  Location     Type
 30176 ;;		None
 30177 ;; Return value:  Size  Location     Type
 30178 ;;                  4    0[COMRAM] unsigned long 
 30179 ;; Registers used:
 30180 ;;		None
 30181 ;; Tracked objects:
 30182 ;;		On entry : 0/0
 30183 ;;		On exit  : 0/0
 30184 ;;		Unchanged: 0/0
 30185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30186 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30189 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30190 ;;Total ram usage:        4 bytes
 30191 ;; Hardware stack levels used:    1
 30192 ;; This function calls:
 30193 ;;		Nothing
 30194 ;; This function is called by:
 30195 ;;		__display_found
 30196 ;;		__fill_buffer_get_bootloader_details
 30197 ;; This function uses a non-reentrant model
 30198 ;;
 30199                           
 30200                           	psect	text144
 30201  007A5E                     __ptext144:
 30202                           	opt stack 0
 30203  007A5E                     _bootloader_get_file_size:
 30204                           	opt stack 28
 30205                           
 30206                           ;bootloader.c: 424: return hex_file_size;
 30207                           
 30208                           ;incstack = 0
 30209  007A5E  C078  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 30210  007A62  C079  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 30211  007A66  C07A  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 30212  007A6A  C07B  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 30213  007A6E  0012               	return		;funcret
 30214  007A70                     __end_of_bootloader_get_file_size:
 30215                           	opt stack 0
 30216                           tosu	equ	0xFFF
 30217                           tosh	equ	0xFFE
 30218                           tosl	equ	0xFFD
 30219                           pclath	equ	0xFFA
 30220                           tblptru	equ	0xFF8
 30221                           tblptrh	equ	0xFF7
 30222                           tblptrl	equ	0xFF6
 30223                           tablat	equ	0xFF5
 30224                           prodh	equ	0xFF4
 30225                           prodl	equ	0xFF3
 30226                           intcon	equ	0xFF2
 30227                           intcon2	equ	0xFF1
 30228                           intcon3	equ	0xFF0
 30229                           indf0	equ	0xFEF
 30230                           postinc0	equ	0xFEE
 30231                           fsr0h	equ	0xFEA
 30232                           fsr0l	equ	0xFE9
 30233                           wreg	equ	0xFE8
 30234                           indf1	equ	0xFE7
 30235                           postdec1	equ	0xFE5
 30236                           plusw1	equ	0xFE3
 30237                           fsr1h	equ	0xFE2
 30238                           fsr1l	equ	0xFE1
 30239                           indf2	equ	0xFDF
 30240                           postinc2	equ	0xFDE
 30241                           postdec2	equ	0xFDD
 30242                           plusw2	equ	0xFDB
 30243                           fsr2h	equ	0xFDA
 30244                           fsr2l	equ	0xFD9
 30245                           status	equ	0xFD8
 30246                           
 30247 ;; *************** function _bootloader_get_error *****************
 30248 ;; Defined at:
 30249 ;;		line 437 in file "bootloader.c"
 30250 ;; Parameters:    Size  Location     Type
 30251 ;;		None
 30252 ;; Auto vars:     Size  Location     Type
 30253 ;;		None
 30254 ;; Return value:  Size  Location     Type
 30255 ;;                  1    wreg      enum E6998
 30256 ;; Registers used:
 30257 ;;		wreg, status,2
 30258 ;; Tracked objects:
 30259 ;;		On entry : 0/0
 30260 ;;		On exit  : 0/0
 30261 ;;		Unchanged: 0/0
 30262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30267 ;;Total ram usage:        0 bytes
 30268 ;; Hardware stack levels used:    1
 30269 ;; This function calls:
 30270 ;;		Nothing
 30271 ;; This function is called by:
 30272 ;;		__display_failed
 30273 ;;		__fill_buffer_get_bootloader_details
 30274 ;; This function uses a non-reentrant model
 30275 ;;
 30276                           
 30277                           	psect	text145
 30278  007B62                     __ptext145:
 30279                           	opt stack 0
 30280  007B62                     _bootloader_get_error:
 30281                           	opt stack 28
 30282                           
 30283                           ;bootloader.c: 439: return last_error;
 30284                           
 30285                           ;incstack = 0
 30286  007B62  0100               	movlb	0	; () banked
 30287  007B64  519E               	movf	_last_error& (0+255),w,b
 30288  007B66  0012               	return	
 30289  007B68                     __end_of_bootloader_get_error:
 30290                           	opt stack 0
 30291                           tosu	equ	0xFFF
 30292                           tosh	equ	0xFFE
 30293                           tosl	equ	0xFFD
 30294                           pclath	equ	0xFFA
 30295                           tblptru	equ	0xFF8
 30296                           tblptrh	equ	0xFF7
 30297                           tblptrl	equ	0xFF6
 30298                           tablat	equ	0xFF5
 30299                           prodh	equ	0xFF4
 30300                           prodl	equ	0xFF3
 30301                           intcon	equ	0xFF2
 30302                           intcon2	equ	0xFF1
 30303                           intcon3	equ	0xFF0
 30304                           indf0	equ	0xFEF
 30305                           postinc0	equ	0xFEE
 30306                           fsr0h	equ	0xFEA
 30307                           fsr0l	equ	0xFE9
 30308                           wreg	equ	0xFE8
 30309                           indf1	equ	0xFE7
 30310                           postdec1	equ	0xFE5
 30311                           plusw1	equ	0xFE3
 30312                           fsr1h	equ	0xFE2
 30313                           fsr1l	equ	0xFE1
 30314                           indf2	equ	0xFDF
 30315                           postinc2	equ	0xFDE
 30316                           postdec2	equ	0xFDD
 30317                           plusw2	equ	0xFDB
 30318                           fsr2h	equ	0xFDA
 30319                           fsr2l	equ	0xFD9
 30320                           status	equ	0xFD8
 30321                           
 30322 ;; *************** function _bootloader_get_entries *****************
 30323 ;; Defined at:
 30324 ;;		line 427 in file "bootloader.c"
 30325 ;; Parameters:    Size  Location     Type
 30326 ;;		None
 30327 ;; Auto vars:     Size  Location     Type
 30328 ;;		None
 30329 ;; Return value:  Size  Location     Type
 30330 ;;                  2    0[COMRAM] unsigned int 
 30331 ;; Registers used:
 30332 ;;		None
 30333 ;; Tracked objects:
 30334 ;;		On entry : 0/0
 30335 ;;		On exit  : 0/0
 30336 ;;		Unchanged: 0/0
 30337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30342 ;;Total ram usage:        2 bytes
 30343 ;; Hardware stack levels used:    1
 30344 ;; This function calls:
 30345 ;;		Nothing
 30346 ;; This function is called by:
 30347 ;;		__display_verify
 30348 ;;		__display_failed
 30349 ;;		__display_programming
 30350 ;;		__fill_buffer_get_bootloader_details
 30351 ;; This function uses a non-reentrant model
 30352 ;;
 30353                           
 30354                           	psect	text146
 30355  007B14                     __ptext146:
 30356                           	opt stack 0
 30357  007B14                     _bootloader_get_entries:
 30358                           	opt stack 28
 30359                           
 30360                           ;bootloader.c: 429: return hex_file_entries;
 30361                           
 30362                           ; BSR set to: 0
 30363                           ;incstack = 0
 30364  007B14  C084  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 30365  007B18  C085  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 30366  007B1C  0012               	return		;funcret
 30367  007B1E                     __end_of_bootloader_get_entries:
 30368                           	opt stack 0
 30369                           tosu	equ	0xFFF
 30370                           tosh	equ	0xFFE
 30371                           tosl	equ	0xFFD
 30372                           pclath	equ	0xFFA
 30373                           tblptru	equ	0xFF8
 30374                           tblptrh	equ	0xFF7
 30375                           tblptrl	equ	0xFF6
 30376                           tablat	equ	0xFF5
 30377                           prodh	equ	0xFF4
 30378                           prodl	equ	0xFF3
 30379                           intcon	equ	0xFF2
 30380                           intcon2	equ	0xFF1
 30381                           intcon3	equ	0xFF0
 30382                           indf0	equ	0xFEF
 30383                           postinc0	equ	0xFEE
 30384                           fsr0h	equ	0xFEA
 30385                           fsr0l	equ	0xFE9
 30386                           wreg	equ	0xFE8
 30387                           indf1	equ	0xFE7
 30388                           postdec1	equ	0xFE5
 30389                           plusw1	equ	0xFE3
 30390                           fsr1h	equ	0xFE2
 30391                           fsr1l	equ	0xFE1
 30392                           indf2	equ	0xFDF
 30393                           postinc2	equ	0xFDE
 30394                           postdec2	equ	0xFDD
 30395                           plusw2	equ	0xFDB
 30396                           fsr2h	equ	0xFDA
 30397                           fsr2l	equ	0xFD9
 30398                           status	equ	0xFD8
 30399                           
 30400 ;; *************** function __fill_buffer_find_file *****************
 30401 ;; Defined at:
 30402 ;;		line 346 in file "api.c"
 30403 ;; Parameters:    Size  Location     Type
 30404 ;;  inBuffer        2   68[COMRAM] PTR unsigned char 
 30405 ;;		 -> RAM(3759), 
 30406 ;;  outBuffer       2   70[COMRAM] PTR unsigned char 
 30407 ;;		 -> RAM(3759), 
 30408 ;; Auto vars:     Size  Location     Type
 30409 ;;  cntr            1   76[COMRAM] unsigned char 
 30410 ;; Return value:  Size  Location     Type
 30411 ;;                  1    wreg      void 
 30412 ;; Registers used:
 30413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30414 ;; Tracked objects:
 30415 ;;		On entry : 0/0
 30416 ;;		On exit  : 0/0
 30417 ;;		Unchanged: 0/0
 30418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30421 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30422 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30423 ;;Total ram usage:        9 bytes
 30424 ;; Hardware stack levels used:    1
 30425 ;; Hardware stack levels required when called:    8
 30426 ;; This function calls:
 30427 ;;		_fat_find_file
 30428 ;; This function is called by:
 30429 ;;		_api_prepare
 30430 ;; This function uses a non-reentrant model
 30431 ;;
 30432                           
 30433                           	psect	text147
 30434  005658                     __ptext147:
 30435                           	opt stack 0
 30436  005658                     __fill_buffer_find_file:
 30437                           	opt stack 20
 30438                           
 30439                           ;api.c: 348: uint8_t cntr;;api.c: 351: outBuffer[0] = DATAREQUEST_FIND_FILE;
 30440                           
 30441                           ;incstack = 0
 30442  005658  C047  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 30443  00565C  C048  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 30444  005660  0E81               	movlw	129
 30445  005662  6EDF               	movwf	indf2,c
 30446                           
 30447                           ;api.c: 354: outBuffer[1] = (uint8_t) 0xC125;
 30448  005664  EE20 F001          	lfsr	2,1
 30449  005668  5047               	movf	__fill_buffer_find_file@outBuffer,w,c
 30450  00566A  26D9               	addwf	fsr2l,f,c
 30451  00566C  5048               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30452  00566E  22DA               	addwfc	fsr2h,f,c
 30453  005670  0E25               	movlw	37
 30454  005672  6EDF               	movwf	indf2,c
 30455                           
 30456                           ;api.c: 355: outBuffer[2] = 0xC125 >> 8;
 30457  005674  EE20 F002          	lfsr	2,2
 30458  005678  5047               	movf	__fill_buffer_find_file@outBuffer,w,c
 30459  00567A  26D9               	addwf	fsr2l,f,c
 30460  00567C  5048               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30461  00567E  22DA               	addwfc	fsr2h,f,c
 30462  005680  0EC1               	movlw	193
 30463  005682  6EDF               	movwf	indf2,c
 30464                           
 30465                           ;api.c: 358: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 30466  005684  0E01               	movlw	1
 30467  005686  2445               	addwf	__fill_buffer_find_file@inBuffer,w,c
 30468  005688  6E31               	movwf	fat_find_file@name,c
 30469  00568A  0E00               	movlw	0
 30470  00568C  2046               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 30471  00568E  6E32               	movwf	fat_find_file@name+1,c
 30472  005690  0E09               	movlw	9
 30473  005692  2445               	addwf	__fill_buffer_find_file@inBuffer,w,c
 30474  005694  6E33               	movwf	fat_find_file@extension,c
 30475  005696  0E00               	movlw	0
 30476  005698  2046               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 30477  00569A  6E34               	movwf	fat_find_file@extension+1,c
 30478  00569C  ECD0  F028         	call	_fat_find_file	;wreg free
 30479  0056A0  6E49               	movwf	??__fill_buffer_find_file& (0+255),c
 30480  0056A2  EE20 F003          	lfsr	2,3
 30481  0056A6  5047               	movf	__fill_buffer_find_file@outBuffer,w,c
 30482  0056A8  26D9               	addwf	fsr2l,f,c
 30483  0056AA  5048               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30484  0056AC  22DA               	addwfc	fsr2h,f,c
 30485  0056AE  C049  FFDF         	movff	??__fill_buffer_find_file,indf2
 30486                           
 30487                           ;api.c: 361: for(cntr=0; cntr<11; ++cntr)
 30488  0056B2  0E00               	movlw	0
 30489  0056B4  6E4D               	movwf	__fill_buffer_find_file@cntr,c
 30490  0056B6                     l12561:
 30491  0056B6  0E0A               	movlw	10
 30492  0056B8  644D               	cpfsgt	__fill_buffer_find_file@cntr,c
 30493  0056BA  D001               	goto	l2476
 30494  0056BC  0012               	return	
 30495  0056BE                     l2476:
 30496                           
 30497                           ;api.c: 362: {;api.c: 363: outBuffer[cntr+12] = inBuffer[cntr+1];
 30498  0056BE  504D               	movf	__fill_buffer_find_file@cntr,w,c
 30499  0056C0  6E49               	movwf	??__fill_buffer_find_file& (0+255),c
 30500  0056C2  6A4A               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 30501  0056C4  0E01               	movlw	1
 30502  0056C6  2649               	addwf	??__fill_buffer_find_file,f,c
 30503  0056C8  0E00               	movlw	0
 30504  0056CA  224A               	addwfc	??__fill_buffer_find_file+1,f,c
 30505  0056CC  5049               	movf	??__fill_buffer_find_file,w,c
 30506  0056CE  2445               	addwf	__fill_buffer_find_file@inBuffer,w,c
 30507  0056D0  6ED9               	movwf	fsr2l,c
 30508  0056D2  504A               	movf	??__fill_buffer_find_file+1,w,c
 30509  0056D4  2046               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 30510  0056D6  6EDA               	movwf	fsr2h,c
 30511  0056D8  504D               	movf	__fill_buffer_find_file@cntr,w,c
 30512  0056DA  6E4B               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 30513  0056DC  6A4C               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 30514  0056DE  0E0C               	movlw	12
 30515  0056E0  264B               	addwf	??__fill_buffer_find_file+2,f,c
 30516  0056E2  0E00               	movlw	0
 30517  0056E4  224C               	addwfc	??__fill_buffer_find_file+3,f,c
 30518  0056E6  504B               	movf	??__fill_buffer_find_file+2,w,c
 30519  0056E8  2447               	addwf	__fill_buffer_find_file@outBuffer,w,c
 30520  0056EA  6EE1               	movwf	fsr1l,c
 30521  0056EC  504C               	movf	??__fill_buffer_find_file+3,w,c
 30522  0056EE  2048               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 30523  0056F0  6EE2               	movwf	fsr1h,c
 30524  0056F2  CFDF FFE7          	movff	indf2,indf1
 30525  0056F6  2A4D               	incf	__fill_buffer_find_file@cntr,f,c
 30526  0056F8  D7DE               	goto	l12561
 30527  0056FA                     __end_of__fill_buffer_find_file:
 30528                           	opt stack 0
 30529                           tosu	equ	0xFFF
 30530                           tosh	equ	0xFFE
 30531                           tosl	equ	0xFFD
 30532                           pclath	equ	0xFFA
 30533                           tblptru	equ	0xFF8
 30534                           tblptrh	equ	0xFF7
 30535                           tblptrl	equ	0xFF6
 30536                           tablat	equ	0xFF5
 30537                           prodh	equ	0xFF4
 30538                           prodl	equ	0xFF3
 30539                           intcon	equ	0xFF2
 30540                           intcon2	equ	0xFF1
 30541                           intcon3	equ	0xFF0
 30542                           indf0	equ	0xFEF
 30543                           postinc0	equ	0xFEE
 30544                           fsr0h	equ	0xFEA
 30545                           fsr0l	equ	0xFE9
 30546                           wreg	equ	0xFE8
 30547                           indf1	equ	0xFE7
 30548                           postdec1	equ	0xFE5
 30549                           plusw1	equ	0xFE3
 30550                           fsr1h	equ	0xFE2
 30551                           fsr1l	equ	0xFE1
 30552                           indf2	equ	0xFDF
 30553                           postinc2	equ	0xFDE
 30554                           postdec2	equ	0xFDD
 30555                           plusw2	equ	0xFDB
 30556                           fsr2h	equ	0xFDA
 30557                           fsr2l	equ	0xFD9
 30558                           status	equ	0xFD8
 30559                           
 30560 ;; *************** function _api_parse *****************
 30561 ;; Defined at:
 30562 ;;		line 119 in file "api.c"
 30563 ;; Parameters:    Size  Location     Type
 30564 ;;  inBuffer        2   51[BANK0 ] PTR unsigned char 
 30565 ;;		 -> ReceivedDataBuffer(64), 
 30566 ;;  receivedData    1   53[BANK0 ] unsigned char 
 30567 ;; Auto vars:     Size  Location     Type
 30568 ;;  idx             1   88[COMRAM] unsigned char 
 30569 ;; Return value:  Size  Location     Type
 30570 ;;                  1    wreg      void 
 30571 ;; Registers used:
 30572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30573 ;; Tracked objects:
 30574 ;;		On entry : 0/0
 30575 ;;		On exit  : 0/0
 30576 ;;		Unchanged: 0/0
 30577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30578 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30579 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30581 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30582 ;;Total ram usage:        6 bytes
 30583 ;; Hardware stack levels used:    1
 30584 ;; Hardware stack levels required when called:   12
 30585 ;; This function calls:
 30586 ;;		__parse_command_long
 30587 ;;		__parse_command_short
 30588 ;; This function is called by:
 30589 ;;		_APP_DeviceCustomHIDTasks
 30590 ;; This function uses a non-reentrant model
 30591 ;;
 30592                           
 30593                           	psect	text148
 30594  0048FC                     __ptext148:
 30595                           	opt stack 0
 30596  0048FC                     _api_parse:
 30597                           	opt stack 17
 30598                           
 30599                           ;api.c: 123: uint8_t idx;;api.c: 125: if(inBuffer[0]>0x7F)
 30600                           
 30601                           ;incstack = 0
 30602  0048FC  C0F1  FFD9         	movff	api_parse@inBuffer,fsr2l
 30603  004900  C0F2  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 30604  004904  0E7F               	movlw	127
 30605  004906  64DF               	cpfsgt	indf2,c
 30606  004908  D001               	goto	l2434
 30607  00490A  0012               	return	
 30608  00490C                     l2434:
 30609                           
 30610                           ;api.c: 130: };api.c: 132: idx = 1;
 30611  00490C  0E01               	movlw	1
 30612  00490E  6E59               	movwf	api_parse@idx,c
 30613                           
 30614                           ;api.c: 133: while(idx<receivedDataLength)
 30615  004910  D058               	goto	l2441
 30616  004912                     
 30617                           ;api.c: 134: {;api.c: 136: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 30618  004912  5059               	movf	api_parse@idx,w,c
 30619  004914  0D01               	mullw	1
 30620  004916  50F3               	movf	prodl,w,c
 30621  004918  0100               	movlb	0	; () banked
 30622  00491A  25F1               	addwf	api_parse@inBuffer& (0+255),w,b
 30623  00491C  6ED9               	movwf	fsr2l,c
 30624  00491E  50F4               	movf	prodh,w,c
 30625  004920  21F2               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30626  004922  6EDA               	movwf	fsr2h,c
 30627  004924  0E99               	movlw	153
 30628  004926  18DE               	xorwf	postinc2,w,c
 30629  004928  B4D8               	btfsc	status,2,c
 30630  00492A  0012               	return	
 30631  00492C  D02E               	goto	l2439
 30632  00492E                     
 30633                           ; BSR set to: 0
 30634                           ;api.c: 144: _parse_command_short(inBuffer[idx]);
 30635                           
 30636                           ; BSR set to: 0
 30637  00492E  5059               	movf	api_parse@idx,w,c
 30638  004930  0D01               	mullw	1
 30639  004932  50F3               	movf	prodl,w,c
 30640  004934  25F1               	addwf	api_parse@inBuffer& (0+255),w,b
 30641  004936  6ED9               	movwf	fsr2l,c
 30642  004938  50F4               	movf	prodh,w,c
 30643  00493A  21F2               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30644  00493C  6EDA               	movwf	fsr2h,c
 30645  00493E  50DF               	movf	indf2,w,c
 30646  004940  EC45  F030         	call	__parse_command_short
 30647  004944  D00C               	goto	l13089
 30648  004946                     
 30649                           ;api.c: 149: _parse_command_short(inBuffer[idx]);
 30650  004946  5059               	movf	api_parse@idx,w,c
 30651  004948  0D01               	mullw	1
 30652  00494A  50F3               	movf	prodl,w,c
 30653  00494C  0100               	movlb	0	; () banked
 30654  00494E  25F1               	addwf	api_parse@inBuffer& (0+255),w,b
 30655  004950  6ED9               	movwf	fsr2l,c
 30656  004952  50F4               	movf	prodh,w,c
 30657  004954  21F2               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30658  004956  6EDA               	movwf	fsr2h,c
 30659  004958  50DF               	movf	indf2,w,c
 30660  00495A  EC45  F030         	call	__parse_command_short
 30661  00495E                     l13089:
 30662                           
 30663                           ;api.c: 150: ++idx;
 30664  00495E  2A59               	incf	api_parse@idx,f,c
 30665                           
 30666                           ;api.c: 151: break;
 30667  004960  D030               	goto	l2441
 30668  004962                     
 30669                           ;api.c: 154: idx += _parse_command_long(inBuffer[idx]);
 30670  004962  5059               	movf	api_parse@idx,w,c
 30671  004964  0D01               	mullw	1
 30672  004966  50F3               	movf	prodl,w,c
 30673  004968  0100               	movlb	0	; () banked
 30674  00496A  25F1               	addwf	api_parse@inBuffer& (0+255),w,b
 30675  00496C  6ED9               	movwf	fsr2l,c
 30676  00496E  50F4               	movf	prodh,w,c
 30677  004970  21F2               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30678  004972  6EDA               	movwf	fsr2h,c
 30679  004974  50DF               	movf	indf2,w,c
 30680  004976  6E57               	movwf	??_api_parse& (0+255),c
 30681  004978  6A58               	clrf	(??_api_parse+1)& (0+255),c
 30682  00497A  C057  F054         	movff	??_api_parse,__parse_command_long@data
 30683  00497E  C058  F055         	movff	??_api_parse+1,__parse_command_long@data+1
 30684  004982  EC2A  F02E         	call	__parse_command_long	;wreg free
 30685  004986  2659               	addwf	api_parse@idx,f,c
 30686                           
 30687                           ;api.c: 155: break;
 30688  004988  D01C               	goto	l2441
 30689  00498A                     l2439:
 30690  00498A  5059               	movf	api_parse@idx,w,c
 30691  00498C  0D01               	mullw	1
 30692  00498E  50F3               	movf	prodl,w,c
 30693  004990  0100               	movlb	0	; () banked
 30694  004992  25F1               	addwf	api_parse@inBuffer& (0+255),w,b
 30695  004994  6ED9               	movwf	fsr2l,c
 30696  004996  50F4               	movf	prodh,w,c
 30697  004998  21F2               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 30698  00499A  6EDA               	movwf	fsr2h,c
 30699  00499C  50DF               	movf	indf2,w,c
 30700  00499E  0BF0               	andlw	240
 30701  0049A0  6E57               	movwf	??_api_parse& (0+255),c
 30702  0049A2  6A58               	clrf	(??_api_parse+1)& (0+255),c
 30703                           
 30704                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30705                           ; Switch size 1, requested type "space"
 30706                           ; Number of cases is 1, Range of values is 0 to 0
 30707                           ; switch strategies available:
 30708                           ; Name         Instructions Cycles
 30709                           ; simple_byte            4     3 (average)
 30710                           ;	Chosen strategy is simple_byte
 30711  0049A4  5058               	movf	??_api_parse+1,w,c
 30712  0049A6  0A00               	xorlw	0	; case 0
 30713  0049A8  A4D8               	btfss	status,2,c
 30714  0049AA  0012               	return	
 30715                           
 30716                           ; BSR set to: 0
 30717                           ; Switch size 1, requested type "space"
 30718                           ; Number of cases is 3, Range of values is 32 to 80
 30719                           ; switch strategies available:
 30720                           ; Name         Instructions Cycles
 30721                           ; simple_byte           10     6 (average)
 30722                           ;	Chosen strategy is simple_byte
 30723  0049AC  5057               	movf	??_api_parse,w,c
 30724  0049AE  0A20               	xorlw	32	; case 32
 30725  0049B0  B4D8               	btfsc	status,2,c
 30726  0049B2  D7BD               	goto	l2440
 30727  0049B4  0A10               	xorlw	16	; case 48
 30728  0049B6  B4D8               	btfsc	status,2,c
 30729  0049B8  D7C6               	goto	l2442
 30730  0049BA  0A60               	xorlw	96	; case 80
 30731  0049BC  A4D8               	btfss	status,2,c
 30732  0049BE  0012               	return	
 30733  0049C0  D7D0               	goto	l2443
 30734  0049C2                     l2441:
 30735                           
 30736                           ; BSR set to: 0
 30737                           
 30738                           ; BSR set to: 0
 30739  0049C2  0100               	movlb	0	; () banked
 30740  0049C4  51F3               	movf	api_parse@receivedDataLength& (0+255),w,b
 30741  0049C6  5C59               	subwf	api_parse@idx,w,c
 30742  0049C8  B0D8               	btfsc	status,0,c
 30743  0049CA  0012               	return	
 30744  0049CC  D7A2               	goto	l2437
 30745  0049CE                     __end_of_api_parse:
 30746                           	opt stack 0
 30747                           tosu	equ	0xFFF
 30748                           tosh	equ	0xFFE
 30749                           tosl	equ	0xFFD
 30750                           pclath	equ	0xFFA
 30751                           tblptru	equ	0xFF8
 30752                           tblptrh	equ	0xFF7
 30753                           tblptrl	equ	0xFF6
 30754                           tablat	equ	0xFF5
 30755                           prodh	equ	0xFF4
 30756                           prodl	equ	0xFF3
 30757                           intcon	equ	0xFF2
 30758                           intcon2	equ	0xFF1
 30759                           intcon3	equ	0xFF0
 30760                           indf0	equ	0xFEF
 30761                           postinc0	equ	0xFEE
 30762                           fsr0h	equ	0xFEA
 30763                           fsr0l	equ	0xFE9
 30764                           wreg	equ	0xFE8
 30765                           indf1	equ	0xFE7
 30766                           postdec1	equ	0xFE5
 30767                           plusw1	equ	0xFE3
 30768                           fsr1h	equ	0xFE2
 30769                           fsr1l	equ	0xFE1
 30770                           indf2	equ	0xFDF
 30771                           postinc2	equ	0xFDE
 30772                           postdec2	equ	0xFDD
 30773                           plusw2	equ	0xFDB
 30774                           fsr2h	equ	0xFDA
 30775                           fsr2l	equ	0xFD9
 30776                           status	equ	0xFD8
 30777                           
 30778 ;; *************** function __parse_command_short *****************
 30779 ;; Defined at:
 30780 ;;		line 415 in file "api.c"
 30781 ;; Parameters:    Size  Location     Type
 30782 ;;  cmd             1    wreg     unsigned char 
 30783 ;; Auto vars:     Size  Location     Type
 30784 ;;  cmd             1   19[COMRAM] unsigned char 
 30785 ;; Return value:  Size  Location     Type
 30786 ;;                  1    wreg      void 
 30787 ;; Registers used:
 30788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30789 ;; Tracked objects:
 30790 ;;		On entry : 0/0
 30791 ;;		On exit  : 0/0
 30792 ;;		Unchanged: 0/0
 30793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30797 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30798 ;;Total ram usage:        1 bytes
 30799 ;; Hardware stack levels used:    1
 30800 ;; Hardware stack levels required when called:    3
 30801 ;; This function calls:
 30802 ;;		_i2c_eeprom_writeByte
 30803 ;;		_system_delay_ms
 30804 ;; This function is called by:
 30805 ;;		_api_parse
 30806 ;; This function uses a non-reentrant model
 30807 ;;
 30808                           
 30809                           	psect	text149
 30810  00608A                     __ptext149:
 30811                           	opt stack 0
 30812  00608A                     __parse_command_short:
 30813                           	opt stack 25
 30814                           
 30815                           ;incstack = 0
 30816                           ;__parse_command_short@cmd stored from wreg
 30817  00608A  6E14               	movwf	__parse_command_short@cmd,c
 30818                           
 30819                           ;api.c: 417: switch(cmd)
 30820  00608C  D028               	goto	l2485
 30821  00608E                     l2486:
 30822  00608E  EF00 F000          	goto	0	; ;# 
 30823                           
 30824                           ;api.c: 423: break;
 30825  006092  0012               	return	
 30826  006094                     
 30827                           ;api.c: 426: i2c_eeprom_writeByte(0x100, 0x94);
 30828  006094  0E01               	movlw	1
 30829  006096  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 30830  006098  0E00               	movlw	0
 30831  00609A  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 30832  00609C  0E94               	movlw	148
 30833  00609E  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 30834  0060A0  EC5A  F039         	call	_i2c_eeprom_writeByte	;wreg free
 30835                           
 30836                           ;api.c: 427: system_delay_ms(10);
 30837  0060A4  0E0A               	movlw	10
 30838  0060A6  EC2C  F03C         	call	_system_delay_ms
 30839  0060AA  EF00 F000          	goto	0	; ;# 
 30840                           
 30841                           ;api.c: 431: break;
 30842  0060AE  0012               	return	
 30843  0060B0                     
 30844                           ;api.c: 434: i2c_eeprom_writeByte(0x100, 0x78);
 30845  0060B0  0E01               	movlw	1
 30846  0060B2  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 30847  0060B4  0E00               	movlw	0
 30848  0060B6  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 30849  0060B8  0E78               	movlw	120
 30850  0060BA  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 30851  0060BC  EC5A  F039         	call	_i2c_eeprom_writeByte	;wreg free
 30852                           
 30853                           ;api.c: 435: system_delay_ms(10);
 30854  0060C0  0E0A               	movlw	10
 30855  0060C2  EC2C  F03C         	call	_system_delay_ms
 30856  0060C6  EF00 F000          	goto	0	; ;# 
 30857                           
 30858                           ;api.c: 439: break;
 30859  0060CA  0012               	return	
 30860  0060CC                     
 30861                           ;api.c: 442: --os.encoderCount;
 30862  0060CC  0100               	movlb	0	; () banked
 30863  0060CE  0760               	decf	_os& (0+255),f,b	;volatile
 30864                           
 30865                           ;api.c: 443: break;
 30866  0060D0  0012               	return	
 30867  0060D2                     
 30868                           ;api.c: 446: ++os.encoderCount;
 30869                           
 30870                           ; BSR set to: 0
 30871  0060D2  0100               	movlb	0	; () banked
 30872  0060D4  2B60               	incf	_os& (0+255),f,b	;volatile
 30873                           
 30874                           ;api.c: 447: break;
 30875  0060D6  0012               	return	
 30876  0060D8                     
 30877                           ;api.c: 450: ++os.buttonCount;
 30878                           
 30879                           ; BSR set to: 0
 30880  0060D8  0100               	movlb	0	; () banked
 30881  0060DA  2B61               	incf	(_os+1)& (0+255),f,b	;volatile
 30882                           
 30883                           ; BSR set to: 0
 30884                           ;api.c: 452: }
 30885                           
 30886                           ;api.c: 451: break;
 30887  0060DC  0012               	return	
 30888  0060DE                     l2485:
 30889                           
 30890                           ; BSR set to: 0
 30891  0060DE  5014               	movf	__parse_command_short@cmd,w,c
 30892                           
 30893                           ; Switch size 1, requested type "space"
 30894                           ; Number of cases is 6, Range of values is 32 to 62
 30895                           ; switch strategies available:
 30896                           ; Name         Instructions Cycles
 30897                           ; simple_byte           19    10 (average)
 30898                           ;	Chosen strategy is simple_byte
 30899  0060E0  0A20               	xorlw	32	; case 32
 30900  0060E2  B4D8               	btfsc	status,2,c
 30901  0060E4  D7D4               	goto	l2486
 30902  0060E6  0A01               	xorlw	1	; case 33
 30903  0060E8  B4D8               	btfsc	status,2,c
 30904  0060EA  D7D4               	goto	l2488
 30905  0060EC  0A03               	xorlw	3	; case 34
 30906  0060EE  B4D8               	btfsc	status,2,c
 30907  0060F0  D7DF               	goto	l2489
 30908  0060F2  0A1E               	xorlw	30	; case 60
 30909  0060F4  B4D8               	btfsc	status,2,c
 30910  0060F6  D7EA               	goto	l2490
 30911  0060F8  0A01               	xorlw	1	; case 61
 30912  0060FA  B4D8               	btfsc	status,2,c
 30913  0060FC  D7EA               	goto	l2491
 30914  0060FE  0A03               	xorlw	3	; case 62
 30915  006100  A4D8               	btfss	status,2,c
 30916  006102  0012               	return	
 30917  006104  D7E9               	goto	l2492
 30918  006106                     __end_of__parse_command_short:
 30919                           	opt stack 0
 30920                           tosu	equ	0xFFF
 30921                           tosh	equ	0xFFE
 30922                           tosl	equ	0xFFD
 30923                           pclath	equ	0xFFA
 30924                           tblptru	equ	0xFF8
 30925                           tblptrh	equ	0xFF7
 30926                           tblptrl	equ	0xFF6
 30927                           tablat	equ	0xFF5
 30928                           prodh	equ	0xFF4
 30929                           prodl	equ	0xFF3
 30930                           intcon	equ	0xFF2
 30931                           intcon2	equ	0xFF1
 30932                           intcon3	equ	0xFF0
 30933                           indf0	equ	0xFEF
 30934                           postinc0	equ	0xFEE
 30935                           fsr0h	equ	0xFEA
 30936                           fsr0l	equ	0xFE9
 30937                           wreg	equ	0xFE8
 30938                           indf1	equ	0xFE7
 30939                           postdec1	equ	0xFE5
 30940                           plusw1	equ	0xFE3
 30941                           fsr1h	equ	0xFE2
 30942                           fsr1l	equ	0xFE1
 30943                           indf2	equ	0xFDF
 30944                           postinc2	equ	0xFDE
 30945                           postdec2	equ	0xFDD
 30946                           plusw2	equ	0xFDB
 30947                           fsr2h	equ	0xFDA
 30948                           fsr2l	equ	0xFD9
 30949                           status	equ	0xFD8
 30950                           
 30951 ;; *************** function _system_delay_ms *****************
 30952 ;; Defined at:
 30953 ;;		line 61 in file "os.c"
 30954 ;; Parameters:    Size  Location     Type
 30955 ;;  ms              1    wreg     unsigned char 
 30956 ;; Auto vars:     Size  Location     Type
 30957 ;;  ms              1    1[COMRAM] unsigned char 
 30958 ;;  cntr            1    2[COMRAM] unsigned char 
 30959 ;; Return value:  Size  Location     Type
 30960 ;;                  1    wreg      void 
 30961 ;; Registers used:
 30962 ;;		wreg, status,2, status,0, cstack
 30963 ;; Tracked objects:
 30964 ;;		On entry : 0/0
 30965 ;;		On exit  : 0/0
 30966 ;;		Unchanged: 0/0
 30967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30969 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30970 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30971 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30972 ;;Total ram usage:        3 bytes
 30973 ;; Hardware stack levels used:    1
 30974 ;; This function calls:
 30975 ;;		Nothing
 30976 ;; This function is called by:
 30977 ;;		__parse_command_short
 30978 ;; This function uses a non-reentrant model
 30979 ;;
 30980                           
 30981                           	psect	text150
 30982  007858                     __ptext150:
 30983                           	opt stack 0
 30984  007858                     _system_delay_ms:
 30985                           	opt stack 27
 30986                           
 30987                           ;incstack = 0
 30988                           ;system_delay_ms@ms stored from wreg
 30989  007858  6E02               	movwf	system_delay_ms@ms,c
 30990                           
 30991                           ;os.c: 63: uint8_t cntr;;os.c: 64: for(cntr=0; cntr<ms; ++cntr)
 30992  00785A  0E00               	movlw	0
 30993  00785C  6E03               	movwf	system_delay_ms@cntr,c
 30994  00785E  D009               	goto	l1046
 30995  007860                     
 30996                           ;os.c: 65: {;os.c: 66: _delay((unsigned long)((6)*(8000000/4000.0)));
 30997  007860  0E10               	movlw	16
 30998  007862  6E01               	movwf	??_system_delay_ms& (0+255),c
 30999  007864  0E94               	movlw	148
 31000  007866                     u11767:
 31001  007866  2EE8               	decfsz	wreg,f,c
 31002  007868  D7FE               	bra	u11767
 31003  00786A  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 31004  00786C  D7FC               	bra	u11767
 31005  00786E  D000               	nop2	
 31006  007870  2A03               	incf	system_delay_ms@cntr,f,c
 31007  007872                     l1046:
 31008  007872  5002               	movf	system_delay_ms@ms,w,c
 31009  007874  5C03               	subwf	system_delay_ms@cntr,w,c
 31010  007876  B0D8               	btfsc	status,0,c
 31011  007878  0012               	return	
 31012  00787A  D7F2               	goto	l1047
 31013  00787C                     __end_of_system_delay_ms:
 31014                           	opt stack 0
 31015                           tosu	equ	0xFFF
 31016                           tosh	equ	0xFFE
 31017                           tosl	equ	0xFFD
 31018                           pclath	equ	0xFFA
 31019                           tblptru	equ	0xFF8
 31020                           tblptrh	equ	0xFF7
 31021                           tblptrl	equ	0xFF6
 31022                           tablat	equ	0xFF5
 31023                           prodh	equ	0xFF4
 31024                           prodl	equ	0xFF3
 31025                           intcon	equ	0xFF2
 31026                           intcon2	equ	0xFF1
 31027                           intcon3	equ	0xFF0
 31028                           indf0	equ	0xFEF
 31029                           postinc0	equ	0xFEE
 31030                           fsr0h	equ	0xFEA
 31031                           fsr0l	equ	0xFE9
 31032                           wreg	equ	0xFE8
 31033                           indf1	equ	0xFE7
 31034                           postdec1	equ	0xFE5
 31035                           plusw1	equ	0xFE3
 31036                           fsr1h	equ	0xFE2
 31037                           fsr1l	equ	0xFE1
 31038                           indf2	equ	0xFDF
 31039                           postinc2	equ	0xFDE
 31040                           postdec2	equ	0xFDD
 31041                           plusw2	equ	0xFDB
 31042                           fsr2h	equ	0xFDA
 31043                           fsr2l	equ	0xFD9
 31044                           status	equ	0xFD8
 31045                           
 31046 ;; *************** function _i2c_eeprom_writeByte *****************
 31047 ;; Defined at:
 31048 ;;		line 344 in file "i2c.c"
 31049 ;; Parameters:    Size  Location     Type
 31050 ;;  address         2   10[COMRAM] unsigned int 
 31051 ;;  data            1   12[COMRAM] unsigned char 
 31052 ;; Auto vars:     Size  Location     Type
 31053 ;;  dat             2   16[COMRAM] unsigned char [2]
 31054 ;;  slave_addres    1   18[COMRAM] unsigned char 
 31055 ;; Return value:  Size  Location     Type
 31056 ;;                  1    wreg      void 
 31057 ;; Registers used:
 31058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31059 ;; Tracked objects:
 31060 ;;		On entry : 0/0
 31061 ;;		On exit  : 0/0
 31062 ;;		Unchanged: 0/0
 31063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31064 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31065 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31066 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31067 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31068 ;;Total ram usage:        9 bytes
 31069 ;; Hardware stack levels used:    1
 31070 ;; Hardware stack levels required when called:    2
 31071 ;; This function calls:
 31072 ;;		__i2c_write
 31073 ;;		_i2c_set_frequency
 31074 ;; This function is called by:
 31075 ;;		__normal_mode
 31076 ;;		__parse_command_short
 31077 ;; This function uses a non-reentrant model
 31078 ;;
 31079                           
 31080                           	psect	text151
 31081  0072B4                     __ptext151:
 31082                           	opt stack 0
 31083  0072B4                     _i2c_eeprom_writeByte:
 31084                           	opt stack 27
 31085                           
 31086                           ;i2c.c: 346: uint8_t slave_address;;i2c.c: 347: uint8_t dat[2];;i2c.c: 349: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 31087                           
 31088                           ;incstack = 0
 31089  0072B4  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 31090  0072B8  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 31091  0072BC  0E07               	movlw	7
 31092  0072BE  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 31093  0072C0                     u8645:
 31094  0072C0  90D8               	bcf	status,0,c
 31095  0072C2  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 31096  0072C4  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 31097  0072C6  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 31098  0072C8  D7FB               	goto	u8645
 31099  0072CA  500E               	movf	??_i2c_eeprom_writeByte,w,c
 31100  0072CC  0B0E               	andlw	14
 31101  0072CE  09A0               	iorlw	160
 31102  0072D0  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 31103                           
 31104                           ;i2c.c: 350: dat[0] = address & 0xFF;
 31105  0072D2  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 31106                           
 31107                           ;i2c.c: 351: dat[1] = data;
 31108  0072D6  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 31109                           
 31110                           ;i2c.c: 354: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 31111  0072DA  0E02               	movlw	2
 31112  0072DC  ECA1  F03B         	call	_i2c_set_frequency
 31113                           
 31114                           ;i2c.c: 356: _i2c_write(slave_address, &dat[0], 2);
 31115  0072E0  0E11               	movlw	low i2c_eeprom_writeByte@dat
 31116  0072E2  6E06               	movwf	__i2c_write@data,c
 31117  0072E4  0E00               	movlw	high i2c_eeprom_writeByte@dat
 31118  0072E6  6E07               	movwf	__i2c_write@data+1,c
 31119  0072E8  0E02               	movlw	2
 31120  0072EA  6E08               	movwf	__i2c_write@length,c
 31121  0072EC  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 31122  0072EE  EC8D  F038         	call	__i2c_write
 31123  0072F2  0012               	return		;funcret
 31124  0072F4                     __end_of_i2c_eeprom_writeByte:
 31125                           	opt stack 0
 31126                           tosu	equ	0xFFF
 31127                           tosh	equ	0xFFE
 31128                           tosl	equ	0xFFD
 31129                           pclath	equ	0xFFA
 31130                           tblptru	equ	0xFF8
 31131                           tblptrh	equ	0xFF7
 31132                           tblptrl	equ	0xFF6
 31133                           tablat	equ	0xFF5
 31134                           prodh	equ	0xFF4
 31135                           prodl	equ	0xFF3
 31136                           intcon	equ	0xFF2
 31137                           intcon2	equ	0xFF1
 31138                           intcon3	equ	0xFF0
 31139                           indf0	equ	0xFEF
 31140                           postinc0	equ	0xFEE
 31141                           fsr0h	equ	0xFEA
 31142                           fsr0l	equ	0xFE9
 31143                           wreg	equ	0xFE8
 31144                           indf1	equ	0xFE7
 31145                           postdec1	equ	0xFE5
 31146                           plusw1	equ	0xFE3
 31147                           fsr1h	equ	0xFE2
 31148                           fsr1l	equ	0xFE1
 31149                           indf2	equ	0xFDF
 31150                           postinc2	equ	0xFDE
 31151                           postdec2	equ	0xFDD
 31152                           plusw2	equ	0xFDB
 31153                           fsr2h	equ	0xFDA
 31154                           fsr2l	equ	0xFD9
 31155                           status	equ	0xFD8
 31156                           
 31157 ;; *************** function _i2c_set_frequency *****************
 31158 ;; Defined at:
 31159 ;;		line 115 in file "i2c.c"
 31160 ;; Parameters:    Size  Location     Type
 31161 ;;  frequency       1    wreg     enum E6622
 31162 ;; Auto vars:     Size  Location     Type
 31163 ;;  frequency       1    0[COMRAM] enum E6622
 31164 ;; Return value:  Size  Location     Type
 31165 ;;                  1    wreg      void 
 31166 ;; Registers used:
 31167 ;;		wreg, status,2, status,0
 31168 ;; Tracked objects:
 31169 ;;		On entry : 0/0
 31170 ;;		On exit  : 0/0
 31171 ;;		Unchanged: 0/0
 31172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31177 ;;Total ram usage:        1 bytes
 31178 ;; Hardware stack levels used:    1
 31179 ;; This function calls:
 31180 ;;		Nothing
 31181 ;; This function is called by:
 31182 ;;		_i2c_init
 31183 ;;		__ic2_display_set_address
 31184 ;;		_i2c_display_send_init_sequence
 31185 ;;		_i2c_display_cursor
 31186 ;;		_i2c_display_write_fixed
 31187 ;;		_i2c_digipot_reset_on
 31188 ;;		_i2c_digipot_reset_off
 31189 ;;		_i2c_digipot_backlight
 31190 ;;		_i2c_eeprom_writeByte
 31191 ;;		_i2c_eeprom_readByte
 31192 ;;		_i2c_display_write
 31193 ;;		_i2c_eeprom_write
 31194 ;;		_i2c_eeprom_read
 31195 ;; This function uses a non-reentrant model
 31196 ;;
 31197                           
 31198                           	psect	text152
 31199  007742                     __ptext152:
 31200                           	opt stack 0
 31201  007742                     _i2c_set_frequency:
 31202                           	opt stack 28
 31203                           
 31204                           ;incstack = 0
 31205                           ;i2c_set_frequency@frequency stored from wreg
 31206  007742  6E01               	movwf	i2c_set_frequency@frequency,c
 31207                           
 31208                           ;i2c.c: 117: switch(frequency)
 31209  007744  D007               	goto	l1130
 31210  007746                     
 31211                           ;i2c.c: 120: SSP1ADD = 119;
 31212  007746  0E77               	movlw	119
 31213  007748  D003               	goto	L35
 31214  00774A                     
 31215                           ;i2c.c: 123: SSP1ADD = 59;
 31216  00774A  0E3B               	movlw	59
 31217  00774C  D001               	goto	L35
 31218  00774E                     
 31219                           ;i2c.c: 126: SSP1ADD = 29;
 31220  00774E  0E1D               	movlw	29
 31221  007750                     L35:
 31222  007750  6EC8               	movwf	4040,c	;volatile
 31223                           
 31224                           ;i2c.c: 128: }
 31225                           
 31226                           ;i2c.c: 127: break;
 31227  007752  D00A               	goto	l1132
 31228  007754                     l1130:
 31229  007754  5001               	movf	i2c_set_frequency@frequency,w,c
 31230                           
 31231                           ; Switch size 1, requested type "space"
 31232                           ; Number of cases is 3, Range of values is 0 to 2
 31233                           ; switch strategies available:
 31234                           ; Name         Instructions Cycles
 31235                           ; simple_byte           10     6 (average)
 31236                           ;	Chosen strategy is simple_byte
 31237  007756  0A00               	xorlw	0	; case 0
 31238  007758  B4D8               	btfsc	status,2,c
 31239  00775A  D7F5               	goto	l1131
 31240  00775C  0A01               	xorlw	1	; case 1
 31241  00775E  B4D8               	btfsc	status,2,c
 31242  007760  D7F4               	goto	l1133
 31243  007762  0A03               	xorlw	3	; case 2
 31244  007764  B4D8               	btfsc	status,2,c
 31245  007766  D7F3               	goto	l1134
 31246  007768                     l1132:
 31247                           
 31248                           ;i2c.c: 130: i2c_frequency = frequency;
 31249  007768  C001  F0A1         	movff	i2c_set_frequency@frequency,_i2c_frequency
 31250  00776C  0012               	return		;funcret
 31251  00776E                     __end_of_i2c_set_frequency:
 31252                           	opt stack 0
 31253                           tosu	equ	0xFFF
 31254                           tosh	equ	0xFFE
 31255                           tosl	equ	0xFFD
 31256                           pclath	equ	0xFFA
 31257                           tblptru	equ	0xFF8
 31258                           tblptrh	equ	0xFF7
 31259                           tblptrl	equ	0xFF6
 31260                           tablat	equ	0xFF5
 31261                           prodh	equ	0xFF4
 31262                           prodl	equ	0xFF3
 31263                           intcon	equ	0xFF2
 31264                           intcon2	equ	0xFF1
 31265                           intcon3	equ	0xFF0
 31266                           indf0	equ	0xFEF
 31267                           postinc0	equ	0xFEE
 31268                           fsr0h	equ	0xFEA
 31269                           fsr0l	equ	0xFE9
 31270                           wreg	equ	0xFE8
 31271                           indf1	equ	0xFE7
 31272                           postdec1	equ	0xFE5
 31273                           plusw1	equ	0xFE3
 31274                           fsr1h	equ	0xFE2
 31275                           fsr1l	equ	0xFE1
 31276                           indf2	equ	0xFDF
 31277                           postinc2	equ	0xFDE
 31278                           postdec2	equ	0xFDD
 31279                           plusw2	equ	0xFDB
 31280                           fsr2h	equ	0xFDA
 31281                           fsr2l	equ	0xFD9
 31282                           status	equ	0xFD8
 31283                           
 31284 ;; *************** function __i2c_write *****************
 31285 ;; Defined at:
 31286 ;;		line 134 in file "i2c.c"
 31287 ;; Parameters:    Size  Location     Type
 31288 ;;  slave_addres    1    wreg     unsigned char 
 31289 ;;  data            2    5[COMRAM] PTR unsigned char 
 31290 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 31291 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 31292 ;;		 -> _ic2_display_set_address@data_array(2), 
 31293 ;;  length          1    7[COMRAM] unsigned char 
 31294 ;; Auto vars:     Size  Location     Type
 31295 ;;  slave_addres    1    8[COMRAM] unsigned char 
 31296 ;;  cntr            1    9[COMRAM] unsigned char 
 31297 ;; Return value:  Size  Location     Type
 31298 ;;                  1    wreg      void 
 31299 ;; Registers used:
 31300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31301 ;; Tracked objects:
 31302 ;;		On entry : 0/0
 31303 ;;		On exit  : 0/0
 31304 ;;		Unchanged: 0/0
 31305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31306 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31309 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31310 ;;Total ram usage:        5 bytes
 31311 ;; Hardware stack levels used:    1
 31312 ;; Hardware stack levels required when called:    1
 31313 ;; This function calls:
 31314 ;;		__i2c_send
 31315 ;;		__i2c_start
 31316 ;;		__i2c_stop
 31317 ;;		__i2c_wait_idle
 31318 ;; This function is called by:
 31319 ;;		__ic2_display_set_address
 31320 ;;		_i2c_display_send_init_sequence
 31321 ;;		_i2c_digipot_reset_on
 31322 ;;		_i2c_digipot_reset_off
 31323 ;;		_i2c_digipot_backlight
 31324 ;;		_i2c_eeprom_writeByte
 31325 ;;		_i2c_eeprom_readByte
 31326 ;;		_i2c_eeprom_write
 31327 ;;		_i2c_eeprom_read
 31328 ;; This function uses a non-reentrant model
 31329 ;;
 31330                           
 31331                           	psect	text153
 31332  00711A                     __ptext153:
 31333                           	opt stack 0
 31334  00711A                     __i2c_write:
 31335                           	opt stack 27
 31336                           
 31337                           ;incstack = 0
 31338                           ;__i2c_write@slave_address stored from wreg
 31339  00711A  6E09               	movwf	__i2c_write@slave_address,c
 31340                           
 31341                           ;i2c.c: 136: uint8_t cntr;;i2c.c: 138: _i2c_wait_idle();
 31342  00711C  ECEF  F035         	call	__i2c_wait_idle	;wreg free
 31343                           
 31344                           ;i2c.c: 139: _i2c_start();
 31345  007120  EC9D  F03D         	call	__i2c_start	;wreg free
 31346                           
 31347                           ;i2c.c: 140: _i2c_wait_idle();
 31348  007124  ECEF  F035         	call	__i2c_wait_idle	;wreg free
 31349                           
 31350                           ;i2c.c: 141: _i2c_send(slave_address);
 31351  007128  5009               	movf	__i2c_write@slave_address,w,c
 31352  00712A  ECA1  F03D         	call	__i2c_send
 31353                           
 31354                           ;i2c.c: 142: _i2c_wait_idle();
 31355  00712E  ECEF  F035         	call	__i2c_wait_idle	;wreg free
 31356                           
 31357                           ;i2c.c: 144: for(cntr=0; cntr<length; ++cntr)
 31358  007132  0E00               	movlw	0
 31359  007134  6E0A               	movwf	__i2c_write@cntr,c
 31360  007136  D00E               	goto	l1138
 31361  007138                     
 31362                           ;i2c.c: 145: {;i2c.c: 146: _i2c_send(data[cntr]);
 31363  007138  500A               	movf	__i2c_write@cntr,w,c
 31364  00713A  0D01               	mullw	1
 31365  00713C  50F3               	movf	prodl,w,c
 31366  00713E  2406               	addwf	__i2c_write@data,w,c
 31367  007140  6ED9               	movwf	fsr2l,c
 31368  007142  50F4               	movf	prodh,w,c
 31369  007144  2007               	addwfc	__i2c_write@data+1,w,c
 31370  007146  6EDA               	movwf	fsr2h,c
 31371  007148  50DF               	movf	indf2,w,c
 31372  00714A  ECA1  F03D         	call	__i2c_send
 31373                           
 31374                           ;i2c.c: 147: _i2c_wait_idle();
 31375  00714E  ECEF  F035         	call	__i2c_wait_idle	;wreg free
 31376  007152  2A0A               	incf	__i2c_write@cntr,f,c
 31377  007154                     l1138:
 31378  007154  5008               	movf	__i2c_write@length,w,c
 31379  007156  5C0A               	subwf	__i2c_write@cntr,w,c
 31380  007158  A0D8               	btfss	status,0,c
 31381  00715A  D7EE               	goto	l1139
 31382                           
 31383                           ;i2c.c: 148: };i2c.c: 150: _i2c_stop();
 31384  00715C  EC99  F03D         	call	__i2c_stop	;wreg free
 31385  007160  0012               	return		;funcret
 31386  007162                     __end_of__i2c_write:
 31387                           	opt stack 0
 31388                           tosu	equ	0xFFF
 31389                           tosh	equ	0xFFE
 31390                           tosl	equ	0xFFD
 31391                           pclath	equ	0xFFA
 31392                           tblptru	equ	0xFF8
 31393                           tblptrh	equ	0xFF7
 31394                           tblptrl	equ	0xFF6
 31395                           tablat	equ	0xFF5
 31396                           prodh	equ	0xFF4
 31397                           prodl	equ	0xFF3
 31398                           intcon	equ	0xFF2
 31399                           intcon2	equ	0xFF1
 31400                           intcon3	equ	0xFF0
 31401                           indf0	equ	0xFEF
 31402                           postinc0	equ	0xFEE
 31403                           fsr0h	equ	0xFEA
 31404                           fsr0l	equ	0xFE9
 31405                           wreg	equ	0xFE8
 31406                           indf1	equ	0xFE7
 31407                           postdec1	equ	0xFE5
 31408                           plusw1	equ	0xFE3
 31409                           fsr1h	equ	0xFE2
 31410                           fsr1l	equ	0xFE1
 31411                           indf2	equ	0xFDF
 31412                           postinc2	equ	0xFDE
 31413                           postdec2	equ	0xFDD
 31414                           plusw2	equ	0xFDB
 31415                           fsr2h	equ	0xFDA
 31416                           fsr2l	equ	0xFD9
 31417                           status	equ	0xFD8
 31418                           
 31419 ;; *************** function __i2c_wait_idle *****************
 31420 ;; Defined at:
 31421 ;;		line 48 in file "i2c.c"
 31422 ;; Parameters:    Size  Location     Type
 31423 ;;		None
 31424 ;; Auto vars:     Size  Location     Type
 31425 ;;		None
 31426 ;; Return value:  Size  Location     Type
 31427 ;;                  1    wreg      void 
 31428 ;; Registers used:
 31429 ;;		wreg, status,2, status,0
 31430 ;; Tracked objects:
 31431 ;;		On entry : 0/0
 31432 ;;		On exit  : 0/0
 31433 ;;		Unchanged: 0/0
 31434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31437 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31438 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31439 ;;Total ram usage:        5 bytes
 31440 ;; Hardware stack levels used:    1
 31441 ;; This function calls:
 31442 ;;		Nothing
 31443 ;; This function is called by:
 31444 ;;		__i2c_write
 31445 ;;		__i2c_read
 31446 ;;		_i2c_display_write_fixed
 31447 ;;		_i2c_display_write
 31448 ;; This function uses a non-reentrant model
 31449 ;;
 31450                           
 31451                           	psect	text154
 31452  006BDE                     __ptext154:
 31453                           	opt stack 0
 31454  006BDE                     __i2c_wait_idle:
 31455                           	opt stack 27
 31456                           
 31457                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 31458                           
 31459                           ;incstack = 0
 31460  006BDE  A4C7               	btfss	4039,2,c	;volatile
 31461  006BE0  D003               	goto	u7320
 31462  006BE2  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31463  006BE4  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 31464  006BE6  D001               	goto	u7328
 31465  006BE8                     u7320:
 31466  006BE8  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31467  006BEA                     u7328:
 31468  006BEA  A0C5               	btfss	4037,0,c	;volatile
 31469  006BEC  D003               	goto	u7330
 31470  006BEE  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31471  006BF0  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 31472  006BF2  D001               	goto	u7338
 31473  006BF4                     u7330:
 31474  006BF4  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31475  006BF6                     u7338:
 31476  006BF6  A2C5               	btfss	4037,1,c	;volatile
 31477  006BF8  D003               	goto	u7340
 31478  006BFA  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31479  006BFC  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 31480  006BFE  D001               	goto	u7348
 31481  006C00                     u7340:
 31482  006C00  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31483  006C02                     u7348:
 31484  006C02  A4C5               	btfss	4037,2,c	;volatile
 31485  006C04  D003               	goto	u7350
 31486  006C06  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31487  006C08  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 31488  006C0A  D001               	goto	u7358
 31489  006C0C                     u7350:
 31490  006C0C  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31491  006C0E                     u7358:
 31492  006C0E  A6C5               	btfss	4037,3,c	;volatile
 31493  006C10  D003               	goto	u7360
 31494  006C12  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31495  006C14  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 31496  006C16  D001               	goto	u7368
 31497  006C18                     u7360:
 31498  006C18  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31499  006C1A                     u7368:
 31500  006C1A  A8C5               	btfss	4037,4,c	;volatile
 31501  006C1C  D002               	goto	u7370
 31502  006C1E  0E01               	movlw	1
 31503  006C20  D001               	goto	u7376
 31504  006C22                     u7370:
 31505  006C22  0E00               	movlw	0
 31506  006C24                     u7376:
 31507  006C24  1005               	iorwf	??__i2c_wait_idle+4,w,c
 31508  006C26  1004               	iorwf	??__i2c_wait_idle+3,w,c
 31509  006C28  1003               	iorwf	??__i2c_wait_idle+2,w,c
 31510  006C2A  1002               	iorwf	??__i2c_wait_idle+1,w,c
 31511  006C2C  1001               	iorwf	??__i2c_wait_idle,w,c
 31512  006C2E  0900               	iorlw	0
 31513  006C30  B4D8               	btfsc	status,2,c
 31514  006C32  0012               	return	
 31515  006C34  D7D4               	goto	__i2c_wait_idle
 31516  006C36                     __end_of__i2c_wait_idle:
 31517                           	opt stack 0
 31518                           tosu	equ	0xFFF
 31519                           tosh	equ	0xFFE
 31520                           tosl	equ	0xFFD
 31521                           pclath	equ	0xFFA
 31522                           tblptru	equ	0xFF8
 31523                           tblptrh	equ	0xFF7
 31524                           tblptrl	equ	0xFF6
 31525                           tablat	equ	0xFF5
 31526                           prodh	equ	0xFF4
 31527                           prodl	equ	0xFF3
 31528                           intcon	equ	0xFF2
 31529                           intcon2	equ	0xFF1
 31530                           intcon3	equ	0xFF0
 31531                           indf0	equ	0xFEF
 31532                           postinc0	equ	0xFEE
 31533                           fsr0h	equ	0xFEA
 31534                           fsr0l	equ	0xFE9
 31535                           wreg	equ	0xFE8
 31536                           indf1	equ	0xFE7
 31537                           postdec1	equ	0xFE5
 31538                           plusw1	equ	0xFE3
 31539                           fsr1h	equ	0xFE2
 31540                           fsr1l	equ	0xFE1
 31541                           indf2	equ	0xFDF
 31542                           postinc2	equ	0xFDE
 31543                           postdec2	equ	0xFDD
 31544                           plusw2	equ	0xFDB
 31545                           fsr2h	equ	0xFDA
 31546                           fsr2l	equ	0xFD9
 31547                           status	equ	0xFD8
 31548                           
 31549 ;; *************** function __i2c_stop *****************
 31550 ;; Defined at:
 31551 ;;		line 75 in file "i2c.c"
 31552 ;; Parameters:    Size  Location     Type
 31553 ;;		None
 31554 ;; Auto vars:     Size  Location     Type
 31555 ;;		None
 31556 ;; Return value:  Size  Location     Type
 31557 ;;                  1    wreg      void 
 31558 ;; Registers used:
 31559 ;;		None
 31560 ;; Tracked objects:
 31561 ;;		On entry : 0/0
 31562 ;;		On exit  : 0/0
 31563 ;;		Unchanged: 0/0
 31564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31569 ;;Total ram usage:        0 bytes
 31570 ;; Hardware stack levels used:    1
 31571 ;; This function calls:
 31572 ;;		Nothing
 31573 ;; This function is called by:
 31574 ;;		__i2c_write
 31575 ;;		__i2c_read
 31576 ;;		_i2c_display_write_fixed
 31577 ;;		_i2c_display_write
 31578 ;; This function uses a non-reentrant model
 31579 ;;
 31580                           
 31581                           	psect	text155
 31582  007B32                     __ptext155:
 31583                           	opt stack 0
 31584  007B32                     __i2c_stop:
 31585                           	opt stack 27
 31586                           
 31587                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 31588                           
 31589                           ;incstack = 0
 31590  007B32  84C5               	bsf	4037,2,c	;volatile
 31591  007B34  A4C5               	btfss	4037,2,c	;volatile
 31592  007B36  0012               	return	
 31593  007B38  D7FD               	goto	l1107
 31594  007B3A                     __end_of__i2c_stop:
 31595                           	opt stack 0
 31596                           tosu	equ	0xFFF
 31597                           tosh	equ	0xFFE
 31598                           tosl	equ	0xFFD
 31599                           pclath	equ	0xFFA
 31600                           tblptru	equ	0xFF8
 31601                           tblptrh	equ	0xFF7
 31602                           tblptrl	equ	0xFF6
 31603                           tablat	equ	0xFF5
 31604                           prodh	equ	0xFF4
 31605                           prodl	equ	0xFF3
 31606                           intcon	equ	0xFF2
 31607                           intcon2	equ	0xFF1
 31608                           intcon3	equ	0xFF0
 31609                           indf0	equ	0xFEF
 31610                           postinc0	equ	0xFEE
 31611                           fsr0h	equ	0xFEA
 31612                           fsr0l	equ	0xFE9
 31613                           wreg	equ	0xFE8
 31614                           indf1	equ	0xFE7
 31615                           postdec1	equ	0xFE5
 31616                           plusw1	equ	0xFE3
 31617                           fsr1h	equ	0xFE2
 31618                           fsr1l	equ	0xFE1
 31619                           indf2	equ	0xFDF
 31620                           postinc2	equ	0xFDE
 31621                           postdec2	equ	0xFDD
 31622                           plusw2	equ	0xFDB
 31623                           fsr2h	equ	0xFDA
 31624                           fsr2l	equ	0xFD9
 31625                           status	equ	0xFD8
 31626                           
 31627 ;; *************** function __i2c_start *****************
 31628 ;; Defined at:
 31629 ;;		line 54 in file "i2c.c"
 31630 ;; Parameters:    Size  Location     Type
 31631 ;;		None
 31632 ;; Auto vars:     Size  Location     Type
 31633 ;;		None
 31634 ;; Return value:  Size  Location     Type
 31635 ;;                  1    wreg      void 
 31636 ;; Registers used:
 31637 ;;		None
 31638 ;; Tracked objects:
 31639 ;;		On entry : 0/0
 31640 ;;		On exit  : 0/0
 31641 ;;		Unchanged: 0/0
 31642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31647 ;;Total ram usage:        0 bytes
 31648 ;; Hardware stack levels used:    1
 31649 ;; This function calls:
 31650 ;;		Nothing
 31651 ;; This function is called by:
 31652 ;;		__i2c_write
 31653 ;;		__i2c_read
 31654 ;;		_i2c_display_write_fixed
 31655 ;;		_i2c_display_write
 31656 ;; This function uses a non-reentrant model
 31657 ;;
 31658                           
 31659                           	psect	text156
 31660  007B3A                     __ptext156:
 31661                           	opt stack 0
 31662  007B3A                     __i2c_start:
 31663                           	opt stack 27
 31664                           
 31665                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 31666                           
 31667                           ;incstack = 0
 31668  007B3A  80C5               	bsf	4037,0,c	;volatile
 31669  007B3C  A0C5               	btfss	4037,0,c	;volatile
 31670  007B3E  0012               	return	
 31671  007B40  D7FD               	goto	l1092
 31672  007B42                     __end_of__i2c_start:
 31673                           	opt stack 0
 31674                           tosu	equ	0xFFF
 31675                           tosh	equ	0xFFE
 31676                           tosl	equ	0xFFD
 31677                           pclath	equ	0xFFA
 31678                           tblptru	equ	0xFF8
 31679                           tblptrh	equ	0xFF7
 31680                           tblptrl	equ	0xFF6
 31681                           tablat	equ	0xFF5
 31682                           prodh	equ	0xFF4
 31683                           prodl	equ	0xFF3
 31684                           intcon	equ	0xFF2
 31685                           intcon2	equ	0xFF1
 31686                           intcon3	equ	0xFF0
 31687                           indf0	equ	0xFEF
 31688                           postinc0	equ	0xFEE
 31689                           fsr0h	equ	0xFEA
 31690                           fsr0l	equ	0xFE9
 31691                           wreg	equ	0xFE8
 31692                           indf1	equ	0xFE7
 31693                           postdec1	equ	0xFE5
 31694                           plusw1	equ	0xFE3
 31695                           fsr1h	equ	0xFE2
 31696                           fsr1l	equ	0xFE1
 31697                           indf2	equ	0xFDF
 31698                           postinc2	equ	0xFDE
 31699                           postdec2	equ	0xFDD
 31700                           plusw2	equ	0xFDB
 31701                           fsr2h	equ	0xFDA
 31702                           fsr2l	equ	0xFD9
 31703                           status	equ	0xFD8
 31704                           
 31705 ;; *************** function __i2c_send *****************
 31706 ;; Defined at:
 31707 ;;		line 61 in file "i2c.c"
 31708 ;; Parameters:    Size  Location     Type
 31709 ;;  dat             1    wreg     unsigned char 
 31710 ;; Auto vars:     Size  Location     Type
 31711 ;;  dat             1    0[COMRAM] unsigned char 
 31712 ;; Return value:  Size  Location     Type
 31713 ;;                  1    wreg      void 
 31714 ;; Registers used:
 31715 ;;		wreg
 31716 ;; Tracked objects:
 31717 ;;		On entry : 0/0
 31718 ;;		On exit  : 0/0
 31719 ;;		Unchanged: 0/0
 31720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31725 ;;Total ram usage:        1 bytes
 31726 ;; Hardware stack levels used:    1
 31727 ;; This function calls:
 31728 ;;		Nothing
 31729 ;; This function is called by:
 31730 ;;		__i2c_write
 31731 ;;		__i2c_read
 31732 ;;		_i2c_display_write_fixed
 31733 ;;		_i2c_display_write
 31734 ;; This function uses a non-reentrant model
 31735 ;;
 31736                           
 31737                           	psect	text157
 31738  007B42                     __ptext157:
 31739                           	opt stack 0
 31740  007B42                     __i2c_send:
 31741                           	opt stack 27
 31742                           
 31743                           ;incstack = 0
 31744                           ;__i2c_send@dat stored from wreg
 31745  007B42  6E01               	movwf	__i2c_send@dat,c
 31746                           
 31747                           ;i2c.c: 63: SSP1BUF = dat;
 31748  007B44  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 31749  007B48  0012               	return		;funcret
 31750  007B4A                     __end_of__i2c_send:
 31751                           	opt stack 0
 31752                           tosu	equ	0xFFF
 31753                           tosh	equ	0xFFE
 31754                           tosl	equ	0xFFD
 31755                           pclath	equ	0xFFA
 31756                           tblptru	equ	0xFF8
 31757                           tblptrh	equ	0xFF7
 31758                           tblptrl	equ	0xFF6
 31759                           tablat	equ	0xFF5
 31760                           prodh	equ	0xFF4
 31761                           prodl	equ	0xFF3
 31762                           intcon	equ	0xFF2
 31763                           intcon2	equ	0xFF1
 31764                           intcon3	equ	0xFF0
 31765                           indf0	equ	0xFEF
 31766                           postinc0	equ	0xFEE
 31767                           fsr0h	equ	0xFEA
 31768                           fsr0l	equ	0xFE9
 31769                           wreg	equ	0xFE8
 31770                           indf1	equ	0xFE7
 31771                           postdec1	equ	0xFE5
 31772                           plusw1	equ	0xFE3
 31773                           fsr1h	equ	0xFE2
 31774                           fsr1l	equ	0xFE1
 31775                           indf2	equ	0xFDF
 31776                           postinc2	equ	0xFDE
 31777                           postdec2	equ	0xFDD
 31778                           plusw2	equ	0xFDB
 31779                           fsr2h	equ	0xFDA
 31780                           fsr2l	equ	0xFD9
 31781                           status	equ	0xFD8
 31782                           
 31783 ;; *************** function __parse_command_long *****************
 31784 ;; Defined at:
 31785 ;;		line 455 in file "api.c"
 31786 ;; Parameters:    Size  Location     Type
 31787 ;;  data            2   83[COMRAM] PTR unsigned char 
 31788 ;;		 -> RAM(3759), 
 31789 ;; Auto vars:     Size  Location     Type
 31790 ;;  length          1   85[COMRAM] unsigned char 
 31791 ;; Return value:  Size  Location     Type
 31792 ;;                  1    wreg      unsigned char 
 31793 ;; Registers used:
 31794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31795 ;; Tracked objects:
 31796 ;;		On entry : 0/0
 31797 ;;		On exit  : 0/0
 31798 ;;		Unchanged: 0/0
 31799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31803 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31804 ;;Total ram usage:        3 bytes
 31805 ;; Hardware stack levels used:    1
 31806 ;; Hardware stack levels required when called:   11
 31807 ;; This function calls:
 31808 ;;		__parse_file_append
 31809 ;;		__parse_file_create
 31810 ;;		__parse_file_delete
 31811 ;;		__parse_file_modify
 31812 ;;		__parse_file_rename
 31813 ;;		__parse_file_truncate
 31814 ;; This function is called by:
 31815 ;;		_api_parse
 31816 ;; This function uses a non-reentrant model
 31817 ;;
 31818                           
 31819                           	psect	text158
 31820  005C54                     __ptext158:
 31821                           	opt stack 0
 31822  005C54                     __parse_command_long:
 31823                           	opt stack 17
 31824                           
 31825                           ;api.c: 457: uint8_t length = 65;
 31826                           
 31827                           ;incstack = 0
 31828  005C54  0E41               	movlw	65
 31829  005C56  6E56               	movwf	__parse_command_long@length,c
 31830                           
 31831                           ;api.c: 459: switch(data[0])
 31832  005C58  D02B               	goto	l2496
 31833  005C5A                     
 31834                           ;api.c: 462: length = _parse_file_truncate(data);
 31835  005C5A  C054  F001         	movff	__parse_command_long@data,__parse_file_truncate@data
 31836  005C5E  C055  F002         	movff	__parse_command_long@data+1,__parse_file_truncate@data+1
 31837  005C62  ECB8  F03D         	call	__parse_file_truncate	;wreg free
 31838  005C66  D022               	goto	L40
 31839  005C68                     
 31840                           ;api.c: 466: length = _parse_file_delete(data);
 31841  005C68  C054  F040         	movff	__parse_command_long@data,__parse_file_delete@data
 31842  005C6C  C055  F041         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 31843  005C70  ECC9  F037         	call	__parse_file_delete	;wreg free
 31844  005C74  D01B               	goto	L40
 31845  005C76                     
 31846                           ;api.c: 470: length = _parse_file_create(data);
 31847  005C76  C054  F051         	movff	__parse_command_long@data,__parse_file_create@data
 31848  005C7A  C055  F052         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 31849  005C7E  EC01  F033         	call	__parse_file_create	;wreg free
 31850  005C82  D014               	goto	L40
 31851  005C84                     
 31852                           ;api.c: 474: length = _parse_file_rename(data);
 31853  005C84  C054  F044         	movff	__parse_command_long@data,__parse_file_rename@data
 31854  005C88  C055  F045         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 31855  005C8C  EC6C  F033         	call	__parse_file_rename	;wreg free
 31856  005C90  D00D               	goto	L40
 31857  005C92                     
 31858                           ;api.c: 478: length = _parse_file_append(data);
 31859  005C92  C054  F04C         	movff	__parse_command_long@data,__parse_file_append@data
 31860  005C96  C055  F04D         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 31861  005C9A  ECC5  F02F         	call	__parse_file_append	;wreg free
 31862  005C9E  D006               	goto	L40
 31863  005CA0                     
 31864                           ;api.c: 482: length = _parse_file_modify(data);
 31865  005CA0  C054  F001         	movff	__parse_command_long@data,__parse_file_modify@data
 31866  005CA4  C055  F002         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 31867  005CA8  ECBA  F03D         	call	__parse_file_modify	;wreg free
 31868  005CAC                     L40:
 31869  005CAC  6E56               	movwf	__parse_command_long@length,c
 31870                           
 31871                           ;api.c: 484: }
 31872                           
 31873                           ;api.c: 483: break;
 31874  005CAE  D017               	goto	l2498
 31875  005CB0                     l2496:
 31876  005CB0  C054  FFD9         	movff	__parse_command_long@data,fsr2l
 31877  005CB4  C055  FFDA         	movff	__parse_command_long@data+1,fsr2h
 31878  005CB8  50DF               	movf	indf2,w,c
 31879                           
 31880                           ; Switch size 1, requested type "space"
 31881                           ; Number of cases is 6, Range of values is 80 to 85
 31882                           ; switch strategies available:
 31883                           ; Name         Instructions Cycles
 31884                           ; simple_byte           19    10 (average)
 31885                           ;	Chosen strategy is simple_byte
 31886  005CBA  0A50               	xorlw	80	; case 80
 31887  005CBC  B4D8               	btfsc	status,2,c
 31888  005CBE  D7CD               	goto	l2497
 31889  005CC0  0A01               	xorlw	1	; case 81
 31890  005CC2  B4D8               	btfsc	status,2,c
 31891  005CC4  D7D1               	goto	l2499
 31892  005CC6  0A03               	xorlw	3	; case 82
 31893  005CC8  B4D8               	btfsc	status,2,c
 31894  005CCA  D7D5               	goto	l2500
 31895  005CCC  0A01               	xorlw	1	; case 83
 31896  005CCE  B4D8               	btfsc	status,2,c
 31897  005CD0  D7D9               	goto	l2501
 31898  005CD2  0A07               	xorlw	7	; case 84
 31899  005CD4  B4D8               	btfsc	status,2,c
 31900  005CD6  D7DD               	goto	l2502
 31901  005CD8  0A01               	xorlw	1	; case 85
 31902  005CDA  B4D8               	btfsc	status,2,c
 31903  005CDC  D7E1               	goto	l2503
 31904  005CDE                     l2498:
 31905                           
 31906                           ;api.c: 486: return length;
 31907  005CDE  5056               	movf	__parse_command_long@length,w,c
 31908  005CE0  0012               	return	
 31909  005CE2                     __end_of__parse_command_long:
 31910                           	opt stack 0
 31911                           tosu	equ	0xFFF
 31912                           tosh	equ	0xFFE
 31913                           tosl	equ	0xFFD
 31914                           pclath	equ	0xFFA
 31915                           tblptru	equ	0xFF8
 31916                           tblptrh	equ	0xFF7
 31917                           tblptrl	equ	0xFF6
 31918                           tablat	equ	0xFF5
 31919                           prodh	equ	0xFF4
 31920                           prodl	equ	0xFF3
 31921                           intcon	equ	0xFF2
 31922                           intcon2	equ	0xFF1
 31923                           intcon3	equ	0xFF0
 31924                           indf0	equ	0xFEF
 31925                           postinc0	equ	0xFEE
 31926                           fsr0h	equ	0xFEA
 31927                           fsr0l	equ	0xFE9
 31928                           wreg	equ	0xFE8
 31929                           indf1	equ	0xFE7
 31930                           postdec1	equ	0xFE5
 31931                           plusw1	equ	0xFE3
 31932                           fsr1h	equ	0xFE2
 31933                           fsr1l	equ	0xFE1
 31934                           indf2	equ	0xFDF
 31935                           postinc2	equ	0xFDE
 31936                           postdec2	equ	0xFDD
 31937                           plusw2	equ	0xFDB
 31938                           fsr2h	equ	0xFDA
 31939                           fsr2l	equ	0xFD9
 31940                           status	equ	0xFD8
 31941                           
 31942 ;; *************** function __parse_file_truncate *****************
 31943 ;; Defined at:
 31944 ;;		line 489 in file "api.c"
 31945 ;; Parameters:    Size  Location     Type
 31946 ;;  data            2    0[COMRAM] PTR unsigned char 
 31947 ;;		 -> RAM(3759), 
 31948 ;; Auto vars:     Size  Location     Type
 31949 ;;		None
 31950 ;; Return value:  Size  Location     Type
 31951 ;;                  1    wreg      unsigned char 
 31952 ;; Registers used:
 31953 ;;		wreg
 31954 ;; Tracked objects:
 31955 ;;		On entry : 0/0
 31956 ;;		On exit  : 0/0
 31957 ;;		Unchanged: 0/0
 31958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31962 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31963 ;;Total ram usage:        2 bytes
 31964 ;; Hardware stack levels used:    1
 31965 ;; This function calls:
 31966 ;;		Nothing
 31967 ;; This function is called by:
 31968 ;;		__parse_command_long
 31969 ;; This function uses a non-reentrant model
 31970 ;;
 31971                           
 31972                           	psect	text159
 31973  007B70                     __ptext159:
 31974                           	opt stack 0
 31975  007B70                     __parse_file_truncate:
 31976                           	opt stack 27
 31977                           
 31978                           ;api.c: 493: return 65;
 31979                           
 31980                           ;incstack = 0
 31981  007B70  0E41               	movlw	65
 31982  007B72  0012               	return	
 31983  007B74                     __end_of__parse_file_truncate:
 31984                           	opt stack 0
 31985                           tosu	equ	0xFFF
 31986                           tosh	equ	0xFFE
 31987                           tosl	equ	0xFFD
 31988                           pclath	equ	0xFFA
 31989                           tblptru	equ	0xFF8
 31990                           tblptrh	equ	0xFF7
 31991                           tblptrl	equ	0xFF6
 31992                           tablat	equ	0xFF5
 31993                           prodh	equ	0xFF4
 31994                           prodl	equ	0xFF3
 31995                           intcon	equ	0xFF2
 31996                           intcon2	equ	0xFF1
 31997                           intcon3	equ	0xFF0
 31998                           indf0	equ	0xFEF
 31999                           postinc0	equ	0xFEE
 32000                           fsr0h	equ	0xFEA
 32001                           fsr0l	equ	0xFE9
 32002                           wreg	equ	0xFE8
 32003                           indf1	equ	0xFE7
 32004                           postdec1	equ	0xFE5
 32005                           plusw1	equ	0xFE3
 32006                           fsr1h	equ	0xFE2
 32007                           fsr1l	equ	0xFE1
 32008                           indf2	equ	0xFDF
 32009                           postinc2	equ	0xFDE
 32010                           postdec2	equ	0xFDD
 32011                           plusw2	equ	0xFDB
 32012                           fsr2h	equ	0xFDA
 32013                           fsr2l	equ	0xFD9
 32014                           status	equ	0xFD8
 32015                           
 32016 ;; *************** function __parse_file_rename *****************
 32017 ;; Defined at:
 32018 ;;		line 522 in file "api.c"
 32019 ;; Parameters:    Size  Location     Type
 32020 ;;  data            2   67[COMRAM] PTR unsigned char 
 32021 ;;		 -> RAM(3759), 
 32022 ;; Auto vars:     Size  Location     Type
 32023 ;;		None
 32024 ;; Return value:  Size  Location     Type
 32025 ;;                  1    wreg      unsigned char 
 32026 ;; Registers used:
 32027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32028 ;; Tracked objects:
 32029 ;;		On entry : 0/0
 32030 ;;		On exit  : 0/0
 32031 ;;		Unchanged: 0/0
 32032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32035 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32036 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32037 ;;Total ram usage:        3 bytes
 32038 ;; Hardware stack levels used:    1
 32039 ;; Hardware stack levels required when called:   10
 32040 ;; This function calls:
 32041 ;;		_fat_rename_file
 32042 ;; This function is called by:
 32043 ;;		__parse_command_long
 32044 ;; This function uses a non-reentrant model
 32045 ;;
 32046                           
 32047                           	psect	text160
 32048  0066D8                     __ptext160:
 32049                           	opt stack 0
 32050  0066D8                     __parse_file_rename:
 32051                           	opt stack 17
 32052                           
 32053                           ;api.c: 525: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 32054                           
 32055                           ;incstack = 0
 32056  0066D8  C044  FFD9         	movff	__parse_file_rename@data,fsr2l
 32057  0066DC  C045  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 32058  0066E0  0E53               	movlw	83
 32059  0066E2  18DE               	xorwf	postinc2,w,c
 32060  0066E4  A4D8               	btfss	status,2,c
 32061  0066E6  D014               	goto	u8990
 32062  0066E8  EE20 F00D          	lfsr	2,13
 32063  0066EC  5044               	movf	__parse_file_rename@data,w,c
 32064  0066EE  26D9               	addwf	fsr2l,f,c
 32065  0066F0  5045               	movf	__parse_file_rename@data+1,w,c
 32066  0066F2  22DA               	addwfc	fsr2h,f,c
 32067  0066F4  0E7E               	movlw	126
 32068  0066F6  18DE               	xorwf	postinc2,w,c
 32069  0066F8  A4D8               	btfss	status,2,c
 32070  0066FA  D00A               	goto	u8990
 32071  0066FC  EE20 F00E          	lfsr	2,14
 32072  006700  5044               	movf	__parse_file_rename@data,w,c
 32073  006702  26D9               	addwf	fsr2l,f,c
 32074  006704  5045               	movf	__parse_file_rename@data+1,w,c
 32075  006706  22DA               	addwfc	fsr2h,f,c
 32076  006708  0E18               	movlw	24
 32077  00670A  18DE               	xorwf	postinc2,w,c
 32078  00670C  B4D8               	btfsc	status,2,c
 32079  00670E  D002               	goto	l2522
 32080  006710                     u8990:
 32081                           
 32082                           ;api.c: 526: {;api.c: 527: return 15;
 32083  006710  0E0F               	movlw	15
 32084  006712  0012               	return	
 32085  006714                     l2522:
 32086                           
 32087                           ;api.c: 528: };api.c: 531: fat_rename_file(data[1], &data[2], &data[10]);
 32088  006714  0E02               	movlw	2
 32089  006716  2444               	addwf	__parse_file_rename@data,w,c
 32090  006718  6E40               	movwf	fat_rename_file@name,c
 32091  00671A  0E00               	movlw	0
 32092  00671C  2045               	addwfc	__parse_file_rename@data+1,w,c
 32093  00671E  6E41               	movwf	fat_rename_file@name+1,c
 32094  006720  0E0A               	movlw	10
 32095  006722  2444               	addwf	__parse_file_rename@data,w,c
 32096  006724  6E42               	movwf	fat_rename_file@extension,c
 32097  006726  0E00               	movlw	0
 32098  006728  2045               	addwfc	__parse_file_rename@data+1,w,c
 32099  00672A  6E43               	movwf	fat_rename_file@extension+1,c
 32100  00672C  EE20 F001          	lfsr	2,1
 32101  006730  5044               	movf	__parse_file_rename@data,w,c
 32102  006732  26D9               	addwf	fsr2l,f,c
 32103  006734  5045               	movf	__parse_file_rename@data+1,w,c
 32104  006736  22DA               	addwfc	fsr2h,f,c
 32105  006738  50DF               	movf	indf2,w,c
 32106  00673A  EC04  F02D         	call	_fat_rename_file
 32107                           
 32108                           ;api.c: 532: return 15;
 32109  00673E  0E0F               	movlw	15
 32110  006740  0012               	return	
 32111  006742                     __end_of__parse_file_rename:
 32112                           	opt stack 0
 32113                           tosu	equ	0xFFF
 32114                           tosh	equ	0xFFE
 32115                           tosl	equ	0xFFD
 32116                           pclath	equ	0xFFA
 32117                           tblptru	equ	0xFF8
 32118                           tblptrh	equ	0xFF7
 32119                           tblptrl	equ	0xFF6
 32120                           tablat	equ	0xFF5
 32121                           prodh	equ	0xFF4
 32122                           prodl	equ	0xFF3
 32123                           intcon	equ	0xFF2
 32124                           intcon2	equ	0xFF1
 32125                           intcon3	equ	0xFF0
 32126                           indf0	equ	0xFEF
 32127                           postinc0	equ	0xFEE
 32128                           fsr0h	equ	0xFEA
 32129                           fsr0l	equ	0xFE9
 32130                           wreg	equ	0xFE8
 32131                           indf1	equ	0xFE7
 32132                           postdec1	equ	0xFE5
 32133                           plusw1	equ	0xFE3
 32134                           fsr1h	equ	0xFE2
 32135                           fsr1l	equ	0xFE1
 32136                           indf2	equ	0xFDF
 32137                           postinc2	equ	0xFDE
 32138                           postdec2	equ	0xFDD
 32139                           plusw2	equ	0xFDB
 32140                           fsr2h	equ	0xFDA
 32141                           fsr2l	equ	0xFD9
 32142                           status	equ	0xFD8
 32143                           
 32144 ;; *************** function _fat_rename_file *****************
 32145 ;; Defined at:
 32146 ;;		line 536 in file "fat16.c"
 32147 ;; Parameters:    Size  Location     Type
 32148 ;;  file_number     1    wreg     unsigned char 
 32149 ;;  name            2   63[COMRAM] PTR unsigned char 
 32150 ;;		 -> RAM(3759), 
 32151 ;;  extension       2   65[COMRAM] PTR unsigned char 
 32152 ;;		 -> RAM(3759), 
 32153 ;; Auto vars:     Size  Location     Type
 32154 ;;  file_number     1    0[BANK0 ] unsigned char 
 32155 ;;  root           32    1[BANK0 ] struct .
 32156 ;;  cntr            1   33[BANK0 ] unsigned char 
 32157 ;; Return value:  Size  Location     Type
 32158 ;;                  1    wreg      void 
 32159 ;; Registers used:
 32160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32161 ;; Tracked objects:
 32162 ;;		On entry : 0/0
 32163 ;;		On exit  : 0/0
 32164 ;;		Unchanged: 0/0
 32165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32167 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32169 ;;      Totals:         4      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32170 ;;Total ram usage:       38 bytes
 32171 ;; Hardware stack levels used:    1
 32172 ;; Hardware stack levels required when called:    9
 32173 ;; This function calls:
 32174 ;;		__write_root
 32175 ;;		_fat_get_file_information
 32176 ;; This function is called by:
 32177 ;;		__parse_file_rename
 32178 ;; This function uses a non-reentrant model
 32179 ;;
 32180                           
 32181                           	psect	text161
 32182  005A08                     __ptext161:
 32183                           	opt stack 0
 32184  005A08                     _fat_rename_file:
 32185                           	opt stack 17
 32186                           
 32187                           ;incstack = 0
 32188                           ;fat_rename_file@file_number stored from wreg
 32189  005A08  0100               	movlb	0	; () banked
 32190  005A0A  6FBE               	movwf	fat_rename_file@file_number& (0+255),b
 32191                           
 32192                           ;fat16.c: 538: rootEntry_t root;;fat16.c: 539: uint8_t cntr;;fat16.c: 542: fat_get_file_
      +                          information(file_number, &root);
 32193  005A0C  0EBF               	movlw	low fat_rename_file@root
 32194  005A0E  6E38               	movwf	fat_get_file_information@data,c
 32195  005A10  0E00               	movlw	high fat_rename_file@root
 32196  005A12  6E39               	movwf	fat_get_file_information@data+1,c
 32197  005A14  0100               	movlb	0	; () banked
 32198  005A16  51BE               	movf	fat_rename_file@file_number& (0+255),w,b
 32199  005A18  ECAD  F031         	call	_fat_get_file_information
 32200                           
 32201                           ;fat16.c: 545: for(cntr=0; cntr<8; ++cntr)
 32202  005A1C  0E00               	movlw	0
 32203  005A1E  0100               	movlb	0	; () banked
 32204  005A20  6FDF               	movwf	fat_rename_file@cntr& (0+255),b
 32205  005A22                     l10913:
 32206                           
 32207                           ; BSR set to: 0
 32208  005A22  0E07               	movlw	7
 32209  005A24  65DF               	cpfsgt	fat_rename_file@cntr& (0+255),b
 32210  005A26  D001               	goto	l1873
 32211  005A28  D014               	goto	u8450
 32212  005A2A                     l1873:
 32213                           
 32214                           ; BSR set to: 0
 32215                           ;fat16.c: 546: {;fat16.c: 547: root.fileName[cntr] = name[cntr];
 32216                           
 32217                           ; BSR set to: 0
 32218  005A2A  51DF               	movf	fat_rename_file@cntr& (0+255),w,b
 32219  005A2C  0D01               	mullw	1
 32220  005A2E  50F3               	movf	prodl,w,c
 32221  005A30  2440               	addwf	fat_rename_file@name,w,c
 32222  005A32  6ED9               	movwf	fsr2l,c
 32223  005A34  50F4               	movf	prodh,w,c
 32224  005A36  2041               	addwfc	fat_rename_file@name+1,w,c
 32225  005A38  6EDA               	movwf	fsr2h,c
 32226  005A3A  51DF               	movf	fat_rename_file@cntr& (0+255),w,b
 32227  005A3C  0D01               	mullw	1
 32228  005A3E  0EBF               	movlw	low fat_rename_file@root
 32229  005A40  24F3               	addwf	prodl,w,c
 32230  005A42  6EE1               	movwf	fsr1l,c
 32231  005A44  0E00               	movlw	high fat_rename_file@root
 32232  005A46  20F4               	addwfc	prodh,w,c
 32233  005A48  6EE2               	movwf	fsr1h,c
 32234  005A4A  CFDF FFE7          	movff	indf2,indf1
 32235                           
 32236                           ; BSR set to: 0
 32237  005A4E  2BDF               	incf	fat_rename_file@cntr& (0+255),f,b
 32238  005A50  D7E8               	goto	l10913
 32239  005A52                     u8450:
 32240                           
 32241                           ; BSR set to: 0
 32242                           ;fat16.c: 548: };fat16.c: 551: for(cntr=0; cntr<3; ++cntr)
 32243                           
 32244                           ; BSR set to: 0
 32245  005A52  0E00               	movlw	0
 32246  005A54  6FDF               	movwf	fat_rename_file@cntr& (0+255),b
 32247  005A56                     l10925:
 32248                           
 32249                           ; BSR set to: 0
 32250  005A56  0E02               	movlw	2
 32251  005A58  65DF               	cpfsgt	fat_rename_file@cntr& (0+255),b
 32252  005A5A  D001               	goto	l1875
 32253  005A5C  D018               	goto	u8470
 32254  005A5E                     l1875:
 32255                           
 32256                           ; BSR set to: 0
 32257                           ;fat16.c: 552: {;fat16.c: 553: root.fileExtension[cntr] = extension[cntr];
 32258                           
 32259                           ; BSR set to: 0
 32260  005A5E  51DF               	movf	fat_rename_file@cntr& (0+255),w,b
 32261  005A60  0D01               	mullw	1
 32262  005A62  50F3               	movf	prodl,w,c
 32263  005A64  2442               	addwf	fat_rename_file@extension,w,c
 32264  005A66  6ED9               	movwf	fsr2l,c
 32265  005A68  50F4               	movf	prodh,w,c
 32266  005A6A  2043               	addwfc	fat_rename_file@extension+1,w,c
 32267  005A6C  6EDA               	movwf	fsr2h,c
 32268  005A6E  51DF               	movf	fat_rename_file@cntr& (0+255),w,b
 32269  005A70  0D01               	mullw	1
 32270  005A72  0E08               	movlw	8
 32271  005A74  26F3               	addwf	prodl,f,c
 32272  005A76  0E00               	movlw	0
 32273  005A78  22F4               	addwfc	prodh,f,c
 32274  005A7A  0EBF               	movlw	low fat_rename_file@root
 32275  005A7C  24F3               	addwf	prodl,w,c
 32276  005A7E  6EE1               	movwf	fsr1l,c
 32277  005A80  0E00               	movlw	high fat_rename_file@root
 32278  005A82  20F4               	addwfc	prodh,w,c
 32279  005A84  6EE2               	movwf	fsr1h,c
 32280  005A86  CFDF FFE7          	movff	indf2,indf1
 32281                           
 32282                           ; BSR set to: 0
 32283  005A8A  2BDF               	incf	fat_rename_file@cntr& (0+255),f,b
 32284  005A8C  D7E4               	goto	l10925
 32285  005A8E                     u8470:
 32286                           
 32287                           ; BSR set to: 0
 32288                           ;fat16.c: 554: };fat16.c: 556: _write_root(file_number, &root);
 32289                           
 32290                           ; BSR set to: 0
 32291  005A8E  0EBF               	movlw	low fat_rename_file@root
 32292  005A90  6E29               	movwf	__write_root@data,c
 32293  005A92  0E00               	movlw	high fat_rename_file@root
 32294  005A94  6E2A               	movwf	__write_root@data+1,c
 32295  005A96  51BE               	movf	fat_rename_file@file_number& (0+255),w,b
 32296  005A98  EC1B  F036         	call	__write_root
 32297  005A9C  0012               	return		;funcret
 32298  005A9E                     __end_of_fat_rename_file:
 32299                           	opt stack 0
 32300                           tosu	equ	0xFFF
 32301                           tosh	equ	0xFFE
 32302                           tosl	equ	0xFFD
 32303                           pclath	equ	0xFFA
 32304                           tblptru	equ	0xFF8
 32305                           tblptrh	equ	0xFF7
 32306                           tblptrl	equ	0xFF6
 32307                           tablat	equ	0xFF5
 32308                           prodh	equ	0xFF4
 32309                           prodl	equ	0xFF3
 32310                           intcon	equ	0xFF2
 32311                           intcon2	equ	0xFF1
 32312                           intcon3	equ	0xFF0
 32313                           indf0	equ	0xFEF
 32314                           postinc0	equ	0xFEE
 32315                           fsr0h	equ	0xFEA
 32316                           fsr0l	equ	0xFE9
 32317                           wreg	equ	0xFE8
 32318                           indf1	equ	0xFE7
 32319                           postdec1	equ	0xFE5
 32320                           plusw1	equ	0xFE3
 32321                           fsr1h	equ	0xFE2
 32322                           fsr1l	equ	0xFE1
 32323                           indf2	equ	0xFDF
 32324                           postinc2	equ	0xFDE
 32325                           postdec2	equ	0xFDD
 32326                           plusw2	equ	0xFDB
 32327                           fsr2h	equ	0xFDA
 32328                           fsr2l	equ	0xFD9
 32329                           status	equ	0xFD8
 32330                           
 32331 ;; *************** function __parse_file_modify *****************
 32332 ;; Defined at:
 32333 ;;		line 548 in file "api.c"
 32334 ;; Parameters:    Size  Location     Type
 32335 ;;  data            2    0[COMRAM] PTR unsigned char 
 32336 ;;		 -> RAM(3759), 
 32337 ;; Auto vars:     Size  Location     Type
 32338 ;;		None
 32339 ;; Return value:  Size  Location     Type
 32340 ;;                  1    wreg      unsigned char 
 32341 ;; Registers used:
 32342 ;;		wreg
 32343 ;; Tracked objects:
 32344 ;;		On entry : 0/0
 32345 ;;		On exit  : 0/0
 32346 ;;		Unchanged: 0/0
 32347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32352 ;;Total ram usage:        2 bytes
 32353 ;; Hardware stack levels used:    1
 32354 ;; This function calls:
 32355 ;;		Nothing
 32356 ;; This function is called by:
 32357 ;;		__parse_command_long
 32358 ;; This function uses a non-reentrant model
 32359 ;;
 32360                           
 32361                           	psect	text162
 32362  007B74                     __ptext162:
 32363                           	opt stack 0
 32364  007B74                     __parse_file_modify:
 32365                           	opt stack 27
 32366                           
 32367                           ;api.c: 552: return 65;
 32368                           
 32369                           ;incstack = 0
 32370  007B74  0E41               	movlw	65
 32371  007B76  0012               	return	
 32372  007B78                     __end_of__parse_file_modify:
 32373                           	opt stack 0
 32374                           tosu	equ	0xFFF
 32375                           tosh	equ	0xFFE
 32376                           tosl	equ	0xFFD
 32377                           pclath	equ	0xFFA
 32378                           tblptru	equ	0xFF8
 32379                           tblptrh	equ	0xFF7
 32380                           tblptrl	equ	0xFF6
 32381                           tablat	equ	0xFF5
 32382                           prodh	equ	0xFF4
 32383                           prodl	equ	0xFF3
 32384                           intcon	equ	0xFF2
 32385                           intcon2	equ	0xFF1
 32386                           intcon3	equ	0xFF0
 32387                           indf0	equ	0xFEF
 32388                           postinc0	equ	0xFEE
 32389                           fsr0h	equ	0xFEA
 32390                           fsr0l	equ	0xFE9
 32391                           wreg	equ	0xFE8
 32392                           indf1	equ	0xFE7
 32393                           postdec1	equ	0xFE5
 32394                           plusw1	equ	0xFE3
 32395                           fsr1h	equ	0xFE2
 32396                           fsr1l	equ	0xFE1
 32397                           indf2	equ	0xFDF
 32398                           postinc2	equ	0xFDE
 32399                           postdec2	equ	0xFDD
 32400                           plusw2	equ	0xFDB
 32401                           fsr2h	equ	0xFDA
 32402                           fsr2l	equ	0xFD9
 32403                           status	equ	0xFD8
 32404                           
 32405 ;; *************** function __parse_file_delete *****************
 32406 ;; Defined at:
 32407 ;;		line 496 in file "api.c"
 32408 ;; Parameters:    Size  Location     Type
 32409 ;;  data            2   63[COMRAM] PTR unsigned char 
 32410 ;;		 -> RAM(3759), 
 32411 ;; Auto vars:     Size  Location     Type
 32412 ;;		None
 32413 ;; Return value:  Size  Location     Type
 32414 ;;                  1    wreg      unsigned char 
 32415 ;; Registers used:
 32416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32417 ;; Tracked objects:
 32418 ;;		On entry : 0/0
 32419 ;;		On exit  : 0/0
 32420 ;;		Unchanged: 0/0
 32421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32424 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32425 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32426 ;;Total ram usage:        3 bytes
 32427 ;; Hardware stack levels used:    1
 32428 ;; Hardware stack levels required when called:    9
 32429 ;; This function calls:
 32430 ;;		_fat_delete_file
 32431 ;; This function is called by:
 32432 ;;		__parse_command_long
 32433 ;; This function uses a non-reentrant model
 32434 ;;
 32435                           
 32436                           	psect	text163
 32437  006F92                     __ptext163:
 32438                           	opt stack 0
 32439  006F92                     __parse_file_delete:
 32440                           	opt stack 18
 32441                           
 32442                           ;api.c: 499: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 32443                           
 32444                           ;incstack = 0
 32445  006F92  C040  FFD9         	movff	__parse_file_delete@data,fsr2l
 32446  006F96  C041  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 32447  006F9A  0E51               	movlw	81
 32448  006F9C  18DE               	xorwf	postinc2,w,c
 32449  006F9E  A4D8               	btfss	status,2,c
 32450  006FA0  D014               	goto	u8930
 32451  006FA2  EE20 F002          	lfsr	2,2
 32452  006FA6  5040               	movf	__parse_file_delete@data,w,c
 32453  006FA8  26D9               	addwf	fsr2l,f,c
 32454  006FAA  5041               	movf	__parse_file_delete@data+1,w,c
 32455  006FAC  22DA               	addwfc	fsr2h,f,c
 32456  006FAE  0E66               	movlw	102
 32457  006FB0  18DE               	xorwf	postinc2,w,c
 32458  006FB2  A4D8               	btfss	status,2,c
 32459  006FB4  D00A               	goto	u8930
 32460  006FB6  EE20 F003          	lfsr	2,3
 32461  006FBA  5040               	movf	__parse_file_delete@data,w,c
 32462  006FBC  26D9               	addwf	fsr2l,f,c
 32463  006FBE  5041               	movf	__parse_file_delete@data+1,w,c
 32464  006FC0  22DA               	addwfc	fsr2h,f,c
 32465  006FC2  0EA0               	movlw	160
 32466  006FC4  18DE               	xorwf	postinc2,w,c
 32467  006FC6  B4D8               	btfsc	status,2,c
 32468  006FC8  D002               	goto	l2510
 32469  006FCA                     u8930:
 32470                           
 32471                           ;api.c: 500: {;api.c: 501: return 4;
 32472  006FCA  0E04               	movlw	4
 32473  006FCC  0012               	return	
 32474  006FCE                     l2510:
 32475                           
 32476                           ;api.c: 502: };api.c: 505: fat_delete_file(data[1]);
 32477  006FCE  EE20 F001          	lfsr	2,1
 32478  006FD2  5040               	movf	__parse_file_delete@data,w,c
 32479  006FD4  26D9               	addwf	fsr2l,f,c
 32480  006FD6  5041               	movf	__parse_file_delete@data+1,w,c
 32481  006FD8  22DA               	addwfc	fsr2h,f,c
 32482  006FDA  50DF               	movf	indf2,w,c
 32483  006FDC  ECA1  F033         	call	_fat_delete_file
 32484                           
 32485                           ;api.c: 506: return 4;
 32486  006FE0  0E04               	movlw	4
 32487  006FE2  0012               	return	
 32488  006FE4                     __end_of__parse_file_delete:
 32489                           	opt stack 0
 32490                           tosu	equ	0xFFF
 32491                           tosh	equ	0xFFE
 32492                           tosl	equ	0xFFD
 32493                           pclath	equ	0xFFA
 32494                           tblptru	equ	0xFF8
 32495                           tblptrh	equ	0xFF7
 32496                           tblptrl	equ	0xFF6
 32497                           tablat	equ	0xFF5
 32498                           prodh	equ	0xFF4
 32499                           prodl	equ	0xFF3
 32500                           intcon	equ	0xFF2
 32501                           intcon2	equ	0xFF1
 32502                           intcon3	equ	0xFF0
 32503                           indf0	equ	0xFEF
 32504                           postinc0	equ	0xFEE
 32505                           fsr0h	equ	0xFEA
 32506                           fsr0l	equ	0xFE9
 32507                           wreg	equ	0xFE8
 32508                           indf1	equ	0xFE7
 32509                           postdec1	equ	0xFE5
 32510                           plusw1	equ	0xFE3
 32511                           fsr1h	equ	0xFE2
 32512                           fsr1l	equ	0xFE1
 32513                           indf2	equ	0xFDF
 32514                           postinc2	equ	0xFDE
 32515                           postdec2	equ	0xFDD
 32516                           plusw2	equ	0xFDB
 32517                           fsr2h	equ	0xFDA
 32518                           fsr2l	equ	0xFD9
 32519                           status	equ	0xFD8
 32520                           
 32521 ;; *************** function _fat_delete_file *****************
 32522 ;; Defined at:
 32523 ;;		line 391 in file "fat16.c"
 32524 ;; Parameters:    Size  Location     Type
 32525 ;;  file_number     1    wreg     unsigned char 
 32526 ;; Auto vars:     Size  Location     Type
 32527 ;;  file_number     1   62[COMRAM] unsigned char 
 32528 ;;  first_cluste    2   60[COMRAM] unsigned int 
 32529 ;;  next_cluster    2   58[COMRAM] unsigned int 
 32530 ;; Return value:  Size  Location     Type
 32531 ;;                  1    wreg      void 
 32532 ;; Registers used:
 32533 ;;		wreg, status,2, status,0, cstack
 32534 ;; Tracked objects:
 32535 ;;		On entry : 0/0
 32536 ;;		On exit  : 0/0
 32537 ;;		Unchanged: 0/0
 32538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32540 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32542 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32543 ;;Total ram usage:        5 bytes
 32544 ;; Hardware stack levels used:    1
 32545 ;; Hardware stack levels required when called:    8
 32546 ;; This function calls:
 32547 ;;		__delete_root
 32548 ;;		__get_first_cluster
 32549 ;;		__read_fat
 32550 ;;		__root_is_available
 32551 ;;		__write_fat
 32552 ;; This function is called by:
 32553 ;;		__parse_file_delete
 32554 ;; This function uses a non-reentrant model
 32555 ;;
 32556                           
 32557                           	psect	text164
 32558  006742                     __ptext164:
 32559                           	opt stack 0
 32560  006742                     _fat_delete_file:
 32561                           	opt stack 18
 32562                           
 32563                           ;incstack = 0
 32564                           ;fat_delete_file@file_number stored from wreg
 32565  006742  6E3F               	movwf	fat_delete_file@file_number,c
 32566                           
 32567                           ;fat16.c: 393: uint16_t first_cluster;;fat16.c: 394: uint16_t next_cluster;;fat16.c: 397
      +                          : if(file_number>=64)
 32568  006744  0E3F               	movlw	63
 32569  006746  643F               	cpfsgt	fat_delete_file@file_number,c
 32570  006748  D001               	goto	l1847
 32571  00674A  0012               	return	
 32572  00674C                     l1847:
 32573                           
 32574                           ;fat16.c: 401: };fat16.c: 404: if(_root_is_available(file_number))
 32575  00674C  503F               	movf	fat_delete_file@file_number,w,c
 32576  00674E  EC38  F031         	call	__root_is_available
 32577  006752  0900               	iorlw	0
 32578  006754  A4D8               	btfss	status,2,c
 32579  006756  0012               	return	
 32580                           
 32581                           ;fat16.c: 408: };fat16.c: 411: first_cluster = _get_first_cluster(file_number);
 32582                           
 32583                           ;fat16.c: 405: {;fat16.c: 407: return;
 32584  006758  503F               	movf	fat_delete_file@file_number,w,c
 32585  00675A  ECD6  F033         	call	__get_first_cluster
 32586  00675E  C031  F03D         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 32587  006762  C032  F03E         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 32588  006766                     l1850:
 32589                           
 32590                           ;fat16.c: 415: {;fat16.c: 418: next_cluster = _read_fat(first_cluster);
 32591  006766  C03D  F031         	movff	fat_delete_file@first_cluster,__read_fat@cluster
 32592  00676A  C03E  F032         	movff	fat_delete_file@first_cluster+1,__read_fat@cluster+1
 32593  00676E  ECB1  F038         	call	__read_fat	;wreg free
 32594  006772  C031  F03B         	movff	?__read_fat,fat_delete_file@next_cluster
 32595  006776  C032  F03C         	movff	?__read_fat+1,fat_delete_file@next_cluster+1
 32596                           
 32597                           ;fat16.c: 425: _write_fat(first_cluster, 0x0000);
 32598  00677A  C03D  F029         	movff	fat_delete_file@first_cluster,__write_fat@cluster
 32599  00677E  C03E  F02A         	movff	fat_delete_file@first_cluster+1,__write_fat@cluster+1
 32600  006782  0E00               	movlw	0
 32601  006784  6E2C               	movwf	__write_fat@value+1,c
 32602  006786  0E00               	movlw	0
 32603  006788  6E2B               	movwf	__write_fat@value,c
 32604  00678A  EC7A  F039         	call	__write_fat	;wreg free
 32605                           
 32606                           ;fat16.c: 427: if(next_cluster>0xFFF0)
 32607  00678E  0EF1               	movlw	241
 32608  006790  5C3B               	subwf	fat_delete_file@next_cluster,w,c
 32609  006792  0EFF               	movlw	255
 32610  006794  583C               	subwfb	fat_delete_file@next_cluster+1,w,c
 32611  006796  B0D8               	btfsc	status,0,c
 32612  006798  D005               	goto	l1852
 32613                           
 32614                           ;fat16.c: 432: else;fat16.c: 433: {;fat16.c: 434: first_cluster = next_cluster;
 32615                           
 32616                           ;fat16.c: 430: }
 32617                           
 32618                           ;fat16.c: 428: {;fat16.c: 429: break;
 32619  00679A  C03B  F03D         	movff	fat_delete_file@next_cluster,fat_delete_file@first_cluster
 32620  00679E  C03C  F03E         	movff	fat_delete_file@next_cluster+1,fat_delete_file@first_cluster+1
 32621  0067A2  D7E1               	goto	l1850
 32622  0067A4                     l1852:
 32623                           
 32624                           ;fat16.c: 435: };fat16.c: 436: };fat16.c: 440: _delete_root(file_number);
 32625  0067A4  503F               	movf	fat_delete_file@file_number,w,c
 32626  0067A6  EC67  F035         	call	__delete_root
 32627  0067AA  0012               	return		;funcret
 32628  0067AC                     __end_of_fat_delete_file:
 32629                           	opt stack 0
 32630                           tosu	equ	0xFFF
 32631                           tosh	equ	0xFFE
 32632                           tosl	equ	0xFFD
 32633                           pclath	equ	0xFFA
 32634                           tblptru	equ	0xFF8
 32635                           tblptrh	equ	0xFF7
 32636                           tblptrl	equ	0xFF6
 32637                           tablat	equ	0xFF5
 32638                           prodh	equ	0xFF4
 32639                           prodl	equ	0xFF3
 32640                           intcon	equ	0xFF2
 32641                           intcon2	equ	0xFF1
 32642                           intcon3	equ	0xFF0
 32643                           indf0	equ	0xFEF
 32644                           postinc0	equ	0xFEE
 32645                           fsr0h	equ	0xFEA
 32646                           fsr0l	equ	0xFE9
 32647                           wreg	equ	0xFE8
 32648                           indf1	equ	0xFE7
 32649                           postdec1	equ	0xFE5
 32650                           plusw1	equ	0xFE3
 32651                           fsr1h	equ	0xFE2
 32652                           fsr1l	equ	0xFE1
 32653                           indf2	equ	0xFDF
 32654                           postinc2	equ	0xFDE
 32655                           postdec2	equ	0xFDD
 32656                           plusw2	equ	0xFDB
 32657                           fsr2h	equ	0xFDA
 32658                           fsr2l	equ	0xFD9
 32659                           status	equ	0xFD8
 32660                           
 32661 ;; *************** function __get_first_cluster *****************
 32662 ;; Defined at:
 32663 ;;		line 205 in file "fat16.c"
 32664 ;; Parameters:    Size  Location     Type
 32665 ;;  slot            1    wreg     unsigned char 
 32666 ;; Auto vars:     Size  Location     Type
 32667 ;;  slot            1   57[COMRAM] unsigned char 
 32668 ;;  first_cluste    2   55[COMRAM] unsigned int 
 32669 ;;  offset          2   53[COMRAM] unsigned int 
 32670 ;;  sector          2   51[COMRAM] unsigned int 
 32671 ;; Return value:  Size  Location     Type
 32672 ;;                  2   48[COMRAM] unsigned int 
 32673 ;; Registers used:
 32674 ;;		wreg, status,2, status,0, cstack
 32675 ;; Tracked objects:
 32676 ;;		On entry : 0/0
 32677 ;;		On exit  : 0/0
 32678 ;;		Unchanged: 0/0
 32679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32681 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32683 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32684 ;;Total ram usage:       10 bytes
 32685 ;; Hardware stack levels used:    1
 32686 ;; Hardware stack levels required when called:    7
 32687 ;; This function calls:
 32688 ;;		_flash_partial_read
 32689 ;; This function is called by:
 32690 ;;		_fat_delete_file
 32691 ;; This function uses a non-reentrant model
 32692 ;;
 32693                           
 32694                           	psect	text165
 32695  0067AC                     __ptext165:
 32696                           	opt stack 0
 32697  0067AC                     __get_first_cluster:
 32698                           	opt stack 18
 32699                           
 32700                           ;incstack = 0
 32701                           ;__get_first_cluster@slot stored from wreg
 32702  0067AC  6E3A               	movwf	__get_first_cluster@slot,c
 32703                           
 32704                           ;fat16.c: 207: uint16_t sector;;fat16.c: 208: uint16_t offset;;fat16.c: 209: uint16_t fi
      +                          rst_cluster;;fat16.c: 210: sector = slot >> 4;
 32705  0067AE  C03A  F033         	movff	__get_first_cluster@slot,??__get_first_cluster
 32706  0067B2  3A33               	swapf	??__get_first_cluster,f,c
 32707  0067B4  0E0F               	movlw	15
 32708  0067B6  1633               	andwf	??__get_first_cluster,f,c
 32709  0067B8  5033               	movf	??__get_first_cluster,w,c
 32710  0067BA  6E34               	movwf	__get_first_cluster@sector,c
 32711  0067BC  6A35               	clrf	__get_first_cluster@sector+1,c
 32712                           
 32713                           ;fat16.c: 211: sector += 18;
 32714  0067BE  0E12               	movlw	18
 32715  0067C0  2634               	addwf	__get_first_cluster@sector,f,c
 32716  0067C2  0E00               	movlw	0
 32717  0067C4  2235               	addwfc	__get_first_cluster@sector+1,f,c
 32718                           
 32719                           ;fat16.c: 212: offset = slot & 0b1111;
 32720  0067C6  C03A  F033         	movff	__get_first_cluster@slot,??__get_first_cluster
 32721  0067CA  0E0F               	movlw	15
 32722  0067CC  1633               	andwf	??__get_first_cluster,f,c
 32723  0067CE  5033               	movf	??__get_first_cluster,w,c
 32724  0067D0  6E36               	movwf	__get_first_cluster@offset,c
 32725  0067D2  6A37               	clrf	__get_first_cluster@offset+1,c
 32726                           
 32727                           ;fat16.c: 213: offset <<= 5;
 32728  0067D4  0E05               	movlw	5
 32729  0067D6                     u7535:
 32730  0067D6  90D8               	bcf	status,0,c
 32731  0067D8  3636               	rlcf	__get_first_cluster@offset,f,c
 32732  0067DA  3637               	rlcf	__get_first_cluster@offset+1,f,c
 32733  0067DC  2EE8               	decfsz	wreg,f,c
 32734  0067DE  D7FB               	goto	u7535
 32735                           
 32736                           ;fat16.c: 214: offset += 26;
 32737  0067E0  0E1A               	movlw	26
 32738  0067E2  2636               	addwf	__get_first_cluster@offset,f,c
 32739  0067E4  0E00               	movlw	0
 32740  0067E6  2237               	addwfc	__get_first_cluster@offset+1,f,c
 32741                           
 32742                           ;fat16.c: 215: flash_partial_read(sector, offset, 2, &first_cluster);
 32743  0067E8  C034  F029         	movff	__get_first_cluster@sector,flash_partial_read@page
 32744  0067EC  C035  F02A         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 32745  0067F0  C036  F02B         	movff	__get_first_cluster@offset,flash_partial_read@start
 32746  0067F4  C037  F02C         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 32747  0067F8  0E00               	movlw	0
 32748  0067FA  6E2E               	movwf	flash_partial_read@length+1,c
 32749  0067FC  0E02               	movlw	2
 32750  0067FE  6E2D               	movwf	flash_partial_read@length,c
 32751  006800  0E38               	movlw	low __get_first_cluster@first_cluster
 32752  006802  6E2F               	movwf	flash_partial_read@data,c
 32753  006804  0E00               	movlw	high __get_first_cluster@first_cluster
 32754  006806  6E30               	movwf	flash_partial_read@data+1,c
 32755  006808  ECFE  F03A         	call	_flash_partial_read	;wreg free
 32756                           
 32757                           ;fat16.c: 216: return first_cluster;
 32758  00680C  C038  F031         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 32759  006810  C039  F032         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 32760  006814  0012               	return	
 32761  006816                     __end_of__get_first_cluster:
 32762                           	opt stack 0
 32763                           tosu	equ	0xFFF
 32764                           tosh	equ	0xFFE
 32765                           tosl	equ	0xFFD
 32766                           pclath	equ	0xFFA
 32767                           tblptru	equ	0xFF8
 32768                           tblptrh	equ	0xFF7
 32769                           tblptrl	equ	0xFF6
 32770                           tablat	equ	0xFF5
 32771                           prodh	equ	0xFF4
 32772                           prodl	equ	0xFF3
 32773                           intcon	equ	0xFF2
 32774                           intcon2	equ	0xFF1
 32775                           intcon3	equ	0xFF0
 32776                           indf0	equ	0xFEF
 32777                           postinc0	equ	0xFEE
 32778                           fsr0h	equ	0xFEA
 32779                           fsr0l	equ	0xFE9
 32780                           wreg	equ	0xFE8
 32781                           indf1	equ	0xFE7
 32782                           postdec1	equ	0xFE5
 32783                           plusw1	equ	0xFE3
 32784                           fsr1h	equ	0xFE2
 32785                           fsr1l	equ	0xFE1
 32786                           indf2	equ	0xFDF
 32787                           postinc2	equ	0xFDE
 32788                           postdec2	equ	0xFDD
 32789                           plusw2	equ	0xFDB
 32790                           fsr2h	equ	0xFDA
 32791                           fsr2l	equ	0xFD9
 32792                           status	equ	0xFD8
 32793                           
 32794 ;; *************** function __delete_root *****************
 32795 ;; Defined at:
 32796 ;;		line 192 in file "fat16.c"
 32797 ;; Parameters:    Size  Location     Type
 32798 ;;  slot            1    wreg     unsigned char 
 32799 ;; Auto vars:     Size  Location     Type
 32800 ;;  slot            1   46[COMRAM] unsigned char 
 32801 ;;  offset          2   43[COMRAM] unsigned int 
 32802 ;;  root_sector     2   41[COMRAM] unsigned int 
 32803 ;;  deleted_valu    1   45[COMRAM] unsigned char 
 32804 ;; Return value:  Size  Location     Type
 32805 ;;                  1    wreg      void 
 32806 ;; Registers used:
 32807 ;;		wreg, status,2, status,0, cstack
 32808 ;; Tracked objects:
 32809 ;;		On entry : 0/0
 32810 ;;		On exit  : 0/0
 32811 ;;		Unchanged: 0/0
 32812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32814 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32816 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32817 ;;Total ram usage:        7 bytes
 32818 ;; Hardware stack levels used:    1
 32819 ;; Hardware stack levels required when called:    6
 32820 ;; This function calls:
 32821 ;;		_flash_partial_write
 32822 ;; This function is called by:
 32823 ;;		_fat_delete_file
 32824 ;; This function uses a non-reentrant model
 32825 ;;
 32826                           
 32827                           	psect	text166
 32828  006ACE                     __ptext166:
 32829                           	opt stack 0
 32830  006ACE                     __delete_root:
 32831                           	opt stack 19
 32832                           
 32833                           ;incstack = 0
 32834                           ;__delete_root@slot stored from wreg
 32835  006ACE  6E2F               	movwf	__delete_root@slot,c
 32836                           
 32837                           ;fat16.c: 194: uint16_t root_sector;;fat16.c: 195: uint16_t offset;;fat16.c: 196: uint8_
      +                          t deleted_value;;fat16.c: 198: root_sector = (slot >> 4) + 18;
 32838  006AD0  C02F  F029         	movff	__delete_root@slot,??__delete_root
 32839  006AD4  3A29               	swapf	??__delete_root,f,c
 32840  006AD6  0E0F               	movlw	15
 32841  006AD8  1629               	andwf	??__delete_root,f,c
 32842  006ADA  0E12               	movlw	18
 32843  006ADC  2429               	addwf	??__delete_root,w,c
 32844  006ADE  6E2A               	movwf	__delete_root@root_sector,c
 32845  006AE0  6A2B               	clrf	__delete_root@root_sector+1,c
 32846  006AE2  0E00               	movlw	0
 32847  006AE4  222B               	addwfc	__delete_root@root_sector+1,f,c
 32848                           
 32849                           ;fat16.c: 199: offset = (slot & 0b1111);
 32850  006AE6  C02F  F029         	movff	__delete_root@slot,??__delete_root
 32851  006AEA  0E0F               	movlw	15
 32852  006AEC  1629               	andwf	??__delete_root,f,c
 32853  006AEE  5029               	movf	??__delete_root,w,c
 32854  006AF0  6E2C               	movwf	__delete_root@offset,c
 32855  006AF2  6A2D               	clrf	__delete_root@offset+1,c
 32856                           
 32857                           ;fat16.c: 200: offset <<= 5;
 32858  006AF4  0E05               	movlw	5
 32859  006AF6                     u7525:
 32860  006AF6  90D8               	bcf	status,0,c
 32861  006AF8  362C               	rlcf	__delete_root@offset,f,c
 32862  006AFA  362D               	rlcf	__delete_root@offset+1,f,c
 32863  006AFC  2EE8               	decfsz	wreg,f,c
 32864  006AFE  D7FB               	goto	u7525
 32865                           
 32866                           ;fat16.c: 201: deleted_value = 0xE5;
 32867  006B00  0EE5               	movlw	229
 32868  006B02  6E2E               	movwf	__delete_root@deleted_value,c
 32869                           
 32870                           ;fat16.c: 202: flash_partial_write(root_sector, offset, 1, &deleted_value);
 32871  006B04  C02A  F020         	movff	__delete_root@root_sector,flash_partial_write@page
 32872  006B08  C02B  F021         	movff	__delete_root@root_sector+1,flash_partial_write@page+1
 32873  006B0C  C02C  F022         	movff	__delete_root@offset,flash_partial_write@start
 32874  006B10  C02D  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 32875  006B14  0E00               	movlw	0
 32876  006B16  6E25               	movwf	flash_partial_write@length+1,c
 32877  006B18  0E01               	movlw	1
 32878  006B1A  6E24               	movwf	flash_partial_write@length,c
 32879  006B1C  0E2E               	movlw	low __delete_root@deleted_value
 32880  006B1E  6E26               	movwf	flash_partial_write@data,c
 32881  006B20  0E00               	movlw	high __delete_root@deleted_value
 32882  006B22  6E27               	movwf	flash_partial_write@data+1,c
 32883  006B24  EC92  F032         	call	_flash_partial_write	;wreg free
 32884  006B28  0012               	return		;funcret
 32885  006B2A                     __end_of__delete_root:
 32886                           	opt stack 0
 32887                           tosu	equ	0xFFF
 32888                           tosh	equ	0xFFE
 32889                           tosl	equ	0xFFD
 32890                           pclath	equ	0xFFA
 32891                           tblptru	equ	0xFF8
 32892                           tblptrh	equ	0xFF7
 32893                           tblptrl	equ	0xFF6
 32894                           tablat	equ	0xFF5
 32895                           prodh	equ	0xFF4
 32896                           prodl	equ	0xFF3
 32897                           intcon	equ	0xFF2
 32898                           intcon2	equ	0xFF1
 32899                           intcon3	equ	0xFF0
 32900                           indf0	equ	0xFEF
 32901                           postinc0	equ	0xFEE
 32902                           fsr0h	equ	0xFEA
 32903                           fsr0l	equ	0xFE9
 32904                           wreg	equ	0xFE8
 32905                           indf1	equ	0xFE7
 32906                           postdec1	equ	0xFE5
 32907                           plusw1	equ	0xFE3
 32908                           fsr1h	equ	0xFE2
 32909                           fsr1l	equ	0xFE1
 32910                           indf2	equ	0xFDF
 32911                           postinc2	equ	0xFDE
 32912                           postdec2	equ	0xFDD
 32913                           plusw2	equ	0xFDB
 32914                           fsr2h	equ	0xFDA
 32915                           fsr2l	equ	0xFD9
 32916                           status	equ	0xFD8
 32917                           
 32918 ;; *************** function __parse_file_create *****************
 32919 ;; Defined at:
 32920 ;;		line 509 in file "api.c"
 32921 ;; Parameters:    Size  Location     Type
 32922 ;;  data            2   80[COMRAM] PTR unsigned char 
 32923 ;;		 -> RAM(3759), 
 32924 ;; Auto vars:     Size  Location     Type
 32925 ;;		None
 32926 ;; Return value:  Size  Location     Type
 32927 ;;                  1    wreg      unsigned char 
 32928 ;; Registers used:
 32929 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32930 ;; Tracked objects:
 32931 ;;		On entry : 0/0
 32932 ;;		On exit  : 0/0
 32933 ;;		Unchanged: 0/0
 32934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32938 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32939 ;;Total ram usage:        3 bytes
 32940 ;; Hardware stack levels used:    1
 32941 ;; Hardware stack levels required when called:   10
 32942 ;; This function calls:
 32943 ;;		_fat_create_file
 32944 ;; This function is called by:
 32945 ;;		__parse_command_long
 32946 ;; This function uses a non-reentrant model
 32947 ;;
 32948                           
 32949                           	psect	text167
 32950  006602                     __ptext167:
 32951                           	opt stack 0
 32952  006602                     __parse_file_create:
 32953                           	opt stack 17
 32954                           
 32955                           ;api.c: 512: if((data[0]!=COMMAND_FILE_CREATE) || (data[12]!=0xBD) || (data[13]!=0x4F))
 32956                           
 32957                           ;incstack = 0
 32958  006602  C051  FFD9         	movff	__parse_file_create@data,fsr2l
 32959  006606  C052  FFDA         	movff	__parse_file_create@data+1,fsr2h
 32960  00660A  0E52               	movlw	82
 32961  00660C  18DE               	xorwf	postinc2,w,c
 32962  00660E  A4D8               	btfss	status,2,c
 32963  006610  D014               	goto	u8960
 32964  006612  EE20 F00C          	lfsr	2,12
 32965  006616  5051               	movf	__parse_file_create@data,w,c
 32966  006618  26D9               	addwf	fsr2l,f,c
 32967  00661A  5052               	movf	__parse_file_create@data+1,w,c
 32968  00661C  22DA               	addwfc	fsr2h,f,c
 32969  00661E  0EBD               	movlw	189
 32970  006620  18DE               	xorwf	postinc2,w,c
 32971  006622  A4D8               	btfss	status,2,c
 32972  006624  D00A               	goto	u8960
 32973  006626  EE20 F00D          	lfsr	2,13
 32974  00662A  5051               	movf	__parse_file_create@data,w,c
 32975  00662C  26D9               	addwf	fsr2l,f,c
 32976  00662E  5052               	movf	__parse_file_create@data+1,w,c
 32977  006630  22DA               	addwfc	fsr2h,f,c
 32978  006632  0E4F               	movlw	79
 32979  006634  18DE               	xorwf	postinc2,w,c
 32980  006636  B4D8               	btfsc	status,2,c
 32981  006638  D002               	goto	l2516
 32982  00663A                     u8960:
 32983                           
 32984                           ;api.c: 513: {;api.c: 514: return 14;
 32985  00663A  0E0E               	movlw	14
 32986  00663C  0012               	return	
 32987  00663E                     l2516:
 32988                           
 32989                           ;api.c: 515: };api.c: 518: fat_create_file(&data[1], &data[9], 0);
 32990  00663E  0E01               	movlw	1
 32991  006640  2451               	addwf	__parse_file_create@data,w,c
 32992  006642  6E45               	movwf	fat_create_file@name,c
 32993  006644  0E00               	movlw	0
 32994  006646  2052               	addwfc	__parse_file_create@data+1,w,c
 32995  006648  6E46               	movwf	fat_create_file@name+1,c
 32996  00664A  0E09               	movlw	9
 32997  00664C  2451               	addwf	__parse_file_create@data,w,c
 32998  00664E  6E47               	movwf	fat_create_file@extension,c
 32999  006650  0E00               	movlw	0
 33000  006652  2052               	addwfc	__parse_file_create@data+1,w,c
 33001  006654  6E48               	movwf	fat_create_file@extension+1,c
 33002  006656  0E00               	movlw	0
 33003  006658  6E49               	movwf	fat_create_file@size,c
 33004  00665A  0E00               	movlw	0
 33005  00665C  6E4A               	movwf	fat_create_file@size+1,c
 33006  00665E  0E00               	movlw	0
 33007  006660  6E4B               	movwf	fat_create_file@size+2,c
 33008  006662  0E00               	movlw	0
 33009  006664  6E4C               	movwf	fat_create_file@size+3,c
 33010  006666  EC62  F017         	call	_fat_create_file	;wreg free
 33011                           
 33012                           ;api.c: 519: return 14;
 33013  00666A  0E0E               	movlw	14
 33014  00666C  0012               	return	
 33015  00666E                     __end_of__parse_file_create:
 33016                           	opt stack 0
 33017                           tosu	equ	0xFFF
 33018                           tosh	equ	0xFFE
 33019                           tosl	equ	0xFFD
 33020                           pclath	equ	0xFFA
 33021                           tblptru	equ	0xFF8
 33022                           tblptrh	equ	0xFF7
 33023                           tblptrl	equ	0xFF6
 33024                           tablat	equ	0xFF5
 33025                           prodh	equ	0xFF4
 33026                           prodl	equ	0xFF3
 33027                           intcon	equ	0xFF2
 33028                           intcon2	equ	0xFF1
 33029                           intcon3	equ	0xFF0
 33030                           indf0	equ	0xFEF
 33031                           postinc0	equ	0xFEE
 33032                           fsr0h	equ	0xFEA
 33033                           fsr0l	equ	0xFE9
 33034                           wreg	equ	0xFE8
 33035                           indf1	equ	0xFE7
 33036                           postdec1	equ	0xFE5
 33037                           plusw1	equ	0xFE3
 33038                           fsr1h	equ	0xFE2
 33039                           fsr1l	equ	0xFE1
 33040                           indf2	equ	0xFDF
 33041                           postinc2	equ	0xFDE
 33042                           postdec2	equ	0xFDD
 33043                           plusw2	equ	0xFDB
 33044                           fsr2h	equ	0xFDA
 33045                           fsr2l	equ	0xFD9
 33046                           status	equ	0xFD8
 33047                           
 33048 ;; *************** function _fat_create_file *****************
 33049 ;; Defined at:
 33050 ;;		line 309 in file "fat16.c"
 33051 ;; Parameters:    Size  Location     Type
 33052 ;;  name            2   68[COMRAM] PTR unsigned char 
 33053 ;;		 -> RAM(3759), 
 33054 ;;  extension       2   70[COMRAM] PTR unsigned char 
 33055 ;;		 -> RAM(3759), 
 33056 ;;  size            4   72[COMRAM] unsigned long 
 33057 ;; Auto vars:     Size  Location     Type
 33058 ;;  root_entry     32    9[BANK0 ] struct .
 33059 ;;  cluster         2    7[BANK0 ] unsigned int 
 33060 ;;  number_of_cl    2    5[BANK0 ] unsigned int 
 33061 ;;  cluster_coun    2    2[BANK0 ] unsigned int 
 33062 ;;  next_cluster    2    0[BANK0 ] unsigned int 
 33063 ;;  root_slot       1    4[BANK0 ] unsigned char 
 33064 ;; Return value:  Size  Location     Type
 33065 ;;                  1    wreg      unsigned char 
 33066 ;; Registers used:
 33067 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33068 ;; Tracked objects:
 33069 ;;		On entry : 0/0
 33070 ;;		On exit  : 0/0
 33071 ;;		Unchanged: 0/0
 33072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33073 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33074 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33075 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33076 ;;      Totals:        12      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33077 ;;Total ram usage:       53 bytes
 33078 ;; Hardware stack levels used:    1
 33079 ;; Hardware stack levels required when called:    9
 33080 ;; This function calls:
 33081 ;;		__get_available_root_entry
 33082 ;;		__get_date
 33083 ;;		__get_empty_cluster
 33084 ;;		__get_time
 33085 ;;		__write_fat
 33086 ;;		__write_root
 33087 ;;		_fat_find_file
 33088 ;;		_fat_get_empty_clusters
 33089 ;;		_memcpy
 33090 ;; This function is called by:
 33091 ;;		__parse_file_create
 33092 ;; This function uses a non-reentrant model
 33093 ;;
 33094                           
 33095                           	psect	text168
 33096  002EC4                     __ptext168:
 33097                           	opt stack 0
 33098  002EC4                     _fat_create_file:
 33099                           	opt stack 17
 33100                           
 33101                           ;fat16.c: 311: uint8_t root_slot;;fat16.c: 312: rootEntry_t root_entry;;fat16.c: 313: ui
      +                          nt16_t cluster;;fat16.c: 314: uint16_t next_cluster;;fat16.c: 315: uint16_t number_of_cl
      +                          usters;;fat16.c: 316: uint16_t cluster_count;;fat16.c: 320: if(fat_find_file(name, exten
      +                          sion) != 0xFF)
 33102                           
 33103                           ;incstack = 0
 33104  002EC4  C045  F031         	movff	fat_create_file@name,fat_find_file@name
 33105  002EC8  C046  F032         	movff	fat_create_file@name+1,fat_find_file@name+1
 33106  002ECC  C047  F033         	movff	fat_create_file@extension,fat_find_file@extension
 33107  002ED0  C048  F034         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 33108  002ED4  ECD0  F028         	call	_fat_find_file	;wreg free
 33109  002ED8  0AFF               	xorlw	255
 33110  002EDA  A4D8               	btfss	status,2,c
 33111  002EDC  0012               	return	
 33112                           
 33113                           ;fat16.c: 325: };fat16.c: 329: root_slot = _get_available_root_entry();
 33114                           
 33115                           ;fat16.c: 321: {;fat16.c: 324: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 33116  002EDE  EC3E  F03C         	call	__get_available_root_entry	;wreg free
 33117  002EE2  0100               	movlb	0	; () banked
 33118  002EE4  6FC2               	movwf	fat_create_file@root_slot& (0+255),b
 33119                           
 33120                           ; BSR set to: 0
 33121                           ;fat16.c: 330: if(root_slot == 0xFF)
 33122  002EE6  29C2               	incf	fat_create_file@root_slot& (0+255),w,b
 33123  002EE8  B4D8               	btfsc	status,2,c
 33124  002EEA  0012               	return	
 33125                           
 33126                           ; BSR set to: 0
 33127                           ;fat16.c: 335: };fat16.c: 338: number_of_clusters = (size>>9) + 1;
 33128                           
 33129                           ; BSR set to: 0
 33130                           
 33131                           ; BSR set to: 0
 33132                           ;fat16.c: 331: {;fat16.c: 334: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 33133  002EEC  C049  F04D         	movff	fat_create_file@size,??_fat_create_file
 33134  002EF0  C04A  F04E         	movff	fat_create_file@size+1,??_fat_create_file+1
 33135  002EF4  C04B  F04F         	movff	fat_create_file@size+2,??_fat_create_file+2
 33136  002EF8  C04C  F050         	movff	fat_create_file@size+3,??_fat_create_file+3
 33137  002EFC  0E0A               	movlw	10
 33138  002EFE  D005               	goto	u8310
 33139  002F00                     u8315:
 33140  002F00  90D8               	bcf	status,0,c
 33141  002F02  3250               	rrcf	??_fat_create_file+3,f,c
 33142  002F04  324F               	rrcf	??_fat_create_file+2,f,c
 33143  002F06  324E               	rrcf	??_fat_create_file+1,f,c
 33144  002F08  324D               	rrcf	??_fat_create_file,f,c
 33145  002F0A                     u8310:
 33146  002F0A  2EE8               	decfsz	wreg,f,c
 33147  002F0C  D7F9               	goto	u8315
 33148  002F0E  0E01               	movlw	1
 33149  002F10  244D               	addwf	??_fat_create_file,w,c
 33150  002F12  6FC3               	movwf	fat_create_file@number_of_clusters& (0+255),b
 33151  002F14  0E00               	movlw	0
 33152  002F16  204E               	addwfc	??_fat_create_file+1,w,c
 33153  002F18  6FC4               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 33154                           
 33155                           ; BSR set to: 0
 33156                           ;fat16.c: 339: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 33157  002F1A  C0C3  F031         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 33158  002F1E  C0C4  F032         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 33159  002F22  EC71  F02E         	call	_fat_get_empty_clusters	;wreg free
 33160  002F26  0100               	movlb	0	; () banked
 33161  002F28  51C3               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 33162  002F2A  1831               	xorwf	?_fat_get_empty_clusters,w,c
 33163  002F2C  E105               	bnz	u8320
 33164  002F2E  51C4               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 33165  002F30  1832               	xorwf	?_fat_get_empty_clusters+1,w,c
 33166  002F32  A4D8               	btfss	status,2,c
 33167  002F34  0012               	return	
 33168  002F36  D001               	goto	l1839
 33169  002F38                     u8320:
 33170                           
 33171                           ; BSR set to: 0
 33172                           ;fat16.c: 340: {;fat16.c: 343: return 0xFD;;	Return value of _fat_create_file is never u
      +                          sed
 33173  002F38  0012               	return	
 33174  002F3A                     l1839:
 33175                           
 33176                           ; BSR set to: 0
 33177                           ;fat16.c: 344: };fat16.c: 347: cluster = _get_empty_cluster(2);
 33178                           
 33179                           ; BSR set to: 0
 33180  002F3A  0E00               	movlw	0
 33181  002F3C  6E32               	movwf	__get_empty_cluster@first_cluster+1,c
 33182  002F3E  0E02               	movlw	2
 33183  002F40  6E31               	movwf	__get_empty_cluster@first_cluster,c
 33184  002F42  ECE7  F031         	call	__get_empty_cluster	;wreg free
 33185  002F46  C031  F0C5         	movff	?__get_empty_cluster,fat_create_file@cluster
 33186  002F4A  C032  F0C6         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 33187                           
 33188                           ;fat16.c: 350: memcpy(root_entry.fileName, name, 8);
 33189  002F4E  0EC7               	movlw	low fat_create_file@root_entry
 33190  002F50  6E01               	movwf	memcpy@d1,c
 33191  002F52  0E00               	movlw	high fat_create_file@root_entry
 33192  002F54  6E02               	movwf	memcpy@d1+1,c
 33193  002F56  C045  F003         	movff	fat_create_file@name,memcpy@s1
 33194  002F5A  C046  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 33195  002F5E  5003               	movf	memcpy@s1,w,c
 33196  002F60  1004               	iorwf	memcpy@s1+1,w,c
 33197  002F62  A4D8               	btfss	status,2,c
 33198  002F64  0E20               	movlw	32
 33199  002F66  6E05               	movwf	memcpy@s1+2,c
 33200  002F68  0E00               	movlw	0
 33201  002F6A  6E07               	movwf	memcpy@n+1,c
 33202  002F6C  0E08               	movlw	8
 33203  002F6E  6E06               	movwf	memcpy@n,c
 33204  002F70  EC72  F034         	call	_memcpy	;wreg free
 33205                           
 33206                           ;fat16.c: 351: memcpy(root_entry.fileExtension, extension, 3);
 33207  002F74  0ECF               	movlw	low (fat_create_file@root_entry+8)
 33208  002F76  6E01               	movwf	memcpy@d1,c
 33209  002F78  0E00               	movlw	high (fat_create_file@root_entry+8)
 33210  002F7A  6E02               	movwf	memcpy@d1+1,c
 33211  002F7C  C047  F003         	movff	fat_create_file@extension,memcpy@s1
 33212  002F80  C048  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 33213  002F84  5003               	movf	memcpy@s1,w,c
 33214  002F86  1004               	iorwf	memcpy@s1+1,w,c
 33215  002F88  A4D8               	btfss	status,2,c
 33216  002F8A  0E20               	movlw	32
 33217  002F8C  6E05               	movwf	memcpy@s1+2,c
 33218  002F8E  0E00               	movlw	0
 33219  002F90  6E07               	movwf	memcpy@n+1,c
 33220  002F92  0E03               	movlw	3
 33221  002F94  6E06               	movwf	memcpy@n,c
 33222  002F96  EC72  F034         	call	_memcpy	;wreg free
 33223                           
 33224                           ;fat16.c: 352: root_entry.attributes = 0x00;
 33225  002F9A  0E00               	movlw	0
 33226  002F9C  0100               	movlb	0	; () banked
 33227  002F9E  6FD2               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 33228                           
 33229                           ; BSR set to: 0
 33230                           ;fat16.c: 353: root_entry.reserved1 = 0x00;
 33231  002FA0  0E00               	movlw	0
 33232  002FA2  6FD3               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 33233                           
 33234                           ; BSR set to: 0
 33235                           ;fat16.c: 354: root_entry.secondFractions = 0x00;
 33236  002FA4  0E00               	movlw	0
 33237  002FA6  6FD4               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 33238                           
 33239                           ; BSR set to: 0
 33240                           ;fat16.c: 355: root_entry.createdTime = _get_time();
 33241  002FA8  EC8F  F03D         	call	__get_time	;wreg free
 33242  002FAC  C001  F0D5         	movff	?__get_time,fat_create_file@root_entry+14
 33243  002FB0  C002  F0D6         	movff	?__get_time+1,fat_create_file@root_entry+15
 33244                           
 33245                           ;fat16.c: 356: root_entry.createdDate = _get_date();
 33246  002FB4  EC94  F03D         	call	__get_date	;wreg free
 33247  002FB8  C001  F0D7         	movff	?__get_date,fat_create_file@root_entry+16
 33248  002FBC  C002  F0D8         	movff	?__get_date+1,fat_create_file@root_entry+17
 33249                           
 33250                           ;fat16.c: 357: root_entry.lastAccessDate = root_entry.createdDate;
 33251  002FC0  C0D7  F0D9         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 33252  002FC4  C0D8  F0DA         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 33253                           
 33254                           ;fat16.c: 358: root_entry.reserved2 = 0x00;
 33255  002FC8  0E00               	movlw	0
 33256  002FCA  0100               	movlb	0	; () banked
 33257  002FCC  6FDC               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 33258  002FCE  0E00               	movlw	0
 33259  002FD0  6FDB               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 33260                           
 33261                           ; BSR set to: 0
 33262                           ;fat16.c: 359: root_entry.modifiedTime = root_entry.createdTime;
 33263  002FD2  C0D5  F0DD         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 33264  002FD6  C0D6  F0DE         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 33265                           
 33266                           ; BSR set to: 0
 33267                           ;fat16.c: 360: root_entry.modifiedDate = root_entry.createdDate;
 33268  002FDA  C0D7  F0DF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 33269  002FDE  C0D8  F0E0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 33270                           
 33271                           ; BSR set to: 0
 33272                           ;fat16.c: 361: root_entry.firstCluster = cluster;
 33273  002FE2  C0C5  F0E1         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 33274  002FE6  C0C6  F0E2         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 33275                           
 33276                           ; BSR set to: 0
 33277                           ;fat16.c: 362: root_entry.fileSize = size;
 33278  002FEA  C049  F0E3         	movff	fat_create_file@size,fat_create_file@root_entry+28
 33279  002FEE  C04A  F0E4         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 33280  002FF2  C04B  F0E5         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 33281  002FF6  C04C  F0E6         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 33282                           
 33283                           ;fat16.c: 365: _write_root(root_slot, &root_entry);
 33284  002FFA  0EC7               	movlw	low fat_create_file@root_entry
 33285  002FFC  6E29               	movwf	__write_root@data,c
 33286  002FFE  0E00               	movlw	high fat_create_file@root_entry
 33287  003000  6E2A               	movwf	__write_root@data+1,c
 33288  003002  51C2               	movf	fat_create_file@root_slot& (0+255),w,b
 33289  003004  EC1B  F036         	call	__write_root
 33290                           
 33291                           ;fat16.c: 370: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 33292  003008  0E00               	movlw	0
 33293  00300A  0100               	movlb	0	; () banked
 33294  00300C  6FC1               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 33295  00300E  0E01               	movlw	1
 33296  003010  6FC0               	movwf	fat_create_file@cluster_count& (0+255),b
 33297  003012  D02F               	goto	l1840
 33298  003014                     
 33299                           ; BSR set to: 0
 33300                           ;fat16.c: 371: {;fat16.c: 373: if(cluster_count==number_of_clusters)
 33301                           
 33302                           ; BSR set to: 0
 33303  003014  51C3               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 33304  003016  19C0               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 33305  003018  E10E               	bnz	l10825
 33306  00301A  51C4               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 33307  00301C  19C1               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 33308  00301E  A4D8               	btfss	status,2,c
 33309  003020  D00A               	goto	l1842
 33310                           
 33311                           ; BSR set to: 0
 33312                           ;fat16.c: 374: {;fat16.c: 376: _write_fat(cluster, 0xFFFF);
 33313  003022  C0C5  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 33314  003026  C0C6  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 33315  00302A  0EFF               	movlw	255
 33316  00302C  6E2C               	movwf	__write_fat@value+1,c
 33317  00302E  682B               	setf	__write_fat@value,c
 33318  003030  EC7A  F039         	call	__write_fat	;wreg free
 33319                           
 33320                           ;fat16.c: 377: }
 33321  003034  D01B               	goto	l1843
 33322  003036                     l1842:
 33323  003036                     l10825:
 33324                           
 33325                           ;fat16.c: 378: else;fat16.c: 379: {;fat16.c: 381: next_cluster = _get_empty_cluster(clus
      +                          ter+1);
 33326  003036  0E01               	movlw	1
 33327  003038  0100               	movlb	0	; () banked
 33328  00303A  25C5               	addwf	fat_create_file@cluster& (0+255),w,b
 33329  00303C  6E31               	movwf	__get_empty_cluster@first_cluster,c
 33330  00303E  0E00               	movlw	0
 33331  003040  21C6               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 33332  003042  6E32               	movwf	__get_empty_cluster@first_cluster+1,c
 33333  003044  ECE7  F031         	call	__get_empty_cluster	;wreg free
 33334  003048  C031  F0BE         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 33335  00304C  C032  F0BF         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 33336                           
 33337                           ;fat16.c: 383: _write_fat(cluster, next_cluster);
 33338  003050  C0C5  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 33339  003054  C0C6  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 33340  003058  C0BE  F02B         	movff	fat_create_file@next_cluster,__write_fat@value
 33341  00305C  C0BF  F02C         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 33342  003060  EC7A  F039         	call	__write_fat	;wreg free
 33343                           
 33344                           ;fat16.c: 385: cluster = next_cluster;
 33345  003064  C0BE  F0C5         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 33346  003068  C0BF  F0C6         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 33347  00306C                     l1843:
 33348  00306C  0100               	movlb	0	; () banked
 33349  00306E  4BC0               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 33350  003070  2BC1               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 33351  003072                     l1840:
 33352                           
 33353                           ; BSR set to: 0
 33354                           
 33355                           ; BSR set to: 0
 33356  003072  51C0               	movf	fat_create_file@cluster_count& (0+255),w,b
 33357  003074  5DC3               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 33358  003076  51C1               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 33359  003078  59C4               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 33360  00307A  A0D8               	btfss	status,0,c
 33361  00307C  0012               	return	
 33362  00307E  D7CA               	goto	l1841
 33363  003080                     __end_of_fat_create_file:
 33364                           	opt stack 0
 33365                           tosu	equ	0xFFF
 33366                           tosh	equ	0xFFE
 33367                           tosl	equ	0xFFD
 33368                           pclath	equ	0xFFA
 33369                           tblptru	equ	0xFF8
 33370                           tblptrh	equ	0xFF7
 33371                           tblptrl	equ	0xFF6
 33372                           tablat	equ	0xFF5
 33373                           prodh	equ	0xFF4
 33374                           prodl	equ	0xFF3
 33375                           intcon	equ	0xFF2
 33376                           intcon2	equ	0xFF1
 33377                           intcon3	equ	0xFF0
 33378                           indf0	equ	0xFEF
 33379                           postinc0	equ	0xFEE
 33380                           fsr0h	equ	0xFEA
 33381                           fsr0l	equ	0xFE9
 33382                           wreg	equ	0xFE8
 33383                           indf1	equ	0xFE7
 33384                           postdec1	equ	0xFE5
 33385                           plusw1	equ	0xFE3
 33386                           fsr1h	equ	0xFE2
 33387                           fsr1l	equ	0xFE1
 33388                           indf2	equ	0xFDF
 33389                           postinc2	equ	0xFDE
 33390                           postdec2	equ	0xFDD
 33391                           plusw2	equ	0xFDB
 33392                           fsr2h	equ	0xFDA
 33393                           fsr2l	equ	0xFD9
 33394                           status	equ	0xFD8
 33395                           
 33396 ;; *************** function _memcpy *****************
 33397 ;; Defined at:
 33398 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 33399 ;; Parameters:    Size  Location     Type
 33400 ;;  d1              2    0[COMRAM] PTR void 
 33401 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 33402 ;;		 -> msd_buffer(512), SetupPkt(8), 
 33403 ;;  s1              3    2[COMRAM] PTR const void 
 33404 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), inq_resp(36), 
 33405 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 33406 ;;  n               2    5[COMRAM] unsigned int 
 33407 ;; Auto vars:     Size  Location     Type
 33408 ;;  s               3    7[COMRAM] PTR const unsigned char 
 33409 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), inq_resp(36), 
 33410 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 33411 ;;  d               2   10[COMRAM] PTR unsigned char 
 33412 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 33413 ;;		 -> msd_buffer(512), SetupPkt(8), 
 33414 ;;  tmp             1   12[COMRAM] unsigned char 
 33415 ;; Return value:  Size  Location     Type
 33416 ;;                  2    0[COMRAM] PTR void 
 33417 ;; Registers used:
 33418 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 33419 ;; Tracked objects:
 33420 ;;		On entry : 0/0
 33421 ;;		On exit  : 0/0
 33422 ;;		Unchanged: 0/0
 33423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33424 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33425 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33427 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33428 ;;Total ram usage:       13 bytes
 33429 ;; Hardware stack levels used:    1
 33430 ;; This function calls:
 33431 ;;		Nothing
 33432 ;; This function is called by:
 33433 ;;		_USBCtrlEPService
 33434 ;;		_MSDProcessCommandMediaPresent
 33435 ;;		__flash_set_page_size
 33436 ;;		_fat_create_file
 33437 ;;		_internalFlash_read
 33438 ;; This function uses a non-reentrant model
 33439 ;;
 33440                           
 33441                           	psect	text169
 33442  0068E4                     __ptext169:
 33443                           	opt stack 0
 33444  0068E4                     _memcpy:
 33445                           	opt stack 27
 33446                           
 33447                           ;incstack = 0
 33448  0068E4  C003  F008         	movff	memcpy@s1,memcpy@s
 33449  0068E8  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 33450  0068EC  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 33451  0068F0  C001  F00B         	movff	memcpy@d1,memcpy@d
 33452  0068F4  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 33453  0068F8  D01F               	goto	l3349
 33454  0068FA                     l9911:
 33455  0068FA  C008  FFF6         	movff	memcpy@s,tblptrl
 33456  0068FE  C009  FFF7         	movff	memcpy@s+1,tblptrh
 33457  006902  C00A  FFF8         	movff	memcpy@s+2,tblptru
 33458  006906  BAF8               	btfsc	tblptru,5,c
 33459  006908  D003               	bra	u6997
 33460  00690A  0008               	tblrd		*
 33461  00690C  50F5               	movf	tablat,w,c
 33462  00690E  D005               	bra	u6990
 33463  006910                     u6997:
 33464  006910  CFF6 FFE9          	movff	tblptrl,fsr0l
 33465  006914  CFF7 FFEA          	movff	tblptrh,fsr0h
 33466  006918  50EF               	movf	indf0,w,c
 33467  00691A                     u6990:
 33468  00691A  6E0D               	movwf	memcpy@tmp,c
 33469  00691C  0E01               	movlw	1
 33470  00691E  2608               	addwf	memcpy@s,f,c
 33471  006920  0E00               	movlw	0
 33472  006922  2209               	addwfc	memcpy@s+1,f,c
 33473  006924  0E00               	movlw	0
 33474  006926  220A               	addwfc	memcpy@s+2,f,c
 33475  006928  C00B  FFD9         	movff	memcpy@d,fsr2l
 33476  00692C  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 33477  006930  C00D  FFDF         	movff	memcpy@tmp,indf2
 33478  006934  4A0B               	infsnz	memcpy@d,f,c
 33479  006936  2A0C               	incf	memcpy@d+1,f,c
 33480  006938                     l3349:
 33481  006938  0606               	decf	memcpy@n,f,c
 33482  00693A  A0D8               	btfss	status,0,c
 33483  00693C  0607               	decf	memcpy@n+1,f,c
 33484  00693E  2806               	incf	memcpy@n,w,c
 33485  006940  E1DC               	bnz	l9911
 33486  006942  2807               	incf	memcpy@n+1,w,c
 33487  006944  B4D8               	btfsc	status,2,c
 33488  006946  0012               	return	
 33489  006948  D7D8               	goto	l3350
 33490  00694A                     __end_of_memcpy:
 33491                           	opt stack 0
 33492                           tosu	equ	0xFFF
 33493                           tosh	equ	0xFFE
 33494                           tosl	equ	0xFFD
 33495                           pclath	equ	0xFFA
 33496                           tblptru	equ	0xFF8
 33497                           tblptrh	equ	0xFF7
 33498                           tblptrl	equ	0xFF6
 33499                           tablat	equ	0xFF5
 33500                           prodh	equ	0xFF4
 33501                           prodl	equ	0xFF3
 33502                           intcon	equ	0xFF2
 33503                           intcon2	equ	0xFF1
 33504                           intcon3	equ	0xFF0
 33505                           indf0	equ	0xFEF
 33506                           postinc0	equ	0xFEE
 33507                           fsr0h	equ	0xFEA
 33508                           fsr0l	equ	0xFE9
 33509                           wreg	equ	0xFE8
 33510                           indf1	equ	0xFE7
 33511                           postdec1	equ	0xFE5
 33512                           plusw1	equ	0xFE3
 33513                           fsr1h	equ	0xFE2
 33514                           fsr1l	equ	0xFE1
 33515                           indf2	equ	0xFDF
 33516                           postinc2	equ	0xFDE
 33517                           postdec2	equ	0xFDD
 33518                           plusw2	equ	0xFDB
 33519                           fsr2h	equ	0xFDA
 33520                           fsr2l	equ	0xFD9
 33521                           status	equ	0xFD8
 33522                           
 33523 ;; *************** function _fat_get_empty_clusters *****************
 33524 ;; Defined at:
 33525 ;;		line 130 in file "fat16.c"
 33526 ;; Parameters:    Size  Location     Type
 33527 ;;  maximum         2   48[COMRAM] unsigned int 
 33528 ;; Auto vars:     Size  Location     Type
 33529 ;;  cluster         2   58[COMRAM] unsigned int 
 33530 ;;  empty_cluste    2   56[COMRAM] unsigned int 
 33531 ;;  value           2   54[COMRAM] unsigned int 
 33532 ;;  offset          2   52[COMRAM] unsigned int 
 33533 ;;  fat_sector      2   50[COMRAM] unsigned int 
 33534 ;; Return value:  Size  Location     Type
 33535 ;;                  2   48[COMRAM] unsigned int 
 33536 ;; Registers used:
 33537 ;;		wreg, status,2, status,0, cstack
 33538 ;; Tracked objects:
 33539 ;;		On entry : 0/0
 33540 ;;		On exit  : 0/0
 33541 ;;		Unchanged: 0/0
 33542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33544 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33546 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33547 ;;Total ram usage:       12 bytes
 33548 ;; Hardware stack levels used:    1
 33549 ;; Hardware stack levels required when called:    7
 33550 ;; This function calls:
 33551 ;;		_flash_partial_read
 33552 ;; This function is called by:
 33553 ;;		_fat_create_file
 33554 ;; This function uses a non-reentrant model
 33555 ;;
 33556                           
 33557                           	psect	text170
 33558  005CE2                     __ptext170:
 33559                           	opt stack 0
 33560  005CE2                     _fat_get_empty_clusters:
 33561                           	opt stack 18
 33562                           
 33563                           ;fat16.c: 132: uint16_t empty_clusters = 0;
 33564                           
 33565                           ;incstack = 0
 33566  005CE2  0E00               	movlw	0
 33567  005CE4  6E3A               	movwf	fat_get_empty_clusters@empty_clusters+1,c
 33568  005CE6  0E00               	movlw	0
 33569  005CE8  6E39               	movwf	fat_get_empty_clusters@empty_clusters,c
 33570                           
 33571                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t fat_sector;;fat16.c: 135: uint16
      +                          _t offset;;fat16.c: 136: uint16_t value;;fat16.c: 139: for(cluster=2; cluster<(4074+2); 
      +                          ++cluster)
 33572  005CEA  0E00               	movlw	0
 33573  005CEC  6E3C               	movwf	fat_get_empty_clusters@cluster+1,c
 33574  005CEE  0E02               	movlw	2
 33575  005CF0  6E3B               	movwf	fat_get_empty_clusters@cluster,c
 33576  005CF2  D033               	goto	l10193
 33577  005CF4                     
 33578                           ;fat16.c: 140: {;fat16.c: 141: fat_sector = cluster>>8;
 33579  005CF4  503C               	movf	fat_get_empty_clusters@cluster+1,w,c
 33580  005CF6  6E33               	movwf	fat_get_empty_clusters@fat_sector,c
 33581  005CF8  6A34               	clrf	fat_get_empty_clusters@fat_sector+1,c
 33582                           
 33583                           ;fat16.c: 142: fat_sector += 2;
 33584  005CFA  0E02               	movlw	2
 33585  005CFC  2633               	addwf	fat_get_empty_clusters@fat_sector,f,c
 33586  005CFE  0E00               	movlw	0
 33587  005D00  2234               	addwfc	fat_get_empty_clusters@fat_sector+1,f,c
 33588                           
 33589                           ;fat16.c: 143: offset = cluster & 0xFF;
 33590  005D02  503B               	movf	fat_get_empty_clusters@cluster,w,c
 33591  005D04  6E35               	movwf	fat_get_empty_clusters@offset,c
 33592  005D06  6A36               	clrf	fat_get_empty_clusters@offset+1,c
 33593                           
 33594                           ;fat16.c: 144: offset <<= 1;
 33595  005D08  90D8               	bcf	status,0,c
 33596  005D0A  3635               	rlcf	fat_get_empty_clusters@offset,f,c
 33597  005D0C  3636               	rlcf	fat_get_empty_clusters@offset+1,f,c
 33598                           
 33599                           ;fat16.c: 145: flash_partial_read(fat_sector, offset, 2, &value);
 33600  005D0E  C033  F029         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 33601  005D12  C034  F02A         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 33602  005D16  C035  F02B         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 33603  005D1A  C036  F02C         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 33604  005D1E  0E00               	movlw	0
 33605  005D20  6E2E               	movwf	flash_partial_read@length+1,c
 33606  005D22  0E02               	movlw	2
 33607  005D24  6E2D               	movwf	flash_partial_read@length,c
 33608  005D26  0E37               	movlw	low fat_get_empty_clusters@value
 33609  005D28  6E2F               	movwf	flash_partial_read@data,c
 33610  005D2A  0E00               	movlw	high fat_get_empty_clusters@value
 33611  005D2C  6E30               	movwf	flash_partial_read@data+1,c
 33612  005D2E  ECFE  F03A         	call	_flash_partial_read	;wreg free
 33613                           
 33614                           ;fat16.c: 146: if(value==0x0000)
 33615  005D32  5037               	movf	fat_get_empty_clusters@value,w,c
 33616  005D34  1038               	iorwf	fat_get_empty_clusters@value+1,w,c
 33617  005D36  A4D8               	btfss	status,2,c
 33618  005D38  D00E               	goto	l1795
 33619                           
 33620                           ;fat16.c: 147: {;fat16.c: 148: ++empty_clusters;
 33621  005D3A  4A39               	infsnz	fat_get_empty_clusters@empty_clusters,f,c
 33622  005D3C  2A3A               	incf	fat_get_empty_clusters@empty_clusters+1,f,c
 33623                           
 33624                           ;fat16.c: 149: if(empty_clusters==maximum)
 33625  005D3E  5031               	movf	fat_get_empty_clusters@maximum,w,c
 33626  005D40  1839               	xorwf	fat_get_empty_clusters@empty_clusters,w,c
 33627  005D42  E109               	bnz	l10191
 33628  005D44  5032               	movf	fat_get_empty_clusters@maximum+1,w,c
 33629  005D46  183A               	xorwf	fat_get_empty_clusters@empty_clusters+1,w,c
 33630  005D48  A4D8               	btfss	status,2,c
 33631  005D4A  D005               	goto	l1795
 33632                           
 33633                           ;fat16.c: 150: {;fat16.c: 151: return empty_clusters;
 33634  005D4C  C039  F031         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 33635  005D50  C03A  F032         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 33636  005D54  0012               	return	
 33637  005D56                     l1795:
 33638  005D56                     l10191:
 33639  005D56  4A3B               	infsnz	fat_get_empty_clusters@cluster,f,c
 33640  005D58  2A3C               	incf	fat_get_empty_clusters@cluster+1,f,c
 33641  005D5A                     l10193:
 33642  005D5A  0EEC               	movlw	236
 33643  005D5C  5C3B               	subwf	fat_get_empty_clusters@cluster,w,c
 33644  005D5E  0E0F               	movlw	15
 33645  005D60  583C               	subwfb	fat_get_empty_clusters@cluster+1,w,c
 33646  005D62  A0D8               	btfss	status,0,c
 33647  005D64  D7C7               	goto	l1792
 33648                           
 33649                           ;fat16.c: 152: };fat16.c: 153: };fat16.c: 154: };fat16.c: 155: return empty_clusters;
 33650  005D66  C039  F031         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 33651  005D6A  C03A  F032         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 33652  005D6E  0012               	return		;funcret
 33653  005D70                     __end_of_fat_get_empty_clusters:
 33654                           	opt stack 0
 33655                           tosu	equ	0xFFF
 33656                           tosh	equ	0xFFE
 33657                           tosl	equ	0xFFD
 33658                           pclath	equ	0xFFA
 33659                           tblptru	equ	0xFF8
 33660                           tblptrh	equ	0xFF7
 33661                           tblptrl	equ	0xFF6
 33662                           tablat	equ	0xFF5
 33663                           prodh	equ	0xFF4
 33664                           prodl	equ	0xFF3
 33665                           intcon	equ	0xFF2
 33666                           intcon2	equ	0xFF1
 33667                           intcon3	equ	0xFF0
 33668                           indf0	equ	0xFEF
 33669                           postinc0	equ	0xFEE
 33670                           fsr0h	equ	0xFEA
 33671                           fsr0l	equ	0xFE9
 33672                           wreg	equ	0xFE8
 33673                           indf1	equ	0xFE7
 33674                           postdec1	equ	0xFE5
 33675                           plusw1	equ	0xFE3
 33676                           fsr1h	equ	0xFE2
 33677                           fsr1l	equ	0xFE1
 33678                           indf2	equ	0xFDF
 33679                           postinc2	equ	0xFDE
 33680                           postdec2	equ	0xFDD
 33681                           plusw2	equ	0xFDB
 33682                           fsr2h	equ	0xFDA
 33683                           fsr2l	equ	0xFD9
 33684                           status	equ	0xFD8
 33685                           
 33686 ;; *************** function _fat_find_file *****************
 33687 ;; Defined at:
 33688 ;;		line 250 in file "fat16.c"
 33689 ;; Parameters:    Size  Location     Type
 33690 ;;  name            2   48[COMRAM] PTR unsigned char 
 33691 ;;		 -> bootloader_filename(9), RAM(3759), 
 33692 ;;  extension       2   50[COMRAM] PTR unsigned char 
 33693 ;;		 -> bootloader_extension(4), RAM(3759), 
 33694 ;; Auto vars:     Size  Location     Type
 33695 ;;  buffer         11   52[COMRAM] unsigned char [11]
 33696 ;;  offset          2   66[COMRAM] unsigned int 
 33697 ;;  sector          2   64[COMRAM] unsigned int 
 33698 ;;  slot            1   63[COMRAM] unsigned char 
 33699 ;; Return value:  Size  Location     Type
 33700 ;;                  1    wreg      unsigned char 
 33701 ;; Registers used:
 33702 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33703 ;; Tracked objects:
 33704 ;;		On entry : 0/0
 33705 ;;		On exit  : 0/0
 33706 ;;		Unchanged: 0/0
 33707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33708 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33709 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33711 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33712 ;;Total ram usage:       20 bytes
 33713 ;; Hardware stack levels used:    1
 33714 ;; Hardware stack levels required when called:    7
 33715 ;; This function calls:
 33716 ;;		_flash_partial_read
 33717 ;;		_strncmp
 33718 ;; This function is called by:
 33719 ;;		_fat_create_file
 33720 ;;		__bootloader_find_file
 33721 ;;		__fill_buffer_find_file
 33722 ;; This function uses a non-reentrant model
 33723 ;;
 33724                           
 33725                           	psect	text171
 33726  0051A0                     __ptext171:
 33727                           	opt stack 0
 33728  0051A0                     _fat_find_file:
 33729                           	opt stack 21
 33730                           
 33731                           ;fat16.c: 252: uint8_t slot;;fat16.c: 253: uint16_t sector;;fat16.c: 254: uint16_t offse
      +                          t;;fat16.c: 255: uint8_t buffer[11];;fat16.c: 256: slot = 0;
 33732                           
 33733                           ;incstack = 0
 33734  0051A0  0E00               	movlw	0
 33735  0051A2  6E40               	movwf	fat_find_file@slot,c
 33736                           
 33737                           ;fat16.c: 257: for(sector = 18; sector <= 21; ++sector)
 33738  0051A4  0E00               	movlw	0
 33739  0051A6  6E42               	movwf	fat_find_file@sector+1,c
 33740  0051A8  0E12               	movlw	18
 33741  0051AA  6E41               	movwf	fat_find_file@sector,c
 33742  0051AC                     l10239:
 33743  0051AC  5042               	movf	fat_find_file@sector+1,w,c
 33744  0051AE  E156               	bnz	l10281
 33745  0051B0  0E16               	movlw	22
 33746  0051B2  5C41               	subwf	fat_find_file@sector,w,c
 33747  0051B4  B0D8               	btfsc	status,0,c
 33748  0051B6  D052               	goto	u7610
 33749                           
 33750                           ;fat16.c: 258: {;fat16.c: 259: for(offset = 0; offset<512; offset += 32)
 33751  0051B8  0E00               	movlw	0
 33752  0051BA  6E44               	movwf	fat_find_file@offset+1,c
 33753  0051BC  0E00               	movlw	0
 33754  0051BE  6E43               	movwf	fat_find_file@offset,c
 33755  0051C0                     l10245:
 33756  0051C0  0E02               	movlw	2
 33757  0051C2  5C44               	subwf	fat_find_file@offset+1,w,c
 33758  0051C4  B0D8               	btfsc	status,0,c
 33759  0051C6  D047               	goto	u7600
 33760                           
 33761                           ;fat16.c: 260: {;fat16.c: 261: flash_partial_read(sector, offset, 11, &buffer);
 33762  0051C8  C041  F029         	movff	fat_find_file@sector,flash_partial_read@page
 33763  0051CC  C042  F02A         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 33764  0051D0  C043  F02B         	movff	fat_find_file@offset,flash_partial_read@start
 33765  0051D4  C044  F02C         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 33766  0051D8  0E00               	movlw	0
 33767  0051DA  6E2E               	movwf	flash_partial_read@length+1,c
 33768  0051DC  0E0B               	movlw	11
 33769  0051DE  6E2D               	movwf	flash_partial_read@length,c
 33770  0051E0  0E35               	movlw	low fat_find_file@buffer
 33771  0051E2  6E2F               	movwf	flash_partial_read@data,c
 33772  0051E4  0E00               	movlw	high fat_find_file@buffer
 33773  0051E6  6E30               	movwf	flash_partial_read@data+1,c
 33774  0051E8  ECFE  F03A         	call	_flash_partial_read	;wreg free
 33775                           
 33776                           ;fat16.c: 262: if(buffer[0]==0x00)
 33777  0051EC  5035               	movf	fat_find_file@buffer,w,c
 33778  0051EE  A4D8               	btfss	status,2,c
 33779  0051F0  D002               	goto	l1824
 33780                           
 33781                           ;fat16.c: 263: {;fat16.c: 266: return 0xFF;
 33782  0051F2  0EFF               	movlw	255
 33783  0051F4  0012               	return	
 33784  0051F6                     l1824:
 33785                           
 33786                           ;fat16.c: 268: else if(buffer[0]==0xE5)
 33787  0051F6  0EE5               	movlw	229
 33788  0051F8  1835               	xorwf	fat_find_file@buffer,w,c
 33789  0051FA  B4D8               	btfsc	status,2,c
 33790  0051FC  D026               	goto	l1830
 33791                           
 33792                           ;fat16.c: 274: else;fat16.c: 275: {;fat16.c: 277: if(strncmp(name, &buffer[0], 8) == 0)
 33793                           
 33794                           ;fat16.c: 269: {;fat16.c: 273: }
 33795  0051FE  C031  F001         	movff	fat_find_file@name,strncmp@s1
 33796  005202  C032  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 33797  005206  0E35               	movlw	low fat_find_file@buffer
 33798  005208  6E03               	movwf	strncmp@s2,c
 33799  00520A  0E00               	movlw	high fat_find_file@buffer
 33800  00520C  6E04               	movwf	strncmp@s2+1,c
 33801  00520E  0E00               	movlw	0
 33802  005210  6E06               	movwf	strncmp@len+1,c
 33803  005212  0E08               	movlw	8
 33804  005214  6E05               	movwf	strncmp@len,c
 33805  005216  EC6F  F028         	call	_strncmp	;wreg free
 33806  00521A  5001               	movf	?_strncmp,w,c
 33807  00521C  1002               	iorwf	?_strncmp+1,w,c
 33808  00521E  A4D8               	btfss	status,2,c
 33809  005220  D014               	goto	l1830
 33810                           
 33811                           ;fat16.c: 278: {;fat16.c: 280: if(strncmp(extension, &buffer[8], 3) == 0)
 33812  005222  C033  F001         	movff	fat_find_file@extension,strncmp@s1
 33813  005226  C034  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 33814  00522A  0E3D               	movlw	low (fat_find_file@buffer+8)
 33815  00522C  6E03               	movwf	strncmp@s2,c
 33816  00522E  0E00               	movlw	high (fat_find_file@buffer+8)
 33817  005230  6E04               	movwf	strncmp@s2+1,c
 33818  005232  0E00               	movlw	0
 33819  005234  6E06               	movwf	strncmp@len+1,c
 33820  005236  0E03               	movlw	3
 33821  005238  6E05               	movwf	strncmp@len,c
 33822  00523A  EC6F  F028         	call	_strncmp	;wreg free
 33823  00523E  5001               	movf	?_strncmp,w,c
 33824  005240  1002               	iorwf	?_strncmp+1,w,c
 33825  005242  A4D8               	btfss	status,2,c
 33826  005244  D002               	goto	l1830
 33827                           
 33828                           ;fat16.c: 281: {;fat16.c: 284: return slot;
 33829  005246  5040               	movf	fat_find_file@slot,w,c
 33830  005248  0012               	return	
 33831  00524A                     l1830:
 33832                           
 33833                           ;fat16.c: 285: };fat16.c: 286: };fat16.c: 287: };fat16.c: 288: ++slot;
 33834  00524A  2A40               	incf	fat_find_file@slot,f,c
 33835  00524C  0E20               	movlw	32
 33836  00524E  2643               	addwf	fat_find_file@offset,f,c
 33837  005250  0E00               	movlw	0
 33838  005252  2244               	addwfc	fat_find_file@offset+1,f,c
 33839  005254  D7B5               	goto	l10245
 33840  005256                     u7600:
 33841  005256  4A41               	infsnz	fat_find_file@sector,f,c
 33842  005258  2A42               	incf	fat_find_file@sector+1,f,c
 33843  00525A  D7A8               	goto	l10239
 33844  00525C                     u7610:
 33845  00525C                     l10281:
 33846                           
 33847                           ;fat16.c: 289: };fat16.c: 290: };fat16.c: 291: return 0xFF;
 33848  00525C  0EFF               	movlw	255
 33849  00525E  0012               	return	
 33850  005260                     __end_of_fat_find_file:
 33851                           	opt stack 0
 33852                           tosu	equ	0xFFF
 33853                           tosh	equ	0xFFE
 33854                           tosl	equ	0xFFD
 33855                           pclath	equ	0xFFA
 33856                           tblptru	equ	0xFF8
 33857                           tblptrh	equ	0xFF7
 33858                           tblptrl	equ	0xFF6
 33859                           tablat	equ	0xFF5
 33860                           prodh	equ	0xFF4
 33861                           prodl	equ	0xFF3
 33862                           intcon	equ	0xFF2
 33863                           intcon2	equ	0xFF1
 33864                           intcon3	equ	0xFF0
 33865                           indf0	equ	0xFEF
 33866                           postinc0	equ	0xFEE
 33867                           fsr0h	equ	0xFEA
 33868                           fsr0l	equ	0xFE9
 33869                           wreg	equ	0xFE8
 33870                           indf1	equ	0xFE7
 33871                           postdec1	equ	0xFE5
 33872                           plusw1	equ	0xFE3
 33873                           fsr1h	equ	0xFE2
 33874                           fsr1l	equ	0xFE1
 33875                           indf2	equ	0xFDF
 33876                           postinc2	equ	0xFDE
 33877                           postdec2	equ	0xFDD
 33878                           plusw2	equ	0xFDB
 33879                           fsr2h	equ	0xFDA
 33880                           fsr2l	equ	0xFD9
 33881                           status	equ	0xFD8
 33882                           
 33883 ;; *************** function _strncmp *****************
 33884 ;; Defined at:
 33885 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 33886 ;; Parameters:    Size  Location     Type
 33887 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 33888 ;;		 -> bootloader_extension(4), bootloader_filename(9), RAM(3759), 
 33889 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 33890 ;;		 -> fat_find_file@buffer(11), 
 33891 ;;  len             2    4[COMRAM] unsigned int 
 33892 ;; Auto vars:     Size  Location     Type
 33893 ;;		None
 33894 ;; Return value:  Size  Location     Type
 33895 ;;                  2    0[COMRAM] int 
 33896 ;; Registers used:
 33897 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 33898 ;; Tracked objects:
 33899 ;;		On entry : 0/0
 33900 ;;		On exit  : 0/0
 33901 ;;		Unchanged: 0/0
 33902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33903 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33905 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33906 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33907 ;;Total ram usage:        9 bytes
 33908 ;; Hardware stack levels used:    1
 33909 ;; This function calls:
 33910 ;;		Nothing
 33911 ;; This function is called by:
 33912 ;;		_fat_find_file
 33913 ;; This function uses a non-reentrant model
 33914 ;;
 33915                           
 33916                           	psect	text172
 33917  0050DE                     __ptext172:
 33918                           	opt stack 0
 33919  0050DE                     _strncmp:
 33920                           	opt stack 27
 33921                           
 33922                           ;incstack = 0
 33923  0050DE  D053               	goto	l3367
 33924  0050E0                     l9775:
 33925  0050E0  C001  FFF6         	movff	strncmp@s1,tblptrl
 33926  0050E4  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 33927  0050E8  6AF8               	clrf	tblptru,c
 33928  0050EA  0E0E               	movlw	(high __ramtop+-1)
 33929  0050EC  64F7               	cpfsgt	tblptrh,c
 33930  0050EE  D003               	bra	u6797
 33931  0050F0  0008               	tblrd		*
 33932  0050F2  50F5               	movf	tablat,w,c
 33933  0050F4  D005               	bra	u6790
 33934  0050F6                     u6797:
 33935  0050F6  CFF6 FFE9          	movff	tblptrl,fsr0l
 33936  0050FA  CFF7 FFEA          	movff	tblptrh,fsr0h
 33937  0050FE  50EF               	movf	indf0,w,c
 33938  005100                     u6790:
 33939  005100  0900               	iorlw	0
 33940  005102  B4D8               	btfsc	status,2,c
 33941  005104  D019               	goto	u6810
 33942  005106  C003  FFD9         	movff	strncmp@s2,fsr2l
 33943  00510A  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 33944  00510E  50DF               	movf	indf2,w,c
 33945  005110  6E07               	movwf	??_strncmp& (0+255),c
 33946  005112  C001  FFF6         	movff	strncmp@s1,tblptrl
 33947  005116  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 33948  00511A  6AF8               	clrf	tblptru,c
 33949  00511C  0E0E               	movlw	(high __ramtop+-1)
 33950  00511E  64F7               	cpfsgt	tblptrh,c
 33951  005120  D003               	bra	u6817
 33952  005122  0008               	tblrd		*
 33953  005124  50F5               	movf	tablat,w,c
 33954  005126  D005               	bra	u6815
 33955  005128                     u6817:
 33956  005128  CFF6 FFE9          	movff	tblptrl,fsr0l
 33957  00512C  CFF7 FFEA          	movff	tblptrh,fsr0h
 33958  005130  50EF               	movf	indf0,w,c
 33959  005132                     u6815:
 33960  005132  1807               	xorwf	??_strncmp,w,c
 33961  005134  B4D8               	btfsc	status,2,c
 33962  005136  D023               	goto	l3369
 33963  005138                     u6810:
 33964  005138  C003  FFD9         	movff	strncmp@s2,fsr2l
 33965  00513C  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 33966  005140  50DF               	movf	indf2,w,c
 33967  005142  6E07               	movwf	??_strncmp& (0+255),c
 33968  005144  6A08               	clrf	(??_strncmp+1)& (0+255),c
 33969  005146  1E07               	comf	??_strncmp,f,c
 33970  005148  1E08               	comf	??_strncmp+1,f,c
 33971  00514A  4A07               	infsnz	??_strncmp,f,c
 33972  00514C  2A08               	incf	??_strncmp+1,f,c
 33973  00514E  C001  FFF6         	movff	strncmp@s1,tblptrl
 33974  005152  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 33975  005156  6AF8               	clrf	tblptru,c
 33976  005158  0E0E               	movlw	(high __ramtop+-1)
 33977  00515A  64F7               	cpfsgt	tblptrh,c
 33978  00515C  D003               	bra	u6827
 33979  00515E  0008               	tblrd		*
 33980  005160  50F5               	movf	tablat,w,c
 33981  005162  D005               	bra	u6820
 33982  005164                     u6827:
 33983  005164  CFF6 FFE9          	movff	tblptrl,fsr0l
 33984  005168  CFF7 FFEA          	movff	tblptrh,fsr0h
 33985  00516C  50EF               	movf	indf0,w,c
 33986  00516E                     u6820:
 33987  00516E  6E09               	movwf	(??_strncmp+2)& (0+255),c
 33988  005170  5009               	movf	??_strncmp+2,w,c
 33989  005172  2407               	addwf	??_strncmp,w,c
 33990  005174  6E01               	movwf	?_strncmp,c
 33991  005176  0E00               	movlw	0
 33992  005178  2008               	addwfc	??_strncmp+1,w,c
 33993  00517A  6E02               	movwf	?_strncmp+1,c
 33994  00517C  0012               	return	
 33995  00517E                     l3369:
 33996  00517E  4A01               	infsnz	strncmp@s1,f,c
 33997  005180  2A02               	incf	strncmp@s1+1,f,c
 33998  005182  4A03               	infsnz	strncmp@s2,f,c
 33999  005184  2A04               	incf	strncmp@s2+1,f,c
 34000  005186                     l3367:
 34001  005186  0605               	decf	strncmp@len,f,c
 34002  005188  A0D8               	btfss	status,0,c
 34003  00518A  0606               	decf	strncmp@len+1,f,c
 34004  00518C  2805               	incf	strncmp@len,w,c
 34005  00518E  E1A8               	bnz	l9775
 34006  005190  2806               	incf	strncmp@len+1,w,c
 34007  005192  A4D8               	btfss	status,2,c
 34008  005194  D7A5               	goto	l3368
 34009  005196  0E00               	movlw	0
 34010  005198  6E02               	movwf	?_strncmp+1,c
 34011  00519A  0E00               	movlw	0
 34012  00519C  6E01               	movwf	?_strncmp,c
 34013  00519E  0012               	return	
 34014  0051A0                     __end_of_strncmp:
 34015                           	opt stack 0
 34016                           tosu	equ	0xFFF
 34017                           tosh	equ	0xFFE
 34018                           tosl	equ	0xFFD
 34019                           pclath	equ	0xFFA
 34020                           tblptru	equ	0xFF8
 34021                           tblptrh	equ	0xFF7
 34022                           tblptrl	equ	0xFF6
 34023                           tablat	equ	0xFF5
 34024                           prodh	equ	0xFF4
 34025                           prodl	equ	0xFF3
 34026                           intcon	equ	0xFF2
 34027                           intcon2	equ	0xFF1
 34028                           intcon3	equ	0xFF0
 34029                           indf0	equ	0xFEF
 34030                           postinc0	equ	0xFEE
 34031                           fsr0h	equ	0xFEA
 34032                           fsr0l	equ	0xFE9
 34033                           wreg	equ	0xFE8
 34034                           indf1	equ	0xFE7
 34035                           postdec1	equ	0xFE5
 34036                           plusw1	equ	0xFE3
 34037                           fsr1h	equ	0xFE2
 34038                           fsr1l	equ	0xFE1
 34039                           indf2	equ	0xFDF
 34040                           postinc2	equ	0xFDE
 34041                           postdec2	equ	0xFDD
 34042                           plusw2	equ	0xFDB
 34043                           fsr2h	equ	0xFDA
 34044                           fsr2l	equ	0xFD9
 34045                           status	equ	0xFD8
 34046                           
 34047 ;; *************** function __get_available_root_entry *****************
 34048 ;; Defined at:
 34049 ;;		line 94 in file "fat16.c"
 34050 ;; Parameters:    Size  Location     Type
 34051 ;;		None
 34052 ;; Auto vars:     Size  Location     Type
 34053 ;;  file_number     1   55[COMRAM] unsigned char 
 34054 ;; Return value:  Size  Location     Type
 34055 ;;                  1    wreg      unsigned char 
 34056 ;; Registers used:
 34057 ;;		wreg, status,2, status,0, cstack
 34058 ;; Tracked objects:
 34059 ;;		On entry : 0/0
 34060 ;;		On exit  : 0/0
 34061 ;;		Unchanged: 0/0
 34062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34066 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34067 ;;Total ram usage:        1 bytes
 34068 ;; Hardware stack levels used:    1
 34069 ;; Hardware stack levels required when called:    8
 34070 ;; This function calls:
 34071 ;;		__root_is_available
 34072 ;; This function is called by:
 34073 ;;		_fat_create_file
 34074 ;; This function uses a non-reentrant model
 34075 ;;
 34076                           
 34077                           	psect	text173
 34078  00787C                     __ptext173:
 34079                           	opt stack 0
 34080  00787C                     __get_available_root_entry:
 34081                           	opt stack 17
 34082                           
 34083                           ;fat16.c: 96: uint8_t file_number;;fat16.c: 97: for(file_number=0; file_number<64; ++fil
      +                          e_number)
 34084                           
 34085                           ;incstack = 0
 34086  00787C  0E00               	movlw	0
 34087  00787E  6E38               	movwf	__get_available_root_entry@file_number,c
 34088  007880                     l10121:
 34089  007880  0E3F               	movlw	63
 34090  007882  6438               	cpfsgt	__get_available_root_entry@file_number,c
 34091  007884  D001               	goto	l1780
 34092  007886  D00A               	goto	u7430
 34093  007888                     l1780:
 34094                           
 34095                           ;fat16.c: 98: {;fat16.c: 99: if(_root_is_available(file_number))
 34096  007888  5038               	movf	__get_available_root_entry@file_number,w,c
 34097  00788A  EC38  F031         	call	__root_is_available
 34098  00788E  0900               	iorlw	0
 34099  007890  B4D8               	btfsc	status,2,c
 34100  007892  D002               	goto	l1782
 34101                           
 34102                           ;fat16.c: 100: {;fat16.c: 101: return file_number;
 34103  007894  5038               	movf	__get_available_root_entry@file_number,w,c
 34104  007896  0012               	return	
 34105  007898                     l1782:
 34106  007898  2A38               	incf	__get_available_root_entry@file_number,f,c
 34107  00789A  D7F2               	goto	l10121
 34108  00789C                     u7430:
 34109                           
 34110                           ;fat16.c: 102: };fat16.c: 103: };fat16.c: 104: return 0xFF;
 34111  00789C  0EFF               	movlw	255
 34112  00789E  0012               	return	
 34113  0078A0                     __end_of__get_available_root_entry:
 34114                           	opt stack 0
 34115                           tosu	equ	0xFFF
 34116                           tosh	equ	0xFFE
 34117                           tosl	equ	0xFFD
 34118                           pclath	equ	0xFFA
 34119                           tblptru	equ	0xFF8
 34120                           tblptrh	equ	0xFF7
 34121                           tblptrl	equ	0xFF6
 34122                           tablat	equ	0xFF5
 34123                           prodh	equ	0xFF4
 34124                           prodl	equ	0xFF3
 34125                           intcon	equ	0xFF2
 34126                           intcon2	equ	0xFF1
 34127                           intcon3	equ	0xFF0
 34128                           indf0	equ	0xFEF
 34129                           postinc0	equ	0xFEE
 34130                           fsr0h	equ	0xFEA
 34131                           fsr0l	equ	0xFE9
 34132                           wreg	equ	0xFE8
 34133                           indf1	equ	0xFE7
 34134                           postdec1	equ	0xFE5
 34135                           plusw1	equ	0xFE3
 34136                           fsr1h	equ	0xFE2
 34137                           fsr1l	equ	0xFE1
 34138                           indf2	equ	0xFDF
 34139                           postinc2	equ	0xFDE
 34140                           postdec2	equ	0xFDD
 34141                           plusw2	equ	0xFDB
 34142                           fsr2h	equ	0xFDA
 34143                           fsr2l	equ	0xFD9
 34144                           status	equ	0xFD8
 34145                           
 34146 ;; *************** function __parse_file_append *****************
 34147 ;; Defined at:
 34148 ;;		line 535 in file "api.c"
 34149 ;; Parameters:    Size  Location     Type
 34150 ;;  data            2   75[COMRAM] PTR unsigned char 
 34151 ;;		 -> RAM(3759), 
 34152 ;; Auto vars:     Size  Location     Type
 34153 ;;		None
 34154 ;; Return value:  Size  Location     Type
 34155 ;;                  1    wreg      unsigned char 
 34156 ;; Registers used:
 34157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34158 ;; Tracked objects:
 34159 ;;		On entry : 0/0
 34160 ;;		On exit  : 0/0
 34161 ;;		Unchanged: 0/0
 34162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34165 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34166 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34167 ;;Total ram usage:        3 bytes
 34168 ;; Hardware stack levels used:    1
 34169 ;; Hardware stack levels required when called:   10
 34170 ;; This function calls:
 34171 ;;		_fat_append_to_file
 34172 ;; This function is called by:
 34173 ;;		__parse_command_long
 34174 ;; This function uses a non-reentrant model
 34175 ;;
 34176                           
 34177                           	psect	text174
 34178  005F8A                     __ptext174:
 34179                           	opt stack 0
 34180  005F8A                     __parse_file_append:
 34181                           	opt stack 17
 34182                           
 34183                           ;api.c: 538: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 34184                           
 34185                           ;incstack = 0
 34186  005F8A  C04C  FFD9         	movff	__parse_file_append@data,fsr2l
 34187  005F8E  C04D  FFDA         	movff	__parse_file_append@data+1,fsr2h
 34188  005F92  0E54               	movlw	84
 34189  005F94  18DE               	xorwf	postinc2,w,c
 34190  005F96  A4D8               	btfss	status,2,c
 34191  005F98  D014               	goto	u9020
 34192  005F9A  EE20 F003          	lfsr	2,3
 34193  005F9E  504C               	movf	__parse_file_append@data,w,c
 34194  005FA0  26D9               	addwf	fsr2l,f,c
 34195  005FA2  504D               	movf	__parse_file_append@data+1,w,c
 34196  005FA4  22DA               	addwfc	fsr2h,f,c
 34197  005FA6  0EFE               	movlw	254
 34198  005FA8  18DE               	xorwf	postinc2,w,c
 34199  005FAA  A4D8               	btfss	status,2,c
 34200  005FAC  D00A               	goto	u9020
 34201  005FAE  EE20 F004          	lfsr	2,4
 34202  005FB2  504C               	movf	__parse_file_append@data,w,c
 34203  005FB4  26D9               	addwf	fsr2l,f,c
 34204  005FB6  504D               	movf	__parse_file_append@data+1,w,c
 34205  005FB8  22DA               	addwfc	fsr2h,f,c
 34206  005FBA  0E4B               	movlw	75
 34207  005FBC  18DE               	xorwf	postinc2,w,c
 34208  005FBE  B4D8               	btfsc	status,2,c
 34209  005FC0  D002               	goto	l2528
 34210  005FC2                     u9020:
 34211                           
 34212                           ;api.c: 539: {;api.c: 540: return 15;
 34213  005FC2  0E0F               	movlw	15
 34214  005FC4  0012               	return	
 34215  005FC6                     l2528:
 34216                           
 34217                           ;api.c: 541: };api.c: 544: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 34218  005FC6  EE20 F002          	lfsr	2,2
 34219  005FCA  504C               	movf	__parse_file_append@data,w,c
 34220  005FCC  26D9               	addwf	fsr2l,f,c
 34221  005FCE  504D               	movf	__parse_file_append@data+1,w,c
 34222  005FD0  22DA               	addwfc	fsr2h,f,c
 34223  005FD2  50DF               	movf	indf2,w,c
 34224  005FD4  6E4E               	movwf	??__parse_file_append& (0+255),c
 34225  005FD6  504E               	movf	??__parse_file_append,w,c
 34226  005FD8  6E40               	movwf	fat_append_to_file@number_of_bytes,c
 34227  005FDA  6A41               	clrf	fat_append_to_file@number_of_bytes+1,c
 34228  005FDC  0E05               	movlw	5
 34229  005FDE  244C               	addwf	__parse_file_append@data,w,c
 34230  005FE0  6E42               	movwf	fat_append_to_file@data,c
 34231  005FE2  0E00               	movlw	0
 34232  005FE4  204D               	addwfc	__parse_file_append@data+1,w,c
 34233  005FE6  6E43               	movwf	fat_append_to_file@data+1,c
 34234  005FE8  EE20 F001          	lfsr	2,1
 34235  005FEC  504C               	movf	__parse_file_append@data,w,c
 34236  005FEE  26D9               	addwf	fsr2l,f,c
 34237  005FF0  504D               	movf	__parse_file_append@data+1,w,c
 34238  005FF2  22DA               	addwfc	fsr2h,f,c
 34239  005FF4  50DF               	movf	indf2,w,c
 34240  005FF6  EC8B  F010         	call	_fat_append_to_file
 34241                           
 34242                           ;api.c: 545: return data[2] + 5;
 34243  005FFA  EE20 F002          	lfsr	2,2
 34244  005FFE  504C               	movf	__parse_file_append@data,w,c
 34245  006000  26D9               	addwf	fsr2l,f,c
 34246  006002  504D               	movf	__parse_file_append@data+1,w,c
 34247  006004  22DA               	addwfc	fsr2h,f,c
 34248  006006  50DF               	movf	indf2,w,c
 34249  006008  0F05               	addlw	5
 34250  00600A  0012               	return	
 34251  00600C                     __end_of__parse_file_append:
 34252                           	opt stack 0
 34253                           tosu	equ	0xFFF
 34254                           tosh	equ	0xFFE
 34255                           tosl	equ	0xFFD
 34256                           pclath	equ	0xFFA
 34257                           tblptru	equ	0xFF8
 34258                           tblptrh	equ	0xFF7
 34259                           tblptrl	equ	0xFF6
 34260                           tablat	equ	0xFF5
 34261                           prodh	equ	0xFF4
 34262                           prodl	equ	0xFF3
 34263                           intcon	equ	0xFF2
 34264                           intcon2	equ	0xFF1
 34265                           intcon3	equ	0xFF0
 34266                           indf0	equ	0xFEF
 34267                           postinc0	equ	0xFEE
 34268                           fsr0h	equ	0xFEA
 34269                           fsr0l	equ	0xFE9
 34270                           wreg	equ	0xFE8
 34271                           indf1	equ	0xFE7
 34272                           postdec1	equ	0xFE5
 34273                           plusw1	equ	0xFE3
 34274                           fsr1h	equ	0xFE2
 34275                           fsr1l	equ	0xFE1
 34276                           indf2	equ	0xFDF
 34277                           postinc2	equ	0xFDE
 34278                           postdec2	equ	0xFDD
 34279                           plusw2	equ	0xFDB
 34280                           fsr2h	equ	0xFDA
 34281                           fsr2l	equ	0xFD9
 34282                           status	equ	0xFD8
 34283                           
 34284 ;; *************** function _fat_append_to_file *****************
 34285 ;; Defined at:
 34286 ;;		line 448 in file "fat16.c"
 34287 ;; Parameters:    Size  Location     Type
 34288 ;;  file_number     1    wreg     unsigned char 
 34289 ;;  number_of_by    2   63[COMRAM] unsigned int 
 34290 ;;  data            2   65[COMRAM] PTR unsigned char 
 34291 ;;		 -> RAM(3759), 
 34292 ;; Auto vars:     Size  Location     Type
 34293 ;;  file_number     1   12[BANK0 ] unsigned char 
 34294 ;;  root           32   19[BANK0 ] struct .
 34295 ;;  position        4   15[BANK0 ] unsigned long 
 34296 ;;  file_size       4    2[BANK0 ] unsigned long 
 34297 ;;  length          2   13[BANK0 ] unsigned int 
 34298 ;;  offset          2   10[BANK0 ] unsigned int 
 34299 ;;  fat_cluster     2    8[BANK0 ] unsigned int 
 34300 ;;  new_cluster     2    6[BANK0 ] unsigned int 
 34301 ;;  sector          2    0[BANK0 ] unsigned int 
 34302 ;; Return value:  Size  Location     Type
 34303 ;;                  1    wreg      unsigned char 
 34304 ;; Registers used:
 34305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34306 ;; Tracked objects:
 34307 ;;		On entry : 0/0
 34308 ;;		On exit  : 0/0
 34309 ;;		Unchanged: 0/0
 34310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34312 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34313 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34314 ;;      Totals:        12      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34315 ;;Total ram usage:       63 bytes
 34316 ;; Hardware stack levels used:    1
 34317 ;; Hardware stack levels required when called:    9
 34318 ;; This function calls:
 34319 ;;		__get_empty_cluster
 34320 ;;		__read_fat
 34321 ;;		__root_is_available
 34322 ;;		__sector_from_cluster
 34323 ;;		__update_modified_time
 34324 ;;		__write_fat
 34325 ;;		__write_root
 34326 ;;		_fat_get_file_information
 34327 ;;		_flash_partial_write
 34328 ;; This function is called by:
 34329 ;;		__parse_file_append
 34330 ;; This function uses a non-reentrant model
 34331 ;;
 34332                           
 34333                           	psect	text175
 34334  002116                     __ptext175:
 34335                           	opt stack 0
 34336  002116                     _fat_append_to_file:
 34337                           	opt stack 17
 34338                           
 34339                           ;incstack = 0
 34340                           ;fat_append_to_file@file_number stored from wreg
 34341  002116  0100               	movlb	0	; () banked
 34342  002118  6FCA               	movwf	fat_append_to_file@file_number& (0+255),b
 34343                           
 34344                           ;fat16.c: 450: rootEntry_t root;;fat16.c: 451: uint32_t file_size;;fat16.c: 452: uint16_
      +                          t fat_cluster;;fat16.c: 453: uint16_t new_cluster;;fat16.c: 454: uint32_t position;;fat1
      +                          6.c: 455: uint16_t offset;;fat16.c: 456: uint16_t sector;;fat16.c: 457: uint16_t length;
      +                          ;fat16.c: 460: if(file_number>=64)
 34345  00211A  0E3F               	movlw	63
 34346  00211C  0100               	movlb	0	; () banked
 34347  00211E  65CA               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 34348  002120  D001               	goto	l1860
 34349  002122  0012               	return	
 34350  002124                     l1860:
 34351                           
 34352                           ; BSR set to: 0
 34353                           ;fat16.c: 464: };fat16.c: 467: if(_root_is_available(file_number))
 34354                           
 34355                           ; BSR set to: 0
 34356  002124  51CA               	movf	fat_append_to_file@file_number& (0+255),w,b
 34357  002126  EC38  F031         	call	__root_is_available
 34358  00212A  0900               	iorlw	0
 34359  00212C  A4D8               	btfss	status,2,c
 34360  00212E  0012               	return	
 34361                           
 34362                           ;fat16.c: 471: };fat16.c: 474: fat_get_file_information(file_number, &root);
 34363                           
 34364                           ;fat16.c: 468: {;fat16.c: 470: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 34365  002130  0ED1               	movlw	low fat_append_to_file@root
 34366  002132  6E38               	movwf	fat_get_file_information@data,c
 34367  002134  0E00               	movlw	high fat_append_to_file@root
 34368  002136  6E39               	movwf	fat_get_file_information@data+1,c
 34369  002138  0100               	movlb	0	; () banked
 34370  00213A  51CA               	movf	fat_append_to_file@file_number& (0+255),w,b
 34371  00213C  ECAD  F031         	call	_fat_get_file_information
 34372                           
 34373                           ;fat16.c: 475: file_size = root.fileSize;
 34374  002140  C0ED  F0C0         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 34375  002144  C0EE  F0C1         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 34376  002148  C0EF  F0C2         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 34377  00214C  C0F0  F0C3         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 34378                           
 34379                           ;fat16.c: 476: fat_cluster = root.firstCluster;
 34380  002150  C0EB  F0C6         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 34381  002154  C0EC  F0C7         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 34382                           
 34383                           ;fat16.c: 479: position = 0;
 34384  002158  0E00               	movlw	0
 34385  00215A  0100               	movlb	0	; () banked
 34386  00215C  6FCD               	movwf	fat_append_to_file@position& (0+255),b
 34387  00215E  0E00               	movlw	0
 34388  002160  6FCE               	movwf	(fat_append_to_file@position+1)& (0+255),b
 34389  002162  0E00               	movlw	0
 34390  002164  6FCF               	movwf	(fat_append_to_file@position+2)& (0+255),b
 34391  002166  0E00               	movlw	0
 34392  002168  6FD0               	movwf	(fat_append_to_file@position+3)& (0+255),b
 34393                           
 34394                           ;fat16.c: 480: while((file_size-position)>512)
 34395  00216A  D013               	goto	l1863
 34396  00216C                     l10867:
 34397                           
 34398                           ; BSR set to: 0
 34399                           ;fat16.c: 481: {;fat16.c: 482: fat_cluster = _read_fat(fat_cluster);
 34400  00216C  C0C6  F031         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 34401  002170  C0C7  F032         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 34402  002174  ECB1  F038         	call	__read_fat	;wreg free
 34403  002178  C031  F0C6         	movff	?__read_fat,fat_append_to_file@fat_cluster
 34404  00217C  C032  F0C7         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 34405                           
 34406                           ;fat16.c: 483: position += 512;
 34407  002180  0E00               	movlw	0
 34408  002182  0100               	movlb	0	; () banked
 34409  002184  27CD               	addwf	fat_append_to_file@position& (0+255),f,b
 34410  002186  0E02               	movlw	2
 34411  002188  23CE               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 34412  00218A  0E00               	movlw	0
 34413  00218C  23CF               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 34414  00218E  0E00               	movlw	0
 34415  002190  23D0               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 34416  002192                     l1863:
 34417                           
 34418                           ; BSR set to: 0
 34419                           
 34420                           ; BSR set to: 0
 34421  002192  C0CD  F044         	movff	fat_append_to_file@position,??_fat_append_to_file
 34422  002196  C0CE  F045         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 34423  00219A  C0CF  F046         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 34424  00219E  C0D0  F047         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 34425  0021A2  1E44               	comf	??_fat_append_to_file,f,c
 34426  0021A4  1E45               	comf	??_fat_append_to_file+1,f,c
 34427  0021A6  1E46               	comf	??_fat_append_to_file+2,f,c
 34428  0021A8  1E47               	comf	??_fat_append_to_file+3,f,c
 34429  0021AA  2A44               	incf	??_fat_append_to_file,f,c
 34430  0021AC  0E00               	movlw	0
 34431  0021AE  2245               	addwfc	??_fat_append_to_file+1,f,c
 34432  0021B0  2246               	addwfc	??_fat_append_to_file+2,f,c
 34433  0021B2  2247               	addwfc	??_fat_append_to_file+3,f,c
 34434  0021B4  51C0               	movf	fat_append_to_file@file_size& (0+255),w,b
 34435  0021B6  2444               	addwf	??_fat_append_to_file,w,c
 34436  0021B8  6E48               	movwf	(??_fat_append_to_file+4)& (0+255),c
 34437  0021BA  51C1               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 34438  0021BC  2045               	addwfc	??_fat_append_to_file+1,w,c
 34439  0021BE  6E49               	movwf	(??_fat_append_to_file+5)& (0+255),c
 34440  0021C0  51C2               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 34441  0021C2  2046               	addwfc	??_fat_append_to_file+2,w,c
 34442  0021C4  6E4A               	movwf	(??_fat_append_to_file+6)& (0+255),c
 34443  0021C6  51C3               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 34444  0021C8  2047               	addwfc	??_fat_append_to_file+3,w,c
 34445  0021CA  6E4B               	movwf	(??_fat_append_to_file+7)& (0+255),c
 34446  0021CC  504B               	movf	??_fat_append_to_file+7,w,c
 34447  0021CE  104A               	iorwf	??_fat_append_to_file+6,w,c
 34448  0021D0  E1CD               	bnz	l10867
 34449  0021D2  0448               	decf	??_fat_append_to_file+4,w,c
 34450  0021D4  0E02               	movlw	2
 34451  0021D6  5849               	subwfb	??_fat_append_to_file+5,w,c
 34452  0021D8  B0D8               	btfsc	status,0,c
 34453  0021DA  D7C8               	goto	l1864
 34454                           
 34455                           ; BSR set to: 0
 34456                           ;fat16.c: 484: };fat16.c: 487: offset = file_size - position;
 34457                           
 34458                           ; BSR set to: 0
 34459  0021DC  C0CD  F044         	movff	fat_append_to_file@position,??_fat_append_to_file
 34460  0021E0  C0CE  F045         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 34461  0021E4  1E44               	comf	??_fat_append_to_file,f,c
 34462  0021E6  1E45               	comf	??_fat_append_to_file+1,f,c
 34463  0021E8  4A44               	infsnz	??_fat_append_to_file,f,c
 34464  0021EA  2A45               	incf	??_fat_append_to_file+1,f,c
 34465  0021EC  51C0               	movf	fat_append_to_file@file_size& (0+255),w,b
 34466  0021EE  2444               	addwf	??_fat_append_to_file,w,c
 34467  0021F0  6FC8               	movwf	fat_append_to_file@offset& (0+255),b
 34468  0021F2  51C1               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 34469  0021F4  2045               	addwfc	??_fat_append_to_file+1,w,c
 34470  0021F6  6FC9               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 34471                           
 34472                           ; BSR set to: 0
 34473                           ;fat16.c: 490: position = 0;
 34474  0021F8  0E00               	movlw	0
 34475  0021FA  6FCD               	movwf	fat_append_to_file@position& (0+255),b
 34476  0021FC  0E00               	movlw	0
 34477  0021FE  6FCE               	movwf	(fat_append_to_file@position+1)& (0+255),b
 34478  002200  0E00               	movlw	0
 34479  002202  6FCF               	movwf	(fat_append_to_file@position+2)& (0+255),b
 34480  002204  0E00               	movlw	0
 34481  002206  6FD0               	movwf	(fat_append_to_file@position+3)& (0+255),b
 34482                           
 34483                           ;fat16.c: 491: while(position < number_of_bytes)
 34484  002208  D06F               	goto	l1866
 34485  00220A                     
 34486                           ; BSR set to: 0
 34487                           ;fat16.c: 492: {;fat16.c: 494: if(offset==512)
 34488                           
 34489                           ; BSR set to: 0
 34490  00220A  0E02               	movlw	2
 34491  00220C  19C9               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 34492  00220E  11C8               	iorwf	fat_append_to_file@offset& (0+255),w,b
 34493  002210  A4D8               	btfss	status,2,c
 34494  002212  D026               	goto	l1868
 34495                           
 34496                           ; BSR set to: 0
 34497                           ;fat16.c: 495: {;fat16.c: 498: new_cluster = _get_empty_cluster(0x0000);
 34498  002214  0E00               	movlw	0
 34499  002216  6E32               	movwf	__get_empty_cluster@first_cluster+1,c
 34500  002218  0E00               	movlw	0
 34501  00221A  6E31               	movwf	__get_empty_cluster@first_cluster,c
 34502  00221C  ECE7  F031         	call	__get_empty_cluster	;wreg free
 34503  002220  C031  F0C4         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 34504  002224  C032  F0C5         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 34505                           
 34506                           ;fat16.c: 500: _write_fat(fat_cluster, new_cluster);
 34507  002228  C0C6  F029         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 34508  00222C  C0C7  F02A         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 34509  002230  C0C4  F02B         	movff	fat_append_to_file@new_cluster,__write_fat@value
 34510  002234  C0C5  F02C         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 34511  002238  EC7A  F039         	call	__write_fat	;wreg free
 34512                           
 34513                           ;fat16.c: 502: _write_fat(new_cluster, 0xFFFF);
 34514  00223C  C0C4  F029         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 34515  002240  C0C5  F02A         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 34516  002244  0EFF               	movlw	255
 34517  002246  6E2C               	movwf	__write_fat@value+1,c
 34518  002248  682B               	setf	__write_fat@value,c
 34519  00224A  EC7A  F039         	call	__write_fat	;wreg free
 34520                           
 34521                           ;fat16.c: 504: fat_cluster = new_cluster;
 34522  00224E  C0C4  F0C6         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 34523  002252  C0C5  F0C7         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 34524                           
 34525                           ;fat16.c: 505: offset = 0;
 34526  002256  0E00               	movlw	0
 34527  002258  0100               	movlb	0	; () banked
 34528  00225A  6FC9               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 34529  00225C  0E00               	movlw	0
 34530  00225E  6FC8               	movwf	fat_append_to_file@offset& (0+255),b
 34531  002260                     l1868:
 34532                           
 34533                           ; BSR set to: 0
 34534                           ;fat16.c: 506: };fat16.c: 509: sector = _sector_from_cluster(fat_cluster);
 34535                           
 34536                           ; BSR set to: 0
 34537  002260  C0C6  F001         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 34538  002264  C0C7  F002         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 34539  002268  EC50  F03D         	call	__sector_from_cluster	;wreg free
 34540  00226C  C001  F0BE         	movff	?__sector_from_cluster,fat_append_to_file@sector
 34541  002270  C002  F0BF         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 34542                           
 34543                           ;fat16.c: 512: length = 512 - offset;
 34544  002274  C0C8  F044         	movff	fat_append_to_file@offset,??_fat_append_to_file
 34545  002278  C0C9  F045         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 34546  00227C  1E44               	comf	??_fat_append_to_file,f,c
 34547  00227E  1E45               	comf	??_fat_append_to_file+1,f,c
 34548  002280  4A44               	infsnz	??_fat_append_to_file,f,c
 34549  002282  2A45               	incf	??_fat_append_to_file+1,f,c
 34550  002284  0E00               	movlw	0
 34551  002286  2444               	addwf	??_fat_append_to_file,w,c
 34552  002288  0100               	movlb	0	; () banked
 34553  00228A  6FCB               	movwf	fat_append_to_file@length& (0+255),b
 34554  00228C  0E02               	movlw	2
 34555  00228E  2045               	addwfc	??_fat_append_to_file+1,w,c
 34556  002290  6FCC               	movwf	(fat_append_to_file@length+1)& (0+255),b
 34557                           
 34558                           ; BSR set to: 0
 34559                           ;fat16.c: 513: if(length>number_of_bytes)
 34560  002292  51CB               	movf	fat_append_to_file@length& (0+255),w,b
 34561  002294  5C40               	subwf	fat_append_to_file@number_of_bytes,w,c
 34562  002296  51CC               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 34563  002298  5841               	subwfb	fat_append_to_file@number_of_bytes+1,w,c
 34564  00229A  B0D8               	btfsc	status,0,c
 34565  00229C  D004               	goto	l1869
 34566                           
 34567                           ; BSR set to: 0
 34568                           ;fat16.c: 514: {;fat16.c: 515: length = number_of_bytes;
 34569  00229E  C040  F0CB         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 34570  0022A2  C041  F0CC         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 34571  0022A6                     l1869:
 34572                           
 34573                           ; BSR set to: 0
 34574                           ;fat16.c: 516: };fat16.c: 519: flash_partial_write(sector, offset, length, &data[positio
      +                          n]);
 34575                           
 34576                           ; BSR set to: 0
 34577  0022A6  C0BE  F020         	movff	fat_append_to_file@sector,flash_partial_write@page
 34578  0022AA  C0BF  F021         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 34579  0022AE  C0C8  F022         	movff	fat_append_to_file@offset,flash_partial_write@start
 34580  0022B2  C0C9  F023         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 34581  0022B6  C0CB  F024         	movff	fat_append_to_file@length,flash_partial_write@length
 34582  0022BA  C0CC  F025         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 34583  0022BE  51CD               	movf	fat_append_to_file@position& (0+255),w,b
 34584  0022C0  2442               	addwf	fat_append_to_file@data,w,c
 34585  0022C2  6E26               	movwf	flash_partial_write@data,c
 34586  0022C4  51CE               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 34587  0022C6  2043               	addwfc	fat_append_to_file@data+1,w,c
 34588  0022C8  6E27               	movwf	flash_partial_write@data+1,c
 34589  0022CA  EC92  F032         	call	_flash_partial_write	;wreg free
 34590                           
 34591                           ;fat16.c: 522: position += length;
 34592  0022CE  0100               	movlb	0	; () banked
 34593  0022D0  51CB               	movf	fat_append_to_file@length& (0+255),w,b
 34594  0022D2  27CD               	addwf	fat_append_to_file@position& (0+255),f,b
 34595  0022D4  51CC               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 34596  0022D6  23CE               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 34597  0022D8  0E00               	movlw	0
 34598  0022DA  23CF               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 34599  0022DC  0E00               	movlw	0
 34600  0022DE  23D0               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 34601                           
 34602                           ; BSR set to: 0
 34603                           ;fat16.c: 523: offset += length;
 34604  0022E0  51CB               	movf	fat_append_to_file@length& (0+255),w,b
 34605  0022E2  27C8               	addwf	fat_append_to_file@offset& (0+255),f,b
 34606  0022E4  51CC               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 34607  0022E6  23C9               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 34608  0022E8                     l1866:
 34609                           
 34610                           ; BSR set to: 0
 34611                           
 34612                           ; BSR set to: 0
 34613  0022E8  5040               	movf	fat_append_to_file@number_of_bytes,w,c
 34614  0022EA  6E44               	movwf	??_fat_append_to_file& (0+255),c
 34615  0022EC  5041               	movf	fat_append_to_file@number_of_bytes+1,w,c
 34616  0022EE  6E45               	movwf	(??_fat_append_to_file+1)& (0+255),c
 34617  0022F0  6A46               	clrf	(??_fat_append_to_file+2)& (0+255),c
 34618  0022F2  6A47               	clrf	(??_fat_append_to_file+3)& (0+255),c
 34619  0022F4  5044               	movf	??_fat_append_to_file,w,c
 34620  0022F6  5DCD               	subwf	fat_append_to_file@position& (0+255),w,b
 34621  0022F8  5045               	movf	??_fat_append_to_file+1,w,c
 34622  0022FA  59CE               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 34623  0022FC  5046               	movf	??_fat_append_to_file+2,w,c
 34624  0022FE  59CF               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 34625  002300  5047               	movf	??_fat_append_to_file+3,w,c
 34626  002302  59D0               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 34627  002304  A0D8               	btfss	status,0,c
 34628  002306  D781               	goto	l1867
 34629                           
 34630                           ; BSR set to: 0
 34631                           ;fat16.c: 524: };fat16.c: 528: root.fileSize += number_of_bytes;
 34632                           
 34633                           ; BSR set to: 0
 34634  002308  5040               	movf	fat_append_to_file@number_of_bytes,w,c
 34635  00230A  27ED               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 34636  00230C  5041               	movf	fat_append_to_file@number_of_bytes+1,w,c
 34637  00230E  23EE               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 34638  002310  0E00               	movlw	0
 34639  002312  23EF               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 34640  002314  0E00               	movlw	0
 34641  002316  23F0               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 34642                           
 34643                           ; BSR set to: 0
 34644                           ;fat16.c: 529: _update_modified_time(&root);
 34645  002318  0ED1               	movlw	low fat_append_to_file@root
 34646  00231A  6E05               	movwf	__update_modified_time@root,c
 34647  00231C  0E00               	movlw	high fat_append_to_file@root
 34648  00231E  6E06               	movwf	__update_modified_time@root+1,c
 34649  002320  ECE5  F03A         	call	__update_modified_time	;wreg free
 34650                           
 34651                           ;fat16.c: 530: _write_root(file_number, &root);
 34652  002324  0ED1               	movlw	low fat_append_to_file@root
 34653  002326  6E29               	movwf	__write_root@data,c
 34654  002328  0E00               	movlw	high fat_append_to_file@root
 34655  00232A  6E2A               	movwf	__write_root@data+1,c
 34656  00232C  0100               	movlb	0	; () banked
 34657  00232E  51CA               	movf	fat_append_to_file@file_number& (0+255),w,b
 34658  002330  EC1B  F036         	call	__write_root
 34659  002334  0012               	return	
 34660  002336                     __end_of_fat_append_to_file:
 34661                           	opt stack 0
 34662                           tosu	equ	0xFFF
 34663                           tosh	equ	0xFFE
 34664                           tosl	equ	0xFFD
 34665                           pclath	equ	0xFFA
 34666                           tblptru	equ	0xFF8
 34667                           tblptrh	equ	0xFF7
 34668                           tblptrl	equ	0xFF6
 34669                           tablat	equ	0xFF5
 34670                           prodh	equ	0xFF4
 34671                           prodl	equ	0xFF3
 34672                           intcon	equ	0xFF2
 34673                           intcon2	equ	0xFF1
 34674                           intcon3	equ	0xFF0
 34675                           indf0	equ	0xFEF
 34676                           postinc0	equ	0xFEE
 34677                           fsr0h	equ	0xFEA
 34678                           fsr0l	equ	0xFE9
 34679                           wreg	equ	0xFE8
 34680                           indf1	equ	0xFE7
 34681                           postdec1	equ	0xFE5
 34682                           plusw1	equ	0xFE3
 34683                           fsr1h	equ	0xFE2
 34684                           fsr1l	equ	0xFE1
 34685                           indf2	equ	0xFDF
 34686                           postinc2	equ	0xFDE
 34687                           postdec2	equ	0xFDD
 34688                           plusw2	equ	0xFDB
 34689                           fsr2h	equ	0xFDA
 34690                           fsr2l	equ	0xFD9
 34691                           status	equ	0xFD8
 34692                           
 34693 ;; *************** function _fat_get_file_information *****************
 34694 ;; Defined at:
 34695 ;;		line 1020 in file "fat16.c"
 34696 ;; Parameters:    Size  Location     Type
 34697 ;;  file_number     1    wreg     unsigned char 
 34698 ;;  data            2   55[COMRAM] PTR struct .
 34699 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), RAM(3759), 
 34700 ;; Auto vars:     Size  Location     Type
 34701 ;;  file_number     1   62[COMRAM] unsigned char 
 34702 ;;  offset          2   60[COMRAM] unsigned int 
 34703 ;;  root_sector     2   58[COMRAM] unsigned int 
 34704 ;; Return value:  Size  Location     Type
 34705 ;;                  1    wreg      unsigned char 
 34706 ;; Registers used:
 34707 ;;		wreg, status,2, status,0, cstack
 34708 ;; Tracked objects:
 34709 ;;		On entry : 0/0
 34710 ;;		On exit  : 0/0
 34711 ;;		Unchanged: 0/0
 34712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34714 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34716 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34717 ;;Total ram usage:        8 bytes
 34718 ;; Hardware stack levels used:    1
 34719 ;; Hardware stack levels required when called:    8
 34720 ;; This function calls:
 34721 ;;		__root_is_available
 34722 ;;		_flash_partial_read
 34723 ;; This function is called by:
 34724 ;;		_fat_append_to_file
 34725 ;;		_fat_rename_file
 34726 ;;		_fat_read_from_file
 34727 ;;		__fill_buffer_get_file_details
 34728 ;; This function uses a non-reentrant model
 34729 ;;
 34730                           
 34731                           	psect	text176
 34732  00635A                     __ptext176:
 34733                           	opt stack 0
 34734  00635A                     _fat_get_file_information:
 34735                           	opt stack 19
 34736                           
 34737                           ;incstack = 0
 34738                           ;fat_get_file_information@file_number stored from wreg
 34739  00635A  6E3F               	movwf	fat_get_file_information@file_number,c
 34740                           
 34741                           ;fat16.c: 1022: uint16_t root_sector;;fat16.c: 1023: uint16_t offset;;fat16.c: 1025: if(
      +                          file_number>=64)
 34742  00635C  0E3F               	movlw	63
 34743  00635E  643F               	cpfsgt	fat_get_file_information@file_number,c
 34744  006360  D002               	goto	l2052
 34745                           
 34746                           ;fat16.c: 1026: {;fat16.c: 1028: return 0x01;
 34747  006362  0E01               	movlw	1
 34748  006364  0012               	return	
 34749  006366                     l2052:
 34750                           
 34751                           ;fat16.c: 1029: };fat16.c: 1030: if(_root_is_available(file_number))
 34752  006366  503F               	movf	fat_get_file_information@file_number,w,c
 34753  006368  EC38  F031         	call	__root_is_available
 34754  00636C  0900               	iorlw	0
 34755  00636E  B4D8               	btfsc	status,2,c
 34756  006370  D002               	goto	l2054
 34757                           
 34758                           ;fat16.c: 1031: {;fat16.c: 1033: return 0x02;
 34759  006372  0E02               	movlw	2
 34760  006374  0012               	return	
 34761  006376                     l2054:
 34762                           
 34763                           ;fat16.c: 1034: };fat16.c: 1036: root_sector = (file_number >> 4) + 18;
 34764  006376  C03F  F03A         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 34765  00637A  3A3A               	swapf	??_fat_get_file_information,f,c
 34766  00637C  0E0F               	movlw	15
 34767  00637E  163A               	andwf	??_fat_get_file_information,f,c
 34768  006380  0E12               	movlw	18
 34769  006382  243A               	addwf	??_fat_get_file_information,w,c
 34770  006384  6E3B               	movwf	fat_get_file_information@root_sector,c
 34771  006386  6A3C               	clrf	fat_get_file_information@root_sector+1,c
 34772  006388  0E00               	movlw	0
 34773  00638A  223C               	addwfc	fat_get_file_information@root_sector+1,f,c
 34774                           
 34775                           ;fat16.c: 1037: offset = (file_number & 0b1111);
 34776  00638C  C03F  F03A         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 34777  006390  0E0F               	movlw	15
 34778  006392  163A               	andwf	??_fat_get_file_information,f,c
 34779  006394  503A               	movf	??_fat_get_file_information,w,c
 34780  006396  6E3D               	movwf	fat_get_file_information@offset,c
 34781  006398  6A3E               	clrf	fat_get_file_information@offset+1,c
 34782                           
 34783                           ;fat16.c: 1038: offset <<= 5;
 34784  00639A  0E05               	movlw	5
 34785  00639C                     u7645:
 34786  00639C  90D8               	bcf	status,0,c
 34787  00639E  363D               	rlcf	fat_get_file_information@offset,f,c
 34788  0063A0  363E               	rlcf	fat_get_file_information@offset+1,f,c
 34789  0063A2  2EE8               	decfsz	wreg,f,c
 34790  0063A4  D7FB               	goto	u7645
 34791                           
 34792                           ;fat16.c: 1039: flash_partial_read(root_sector, offset, 32, data);
 34793  0063A6  C03B  F029         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 34794  0063AA  C03C  F02A         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 34795  0063AE  C03D  F02B         	movff	fat_get_file_information@offset,flash_partial_read@start
 34796  0063B2  C03E  F02C         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 34797  0063B6  0E00               	movlw	0
 34798  0063B8  6E2E               	movwf	flash_partial_read@length+1,c
 34799  0063BA  0E20               	movlw	32
 34800  0063BC  6E2D               	movwf	flash_partial_read@length,c
 34801  0063BE  C038  F02F         	movff	fat_get_file_information@data,flash_partial_read@data
 34802  0063C2  C039  F030         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 34803  0063C6  ECFE  F03A         	call	_flash_partial_read	;wreg free
 34804                           
 34805                           ;fat16.c: 1042: return 0x00;
 34806  0063CA  0E00               	movlw	0
 34807  0063CC  0012               	return	
 34808  0063CE                     __end_of_fat_get_file_information:
 34809                           	opt stack 0
 34810                           tosu	equ	0xFFF
 34811                           tosh	equ	0xFFE
 34812                           tosl	equ	0xFFD
 34813                           pclath	equ	0xFFA
 34814                           tblptru	equ	0xFF8
 34815                           tblptrh	equ	0xFF7
 34816                           tblptrl	equ	0xFF6
 34817                           tablat	equ	0xFF5
 34818                           prodh	equ	0xFF4
 34819                           prodl	equ	0xFF3
 34820                           intcon	equ	0xFF2
 34821                           intcon2	equ	0xFF1
 34822                           intcon3	equ	0xFF0
 34823                           indf0	equ	0xFEF
 34824                           postinc0	equ	0xFEE
 34825                           fsr0h	equ	0xFEA
 34826                           fsr0l	equ	0xFE9
 34827                           wreg	equ	0xFE8
 34828                           indf1	equ	0xFE7
 34829                           postdec1	equ	0xFE5
 34830                           plusw1	equ	0xFE3
 34831                           fsr1h	equ	0xFE2
 34832                           fsr1l	equ	0xFE1
 34833                           indf2	equ	0xFDF
 34834                           postinc2	equ	0xFDE
 34835                           postdec2	equ	0xFDD
 34836                           plusw2	equ	0xFDB
 34837                           fsr2h	equ	0xFDA
 34838                           fsr2l	equ	0xFD9
 34839                           status	equ	0xFD8
 34840                           
 34841 ;; *************** function __root_is_available *****************
 34842 ;; Defined at:
 34843 ;;		line 59 in file "fat16.c"
 34844 ;; Parameters:    Size  Location     Type
 34845 ;;  file_number     1    wreg     unsigned char 
 34846 ;; Auto vars:     Size  Location     Type
 34847 ;;  file_number     1   53[COMRAM] unsigned char 
 34848 ;;  offset          2   51[COMRAM] unsigned int 
 34849 ;;  root_sector     2   49[COMRAM] unsigned int 
 34850 ;;  first_byte      1   54[COMRAM] unsigned char 
 34851 ;; Return value:  Size  Location     Type
 34852 ;;                  1    wreg      unsigned char 
 34853 ;; Registers used:
 34854 ;;		wreg, status,2, status,0, cstack
 34855 ;; Tracked objects:
 34856 ;;		On entry : 0/0
 34857 ;;		On exit  : 0/0
 34858 ;;		Unchanged: 0/0
 34859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34861 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34862 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34863 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34864 ;;Total ram usage:        7 bytes
 34865 ;; Hardware stack levels used:    1
 34866 ;; Hardware stack levels required when called:    7
 34867 ;; This function calls:
 34868 ;;		_flash_partial_read
 34869 ;; This function is called by:
 34870 ;;		__get_available_root_entry
 34871 ;;		_fat_delete_file
 34872 ;;		_fat_append_to_file
 34873 ;;		_fat_get_file_information
 34874 ;; This function uses a non-reentrant model
 34875 ;;
 34876                           
 34877                           	psect	text177
 34878  006270                     __ptext177:
 34879                           	opt stack 0
 34880  006270                     __root_is_available:
 34881                           	opt stack 19
 34882                           
 34883                           ;incstack = 0
 34884                           ;__root_is_available@file_number stored from wreg
 34885  006270  6E36               	movwf	__root_is_available@file_number,c
 34886                           
 34887                           ;fat16.c: 61: uint16_t root_sector;;fat16.c: 62: uint16_t offset;;fat16.c: 63: uint8_t f
      +                          irst_byte;;fat16.c: 67: if(file_number>=64)
 34888  006272  0E3F               	movlw	63
 34889  006274  6436               	cpfsgt	__root_is_available@file_number,c
 34890  006276  D002               	goto	l1772
 34891                           
 34892                           ;fat16.c: 68: {;fat16.c: 70: return 0;
 34893  006278  0E00               	movlw	0
 34894  00627A  0012               	return	
 34895  00627C                     l1772:
 34896                           
 34897                           ;fat16.c: 71: };fat16.c: 74: root_sector = (file_number >> 4) + 18;
 34898  00627C  C036  F031         	movff	__root_is_available@file_number,??__root_is_available
 34899  006280  3A31               	swapf	??__root_is_available,f,c
 34900  006282  0E0F               	movlw	15
 34901  006284  1631               	andwf	??__root_is_available,f,c
 34902  006286  0E12               	movlw	18
 34903  006288  2431               	addwf	??__root_is_available,w,c
 34904  00628A  6E32               	movwf	__root_is_available@root_sector,c
 34905  00628C  6A33               	clrf	__root_is_available@root_sector+1,c
 34906  00628E  0E00               	movlw	0
 34907  006290  2233               	addwfc	__root_is_available@root_sector+1,f,c
 34908                           
 34909                           ;fat16.c: 75: offset = (file_number & 0b1111);
 34910  006292  C036  F031         	movff	__root_is_available@file_number,??__root_is_available
 34911  006296  0E0F               	movlw	15
 34912  006298  1631               	andwf	??__root_is_available,f,c
 34913  00629A  5031               	movf	??__root_is_available,w,c
 34914  00629C  6E34               	movwf	__root_is_available@offset,c
 34915  00629E  6A35               	clrf	__root_is_available@offset+1,c
 34916                           
 34917                           ;fat16.c: 76: offset <<= 5;
 34918  0062A0  0E05               	movlw	5
 34919  0062A2                     u6765:
 34920  0062A2  90D8               	bcf	status,0,c
 34921  0062A4  3634               	rlcf	__root_is_available@offset,f,c
 34922  0062A6  3635               	rlcf	__root_is_available@offset+1,f,c
 34923  0062A8  2EE8               	decfsz	wreg,f,c
 34924  0062AA  D7FB               	goto	u6765
 34925                           
 34926                           ;fat16.c: 79: flash_partial_read(root_sector, offset, 1, &first_byte);
 34927  0062AC  C032  F029         	movff	__root_is_available@root_sector,flash_partial_read@page
 34928  0062B0  C033  F02A         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 34929  0062B4  C034  F02B         	movff	__root_is_available@offset,flash_partial_read@start
 34930  0062B8  C035  F02C         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 34931  0062BC  0E00               	movlw	0
 34932  0062BE  6E2E               	movwf	flash_partial_read@length+1,c
 34933  0062C0  0E01               	movlw	1
 34934  0062C2  6E2D               	movwf	flash_partial_read@length,c
 34935  0062C4  0E37               	movlw	low __root_is_available@first_byte
 34936  0062C6  6E2F               	movwf	flash_partial_read@data,c
 34937  0062C8  0E00               	movlw	high __root_is_available@first_byte
 34938  0062CA  6E30               	movwf	flash_partial_read@data+1,c
 34939  0062CC  ECFE  F03A         	call	_flash_partial_read	;wreg free
 34940                           
 34941                           ;fat16.c: 82: if((first_byte==0x00) || (first_byte==0xE5))
 34942  0062D0  5037               	movf	__root_is_available@first_byte,w,c
 34943  0062D2  B4D8               	btfsc	status,2,c
 34944  0062D4  D004               	goto	u6780
 34945  0062D6  0EE5               	movlw	229
 34946  0062D8  1837               	xorwf	__root_is_available@first_byte,w,c
 34947  0062DA  A4D8               	btfss	status,2,c
 34948  0062DC  D002               	goto	l1774
 34949  0062DE                     u6780:
 34950                           
 34951                           ;fat16.c: 83: {;fat16.c: 85: return 1;
 34952  0062DE  0E01               	movlw	1
 34953                           
 34954                           ;fat16.c: 86: }
 34955  0062E0  0012               	return	
 34956  0062E2                     l1774:
 34957                           
 34958                           ;fat16.c: 87: else;fat16.c: 88: {;fat16.c: 90: return 0;
 34959  0062E2  0E00               	movlw	0
 34960  0062E4  0012               	return	
 34961  0062E6                     __end_of__root_is_available:
 34962                           	opt stack 0
 34963                           tosu	equ	0xFFF
 34964                           tosh	equ	0xFFE
 34965                           tosl	equ	0xFFD
 34966                           pclath	equ	0xFFA
 34967                           tblptru	equ	0xFF8
 34968                           tblptrh	equ	0xFF7
 34969                           tblptrl	equ	0xFF6
 34970                           tablat	equ	0xFF5
 34971                           prodh	equ	0xFF4
 34972                           prodl	equ	0xFF3
 34973                           intcon	equ	0xFF2
 34974                           intcon2	equ	0xFF1
 34975                           intcon3	equ	0xFF0
 34976                           indf0	equ	0xFEF
 34977                           postinc0	equ	0xFEE
 34978                           fsr0h	equ	0xFEA
 34979                           fsr0l	equ	0xFE9
 34980                           wreg	equ	0xFE8
 34981                           indf1	equ	0xFE7
 34982                           postdec1	equ	0xFE5
 34983                           plusw1	equ	0xFE3
 34984                           fsr1h	equ	0xFE2
 34985                           fsr1l	equ	0xFE1
 34986                           indf2	equ	0xFDF
 34987                           postinc2	equ	0xFDE
 34988                           postdec2	equ	0xFDD
 34989                           plusw2	equ	0xFDB
 34990                           fsr2h	equ	0xFDA
 34991                           fsr2l	equ	0xFD9
 34992                           status	equ	0xFD8
 34993                           
 34994 ;; *************** function __write_root *****************
 34995 ;; Defined at:
 34996 ;;		line 182 in file "fat16.c"
 34997 ;; Parameters:    Size  Location     Type
 34998 ;;  slot            1    wreg     unsigned char 
 34999 ;;  data            2   40[COMRAM] PTR struct .
 35000 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 35001 ;; Auto vars:     Size  Location     Type
 35002 ;;  slot            1   47[COMRAM] unsigned char 
 35003 ;;  offset          2   45[COMRAM] unsigned int 
 35004 ;;  root_sector     2   43[COMRAM] unsigned int 
 35005 ;; Return value:  Size  Location     Type
 35006 ;;                  1    wreg      void 
 35007 ;; Registers used:
 35008 ;;		wreg, status,2, status,0, cstack
 35009 ;; Tracked objects:
 35010 ;;		On entry : 0/0
 35011 ;;		On exit  : 0/0
 35012 ;;		Unchanged: 0/0
 35013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35015 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35017 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35018 ;;Total ram usage:        8 bytes
 35019 ;; Hardware stack levels used:    1
 35020 ;; Hardware stack levels required when called:    6
 35021 ;; This function calls:
 35022 ;;		_flash_partial_write
 35023 ;; This function is called by:
 35024 ;;		_fat_create_file
 35025 ;;		_fat_append_to_file
 35026 ;;		_fat_rename_file
 35027 ;; This function uses a non-reentrant model
 35028 ;;
 35029                           
 35030                           	psect	text178
 35031  006C36                     __ptext178:
 35032                           	opt stack 0
 35033  006C36                     __write_root:
 35034                           	opt stack 19
 35035                           
 35036                           ;incstack = 0
 35037                           ;__write_root@slot stored from wreg
 35038  006C36  6E30               	movwf	__write_root@slot,c
 35039                           
 35040                           ;fat16.c: 184: uint16_t root_sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: root_s
      +                          ector = (slot >> 4) + 18;
 35041  006C38  C030  F02B         	movff	__write_root@slot,??__write_root
 35042  006C3C  3A2B               	swapf	??__write_root,f,c
 35043  006C3E  0E0F               	movlw	15
 35044  006C40  162B               	andwf	??__write_root,f,c
 35045  006C42  0E12               	movlw	18
 35046  006C44  242B               	addwf	??__write_root,w,c
 35047  006C46  6E2C               	movwf	__write_root@root_sector,c
 35048  006C48  6A2D               	clrf	__write_root@root_sector+1,c
 35049  006C4A  0E00               	movlw	0
 35050  006C4C  222D               	addwfc	__write_root@root_sector+1,f,c
 35051                           
 35052                           ;fat16.c: 187: offset = (slot & 0b1111);
 35053  006C4E  C030  F02B         	movff	__write_root@slot,??__write_root
 35054  006C52  0E0F               	movlw	15
 35055  006C54  162B               	andwf	??__write_root,f,c
 35056  006C56  502B               	movf	??__write_root,w,c
 35057  006C58  6E2E               	movwf	__write_root@offset,c
 35058  006C5A  6A2F               	clrf	__write_root@offset+1,c
 35059                           
 35060                           ;fat16.c: 188: offset <<= 5;
 35061  006C5C  0E05               	movlw	5
 35062  006C5E                     u7515:
 35063  006C5E  90D8               	bcf	status,0,c
 35064  006C60  362E               	rlcf	__write_root@offset,f,c
 35065  006C62  362F               	rlcf	__write_root@offset+1,f,c
 35066  006C64  2EE8               	decfsz	wreg,f,c
 35067  006C66  D7FB               	goto	u7515
 35068                           
 35069                           ;fat16.c: 189: flash_partial_write(root_sector, offset, 32, data);
 35070  006C68  C02C  F020         	movff	__write_root@root_sector,flash_partial_write@page
 35071  006C6C  C02D  F021         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 35072  006C70  C02E  F022         	movff	__write_root@offset,flash_partial_write@start
 35073  006C74  C02F  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 35074  006C78  0E00               	movlw	0
 35075  006C7A  6E25               	movwf	flash_partial_write@length+1,c
 35076  006C7C  0E20               	movlw	32
 35077  006C7E  6E24               	movwf	flash_partial_write@length,c
 35078  006C80  C029  F026         	movff	__write_root@data,flash_partial_write@data
 35079  006C84  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 35080  006C88  EC92  F032         	call	_flash_partial_write	;wreg free
 35081  006C8C  0012               	return		;funcret
 35082  006C8E                     __end_of__write_root:
 35083                           	opt stack 0
 35084                           tosu	equ	0xFFF
 35085                           tosh	equ	0xFFE
 35086                           tosl	equ	0xFFD
 35087                           pclath	equ	0xFFA
 35088                           tblptru	equ	0xFF8
 35089                           tblptrh	equ	0xFF7
 35090                           tblptrl	equ	0xFF6
 35091                           tablat	equ	0xFF5
 35092                           prodh	equ	0xFF4
 35093                           prodl	equ	0xFF3
 35094                           intcon	equ	0xFF2
 35095                           intcon2	equ	0xFF1
 35096                           intcon3	equ	0xFF0
 35097                           indf0	equ	0xFEF
 35098                           postinc0	equ	0xFEE
 35099                           fsr0h	equ	0xFEA
 35100                           fsr0l	equ	0xFE9
 35101                           wreg	equ	0xFE8
 35102                           indf1	equ	0xFE7
 35103                           postdec1	equ	0xFE5
 35104                           plusw1	equ	0xFE3
 35105                           fsr1h	equ	0xFE2
 35106                           fsr1l	equ	0xFE1
 35107                           indf2	equ	0xFDF
 35108                           postinc2	equ	0xFDE
 35109                           postdec2	equ	0xFDD
 35110                           plusw2	equ	0xFDB
 35111                           fsr2h	equ	0xFDA
 35112                           fsr2l	equ	0xFD9
 35113                           status	equ	0xFD8
 35114                           
 35115 ;; *************** function __write_fat *****************
 35116 ;; Defined at:
 35117 ;;		line 158 in file "fat16.c"
 35118 ;; Parameters:    Size  Location     Type
 35119 ;;  cluster         2   40[COMRAM] unsigned int 
 35120 ;;  value           2   42[COMRAM] unsigned int 
 35121 ;; Auto vars:     Size  Location     Type
 35122 ;;  offset          2   46[COMRAM] unsigned int 
 35123 ;;  fat_sector      2   44[COMRAM] unsigned int 
 35124 ;; Return value:  Size  Location     Type
 35125 ;;                  1    wreg      void 
 35126 ;; Registers used:
 35127 ;;		wreg, status,2, status,0, cstack
 35128 ;; Tracked objects:
 35129 ;;		On entry : 0/0
 35130 ;;		On exit  : 0/0
 35131 ;;		Unchanged: 0/0
 35132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35134 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35136 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35137 ;;Total ram usage:        8 bytes
 35138 ;; Hardware stack levels used:    1
 35139 ;; Hardware stack levels required when called:    6
 35140 ;; This function calls:
 35141 ;;		_flash_partial_write
 35142 ;; This function is called by:
 35143 ;;		_fat_create_file
 35144 ;;		_fat_delete_file
 35145 ;;		_fat_append_to_file
 35146 ;; This function uses a non-reentrant model
 35147 ;;
 35148                           
 35149                           	psect	text179
 35150  0072F4                     __ptext179:
 35151                           	opt stack 0
 35152  0072F4                     __write_fat:
 35153                           	opt stack 19
 35154                           
 35155                           ;fat16.c: 160: uint16_t fat_sector;;fat16.c: 161: uint16_t offset;;fat16.c: 162: fat_sec
      +                          tor = cluster>>8;
 35156                           
 35157                           ;incstack = 0
 35158  0072F4  502A               	movf	__write_fat@cluster+1,w,c
 35159  0072F6  6E2D               	movwf	__write_fat@fat_sector,c
 35160  0072F8  6A2E               	clrf	__write_fat@fat_sector+1,c
 35161                           
 35162                           ;fat16.c: 163: fat_sector += 2;
 35163  0072FA  0E02               	movlw	2
 35164  0072FC  262D               	addwf	__write_fat@fat_sector,f,c
 35165  0072FE  0E00               	movlw	0
 35166  007300  222E               	addwfc	__write_fat@fat_sector+1,f,c
 35167                           
 35168                           ;fat16.c: 164: offset = cluster & 0xFF;
 35169  007302  5029               	movf	__write_fat@cluster,w,c
 35170  007304  6E2F               	movwf	__write_fat@offset,c
 35171  007306  6A30               	clrf	__write_fat@offset+1,c
 35172                           
 35173                           ;fat16.c: 165: offset <<= 1;
 35174  007308  90D8               	bcf	status,0,c
 35175  00730A  362F               	rlcf	__write_fat@offset,f,c
 35176  00730C  3630               	rlcf	__write_fat@offset+1,f,c
 35177                           
 35178                           ;fat16.c: 166: flash_partial_write(fat_sector, offset, 2, &value);
 35179  00730E  C02D  F020         	movff	__write_fat@fat_sector,flash_partial_write@page
 35180  007312  C02E  F021         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 35181  007316  C02F  F022         	movff	__write_fat@offset,flash_partial_write@start
 35182  00731A  C030  F023         	movff	__write_fat@offset+1,flash_partial_write@start+1
 35183  00731E  0E00               	movlw	0
 35184  007320  6E25               	movwf	flash_partial_write@length+1,c
 35185  007322  0E02               	movlw	2
 35186  007324  6E24               	movwf	flash_partial_write@length,c
 35187  007326  0E2B               	movlw	low __write_fat@value
 35188  007328  6E26               	movwf	flash_partial_write@data,c
 35189  00732A  0E00               	movlw	high __write_fat@value
 35190  00732C  6E27               	movwf	flash_partial_write@data+1,c
 35191  00732E  EC92  F032         	call	_flash_partial_write	;wreg free
 35192  007332  0012               	return		;funcret
 35193  007334                     __end_of__write_fat:
 35194                           	opt stack 0
 35195                           tosu	equ	0xFFF
 35196                           tosh	equ	0xFFE
 35197                           tosl	equ	0xFFD
 35198                           pclath	equ	0xFFA
 35199                           tblptru	equ	0xFF8
 35200                           tblptrh	equ	0xFF7
 35201                           tblptrl	equ	0xFF6
 35202                           tablat	equ	0xFF5
 35203                           prodh	equ	0xFF4
 35204                           prodl	equ	0xFF3
 35205                           intcon	equ	0xFF2
 35206                           intcon2	equ	0xFF1
 35207                           intcon3	equ	0xFF0
 35208                           indf0	equ	0xFEF
 35209                           postinc0	equ	0xFEE
 35210                           fsr0h	equ	0xFEA
 35211                           fsr0l	equ	0xFE9
 35212                           wreg	equ	0xFE8
 35213                           indf1	equ	0xFE7
 35214                           postdec1	equ	0xFE5
 35215                           plusw1	equ	0xFE3
 35216                           fsr1h	equ	0xFE2
 35217                           fsr1l	equ	0xFE1
 35218                           indf2	equ	0xFDF
 35219                           postinc2	equ	0xFDE
 35220                           postdec2	equ	0xFDD
 35221                           plusw2	equ	0xFDB
 35222                           fsr2h	equ	0xFDA
 35223                           fsr2l	equ	0xFD9
 35224                           status	equ	0xFD8
 35225                           
 35226 ;; *************** function _flash_partial_write *****************
 35227 ;; Defined at:
 35228 ;;		line 467 in file "flash.c"
 35229 ;; Parameters:    Size  Location     Type
 35230 ;;  page            2   31[COMRAM] unsigned int 
 35231 ;;  start           2   33[COMRAM] unsigned int 
 35232 ;;  length          2   35[COMRAM] unsigned int 
 35233 ;;  data            2   37[COMRAM] PTR unsigned char 
 35234 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), _write_file_size@new_file
      +_size(4), 
 35235 ;;		 -> _delete_root@deleted_value(1), _write_fat@value(2), RAM(3759), 
 35236 ;; Auto vars:     Size  Location     Type
 35237 ;;  match           1   39[COMRAM] enum E6878
 35238 ;; Return value:  Size  Location     Type
 35239 ;;                  1    wreg      void 
 35240 ;; Registers used:
 35241 ;;		wreg, status,2, status,0, cstack
 35242 ;; Tracked objects:
 35243 ;;		On entry : 0/0
 35244 ;;		On exit  : 0/0
 35245 ;;		Unchanged: 0/0
 35246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35247 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35250 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35251 ;;Total ram usage:        9 bytes
 35252 ;; Hardware stack levels used:    1
 35253 ;; Hardware stack levels required when called:    5
 35254 ;; This function calls:
 35255 ;;		__flash_compare_page_to_buffer
 35256 ;;		__flash_copy_page_to_buffer
 35257 ;;		__flash_write_page_from_buffer
 35258 ;;		__flash_write_to_buffer
 35259 ;;		_flash_is_busy
 35260 ;;		_spi_set_configuration
 35261 ;; This function is called by:
 35262 ;;		__write_fat
 35263 ;;		__write_root
 35264 ;;		__delete_root
 35265 ;;		_fat_append_to_file
 35266 ;;		__write_file_size
 35267 ;; This function uses a non-reentrant model
 35268 ;;
 35269                           
 35270                           	psect	text180
 35271  006524                     __ptext180:
 35272                           	opt stack 0
 35273  006524                     _flash_partial_write:
 35274                           	opt stack 19
 35275                           
 35276                           ;flash.c: 469: flashMatchResult_t match;;flash.c: 472: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 35277                           
 35278                           ;incstack = 0
 35279  006524  0E00               	movlw	0
 35280  006526  ECE8  F03C         	call	_spi_set_configuration
 35281  00652A  ECFF  F03C         	call	_flash_is_busy	;wreg free
 35282  00652E  0900               	iorlw	0
 35283  006530  A4D8               	btfss	status,2,c
 35284  006532  D7FB               	goto	l1704
 35285                           
 35286                           ;flash.c: 478: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 35287  006534  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 35288  006538  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 35289  00653C  0E00               	movlw	0
 35290  00653E  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 35291  006540  EC73  F036         	call	__flash_copy_page_to_buffer	;wreg free
 35292                           
 35293                           ;flash.c: 481: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 35294  006544  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 35295  006548  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 35296  00654C  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 35297  006550  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 35298  006554  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 35299  006558  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 35300  00655C  0E00               	movlw	0
 35301  00655E  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 35302  006560  EC1A  F038         	call	__flash_write_to_buffer	;wreg free
 35303                           
 35304                           ;flash.c: 484: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 35305  006564  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 35306  006568  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 35307  00656C  0E00               	movlw	0
 35308  00656E  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 35309  006570  ECC0  F030         	call	__flash_compare_page_to_buffer	;wreg free
 35310  006574  6E28               	movwf	flash_partial_write@match,c
 35311                           
 35312                           ;flash.c: 487: if(match==DATA_DOES_NOT_MATCH)
 35313  006576  0428               	decf	flash_partial_write@match,w,c
 35314  006578  A4D8               	btfss	status,2,c
 35315  00657A  D008               	goto	l1706
 35316                           
 35317                           ;flash.c: 488: {;flash.c: 489: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 35318  00657C  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 35319  006580  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 35320  006584  0E00               	movlw	0
 35321  006586  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 35322  006588  EC47  F036         	call	__flash_write_page_from_buffer	;wreg free
 35323  00658C                     l1706:
 35324                           
 35325                           ;flash.c: 490: };flash.c: 493: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 35326  00658C  0E01               	movlw	1
 35327  00658E  ECE8  F03C         	call	_spi_set_configuration
 35328  006592  0012               	return		;funcret
 35329  006594                     __end_of_flash_partial_write:
 35330                           	opt stack 0
 35331                           tosu	equ	0xFFF
 35332                           tosh	equ	0xFFE
 35333                           tosl	equ	0xFFD
 35334                           pclath	equ	0xFFA
 35335                           tblptru	equ	0xFF8
 35336                           tblptrh	equ	0xFF7
 35337                           tblptrl	equ	0xFF6
 35338                           tablat	equ	0xFF5
 35339                           prodh	equ	0xFF4
 35340                           prodl	equ	0xFF3
 35341                           intcon	equ	0xFF2
 35342                           intcon2	equ	0xFF1
 35343                           intcon3	equ	0xFF0
 35344                           indf0	equ	0xFEF
 35345                           postinc0	equ	0xFEE
 35346                           fsr0h	equ	0xFEA
 35347                           fsr0l	equ	0xFE9
 35348                           wreg	equ	0xFE8
 35349                           indf1	equ	0xFE7
 35350                           postdec1	equ	0xFE5
 35351                           plusw1	equ	0xFE3
 35352                           fsr1h	equ	0xFE2
 35353                           fsr1l	equ	0xFE1
 35354                           indf2	equ	0xFDF
 35355                           postinc2	equ	0xFDE
 35356                           postdec2	equ	0xFDD
 35357                           plusw2	equ	0xFDB
 35358                           fsr2h	equ	0xFDA
 35359                           fsr2l	equ	0xFD9
 35360                           status	equ	0xFD8
 35361                           
 35362 ;; *************** function __flash_write_to_buffer *****************
 35363 ;; Defined at:
 35364 ;;		line 232 in file "flash.c"
 35365 ;; Parameters:    Size  Location     Type
 35366 ;;  start           2   19[COMRAM] unsigned int 
 35367 ;;  data            2   21[COMRAM] PTR unsigned char 
 35368 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 35369 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 35370 ;;		 -> RAM(3759), 
 35371 ;;  data_length     2   23[COMRAM] unsigned int 
 35372 ;;  buffer          1   25[COMRAM] enum E6874
 35373 ;; Auto vars:     Size  Location     Type
 35374 ;;  command         4   26[COMRAM] unsigned char [4]
 35375 ;; Return value:  Size  Location     Type
 35376 ;;                  1    wreg      void 
 35377 ;; Registers used:
 35378 ;;		wreg, status,2, status,0, cstack
 35379 ;; Tracked objects:
 35380 ;;		On entry : 0/0
 35381 ;;		On exit  : 0/0
 35382 ;;		Unchanged: 0/0
 35383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35384 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35385 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35387 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35388 ;;Total ram usage:       11 bytes
 35389 ;; Hardware stack levels used:    1
 35390 ;; Hardware stack levels required when called:    4
 35391 ;; This function calls:
 35392 ;;		__flash_is_busy
 35393 ;;		_spi_tx_tx
 35394 ;; This function is called by:
 35395 ;;		_flash_page_write
 35396 ;;		_flash_partial_write
 35397 ;; This function uses a non-reentrant model
 35398 ;;
 35399                           
 35400                           	psect	text181
 35401  007034                     __ptext181:
 35402                           	opt stack 0
 35403  007034                     __flash_write_to_buffer:
 35404                           	opt stack 22
 35405                           
 35406                           ;flash.c: 234: uint8_t command[4];;flash.c: 237: while(_flash_is_busy());
 35407                           
 35408                           ;incstack = 0
 35409  007034  EC83  F03C         	call	__flash_is_busy	;wreg free
 35410  007038  0900               	iorlw	0
 35411  00703A  A4D8               	btfss	status,2,c
 35412  00703C  D7FB               	goto	__flash_write_to_buffer
 35413                           
 35414                           ;flash.c: 240: if(buffer==FLASH_BUFFER_1)
 35415  00703E  501A               	movf	__flash_write_to_buffer@buffer,w,c
 35416  007040  A4D8               	btfss	status,2,c
 35417  007042  D002               	goto	l1645
 35418                           
 35419                           ;flash.c: 241: command[0] = 0x84;
 35420  007044  0E84               	movlw	132
 35421  007046  6E1B               	movwf	__flash_write_to_buffer@command,c
 35422  007048                     l1645:
 35423                           
 35424                           ;flash.c: 242: if(buffer==FLASH_BUFFER_2)
 35425  007048  041A               	decf	__flash_write_to_buffer@buffer,w,c
 35426  00704A  A4D8               	btfss	status,2,c
 35427  00704C  D002               	goto	l1646
 35428                           
 35429                           ;flash.c: 243: command[0] = 0x87;
 35430  00704E  0E87               	movlw	135
 35431  007050  6E1B               	movwf	__flash_write_to_buffer@command,c
 35432  007052                     l1646:
 35433                           
 35434                           ;flash.c: 245: command[1] = 0x00;
 35435  007052  0E00               	movlw	0
 35436  007054  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 35437                           
 35438                           ;flash.c: 246: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 35439  007056  5015               	movf	__flash_write_to_buffer@start+1,w,c
 35440  007058  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 35441                           
 35442                           ;flash.c: 247: command[3] = ((unsigned char)((start)&0xFF));
 35443  00705A  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 35444                           
 35445                           ;flash.c: 250: spi_tx_tx(command, 4, data, data_length);
 35446  00705E  0E1B               	movlw	low __flash_write_to_buffer@command
 35447  007060  6E01               	movwf	spi_tx_tx@command,c
 35448  007062  0E00               	movlw	high __flash_write_to_buffer@command
 35449  007064  6E02               	movwf	spi_tx_tx@command+1,c
 35450  007066  0E00               	movlw	0
 35451  007068  6E04               	movwf	spi_tx_tx@command_length+1,c
 35452  00706A  0E04               	movlw	4
 35453  00706C  6E03               	movwf	spi_tx_tx@command_length,c
 35454  00706E  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 35455  007072  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 35456  007076  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 35457  00707A  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 35458  00707E  ECE2  F02D         	call	_spi_tx_tx	;wreg free
 35459  007082  0012               	return		;funcret
 35460  007084                     __end_of__flash_write_to_buffer:
 35461                           	opt stack 0
 35462                           tosu	equ	0xFFF
 35463                           tosh	equ	0xFFE
 35464                           tosl	equ	0xFFD
 35465                           pclath	equ	0xFFA
 35466                           tblptru	equ	0xFF8
 35467                           tblptrh	equ	0xFF7
 35468                           tblptrl	equ	0xFF6
 35469                           tablat	equ	0xFF5
 35470                           prodh	equ	0xFF4
 35471                           prodl	equ	0xFF3
 35472                           intcon	equ	0xFF2
 35473                           intcon2	equ	0xFF1
 35474                           intcon3	equ	0xFF0
 35475                           indf0	equ	0xFEF
 35476                           postinc0	equ	0xFEE
 35477                           fsr0h	equ	0xFEA
 35478                           fsr0l	equ	0xFE9
 35479                           wreg	equ	0xFE8
 35480                           indf1	equ	0xFE7
 35481                           postdec1	equ	0xFE5
 35482                           plusw1	equ	0xFE3
 35483                           fsr1h	equ	0xFE2
 35484                           fsr1l	equ	0xFE1
 35485                           indf2	equ	0xFDF
 35486                           postinc2	equ	0xFDE
 35487                           postdec2	equ	0xFDD
 35488                           plusw2	equ	0xFDB
 35489                           fsr2h	equ	0xFDA
 35490                           fsr2l	equ	0xFD9
 35491                           status	equ	0xFD8
 35492                           
 35493 ;; *************** function _spi_tx_tx *****************
 35494 ;; Defined at:
 35495 ;;		line 192 in file "spi.c"
 35496 ;; Parameters:    Size  Location     Type
 35497 ;;  command         2    0[COMRAM] PTR unsigned char 
 35498 ;;		 -> _flash_write_to_buffer@command(4), 
 35499 ;;  command_leng    2    2[COMRAM] unsigned int 
 35500 ;;  data            2    4[COMRAM] PTR unsigned char 
 35501 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 35502 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 35503 ;;		 -> RAM(3759), 
 35504 ;;  data_length     2    6[COMRAM] unsigned int 
 35505 ;; Auto vars:     Size  Location     Type
 35506 ;;		None
 35507 ;; Return value:  Size  Location     Type
 35508 ;;                  1    wreg      void 
 35509 ;; Registers used:
 35510 ;;		wreg, status,2, status,0, cstack
 35511 ;; Tracked objects:
 35512 ;;		On entry : 0/0
 35513 ;;		On exit  : 0/0
 35514 ;;		Unchanged: 0/0
 35515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35516 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35518 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35519 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35520 ;;Total ram usage:       12 bytes
 35521 ;; Hardware stack levels used:    1
 35522 ;; Hardware stack levels required when called:    1
 35523 ;; This function calls:
 35524 ;;		__switch_mastermode
 35525 ;; This function is called by:
 35526 ;;		__flash_write_to_buffer
 35527 ;; This function uses a non-reentrant model
 35528 ;;
 35529                           
 35530                           	psect	text182
 35531  005BC4                     __ptext182:
 35532                           	opt stack 0
 35533  005BC4                     _spi_tx_tx:
 35534                           	opt stack 24
 35535                           
 35536                           ;spi.c: 195: _switch_mastermode();
 35537                           
 35538                           ;incstack = 0
 35539  005BC4  ECBC  F03D         	call	__switch_mastermode	;wreg free
 35540                           
 35541                           ;spi.c: 198: DMACON1bits.SSCON1 = 0;
 35542  005BC8  9E88               	bcf	3976,7,c	;volatile
 35543                           
 35544                           ;spi.c: 199: DMACON1bits.SSCON0 = 0;
 35545  005BCA  9C88               	bcf	3976,6,c	;volatile
 35546                           
 35547                           ;spi.c: 201: DMACON1bits.TXINC = 1;
 35548  005BCC  8A88               	bsf	3976,5,c	;volatile
 35549                           
 35550                           ;spi.c: 203: DMACON1bits.RXINC = 0;
 35551  005BCE  9888               	bcf	3976,4,c	;volatile
 35552                           
 35553                           ;spi.c: 205: DMACON1bits.DUPLEX1 = 0;
 35554  005BD0  9688               	bcf	3976,3,c	;volatile
 35555                           
 35556                           ;spi.c: 206: DMACON1bits.DUPLEX0 = 1;
 35557  005BD2  8488               	bsf	3976,2,c	;volatile
 35558                           
 35559                           ;spi.c: 208: DMACON1bits.DLYINTEN = 0;
 35560  005BD4  9288               	bcf	3976,1,c	;volatile
 35561                           
 35562                           ;spi.c: 210: DMACON2bits.DLYCYC = 0b0000;
 35563  005BD6  9886               	bcf	3974,4,c	;volatile
 35564  005BD8  9A86               	bcf	3974,5,c	;volatile
 35565  005BDA  9C86               	bcf	3974,6,c	;volatile
 35566  005BDC  9E86               	bcf	3974,7,c	;volatile
 35567                           
 35568                           ;spi.c: 212: DMACON2bits.INTLVL = 0b0000;
 35569  005BDE  9086               	bcf	3974,0,c	;volatile
 35570  005BE0  9286               	bcf	3974,1,c	;volatile
 35571  005BE2  9486               	bcf	3974,2,c	;volatile
 35572  005BE4  9686               	bcf	3974,3,c	;volatile
 35573                           
 35574                           ;spi.c: 215: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 35575  005BE6  5002               	movf	spi_tx_tx@command+1,w,c
 35576  005BE8  6E6A               	movwf	3946,c	;volatile
 35577                           
 35578                           ;spi.c: 216: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 35579  005BEA  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 35580                           
 35581                           ;spi.c: 219: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 35582  005BEE  0EFF               	movlw	255
 35583  005BF0  6E09               	movwf	??_spi_tx_tx& (0+255),c
 35584  005BF2  0EFF               	movlw	255
 35585  005BF4  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 35586  005BF6  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 35587  005BFA  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 35588  005BFE  5009               	movf	??_spi_tx_tx,w,c
 35589  005C00  260B               	addwf	??_spi_tx_tx+2,f,c
 35590  005C02  500A               	movf	??_spi_tx_tx+1,w,c
 35591  005C04  220C               	addwfc	??_spi_tx_tx+3,f,c
 35592  005C06  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 35593  005C0A  6A0C               	clrf	??_spi_tx_tx+3,c
 35594  005C0C  500B               	movf	??_spi_tx_tx+2,w,c
 35595  005C0E  6E66               	movwf	3942,c	;volatile
 35596                           
 35597                           ;spi.c: 220: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 35598  005C10  0403               	decf	spi_tx_tx@command_length,w,c
 35599  005C12  6E67               	movwf	3943,c	;volatile
 35600                           
 35601                           ;spi.c: 223: LATDbits.LD7 = 0;
 35602  005C14  9E8C               	bcf	3980,7,c	;volatile
 35603                           
 35604                           ;spi.c: 226: DMACON1bits.DMAEN = 1;
 35605  005C16  8088               	bsf	3976,0,c	;volatile
 35606  005C18  B088               	btfsc	3976,0,c	;volatile
 35607  005C1A  D7FE               	goto	l2656
 35608                           
 35609                           ;spi.c: 230: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 35610  005C1C  5006               	movf	spi_tx_tx@data+1,w,c
 35611  005C1E  6E6A               	movwf	3946,c	;volatile
 35612                           
 35613                           ;spi.c: 231: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 35614  005C20  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 35615                           
 35616                           ;spi.c: 234: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 35617  005C24  0EFF               	movlw	255
 35618  005C26  6E09               	movwf	??_spi_tx_tx& (0+255),c
 35619  005C28  0EFF               	movlw	255
 35620  005C2A  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 35621  005C2C  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 35622  005C30  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 35623  005C34  5009               	movf	??_spi_tx_tx,w,c
 35624  005C36  260B               	addwf	??_spi_tx_tx+2,f,c
 35625  005C38  500A               	movf	??_spi_tx_tx+1,w,c
 35626  005C3A  220C               	addwfc	??_spi_tx_tx+3,f,c
 35627  005C3C  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 35628  005C40  6A0C               	clrf	??_spi_tx_tx+3,c
 35629  005C42  500B               	movf	??_spi_tx_tx+2,w,c
 35630  005C44  6E66               	movwf	3942,c	;volatile
 35631                           
 35632                           ;spi.c: 235: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 35633  005C46  0407               	decf	spi_tx_tx@data_length,w,c
 35634  005C48  6E67               	movwf	3943,c	;volatile
 35635                           
 35636                           ;spi.c: 238: DMACON1bits.DMAEN = 1;
 35637  005C4A  8088               	bsf	3976,0,c	;volatile
 35638  005C4C  B088               	btfsc	3976,0,c	;volatile
 35639  005C4E  D7FE               	goto	l2659
 35640                           
 35641                           ;spi.c: 242: LATDbits.LD7 = 1;
 35642  005C50  8E8C               	bsf	3980,7,c	;volatile
 35643  005C52  0012               	return		;funcret
 35644  005C54                     __end_of_spi_tx_tx:
 35645                           	opt stack 0
 35646                           tosu	equ	0xFFF
 35647                           tosh	equ	0xFFE
 35648                           tosl	equ	0xFFD
 35649                           pclath	equ	0xFFA
 35650                           tblptru	equ	0xFF8
 35651                           tblptrh	equ	0xFF7
 35652                           tblptrl	equ	0xFF6
 35653                           tablat	equ	0xFF5
 35654                           prodh	equ	0xFF4
 35655                           prodl	equ	0xFF3
 35656                           intcon	equ	0xFF2
 35657                           intcon2	equ	0xFF1
 35658                           intcon3	equ	0xFF0
 35659                           indf0	equ	0xFEF
 35660                           postinc0	equ	0xFEE
 35661                           fsr0h	equ	0xFEA
 35662                           fsr0l	equ	0xFE9
 35663                           wreg	equ	0xFE8
 35664                           indf1	equ	0xFE7
 35665                           postdec1	equ	0xFE5
 35666                           plusw1	equ	0xFE3
 35667                           fsr1h	equ	0xFE2
 35668                           fsr1l	equ	0xFE1
 35669                           indf2	equ	0xFDF
 35670                           postinc2	equ	0xFDE
 35671                           postdec2	equ	0xFDD
 35672                           plusw2	equ	0xFDB
 35673                           fsr2h	equ	0xFDA
 35674                           fsr2l	equ	0xFD9
 35675                           status	equ	0xFD8
 35676                           
 35677 ;; *************** function __flash_write_page_from_buffer *****************
 35678 ;; Defined at:
 35679 ;;		line 254 in file "flash.c"
 35680 ;; Parameters:    Size  Location     Type
 35681 ;;  page            2   19[COMRAM] unsigned int 
 35682 ;;  buffer          1   21[COMRAM] enum E6874
 35683 ;; Auto vars:     Size  Location     Type
 35684 ;;  command         4   25[COMRAM] unsigned char [4]
 35685 ;; Return value:  Size  Location     Type
 35686 ;;                  1    wreg      void 
 35687 ;; Registers used:
 35688 ;;		wreg, status,2, status,0, cstack
 35689 ;; Tracked objects:
 35690 ;;		On entry : 0/0
 35691 ;;		On exit  : 0/0
 35692 ;;		Unchanged: 0/0
 35693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35694 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35695 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35696 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35697 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35698 ;;Total ram usage:       10 bytes
 35699 ;; Hardware stack levels used:    1
 35700 ;; Hardware stack levels required when called:    4
 35701 ;; This function calls:
 35702 ;;		__flash_is_busy
 35703 ;;		_spi_tx
 35704 ;; This function is called by:
 35705 ;;		_flash_page_write
 35706 ;;		_flash_partial_write
 35707 ;; This function uses a non-reentrant model
 35708 ;;
 35709                           
 35710                           	psect	text183
 35711  006C8E                     __ptext183:
 35712                           	opt stack 0
 35713  006C8E                     __flash_write_page_from_buffer:
 35714                           	opt stack 22
 35715                           
 35716                           ;flash.c: 256: uint8_t command[4];;flash.c: 259: while(_flash_is_busy());
 35717                           
 35718                           ;incstack = 0
 35719  006C8E  EC83  F03C         	call	__flash_is_busy	;wreg free
 35720  006C92  0900               	iorlw	0
 35721  006C94  A4D8               	btfss	status,2,c
 35722  006C96  D7FB               	goto	__flash_write_page_from_buffer
 35723                           
 35724                           ;flash.c: 262: if(buffer==FLASH_BUFFER_1)
 35725  006C98  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 35726  006C9A  A4D8               	btfss	status,2,c
 35727  006C9C  D002               	goto	l1653
 35728                           
 35729                           ;flash.c: 263: command[0] = 0x83;
 35730  006C9E  0E83               	movlw	131
 35731  006CA0  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 35732  006CA2                     l1653:
 35733                           
 35734                           ;flash.c: 264: if(buffer==FLASH_BUFFER_2)
 35735  006CA2  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 35736  006CA4  A4D8               	btfss	status,2,c
 35737  006CA6  D002               	goto	l1654
 35738                           
 35739                           ;flash.c: 265: command[0] = 0x86;
 35740  006CA8  0E86               	movlw	134
 35741  006CAA  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 35742  006CAC                     l1654:
 35743                           
 35744                           ;flash.c: 267: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 35745  006CAC  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 35746  006CB0  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 35747  006CB4  0E07               	movlw	7
 35748  006CB6  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 35749  006CB8                     u6145:
 35750  006CB8  90D8               	bcf	status,0,c
 35751  006CBA  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 35752  006CBC  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 35753  006CBE  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 35754  006CC0  D7FB               	goto	u6145
 35755  006CC2  5017               	movf	??__flash_write_page_from_buffer,w,c
 35756  006CC4  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 35757                           
 35758                           ;flash.c: 268: command[2] = ((unsigned char)((page<<1)&0xFF));
 35759  006CC6  5014               	movf	__flash_write_page_from_buffer@page,w,c
 35760  006CC8  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 35761  006CCA  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 35762                           
 35763                           ;flash.c: 269: command[3] = 0x00;
 35764  006CCC  0E00               	movlw	0
 35765  006CCE  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 35766                           
 35767                           ;flash.c: 272: spi_tx(command, 4);
 35768  006CD0  0E1A               	movlw	low __flash_write_page_from_buffer@command
 35769  006CD2  6E01               	movwf	spi_tx@data,c
 35770  006CD4  0E00               	movlw	high __flash_write_page_from_buffer@command
 35771  006CD6  6E02               	movwf	spi_tx@data+1,c
 35772  006CD8  0E00               	movlw	0
 35773  006CDA  6E04               	movwf	spi_tx@length+1,c
 35774  006CDC  0E04               	movlw	4
 35775  006CDE  6E03               	movwf	spi_tx@length,c
 35776  006CE0  EC95  F035         	call	_spi_tx	;wreg free
 35777  006CE4  0012               	return		;funcret
 35778  006CE6                     __end_of__flash_write_page_from_buffer:
 35779                           	opt stack 0
 35780                           tosu	equ	0xFFF
 35781                           tosh	equ	0xFFE
 35782                           tosl	equ	0xFFD
 35783                           pclath	equ	0xFFA
 35784                           tblptru	equ	0xFF8
 35785                           tblptrh	equ	0xFF7
 35786                           tblptrl	equ	0xFF6
 35787                           tablat	equ	0xFF5
 35788                           prodh	equ	0xFF4
 35789                           prodl	equ	0xFF3
 35790                           intcon	equ	0xFF2
 35791                           intcon2	equ	0xFF1
 35792                           intcon3	equ	0xFF0
 35793                           indf0	equ	0xFEF
 35794                           postinc0	equ	0xFEE
 35795                           fsr0h	equ	0xFEA
 35796                           fsr0l	equ	0xFE9
 35797                           wreg	equ	0xFE8
 35798                           indf1	equ	0xFE7
 35799                           postdec1	equ	0xFE5
 35800                           plusw1	equ	0xFE3
 35801                           fsr1h	equ	0xFE2
 35802                           fsr1l	equ	0xFE1
 35803                           indf2	equ	0xFDF
 35804                           postinc2	equ	0xFDE
 35805                           postdec2	equ	0xFDD
 35806                           plusw2	equ	0xFDB
 35807                           fsr2h	equ	0xFDA
 35808                           fsr2l	equ	0xFD9
 35809                           status	equ	0xFD8
 35810                           
 35811 ;; *************** function __flash_copy_page_to_buffer *****************
 35812 ;; Defined at:
 35813 ;;		line 150 in file "flash.c"
 35814 ;; Parameters:    Size  Location     Type
 35815 ;;  page            2   19[COMRAM] unsigned int 
 35816 ;;  buffer          1   21[COMRAM] enum E6874
 35817 ;; Auto vars:     Size  Location     Type
 35818 ;;  command         4   25[COMRAM] unsigned char [4]
 35819 ;; Return value:  Size  Location     Type
 35820 ;;                  1    wreg      void 
 35821 ;; Registers used:
 35822 ;;		wreg, status,2, status,0, cstack
 35823 ;; Tracked objects:
 35824 ;;		On entry : 0/0
 35825 ;;		On exit  : 0/0
 35826 ;;		Unchanged: 0/0
 35827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35828 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35829 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35830 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35831 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35832 ;;Total ram usage:       10 bytes
 35833 ;; Hardware stack levels used:    1
 35834 ;; Hardware stack levels required when called:    4
 35835 ;; This function calls:
 35836 ;;		__flash_is_busy
 35837 ;;		_spi_tx
 35838 ;; This function is called by:
 35839 ;;		_flash_partial_write
 35840 ;; This function uses a non-reentrant model
 35841 ;;
 35842                           
 35843                           	psect	text184
 35844  006CE6                     __ptext184:
 35845                           	opt stack 0
 35846  006CE6                     __flash_copy_page_to_buffer:
 35847                           	opt stack 19
 35848                           
 35849                           ;flash.c: 152: uint8_t command[4];;flash.c: 155: while(_flash_is_busy());
 35850                           
 35851                           ;incstack = 0
 35852  006CE6  EC83  F03C         	call	__flash_is_busy	;wreg free
 35853  006CEA  0900               	iorlw	0
 35854  006CEC  A4D8               	btfss	status,2,c
 35855  006CEE  D7FB               	goto	__flash_copy_page_to_buffer
 35856                           
 35857                           ;flash.c: 158: if(buffer==FLASH_BUFFER_1)
 35858  006CF0  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 35859  006CF2  A4D8               	btfss	status,2,c
 35860  006CF4  D002               	goto	l1618
 35861                           
 35862                           ;flash.c: 159: command[0] = 0x53;
 35863  006CF6  0E53               	movlw	83
 35864  006CF8  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 35865  006CFA                     l1618:
 35866                           
 35867                           ;flash.c: 160: if(buffer==FLASH_BUFFER_2)
 35868  006CFA  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 35869  006CFC  A4D8               	btfss	status,2,c
 35870  006CFE  D002               	goto	l1619
 35871                           
 35872                           ;flash.c: 161: command[0] = 0x55;
 35873  006D00  0E55               	movlw	85
 35874  006D02  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 35875  006D04                     l1619:
 35876                           
 35877                           ;flash.c: 163: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 35878  006D04  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 35879  006D08  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 35880  006D0C  0E07               	movlw	7
 35881  006D0E  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 35882  006D10                     u6345:
 35883  006D10  90D8               	bcf	status,0,c
 35884  006D12  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 35885  006D14  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 35886  006D16  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 35887  006D18  D7FB               	goto	u6345
 35888  006D1A  5017               	movf	??__flash_copy_page_to_buffer,w,c
 35889  006D1C  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 35890                           
 35891                           ;flash.c: 164: command[2] = ((unsigned char)((page<<1)&0xFF));
 35892  006D1E  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 35893  006D20  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 35894  006D22  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 35895                           
 35896                           ;flash.c: 165: command[3] = 0x00;
 35897  006D24  0E00               	movlw	0
 35898  006D26  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 35899                           
 35900                           ;flash.c: 168: spi_tx(command, 4);
 35901  006D28  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 35902  006D2A  6E01               	movwf	spi_tx@data,c
 35903  006D2C  0E00               	movlw	high __flash_copy_page_to_buffer@command
 35904  006D2E  6E02               	movwf	spi_tx@data+1,c
 35905  006D30  0E00               	movlw	0
 35906  006D32  6E04               	movwf	spi_tx@length+1,c
 35907  006D34  0E04               	movlw	4
 35908  006D36  6E03               	movwf	spi_tx@length,c
 35909  006D38  EC95  F035         	call	_spi_tx	;wreg free
 35910  006D3C  0012               	return		;funcret
 35911  006D3E                     __end_of__flash_copy_page_to_buffer:
 35912                           	opt stack 0
 35913                           tosu	equ	0xFFF
 35914                           tosh	equ	0xFFE
 35915                           tosl	equ	0xFFD
 35916                           pclath	equ	0xFFA
 35917                           tblptru	equ	0xFF8
 35918                           tblptrh	equ	0xFF7
 35919                           tblptrl	equ	0xFF6
 35920                           tablat	equ	0xFF5
 35921                           prodh	equ	0xFF4
 35922                           prodl	equ	0xFF3
 35923                           intcon	equ	0xFF2
 35924                           intcon2	equ	0xFF1
 35925                           intcon3	equ	0xFF0
 35926                           indf0	equ	0xFEF
 35927                           postinc0	equ	0xFEE
 35928                           fsr0h	equ	0xFEA
 35929                           fsr0l	equ	0xFE9
 35930                           wreg	equ	0xFE8
 35931                           indf1	equ	0xFE7
 35932                           postdec1	equ	0xFE5
 35933                           plusw1	equ	0xFE3
 35934                           fsr1h	equ	0xFE2
 35935                           fsr1l	equ	0xFE1
 35936                           indf2	equ	0xFDF
 35937                           postinc2	equ	0xFDE
 35938                           postdec2	equ	0xFDD
 35939                           plusw2	equ	0xFDB
 35940                           fsr2h	equ	0xFDA
 35941                           fsr2l	equ	0xFD9
 35942                           status	equ	0xFD8
 35943                           
 35944 ;; *************** function __flash_compare_page_to_buffer *****************
 35945 ;; Defined at:
 35946 ;;		line 172 in file "flash.c"
 35947 ;; Parameters:    Size  Location     Type
 35948 ;;  page            2   19[COMRAM] unsigned int 
 35949 ;;  buffer          1   21[COMRAM] enum E6874
 35950 ;; Auto vars:     Size  Location     Type
 35951 ;;  command         4   27[COMRAM] unsigned char [4]
 35952 ;;  status          2   25[COMRAM] unsigned int 
 35953 ;; Return value:  Size  Location     Type
 35954 ;;                  1    wreg      enum E6878
 35955 ;; Registers used:
 35956 ;;		wreg, status,2, status,0, cstack
 35957 ;; Tracked objects:
 35958 ;;		On entry : 0/0
 35959 ;;		On exit  : 0/0
 35960 ;;		Unchanged: 0/0
 35961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35962 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35963 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35964 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35965 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35966 ;;Total ram usage:       12 bytes
 35967 ;; Hardware stack levels used:    1
 35968 ;; Hardware stack levels required when called:    4
 35969 ;; This function calls:
 35970 ;;		__flash_get_status
 35971 ;;		__flash_is_busy
 35972 ;;		_spi_tx
 35973 ;; This function is called by:
 35974 ;;		_flash_page_write
 35975 ;;		_flash_partial_write
 35976 ;; This function uses a non-reentrant model
 35977 ;;
 35978                           
 35979                           	psect	text185
 35980  006180                     __ptext185:
 35981                           	opt stack 0
 35982  006180                     __flash_compare_page_to_buffer:
 35983                           	opt stack 22
 35984                           
 35985                           ;flash.c: 174: uint8_t command[4];;flash.c: 175: uint16_t status;;flash.c: 178: while(_f
      +                          lash_is_busy());
 35986                           
 35987                           ;incstack = 0
 35988  006180  EC83  F03C         	call	__flash_is_busy	;wreg free
 35989  006184  0900               	iorlw	0
 35990  006186  A4D8               	btfss	status,2,c
 35991  006188  D7FB               	goto	__flash_compare_page_to_buffer
 35992                           
 35993                           ;flash.c: 181: if(buffer==FLASH_BUFFER_1)
 35994  00618A  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 35995  00618C  A4D8               	btfss	status,2,c
 35996  00618E  D002               	goto	l1626
 35997                           
 35998                           ;flash.c: 182: command[0] = 0x60;
 35999  006190  0E60               	movlw	96
 36000  006192  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 36001  006194                     l1626:
 36002                           
 36003                           ;flash.c: 183: if(buffer==FLASH_BUFFER_2)
 36004  006194  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 36005  006196  A4D8               	btfss	status,2,c
 36006  006198  D002               	goto	l1627
 36007                           
 36008                           ;flash.c: 184: command[0] = 0x60;
 36009  00619A  0E60               	movlw	96
 36010  00619C  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 36011  00619E                     l1627:
 36012                           
 36013                           ;flash.c: 186: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 36014  00619E  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 36015  0061A2  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 36016  0061A6  0E07               	movlw	7
 36017  0061A8  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 36018  0061AA                     u6055:
 36019  0061AA  90D8               	bcf	status,0,c
 36020  0061AC  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 36021  0061AE  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 36022  0061B0  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 36023  0061B2  D7FB               	goto	u6055
 36024  0061B4  5017               	movf	??__flash_compare_page_to_buffer,w,c
 36025  0061B6  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 36026                           
 36027                           ;flash.c: 187: command[2] = ((unsigned char)((page<<1)&0xFF));
 36028  0061B8  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 36029  0061BA  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 36030  0061BC  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 36031                           
 36032                           ;flash.c: 188: command[3] = 0x00;
 36033  0061BE  0E00               	movlw	0
 36034  0061C0  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 36035                           
 36036                           ;flash.c: 191: spi_tx(command, 4);
 36037  0061C2  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 36038  0061C4  6E01               	movwf	spi_tx@data,c
 36039  0061C6  0E00               	movlw	high __flash_compare_page_to_buffer@command
 36040  0061C8  6E02               	movwf	spi_tx@data+1,c
 36041  0061CA  0E00               	movlw	0
 36042  0061CC  6E04               	movwf	spi_tx@length+1,c
 36043  0061CE  0E04               	movlw	4
 36044  0061D0  6E03               	movwf	spi_tx@length,c
 36045  0061D2  EC95  F035         	call	_spi_tx	;wreg free
 36046  0061D6  EC83  F03C         	call	__flash_is_busy	;wreg free
 36047  0061DA  0900               	iorlw	0
 36048  0061DC  A4D8               	btfss	status,2,c
 36049  0061DE  D7FB               	goto	l1629
 36050                           
 36051                           ;flash.c: 197: status = _flash_get_status();
 36052  0061E0  EC17  F03B         	call	__flash_get_status	;wreg free
 36053  0061E4  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 36054  0061E8  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 36055                           
 36056                           ;flash.c: 200: if(status & 0b0000000001000000)
 36057  0061EC  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 36058  0061EE  D002               	goto	l1631
 36059                           
 36060                           ;flash.c: 201: {;flash.c: 203: return DATA_DOES_NOT_MATCH;
 36061  0061F0  0E01               	movlw	1
 36062                           
 36063                           ;flash.c: 204: }
 36064  0061F2  0012               	return	
 36065  0061F4                     l1631:
 36066                           
 36067                           ;flash.c: 205: else;flash.c: 206: {;flash.c: 208: return DATA_DOES_MATCH;
 36068  0061F4  0E00               	movlw	0
 36069  0061F6  0012               	return	
 36070  0061F8                     __end_of__flash_compare_page_to_buffer:
 36071                           	opt stack 0
 36072                           tosu	equ	0xFFF
 36073                           tosh	equ	0xFFE
 36074                           tosl	equ	0xFFD
 36075                           pclath	equ	0xFFA
 36076                           tblptru	equ	0xFF8
 36077                           tblptrh	equ	0xFF7
 36078                           tblptrl	equ	0xFF6
 36079                           tablat	equ	0xFF5
 36080                           prodh	equ	0xFF4
 36081                           prodl	equ	0xFF3
 36082                           intcon	equ	0xFF2
 36083                           intcon2	equ	0xFF1
 36084                           intcon3	equ	0xFF0
 36085                           indf0	equ	0xFEF
 36086                           postinc0	equ	0xFEE
 36087                           fsr0h	equ	0xFEA
 36088                           fsr0l	equ	0xFE9
 36089                           wreg	equ	0xFE8
 36090                           indf1	equ	0xFE7
 36091                           postdec1	equ	0xFE5
 36092                           plusw1	equ	0xFE3
 36093                           fsr1h	equ	0xFE2
 36094                           fsr1l	equ	0xFE1
 36095                           indf2	equ	0xFDF
 36096                           postinc2	equ	0xFDE
 36097                           postdec2	equ	0xFDD
 36098                           plusw2	equ	0xFDB
 36099                           fsr2h	equ	0xFDA
 36100                           fsr2l	equ	0xFD9
 36101                           status	equ	0xFD8
 36102                           
 36103 ;; *************** function __update_modified_time *****************
 36104 ;; Defined at:
 36105 ;;		line 53 in file "fat16.c"
 36106 ;; Parameters:    Size  Location     Type
 36107 ;;  root            2    4[COMRAM] PTR struct .
 36108 ;;		 -> fat_append_to_file@root(32), 
 36109 ;; Auto vars:     Size  Location     Type
 36110 ;;		None
 36111 ;; Return value:  Size  Location     Type
 36112 ;;                  1    wreg      void 
 36113 ;; Registers used:
 36114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36115 ;; Tracked objects:
 36116 ;;		On entry : 0/0
 36117 ;;		On exit  : 0/0
 36118 ;;		Unchanged: 0/0
 36119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36123 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36124 ;;Total ram usage:        2 bytes
 36125 ;; Hardware stack levels used:    1
 36126 ;; Hardware stack levels required when called:    1
 36127 ;; This function calls:
 36128 ;;		__get_date
 36129 ;;		__get_time
 36130 ;; This function is called by:
 36131 ;;		_fat_append_to_file
 36132 ;; This function uses a non-reentrant model
 36133 ;;
 36134                           
 36135                           	psect	text186
 36136  0075CA                     __ptext186:
 36137                           	opt stack 0
 36138  0075CA                     __update_modified_time:
 36139                           	opt stack 24
 36140                           
 36141                           ;fat16.c: 55: root->modifiedDate = _get_date();
 36142                           
 36143                           ;incstack = 0
 36144  0075CA  EC94  F03D         	call	__get_date	;wreg free
 36145  0075CE  EE20 F018          	lfsr	2,24
 36146  0075D2  5005               	movf	__update_modified_time@root,w,c
 36147  0075D4  26D9               	addwf	fsr2l,f,c
 36148  0075D6  5006               	movf	__update_modified_time@root+1,w,c
 36149  0075D8  22DA               	addwfc	fsr2h,f,c
 36150  0075DA  C001  FFDE         	movff	?__get_date,postinc2
 36151  0075DE  C002  FFDD         	movff	?__get_date+1,postdec2
 36152                           
 36153                           ;fat16.c: 56: root->modifiedTime = _get_time();
 36154  0075E2  EC8F  F03D         	call	__get_time	;wreg free
 36155  0075E6  EE20 F016          	lfsr	2,22
 36156  0075EA  5005               	movf	__update_modified_time@root,w,c
 36157  0075EC  26D9               	addwf	fsr2l,f,c
 36158  0075EE  5006               	movf	__update_modified_time@root+1,w,c
 36159  0075F0  22DA               	addwfc	fsr2h,f,c
 36160  0075F2  C001  FFDE         	movff	?__get_time,postinc2
 36161  0075F6  C002  FFDD         	movff	?__get_time+1,postdec2
 36162  0075FA  0012               	return		;funcret
 36163  0075FC                     __end_of__update_modified_time:
 36164                           	opt stack 0
 36165                           tosu	equ	0xFFF
 36166                           tosh	equ	0xFFE
 36167                           tosl	equ	0xFFD
 36168                           pclath	equ	0xFFA
 36169                           tblptru	equ	0xFF8
 36170                           tblptrh	equ	0xFF7
 36171                           tblptrl	equ	0xFF6
 36172                           tablat	equ	0xFF5
 36173                           prodh	equ	0xFF4
 36174                           prodl	equ	0xFF3
 36175                           intcon	equ	0xFF2
 36176                           intcon2	equ	0xFF1
 36177                           intcon3	equ	0xFF0
 36178                           indf0	equ	0xFEF
 36179                           postinc0	equ	0xFEE
 36180                           fsr0h	equ	0xFEA
 36181                           fsr0l	equ	0xFE9
 36182                           wreg	equ	0xFE8
 36183                           indf1	equ	0xFE7
 36184                           postdec1	equ	0xFE5
 36185                           plusw1	equ	0xFE3
 36186                           fsr1h	equ	0xFE2
 36187                           fsr1l	equ	0xFE1
 36188                           indf2	equ	0xFDF
 36189                           postinc2	equ	0xFDE
 36190                           postdec2	equ	0xFDD
 36191                           plusw2	equ	0xFDB
 36192                           fsr2h	equ	0xFDA
 36193                           fsr2l	equ	0xFD9
 36194                           status	equ	0xFD8
 36195                           
 36196 ;; *************** function __get_time *****************
 36197 ;; Defined at:
 36198 ;;		line 29 in file "fat16.c"
 36199 ;; Parameters:    Size  Location     Type
 36200 ;;		None
 36201 ;; Auto vars:     Size  Location     Type
 36202 ;;  time            2    2[COMRAM] unsigned int 
 36203 ;; Return value:  Size  Location     Type
 36204 ;;                  2    0[COMRAM] unsigned int 
 36205 ;; Registers used:
 36206 ;;		None
 36207 ;; Tracked objects:
 36208 ;;		On entry : 0/0
 36209 ;;		On exit  : 0/0
 36210 ;;		Unchanged: 0/0
 36211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36213 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36215 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36216 ;;Total ram usage:        4 bytes
 36217 ;; Hardware stack levels used:    1
 36218 ;; This function calls:
 36219 ;;		Nothing
 36220 ;; This function is called by:
 36221 ;;		__update_modified_time
 36222 ;;		_fat_create_file
 36223 ;; This function uses a non-reentrant model
 36224 ;;
 36225                           
 36226                           	psect	text187
 36227  007B1E                     __ptext187:
 36228                           	opt stack 0
 36229  007B1E                     __get_time:
 36230                           	opt stack 25
 36231                           
 36232                           ;fat16.c: 31: uint16_t time;;fat16.c: 38: return time;
 36233                           
 36234                           ;incstack = 0
 36235  007B1E  C003  F001         	movff	__get_time@time,?__get_time
 36236  007B22  C004  F002         	movff	__get_time@time+1,?__get_time+1
 36237  007B26  0012               	return		;funcret
 36238  007B28                     __end_of__get_time:
 36239                           	opt stack 0
 36240                           tosu	equ	0xFFF
 36241                           tosh	equ	0xFFE
 36242                           tosl	equ	0xFFD
 36243                           pclath	equ	0xFFA
 36244                           tblptru	equ	0xFF8
 36245                           tblptrh	equ	0xFF7
 36246                           tblptrl	equ	0xFF6
 36247                           tablat	equ	0xFF5
 36248                           prodh	equ	0xFF4
 36249                           prodl	equ	0xFF3
 36250                           intcon	equ	0xFF2
 36251                           intcon2	equ	0xFF1
 36252                           intcon3	equ	0xFF0
 36253                           indf0	equ	0xFEF
 36254                           postinc0	equ	0xFEE
 36255                           fsr0h	equ	0xFEA
 36256                           fsr0l	equ	0xFE9
 36257                           wreg	equ	0xFE8
 36258                           indf1	equ	0xFE7
 36259                           postdec1	equ	0xFE5
 36260                           plusw1	equ	0xFE3
 36261                           fsr1h	equ	0xFE2
 36262                           fsr1l	equ	0xFE1
 36263                           indf2	equ	0xFDF
 36264                           postinc2	equ	0xFDE
 36265                           postdec2	equ	0xFDD
 36266                           plusw2	equ	0xFDB
 36267                           fsr2h	equ	0xFDA
 36268                           fsr2l	equ	0xFD9
 36269                           status	equ	0xFD8
 36270                           
 36271 ;; *************** function __get_date *****************
 36272 ;; Defined at:
 36273 ;;		line 41 in file "fat16.c"
 36274 ;; Parameters:    Size  Location     Type
 36275 ;;		None
 36276 ;; Auto vars:     Size  Location     Type
 36277 ;;  date            2    2[COMRAM] unsigned int 
 36278 ;; Return value:  Size  Location     Type
 36279 ;;                  2    0[COMRAM] unsigned int 
 36280 ;; Registers used:
 36281 ;;		None
 36282 ;; Tracked objects:
 36283 ;;		On entry : 0/0
 36284 ;;		On exit  : 0/0
 36285 ;;		Unchanged: 0/0
 36286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36287 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36288 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36290 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36291 ;;Total ram usage:        4 bytes
 36292 ;; Hardware stack levels used:    1
 36293 ;; This function calls:
 36294 ;;		Nothing
 36295 ;; This function is called by:
 36296 ;;		__update_modified_time
 36297 ;;		_fat_create_file
 36298 ;; This function uses a non-reentrant model
 36299 ;;
 36300                           
 36301                           	psect	text188
 36302  007B28                     __ptext188:
 36303                           	opt stack 0
 36304  007B28                     __get_date:
 36305                           	opt stack 25
 36306                           
 36307                           ;fat16.c: 43: uint16_t date;;fat16.c: 50: return date;
 36308                           
 36309                           ;incstack = 0
 36310  007B28  C003  F001         	movff	__get_date@date,?__get_date
 36311  007B2C  C004  F002         	movff	__get_date@date+1,?__get_date+1
 36312  007B30  0012               	return		;funcret
 36313  007B32                     __end_of__get_date:
 36314                           	opt stack 0
 36315                           tosu	equ	0xFFF
 36316                           tosh	equ	0xFFE
 36317                           tosl	equ	0xFFD
 36318                           pclath	equ	0xFFA
 36319                           tblptru	equ	0xFF8
 36320                           tblptrh	equ	0xFF7
 36321                           tblptrl	equ	0xFF6
 36322                           tablat	equ	0xFF5
 36323                           prodh	equ	0xFF4
 36324                           prodl	equ	0xFF3
 36325                           intcon	equ	0xFF2
 36326                           intcon2	equ	0xFF1
 36327                           intcon3	equ	0xFF0
 36328                           indf0	equ	0xFEF
 36329                           postinc0	equ	0xFEE
 36330                           fsr0h	equ	0xFEA
 36331                           fsr0l	equ	0xFE9
 36332                           wreg	equ	0xFE8
 36333                           indf1	equ	0xFE7
 36334                           postdec1	equ	0xFE5
 36335                           plusw1	equ	0xFE3
 36336                           fsr1h	equ	0xFE2
 36337                           fsr1l	equ	0xFE1
 36338                           indf2	equ	0xFDF
 36339                           postinc2	equ	0xFDE
 36340                           postdec2	equ	0xFDD
 36341                           plusw2	equ	0xFDB
 36342                           fsr2h	equ	0xFDA
 36343                           fsr2l	equ	0xFD9
 36344                           status	equ	0xFD8
 36345                           
 36346 ;; *************** function __sector_from_cluster *****************
 36347 ;; Defined at:
 36348 ;;		line 443 in file "fat16.c"
 36349 ;; Parameters:    Size  Location     Type
 36350 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 36351 ;; Auto vars:     Size  Location     Type
 36352 ;;		None
 36353 ;; Return value:  Size  Location     Type
 36354 ;;                  2    0[COMRAM] unsigned int 
 36355 ;; Registers used:
 36356 ;;		wreg, status,2, status,0
 36357 ;; Tracked objects:
 36358 ;;		On entry : 0/0
 36359 ;;		On exit  : 0/0
 36360 ;;		Unchanged: 0/0
 36361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36366 ;;Total ram usage:        2 bytes
 36367 ;; Hardware stack levels used:    1
 36368 ;; This function calls:
 36369 ;;		Nothing
 36370 ;; This function is called by:
 36371 ;;		_fat_append_to_file
 36372 ;;		_fat_read_from_file
 36373 ;; This function uses a non-reentrant model
 36374 ;;
 36375                           
 36376                           	psect	text189
 36377  007AA0                     __ptext189:
 36378                           	opt stack 0
 36379  007AA0                     __sector_from_cluster:
 36380                           	opt stack 27
 36381                           
 36382                           ;fat16.c: 445: return fat_cluster + 22 - 2;
 36383                           
 36384                           ;incstack = 0
 36385  007AA0  0E14               	movlw	20
 36386  007AA2  2401               	addwf	__sector_from_cluster@fat_cluster,w,c
 36387  007AA4  6E01               	movwf	?__sector_from_cluster,c
 36388  007AA6  0E00               	movlw	0
 36389  007AA8  2002               	addwfc	__sector_from_cluster@fat_cluster+1,w,c
 36390  007AAA  6E02               	movwf	?__sector_from_cluster+1,c
 36391  007AAC  0012               	return	
 36392  007AAE                     __end_of__sector_from_cluster:
 36393                           	opt stack 0
 36394                           tosu	equ	0xFFF
 36395                           tosh	equ	0xFFE
 36396                           tosl	equ	0xFFD
 36397                           pclath	equ	0xFFA
 36398                           tblptru	equ	0xFF8
 36399                           tblptrh	equ	0xFF7
 36400                           tblptrl	equ	0xFF6
 36401                           tablat	equ	0xFF5
 36402                           prodh	equ	0xFF4
 36403                           prodl	equ	0xFF3
 36404                           intcon	equ	0xFF2
 36405                           intcon2	equ	0xFF1
 36406                           intcon3	equ	0xFF0
 36407                           indf0	equ	0xFEF
 36408                           postinc0	equ	0xFEE
 36409                           fsr0h	equ	0xFEA
 36410                           fsr0l	equ	0xFE9
 36411                           wreg	equ	0xFE8
 36412                           indf1	equ	0xFE7
 36413                           postdec1	equ	0xFE5
 36414                           plusw1	equ	0xFE3
 36415                           fsr1h	equ	0xFE2
 36416                           fsr1l	equ	0xFE1
 36417                           indf2	equ	0xFDF
 36418                           postinc2	equ	0xFDE
 36419                           postdec2	equ	0xFDD
 36420                           plusw2	equ	0xFDB
 36421                           fsr2h	equ	0xFDA
 36422                           fsr2l	equ	0xFD9
 36423                           status	equ	0xFD8
 36424                           
 36425 ;; *************** function __read_fat *****************
 36426 ;; Defined at:
 36427 ;;		line 169 in file "fat16.c"
 36428 ;; Parameters:    Size  Location     Type
 36429 ;;  cluster         2   48[COMRAM] unsigned int 
 36430 ;; Auto vars:     Size  Location     Type
 36431 ;;  value           2   54[COMRAM] unsigned int 
 36432 ;;  offset          2   52[COMRAM] unsigned int 
 36433 ;;  fat_sector      2   50[COMRAM] unsigned int 
 36434 ;; Return value:  Size  Location     Type
 36435 ;;                  2   48[COMRAM] unsigned int 
 36436 ;; Registers used:
 36437 ;;		wreg, status,2, status,0, cstack
 36438 ;; Tracked objects:
 36439 ;;		On entry : 0/0
 36440 ;;		On exit  : 0/0
 36441 ;;		Unchanged: 0/0
 36442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36444 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36446 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36447 ;;Total ram usage:        8 bytes
 36448 ;; Hardware stack levels used:    1
 36449 ;; Hardware stack levels required when called:    7
 36450 ;; This function calls:
 36451 ;;		_flash_partial_read
 36452 ;; This function is called by:
 36453 ;;		_fat_delete_file
 36454 ;;		_fat_append_to_file
 36455 ;;		_fat_read_from_file
 36456 ;; This function uses a non-reentrant model
 36457 ;;
 36458                           
 36459                           	psect	text190
 36460  007162                     __ptext190:
 36461                           	opt stack 0
 36462  007162                     __read_fat:
 36463                           	opt stack 20
 36464                           
 36465                           ;fat16.c: 171: uint16_t fat_sector;;fat16.c: 172: uint16_t offset;;fat16.c: 173: uint16_
      +                          t value;;fat16.c: 174: fat_sector = cluster>>8;
 36466                           
 36467                           ;incstack = 0
 36468  007162  5032               	movf	__read_fat@cluster+1,w,c
 36469  007164  6E33               	movwf	__read_fat@fat_sector,c
 36470  007166  6A34               	clrf	__read_fat@fat_sector+1,c
 36471                           
 36472                           ;fat16.c: 175: fat_sector += 2;
 36473  007168  0E02               	movlw	2
 36474  00716A  2633               	addwf	__read_fat@fat_sector,f,c
 36475  00716C  0E00               	movlw	0
 36476  00716E  2234               	addwfc	__read_fat@fat_sector+1,f,c
 36477                           
 36478                           ;fat16.c: 176: offset = cluster & 0xFF;
 36479  007170  5031               	movf	__read_fat@cluster,w,c
 36480  007172  6E35               	movwf	__read_fat@offset,c
 36481  007174  6A36               	clrf	__read_fat@offset+1,c
 36482                           
 36483                           ;fat16.c: 177: offset <<= 1;
 36484  007176  90D8               	bcf	status,0,c
 36485  007178  3635               	rlcf	__read_fat@offset,f,c
 36486  00717A  3636               	rlcf	__read_fat@offset+1,f,c
 36487                           
 36488                           ;fat16.c: 178: flash_partial_read(fat_sector, offset, 2, &value);
 36489  00717C  C033  F029         	movff	__read_fat@fat_sector,flash_partial_read@page
 36490  007180  C034  F02A         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 36491  007184  C035  F02B         	movff	__read_fat@offset,flash_partial_read@start
 36492  007188  C036  F02C         	movff	__read_fat@offset+1,flash_partial_read@start+1
 36493  00718C  0E00               	movlw	0
 36494  00718E  6E2E               	movwf	flash_partial_read@length+1,c
 36495  007190  0E02               	movlw	2
 36496  007192  6E2D               	movwf	flash_partial_read@length,c
 36497  007194  0E37               	movlw	low __read_fat@value
 36498  007196  6E2F               	movwf	flash_partial_read@data,c
 36499  007198  0E00               	movlw	high __read_fat@value
 36500  00719A  6E30               	movwf	flash_partial_read@data+1,c
 36501  00719C  ECFE  F03A         	call	_flash_partial_read	;wreg free
 36502                           
 36503                           ;fat16.c: 179: return value;
 36504  0071A0  C037  F031         	movff	__read_fat@value,?__read_fat
 36505  0071A4  C038  F032         	movff	__read_fat@value+1,?__read_fat+1
 36506  0071A8  0012               	return	
 36507  0071AA                     __end_of__read_fat:
 36508                           	opt stack 0
 36509                           tosu	equ	0xFFF
 36510                           tosh	equ	0xFFE
 36511                           tosl	equ	0xFFD
 36512                           pclath	equ	0xFFA
 36513                           tblptru	equ	0xFF8
 36514                           tblptrh	equ	0xFF7
 36515                           tblptrl	equ	0xFF6
 36516                           tablat	equ	0xFF5
 36517                           prodh	equ	0xFF4
 36518                           prodl	equ	0xFF3
 36519                           intcon	equ	0xFF2
 36520                           intcon2	equ	0xFF1
 36521                           intcon3	equ	0xFF0
 36522                           indf0	equ	0xFEF
 36523                           postinc0	equ	0xFEE
 36524                           fsr0h	equ	0xFEA
 36525                           fsr0l	equ	0xFE9
 36526                           wreg	equ	0xFE8
 36527                           indf1	equ	0xFE7
 36528                           postdec1	equ	0xFE5
 36529                           plusw1	equ	0xFE3
 36530                           fsr1h	equ	0xFE2
 36531                           fsr1l	equ	0xFE1
 36532                           indf2	equ	0xFDF
 36533                           postinc2	equ	0xFDE
 36534                           postdec2	equ	0xFDD
 36535                           plusw2	equ	0xFDB
 36536                           fsr2h	equ	0xFDA
 36537                           fsr2l	equ	0xFD9
 36538                           status	equ	0xFD8
 36539                           
 36540 ;; *************** function __get_empty_cluster *****************
 36541 ;; Defined at:
 36542 ;;		line 107 in file "fat16.c"
 36543 ;; Parameters:    Size  Location     Type
 36544 ;;  first_cluste    2   48[COMRAM] unsigned int 
 36545 ;; Auto vars:     Size  Location     Type
 36546 ;;  cluster         2   56[COMRAM] unsigned int 
 36547 ;;  value           2   54[COMRAM] unsigned int 
 36548 ;;  offset          2   52[COMRAM] unsigned int 
 36549 ;;  fat_sector      2   50[COMRAM] unsigned int 
 36550 ;; Return value:  Size  Location     Type
 36551 ;;                  2   48[COMRAM] unsigned int 
 36552 ;; Registers used:
 36553 ;;		wreg, status,2, status,0, cstack
 36554 ;; Tracked objects:
 36555 ;;		On entry : 0/0
 36556 ;;		On exit  : 0/0
 36557 ;;		Unchanged: 0/0
 36558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36560 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36562 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36563 ;;Total ram usage:       10 bytes
 36564 ;; Hardware stack levels used:    1
 36565 ;; Hardware stack levels required when called:    7
 36566 ;; This function calls:
 36567 ;;		_flash_partial_read
 36568 ;; This function is called by:
 36569 ;;		_fat_create_file
 36570 ;;		_fat_append_to_file
 36571 ;; This function uses a non-reentrant model
 36572 ;;
 36573                           
 36574                           	psect	text191
 36575  0063CE                     __ptext191:
 36576                           	opt stack 0
 36577  0063CE                     __get_empty_cluster:
 36578                           	opt stack 18
 36579                           
 36580                           ;fat16.c: 109: uint16_t cluster;;fat16.c: 110: uint16_t fat_sector;;fat16.c: 111: uint16
      +                          _t offset;;fat16.c: 112: uint16_t value;;fat16.c: 115: for(cluster=first_cluster; cluste
      +                          r<(4074+2); ++cluster)
 36581                           
 36582                           ;incstack = 0
 36583  0063CE  C031  F039         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 36584  0063D2  C032  F03A         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 36585  0063D6                     l10141:
 36586  0063D6  0EEC               	movlw	236
 36587  0063D8  5C39               	subwf	__get_empty_cluster@cluster,w,c
 36588  0063DA  0E0F               	movlw	15
 36589  0063DC  583A               	subwfb	__get_empty_cluster@cluster+1,w,c
 36590  0063DE  B0D8               	btfsc	status,0,c
 36591  0063E0  D02B               	goto	u7460
 36592                           
 36593                           ;fat16.c: 116: {;fat16.c: 117: fat_sector = cluster>>8;
 36594  0063E2  503A               	movf	__get_empty_cluster@cluster+1,w,c
 36595  0063E4  6E33               	movwf	__get_empty_cluster@fat_sector,c
 36596  0063E6  6A34               	clrf	__get_empty_cluster@fat_sector+1,c
 36597                           
 36598                           ;fat16.c: 118: fat_sector += 2;
 36599  0063E8  0E02               	movlw	2
 36600  0063EA  2633               	addwf	__get_empty_cluster@fat_sector,f,c
 36601  0063EC  0E00               	movlw	0
 36602  0063EE  2234               	addwfc	__get_empty_cluster@fat_sector+1,f,c
 36603                           
 36604                           ;fat16.c: 119: offset = cluster & 0xFF;
 36605  0063F0  5039               	movf	__get_empty_cluster@cluster,w,c
 36606  0063F2  6E35               	movwf	__get_empty_cluster@offset,c
 36607  0063F4  6A36               	clrf	__get_empty_cluster@offset+1,c
 36608                           
 36609                           ;fat16.c: 120: offset <<= 1;
 36610  0063F6  90D8               	bcf	status,0,c
 36611  0063F8  3635               	rlcf	__get_empty_cluster@offset,f,c
 36612  0063FA  3636               	rlcf	__get_empty_cluster@offset+1,f,c
 36613                           
 36614                           ;fat16.c: 121: flash_partial_read(fat_sector, offset, 2, &value);
 36615  0063FC  C033  F029         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 36616  006400  C034  F02A         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 36617  006404  C035  F02B         	movff	__get_empty_cluster@offset,flash_partial_read@start
 36618  006408  C036  F02C         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 36619  00640C  0E00               	movlw	0
 36620  00640E  6E2E               	movwf	flash_partial_read@length+1,c
 36621  006410  0E02               	movlw	2
 36622  006412  6E2D               	movwf	flash_partial_read@length,c
 36623  006414  0E37               	movlw	low __get_empty_cluster@value
 36624  006416  6E2F               	movwf	flash_partial_read@data,c
 36625  006418  0E00               	movlw	high __get_empty_cluster@value
 36626  00641A  6E30               	movwf	flash_partial_read@data+1,c
 36627  00641C  ECFE  F03A         	call	_flash_partial_read	;wreg free
 36628                           
 36629                           ;fat16.c: 122: if(value==0x0000)
 36630  006420  5037               	movf	__get_empty_cluster@value,w,c
 36631  006422  1038               	iorwf	__get_empty_cluster@value+1,w,c
 36632  006424  A4D8               	btfss	status,2,c
 36633  006426  D005               	goto	l1788
 36634                           
 36635                           ;fat16.c: 123: {;fat16.c: 124: return cluster;
 36636  006428  C039  F031         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 36637  00642C  C03A  F032         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 36638  006430  0012               	return	
 36639  006432                     l1788:
 36640  006432  4A39               	infsnz	__get_empty_cluster@cluster,f,c
 36641  006434  2A3A               	incf	__get_empty_cluster@cluster+1,f,c
 36642  006436  D7CF               	goto	l10141
 36643  006438                     u7460:
 36644                           
 36645                           ;fat16.c: 125: };fat16.c: 126: };fat16.c: 127: return 0x0000;
 36646  006438  0E00               	movlw	0
 36647  00643A  6E32               	movwf	?__get_empty_cluster+1,c
 36648  00643C  0E00               	movlw	0
 36649  00643E  6E31               	movwf	?__get_empty_cluster,c
 36650  006440  0012               	return	
 36651  006442                     __end_of__get_empty_cluster:
 36652                           	opt stack 0
 36653                           tosu	equ	0xFFF
 36654                           tosh	equ	0xFFE
 36655                           tosl	equ	0xFFD
 36656                           pclath	equ	0xFFA
 36657                           tblptru	equ	0xFF8
 36658                           tblptrh	equ	0xFF7
 36659                           tblptrl	equ	0xFF6
 36660                           tablat	equ	0xFF5
 36661                           prodh	equ	0xFF4
 36662                           prodl	equ	0xFF3
 36663                           intcon	equ	0xFF2
 36664                           intcon2	equ	0xFF1
 36665                           intcon3	equ	0xFF0
 36666                           indf0	equ	0xFEF
 36667                           postinc0	equ	0xFEE
 36668                           fsr0h	equ	0xFEA
 36669                           fsr0l	equ	0xFE9
 36670                           wreg	equ	0xFE8
 36671                           indf1	equ	0xFE7
 36672                           postdec1	equ	0xFE5
 36673                           plusw1	equ	0xFE3
 36674                           fsr1h	equ	0xFE2
 36675                           fsr1l	equ	0xFE1
 36676                           indf2	equ	0xFDF
 36677                           postinc2	equ	0xFDE
 36678                           postdec2	equ	0xFDD
 36679                           plusw2	equ	0xFDB
 36680                           fsr2h	equ	0xFDA
 36681                           fsr2l	equ	0xFD9
 36682                           status	equ	0xFD8
 36683                           
 36684 ;; *************** function _flash_partial_read *****************
 36685 ;; Defined at:
 36686 ;;		line 453 in file "flash.c"
 36687 ;; Parameters:    Size  Location     Type
 36688 ;;  page            2   40[COMRAM] unsigned int 
 36689 ;;  start           2   42[COMRAM] unsigned int 
 36690 ;;  length          2   44[COMRAM] unsigned int 
 36691 ;;  data            2   46[COMRAM] PTR unsigned char 
 36692 ;;		 -> file_buffer(50), fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32), 
 36693 ;;		 -> fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(4), _get_first_cluster@first_
      +cluster(2), 
 36694 ;;		 -> _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@value(2), _root_is_available@first_byte(
      +1), 
 36695 ;;		 -> RAM(3759), 
 36696 ;; Auto vars:     Size  Location     Type
 36697 ;;		None
 36698 ;; Return value:  Size  Location     Type
 36699 ;;                  1    wreg      void 
 36700 ;; Registers used:
 36701 ;;		wreg, status,2, status,0, cstack
 36702 ;; Tracked objects:
 36703 ;;		On entry : 0/0
 36704 ;;		On exit  : 0/0
 36705 ;;		Unchanged: 0/0
 36706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36707 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36710 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36711 ;;Total ram usage:        8 bytes
 36712 ;; Hardware stack levels used:    1
 36713 ;; Hardware stack levels required when called:    6
 36714 ;; This function calls:
 36715 ;;		__flash_partial_read
 36716 ;;		_spi_set_configuration
 36717 ;; This function is called by:
 36718 ;;		__root_is_available
 36719 ;;		__get_empty_cluster
 36720 ;;		_fat_get_empty_clusters
 36721 ;;		__read_fat
 36722 ;;		__get_first_cluster
 36723 ;;		_fat_find_file
 36724 ;;		_fat_get_file_size
 36725 ;;		_fat_read_from_file
 36726 ;;		_fat_get_file_information
 36727 ;;		__get_file_size
 36728 ;; This function uses a non-reentrant model
 36729 ;;
 36730                           
 36731                           	psect	text192
 36732  0075FC                     __ptext192:
 36733                           	opt stack 0
 36734  0075FC                     _flash_partial_read:
 36735                           	opt stack 21
 36736                           
 36737                           ;flash.c: 456: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 36738                           
 36739                           ;incstack = 0
 36740  0075FC  0E00               	movlw	0
 36741  0075FE  ECE8  F03C         	call	_spi_set_configuration
 36742                           
 36743                           ;flash.c: 459: _flash_partial_read(page, start, length, data);
 36744  007602  C029  F015         	movff	flash_partial_read@page,__flash_partial_read@page
 36745  007606  C02A  F016         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 36746  00760A  C02B  F017         	movff	flash_partial_read@start,__flash_partial_read@start
 36747  00760E  C02C  F018         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 36748  007612  C02D  F019         	movff	flash_partial_read@length,__flash_partial_read@length
 36749  007616  C02E  F01A         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 36750  00761A  C02F  F01B         	movff	flash_partial_read@data,__flash_partial_read@data
 36751  00761E  C030  F01C         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 36752  007622  ECFC  F030         	call	__flash_partial_read	;wreg free
 36753                           
 36754                           ;flash.c: 462: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 36755  007626  0E01               	movlw	1
 36756  007628  ECE8  F03C         	call	_spi_set_configuration
 36757  00762C  0012               	return		;funcret
 36758  00762E                     __end_of_flash_partial_read:
 36759                           	opt stack 0
 36760                           tosu	equ	0xFFF
 36761                           tosh	equ	0xFFE
 36762                           tosl	equ	0xFFD
 36763                           pclath	equ	0xFFA
 36764                           tblptru	equ	0xFF8
 36765                           tblptrh	equ	0xFF7
 36766                           tblptrl	equ	0xFF6
 36767                           tablat	equ	0xFF5
 36768                           prodh	equ	0xFF4
 36769                           prodl	equ	0xFF3
 36770                           intcon	equ	0xFF2
 36771                           intcon2	equ	0xFF1
 36772                           intcon3	equ	0xFF0
 36773                           indf0	equ	0xFEF
 36774                           postinc0	equ	0xFEE
 36775                           fsr0h	equ	0xFEA
 36776                           fsr0l	equ	0xFE9
 36777                           wreg	equ	0xFE8
 36778                           indf1	equ	0xFE7
 36779                           postdec1	equ	0xFE5
 36780                           plusw1	equ	0xFE3
 36781                           fsr1h	equ	0xFE2
 36782                           fsr1l	equ	0xFE1
 36783                           indf2	equ	0xFDF
 36784                           postinc2	equ	0xFDE
 36785                           postdec2	equ	0xFDD
 36786                           plusw2	equ	0xFDB
 36787                           fsr2h	equ	0xFDA
 36788                           fsr2l	equ	0xFD9
 36789                           status	equ	0xFD8
 36790                           
 36791 ;; *************** function __flash_partial_read *****************
 36792 ;; Defined at:
 36793 ;;		line 302 in file "flash.c"
 36794 ;; Parameters:    Size  Location     Type
 36795 ;;  page            2   20[COMRAM] unsigned int 
 36796 ;;  start           2   22[COMRAM] unsigned int 
 36797 ;;  length          2   24[COMRAM] unsigned int 
 36798 ;;  data            2   26[COMRAM] PTR unsigned char 
 36799 ;;		 -> file_buffer(50), buffer(512), fat_read_from_file@root(32), fat_rename_file@root(32), 
 36800 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 36801 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 36802 ;;		 -> _root_is_available@first_byte(1), msd_buffer(512), RAM(3759), 
 36803 ;; Auto vars:     Size  Location     Type
 36804 ;;  command         4   32[COMRAM] unsigned char [4]
 36805 ;;  address         4   36[COMRAM] unsigned long 
 36806 ;; Return value:  Size  Location     Type
 36807 ;;                  1    wreg      void 
 36808 ;; Registers used:
 36809 ;;		wreg, status,2, status,0, cstack
 36810 ;; Tracked objects:
 36811 ;;		On entry : 0/0
 36812 ;;		On exit  : 0/0
 36813 ;;		Unchanged: 0/0
 36814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36815 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36816 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36817 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36818 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36819 ;;Total ram usage:       20 bytes
 36820 ;; Hardware stack levels used:    1
 36821 ;; Hardware stack levels required when called:    5
 36822 ;; This function calls:
 36823 ;;		_flash_is_busy
 36824 ;;		_spi_tx_rx
 36825 ;; This function is called by:
 36826 ;;		_flash_page_read
 36827 ;;		_flash_partial_read
 36828 ;; This function uses a non-reentrant model
 36829 ;;
 36830                           
 36831                           	psect	text193
 36832  0061F8                     __ptext193:
 36833                           	opt stack 0
 36834  0061F8                     __flash_partial_read:
 36835                           	opt stack 21
 36836                           
 36837                           ;flash.c: 304: uint32_t address;;flash.c: 305: uint8_t command[4];;flash.c: 308: while(f
      +                          lash_is_busy());
 36838                           
 36839                           ;incstack = 0
 36840  0061F8  ECFF  F03C         	call	_flash_is_busy	;wreg free
 36841  0061FC  0900               	iorlw	0
 36842  0061FE  A4D8               	btfss	status,2,c
 36843  006200  D7FB               	goto	__flash_partial_read
 36844                           
 36845                           ;flash.c: 311: address = page;
 36846  006202  C015  F025         	movff	__flash_partial_read@page,__flash_partial_read@address
 36847  006206  C016  F026         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 36848  00620A  6A27               	clrf	__flash_partial_read@address+2,c
 36849  00620C  6A28               	clrf	__flash_partial_read@address+3,c
 36850                           
 36851                           ;flash.c: 312: address <<= 9;
 36852  00620E  0E09               	movlw	9
 36853  006210                     u6165:
 36854  006210  90D8               	bcf	status,0,c
 36855  006212  3625               	rlcf	__flash_partial_read@address,f,c
 36856  006214  3626               	rlcf	__flash_partial_read@address+1,f,c
 36857  006216  3627               	rlcf	__flash_partial_read@address+2,f,c
 36858  006218  3628               	rlcf	__flash_partial_read@address+3,f,c
 36859  00621A  2EE8               	decfsz	wreg,f,c
 36860  00621C  D7F9               	goto	u6165
 36861                           
 36862                           ;flash.c: 313: address |= start;
 36863  00621E  5017               	movf	__flash_partial_read@start,w,c
 36864  006220  6E1D               	movwf	??__flash_partial_read& (0+255),c
 36865  006222  5018               	movf	__flash_partial_read@start+1,w,c
 36866  006224  6E1E               	movwf	(??__flash_partial_read+1)& (0+255),c
 36867  006226  6A1F               	clrf	(??__flash_partial_read+2)& (0+255),c
 36868  006228  6A20               	clrf	(??__flash_partial_read+3)& (0+255),c
 36869  00622A  501D               	movf	??__flash_partial_read,w,c
 36870  00622C  1225               	iorwf	__flash_partial_read@address,f,c
 36871  00622E  501E               	movf	??__flash_partial_read+1,w,c
 36872  006230  1226               	iorwf	__flash_partial_read@address+1,f,c
 36873  006232  501F               	movf	??__flash_partial_read+2,w,c
 36874  006234  1227               	iorwf	__flash_partial_read@address+2,f,c
 36875  006236  5020               	movf	??__flash_partial_read+3,w,c
 36876  006238  1228               	iorwf	__flash_partial_read@address+3,f,c
 36877                           
 36878                           ;flash.c: 316: command[0] = 0x03;
 36879  00623A  0E03               	movlw	3
 36880  00623C  6E21               	movwf	__flash_partial_read@command,c
 36881                           
 36882                           ;flash.c: 317: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 36883  00623E  C027  F022         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 36884                           
 36885                           ;flash.c: 318: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 36886  006242  5026               	movf	__flash_partial_read@address+1,w,c
 36887  006244  6E23               	movwf	__flash_partial_read@command+2,c
 36888                           
 36889                           ;flash.c: 319: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 36890  006246  C025  F024         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 36891                           
 36892                           ;flash.c: 322: spi_tx_rx(command, 4, data, length);
 36893  00624A  0E21               	movlw	low __flash_partial_read@command
 36894  00624C  6E01               	movwf	spi_tx_rx@command,c
 36895  00624E  0E00               	movlw	high __flash_partial_read@command
 36896  006250  6E02               	movwf	spi_tx_rx@command+1,c
 36897  006252  0E00               	movlw	0
 36898  006254  6E04               	movwf	spi_tx_rx@command_length+1,c
 36899  006256  0E04               	movlw	4
 36900  006258  6E03               	movwf	spi_tx_rx@command_length,c
 36901  00625A  C01B  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 36902  00625E  C01C  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 36903  006262  C019  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 36904  006266  C01A  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 36905  00626A  ECB8  F02C         	call	_spi_tx_rx	;wreg free
 36906  00626E  0012               	return		;funcret
 36907  006270                     __end_of__flash_partial_read:
 36908                           	opt stack 0
 36909                           tosu	equ	0xFFF
 36910                           tosh	equ	0xFFE
 36911                           tosl	equ	0xFFD
 36912                           pclath	equ	0xFFA
 36913                           tblptru	equ	0xFF8
 36914                           tblptrh	equ	0xFF7
 36915                           tblptrl	equ	0xFF6
 36916                           tablat	equ	0xFF5
 36917                           prodh	equ	0xFF4
 36918                           prodl	equ	0xFF3
 36919                           intcon	equ	0xFF2
 36920                           intcon2	equ	0xFF1
 36921                           intcon3	equ	0xFF0
 36922                           indf0	equ	0xFEF
 36923                           postinc0	equ	0xFEE
 36924                           fsr0h	equ	0xFEA
 36925                           fsr0l	equ	0xFE9
 36926                           wreg	equ	0xFE8
 36927                           indf1	equ	0xFE7
 36928                           postdec1	equ	0xFE5
 36929                           plusw1	equ	0xFE3
 36930                           fsr1h	equ	0xFE2
 36931                           fsr1l	equ	0xFE1
 36932                           indf2	equ	0xFDF
 36933                           postinc2	equ	0xFDE
 36934                           postdec2	equ	0xFDD
 36935                           plusw2	equ	0xFDB
 36936                           fsr2h	equ	0xFDA
 36937                           fsr2l	equ	0xFD9
 36938                           status	equ	0xFD8
 36939                           
 36940 ;; *************** function _flash_is_busy *****************
 36941 ;; Defined at:
 36942 ;;		line 350 in file "flash.c"
 36943 ;; Parameters:    Size  Location     Type
 36944 ;;		None
 36945 ;; Auto vars:     Size  Location     Type
 36946 ;;  result          1   19[COMRAM] unsigned char 
 36947 ;; Return value:  Size  Location     Type
 36948 ;;                  1    wreg      unsigned char 
 36949 ;; Registers used:
 36950 ;;		wreg, status,2, status,0, cstack
 36951 ;; Tracked objects:
 36952 ;;		On entry : 0/0
 36953 ;;		On exit  : 0/0
 36954 ;;		Unchanged: 0/0
 36955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36959 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36960 ;;Total ram usage:        1 bytes
 36961 ;; Hardware stack levels used:    1
 36962 ;; Hardware stack levels required when called:    4
 36963 ;; This function calls:
 36964 ;;		__flash_is_busy
 36965 ;;		_spi_set_configuration
 36966 ;; This function is called by:
 36967 ;;		__flash_partial_read
 36968 ;;		_flash_partial_write
 36969 ;;		_api_prepare
 36970 ;;		__fill_buffer_get_status
 36971 ;; This function uses a non-reentrant model
 36972 ;;
 36973                           
 36974                           	psect	text194
 36975  0079FE                     __ptext194:
 36976                           	opt stack 0
 36977  0079FE                     _flash_is_busy:
 36978                           	opt stack 21
 36979                           
 36980                           ;flash.c: 352: uint8_t result;;flash.c: 355: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 36981                           
 36982                           ;incstack = 0
 36983  0079FE  0E00               	movlw	0
 36984  007A00  ECE8  F03C         	call	_spi_set_configuration
 36985                           
 36986                           ;flash.c: 358: result = _flash_is_busy();
 36987  007A04  EC83  F03C         	call	__flash_is_busy	;wreg free
 36988  007A08  6E14               	movwf	flash_is_busy@result,c
 36989                           
 36990                           ;flash.c: 361: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 36991  007A0A  0E01               	movlw	1
 36992  007A0C  ECE8  F03C         	call	_spi_set_configuration
 36993                           
 36994                           ;flash.c: 364: return result;
 36995  007A10  5014               	movf	flash_is_busy@result,w,c
 36996  007A12  0012               	return	
 36997  007A14                     __end_of_flash_is_busy:
 36998                           	opt stack 0
 36999                           tosu	equ	0xFFF
 37000                           tosh	equ	0xFFE
 37001                           tosl	equ	0xFFD
 37002                           pclath	equ	0xFFA
 37003                           tblptru	equ	0xFF8
 37004                           tblptrh	equ	0xFF7
 37005                           tblptrl	equ	0xFF6
 37006                           tablat	equ	0xFF5
 37007                           prodh	equ	0xFF4
 37008                           prodl	equ	0xFF3
 37009                           intcon	equ	0xFF2
 37010                           intcon2	equ	0xFF1
 37011                           intcon3	equ	0xFF0
 37012                           indf0	equ	0xFEF
 37013                           postinc0	equ	0xFEE
 37014                           fsr0h	equ	0xFEA
 37015                           fsr0l	equ	0xFE9
 37016                           wreg	equ	0xFE8
 37017                           indf1	equ	0xFE7
 37018                           postdec1	equ	0xFE5
 37019                           plusw1	equ	0xFE3
 37020                           fsr1h	equ	0xFE2
 37021                           fsr1l	equ	0xFE1
 37022                           indf2	equ	0xFDF
 37023                           postinc2	equ	0xFDE
 37024                           postdec2	equ	0xFDD
 37025                           plusw2	equ	0xFDB
 37026                           fsr2h	equ	0xFDA
 37027                           fsr2l	equ	0xFD9
 37028                           status	equ	0xFD8
 37029                           
 37030 ;; *************** function _spi_set_configuration *****************
 37031 ;; Defined at:
 37032 ;;		line 124 in file "spi.c"
 37033 ;; Parameters:    Size  Location     Type
 37034 ;;  configuratio    1    wreg     enum E6747
 37035 ;; Auto vars:     Size  Location     Type
 37036 ;;  configuratio    1    0[COMRAM] enum E6747
 37037 ;; Return value:  Size  Location     Type
 37038 ;;                  1    wreg      void 
 37039 ;; Registers used:
 37040 ;;		wreg, status,2, status,0
 37041 ;; Tracked objects:
 37042 ;;		On entry : 0/0
 37043 ;;		On exit  : 0/0
 37044 ;;		Unchanged: 0/0
 37045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37049 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37050 ;;Total ram usage:        1 bytes
 37051 ;; Hardware stack levels used:    1
 37052 ;; This function calls:
 37053 ;;		Nothing
 37054 ;; This function is called by:
 37055 ;;		_flash_init
 37056 ;;		_flash_is_busy
 37057 ;;		_flash_page_read
 37058 ;;		_flash_page_write
 37059 ;;		_flash_partial_read
 37060 ;;		_flash_partial_write
 37061 ;;		_flash_set_power_state
 37062 ;; This function uses a non-reentrant model
 37063 ;;
 37064                           
 37065                           	psect	text195
 37066  0079D0                     __ptext195:
 37067                           	opt stack 0
 37068  0079D0                     _spi_set_configuration:
 37069                           	opt stack 28
 37070                           
 37071                           ;incstack = 0
 37072                           ;spi_set_configuration@configuration stored from wreg
 37073  0079D0  6E01               	movwf	spi_set_configuration@configuration,c
 37074                           
 37075                           ;spi.c: 126: if(active_configuration != configuration)
 37076  0079D2  5001               	movf	spi_set_configuration@configuration,w,c
 37077  0079D4  0100               	movlb	0	; () banked
 37078  0079D6  199C               	xorwf	_active_configuration& (0+255),w,b
 37079  0079D8  B4D8               	btfsc	status,2,c
 37080  0079DA  0012               	return	
 37081                           
 37082                           ; BSR set to: 0
 37083                           
 37084                           ; BSR set to: 0
 37085                           
 37086                           ; BSR set to: 0
 37087                           ;spi.c: 139: }
 37088                           
 37089                           ; BSR set to: 0
 37090                           ;spi.c: 138: break;
 37091                           
 37092                           ;spi.c: 136: case SPI_CONFIGURATION_EXTERNAL:
 37093                           
 37094                           ; BSR set to: 0
 37095                           ;spi.c: 134: break;
 37096                           
 37097                           ;spi.c: 131: {;spi.c: 132: case SPI_CONFIGURATION_INTERNAL:
 37098                           
 37099                           ; BSR set to: 0
 37100                           ;spi.c: 127: {;spi.c: 130: switch(configuration)
 37101  0079DC  5001               	movf	spi_set_configuration@configuration,w,c
 37102                           
 37103                           ; Switch size 1, requested type "space"
 37104                           ; Number of cases is 2, Range of values is 0 to 1
 37105                           ; switch strategies available:
 37106                           ; Name         Instructions Cycles
 37107                           ; simple_byte            7     4 (average)
 37108                           ;	Chosen strategy is simple_byte
 37109  0079DE  0A00               	xorlw	0	; case 0
 37110  0079E0  B4D8               	btfsc	status,2,c
 37111  0079E2  0012               	return	
 37112  0079E4  0A01               	xorlw	1	; case 1
 37113                           
 37114                           ; BSR set to: 0
 37115  0079E6  0012               	return	
 37116  0079E8                     __end_of_spi_set_configuration:
 37117                           	opt stack 0
 37118                           tosu	equ	0xFFF
 37119                           tosh	equ	0xFFE
 37120                           tosl	equ	0xFFD
 37121                           pclath	equ	0xFFA
 37122                           tblptru	equ	0xFF8
 37123                           tblptrh	equ	0xFF7
 37124                           tblptrl	equ	0xFF6
 37125                           tablat	equ	0xFF5
 37126                           prodh	equ	0xFF4
 37127                           prodl	equ	0xFF3
 37128                           intcon	equ	0xFF2
 37129                           intcon2	equ	0xFF1
 37130                           intcon3	equ	0xFF0
 37131                           indf0	equ	0xFEF
 37132                           postinc0	equ	0xFEE
 37133                           fsr0h	equ	0xFEA
 37134                           fsr0l	equ	0xFE9
 37135                           wreg	equ	0xFE8
 37136                           indf1	equ	0xFE7
 37137                           postdec1	equ	0xFE5
 37138                           plusw1	equ	0xFE3
 37139                           fsr1h	equ	0xFE2
 37140                           fsr1l	equ	0xFE1
 37141                           indf2	equ	0xFDF
 37142                           postinc2	equ	0xFDE
 37143                           postdec2	equ	0xFDD
 37144                           plusw2	equ	0xFDB
 37145                           fsr2h	equ	0xFDA
 37146                           fsr2l	equ	0xFD9
 37147                           status	equ	0xFD8
 37148                           
 37149 ;; *************** function __flash_is_busy *****************
 37150 ;; Defined at:
 37151 ;;		line 277 in file "flash.c"
 37152 ;; Parameters:    Size  Location     Type
 37153 ;;		None
 37154 ;; Auto vars:     Size  Location     Type
 37155 ;;  status          2   17[COMRAM] unsigned int 
 37156 ;; Return value:  Size  Location     Type
 37157 ;;                  1    wreg      unsigned char 
 37158 ;; Registers used:
 37159 ;;		wreg, status,2, status,0, cstack
 37160 ;; Tracked objects:
 37161 ;;		On entry : 0/0
 37162 ;;		On exit  : 0/0
 37163 ;;		Unchanged: 0/0
 37164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37168 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37169 ;;Total ram usage:        2 bytes
 37170 ;; Hardware stack levels used:    1
 37171 ;; Hardware stack levels required when called:    3
 37172 ;; This function calls:
 37173 ;;		__flash_get_status
 37174 ;;		__flash_wakeup
 37175 ;; This function is called by:
 37176 ;;		__flash_set_page_size
 37177 ;;		__flash_copy_page_to_buffer
 37178 ;;		__flash_compare_page_to_buffer
 37179 ;;		__flash_write_to_buffer
 37180 ;;		__flash_write_page_from_buffer
 37181 ;;		_flash_is_busy
 37182 ;;		__flash_erase_page
 37183 ;;		_flash_set_power_state
 37184 ;; This function uses a non-reentrant model
 37185 ;;
 37186                           
 37187                           	psect	text196
 37188  007906                     __ptext196:
 37189                           	opt stack 0
 37190  007906                     __flash_is_busy:
 37191                           	opt stack 24
 37192                           
 37193                           ;flash.c: 280: if(power_state!=FLASH_POWER_STATE_NORMAL)
 37194                           
 37195                           ; BSR set to: 0
 37196                           ;incstack = 0
 37197  007906  0100               	movlb	0	; () banked
 37198  007908  519F               	movf	_power_state& (0+255),w,b
 37199  00790A  A4D8               	btfss	status,2,c
 37200                           
 37201                           ; BSR set to: 0
 37202                           ;flash.c: 281: {;flash.c: 282: _flash_wakeup();
 37203  00790C  EC4B  F037         	call	__flash_wakeup	;wreg free
 37204                           
 37205                           ;flash.c: 283: };flash.c: 286: uint16_t status = _flash_get_status();
 37206  007910  EC17  F03B         	call	__flash_get_status	;wreg free
 37207  007914  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 37208  007918  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 37209                           
 37210                           ;flash.c: 288: if(status & 0b0000000010000000)
 37211  00791C  AE12               	btfss	__flash_is_busy@status,7,c
 37212  00791E  D002               	goto	l1659
 37213                           
 37214                           ;flash.c: 289: {;flash.c: 291: return 0;
 37215  007920  0E00               	movlw	0
 37216                           
 37217                           ;flash.c: 292: }
 37218  007922  0012               	return	
 37219  007924                     l1659:
 37220                           
 37221                           ;flash.c: 293: else;flash.c: 294: {;flash.c: 296: return 1;
 37222  007924  0E01               	movlw	1
 37223  007926  0012               	return	
 37224  007928                     __end_of__flash_is_busy:
 37225                           	opt stack 0
 37226                           tosu	equ	0xFFF
 37227                           tosh	equ	0xFFE
 37228                           tosl	equ	0xFFD
 37229                           pclath	equ	0xFFA
 37230                           tblptru	equ	0xFF8
 37231                           tblptrh	equ	0xFF7
 37232                           tblptrl	equ	0xFF6
 37233                           tablat	equ	0xFF5
 37234                           prodh	equ	0xFF4
 37235                           prodl	equ	0xFF3
 37236                           intcon	equ	0xFF2
 37237                           intcon2	equ	0xFF1
 37238                           intcon3	equ	0xFF0
 37239                           indf0	equ	0xFEF
 37240                           postinc0	equ	0xFEE
 37241                           fsr0h	equ	0xFEA
 37242                           fsr0l	equ	0xFE9
 37243                           wreg	equ	0xFE8
 37244                           indf1	equ	0xFE7
 37245                           postdec1	equ	0xFE5
 37246                           plusw1	equ	0xFE3
 37247                           fsr1h	equ	0xFE2
 37248                           fsr1l	equ	0xFE1
 37249                           indf2	equ	0xFDF
 37250                           postinc2	equ	0xFDE
 37251                           postdec2	equ	0xFDD
 37252                           plusw2	equ	0xFDB
 37253                           fsr2h	equ	0xFDA
 37254                           fsr2l	equ	0xFD9
 37255                           status	equ	0xFD8
 37256                           
 37257 ;; *************** function __flash_wakeup *****************
 37258 ;; Defined at:
 37259 ;;		line 124 in file "flash.c"
 37260 ;; Parameters:    Size  Location     Type
 37261 ;;		None
 37262 ;; Auto vars:     Size  Location     Type
 37263 ;;  command         1    8[COMRAM] unsigned char 
 37264 ;; Return value:  Size  Location     Type
 37265 ;;                  1    wreg      void 
 37266 ;; Registers used:
 37267 ;;		wreg, status,2, status,0, cstack
 37268 ;; Tracked objects:
 37269 ;;		On entry : 0/0
 37270 ;;		On exit  : 0/0
 37271 ;;		Unchanged: 0/0
 37272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37277 ;;Total ram usage:        1 bytes
 37278 ;; Hardware stack levels used:    1
 37279 ;; Hardware stack levels required when called:    2
 37280 ;; This function calls:
 37281 ;;		_spi_tx
 37282 ;; This function is called by:
 37283 ;;		__flash_is_busy
 37284 ;;		_flash_set_power_state
 37285 ;; This function uses a non-reentrant model
 37286 ;;
 37287                           
 37288                           	psect	text197
 37289  006E96                     __ptext197:
 37290                           	opt stack 0
 37291  006E96                     __flash_wakeup:
 37292                           	opt stack 24
 37293                           
 37294                           ;flash.c: 126: uint8_t command;;flash.c: 128: switch(power_state)
 37295                           
 37296                           ;incstack = 0
 37297  006E96  D021               	goto	l1608
 37298  006E98                     
 37299                           ;flash.c: 131: command = 0xAB;
 37300  006E98  0EAB               	movlw	171
 37301  006E9A  6E09               	movwf	__flash_wakeup@command,c
 37302                           
 37303                           ;flash.c: 132: spi_tx(&command, 1);
 37304  006E9C  0E09               	movlw	low __flash_wakeup@command
 37305  006E9E  6E01               	movwf	spi_tx@data,c
 37306  006EA0  0E00               	movlw	high __flash_wakeup@command
 37307  006EA2  6E02               	movwf	spi_tx@data+1,c
 37308  006EA4  0E00               	movlw	0
 37309  006EA6  6E04               	movwf	spi_tx@length+1,c
 37310  006EA8  0E01               	movlw	1
 37311  006EAA  6E03               	movwf	spi_tx@length,c
 37312  006EAC  EC95  F035         	call	_spi_tx	;wreg free
 37313                           
 37314                           ;flash.c: 133: _delay((unsigned long)((35)*(8000000/4000000.0)));
 37315  006EB0  0E17               	movlw	23
 37316  006EB2                     u11777:
 37317  006EB2  2EE8               	decfsz	wreg,f,c
 37318  006EB4  D7FE               	bra	u11777
 37319  006EB6  F000               	nop	
 37320                           
 37321                           ;flash.c: 134: power_state = FLASH_POWER_STATE_NORMAL;
 37322  006EB8  0E00               	movlw	0
 37323  006EBA  0100               	movlb	0	; () banked
 37324  006EBC  6F9F               	movwf	_power_state& (0+255),b
 37325                           
 37326                           ;flash.c: 135: break;
 37327  006EBE  0012               	return	
 37328  006EC0                     l1611:
 37329                           
 37330                           ; BSR set to: 0
 37331                           ;flash.c: 140: LATDbits.LD7 = 0;
 37332  006EC0  9E8C               	bcf	3980,7,c	;volatile
 37333                           
 37334                           ; BSR set to: 0
 37335                           ;flash.c: 141: _delay((unsigned long)((20)*(8000000/4000000.0)));
 37336  006EC2  0E0D               	movlw	13
 37337  006EC4                     u11787:
 37338  006EC4  2EE8               	decfsz	wreg,f,c
 37339  006EC6  D7FE               	bra	u11787
 37340  006EC8  F000               	nop	
 37341                           
 37342                           ;flash.c: 142: LATDbits.LD7 = 1;
 37343  006ECA  8E8C               	bsf	3980,7,c	;volatile
 37344                           
 37345                           ;flash.c: 143: _delay((unsigned long)((120)*(8000000/4000000.0)));
 37346  006ECC  0E50               	movlw	80
 37347  006ECE                     u11797:
 37348  006ECE  2EE8               	decfsz	wreg,f,c
 37349  006ED0  D7FE               	bra	u11797
 37350                           
 37351                           ;flash.c: 144: power_state = FLASH_POWER_STATE_NORMAL;
 37352  006ED2  0E00               	movlw	0
 37353  006ED4  0100               	movlb	0	; () banked
 37354  006ED6  6F9F               	movwf	_power_state& (0+255),b
 37355                           
 37356                           ; BSR set to: 0
 37357                           ;flash.c: 146: }
 37358                           
 37359                           ;flash.c: 145: break;
 37360  006ED8  0012               	return	
 37361  006EDA                     l1608:
 37362                           
 37363                           ; BSR set to: 0
 37364  006EDA  0100               	movlb	0	; () banked
 37365  006EDC  519F               	movf	_power_state& (0+255),w,b
 37366                           
 37367                           ; Switch size 1, requested type "space"
 37368                           ; Number of cases is 2, Range of values is 1 to 2
 37369                           ; switch strategies available:
 37370                           ; Name         Instructions Cycles
 37371                           ; simple_byte            7     4 (average)
 37372                           ;	Chosen strategy is simple_byte
 37373  006EDE  0A01               	xorlw	1	; case 1
 37374  006EE0  B4D8               	btfsc	status,2,c
 37375  006EE2  D7DA               	goto	l1609
 37376  006EE4  0A03               	xorlw	3	; case 2
 37377  006EE6  A4D8               	btfss	status,2,c
 37378  006EE8  0012               	return	
 37379  006EEA  D7EA               	goto	l1611
 37380  006EEC                     __end_of__flash_wakeup:
 37381                           	opt stack 0
 37382                           tosu	equ	0xFFF
 37383                           tosh	equ	0xFFE
 37384                           tosl	equ	0xFFD
 37385                           pclath	equ	0xFFA
 37386                           tblptru	equ	0xFF8
 37387                           tblptrh	equ	0xFF7
 37388                           tblptrl	equ	0xFF6
 37389                           tablat	equ	0xFF5
 37390                           prodh	equ	0xFF4
 37391                           prodl	equ	0xFF3
 37392                           intcon	equ	0xFF2
 37393                           intcon2	equ	0xFF1
 37394                           intcon3	equ	0xFF0
 37395                           indf0	equ	0xFEF
 37396                           postinc0	equ	0xFEE
 37397                           fsr0h	equ	0xFEA
 37398                           fsr0l	equ	0xFE9
 37399                           wreg	equ	0xFE8
 37400                           indf1	equ	0xFE7
 37401                           postdec1	equ	0xFE5
 37402                           plusw1	equ	0xFE3
 37403                           fsr1h	equ	0xFE2
 37404                           fsr1l	equ	0xFE1
 37405                           indf2	equ	0xFDF
 37406                           postinc2	equ	0xFDE
 37407                           postdec2	equ	0xFDD
 37408                           plusw2	equ	0xFDB
 37409                           fsr2h	equ	0xFDA
 37410                           fsr2l	equ	0xFD9
 37411                           status	equ	0xFD8
 37412                           
 37413 ;; *************** function _spi_tx *****************
 37414 ;; Defined at:
 37415 ;;		line 151 in file "spi.c"
 37416 ;; Parameters:    Size  Location     Type
 37417 ;;  data            2    0[COMRAM] PTR unsigned char 
 37418 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 37419 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 37420 ;;  length          2    2[COMRAM] unsigned int 
 37421 ;; Auto vars:     Size  Location     Type
 37422 ;;		None
 37423 ;; Return value:  Size  Location     Type
 37424 ;;                  1    wreg      void 
 37425 ;; Registers used:
 37426 ;;		wreg, status,2, status,0, cstack
 37427 ;; Tracked objects:
 37428 ;;		On entry : 0/0
 37429 ;;		On exit  : 0/0
 37430 ;;		Unchanged: 0/0
 37431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37434 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37435 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37436 ;;Total ram usage:        8 bytes
 37437 ;; Hardware stack levels used:    1
 37438 ;; Hardware stack levels required when called:    1
 37439 ;; This function calls:
 37440 ;;		__switch_mastermode
 37441 ;; This function is called by:
 37442 ;;		__flash_set_page_size
 37443 ;;		__flash_wakeup
 37444 ;;		__flash_copy_page_to_buffer
 37445 ;;		__flash_compare_page_to_buffer
 37446 ;;		__flash_write_page_from_buffer
 37447 ;;		__flash_erase_page
 37448 ;;		_flash_set_power_state
 37449 ;; This function uses a non-reentrant model
 37450 ;;
 37451                           
 37452                           	psect	text198
 37453  006B2A                     __ptext198:
 37454                           	opt stack 0
 37455  006B2A                     _spi_tx:
 37456                           	opt stack 26
 37457                           
 37458                           ;spi.c: 154: _switch_mastermode();
 37459                           
 37460                           ; BSR set to: 0
 37461                           ;incstack = 0
 37462  006B2A  ECBC  F03D         	call	__switch_mastermode	;wreg free
 37463                           
 37464                           ;spi.c: 157: DMACON1bits.SSCON1 = 0;
 37465  006B2E  9E88               	bcf	3976,7,c	;volatile
 37466                           
 37467                           ;spi.c: 158: DMACON1bits.SSCON0 = 0;
 37468  006B30  9C88               	bcf	3976,6,c	;volatile
 37469                           
 37470                           ;spi.c: 160: DMACON1bits.TXINC = 1;
 37471  006B32  8A88               	bsf	3976,5,c	;volatile
 37472                           
 37473                           ;spi.c: 162: DMACON1bits.RXINC = 0;
 37474  006B34  9888               	bcf	3976,4,c	;volatile
 37475                           
 37476                           ;spi.c: 164: DMACON1bits.DUPLEX1 = 0;
 37477  006B36  9688               	bcf	3976,3,c	;volatile
 37478                           
 37479                           ;spi.c: 165: DMACON1bits.DUPLEX0 = 1;
 37480  006B38  8488               	bsf	3976,2,c	;volatile
 37481                           
 37482                           ;spi.c: 167: DMACON1bits.DLYINTEN = 0;
 37483  006B3A  9288               	bcf	3976,1,c	;volatile
 37484                           
 37485                           ;spi.c: 169: DMACON2bits.DLYCYC = 0b0000;
 37486  006B3C  9886               	bcf	3974,4,c	;volatile
 37487  006B3E  9A86               	bcf	3974,5,c	;volatile
 37488  006B40  9C86               	bcf	3974,6,c	;volatile
 37489  006B42  9E86               	bcf	3974,7,c	;volatile
 37490                           
 37491                           ;spi.c: 171: DMACON2bits.INTLVL = 0b0000;
 37492  006B44  9086               	bcf	3974,0,c	;volatile
 37493  006B46  9286               	bcf	3974,1,c	;volatile
 37494  006B48  9486               	bcf	3974,2,c	;volatile
 37495  006B4A  9686               	bcf	3974,3,c	;volatile
 37496                           
 37497                           ;spi.c: 174: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37498  006B4C  5002               	movf	spi_tx@data+1,w,c
 37499  006B4E  6E6A               	movwf	3946,c	;volatile
 37500                           
 37501                           ;spi.c: 175: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37502  006B50  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 37503                           
 37504                           ;spi.c: 178: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 37505  006B54  0EFF               	movlw	255
 37506  006B56  6E05               	movwf	??_spi_tx& (0+255),c
 37507  006B58  0EFF               	movlw	255
 37508  006B5A  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 37509  006B5C  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 37510  006B60  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 37511  006B64  5005               	movf	??_spi_tx,w,c
 37512  006B66  2607               	addwf	??_spi_tx+2,f,c
 37513  006B68  5006               	movf	??_spi_tx+1,w,c
 37514  006B6A  2208               	addwfc	??_spi_tx+3,f,c
 37515  006B6C  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 37516  006B70  6A08               	clrf	??_spi_tx+3,c
 37517  006B72  5007               	movf	??_spi_tx+2,w,c
 37518  006B74  6E66               	movwf	3942,c	;volatile
 37519                           
 37520                           ;spi.c: 179: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 37521  006B76  0403               	decf	spi_tx@length,w,c
 37522  006B78  6E67               	movwf	3943,c	;volatile
 37523                           
 37524                           ;spi.c: 182: LATDbits.LD7 = 0;
 37525  006B7A  9E8C               	bcf	3980,7,c	;volatile
 37526                           
 37527                           ;spi.c: 183: DMACON1bits.DMAEN = 1;
 37528  006B7C  8088               	bsf	3976,0,c	;volatile
 37529  006B7E  B088               	btfsc	3976,0,c	;volatile
 37530  006B80  D7FE               	goto	l2650
 37531                           
 37532                           ;spi.c: 185: LATDbits.LD7 = 1;
 37533  006B82  8E8C               	bsf	3980,7,c	;volatile
 37534  006B84  0012               	return		;funcret
 37535  006B86                     __end_of_spi_tx:
 37536                           	opt stack 0
 37537                           tosu	equ	0xFFF
 37538                           tosh	equ	0xFFE
 37539                           tosl	equ	0xFFD
 37540                           pclath	equ	0xFFA
 37541                           tblptru	equ	0xFF8
 37542                           tblptrh	equ	0xFF7
 37543                           tblptrl	equ	0xFF6
 37544                           tablat	equ	0xFF5
 37545                           prodh	equ	0xFF4
 37546                           prodl	equ	0xFF3
 37547                           intcon	equ	0xFF2
 37548                           intcon2	equ	0xFF1
 37549                           intcon3	equ	0xFF0
 37550                           indf0	equ	0xFEF
 37551                           postinc0	equ	0xFEE
 37552                           fsr0h	equ	0xFEA
 37553                           fsr0l	equ	0xFE9
 37554                           wreg	equ	0xFE8
 37555                           indf1	equ	0xFE7
 37556                           postdec1	equ	0xFE5
 37557                           plusw1	equ	0xFE3
 37558                           fsr1h	equ	0xFE2
 37559                           fsr1l	equ	0xFE1
 37560                           indf2	equ	0xFDF
 37561                           postinc2	equ	0xFDE
 37562                           postdec2	equ	0xFDD
 37563                           plusw2	equ	0xFDB
 37564                           fsr2h	equ	0xFDA
 37565                           fsr2l	equ	0xFD9
 37566                           status	equ	0xFD8
 37567                           
 37568 ;; *************** function __flash_get_status *****************
 37569 ;; Defined at:
 37570 ;;		line 113 in file "flash.c"
 37571 ;; Parameters:    Size  Location     Type
 37572 ;;		None
 37573 ;; Auto vars:     Size  Location     Type
 37574 ;;  status          2   15[COMRAM] unsigned int 
 37575 ;;  command         1   14[COMRAM] unsigned char 
 37576 ;; Return value:  Size  Location     Type
 37577 ;;                  2   12[COMRAM] unsigned int 
 37578 ;; Registers used:
 37579 ;;		wreg, status,2, status,0, cstack
 37580 ;; Tracked objects:
 37581 ;;		On entry : 0/0
 37582 ;;		On exit  : 0/0
 37583 ;;		Unchanged: 0/0
 37584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37586 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37588 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37589 ;;Total ram usage:        5 bytes
 37590 ;; Hardware stack levels used:    1
 37591 ;; Hardware stack levels required when called:    2
 37592 ;; This function calls:
 37593 ;;		_spi_tx_rx
 37594 ;; This function is called by:
 37595 ;;		__flash_compare_page_to_buffer
 37596 ;;		__flash_is_busy
 37597 ;; This function uses a non-reentrant model
 37598 ;;
 37599                           
 37600                           	psect	text199
 37601  00762E                     __ptext199:
 37602                           	opt stack 0
 37603  00762E                     __flash_get_status:
 37604                           	opt stack 24
 37605                           
 37606                           ;flash.c: 117: uint8_t command = 0xD7;
 37607                           
 37608                           ;incstack = 0
 37609  00762E  0ED7               	movlw	215
 37610  007630  6E0F               	movwf	__flash_get_status@command,c
 37611                           
 37612                           ;flash.c: 118: uint16_t status;;flash.c: 119: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 37613  007632  0E0F               	movlw	low __flash_get_status@command
 37614  007634  6E01               	movwf	spi_tx_rx@command,c
 37615  007636  0E00               	movlw	high __flash_get_status@command
 37616  007638  6E02               	movwf	spi_tx_rx@command+1,c
 37617  00763A  0E00               	movlw	0
 37618  00763C  6E04               	movwf	spi_tx_rx@command_length+1,c
 37619  00763E  0E01               	movlw	1
 37620  007640  6E03               	movwf	spi_tx_rx@command_length,c
 37621  007642  0E10               	movlw	low __flash_get_status@status
 37622  007644  6E05               	movwf	spi_tx_rx@data,c
 37623  007646  0E00               	movlw	high __flash_get_status@status
 37624  007648  6E06               	movwf	spi_tx_rx@data+1,c
 37625  00764A  0E00               	movlw	0
 37626  00764C  6E08               	movwf	spi_tx_rx@data_length+1,c
 37627  00764E  0E02               	movlw	2
 37628  007650  6E07               	movwf	spi_tx_rx@data_length,c
 37629  007652  ECB8  F02C         	call	_spi_tx_rx	;wreg free
 37630                           
 37631                           ;flash.c: 120: return status;
 37632  007656  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 37633  00765A  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 37634  00765E  0012               	return	
 37635  007660                     __end_of__flash_get_status:
 37636                           	opt stack 0
 37637                           tosu	equ	0xFFF
 37638                           tosh	equ	0xFFE
 37639                           tosl	equ	0xFFD
 37640                           pclath	equ	0xFFA
 37641                           tblptru	equ	0xFF8
 37642                           tblptrh	equ	0xFF7
 37643                           tblptrl	equ	0xFF6
 37644                           tablat	equ	0xFF5
 37645                           prodh	equ	0xFF4
 37646                           prodl	equ	0xFF3
 37647                           intcon	equ	0xFF2
 37648                           intcon2	equ	0xFF1
 37649                           intcon3	equ	0xFF0
 37650                           indf0	equ	0xFEF
 37651                           postinc0	equ	0xFEE
 37652                           fsr0h	equ	0xFEA
 37653                           fsr0l	equ	0xFE9
 37654                           wreg	equ	0xFE8
 37655                           indf1	equ	0xFE7
 37656                           postdec1	equ	0xFE5
 37657                           plusw1	equ	0xFE3
 37658                           fsr1h	equ	0xFE2
 37659                           fsr1l	equ	0xFE1
 37660                           indf2	equ	0xFDF
 37661                           postinc2	equ	0xFDE
 37662                           postdec2	equ	0xFDD
 37663                           plusw2	equ	0xFDB
 37664                           fsr2h	equ	0xFDA
 37665                           fsr2l	equ	0xFD9
 37666                           status	equ	0xFD8
 37667                           
 37668 ;; *************** function _spi_tx_rx *****************
 37669 ;; Defined at:
 37670 ;;		line 248 in file "spi.c"
 37671 ;; Parameters:    Size  Location     Type
 37672 ;;  command         2    0[COMRAM] PTR unsigned char 
 37673 ;;		 -> _flash_partial_read@command(4), _flash_get_status@command(1), 
 37674 ;;  command_leng    2    2[COMRAM] unsigned int 
 37675 ;;  data            2    4[COMRAM] PTR unsigned char 
 37676 ;;		 -> file_buffer(50), buffer(512), fat_read_from_file@root(32), fat_rename_file@root(32), 
 37677 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 37678 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 37679 ;;		 -> _root_is_available@first_byte(1), _flash_get_status@status(2), msd_buffer(512), RAM(3759), 
 37680 ;;  data_length     2    6[COMRAM] unsigned int 
 37681 ;; Auto vars:     Size  Location     Type
 37682 ;;		None
 37683 ;; Return value:  Size  Location     Type
 37684 ;;                  1    wreg      void 
 37685 ;; Registers used:
 37686 ;;		wreg, status,2, status,0, cstack
 37687 ;; Tracked objects:
 37688 ;;		On entry : 0/0
 37689 ;;		On exit  : 0/0
 37690 ;;		Unchanged: 0/0
 37691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37692 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37694 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37695 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37696 ;;Total ram usage:       12 bytes
 37697 ;; Hardware stack levels used:    1
 37698 ;; Hardware stack levels required when called:    1
 37699 ;; This function calls:
 37700 ;;		__switch_mastermode
 37701 ;; This function is called by:
 37702 ;;		__flash_get_status
 37703 ;;		__flash_partial_read
 37704 ;; This function uses a non-reentrant model
 37705 ;;
 37706                           
 37707                           	psect	text200
 37708  005970                     __ptext200:
 37709                           	opt stack 0
 37710  005970                     _spi_tx_rx:
 37711                           	opt stack 24
 37712                           
 37713                           ;spi.c: 251: _switch_mastermode();
 37714                           
 37715                           ;incstack = 0
 37716  005970  ECBC  F03D         	call	__switch_mastermode	;wreg free
 37717                           
 37718                           ;spi.c: 254: DMACON1bits.SSCON1 = 0;
 37719  005974  9E88               	bcf	3976,7,c	;volatile
 37720                           
 37721                           ;spi.c: 255: DMACON1bits.SSCON0 = 0;
 37722  005976  9C88               	bcf	3976,6,c	;volatile
 37723                           
 37724                           ;spi.c: 257: DMACON1bits.TXINC = 1;
 37725  005978  8A88               	bsf	3976,5,c	;volatile
 37726                           
 37727                           ;spi.c: 259: DMACON1bits.RXINC = 0;
 37728  00597A  9888               	bcf	3976,4,c	;volatile
 37729                           
 37730                           ;spi.c: 261: DMACON1bits.DUPLEX1 = 0;
 37731  00597C  9688               	bcf	3976,3,c	;volatile
 37732                           
 37733                           ;spi.c: 262: DMACON1bits.DUPLEX0 = 1;
 37734  00597E  8488               	bsf	3976,2,c	;volatile
 37735                           
 37736                           ;spi.c: 264: DMACON1bits.DLYINTEN = 0;
 37737  005980  9288               	bcf	3976,1,c	;volatile
 37738                           
 37739                           ;spi.c: 266: DMACON2bits.DLYCYC = 0b0000;
 37740  005982  9886               	bcf	3974,4,c	;volatile
 37741  005984  9A86               	bcf	3974,5,c	;volatile
 37742  005986  9C86               	bcf	3974,6,c	;volatile
 37743  005988  9E86               	bcf	3974,7,c	;volatile
 37744                           
 37745                           ;spi.c: 268: DMACON2bits.INTLVL = 0b0000;
 37746  00598A  9086               	bcf	3974,0,c	;volatile
 37747  00598C  9286               	bcf	3974,1,c	;volatile
 37748  00598E  9486               	bcf	3974,2,c	;volatile
 37749  005990  9686               	bcf	3974,3,c	;volatile
 37750                           
 37751                           ;spi.c: 271: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37752  005992  5002               	movf	spi_tx_rx@command+1,w,c
 37753  005994  6E6A               	movwf	3946,c	;volatile
 37754                           
 37755                           ;spi.c: 272: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37756  005996  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 37757                           
 37758                           ;spi.c: 275: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37759  00599A  0EFF               	movlw	255
 37760  00599C  6E09               	movwf	??_spi_tx_rx& (0+255),c
 37761  00599E  0EFF               	movlw	255
 37762  0059A0  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 37763  0059A2  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 37764  0059A6  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 37765  0059AA  5009               	movf	??_spi_tx_rx,w,c
 37766  0059AC  260B               	addwf	??_spi_tx_rx+2,f,c
 37767  0059AE  500A               	movf	??_spi_tx_rx+1,w,c
 37768  0059B0  220C               	addwfc	??_spi_tx_rx+3,f,c
 37769  0059B2  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37770  0059B6  6A0C               	clrf	??_spi_tx_rx+3,c
 37771  0059B8  500B               	movf	??_spi_tx_rx+2,w,c
 37772  0059BA  6E66               	movwf	3942,c	;volatile
 37773                           
 37774                           ;spi.c: 276: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37775  0059BC  0403               	decf	spi_tx_rx@command_length,w,c
 37776  0059BE  6E67               	movwf	3943,c	;volatile
 37777                           
 37778                           ;spi.c: 279: LATDbits.LD7 = 0;
 37779  0059C0  9E8C               	bcf	3980,7,c	;volatile
 37780                           
 37781                           ;spi.c: 282: DMACON1bits.DMAEN = 1;
 37782  0059C2  8088               	bsf	3976,0,c	;volatile
 37783  0059C4  B088               	btfsc	3976,0,c	;volatile
 37784  0059C6  D7FE               	goto	l2665
 37785                           
 37786                           ;spi.c: 286: DMACON1bits.TXINC = 0;
 37787  0059C8  9A88               	bcf	3976,5,c	;volatile
 37788                           
 37789                           ;spi.c: 288: DMACON1bits.RXINC = 1;
 37790  0059CA  8888               	bsf	3976,4,c	;volatile
 37791                           
 37792                           ;spi.c: 290: DMACON1bits.DUPLEX1 = 0;
 37793  0059CC  9688               	bcf	3976,3,c	;volatile
 37794                           
 37795                           ;spi.c: 291: DMACON1bits.DUPLEX0 = 0;
 37796  0059CE  9488               	bcf	3976,2,c	;volatile
 37797                           
 37798                           ;spi.c: 294: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37799  0059D0  5006               	movf	spi_tx_rx@data+1,w,c
 37800  0059D2  6E68               	movwf	3944,c	;volatile
 37801                           
 37802                           ;spi.c: 295: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37803  0059D4  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 37804                           
 37805                           ;spi.c: 298: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37806  0059D8  0EFF               	movlw	255
 37807  0059DA  6E09               	movwf	??_spi_tx_rx& (0+255),c
 37808  0059DC  0EFF               	movlw	255
 37809  0059DE  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 37810  0059E0  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 37811  0059E4  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 37812  0059E8  5009               	movf	??_spi_tx_rx,w,c
 37813  0059EA  260B               	addwf	??_spi_tx_rx+2,f,c
 37814  0059EC  500A               	movf	??_spi_tx_rx+1,w,c
 37815  0059EE  220C               	addwfc	??_spi_tx_rx+3,f,c
 37816  0059F0  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37817  0059F4  6A0C               	clrf	??_spi_tx_rx+3,c
 37818  0059F6  500B               	movf	??_spi_tx_rx+2,w,c
 37819  0059F8  6E66               	movwf	3942,c	;volatile
 37820                           
 37821                           ;spi.c: 299: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37822  0059FA  0407               	decf	spi_tx_rx@data_length,w,c
 37823  0059FC  6E67               	movwf	3943,c	;volatile
 37824                           
 37825                           ;spi.c: 302: DMACON1bits.DMAEN = 1;
 37826  0059FE  8088               	bsf	3976,0,c	;volatile
 37827  005A00  B088               	btfsc	3976,0,c	;volatile
 37828  005A02  D7FE               	goto	l2668
 37829                           
 37830                           ;spi.c: 306: LATDbits.LD7 = 1;
 37831  005A04  8E8C               	bsf	3980,7,c	;volatile
 37832  005A06  0012               	return		;funcret
 37833  005A08                     __end_of_spi_tx_rx:
 37834                           	opt stack 0
 37835                           tosu	equ	0xFFF
 37836                           tosh	equ	0xFFE
 37837                           tosl	equ	0xFFD
 37838                           pclath	equ	0xFFA
 37839                           tblptru	equ	0xFF8
 37840                           tblptrh	equ	0xFF7
 37841                           tblptrl	equ	0xFF6
 37842                           tablat	equ	0xFF5
 37843                           prodh	equ	0xFF4
 37844                           prodl	equ	0xFF3
 37845                           intcon	equ	0xFF2
 37846                           intcon2	equ	0xFF1
 37847                           intcon3	equ	0xFF0
 37848                           indf0	equ	0xFEF
 37849                           postinc0	equ	0xFEE
 37850                           fsr0h	equ	0xFEA
 37851                           fsr0l	equ	0xFE9
 37852                           wreg	equ	0xFE8
 37853                           indf1	equ	0xFE7
 37854                           postdec1	equ	0xFE5
 37855                           plusw1	equ	0xFE3
 37856                           fsr1h	equ	0xFE2
 37857                           fsr1l	equ	0xFE1
 37858                           indf2	equ	0xFDF
 37859                           postinc2	equ	0xFDE
 37860                           postdec2	equ	0xFDD
 37861                           plusw2	equ	0xFDB
 37862                           fsr2h	equ	0xFDA
 37863                           fsr2l	equ	0xFD9
 37864                           status	equ	0xFD8
 37865                           
 37866 ;; *************** function __switch_mastermode *****************
 37867 ;; Defined at:
 37868 ;;		line 55 in file "spi.c"
 37869 ;; Parameters:    Size  Location     Type
 37870 ;;		None
 37871 ;; Auto vars:     Size  Location     Type
 37872 ;;		None
 37873 ;; Return value:  Size  Location     Type
 37874 ;;                  1    wreg      void 
 37875 ;; Registers used:
 37876 ;;		None
 37877 ;; Tracked objects:
 37878 ;;		On entry : 0/0
 37879 ;;		On exit  : 0/0
 37880 ;;		Unchanged: 0/0
 37881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37886 ;;Total ram usage:        0 bytes
 37887 ;; Hardware stack levels used:    1
 37888 ;; This function calls:
 37889 ;;		Nothing
 37890 ;; This function is called by:
 37891 ;;		_spi_tx
 37892 ;;		_spi_tx_tx
 37893 ;;		_spi_tx_rx
 37894 ;; This function uses a non-reentrant model
 37895 ;;
 37896                           
 37897                           	psect	text201
 37898  007B78                     __ptext201:
 37899                           	opt stack 0
 37900  007B78                     __switch_mastermode:
 37901                           	opt stack 26
 37902                           
 37903                           ;incstack = 0
 37904  007B78  0012               	return		;funcret
 37905  007B7A                     __end_of__switch_mastermode:
 37906                           	opt stack 0
 37907                           tosu	equ	0xFFF
 37908                           tosh	equ	0xFFE
 37909                           tosl	equ	0xFFD
 37910                           pclath	equ	0xFFA
 37911                           tblptru	equ	0xFF8
 37912                           tblptrh	equ	0xFF7
 37913                           tblptrl	equ	0xFF6
 37914                           tablat	equ	0xFF5
 37915                           prodh	equ	0xFF4
 37916                           prodl	equ	0xFF3
 37917                           intcon	equ	0xFF2
 37918                           intcon2	equ	0xFF1
 37919                           intcon3	equ	0xFF0
 37920                           indf0	equ	0xFEF
 37921                           postinc0	equ	0xFEE
 37922                           fsr0h	equ	0xFEA
 37923                           fsr0l	equ	0xFE9
 37924                           wreg	equ	0xFE8
 37925                           indf1	equ	0xFE7
 37926                           postdec1	equ	0xFE5
 37927                           plusw1	equ	0xFE3
 37928                           fsr1h	equ	0xFE2
 37929                           fsr1l	equ	0xFE1
 37930                           indf2	equ	0xFDF
 37931                           postinc2	equ	0xFDE
 37932                           postdec2	equ	0xFDD
 37933                           plusw2	equ	0xFDB
 37934                           fsr2h	equ	0xFDA
 37935                           fsr2l	equ	0xFD9
 37936                           status	equ	0xFD8
 37937                           
 37938 ;; *************** function _USBTransferOnePacket *****************
 37939 ;; Defined at:
 37940 ;;		line 995 in file "usb_device.c"
 37941 ;; Parameters:    Size  Location     Type
 37942 ;;  ep              1    wreg     unsigned char 
 37943 ;;  dir             1    0[COMRAM] unsigned char 
 37944 ;;  data            2    1[COMRAM] PTR unsigned char 
 37945 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 37946 ;;		 -> msd_cbw(31), NULL(0), 
 37947 ;;  len             1    3[COMRAM] unsigned char 
 37948 ;; Auto vars:     Size  Location     Type
 37949 ;;  ep              1    8[COMRAM] unsigned char 
 37950 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 37951 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 37952 ;; Return value:  Size  Location     Type
 37953 ;;                  2    0[COMRAM] PTR void 
 37954 ;; Registers used:
 37955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37956 ;; Tracked objects:
 37957 ;;		On entry : 0/0
 37958 ;;		On exit  : 0/0
 37959 ;;		Unchanged: 0/0
 37960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37961 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37962 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37963 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37964 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37965 ;;Total ram usage:       11 bytes
 37966 ;; Hardware stack levels used:    1
 37967 ;; This function calls:
 37968 ;;		Nothing
 37969 ;; This function is called by:
 37970 ;;		_USBMSDInit
 37971 ;;		_USBCheckMSDRequest
 37972 ;;		_MSDTasks
 37973 ;;		_MSDProcessCommandMediaPresent
 37974 ;;		_MSDReadHandler
 37975 ;;		_MSDWriteHandler
 37976 ;;		_MSDTransferTerminated
 37977 ;;		_APP_DeviceCustomHIDInitialize
 37978 ;;		_APP_DeviceCustomHIDTasks
 37979 ;; This function uses a non-reentrant model
 37980 ;;
 37981                           
 37982                           	psect	text202
 37983  0040C6                     __ptext202:
 37984                           	opt stack 0
 37985  0040C6                     _USBTransferOnePacket:
 37986                           	opt stack 27
 37987                           
 37988                           ;incstack = 0
 37989                           ;USBTransferOnePacket@ep stored from wreg
 37990  0040C6  6E09               	movwf	USBTransferOnePacket@ep,c
 37991                           
 37992                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 37993  0040C8  5001               	movf	USBTransferOnePacket@dir,w,c
 37994  0040CA  B4D8               	btfsc	status,2,c
 37995  0040CC  D007               	goto	l183
 37996                           
 37997                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 37998  0040CE  5009               	movf	USBTransferOnePacket@ep,w,c
 37999  0040D0  0D02               	mullw	2
 38000  0040D2  0E6C               	movlw	low _pBDTEntryIn
 38001  0040D4  24F3               	addwf	prodl,w,c
 38002  0040D6  6ED9               	movwf	fsr2l,c
 38003  0040D8  0E00               	movlw	high _pBDTEntryIn
 38004  0040DA  D006               	goto	L41
 38005  0040DC                     l183:
 38006                           
 38007                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 38008  0040DC  5009               	movf	USBTransferOnePacket@ep,w,c
 38009  0040DE  0D02               	mullw	2
 38010  0040E0  0E72               	movlw	low _pBDTEntryOut
 38011  0040E2  24F3               	addwf	prodl,w,c
 38012  0040E4  6ED9               	movwf	fsr2l,c
 38013  0040E6  0E00               	movlw	high _pBDTEntryOut
 38014  0040E8                     L41:
 38015  0040E8  20F4               	addwfc	prodh,w,c
 38016  0040EA  6EDA               	movwf	fsr2h,c
 38017  0040EC  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 38018  0040F0  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 38019                           
 38020                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 38021  0040F4  500A               	movf	USBTransferOnePacket@handle,w,c
 38022  0040F6  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 38023  0040F8  A4D8               	btfss	status,2,c
 38024  0040FA  D005               	goto	l185
 38025                           
 38026                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 38027  0040FC  0E00               	movlw	0
 38028  0040FE  6E01               	movwf	?_USBTransferOnePacket,c
 38029  004100  0E00               	movlw	0
 38030  004102  6E02               	movwf	?_USBTransferOnePacket+1,c
 38031  004104  0012               	return	
 38032  004106                     l185:
 38033                           
 38034                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 38035  004106  EE20 F002          	lfsr	2,2
 38036  00410A  500A               	movf	USBTransferOnePacket@handle,w,c
 38037  00410C  26D9               	addwf	fsr2l,f,c
 38038  00410E  500B               	movf	USBTransferOnePacket@handle+1,w,c
 38039  004110  22DA               	addwfc	fsr2h,f,c
 38040  004112  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 38041  004116  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 38042                           
 38043                           ;usb_device.c: 1030: handle->CNT = len;
 38044  00411A  EE20 F001          	lfsr	2,1
 38045  00411E  500A               	movf	USBTransferOnePacket@handle,w,c
 38046  004120  26D9               	addwf	fsr2l,f,c
 38047  004122  500B               	movf	USBTransferOnePacket@handle+1,w,c
 38048  004124  22DA               	addwfc	fsr2h,f,c
 38049  004126  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 38050                           
 38051                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 38052  00412A  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 38053  00412E  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 38054  004132  0E40               	movlw	64
 38055  004134  16DF               	andwf	indf2,f,c
 38056                           
 38057                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 38058  004136  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 38059  00413A  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 38060  00413E  0E00               	movlw	0
 38061  004140  86DB               	bsf	plusw2,3,c
 38062                           
 38063                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 38064  004142  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 38065  004146  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 38066  00414A  0E00               	movlw	0
 38067  00414C  8EDB               	bsf	plusw2,7,c
 38068                           
 38069                           ;usb_device.c: 1036: if(dir != 0)
 38070  00414E  5001               	movf	USBTransferOnePacket@dir,w,c
 38071  004150  B4D8               	btfsc	status,2,c
 38072  004152  D018               	goto	l187
 38073                           
 38074                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 38075  004154  5009               	movf	USBTransferOnePacket@ep,w,c
 38076  004156  0D02               	mullw	2
 38077  004158  0E6C               	movlw	low _pBDTEntryIn
 38078  00415A  24F3               	addwf	prodl,w,c
 38079  00415C  6ED9               	movwf	fsr2l,c
 38080  00415E  0E00               	movlw	high _pBDTEntryIn
 38081  004160  20F4               	addwfc	prodh,w,c
 38082  004162  6EDA               	movwf	fsr2h,c
 38083  004164  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 38084  004168  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 38085  00416C  0E04               	movlw	4
 38086  00416E  1805               	xorwf	??_USBTransferOnePacket,w,c
 38087  004170  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 38088  004172  5006               	movf	??_USBTransferOnePacket+1,w,c
 38089  004174  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 38090  004176  5009               	movf	USBTransferOnePacket@ep,w,c
 38091  004178  0D02               	mullw	2
 38092  00417A  0E6C               	movlw	low _pBDTEntryIn
 38093  00417C  24F3               	addwf	prodl,w,c
 38094  00417E  6ED9               	movwf	fsr2l,c
 38095  004180  0E00               	movlw	high _pBDTEntryIn
 38096  004182  D017               	goto	L42
 38097  004184                     l187:
 38098                           
 38099                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 38100  004184  5009               	movf	USBTransferOnePacket@ep,w,c
 38101  004186  0D02               	mullw	2
 38102  004188  0E72               	movlw	low _pBDTEntryOut
 38103  00418A  24F3               	addwf	prodl,w,c
 38104  00418C  6ED9               	movwf	fsr2l,c
 38105  00418E  0E00               	movlw	high _pBDTEntryOut
 38106  004190  20F4               	addwfc	prodh,w,c
 38107  004192  6EDA               	movwf	fsr2h,c
 38108  004194  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 38109  004198  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 38110  00419C  0E04               	movlw	4
 38111  00419E  1805               	xorwf	??_USBTransferOnePacket,w,c
 38112  0041A0  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 38113  0041A2  5006               	movf	??_USBTransferOnePacket+1,w,c
 38114  0041A4  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 38115  0041A6  5009               	movf	USBTransferOnePacket@ep,w,c
 38116  0041A8  0D02               	mullw	2
 38117  0041AA  0E72               	movlw	low _pBDTEntryOut
 38118  0041AC  24F3               	addwf	prodl,w,c
 38119  0041AE  6ED9               	movwf	fsr2l,c
 38120  0041B0  0E00               	movlw	high _pBDTEntryOut
 38121  0041B2                     L42:
 38122  0041B2  20F4               	addwfc	prodh,w,c
 38123  0041B4  6EDA               	movwf	fsr2h,c
 38124  0041B6  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 38125  0041BA  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 38126                           
 38127                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 38128  0041BE  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 38129  0041C2  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 38130  0041C6  0012               	return	
 38131  0041C8                     __end_of_USBTransferOnePacket:
 38132                           	opt stack 0
 38133                           tosu	equ	0xFFF
 38134                           tosh	equ	0xFFE
 38135                           tosl	equ	0xFFD
 38136                           pclath	equ	0xFFA
 38137                           tblptru	equ	0xFF8
 38138                           tblptrh	equ	0xFF7
 38139                           tblptrl	equ	0xFF6
 38140                           tablat	equ	0xFF5
 38141                           prodh	equ	0xFF4
 38142                           prodl	equ	0xFF3
 38143                           intcon	equ	0xFF2
 38144                           intcon2	equ	0xFF1
 38145                           intcon3	equ	0xFF0
 38146                           indf0	equ	0xFEF
 38147                           postinc0	equ	0xFEE
 38148                           fsr0h	equ	0xFEA
 38149                           fsr0l	equ	0xFE9
 38150                           wreg	equ	0xFE8
 38151                           indf1	equ	0xFE7
 38152                           postdec1	equ	0xFE5
 38153                           plusw1	equ	0xFE3
 38154                           fsr1h	equ	0xFE2
 38155                           fsr1l	equ	0xFE1
 38156                           indf2	equ	0xFDF
 38157                           postinc2	equ	0xFDE
 38158                           postdec2	equ	0xFDD
 38159                           plusw2	equ	0xFDB
 38160                           fsr2h	equ	0xFDA
 38161                           fsr2l	equ	0xFD9
 38162                           status	equ	0xFD8
 38163                           tosu	equ	0xFFF
 38164                           tosh	equ	0xFFE
 38165                           tosl	equ	0xFFD
 38166                           pclath	equ	0xFFA
 38167                           tblptru	equ	0xFF8
 38168                           tblptrh	equ	0xFF7
 38169                           tblptrl	equ	0xFF6
 38170                           tablat	equ	0xFF5
 38171                           prodh	equ	0xFF4
 38172                           prodl	equ	0xFF3
 38173                           intcon	equ	0xFF2
 38174                           intcon2	equ	0xFF1
 38175                           intcon3	equ	0xFF0
 38176                           indf0	equ	0xFEF
 38177                           postinc0	equ	0xFEE
 38178                           fsr0h	equ	0xFEA
 38179                           fsr0l	equ	0xFE9
 38180                           wreg	equ	0xFE8
 38181                           indf1	equ	0xFE7
 38182                           postdec1	equ	0xFE5
 38183                           plusw1	equ	0xFE3
 38184                           fsr1h	equ	0xFE2
 38185                           fsr1l	equ	0xFE1
 38186                           indf2	equ	0xFDF
 38187                           postinc2	equ	0xFDE
 38188                           postdec2	equ	0xFDD
 38189                           plusw2	equ	0xFDB
 38190                           fsr2h	equ	0xFDA
 38191                           fsr2l	equ	0xFD9
 38192                           status	equ	0xFD8
 38193                           
 38194                           	psect	text203
 38195  000000                     __ptext203:
 38196                           	opt stack 0
 38197                           tosu	equ	0xFFF
 38198                           tosh	equ	0xFFE
 38199                           tosl	equ	0xFFD
 38200                           pclath	equ	0xFFA
 38201                           tblptru	equ	0xFF8
 38202                           tblptrh	equ	0xFF7
 38203                           tblptrl	equ	0xFF6
 38204                           tablat	equ	0xFF5
 38205                           prodh	equ	0xFF4
 38206                           prodl	equ	0xFF3
 38207                           intcon	equ	0xFF2
 38208                           intcon2	equ	0xFF1
 38209                           intcon3	equ	0xFF0
 38210                           indf0	equ	0xFEF
 38211                           postinc0	equ	0xFEE
 38212                           fsr0h	equ	0xFEA
 38213                           fsr0l	equ	0xFE9
 38214                           wreg	equ	0xFE8
 38215                           indf1	equ	0xFE7
 38216                           postdec1	equ	0xFE5
 38217                           plusw1	equ	0xFE3
 38218                           fsr1h	equ	0xFE2
 38219                           fsr1l	equ	0xFE1
 38220                           indf2	equ	0xFDF
 38221                           postinc2	equ	0xFDE
 38222                           postdec2	equ	0xFDD
 38223                           plusw2	equ	0xFDB
 38224                           fsr2h	equ	0xFDA
 38225                           fsr2l	equ	0xFD9
 38226                           status	equ	0xFD8
 38227                           
 38228                           	psect	rparam
 38229  0000                     tosu	equ	0xFFF
 38230                           tosh	equ	0xFFE
 38231                           tosl	equ	0xFFD
 38232                           pclath	equ	0xFFA
 38233                           tblptru	equ	0xFF8
 38234                           tblptrh	equ	0xFF7
 38235                           tblptrl	equ	0xFF6
 38236                           tablat	equ	0xFF5
 38237                           prodh	equ	0xFF4
 38238                           prodl	equ	0xFF3
 38239                           intcon	equ	0xFF2
 38240                           intcon2	equ	0xFF1
 38241                           intcon3	equ	0xFF0
 38242                           indf0	equ	0xFEF
 38243                           postinc0	equ	0xFEE
 38244                           fsr0h	equ	0xFEA
 38245                           fsr0l	equ	0xFE9
 38246                           wreg	equ	0xFE8
 38247                           indf1	equ	0xFE7
 38248                           postdec1	equ	0xFE5
 38249                           plusw1	equ	0xFE3
 38250                           fsr1h	equ	0xFE2
 38251                           fsr1l	equ	0xFE1
 38252                           indf2	equ	0xFDF
 38253                           postinc2	equ	0xFDE
 38254                           postdec2	equ	0xFDD
 38255                           plusw2	equ	0xFDB
 38256                           fsr2h	equ	0xFDA
 38257                           fsr2l	equ	0xFD9
 38258                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    770
    Data        30
    BSS         2025
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     65     160
    BANK1           256      0     245
    BANK2           256      0     178
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_truncate@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(COMRAM[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), inq_resp(CODE[36]), 
		 -> CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), inq_resp(CODE[36]), 
		 -> CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> file_buffer(BANK2[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), RAM(DATA[3759]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> file_buffer(BANK2[50]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> bootloader_extension(CODE[4]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 3759
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), 
		 -> _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), RAM(DATA[3759]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> file_buffer(BANK2[50]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), 
		 -> _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> RAM(DATA[3759]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> file_buffer(BANK2[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK2[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_bootloader_run
    _ui_run->_i2c_display_send_init_sequence
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_page_read
    _fat_format->_flash_page_write
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _bootloader_run->__bootloader_program
    _bootloader_run->__bootloader_verify_file
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_find_file
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->__flash_partial_read
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_get_file_information
    _fat_get_file_size->_flash_partial_read
    __fill_buffer_get_status->_flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _api_parse->__parse_command_long
    __parse_command_short->_i2c_eeprom_writeByte
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_create
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__get_first_cluster
    __get_first_cluster->_flash_partial_read
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_get_file_information
    _fat_get_file_information->__root_is_available
    __root_is_available->_flash_partial_read
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    __parse_file_rename->_fat_rename_file
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  846061
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                     _bootloader_run
                    _display_prepare
                     _display_update
                        _system_init
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0    7310
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0   27995
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                           _i2c_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6059
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    5793
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   21892
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    5456
                                             44 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   16436
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   63681
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (2) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (2) __display_start                                       1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (2) __display_found                                       4     4      0   14817
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (2) __display_failed                                      2     2      0   21428
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u32                                    6     0      6   14409
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  108833
                                             93 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             17    17      0   47314
                                             85 COMRAM     8     8      0
                                             45 BANK0      9     9      0
          __bootloader_check_address
                  _fat_get_file_size
                 _fat_read_from_file
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 27    27      0   43949
                                             85 COMRAM     8     8      0
                                             45 BANK0     19    19      0
          __bootloader_check_address
                 _fat_read_from_file
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    2992
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2634
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   17548
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5282
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143080
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82712
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0   98928
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0   98928
                                             77 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   93764
                                             72 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   47633
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   45875
                                             58 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   22693
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15105
                                             36 COMRAM    11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) _flash_page_write                                     5     1      4   14760
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   12553
                                             54 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    5157
                                             44 COMRAM    10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (4) _flash_page_read                                      4     0      4    4876
                                             40 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  386330
                                             61 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   78893
                                             93 COMRAM     1     1      0
                                             57 BANK0      4     0      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
             __fill_buffer_read_file
                      _flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_read_file                              20    16      4   44044
                                             85 COMRAM     8     4      4
                                             45 BANK0     12    12      0
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  67    57     10   35156
                                             63 COMRAM    22    12     10
                                              0 BANK0     45    45      0
                          __read_fat
               __sector_from_cluster
           _fat_get_file_information
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   14    10      4    8084
                                             48 COMRAM    14    10      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    2888
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_file_details                        5     1      4   16961
                                             63 COMRAM     5     1      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_configuration                      10     8      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_find_file                               9     5      4    9908
                                             68 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (2) _api_parse                                            6     3      3  304124
                                             86 COMRAM     3     3      0
                                             51 BANK0      3     0      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0    2697
                                             19 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (4) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_writeByte                                 9     6      3    2629
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  3     1      2  300959
                                             83 COMRAM     3     1      2
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
               __parse_file_truncate
 ---------------------------------------------------------------------------------
 (4) __parse_file_truncate                                 2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_file_rename                                   3     1      2   39338
                                             67 COMRAM     3     1      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (5) _fat_rename_file                                     38    34      4   39117
                                             63 COMRAM     4     0      4
                                              0 BANK0     34    34      0
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (4) __parse_file_modify                                   2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_file_delete                                   3     1      2   69350
                                             63 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (5) _fat_delete_file                                      5     5      0   69173
                                             58 COMRAM     5     5      0
                       __delete_root
                 __get_first_cluster
                          __read_fat
                 __root_is_available
                         __write_fat
 ---------------------------------------------------------------------------------
 (6) __get_first_cluster                                  10     8      2    8083
                                             48 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (6) __delete_root                                         7     7      0   21729
                                             40 COMRAM     7     7      0
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) __parse_file_create                                   3     1      2   82415
                                             80 COMRAM     3     1      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (5) _fat_create_file                                     53    45      8   82216
                                             68 COMRAM    12     4      8
                                              0 BANK0     41    41      0
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2012
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (6) _fat_get_empty_clusters                              12    10      2    8307
                                             48 COMRAM    12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       20    16      4    9464
                                             48 COMRAM    20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) __get_available_root_entry                            1     1      0    8215
                                             55 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (4) __parse_file_append                                   3     1      2  109406
                                             75 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (5) _fat_append_to_file                                  63    59      4  109163
                                             63 COMRAM    12     8      4
                                              0 BANK0     51    51      0
                 __get_empty_cluster
                          __read_fat
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2   16584
                                             55 COMRAM     8     6      2
                 __root_is_available
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __root_is_available                                   7     7      0    8125
                                             48 COMRAM     7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (6) __write_root                                          8     6      2   21995
                                             40 COMRAM     8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) __write_fat                                           8     4      4   22619
                                             40 COMRAM     8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (7) _flash_partial_write                                  9     1      8   21615
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
                 __switch_mastermode
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (8) __flash_copy_page_to_buffer                          10     7      3    4031
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (6) __update_modified_time                                2     0      2     177
                                              4 COMRAM     2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (6) __get_time                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) __get_date                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __sector_from_cluster                                 2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8438
                                             48 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (6) __get_empty_cluster                                  10     8      2    8439
                                             48 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7946
                                             40 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4254
                                             20 COMRAM    20    12      8
                      _flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _flash_is_busy                                        1     1      0    2402
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
                 __switch_mastermode
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8     888
                                              0 COMRAM    12     4      8
                 __switch_mastermode
 ---------------------------------------------------------------------------------
 (5) __switch_mastermode                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_file_append
           _fat_append_to_file
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             __sector_from_cluster
             __update_modified_time
               __get_date
               __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     _flash_is_busy
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                             __switch_mastermode
                         __flash_wakeup
                           _spi_tx
                             __switch_mastermode
                       _spi_set_configuration
                     _spi_tx_rx
                       __switch_mastermode
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx
                   __switch_mastermode
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx
                   __switch_mastermode
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx
                   __switch_mastermode
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_tx_tx
                   __switch_mastermode
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     _flash_is_busy
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                             __switch_mastermode
                         __flash_wakeup
                           _spi_tx
                             __switch_mastermode
                       _spi_set_configuration
                     _spi_tx_rx
                       __switch_mastermode
                   _spi_set_configuration
             __get_date
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_find_file
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
               _strncmp
             _fat_get_empty_clusters
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_set_configuration
             __get_first_cluster
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_set_configuration
         __parse_file_modify
         __parse_file_rename
           _fat_rename_file
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     _flash_is_busy
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                             __switch_mastermode
                         __flash_wakeup
                           _spi_tx
                             __switch_mastermode
                       _spi_set_configuration
                     _spi_tx_rx
                       __switch_mastermode
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
         __parse_file_truncate
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_tx_rx
                   __switch_mastermode
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
                 __switch_mastermode
             __flash_wakeup
               _spi_tx
                 __switch_mastermode
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_file
         _fat_get_file_size
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
         _fat_read_from_file
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_tx_rx
                   __switch_mastermode
               _spi_set_configuration
           __sector_from_cluster
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_tx_rx
                   __switch_mastermode
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
               __switch_mastermode
           __flash_wakeup
             _spi_tx
               __switch_mastermode
         _spi_set_configuration
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   __flash_partial_read
                     _flash_is_busy
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                             __switch_mastermode
                         __flash_wakeup
                           _spi_tx
                             __switch_mastermode
                       _spi_set_configuration
                     _spi_tx_rx
                       __switch_mastermode
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_tx
                       __switch_mastermode
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_tx
                       __switch_mastermode
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_tx_tx
                       __switch_mastermode
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 __flash_partial_read
                   _flash_is_busy
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                           __switch_mastermode
                       __flash_wakeup
                         _spi_tx
                           __switch_mastermode
                     _spi_set_configuration
                   _spi_tx_rx
                     __switch_mastermode
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx
                     __switch_mastermode
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_tx_tx
                     __switch_mastermode
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_set_configuration
             _spi_tx_rx
               __switch_mastermode
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_set_configuration
             _spi_tx_rx
               __switch_mastermode
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_tx_rx
                   __switch_mastermode
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_set_configuration
             _spi_tx_rx
               __switch_mastermode
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_set_configuration
             _spi_tx_rx
               __switch_mastermode
           _spi_set_configuration
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                         __switch_mastermode
                     __flash_wakeup
                       _spi_tx
                         __switch_mastermode
                   _spi_set_configuration
                 _spi_tx_rx
                   __switch_mastermode
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                       __switch_mastermode
                   __flash_wakeup
                     _spi_tx
                       __switch_mastermode
                 _spi_set_configuration
               _spi_tx_rx
                 __switch_mastermode
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_set_configuration
             _spi_tx_rx
               __switch_mastermode
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_start
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _system_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_page_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
                 __switch_mastermode
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx
               __switch_mastermode
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx
               __switch_mastermode
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
                   __switch_mastermode
               __flash_wakeup
                 _spi_tx
                   __switch_mastermode
             _spi_tx_tx
               __switch_mastermode
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_page_read
           __flash_partial_read
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                     __switch_mastermode
                 __flash_wakeup
                   _spi_tx
                     __switch_mastermode
               _spi_set_configuration
             _spi_tx_rx
               __switch_mastermode
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
               __switch_mastermode
           __flash_wakeup
             _spi_tx
               __switch_mastermode
         _memcpy
         _spi_tx
           __switch_mastermode
       _spi_init
         __spi_init
       _spi_set_configuration
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _ui_init
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      B2       9       69.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F5       7       95.7%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     41      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A6      31        0.0%
DATA                 0      0     8A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Aug 13 21:39:04 2018

                          __end_of_fat_read_from_file 2116  
                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E7B  
                            fat_create_file@extension 0047  
              __end_of_i2c_display_send_init_sequence 76EA  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 76BE  
                                 __system_timer0_init 7928  
                                                  _os 0060  
                                       _USBDeviceInit 37D0  
                                  _USBCheckHIDRequest 449C  
                __bootloader_verify_file@return_value 00EC  
                                    ??__flash_is_busy 0012  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0032  
                                 __end_of_system_init 687E  
                           ??_internalFlash_erasePage 0005  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 4FA0  
                                                 l210 5802  
                                                 l220 41F0  
                                                 l141 383E  
                                                 l214 5B00  
                                                 l310 53A8  
                                                 l150 3530  
                                                 l143 387A  
                                                 l303 7482  
                                                 l151 3528  
                                                 l320 6A7E  
                                                 l208 57E8  
                                                 l224 4272  
                                                 l304 7480  
                                                 l152 3526  
                                                 l241 4CFC  
                                                 l233 4C58  
                                                 l161 35A8  
                                                 l242 4CC6  
                                                 l330 4E86  
                                                 l322 6AC8  
                                                 l235 4C62  
                                                 l331 4E4C  
                                                 l251 3C4C  
                                                 l411 44EA  
                                                 l219 4248  
                                                 l139 3816  
                                                 l171 3636  
                                                 l163 35BE  
                                                 l155 354A  
                                                 l252 3C32  
                                                 l412 44B8  
                                                 l260 478C  
                                                 l164 35CA  
                                                 l156 355A  
                                                 l237 4CBE  
                                                 l333 4E6C  
                                                 l309 53AE  
                                                 l173 365A  
                                                 l165 35F2  
                                                 l157 3562  
                                                 l238 4C88  
                                                 l422 450C  
                                                 l414 44FC  
                         __end_of_USBStdGetDscHandler 3A58  
                                                 l262 4800  
                                                 l350 43FA  
                                                 l166 35FC  
                                                 l158 3576  
                                                 l183 40DC  
                                                 l191 3E12  
                                                 l423 4524  
                                                 l415 44D6  
                                                 l271 3944  
                                                 l343 4458  
                                                 l175 3676  
                                                 l159 3582  
                                                 l328 4E04  
                                                 l248 3BD6  
                                                 l424 4530  
                                                 l360 17D0  
                                                 l272 39D2  
                                                 l352 4400  
                                                 l344 43CA  
                                                 l168 360E  
                                                 l185 4106  
                                                 l329 4E08  
                                                 l249 3BB4  
                                                 l521 3FB0  
                                                 l425 4548  
                                                 l361 17D6  
                                                 l281 543E  
                                                 l353 441E  
                                                 l610 6980  
                                                 l178 7380  
                                                 l418 4554  
                                                 l530 5030  
                                                 l274 39DA  
                                                 l282 53CC  
                                                 l354 443A  
                                                 l346 43D4  
                                                 l187 4184  
                                                 l603 6988  
                                                 l179 738E  
                                                 l371 18F6  
                                                 l363 1842  
                                                 l275 3A30  
                                                 l347 43DA  
                                                 l620 04BE  
                                                 l604 694C  
                                                 l372 1912  
                                                 l268 3A40  
                                                 l348 43E0  
                                                 l621 04C8  
                                                 l381 1A0A  
                                                 l365 188A  
                                                 l277 3A38  
                                                 l269 3930  
                                                 l285 5454  
                                                 l349 43F4  
                                                 l710 458E  
                                                 l702 173A  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 6968  
                                                 l518 3FB8  
                                                 l534 5096  
                                                 l374 1978  
                                                 l286 53DE  
                                                 l703 1752  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 3F2C  
                                                 l375 1984  
                                                 l367 18AC  
                                                 l287 53E4  
                                                 l295 71EA  
                                                 l712 45A4  
                                                 l704 176A  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 6974  
                                                 l800 5EB6  
                                                 l376 19FE  
                                                 l288 5402  
                                                 l296 71E8  
                                                 l721 4630  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 697A  
                                                 l561 1DE6  
                                                 l529 50CC  
                                                 l369 192C  
                                                 l722 461A  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 1ED2  
                                                 l562 1DD0  
                                                 l546 509E  
                                                 l810 5EA8  
                                                 l715 45D4  
                                                 l651 07CC  
                                                 l571 1E02  
                                                 l563 1DA4  
                                                 l555 1CA2  
                                                 l379 19B8  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 1DAC  
                                                 l804 5E84  
                                                 l661 5928  
                                                 l741 3FEC  
                                                 l733 4642  
                                                 l645 0784  
                                                 l573 1E14  
                                                 l805 5E8C  
                                                 l750 4020  
                                                 l718 45E0  
                                                 l670 2B78  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 1DC4  
                                                 l806 5E94  
                                                 l751 402C  
                                                 l719 45FA  
                                                 l671 2B82  
                                                 l575 1E36  
                                                 l559 1CC4  
                                                 l752 403E  
                                                 l680 2CAE  
                                                 l672 2B96  
                                                 l648 07CE  
                                                 l592 3D0C  
                                                 l576 1E3E  
                                                 l808 5E9E  
                                                 l753 404A  
                                                 l737 4652  
                                                 l665 2CC4  
                                                 l649 07A8  
                                                 l577 1E62  
                                                 l930 5472  
                                                 l754 405C  
                                                 l674 2BE0  
                                                 l666 2B18  
                                                 l690 15A0  
                                                 l586 1EB4  
                                                 l659 5912  
                                                 l747 409E  
                                                 l755 4092  
                                                 l675 2C08  
                                                 l691 15AC  
                                                 l748 4018  
                                                 l668 2CE8  
                                                 l676 2C36  
                                                 l684 1782  
                                                 l692 15CA  
                                                 l596 3DA8  
                                                 l764 6E08  
                                                 l860 4D90  
                                                 _BDT 000D00  
                                                 l677 2C48  
                                                 l669 2B6C  
                                                 l693 1614  
                                                 l685 14FA  
                                                 l597 3DA2  
                                                 l589 1EBC  
                                                 l861 4D3C  
                                                 l678 2C4E  
                                                 l694 15EE  
                                                 l862 4DC4  
                                                 l870 4D80  
                                                 l679 2C62  
                                                 l687 17A6  
                                                 l695 1656  
                                                 l599 3DAC  
                                                 l767 6E3E  
                                                 l863 4D44  
                                                 l936 54DE  
                                                 l696 1652  
                                                 l688 159A  
                                                 l880 6BD2  
                                                 l864 4D4C  
                                                 l865 4D54  
                       __size_of__sector_from_cluster 000E  
                                                 l698 166A  
                                                 l890 6F2A  
                                                 l882 6BDA  
                                                 l866 4D5C  
                                                 l858 4D1E  
                                                 l699 16D2  
                                                 l891 6EF0  
                                                 l867 4D64  
                                                 l972 7A42  
                                                 l868 4D6C  
                                                 l893 6EFA  
                                                 l877 6BAC  
                                                 l897 6F0C  
                                                 l899 6F18  
                                                 _LBA 0080  
                                                 _LUN 01D8  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                             __get_first_cluster@slot 003A  
                                _i2c_digipot_reset_on 78A0  
                            __size_of__display_failed 02F6  
                                         _start_line1 8D88  
                                         _start_line2 8D77  
                                         _start_line3 8CF6  
                                         _start_line4 8E62  
                                  api_prepare@command 005E  
                                          _USBSuspend 7660  
                                  _internalFlash_read 748E  
                              __end_of_display_update 66D8  
                                USBStdSetCfgHandler@i 0018  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 3508  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                                      _USBDeviceState 005F  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 79D0  
                               ??_USBCtrlTrfRxService 0001  
                                __read_fat@fat_sector 0033  
                                       _hex_file_size 0078  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                                 api_prepare@inBuffer 00F7  
                            fat_create_file@root_slot 00C2  
                         __flash_write_to_buffer@data 0016  
                                                l1101 7AD0  
                                                l2000 315A  
                                                l1040 7412  
                                                l1113 7ADC  
                                                l2001 315E  
                                                l1130 7754  
                                                l2010 3182  
                                                l2002 3162  
                                                l1107 7B34  
                                                l1131 7746  
                                                l2011 3212  
                                                l2003 3166  
                                                l1132 7768  
                                                l2004 316A  
                                                l2020 555A  
                                                l1133 774A  
                                                l2005 316E  
                                                l1134 774E  
                                                l1046 7872  
                                                l2014 77BC  
                                                l2006 3172  
                                                l1222 62E8  
                                                l1047 7860  
                                                l1119 7AC8  
                                                l2007 3176  
                                                l1039 7408  
                                                l1144 5DAC  
                                                l2200 0BE2  
                                                l2008 317A  
                                                l2024 55AA  
                                                l1240 4A74  
                                                l1145 5D90  
                                                l2201 0C5E  
                                                l2009 317E  
                                                l1241 49D0  
                                                l1138 7154  
                                                l2210 0D5E  
                                                l2202 0CB8  
                                                l1226 6302  
                                                l1250 4A66  
                                                l1139 7138  
                                                l2203 0D10  
                                                l1219 632A  
                                                l2052 6366  
                                                l1092 7B3C  
                                                l2300 6054  
                                                l2212 0E0C  
                                                l1500 0F64  
                                                l1244 49E4  
                                                l2061 7712  
                                                l2213 0ECE  
                                                l1501 0F36  
                                                l1421 4B9E  
                                                l1229 631A  
                                                l1245 49F4  
                                                l2054 6376  
                                                l2206 0F18  
                                                l2214 0E16  
                                                l1430 4BF0  
                                                l1422 4B74  
                                                l1246 4A08  
                                                l2215 0E8E  
                                                l2207 0D22  
                                                l1511 11AC  
                                                l1503 0FB8  
                                                l1431 4BDC  
                                                l1167 6DDC  
                                                l2072 003E  
                                                l2216 0EC8  
                                                l1504 0F8A  
                                                l1440 36B2  
                                                l1432 4BE2  
                                                l1424 4B7A  
                                                l1168 6DC0  
                                                l1600 613E  
                                                l1248 4A2C  
                                                l2305 77CE  
                                                l2057 76FA  
                                                l2081 039C  
                                                l2161 709A  
                                                l1521 10FC  
                                                l1513 105C  
                                                l1441 3684  
                                                l1433 4BE8  
                                                l1425 4B80  
                                                l1601 616A  
                                                l1249 4A4A  
                                                l2314 74C2  
                                                l2082 03C0  
                                                l2074 00B4  
                                                l2218 0EE4  
                                                l2154 70A6  
                                                l1506 118A  
                                                l1522 10CE  
                                                l1514 102E  
                                                l1450 3780  
                                                l1434 4C1A  
                                                l1426 4B86  
                                                l1611 6EC0  
                                                l2171 48D8  
                                                l2059 7704  
                                                l2075 0202  
                                                l2155 7088  
                                                l1371 70EA  
                                                l1443 3706  
                                                l1435 4C24  
                                                l1427 4B8C  
                                                l2500 5C76  
                                                l2420 42F2  
                                                l2172 48DA  
                                                l2084 0426  
                                                l2076 0188  
                                                l1508 100C  
                                                l1540 2DCA  
                                                l1444 36D8  
                                                l1428 4B92  
                                                l2501 5C84  
                                                l2173 48E4  
                                                l2157 708E  
                                                l1381 4F20  
                                                l1525 114C  
                                                l1517 10AC  
                                                l1509 0FDE  
                                                l1461 2A14  
                                                l1541 2D9C  
                                                l1429 4B98  
                                                l2510 6FCE  
                                                l2502 5C92  
                                                l2430 437C  
                                                l2422 4308  
                                                l2086 0458  
                                                l2078 033E  
                                                l2190 140A  
                                                l2158 7094  
                                                l1550 3398  
                                                l1526 111E  
                                                l1518 107E  
                                                l1462 29E6  
                                                l1534 2D22  
                                                l1446 375A  
                                                l1631 61F4  
                                                l2503 5CA0  
                                                l2431 438A  
                                                l2423 431E  
                                                l2167 48F0  
                                                l2079 0310  
                                                l2191 143C  
                                                l1383 4F44  
                                                l1391 09D8  
                                                l1455 296C  
                                                l1543 2E7E  
                                                l1535 2CF4  
                                                l1447 372C  
                                                l1608 6EDA  
                                                l1704 652A  
                                                l2440 492E  
                                                l2168 482C  
                                                l2088 048A  
                                                l2192 146A  
                                                l1376 4ED6  
                                                l1552 341A  
                                                l1528 11E0  
                                                l1464 2AA0  
                                                l1456 293E  
                                                l1544 2E50  
                                                l1480 3B06  
                                                l1609 6E98  
                                                l2441 49C2  
                                                l2425 4398  
                                                l2169 4882  
                                                l2193 14C2  
                                                l3153 6F5E  
                                                l1369 70DE  
                                                l1553 33EC  
                                                l1393 0A84  
                                                l1529 11B2  
                                                l1465 2A68  
                                                l1537 2D76  
                                                l1449 37AE  
                                                l1473 3A8C  
                                                l1626 6194  
                                                l1618 6CFA  
                                                l1706 658C  
                                                l2522 6714  
                                                l2442 4946  
                                                l2434 490C  
                                                l2426 434A  
                                                l2186 12D4  
                                                l3154 6F56  
                                                l3082 689C  
                                                l1458 29C0  
                                                l1538 2D48  
                                                l1474 3A5E  
                                                l1627 619E  
                                                l1619 6D04  
                                                l2443 4962  
                                                l2451 5272  
                                                l2419 4334  
                                                l2179 577E  
                                                l2195 14E4  
                                                l2187 132E  
                                                l3163 7246  
                                                l1379 4EFC  
                                                l1491 331C  
                                                l1555 346E  
                                                l3083 6890  
                                                l1395 0B30  
                                                l1387 0882  
                                                l1467 2AF4  
                                                l1459 2992  
                                                l2516 663E  
                                                l2428 4358  
                                                l2188 13AA  
                                                l3164 723E  
                                                l1492 32E4  
                                                l1556 3440  
                                                l1468 2AC6  
                                                l1476 3AE0  
                                                l1900 4AB8  
                          USBConfigureEndpoint@handle 0007  
                                                l1629 61D6  
                                                l1653 6CA2  
                                                l1645 7048  
                                                l2437 4912  
                                                l2453 52AC  
                                                l2429 436A  
                                                l3157 6F7E  
                                                l3341 55BC  
                                                l1485 324A  
                                                l1549 33C6  
                                                l2701 5F36  
                                                l1389 092C  
                                                l1477 3AB2  
                                                l1901 4ABC  
                                                l1654 6CAC  
                                                l1646 7052  
                                                l1830 524A  
                                                l3350 68FA  
                                                l3158 6F88  
                                                l1494 3370  
                                                l1486 321C  
                                                l1558 34E6  
                                                l2702 5F2A  
                                                l3086 68C4  
                                                l1910 4AE0  
                                                l1902 4AC0  
                                                l2439 498A  
                                                l2463 2900  
                                                l2455 52EA  
                                                l1735 7518  
                                                l3167 725E  
                                                l3343 55F6  
                                                l1495 3342  
                                                l1559 34B8  
                                                l3087 68D2  
                                                l1479 3B34  
                                                l1911 4AE4  
                                                l1903 4AC4  
                                                l2631 735C  
                                                l2528 5FC6  
                                                l1824 51F6  
                                                l1840 3072  
                                                l2464 292E  
                                                l2456 52B6  
                                                l3168 7268  
                                                l3344 5634  
                                                l1488 329E  
                                                l1920 1A3A  
                                                l1912 4AE8  
                                                l1904 4AC8  
                                                l2632 7338  
                                                l1841 3014  
                                                l2465 2906  
                                                l2457 52C2  
                                                l2481 24EE  
                                                l3337 7212  
                                                l1489 3270  
                                                l2705 5F6A  
                                                l1921 1A3E  
                                                l1905 4ACC  
                                                l2633 736A  
                                                l2650 6B7E  
                                                l1842 3036  
                                                l1850 6766  
                                                l2490 60CC  
                                                l2298 6048  
                                                l2706 5F78  
                                                l1930 1AC4  
                                                l1922 1A50  
                                                l1906 4AD0  
                                                l2634 734A  
                                                l1659 7924  
                                                l1843 306C  
                                                l2491 60D2  
                                                l1739 74E2  
                                                l3355 7730  
                                                l1931 1AC8  
                                                l1923 1A60  
                                                l1907 4AD4  
                                                l1772 627C  
                                                l1860 2124  
                                                l1780 7888  
                                                l1852 67A4  
                                                l2492 60D8  
                                                l2476 56BE  
                                                l3356 7720  
                                                l1916 1B58  
                                                l1940 1AEC  
                                                l1932 1ACC  
                                                l1924 1A70  
                                                l1908 4AD8  
                                                l3349 6938  
                                                l2485 60DE  
                                                l1941 1AF0  
                                                l1933 1AD0  
                                                l1925 1A80  
                                                l1917 1A32  
                                                l1909 4ADC  
                                                l1774 62E2  
                                                l1782 7898  
                                                l2486 608E  
                                                l1950 1B14  
                                                l1942 1AF4  
                                                l1934 1AD4  
                                                l1926 1A90  
                                                l1863 2192  
                                                l3367 5186  
                                                l1839 2F3A  
                                                l1847 674C  
                                                l1951 1B18  
                                                l1943 1AF8  
                                                l1935 1AD8  
                                                l1927 1AA0  
                                                l1919 1A36  
                                                l2656 5C18  
                                                l1864 216C  
                                                l3368 50E0  
                                                l1792 5CF4  
                                                l2496 5CB0  
                                                l2488 6094  
                                                l1880 1F3E  
                                                l1696 6E8E  
                                                l1960 1B3C  
                                                l1952 1B1C  
                                                l1944 1AFC  
                                                l1936 1ADC  
                                                l1928 1AB0  
                                                l2665 59C4  
                                                l3369 517E  
                                                l1873 5A2A  
                                                l2497 5C5A  
                                                l2489 60B0  
                                                l1961 1B40  
                                                l1953 1B20  
                                                l1945 1B00  
                                                l1937 1AE0  
                                                l1929 1AC0  
                                                l1866 22E8  
                                                l2498 5CDE  
                                                l1882 1F76  
                                                l1970 6D5C  
                                                l1962 1B44  
                                                l1954 1B24  
                                                l1946 1B04  
                                                l1938 1AE4  
                                                l2659 5C4C  
                                                l1867 220A  
                                                l1795 5D56  
                                                l1875 5A5E  
                                                l2499 5C68  
                                                l1883 1F50  
                                                l1971 6D40  
                                                l1963 1B48  
                                                l1955 1B28  
                                                l1947 1B08  
                                                l1939 1AE8  
                                                l2668 5A00  
                                                l1788 6432  
                                                l1868 2260  
                                                l1964 1B4C  
                                                l1956 1B2C  
                                                l1948 1B0C  
                                                l1892 4AEC  
                                                l1869 22A6  
                                                l1885 20FE  
                                                l1973 6D44  
                                                l1965 1B50  
                                                l1957 1B30  
                                                l1949 1B10  
                                                l1893 4AA0  
                                                l1886 1FEC  
                                                l1974 6D48  
                                                l1966 1B54  
                                                l1958 1B34  
                                                l1990 3132  
                                                l1887 2014  
                                                l1975 6D4C  
                                                l1959 1B38  
                                                l1895 4AA4  
                                                l1991 3136  
                                                l1983 30B0  
                                                l1888 20BC  
                                                l1976 6D50  
                                                l1896 4AA8  
                                                l1992 313A  
                                                l1977 6D54  
                                                l1897 4AAC  
                                                l1993 313E  
                                                l1985 30BE  
                                                l1978 6D58  
                                                l1898 4AB0  
                                                l1994 3142  
                                                l1899 4AB4  
                                                l1995 3146  
                                                l1987 30F6  
                                                l1996 314A  
                                                l1989 3186  
                                                l1997 314E  
                                                l1998 3152  
                                                l1999 3156  
                                                l9615 45E0  
                                                l9911 68FA  
                                                l9831 7720  
                                                l9497 44D0  
                                                l9683 6EFA  
                                                l9775 50E0  
                                                l9687 6F18  
                                                STR_1 8FF1  
                                                STR_2 8FF1  
                                                STR_3 8FF1  
                                                STR_4 8FF1  
                                                STR_5 8FF1  
                                                STR_6 8FF1  
                                                STR_7 8FF1  
                               __end_of_checked_line1 8E09  
                                                STR_8 8FF1  
                               __end_of_checked_line2 8CE2  
                                                l9879 4C62  
                                                STR_9 8FDC  
                               __end_of_checked_line3 8E7B  
                               __end_of_checked_line4 8D77  
                                                l9989 2CBE  
                                      _bootloader_run 7084  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 00A1  
                                                u6055 61AA  
                                                u7015 2B3E  
                                                u6145 6CB8  
                                                u6234 3FA2  
                                                u6218 3F70  
                                                u6235 3F9C  
                                                u6219 3F84  
                                                u6260 3FD8  
                                                u6165 6210  
                                                u7125 1520  
                                                u7320 6BE8  
                                                u7208 1620  
                                                u8040 199E  
                                                u6345 6D10  
                                                u7209 1634  
                                                u7330 6BF4  
                                                u7250 170C  
                                                u8210 074C  
                                                u9020 5FC2  
                                                u7340 6C00  
                                                u6620 462C  
                                                u7068 2BBA  
                                                u7260 170E  
                                                u7148 1554  
                                                u8220 075E  
                                                u8140 062C  
                                                u8108 052C  
                                                u6460 5078  
                                                u7069 2BCE  
                                                u7149 1568  
                                                u8109 0540  
                                                u7430 789C  
                                                u8310 2F0A  
                                                u7350 6C0C  
                                                u8118 055C  
                                                u6198 3F4C  
                                                u8119 0570  
                                                u6199 3F5E  
                               ??_USBCtrlTrfTxService 0001  
                                                u7600 5256  
                                                u8320 2F38  
                                                u7360 6C18  
                                                u7328 6BEA  
                                                u6640 463E  
                                                u9040 5F3A  
                                                u6810 5138  
                                                u7610 525C  
                                                u7370 6C22  
                                                u7338 6BF6  
                                                u6730 7514  
                                                u8250 07D6  
                                                u7515 6C5E  
                                                u8315 2F00  
                                                u7460 6438  
                                                u6820 516E  
                                                u7348 6C02  
                                                u6660 464E  
                                                u6740 74DE  
                                                u9204 3CF0  
                                                u9300 09EC  
                                                u7525 6AF6  
                                                u9205 3CEA  
                                                u7358 6C0E  
                                                u6590 4616  
                                                u7278 1714  
                                                u8158 064C  
                                                u9214 3D22  
                                                u9070 68A0  
                                                u9310 0A98  
                                                u6815 5132  
                                                u7535 67D6  
                                                u7279 1728  
                                                u8159 0660  
                                                u9215 3D1C  
                                                _UCFG 000F39  
                                                u7376 6C24  
                                                u7368 6C1A  
                                                u7800 39CC  
                                                u9400 55B0  
                                                u6817 5128  
                                                u8450 5A52  
                                                u6850 6F62  
                                                u6827 5164  
                                                u6780 62DE  
                                                u7820 3A24  
                                                u8700 4EE8  
                                                u9500 266C  
                                                u9420 257C  
                                                _UEP0 000F26  
                                                u6765 62A2  
                                                u7645 639C  
                                                _UEP1 000F27  
                                                u6790 5100  
                                                u8470 5A8E  
                                                u9254 3D76  
                                                u9238 3D44  
                                                u9190 3CDA  
                                                u6950 4CB0  
                                                u7750 47B8  
                                                u8710 4F0C  
                                    ?_fat_create_file 0045  
                                                u9255 3D70  
                                                u9239 3D58  
                                                u7807 39C2  
                                                u9600 00A2  
                                                u6880 724A  
                                                u8720 4F30  
                                                u9520 269C  
                                                u9440 25C0  
                                                u9178 3CA8  
                                                u6970 4CEE  
                                                u9290 0940  
                                                u9370 5560  
                                                u9179 3CBC  
                                                u7827 3A1A  
                                                _UEIE 000F37  
                                                u9700 48AE  
                                                u9540 26D6  
                                                u9460 2604  
                                                u6797 50F6  
                                                u8645 72C0  
                                                u6957 4CA6  
                                                u8821 30C8  
                                                u6990 691A  
                                                u7790 399C  
                                                u8735 6464  
                                                u9800 606E  
                                                u9560 2704  
                                                u9480 263E  
                                                u6977 4CE4  
                                                u8930 6FCA  
                                                u8690 4EC2  
                                                u9580 2734  
                                                u6997 6910  
                                                u7797 3992  
                                                u8960 663A  
                                                u9840 24DE  
                                                u9680 4852  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u8865 64C2  
                                                u9930 3832  
                                                u9755 7986  
                                                u8885 769E  
                                                u9765 753E  
                                                u8990 6710  
                                                u9775 601A  
                                                u9880 52E8  
                                                u9960 38D6  
                               _i2c_digipot_reset_off 78C2  
                             ??_fat_get_format_status 002D  
                           __parse_file_truncate@data 0001  
                               __size_of__delete_root 005C  
                                      _ResetSenseData 69AC  
              __end_of__fill_buffer_get_configuration 58D4  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 5836  
              USBStdFeatureReqHandler@current_ep_data 001B  
                              ?__update_modified_time 0005  
                                                _pDst 0096  
                                                _main 4D04  
                                                _itoa 71EE  
                          __end_of_fat_append_to_file 2336  
                         __size_of_APP_DeviceMSDTasks 0012  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 4C38  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 55B4  
                          ??_ExternalFlash_SectorRead 0035  
                         __fill_buffer_find_file@cntr 004D  
                             __bootloader_verify_file 1226  
                           _ExternalFlash_MediaDetect 7B6C  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 7AA0  
                               _display_get_character 776E  
                                ??_USBCheckHIDRequest 0001  
                          __end_of__switch_mastermode 7B7A  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DF9  
                                __end_of_failed_line2 8D54  
                                __end_of_failed_line4 8E73  
                      ??_MSDProcessCommandMediaAbsent 0049  
                          __end_of_USBCheckStdRequest 449C  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 0BC8  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0047  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           __size_of_flash_page_write 0056  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 008A  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 3392  
                                      _hex_file_entry 01BC  
                              _bootloader_get_entries 7B14  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 762E  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                            _system_ui_inactive_count 0086  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 6816  
                                               l10121 7880  
                                               l10141 63D6  
                                               l10403 4784  
                                               l10245 51C0  
                                               l10239 51AC  
                                               l10191 5D56  
                                               l10281 525C  
                                               l10193 5D5A  
                                               l12211 2554  
                                               l11237 1F50  
                                               l12303 26DE  
                                               l12313 2704  
                                               l12225 2598  
                                               l12145 6108  
                                               l10635 05FC  
                                               l12315 270C  
                              ?_i2c_digipot_backlight 0001  
                                               l11621 30BE  
                                               l12253 2620  
                                               l12173 552C  
                                               l12415 4882  
                                               l11615 30B0  
                                               l12239 25DC  
                                               l12191 557C  
                                               l10825 3036  
                                               l10913 5A22  
                                               l13233 70D6  
                                               l12089 0882  
                                               l11721 3186  
                                               l12265 2646  
                                               l12291 26B8  
                                               l12275 266C  
                                               l10925 5A56  
                                               l11629 30F6  
                                               l12277 2674  
                             ?__fill_buffer_find_file 0045  
                                               l13239 70E2  
                                               l13089 495E  
                                               l12561 56B6  
                                               l11737 77BC  
                                               l10867 216C  
                                               l12635 52BA  
                                               l12483 6040  
                                               l12821 3872  
                                               l12489 604C  
                                               l12931 1CBC  
                                               l14507 5ECE  
                                               l14509 5F02  
                                               l13557 1254  
                                               l13807 3606  
                                               l12793 380E  
                                               l13681 0E8E  
                                               l14497 1B70  
                                        spi_tx@length 0003  
                                               l14499 1C88  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 5A9E  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE8  
                                               STR_11 8FFA  
                                               STR_12 8FCF  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                     __end_of___lldiv 5F8A  
                                               u10100 1CEC  
                                               ?_utoa 0008  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10080 1CB8  
                                               u11300 54A0  
                                               u10420 7116  
                                               u10270 1E96  
                                               u10351 76C8  
                                               u11410 4A60  
                                               u10285 6FF0  
                                               u11190 367A  
                                               u11280 548C  
                                     __end_of___llmod 68E4  
                              __end_of_USBDeviceTasks 367E  
                                               u11380 4A18  
                                               u10780 12A4  
                                               u10870 0C2E  
                                               u11767 7866  
                                               u11777 6EB2  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u11787 6EC4  
                                               u11797 6ECE  
                                     __end_of___lwdiv 6F92  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 7272  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                                _file_minimum_address 0148  
                                    ??__display_start 0001  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00FA  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                        __delete_root 6ACE  
                                     ??_flash_is_busy 0014  
                                    __end_of_MSDTasks 1EF0  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0037  
                                  _USBCheckMSDRequest 501C  
                     __end_of_internalFlash_getBuffer 7AC4  
                     __end_of_USBCtrlEPAllowDataStage 5836  
                                               _sd000 8FCB  
                                               _sd001 8EE7  
                                               _sd002 8F1B  
                                               _sd003 8F8A  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 70D2  
                       __end_of_MSDTransferTerminated 6E40  
                 i2c_display_send_init_sequence@F6791 01EC  
                                        _gblCBWLength 00A5  
                          __end_of__parse_file_delete 6FE4  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 600C  
                          __end_of__parse_file_create 666E  
                              __end_of_ResetSenseData 6A0E  
                            __get_empty_cluster@value 0037  
                          __end_of__parse_file_modify 7B78  
                          __end_of__parse_file_rename 6742  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 0054  
                           fat_get_format_status@cntr 002F  
                             ?__fill_buffer_read_file 0056  
                                               pclath 000FFA  
                                     __end_of_ui_init 7A3A  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00A9  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 7564  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 51A0  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 0056  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 780E  
             __fill_buffer_get_file_details@outBuffer 0042  
                                      _MSDReadHandler 2B16  
                                   __delete_root@slot 002F  
                             __CFG_DSWDTOSC$INTOSCREF 000000  
                        __size_of_USBStdSetCfgHandler 00E0  
                   fat_create_file@number_of_clusters 00C3  
                                flash_page_write@data 0022  
                     __size_of_fat_get_empty_clusters 008E  
               __bootloader_check_address@byte_status 000B  
                                flash_page_write@page 0020  
                       internalFlash_readPage@address 0018  
                                     __initialization 5DFC  
                       fat_read_from_file@file_number 00C0  
                           __end_of__flash_get_status 7660  
                        fat_get_file_information@data 0038  
                  spi_set_configuration@configuration 0001  
               __end_of_ExternalFlash_MediaInitialize 79B8  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 799E  
                                         _system_init 6816  
                      __size_of_system_encoder_enable 0010  
                                         _FileAddress 0164  
                                        __end_of_main 4DCC  
                                        __end_of_itoa 7230  
                       __end_of_system_encoder_enable 7A80  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 6DEA  
                                        __end_of_utoa 5658  
                                __end_of__normal_mode 6BDE  
                                    _timer_pseudo_isr 73E6  
                            __parse_command_short@cmd 0014  
                                    __end_of_i2c_init 7ABA  
                            __end_of__i2c_acknowledge 7AE2  
                      __end_of__fill_buffer_find_file 56FA  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 007C  
                          __end_of__get_empty_cluster 6442  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 79E8  
                           __size_of_USBCtrlEPService 00AC  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                api_prepare@outBuffer 00F9  
                                              ??_main 005F  
                                    __end_of__i2c_get 7AD8  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 0074  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 00EB  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                            _fat_get_file_information 635A  
                                  __write_root@offset 002E  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 7B6C  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 7B68  
                                         ?_USBSuspend 0001  
                                __size_of_api_prepare 00F2  
                               ??__bootloader_program 0056  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                              ?_spi_set_configuration 0001  
                                _i2c_eeprom_writeByte 72B4  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 7858  
                              __flash_write_to_buffer 7034  
                     i2c_digipot_reset_off@data_array 000B  
                       __size_of__parse_file_truncate 0004  
                      __end_of__fill_buffer_read_file 254C  
                                _start_from_byte_next 009D  
                                    ___llmod@dividend 0001  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0038  
                                          __i2c_start 7B3A  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 711A  
                           fat_read_from_file@cluster 00E1  
                                      __CFG_WDTEN$OFF 000000  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 0056  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                    __end_of__get_fat 6D94  
                                    __end_of__get_fbr 1C98  
                                    __end_of__get_mbr 4B6C  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0025  
                                              _TBLPTR 000FF6  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                   ??__display_verify 001F  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 2CEE  
                                 _flash_pages_written 0166  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                         fat_append_to_file@file_size 00C0  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0021  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 56FA  
                                    __read_fat@offset 0035  
                                    __end_of_fat_init 7A90  
                   __bootloader_program@page_to_write 00FC  
                                   _shortPacketStatus 00B7  
                   fat_append_to_file@number_of_bytes 0040  
                          __get_empty_cluster@cluster 0039  
                                      __CFG_XINST$OFF 000000  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 608A  
                        __end_of__flash_set_page_size 6180  
                                     _hexCharsToUint8 7966  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002D  
                                              _gblCBW 0100  
                                   _fat_get_file_size 6442  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
                                           ??___lwdiv 0005  
           SYSTEM_Initialize@pll_startup_counter_2849 0003  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 00A4  
                                           ??___lwmod 0005  
                                              _buffer 02B2  
                                   _USBEnableEndpoint 7370  
                       __bootloader_program@address32 00F5  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 68E4  
                                  ?_fat_get_file_size 0031  
                                              _memset 7716  
                                              clear_0 5E36  
                                              clear_1 5E4A  
                                              clear_2 5E5C  
                                              clear_3 5E68  
                                              clear_4 5E74  
                           _ExternalFlash_SectorWrite 74C4  
                                   api_parse@inBuffer 00F1  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6D  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 49CE  
                                              _spi_tx 6B2A  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 75FC  
                                    ?_fat_rename_file 0040  
                          __parse_command_long@length 0056  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                             __write_root@root_sector 002C  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 7742  
                               __end_of_fat_find_file 5260  
                         fat_get_empty_clusters@value 0037  
                                 ??_fat_get_file_size 0035  
                              _fat_get_empty_clusters 5CE2  
                       __size_of__parse_command_short 007C  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                                        __mediumconst 8CCC  
                                 __end_of__i2c_open_1 79D0  
                      i2c_digipot_reset_on@data_array 000B  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 6A6E  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 6A0E  
                                              tblptru 000FF8  
                                    __end_of_spi_init 7370  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0029  
                         ??__bootloader_check_address 0006  
                            __size_of_flash_page_read 0032  
                                       spi_tx_rx@data 0005  
                          __end_of__root_is_available 62E6  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0058  
                               __end_of_ui_get_status 7B50  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00B6  
                          ??_APP_DeviceCustomHIDTasks 00FB  
                                __CFG_LS48MHZ$SYS48X8 000000  
                                   _SYSTEM_Initialize 6EEC  
                                 ??_i2c_set_frequency 0001  
                       fat_read_from_file@read_length 00E5  
                                          __accesstop 0060  
                             __end_of__initialization 5E7C  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 7ACE  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 00EB  
                         __end_of__parse_command_long 5CE2  
                   __end_of_failed_line3_noNextRecord 8E47  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 64B4  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                               __write_fat@fat_sector 002D  
                               flash_page_write@match 0024  
                                ??_flash_partial_read 0031  
                                    _flash_page_write 6E40  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 73AC  
                            _bootloader_get_file_size 7A5E  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FCF  
                                       __end_of_sd001 8F1B  
                                       __end_of_sd002 8F49  
                                       __end_of_sd003 8FA4  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 7B7A  
                                        __pidataBANK1 7948  
                           ??_bootloader_get_rec_data 0001  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 7B14  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 7B0A  
                           __get_available_root_entry 787C  
                                 fat_rename_file@cntr 00DF  
                                 fat_rename_file@name 0040  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 00BF  
                                  __size_of__read_fat 0048  
                                     _active_protocol 00BA  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 14F8  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 4E94  
                                 _userInterfaceStatus 00A0  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 3FC0  
                      ?_ExternalFlash_MediaInitialize 0001  
                           __end_of_i2c_set_frequency 776E  
                       __size_of__display_programming 01D6  
                             __end_of_system_delay_ms 787C  
                                  __size_of_api_parse 00D2  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0084  
                      __end_of_failed_line3_startCode 8D1D  
                               _communicationSettings 0139  
                    fat_get_empty_clusters@fat_sector 0033  
                                  _fat_read_from_file 1EF0  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 003F  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8DE9  
                                        _failed_line2 8D42  
                                        _failed_line4 8E6B  
                              flash_partial_read@data 002F  
                              flash_partial_read@page 0029  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00AB  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 6F40  
                             ??__update_modified_time 0007  
                                   __end_of__i2c_read 5DFC  
                                   __end_of__i2c_send 7B4A  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 53C0  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 7B3A  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 0040  
                                         ?__i2c_write 0006  
                                          __pbssBANK0 0060  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                       fat_append_to_file@fat_cluster 00C6  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 3DB2  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 0150  
                                           ?_i2c_init 0001  
                    __fill_buffer_read_file@outBuffer 0058  
                        __end_of__sector_from_cluster 7AAE  
                                    _mediaInformation 01D3  
                             __end_of_hexCharsToUint8 7982  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 003D  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 55B4  
                     ??__fill_buffer_get_file_details 0044  
                                       __flash_wakeup 6E96  
                            __fill_buffer_get_display 5260  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 006C  
                               __size_of__normal_mode 0058  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                          __update_modified_time@root 0005  
                    __end_of_USBCtrlEPServiceComplete 42C8  
               __end_of_APP_DeviceCustomHIDInitialize 7598  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 7564  
                         MSDTransferTerminated@handle 000C  
                           __bootloader_check_address 4822  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004E  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 254C  
                                   ?__display_checked 0001  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 004A  
                        __size_of__flash_partial_read 0078  
                            __size_of_fat_delete_file 006A  
                                           MSDTasks@i 0053  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 2116  
                                             ?_memset 0001  
                                          _device_dsc 8FA4  
                 fat_get_file_information@file_number 003F  
                                    ??_display_update 0011  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 79B8  
                                    _USBCtrlEPService 5314  
                                             ?_ui_run 0001  
                                          _ep_data_in 0161  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0140  
                                  __display_clear@row 0003  
                       fat_append_to_file@file_number 00CA  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 3392  
                    __sector_from_cluster@fat_cluster 0001  
                                  __switch_mastermode 7B78  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 3C9C  
                                  _USBCheckStdRequest 43BA  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA7  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 0040  
                              fat_append_to_file@data 0042  
                                          _flash_init 7A14  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 4D04  
                                   __end_of__get_data 77C0  
                                   __end_of__get_date 7B32  
                                 _USBStdSetCfgHandler 4742  
                              fat_append_to_file@root 00D1  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 7B28  
                                   __end_of__get_root 3216  
                                  __size_of_spi_tx_rx 0098  
                                  __size_of_spi_tx_tx 0090  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                          _done_line1 8DB9  
                                          _done_line2 8E9F  
                                          _done_line3 8DA9  
                                          _done_line4 8D99  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 79FE  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                                 ?__switch_mastermode 0001  
                              _total_hex_file_entries 0168  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 6106  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 741E  
                                  __get_first_cluster 67AC  
                                        __normal_mode 6B86  
                          __end_of_APP_DeviceMSDTasks 7A4C  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 71AA  
                     ??_internalFlash_pageFromAddress 0005  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 00EB  
                             __size_of_hexCharToUint8 002C  
               __end_of__flash_compare_page_to_buffer 61F8  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 6180  
                                          __write_fat 72F4  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB6  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                   __read_fat@cluster 0031  
                                      ?__flash_wakeup 0001  
                                   ??_flash_page_read 002D  
                      __end_of_bootloader_get_entries 7B1E  
                              fat_find_file@extension 0033  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 49CE  
                                 ?__get_first_cluster 0031  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 3C9C  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 0044  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 6F92  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 0072  
                                   __end_of__spi_init 7456  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 5F8A  
                                             __Lparam 0000  
                                  __parse_file_create 6602  
                            __size_of_fat_create_file 01BC  
                                   __end_of_hid_rpt01 8F8A  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 40C6  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                        ?_system_init 0001  
                                  __parse_file_modify 7B74  
                                ??__switch_mastermode 0001  
                                  __parse_file_rename 66D8  
                          ??_fat_get_file_information 003A  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 64B4  
                                          _last_error 009E  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0200  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 8E98  
                                             ___lldiv 5F08  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 687E  
                                             ___lwdiv 6F40  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 7230  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 0040  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 004C  
                                 ?__parse_file_create 0051  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 73E6  
                                             __pcinit 5DFC  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B4  
                           __end_of_configDescriptor1 8EE7  
                                 ??_MSDProcessCommand 0049  
                                             __ramtop 0F00  
                        ExternalFlash_SectorRead@page 0035  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 4D04  
                                             __ptext1 49CE  
                                     __display_failed 0F30  
                                             __ptext2 7A70  
                                             __ptext3 76BE  
                                             __ptext4 78A0  
                                             __ptext5 78C2  
                                             __ptext6 77E8  
                                             __ptext7 62E6  
                                             __ptext8 73E6  
                                 ?__parse_file_modify 0001  
                                             __ptext9 6816  
                                             _inPipes 0066  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0044  
                                     __size_of_ui_run 00D0  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0036  
                                     __size_of_spi_tx 005C  
                         _USBDeferOUTDataStagePackets 00AC  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002D  
                                    ??_bootloader_run 005E  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 7948  
                                ??__get_first_cluster 0033  
                                        ??_USBSuspend 0018  
                                  __end_of_USBMSDInit 3FC0  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 7A90  
                                             _msd_cbw 000D40  
                                     __display_verify 3A58  
                                             _msd_csw 000D80  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 7AC4  
                                             _ui_init 7A28  
                                          ??_fat_init 0031  
                  __size_of_ExternalFlash_SectorWrite 0036  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 7A14  
                                  __end_of_USB_CD_Ptr 8EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                                  __get_empty_cluster 63CE  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 003E  
                                             _strncmp 50DE  
                                 _flash_partial_write 6524  
                                end_of_initialization 5E7C  
                                ??__parse_file_delete 0042  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 6DEA  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 2938  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 274A  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 004E  
                                ??__parse_file_create 0053  
                                  __end_of_USB_SD_Ptr 8E83  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                    __write_fat@value 002B  
                                 _pBDTEntryEP0OutNext 0098  
                                ??__parse_file_modify 0003  
                           __end_of_MSDProcessCommand 3DB2  
                                             itoa@buf 0011  
                                ??__parse_file_rename 0046  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 003D  
                                     _USB1msTickCount 0154  
                                    ?_hexCharsToUint8 0003  
                                 ?__get_empty_cluster 0031  
                            __flash_partial_read@data 001B  
                        fat_get_empty_clusters@offset 0035  
                              _internalFlash_readPage 7272  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0015  
                            fat_append_to_file@length 00CB  
                         i2c_eeprom_writeByte@address 000B  
                            fat_append_to_file@offset 00C8  
           __fill_buffer_get_file_details@file_number 0044  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                            fat_append_to_file@sector 00BE  
                                     ___lldiv@counter 000D  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 7690  
                        __end_of__parse_file_truncate 7B74  
                             _USBCtrlEPAllowDataStage 5798  
                                   __end_of_spi_tx_rx 5A08  
                                   __end_of_spi_tx_tx 5C54  
               __end_of__fill_buffer_get_file_details 6602  
              __size_of__fill_buffer_get_file_details 006E  
                       __fill_buffer_get_file_details 6594  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 7AEC  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 7AE2  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 0001  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 0040  
                            _USBCtrlEPServiceComplete 41C8  
                                             utoa@val 000A  
                                           _MSD_State 00AA  
                         __end_of__bootloader_program 0F30  
                               _system_encoder_enable 7A70  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 005E  
                          _USBStatusStageEnabledFlag1 00AF  
                          _USBStatusStageEnabledFlag2 00AE  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                             ?_fat_get_empty_clusters 0031  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                            flash_partial_write@start 0022  
                                ??__get_empty_cluster 0033  
                      __end_of__flash_write_to_buffer 7084  
                                    __CFG_DSBOREN$OFF 000000  
                                __sector_from_cluster 7AA0  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       fat_append_to_file@new_cluster 00C4  
                                   ??_fat_delete_file 003B  
                              fat_create_file@cluster 00C5  
                                 flash_page_read@data 002B  
                                         ?_flash_init 0001  
                                 flash_page_read@page 0029  
                                    __CFG_CPUDIV$OSC1 000000  
                       fat_get_empty_clusters@cluster 003B  
                     __fill_buffer_find_file@inBuffer 0045  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0240  
                                  _BothEP0OutUOWNsSet 00B2  
                       fat_get_empty_clusters@maximum 0031  
                            __end_of_flash_page_write 6E96  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 02B2  
                                    ??_MSDReadHandler 0037  
                           __flash_partial_read@start 0017  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 6D94  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00BC  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003F  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DF9  
                                       _checked_line2 8CCD  
                                       _checked_line3 8E73  
                                       _checked_line4 8D66  
                                         ?__write_fat 0029  
                                 __delete_root@offset 002C  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8E47  
                             __size_of__display_start 0152  
                        __end_of_USBTransferOnePacket 41C8  
                              i2c_display_cursor@line 000F  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 6106  
               __end_of_internalFlash_pageFromAddress 799E  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 7982  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 6270  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 1226  
                       __get_empty_cluster@fat_sector 0033  
                                    ?_MSDErrorHandler 0001  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 5B32  
                               ??_flash_partial_write 0028  
                       ??_bootloader_get_rec_checksum 0001  
                                    __write_root@slot 0030  
                      __bootloader_program@entry_page 00ED  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00CC  
                               __end_of_USBDeviceInit 391E  
               __end_of_USBIncrement1msInternalTimers 7906  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 78E4  
                                     ??__display_done 001F  
                      __end_of_fat_get_empty_clusters 5D70  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 3B84  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                            __end_of_USBStallEndpoint 3EBA  
                                 _i2c_eeprom_readByte 6FE4  
                                   ??_fat_create_file 004D  
                 __bootloader_program@start_from_byte 00F9  
                  __fill_buffer_read_file@data_length 00EF  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8CE2  
                               ?__sector_from_cluster 0001  
                                      __end_of_memcpy 694A  
                                     _MSDRetryAttempt 00A6  
                                      __end_of_memset 7742  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 00B4  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 4A9E  
                                      __end_of_spi_tx 6B86  
               __get_available_root_entry@file_number 0038  
                                 __end_of__ui_encoder 635A  
                           __flash_set_page_size@size 0018  
                                 start_initialization 5DFC  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                 __end_of_api_prepare 43BA  
                   __end_of__get_available_root_entry 78A0  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0096  
                                     _USBMSDOutHandle 0092  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 5B32  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1A30  
                                 __flash_partial_read 61F8  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 0045  
                                       _MSDHostNoData 00A3  
                                      _hexCharToUint8 76EA  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0031  
                      __size_of__update_modified_time 0032  
                   __end_of_USBCtrlEPAllowStatusStage 501C  
                                ?_i2c_eeprom_readByte 0012  
                       __end_of__update_modified_time 75FC  
                        __end_of__display_programming 2EC4  
                fat_get_empty_clusters@empty_clusters 0039  
                            __end_of_USBCtrlEPService 53C0  
                          __size_of_MSDProcessCommand 0116  
                                __system_encoder_init 73AC  
                                           __i2c_read 5D70  
                                           __i2c_send 7B42  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 7B32  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                            ??__fill_buffer_find_file 0049  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 7B68  
                          __flash_partial_read@length 0019  
                       __end_of_failed_line3_checksum 8E38  
                       __root_is_available@first_byte 0037  
                              _pBDTEntryEP0OutCurrent 009A  
                              __size_of_fat_find_file 00C0  
                    __end_of_fat_get_file_information 63CE  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 0014  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8DD9  
                                   _programming_line2 8D30  
                                   _programming_line3 8E83  
                                   _programming_line4 8DC9  
                                       _MSDTasks$2372 004F  
                                       _MSDTasks$2373 0051  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                                      __get_date@date 0003  
                               spi_init@configuration 0004  
                             flash_partial_read@start 002B  
                                 _USBStdGetDscHandler 391E  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0015  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00A6  
                          fat_get_file_size@file_size 0038  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01D8  
                           ?_APP_DeviceCustomHIDTasks 0001  
                                __size_of_system_init 0068  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 008E  
                       __end_of_i2c_digipot_backlight 780E  
                                        ?__i2c_open_1 0001  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 0014  
                                  __end_of__i2c_start 7B42  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 0040  
                                  __end_of__i2c_write 7162  
                           __root_is_available@offset 0034  
                                 __size_of__write_fat 0040  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00BD  
                            ??__fill_buffer_read_file 005A  
                      __end_of_USBStdGetStatusHandler 546A  
                         api_parse@receivedDataLength 00F3  
                                         __pbssCOMRAM 005F  
                   __end_of__bootloader_check_address 48FC  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 76BE  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 7690  
                          fat_append_to_file@position 00CD  
                         fat_create_file@next_cluster 00BE  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0268  
                                     _flash_page_read 7598  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 00BE  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCB  
                       __end_of_MSDCheckForErrorCases 4660  
             __bootloader_program@address_within_page 00EF  
                              __end_of_hexCharToUint8 7716  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 014C  
                  __end_of_flash_command_pagesize_512 8FC7  
                          _flash_command_pagesize_512 8FC3  
                  __end_of_flash_command_pagesize_528 8FC3  
                          _flash_command_pagesize_528 8FBF  
                                      __flash_is_busy 7906  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 6524  
                                __parse_file_truncate 7B70  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 8E91  
                                           __get_data 7798  
                                           __get_date 7B28  
                    __bootloader_program@return_value 00F1  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 003B  
                                   ?_timer_pseudo_isr 0001  
                                           __get_time 7B1E  
                                           __get_root 3080  
                                 __end_of__write_root 6C8E  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 748E  
                            __delete_root@root_sector 002A  
                          __end_of_i2c_display_cursor 7858  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 71AA  
                                        _pBDTEntryOut 0072  
                                          ?__i2c_stop 0001  
                          fat_rename_file@file_number 00BE  
                                           __read_fat 7162  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8DE9  
                           __end_of_programming_line2 8D42  
                           __end_of_programming_line3 8E8A  
                           __end_of_programming_line4 8DD9  
                    __end_of_ExternalFlash_SectorRead 7530  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 7AF6  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 7AEC  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 5510  
                                   fat_find_file@name 0031  
                      MSDProcessCommandMediaPresent@i 0048  
                                 fat_find_file@buffer 0035  
                                   fat_find_file@slot 0040  
                                           _api_parse 48FC  
                           fat_create_file@root_entry 00C7  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 4660  
                                  _APP_DeviceMSDTasks 7A3A  
                                       __pmediumconst 8CCC  
                                 fat_find_file@offset 0043  
                               ??__flash_partial_read 001D  
                                           __ptext100 4F58  
                                           __ptext101 4DCC  
                                           __ptext110 74C4  
                                           __ptext102 4C38  
                                           __ptext111 6E40  
                                           __ptext103 7A3A  
                                           __ptext200 5970  
                                           __ptext120 7AE2  
                                           __ptext112 2B16  
                                           __ptext104 1C98  
                                           __ptext201 7B78  
                                           __ptext121 7A4C  
                                           __ptext113 457E  
                                           __ptext105 3C9C  
                                           __ptext202 40C6  
                                           __ptext130 7B4A  
                                           __ptext122 799E  
                                           __ptext114 3FC0  
                                           __ptext106 694A  
                                           __ptext203 0000  
                                           __ptext131 6594  
                                           __ptext123 7B6C  
                                           __ptext115 3DB2  
                                           __ptext107 049C  
                                           __ptext140 7B56  
                                           __ptext132 5260  
                                           __ptext124 546A  
                                           __ptext116 69AC  
                                           __ptext108 14F8  
                                           __ptext141 7B5C  
                                           __ptext133 776E  
                                           __ptext125 42C8  
                                           __ptext117 74FA  
                                           __ptext109 7B68  
                                           __ptext150 7858  
                                           __ptext142 7B00  
                                           __ptext134 5836  
                                           __ptext126 2336  
                                           __ptext118 7598  
                                           __ptext151 72B4  
                                           __ptext143 7B0A  
                                           __ptext135 274A  
                                           __ptext127 1EF0  
                                           __ptext119 58D4  
                                           __ptext160 66D8  
                                           __ptext152 7742  
                                           __ptext144 7A5E  
                                           __ptext136 7AEC  
                                           __ptext128 6442  
                                           __ptext161 5A08  
                                           __ptext153 711A  
                                           __ptext145 7B62  
                                           __ptext137 7B50  
                                           __ptext129 4660  
                                           __ptext170 5CE2  
                                           __ptext162 7B74  
                                           __ptext154 6BDE  
                                           __ptext146 7B14  
                                           __ptext138 7AF6  
                                           __ptext171 51A0  
                                           __ptext163 6F92  
                                           __ptext155 7B32  
                                           __ptext147 5658  
                                           __ptext139 79E8  
                                           __ptext180 6524  
                                           __ptext172 50DE  
                                           __ptext164 6742  
                                           __ptext156 7B3A  
                                           __ptext148 48FC  
                                           __ptext181 7034  
                                           __ptext173 787C  
                                           __ptext165 67AC  
                                           __ptext157 7B42  
                                           __ptext149 608A  
                                           __ptext190 7162  
                                           __ptext182 5BC4  
                                           __ptext174 5F8A  
                                           __ptext166 6ACE  
                                           __ptext158 5C54  
                                           __ptext191 63CE  
                                           __ptext183 6C8E  
                                           __ptext175 2116  
                                           __ptext167 6602  
                                           __ptext159 7B70  
                                           __ptext192 75FC  
                                           __ptext184 6CE6  
                                           __ptext176 635A  
                                           __ptext168 2EC4  
                                           __ptext193 61F8  
                                           __ptext185 6180  
                                           __ptext177 6270  
                                           __ptext169 68E4  
                                           __ptext194 79FE  
                                           __ptext186 75CA  
                                           __ptext178 6C36  
                                           __ptext195 79D0  
                                           __ptext187 7B1E  
                                           __ptext179 72F4  
                                           __ptext196 7906  
                                           __ptext188 7B28  
                                           __ptext197 6E96  
                                           __ptext189 7AA0  
                                           __ptext198 6B2A  
                                           __ptext199 762E  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0041  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                                            ?___lwdiv 0001  
                                           __spi_init 741E  
                                            ?___lwmod 0001  
                         __size_of_fat_read_from_file 0226  
                                           _hid_rpt01 8F6D  
                                         __ui_encoder 62E6  
                           __get_first_cluster@offset 0036  
                              ??__sector_from_cluster 0003  
                                           _idle_rate 00BB  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0034  
                                      __get_time@time 0003  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 42C8  
                             __parse_file_delete@data 0040  
                                     __i2c_write@data 0006  
                                _file_maximum_address 0144  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 0045  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0049  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 40C6  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 0018  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 79E8  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 608A  
                              fat_read_from_file@data 0048  
                 __fill_buffer_get_display@secondHalf 0007  
                              __end_of__flash_is_busy 7928  
                                       _fat_find_file 51A0  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 00C1  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 085A  
                                   __display_itoa_u16 4E94  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 6ACE  
                               ??_USBStdGetDscHandler 0001  
                               ?__parse_file_truncate 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 8E29  
                                 __end_of_found_line2 8D30  
                                 __end_of_found_line3 8E9F  
                                 __end_of_found_line4 8D66  
                                         _ep_data_out 015E  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 7B00  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 78E4  
                       _bootloader_get_rec_dataLength 7AF6  
                                       _MSDWriteState 00A7  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 70D2  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 2938  
                    __end_of_bootloader_get_file_size 7A70  
                                         _file_buffer 0280  
                                     _config_internal 015B  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 7B4A  
                                     _config_external 0158  
                                      __display_start 367E  
                        __size_of_USBCtrlTrfTxService 00CC  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0054  
                       __end_of_display_get_character 7798  
                                         _file_number 00FF  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 457E  
                      __root_is_available@file_number 0036  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0031  
                                   ??_fat_rename_file 0044  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0220  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
              __fill_buffer_get_file_details@inBuffer 0040  
                   __bootloader_verify_file@address32 00F0  
                          __end_of_internalFlash_read 74C4  
                                          ?_api_parse 00F1  
                                    __CFG_WDTPS$32768 000000  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 004C  
                                            _MSDTasks 1C98  
                          _USBDeferINDataStagePackets 00AD  
                                        ??_fat_format 0025  
                                     _fat_delete_file 6742  
                         __size_of__switch_mastermode 0002  
                                _active_configuration 009C  
                           ?__ic2_display_set_address 0001  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0051  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003B  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                                _USBConfigureEndpoint 5A9E  
                                   __i2c_write@length 0008  
                             __end_of_flash_page_read 75CA  
                                           _spi_tx_rx 5970  
                                           _spi_tx_tx 5BC4  
                                __display_verify@cntr 0021  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 0090  
                                __display_programming 2CEE  
                               ?_USBTransferOnePacket 0001  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 006A  
                           __end_of__display_itoa_u16 4F58  
                           __end_of__display_itoa_u32 0BC8  
                     __size_of__fill_buffer_read_file 0216  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8E19  
                                __end_of_verify_line2 8E62  
                                __end_of_verify_line3 8E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 0031  
                            fat_rename_file@extension 0042  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00B5  
                   __end_of_ExternalFlash_MediaDetect 7B70  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                                     ?__flash_is_busy 0001  
                    __end_of__fill_buffer_get_display 5314  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 6C36  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 711A  
                   __size_of_fat_get_file_information 0074  
                                _bootloader_get_error 7B62  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0038  
                              __end_of__display_found 2B16  
                             __end_of_USBStallHandler 71EE  
                                   ?_flash_page_write 0020  
                      __end_of_internalFlash_readPage 72B4  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 37D0  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 5E10  
                        __size_of__system_timer0_init 0020  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                        fat_create_file@cluster_count 00C0  
                         __end_of_USBStdSetCfgHandler 4822  
                                  ??_flash_page_write 0024  
                         __size_of__parse_file_delete 0052  
                                        ??__write_fat 002D  
                                  __end_of_fat_format 274A  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 006C  
                                 __display_found@cntr 0028  
                                            _i2c_init 7AAE  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 0004  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00A8  
                         __size_of__parse_file_rename 006A  
                                         ??__i2c_stop 0001  
                                  __write_fat@cluster 0029  
                                  __end_of_device_dsc 8FB6  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 7ACE  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 2EC4  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0044  
                                            __Hrparam 0000  
                            fat_read_from_file@offset 00E3  
                         __end_of_bootloader_filename 8FBF  
                            fat_read_from_file@sector 00BE  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 7A28  
                                      _TransferLength 008C  
                                _bootloader_extension 8FC7  
                           __get_empty_cluster@offset 0035  
                          __end_of_USBCheckMSDRequest 50DE  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 74FA  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 8DC9  
                                  __end_of_done_line2 8EA5  
                                  __end_of_done_line3 8DB9  
                                  __end_of_done_line4 8DA9  
                                      __i2c_wait_idle 6BDE  
                                     _MSDWriteHandler 14F8  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 00A2  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                                         _found_line1 8E19  
                                         _found_line2 8D1D  
                                         _found_line3 8E98  
                                         _found_line4 8D54  
                                            __get_fat 6D3E  
                                            __get_fbr 1A30  
                         __size_of__get_empty_cluster 0074  
                                            __get_mbr 4A9E  
                                  __end_of__write_fat 7334  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 7A5E  
                          _ExternalFlash_CapacityRead 7A4C  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 5658  
                              ??__parse_file_truncate 0003  
                        __size_of__bootloader_program 0368  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0176  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 7A80  
                    __get_first_cluster@first_cluster 0038  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                                    __display_checked 3216  
               __end_of_bootloader_get_rec_recordType 7B56  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 7B50  
                                            __ptext10 7A28  
                                            __ptext11 7AAE  
                                            __ptext20 3080  
                                            __ptext12 79B8  
                                            __ptext21 4A9E  
                                            __ptext13 7A14  
                                            __ptext30 780E  
                                            __ptext22 1A30  
                                            __ptext14 7334  
                                            __ptext31 4B6C  
                                            __ptext23 6D3E  
                                            __ptext15 741E  
                                            __ptext40 3392  
                                            __ptext32 3A58  
                                            __ptext24 7798  
                                            __ptext16 6106  
                                            __ptext41 70D2  
                                            __ptext33 367E  
                                            __ptext25 7928  
                                            __ptext17 7A80  
                                            __ptext50 0BC8  
                                            __ptext42 3216  
                                            __ptext34 2CEE  
                                            __ptext26 73AC  
                                            __ptext18 5510  
                                            __ptext51 0020  
                                            __ptext43 4E94  
                                            __ptext35 2938  
                                            __ptext27 666E  
                                            __ptext19 254C  
                                            __ptext60 7530  
                                            __ptext52 7966  
                                            __ptext44 71EE  
                                            __ptext36 0F30  
                                            __ptext28 6D94  
                                            __ptext61 77C0  
                                            __ptext53 64B4  
                                            __ptext45 55B4  
                                            __ptext37 085A  
                                            __ptext29 7834  
                                            __ptext70 7ACE  
                                            __ptext62 6A0E  
                                            __ptext54 76EA  
                                            __ptext46 7230  
                                            __ptext38 687E  
                                            __ptext71 7AD8  
                                            __ptext63 7690  
                                            __ptext55 600C  
                                            __ptext47 6F40  
                                            __ptext39 5F08  
                                            __ptext80 41C8  
                                            __ptext72 3508  
                                            __ptext64 4822  
                                            __ptext56 7272  
                                            __ptext48 7084  
                                            __ptext81 5798  
                                            __ptext73 7456  
                                            __ptext65 56FA  
                                            __ptext57 748E  
                                            __ptext49 1226  
                                            __ptext90 449C  
                                            __ptext82 43BA  
                                            __ptext74 7660  
                                            __ptext66 6B86  
                                            __ptext58 7982  
                                            __ptext91 6EEC  
                                            __ptext83 4742  
                                            __ptext75 71AA  
                                            __ptext67 6FE4  
                                            __ptext59 7ABA  
                                            __ptext92 6DEA  
                                            __ptext84 7716  
                                            __ptext76 78E4  
                                            __ptext68 5D70  
                                            __ptext93 7A90  
                                            __ptext85 53C0  
                                            __ptext77 37D0  
                                            __ptext69 7AC4  
                                            __ptext94 3EBA  
                                            __ptext86 391E  
                                            __ptext78 5314  
                                            __ptext95 7564  
                                            __ptext87 17AC  
                                            __ptext79 5B32  
                                            __ptext96 7370  
                                            __ptext88 5E82  
                                            __ptext97 5A9E  
                                            __ptext89 501C  
                                            __ptext98 6A6E  
                                            __ptext99 3B84  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0012  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 69AC  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 694A  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                             __size_of_bootloader_run 004E  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 5C54  
                   __end_of_failed_line3_addressRange 8CF6  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002D  
                      ExternalFlash_SectorRead@buffer 0033  
                                        api_parse@idx 0059  
                      __size_of__bootloader_find_file 009E  
                  __end_of__flash_copy_page_to_buffer 6D3E  
                          __flash_copy_page_to_buffer 6CE6  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 5510  
                       __end_of__bootloader_find_file 5798  
                        __end_of_i2c_digipot_reset_on 78C2  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 6EEC  
                      __end_of_USBCtrlTrfSetupHandler 5BC4  
                                       __size_of_main 00C8  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F49  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 67AC  
                                         ??__read_fat 0033  
                              __fill_buffer_read_file 2336  
                         __end_of_flash_partial_write 6594  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003C  
                             fat_get_file_size@sector 0036  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 6B2A  
                    __size_of__bootloader_verify_file 02D2  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 7B5C  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 7B56  
                                 _USBCtrlTrfInHandler 4DCC  
                  _MSDProcessCommandMediaPresent$2390 003D  
                    __get_empty_cluster@first_cluster 0031  
                                         ??_api_parse 0057  
                              __end_of__i2c_wait_idle 6C36  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                            _spi_init 7334  
                                _USBCtrlTrfOutHandler 6A6E  
                           _USBCtrlEPAllowStatusStage 4F58  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 7ABA  
                                ?__parse_command_long 0054  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                    ?_flash_page_read 0029  
                                 __display_start@cntr 0001  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 3508  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0035  
                              ??__parse_command_short 0014  
               MSDProcessCommandMediaPresent@capacity 0044  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00B0  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 4742  
                             __parse_file_modify@data 0001  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 77E8  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 77C0  
                             _internalFlash_erasePage 7530  
                                   __write_fat@offset 002F  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                __end_of_MSDComputeDeviceInAndResidue 5970  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 58D4  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 8D99  
                                 __end_of_start_line2 8D88  
                                 __end_of_start_line3 8D0A  
                                 __end_of_start_line4 8E6B  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 79FE  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 7AD8  
                              bootloader_run@timeslot 005E  
                             __end_of_fat_create_file 3080  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0076  
                             __parse_file_rename@data 0044  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5F08  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 5E82  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 74FA  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 6CE6  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 6C8E  
                SYSTEM_Initialize@pll_startup_counter 0001  
                               __update_modified_time 75CA  
                        fat_read_from_file@start_byte 0040  
                                     _display_content 016C  
                          __end_of_flash_partial_read 762E  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 17AC  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 7B62  
                         _bootloader_get_rec_checksum 7B5C  
                             __size_of_MSDReadHandler 01D8  
                                       ??_system_init 0031  
                   __size_of__fill_buffer_get_display 00B4  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 4B6C  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8E29  
                                 _USBCtrlTrfRxService 3B84  
                           __size_of_timer_pseudo_isr 0038  
                                  _USBWakeFromSuspend 7456  
                               ??__parse_command_long 0056  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 7834  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 17AC  
                        __fill_buffer_read_file@start 00F3  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 4C38  
                         fat_delete_file@next_cluster 003B  
                                        ?_api_prepare 00F7  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 008E  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 77E8  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002F  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E55  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 7B0A  
                          _bootloader_get_rec_address 7B00  
                               _USBAlternateInterface 00B8  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 7034  
                          __delete_root@deleted_value 002E  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0094  
                           _failed_line3_noNextRecord 8E38  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 5A08  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00B3  
                                      _display_update 666E  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8D0A  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 457E  
                          fat_read_from_file@position 00E7  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 7834  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 016A  
                             _internalFlash_writePage 600C  
                                ?_USBCtrlTrfTxService 0001  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 3EBA  
                        _USBStatusStageTimeoutCounter 00B1  
                     ??_ExternalFlash_MediaInitialize 0003  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                         __end_of__flash_partial_read 6270  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 72F4  
                                        _verify_line1 8E09  
                                        _verify_line2 8E55  
                                        _verify_line3 8E8A  
                            ??_fat_get_empty_clusters 0033  
                                          _USB_CD_Ptr 8EA5  
                                         _power_state 009F  
                                         _USBInHandle 0088  
                            _APP_DeviceCustomHIDTasks 546A  
